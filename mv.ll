; ModuleID = 'mv.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.timespec = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rm_options = type { i8, i32, i8, i8, i8, %struct.timespec*, i8, i8, i8, i8 }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, %struct.__dirstream*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [0 x i8] }
%struct.__dirstream = type opaque
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.error_context = type { void (%struct.error_context*, i8*, ...)*, i8* (%struct.error_context*, i8*)*, void (%struct.error_context*, i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.20 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32, %struct.__acl_ext*, %struct.__acl_ext*, i8 }
%struct.__acl_ext = type opaque
%struct.__mbstate_t = type { i32, %union.anon.57 }
%union.anon.57 = type { i32 }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.147 }
%union.anon.147 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.cycle_check_state = type { %struct.timespec, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.__acl_entry_ext = type opaque
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [418 x i8] c"      --backup[=CONTROL]       make a backup of each existing destination file\0A  -b                           like --backup but does not accept an argument\0A  -f, --force                  do not prompt before overwriting\0A  -i, --interactive            prompt before overwrite\0A  -n, --no-clobber             do not overwrite an existing file\0AIf you specify more than one of -i, -f, -n, only the final one takes effect.\0A\00", align 1
@.str.4 = private unnamed_addr constant [184 x i8] c"      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A\00", align 1
@.str.5 = private unnamed_addr constant [527 x i8] c"  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory    treat DEST as a normal file\0A  -u, --update                 move only when the SOURCE file is newer\0A                                 than the destination file or when the\0A                                 destination file is missing\0A  -v, --verbose                explain what is being done\0A  -Z, --context                set SELinux security context of destination\0A                                 file to default type\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.39 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.42 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.29 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.28 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"bfint:uvS:TZ\00", align 1
@long_options = internal constant [14 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !63, !ctir !153
@optarg = external dso_local global i8*, align 8, !ctir !9
@remove_trailing_slashes = internal global i8 0, align 1, !dbg !269, !ctir !142
@.str.13 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Mike Parker\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external dso_local global i32, align 4, !ctir !7
@.str.20 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"2 <= n_files\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"src/mv.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"options --backup and --no-clobber are mutually exclusive\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"VALID_STATUS (status)\00", align 1
@__PRETTY_FUNCTION__.do_move = private unnamed_addr constant [69 x i8] c"_Bool do_move(const char *, const char *, const struct cp_options *)\00", align 1
@rm_option_init.dev_ino_buf = internal global %struct.timespec zeroinitializer, align 8, !dbg !271
@.str.60 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"no-clobber\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.63 = private unnamed_addr constant [17 x i8] c"VALID_STATUS (s)\00", align 1
@.str.2.64 = private unnamed_addr constant [13 x i8] c"src/remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [60 x i8] c"enum RM_status rm(char *const *, const struct rm_options *)\00", align 1
@.str.3.65 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.4.66 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.5.67 = private unnamed_addr constant [51 x i8] c"refusing to remove %s or %s directory: skipping %s\00", align 1
@.str.6.68 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7.69 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.8.70 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.9.71 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.10.72 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.11.73 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.12.74 = private unnamed_addr constant [31 x i8] c"failed to stat %s: skipping %s\00", align 1
@.str.13.75 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str.14.76 = private unnamed_addr constant [37 x i8] c"and --preserve-root=all is in effect\00", align 1
@.str.15.77 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.16.78 = private unnamed_addr constant [21 x i8] c"traversal failed: %s\00", align 1
@.str.17.79 = private unnamed_addr constant [56 x i8] c"unexpected failure: fts_info=%d: %s\0Aplease report to %s\00", align 1
@.str.18.80 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.23.81 = private unnamed_addr constant [22 x i8] c"removed directory %s\0A\00", align 1
@.str.24.82 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.19.83 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str.20.84 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str.21.85 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str.22.86 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@.str.87 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.88 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.89 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.90 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.95 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.96 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !289, !ctir !116
@top_level_dst_name = internal global i8* null, align 8, !dbg !470, !ctir !116
@.str.12.97 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.98 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.99 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.100 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.101 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.102 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.103 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.104 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.105 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.107 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.108 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.109 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.110 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.111 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.112 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.113 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.114 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.115 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.116 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.117 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.118 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.119 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.120 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.121 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.122 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.123 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.124 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.125 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.126 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.127 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.128 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.129 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.130 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.131 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.132 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.133 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.134 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.135 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.136 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.137 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !465
@.str.77 = private unnamed_addr constant [17 x i8] c"security.selinux\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.138 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.139 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.140 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !472
@write_zeros.nz = internal global i64 131072, align 8, !dbg !477
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !479
@.str.59.141 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.142 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.143 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.144 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.145 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.146 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.147 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.148 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.149 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.150 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.151 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.152 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.153 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.154 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !481, !ctir !241
@.str.169 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.170 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.171 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !498, !ctir !507
@Version = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), align 8, !dbg !521, !ctir !116
@.str.178 = private unnamed_addr constant [5 x i8] c"8.31\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.182 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.185 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !527, !ctir !116
@.str.192 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.193 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.194 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.195 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.205, i32 0, i32 0), i8* null], align 16, !dbg !558, !ctir !566
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !574, !ctir !564
@.str.2.198 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.199 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.200 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.201 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.202 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.203 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.204 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.205 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.208 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.209 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !577, !ctir !116
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !582
@.str.214 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.215 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.216 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.217 = internal global i8* null, align 8, !dbg !620, !ctir !116
@ignore_EPIPE = internal global i8 0, align 1, !dbg !660, !ctir !142
@.str.220 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.221 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.222 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !663, !ctir !617
@.str.245 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str.1.246 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str.2.247 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.3.248 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str.4.249 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str.5.250 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str.6.251 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str.7.252 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str.8.253 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str.9.254 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.10.255 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.11.256 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str.265 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.266 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.267 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.268 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !670, !ctir !694
@program_name = dso_local global i8* null, align 8, !dbg !725, !ctir !116
@.str.295 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.297 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !9
@program_invocation_name = external dso_local global i8*, align 8, !ctir !9
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.303, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.305, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.306, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.307, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.311, i32 0, i32 0), i8* null], align 16, !dbg !766, !ctir !786
@.str.302 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.303 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.304 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.305 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.306 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.307 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.308 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.309 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.310 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.311 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !829, !ctir !787
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !831, !ctir !790
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !833, !ctir !790
@.str.10.312 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.313 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.314 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.315 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.316 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.317 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.318 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.319 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.320 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !837, !ctir !803
@nslots = internal global i32 1, align 4, !dbg !839, !ctir !7
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !835, !ctir !503
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !841, !ctir !804
@.str.335 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.340 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !843, !ctir !868
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !883, !ctir !891
@.str.2.357 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.358 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.359 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !901
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !945
@utimensat_works_really = internal global i32 0, align 4, !dbg !947, !ctir !7
@lutimensat_works_really = internal global i32 0, align 4, !dbg !967, !ctir !7
@.str.372 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.373 = private unnamed_addr constant [32 x i8] c"unable to display error message\00", align 1
@.str.374 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.375 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.376 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.377 = private unnamed_addr constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.378 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.379 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.380 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.381 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.382 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.383 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.384 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.385 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.386 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.387 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.390 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.391 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.392 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.393 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.394 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.19.395 = private unnamed_addr constant [65 x i8] c"General help using GNU software: <https://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !970, !ctir !312
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !977
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !986
@.str.1.416 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.417 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.420 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.421 = private unnamed_addr constant [11 x i8] c"lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.434 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.435 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.440 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !988, !ctir !568
@.str.453 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.454 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.455 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.456 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.457 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.470 = private unnamed_addr constant [24 x i8] c"state->magic == 9827862\00", align 1
@.str.1.471 = private unnamed_addr constant [18 x i8] c"lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@.str.478 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.479 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.492 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.493 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.504 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.505 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.506 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.507 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1030

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2080 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2083, metadata !DIExpression()), !dbg !2084
  %0 = load i32, i32* %status.addr, align 4, !dbg !2085
  %cmp = icmp ne i32 %0, 0, !dbg !2087
  br i1 %cmp, label %if.then, label %if.else, !dbg !2088

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2089

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2090
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !2090
  %2 = load i8*, i8** @program_name, align 8, !dbg !2090
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2090
  br label %do.end, !dbg !2090

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2090

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !2092
  %3 = load i8*, i8** @program_name, align 8, !dbg !2094
  %4 = load i8*, i8** @program_name, align 8, !dbg !2095
  %5 = load i8*, i8** @program_name, align 8, !dbg !2096
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5), !dbg !2097
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !2098
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2098
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %6), !dbg !2098
  call void @emit_mandatory_arg_note(), !dbg !2099
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([418 x i8], [418 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !2100
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2100
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %7), !dbg !2100
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !2101
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2101
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %8), !dbg !2101
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([527 x i8], [527 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !2102
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2102
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %9), !dbg !2102
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !2103
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2103
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %10), !dbg !2103
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !2104
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2104
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %11), !dbg !2104
  call void @emit_backup_suffix_note(), !dbg !2105
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)), !dbg !2106
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %12 = load i32, i32* %status.addr, align 4, !dbg !2107
  call void @exit(i32 %12) #13, !dbg !2108
  unreachable, !dbg !2108
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !2109 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.28, i64 0, i64 0)) #10, !dbg !2110
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2110
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2110
  ret void, !dbg !2111
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !2112 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !2113
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2113
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2113
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !2114
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2114
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !2114
  ret void, !dbg !2115
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !213 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !209
  %node = alloca i8*, align 8, !ctir !116
  %map_prog = alloca %struct.infomap*, align 8, !ctir !222
  %lc_messages = alloca i8*, align 8, !ctir !116
  store i8* %program, i8** %program.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !2116, metadata !DIExpression()), !dbg !2117
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !2118, metadata !DIExpression()), !dbg !2119
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !2119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !2119
  call void @llvm.dbg.declare(metadata i8** %node, metadata !2120, metadata !DIExpression()), !dbg !2121
  %1 = load i8*, i8** %program.addr, align 8, !dbg !2122
  store i8* %1, i8** %node, align 8, !dbg !2121
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !2123, metadata !DIExpression()), !dbg !2124
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !2125, !ctir !209
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !2124
  br label %while.cond, !dbg !2126

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2127
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !2128, !ctir !210
  %3 = load i8*, i8** %program1, align 8, !dbg !2128, !ctir !116
  %tobool = icmp ne i8* %3, null, !dbg !2127
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2129

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !2130
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2130
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !2130, !ctir !210
  %6 = load i8*, i8** %program2, align 8, !dbg !2130, !ctir !116
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !2130
  %cmp = icmp eq i32 %call, 0, !dbg !2130
  %lnot = xor i1 %cmp, true, !dbg !2131
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2132
  br i1 %7, label %while.body, label %while.end, !dbg !2126

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2133
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !2133, !ctir !210
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !2133
  br label %while.cond, !dbg !2126, !llvm.loop !2134

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2135
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !2137, !ctir !210
  %10 = load i8*, i8** %node3, align 8, !dbg !2137, !ctir !116
  %tobool4 = icmp ne i8* %10, null, !dbg !2135
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2138

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2139
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !2140, !ctir !210
  %12 = load i8*, i8** %node5, align 8, !dbg !2140, !ctir !116
  store i8* %12, i8** %node, align 8, !dbg !2141
  br label %if.end, !dbg !2142

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !2143
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0)), !dbg !2144
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !2145, metadata !DIExpression()), !dbg !2146
  %call8 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !2147
  store i8* %call8, i8** %lc_messages, align 8, !dbg !2146
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !2148
  %tobool9 = icmp ne i8* %13, null, !dbg !2148
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !2150

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !2151
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #14, !dbg !2151
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2151
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !2152

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.42, i64 0, i64 0)) #10, !dbg !2153
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2153
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !2153
  br label %if.end15, !dbg !2155

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !2156
  %16 = load i8*, i8** %program.addr, align 8, !dbg !2157
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0), i8* %16), !dbg !2158
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !2159
  %17 = load i8*, i8** %node, align 8, !dbg !2160
  %18 = load i8*, i8** %node, align 8, !dbg !2161
  %19 = load i8*, i8** %program.addr, align 8, !dbg !2162
  %cmp19 = icmp eq i8* %18, %19, !dbg !2163
  %20 = zext i1 %cmp19 to i64, !dbg !2161
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), !dbg !2161
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !2164
  ret void, !dbg !2165
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !2166 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %c = alloca i32, align 4, !ctir !7
  %ok = alloca i8, align 1, !ctir !142
  %make_backups = alloca i8, align 1, !ctir !142
  %backup_suffix = alloca i8*, align 8, !ctir !116
  %version_control_string = alloca i8*, align 8, !ctir !9
  %x = alloca %struct.cp_options, align 8, !ctir !2169
  %target_directory = alloca i8*, align 8, !ctir !9
  %no_target_directory = alloca i8, align 1, !ctir !142
  %n_files = alloca i32, align 4, !ctir !7
  %file = alloca i8**, align 8, !ctir !143
  %selinux_enabled = alloca i8, align 1, !ctir !142
  %st = alloca %struct.stat, align 8, !ctir !2210
  %i = alloca i32, align 4, !ctir !7
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2231, metadata !DIExpression()), !dbg !2232
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2233, metadata !DIExpression()), !dbg !2234
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2235, metadata !DIExpression()), !dbg !2236
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2237, metadata !DIExpression()), !dbg !2238
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !2239, metadata !DIExpression()), !dbg !2240
  store i8 0, i8* %make_backups, align 1, !dbg !2240
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !2241, metadata !DIExpression()), !dbg !2242
  store i8* null, i8** %backup_suffix, align 8, !dbg !2242
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !2243, metadata !DIExpression()), !dbg !2244
  store i8* null, i8** %version_control_string, align 8, !dbg !2244
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !2245, metadata !DIExpression()), !dbg !2246
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !2247, metadata !DIExpression()), !dbg !2248
  store i8* null, i8** %target_directory, align 8, !dbg !2248
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !2249, metadata !DIExpression()), !dbg !2250
  store i8 0, i8* %no_target_directory, align 1, !dbg !2250
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2251, metadata !DIExpression()), !dbg !2252
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !2253, metadata !DIExpression()), !dbg !2254
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !2255, metadata !DIExpression()), !dbg !2256
  store i8 0, i8* %selinux_enabled, align 1, !dbg !2256
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2257
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2257, !ctir !143
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2257
  call void @set_program_name(i8* %1), !dbg !2258
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !2259
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !2260
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !2261
  %call3 = call i32 @atexit(void ()* @close_stdin) #10, !dbg !2262
  call void @cp_option_init(%struct.cp_options* %x), !dbg !2263
  %call4 = call i32 @priv_set_remove_linkdir(), !dbg !2264
  br label %while.cond, !dbg !2265

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2266
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2267
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), %struct.option* getelementptr inbounds ([14 x %struct.option], [14 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #10, !dbg !2268
  store i32 %call5, i32* %c, align 4, !dbg !2269
  %cmp = icmp ne i32 %call5, -1, !dbg !2270
  br i1 %cmp, label %while.body, label %while.end, !dbg !2265

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %c, align 4, !dbg !2271
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 102, label %sw.bb6
    i32 105, label %sw.bb7
    i32 110, label %sw.bb9
    i32 128, label %sw.bb11
    i32 116, label %sw.bb12
    i32 84, label %sw.bb29
    i32 117, label %sw.bb30
    i32 118, label %sw.bb31
    i32 83, label %sw.bb32
    i32 90, label %sw.bb33
    i32 -130, label %sw.bb37
    i32 -131, label %sw.bb38
  ], !dbg !2273

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2274
  %5 = load i8*, i8** @optarg, align 8, !dbg !2276
  %tobool = icmp ne i8* %5, null, !dbg !2276
  br i1 %tobool, label %if.then, label %if.end, !dbg !2278

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !2279
  store i8* %6, i8** %version_control_string, align 8, !dbg !2280
  br label %if.end, !dbg !2281

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2282

sw.bb6:                                           ; preds = %while.body
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2283, !ctir !2169
  store i32 1, i32* %interactive, align 8, !dbg !2284, !ctir !83
  br label %sw.epilog, !dbg !2285

sw.bb7:                                           ; preds = %while.body
  %interactive8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2286, !ctir !2169
  store i32 3, i32* %interactive8, align 8, !dbg !2287, !ctir !83
  br label %sw.epilog, !dbg !2288

sw.bb9:                                           ; preds = %while.body
  %interactive10 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2289, !ctir !2169
  store i32 2, i32* %interactive10, align 8, !dbg !2290, !ctir !83
  br label %sw.epilog, !dbg !2291

sw.bb11:                                          ; preds = %while.body
  store i8 1, i8* @remove_trailing_slashes, align 1, !dbg !2292
  br label %sw.epilog, !dbg !2293

sw.bb12:                                          ; preds = %while.body
  %7 = load i8*, i8** %target_directory, align 8, !dbg !2294
  %tobool13 = icmp ne i8* %7, null, !dbg !2294
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !2296

if.then14:                                        ; preds = %sw.bb12
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !2297
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call15), !dbg !2297
  unreachable, !dbg !2297

if.else:                                          ; preds = %sw.bb12
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2298, metadata !DIExpression()), !dbg !2300
  %8 = load i8*, i8** @optarg, align 8, !dbg !2301
  %call16 = call i32 @stat(i8* %8, %struct.stat* %st) #10, !dbg !2303
  %cmp17 = icmp ne i32 %call16, 0, !dbg !2304
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !2305

if.then18:                                        ; preds = %if.else
  %call19 = call i32* @__errno_location() #15, !dbg !2306
  %9 = load i32, i32* %call19, align 4, !dbg !2306, !ctir !7
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !2306
  %10 = load i8*, i8** @optarg, align 8, !dbg !2306
  %call21 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !2306
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %9, i8* %call20, i8* %call21), !dbg !2306
  unreachable, !dbg !2306

if.end22:                                         ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2307, !ctir !2210
  %11 = load i32, i32* %st_mode, align 8, !dbg !2307, !ctir !168
  %and = and i32 %11, 61440, !dbg !2307
  %cmp23 = icmp eq i32 %and, 16384, !dbg !2307
  br i1 %cmp23, label %if.end27, label %if.then24, !dbg !2309

if.then24:                                        ; preds = %if.end22
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !2310
  %12 = load i8*, i8** @optarg, align 8, !dbg !2310
  %call26 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !2310
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !2310
  unreachable, !dbg !2310

if.end27:                                         ; preds = %if.end22
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  %13 = load i8*, i8** @optarg, align 8, !dbg !2311
  store i8* %13, i8** %target_directory, align 8, !dbg !2312
  br label %sw.epilog, !dbg !2313

sw.bb29:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !2314
  br label %sw.epilog, !dbg !2315

sw.bb30:                                          ; preds = %while.body
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !2316, !ctir !2169
  store i8 1, i8* %update, align 1, !dbg !2317, !ctir !142
  br label %sw.epilog, !dbg !2318

sw.bb31:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !2319, !ctir !2169
  store i8 1, i8* %verbose, align 2, !dbg !2320, !ctir !142
  br label %sw.epilog, !dbg !2321

sw.bb32:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2322
  %14 = load i8*, i8** @optarg, align 8, !dbg !2323
  store i8* %14, i8** %backup_suffix, align 8, !dbg !2324
  br label %sw.epilog, !dbg !2325

sw.bb33:                                          ; preds = %while.body
  %15 = load i8, i8* %selinux_enabled, align 1, !dbg !2326
  %tobool34 = trunc i8 %15 to i1, !dbg !2326
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !2328

if.then35:                                        ; preds = %sw.bb33
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2329, !ctir !2169
  store i8 0, i8* %preserve_security_context, align 1, !dbg !2331, !ctir !142
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2332, !ctir !2169
  store i8 1, i8* %set_security_context, align 1, !dbg !2333, !ctir !142
  br label %if.end36, !dbg !2334

if.end36:                                         ; preds = %if.then35, %sw.bb33
  br label %sw.epilog, !dbg !2335

sw.bb37:                                          ; preds = %while.body
  call void @usage(i32 0) #16, !dbg !2336
  unreachable, !dbg !2336

sw.bb38:                                          ; preds = %while.body
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2337
  %17 = load i8*, i8** @Version, align 8, !dbg !2337
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8* null), !dbg !2337
  call void @exit(i32 0) #13, !dbg !2337
  unreachable, !dbg !2337

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #16, !dbg !2338
  unreachable, !dbg !2338

sw.epilog:                                        ; preds = %if.end36, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %if.end28, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !2265, !llvm.loop !2339

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* %argc.addr, align 4, !dbg !2341
  %19 = load i32, i32* @optind, align 4, !dbg !2342
  %sub = sub nsw i32 %18, %19, !dbg !2343
  store i32 %sub, i32* %n_files, align 4, !dbg !2344
  %20 = load i8**, i8*** %argv.addr, align 8, !dbg !2345
  %21 = load i32, i32* @optind, align 4, !dbg !2346
  %idx.ext = sext i32 %21 to i64, !dbg !2347
  %add.ptr = getelementptr inbounds i8*, i8** %20, i64 %idx.ext, !dbg !2347, !ctir !9
  store i8** %add.ptr, i8*** %file, align 8, !dbg !2348
  %22 = load i32, i32* %n_files, align 4, !dbg !2349
  %23 = load i8*, i8** %target_directory, align 8, !dbg !2351
  %tobool39 = icmp ne i8* %23, null, !dbg !2352
  %lnot = xor i1 %tobool39, true, !dbg !2352
  %lnot.ext = zext i1 %lnot to i32, !dbg !2352
  %cmp40 = icmp sle i32 %22, %lnot.ext, !dbg !2353
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !2354

if.then41:                                        ; preds = %while.end
  %24 = load i32, i32* %n_files, align 4, !dbg !2355
  %cmp42 = icmp sle i32 %24, 0, !dbg !2358
  br i1 %cmp42, label %if.then43, label %if.else45, !dbg !2359

if.then43:                                        ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !2360
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44), !dbg !2361
  br label %if.end49, !dbg !2361

if.else45:                                        ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !2362
  %25 = load i8**, i8*** %file, align 8, !dbg !2363
  %arrayidx47 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !2363, !ctir !143
  %26 = load i8*, i8** %arrayidx47, align 8, !dbg !2363
  %call48 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !2363
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46, i8* %call48), !dbg !2364
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then43
  call void @usage(i32 1) #16, !dbg !2365
  unreachable, !dbg !2365

if.end50:                                         ; preds = %while.end
  %27 = load i8, i8* %no_target_directory, align 1, !dbg !2366
  %tobool51 = trunc i8 %27 to i1, !dbg !2366
  br i1 %tobool51, label %if.then52, label %if.else63, !dbg !2368

if.then52:                                        ; preds = %if.end50
  %28 = load i8*, i8** %target_directory, align 8, !dbg !2369
  %tobool53 = icmp ne i8* %28, null, !dbg !2369
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !2372

if.then54:                                        ; preds = %if.then52
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !2373
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call55), !dbg !2373
  unreachable, !dbg !2373

if.end56:                                         ; preds = %if.then52
  %29 = load i32, i32* %n_files, align 4, !dbg !2374
  %cmp57 = icmp slt i32 2, %29, !dbg !2376
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !2377

if.then58:                                        ; preds = %if.end56
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !2378
  %30 = load i8**, i8*** %file, align 8, !dbg !2380
  %arrayidx60 = getelementptr inbounds i8*, i8** %30, i64 2, !dbg !2380, !ctir !143
  %31 = load i8*, i8** %arrayidx60, align 8, !dbg !2380
  %call61 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !2380
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call61), !dbg !2381
  call void @usage(i32 1) #16, !dbg !2382
  unreachable, !dbg !2382

if.end62:                                         ; preds = %if.end56
  br label %if.end98, !dbg !2383

if.else63:                                        ; preds = %if.end50
  %32 = load i8*, i8** %target_directory, align 8, !dbg !2384
  %tobool64 = icmp ne i8* %32, null, !dbg !2384
  br i1 %tobool64, label %if.end97, label %if.then65, !dbg !2386

if.then65:                                        ; preds = %if.else63
  %33 = load i32, i32* %n_files, align 4, !dbg !2387
  %cmp66 = icmp sle i32 2, %33, !dbg !2387
  br i1 %cmp66, label %if.then67, label %if.else68, !dbg !2391

if.then67:                                        ; preds = %if.then65
  br label %if.end69, !dbg !2391

if.else68:                                        ; preds = %if.then65
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 457, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !2387
  unreachable, !dbg !2387

if.end69:                                         ; preds = %if.then67
  %34 = load i32, i32* %n_files, align 4, !dbg !2392
  %cmp70 = icmp eq i32 %34, 2, !dbg !2394
  br i1 %cmp70, label %if.then71, label %if.end77, !dbg !2395

if.then71:                                        ; preds = %if.end69
  %35 = load i8**, i8*** %file, align 8, !dbg !2396
  %arrayidx72 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !2396, !ctir !143
  %36 = load i8*, i8** %arrayidx72, align 8, !dbg !2396
  %37 = load i8**, i8*** %file, align 8, !dbg !2397
  %arrayidx73 = getelementptr inbounds i8*, i8** %37, i64 1, !dbg !2397, !ctir !143
  %38 = load i8*, i8** %arrayidx73, align 8, !dbg !2397
  %call74 = call i32 @renameatu(i32 -100, i8* %36, i32 -100, i8* %38, i32 1), !dbg !2398
  %tobool75 = icmp ne i32 %call74, 0, !dbg !2398
  br i1 %tobool75, label %cond.true, label %cond.false, !dbg !2398

cond.true:                                        ; preds = %if.then71
  %call76 = call i32* @__errno_location() #15, !dbg !2399
  %39 = load i32, i32* %call76, align 4, !dbg !2399, !ctir !7
  br label %cond.end, !dbg !2398

cond.false:                                       ; preds = %if.then71
  br label %cond.end, !dbg !2398

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ 0, %cond.false ], !dbg !2398
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !2400, !ctir !2169
  store i32 %cond, i32* %rename_errno, align 4, !dbg !2401, !ctir !7
  br label %if.end77, !dbg !2402

if.end77:                                         ; preds = %cond.end, %if.end69
  %rename_errno78 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !2403, !ctir !2169
  %40 = load i32, i32* %rename_errno78, align 4, !dbg !2403, !ctir !7
  %cmp79 = icmp ne i32 %40, 0, !dbg !2405
  br i1 %cmp79, label %land.lhs.true, label %if.else87, !dbg !2406

land.lhs.true:                                    ; preds = %if.end77
  %41 = load i8**, i8*** %file, align 8, !dbg !2407
  %42 = load i32, i32* %n_files, align 4, !dbg !2408
  %sub80 = sub nsw i32 %42, 1, !dbg !2409
  %idxprom = sext i32 %sub80 to i64, !dbg !2407
  %arrayidx81 = getelementptr inbounds i8*, i8** %41, i64 %idxprom, !dbg !2407, !ctir !143
  %43 = load i8*, i8** %arrayidx81, align 8, !dbg !2407
  %call82 = call zeroext i1 @target_directory_operand(i8* %43), !dbg !2410
  br i1 %call82, label %if.then83, label %if.else87, !dbg !2411

if.then83:                                        ; preds = %land.lhs.true
  %rename_errno84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !2412, !ctir !2169
  store i32 -1, i32* %rename_errno84, align 4, !dbg !2414, !ctir !7
  %44 = load i8**, i8*** %file, align 8, !dbg !2415
  %45 = load i32, i32* %n_files, align 4, !dbg !2416
  %dec = add nsw i32 %45, -1, !dbg !2416
  store i32 %dec, i32* %n_files, align 4, !dbg !2416
  %idxprom85 = sext i32 %dec to i64, !dbg !2415
  %arrayidx86 = getelementptr inbounds i8*, i8** %44, i64 %idxprom85, !dbg !2415, !ctir !143
  %46 = load i8*, i8** %arrayidx86, align 8, !dbg !2415
  store i8* %46, i8** %target_directory, align 8, !dbg !2417
  br label %if.end96, !dbg !2418

if.else87:                                        ; preds = %land.lhs.true, %if.end77
  %47 = load i32, i32* %n_files, align 4, !dbg !2419
  %cmp88 = icmp slt i32 2, %47, !dbg !2421
  br i1 %cmp88, label %if.then89, label %if.end95, !dbg !2422

if.then89:                                        ; preds = %if.else87
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !2423
  %48 = load i8**, i8*** %file, align 8, !dbg !2423
  %49 = load i32, i32* %n_files, align 4, !dbg !2423
  %sub91 = sub nsw i32 %49, 1, !dbg !2423
  %idxprom92 = sext i32 %sub91 to i64, !dbg !2423
  %arrayidx93 = getelementptr inbounds i8*, i8** %48, i64 %idxprom92, !dbg !2423, !ctir !143
  %50 = load i8*, i8** %arrayidx93, align 8, !dbg !2423
  %call94 = call i8* @quotearg_style(i32 4, i8* %50), !dbg !2423
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call90, i8* %call94), !dbg !2423
  unreachable, !dbg !2423

if.end95:                                         ; preds = %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then83
  br label %if.end97, !dbg !2424

if.end97:                                         ; preds = %if.end96, %if.else63
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end62
  %interactive99 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2425, !ctir !2169
  %51 = load i32, i32* %interactive99, align 8, !dbg !2425, !ctir !83
  %cmp100 = icmp eq i32 %51, 2, !dbg !2427
  br i1 %cmp100, label %if.then101, label %if.end103, !dbg !2428

if.then101:                                       ; preds = %if.end98
  %update102 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !2429, !ctir !2169
  store i8 0, i8* %update102, align 1, !dbg !2430, !ctir !142
  br label %if.end103, !dbg !2431

if.end103:                                        ; preds = %if.then101, %if.end98
  %52 = load i8, i8* %make_backups, align 1, !dbg !2432
  %tobool104 = trunc i8 %52 to i1, !dbg !2432
  br i1 %tobool104, label %land.lhs.true105, label %if.end110, !dbg !2434

land.lhs.true105:                                 ; preds = %if.end103
  %interactive106 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !2435, !ctir !2169
  %53 = load i32, i32* %interactive106, align 8, !dbg !2435, !ctir !83
  %cmp107 = icmp eq i32 %53, 2, !dbg !2436
  br i1 %cmp107, label %if.then108, label %if.end110, !dbg !2437

if.then108:                                       ; preds = %land.lhs.true105
  %call109 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !2438
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call109), !dbg !2440
  call void @usage(i32 1) #16, !dbg !2441
  unreachable, !dbg !2441

if.end110:                                        ; preds = %land.lhs.true105, %if.end103
  %54 = load i8, i8* %make_backups, align 1, !dbg !2442
  %tobool111 = trunc i8 %54 to i1, !dbg !2442
  br i1 %tobool111, label %cond.true112, label %cond.false115, !dbg !2442

cond.true112:                                     ; preds = %if.end110
  %call113 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #10, !dbg !2443
  %55 = load i8*, i8** %version_control_string, align 8, !dbg !2444
  %call114 = call i32 @xget_version(i8* %call113, i8* %55), !dbg !2445
  br label %cond.end116, !dbg !2442

cond.false115:                                    ; preds = %if.end110
  br label %cond.end116, !dbg !2442

cond.end116:                                      ; preds = %cond.false115, %cond.true112
  %cond117 = phi i32 [ %call114, %cond.true112 ], [ 0, %cond.false115 ], !dbg !2442
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !2446, !ctir !2169
  store i32 %cond117, i32* %backup_type, align 8, !dbg !2447, !ctir !68
  %56 = load i8*, i8** %backup_suffix, align 8, !dbg !2448
  call void @set_simple_backup_suffix(i8* %56), !dbg !2449
  call void @hash_init(), !dbg !2450
  %57 = load i8*, i8** %target_directory, align 8, !dbg !2451
  %tobool118 = icmp ne i8* %57, null, !dbg !2451
  br i1 %tobool118, label %if.then119, label %if.else133, !dbg !2453

if.then119:                                       ; preds = %cond.end116
  %58 = load i32, i32* %n_files, align 4, !dbg !2454
  %cmp120 = icmp sle i32 2, %58, !dbg !2457
  br i1 %cmp120, label %if.then121, label %if.end122, !dbg !2458

if.then121:                                       ; preds = %if.then119
  call void @dest_info_init(%struct.cp_options* %x), !dbg !2459
  br label %if.end122, !dbg !2459

if.end122:                                        ; preds = %if.then121, %if.then119
  store i8 1, i8* %ok, align 1, !dbg !2460
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2461, metadata !DIExpression()), !dbg !2463
  store i32 0, i32* %i, align 4, !dbg !2463
  br label %for.cond, !dbg !2464

for.cond:                                         ; preds = %for.inc, %if.end122
  %59 = load i32, i32* %i, align 4, !dbg !2465
  %60 = load i32, i32* %n_files, align 4, !dbg !2467
  %cmp123 = icmp slt i32 %59, %60, !dbg !2468
  br i1 %cmp123, label %for.body, label %for.end, !dbg !2469

for.body:                                         ; preds = %for.cond
  %61 = load i32, i32* %i, align 4, !dbg !2470
  %add = add nsw i32 %61, 1, !dbg !2472
  %62 = load i32, i32* %n_files, align 4, !dbg !2473
  %cmp124 = icmp eq i32 %add, %62, !dbg !2474
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !2475, !ctir !2169
  %frombool = zext i1 %cmp124 to i8, !dbg !2476
  store i8 %frombool, i8* %last_file, align 1, !dbg !2476, !ctir !142
  %63 = load i8**, i8*** %file, align 8, !dbg !2477
  %64 = load i32, i32* %i, align 4, !dbg !2478
  %idxprom125 = sext i32 %64 to i64, !dbg !2477
  %arrayidx126 = getelementptr inbounds i8*, i8** %63, i64 %idxprom125, !dbg !2477, !ctir !143
  %65 = load i8*, i8** %arrayidx126, align 8, !dbg !2477
  %66 = load i8*, i8** %target_directory, align 8, !dbg !2479
  %call127 = call zeroext i1 @movefile(i8* %65, i8* %66, i1 zeroext true, %struct.cp_options* %x), !dbg !2480
  %conv = zext i1 %call127 to i32, !dbg !2480
  %67 = load i8, i8* %ok, align 1, !dbg !2481
  %tobool128 = trunc i8 %67 to i1, !dbg !2481
  %conv129 = zext i1 %tobool128 to i32, !dbg !2481
  %and130 = and i32 %conv129, %conv, !dbg !2481
  %tobool131 = icmp ne i32 %and130, 0, !dbg !2481
  %frombool132 = zext i1 %tobool131 to i8, !dbg !2481
  store i8 %frombool132, i8* %ok, align 1, !dbg !2481
  br label %for.inc, !dbg !2482

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !dbg !2483
  %inc = add nsw i32 %68, 1, !dbg !2483
  store i32 %inc, i32* %i, align 4, !dbg !2483
  br label %for.cond, !dbg !2484, !llvm.loop !2485

for.end:                                          ; preds = %for.cond
  br label %if.end139, !dbg !2487

if.else133:                                       ; preds = %cond.end116
  %last_file134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !2488, !ctir !2169
  store i8 1, i8* %last_file134, align 1, !dbg !2490, !ctir !142
  %69 = load i8**, i8*** %file, align 8, !dbg !2491
  %arrayidx135 = getelementptr inbounds i8*, i8** %69, i64 0, !dbg !2491, !ctir !143
  %70 = load i8*, i8** %arrayidx135, align 8, !dbg !2491
  %71 = load i8**, i8*** %file, align 8, !dbg !2492
  %arrayidx136 = getelementptr inbounds i8*, i8** %71, i64 1, !dbg !2492, !ctir !143
  %72 = load i8*, i8** %arrayidx136, align 8, !dbg !2492
  %call137 = call zeroext i1 @movefile(i8* %70, i8* %72, i1 zeroext false, %struct.cp_options* %x), !dbg !2493
  %frombool138 = zext i1 %call137 to i8, !dbg !2494
  store i8 %frombool138, i8* %ok, align 1, !dbg !2494
  br label %if.end139

if.end139:                                        ; preds = %if.else133, %for.end
  %73 = load i8, i8* %ok, align 1, !dbg !2495
  %tobool140 = trunc i8 %73 to i1, !dbg !2495
  %74 = zext i1 %tobool140 to i64, !dbg !2495
  %cond142 = select i1 %tobool140, i32 0, i32 1, !dbg !2495
  ret i32 %cond142, !dbg !2496
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !2497 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %selinux_enabled = alloca i8, align 1, !ctir !142
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2501, metadata !DIExpression()), !dbg !2502
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !2503, metadata !DIExpression()), !dbg !2504
  store i8 0, i8* %selinux_enabled, align 1, !dbg !2504
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2505
  call void @cp_options_default(%struct.cp_options* %0), !dbg !2506
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2507
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !2508, !ctir !2169
  store i8 0, i8* %copy_as_regular, align 4, !dbg !2509, !ctir !142
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2510
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !2511, !ctir !2169
  store i32 1, i32* %reflink_mode, align 8, !dbg !2512, !ctir !95
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2513
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !2514, !ctir !2169
  store i32 2, i32* %dereference, align 4, !dbg !2515, !ctir !76
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2516
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !2517, !ctir !2169
  store i8 0, i8* %unlink_dest_before_opening, align 1, !dbg !2518, !ctir !142
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2519
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !2520, !ctir !2169
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !2521, !ctir !142
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2522
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !2523, !ctir !2169
  store i8 0, i8* %hard_link, align 1, !dbg !2524, !ctir !142
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2525
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !2526, !ctir !2169
  store i32 4, i32* %interactive, align 8, !dbg !2527, !ctir !83
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2528
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !2529, !ctir !2169
  store i8 1, i8* %move_mode, align 8, !dbg !2530, !ctir !142
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2531
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !2532, !ctir !2169
  store i8 0, i8* %install_mode, align 1, !dbg !2533, !ctir !142
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2534
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !2535, !ctir !2169
  store i8 0, i8* %one_file_system, align 4, !dbg !2536, !ctir !142
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2537
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !2538, !ctir !2169
  store i8 1, i8* %preserve_ownership, align 1, !dbg !2539, !ctir !142
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2540
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !2541, !ctir !2169
  store i8 1, i8* %preserve_links, align 2, !dbg !2542, !ctir !142
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2543
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !2544, !ctir !2169
  store i8 1, i8* %preserve_mode, align 2, !dbg !2545, !ctir !142
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2546
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !2547, !ctir !2169
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !2548, !ctir !142
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2549
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !2550, !ctir !2169
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !2551, !ctir !142
  %16 = load i8, i8* %selinux_enabled, align 1, !dbg !2552
  %tobool = trunc i8 %16 to i1, !dbg !2552
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2553
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 22, !dbg !2554, !ctir !2169
  %frombool = zext i1 %tobool to i8, !dbg !2555
  store i8 %frombool, i8* %preserve_security_context, align 1, !dbg !2555, !ctir !142
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2556
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 18, !dbg !2557, !ctir !2169
  store i8 0, i8* %set_security_context, align 1, !dbg !2558, !ctir !142
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2559
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 26, !dbg !2560, !ctir !2169
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !2561, !ctir !142
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2562
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 20, !dbg !2563, !ctir !2169
  store i8 1, i8* %data_copy_required, align 1, !dbg !2564, !ctir !142
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2565
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 21, !dbg !2566, !ctir !2169
  store i8 0, i8* %require_preserve, align 4, !dbg !2567, !ctir !142
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2568
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 23, !dbg !2569, !ctir !2169
  store i8 0, i8* %require_preserve_context, align 2, !dbg !2570, !ctir !142
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2571
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 24, !dbg !2572, !ctir !2169
  store i8 1, i8* %preserve_xattr, align 1, !dbg !2573, !ctir !142
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2574
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 25, !dbg !2575, !ctir !2169
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !2576, !ctir !142
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2577
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 27, !dbg !2578, !ctir !2169
  store i8 1, i8* %recursive, align 2, !dbg !2579, !ctir !142
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2580
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !2581, !ctir !2169
  store i32 2, i32* %sparse_mode, align 4, !dbg !2582, !ctir !89
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2583
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 29, !dbg !2584, !ctir !2169
  store i8 0, i8* %symbolic_link, align 4, !dbg !2585, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2586
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 28, !dbg !2587, !ctir !2169
  store i8 0, i8* %set_mode, align 1, !dbg !2588, !ctir !142
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2589
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 4, !dbg !2590, !ctir !2169
  store i32 0, i32* %mode, align 8, !dbg !2591, !ctir !239
  %call = call i32 @isatty(i32 0) #10, !dbg !2592
  %tobool1 = icmp ne i32 %call, 0, !dbg !2592
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2593
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 32, !dbg !2594, !ctir !2169
  %frombool2 = zext i1 %tobool1 to i8, !dbg !2595
  store i8 %frombool2, i8* %stdin_tty, align 1, !dbg !2595, !ctir !142
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2596
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 33, !dbg !2597, !ctir !2169
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !2598, !ctir !142
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2599
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 30, !dbg !2600, !ctir !2169
  store i8 0, i8* %update, align 1, !dbg !2601, !ctir !142
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2602
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !2603, !ctir !2169
  store i8 0, i8* %verbose, align 2, !dbg !2604, !ctir !142
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2605
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !2606, !ctir !2169
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !2607, !ctir !241
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2608
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !2609, !ctir !2169
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !2610, !ctir !241
  ret void, !dbg !2611
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !2612 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !2210
  %err = alloca i32, align 4, !ctir !7
  %is_a_dir = alloca i8, align 1, !ctir !142
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !2615, metadata !DIExpression()), !dbg !2616
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2617, metadata !DIExpression()), !dbg !2618
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2619, metadata !DIExpression()), !dbg !2620
  %0 = load i8*, i8** %file.addr, align 8, !dbg !2621
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #10, !dbg !2622
  %cmp = icmp eq i32 %call, 0, !dbg !2623
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2622

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !2622

cond.false:                                       ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !2624
  %1 = load i32, i32* %call1, align 4, !dbg !2624, !ctir !7
  br label %cond.end, !dbg !2622

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %1, %cond.false ], !dbg !2622
  store i32 %cond, i32* %err, align 4, !dbg !2620
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !2625, metadata !DIExpression()), !dbg !2626
  %2 = load i32, i32* %err, align 4, !dbg !2627
  %tobool = icmp ne i32 %2, 0, !dbg !2627
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !2628

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2629, !ctir !2210
  %3 = load i32, i32* %st_mode, align 8, !dbg !2629, !ctir !168
  %and = and i32 %3, 61440, !dbg !2629
  %cmp2 = icmp eq i32 %and, 16384, !dbg !2629
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %4 = phi i1 [ false, %cond.end ], [ %cmp2, %land.rhs ], !dbg !2630
  %frombool = zext i1 %4 to i8, !dbg !2626
  store i8 %frombool, i8* %is_a_dir, align 1, !dbg !2626
  %5 = load i32, i32* %err, align 4, !dbg !2631
  %tobool3 = icmp ne i32 %5, 0, !dbg !2631
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !2633

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %err, align 4, !dbg !2634
  %cmp4 = icmp ne i32 %6, 2, !dbg !2635
  br i1 %cmp4, label %if.then, label %if.end, !dbg !2636

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %err, align 4, !dbg !2637
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !2637
  %8 = load i8*, i8** %file.addr, align 8, !dbg !2637
  %call6 = call i8* @quotearg_style(i32 4, i8* %8), !dbg !2637
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %7, i8* %call5, i8* %call6), !dbg !2637
  unreachable, !dbg !2637

if.end:                                           ; preds = %land.lhs.true, %land.end
  %9 = load i8, i8* %is_a_dir, align 1, !dbg !2638
  %tobool7 = trunc i8 %9 to i1, !dbg !2638
  ret i1 %tobool7, !dbg !2639
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @movefile(i8* %source, i8* %dest, i1 zeroext %dest_is_dir, %struct.cp_options* %x) #4 !dbg !2640 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %ok = alloca i8, align 1, !ctir !142
  %src_basename = alloca i8*, align 8, !ctir !116
  %new_dest = alloca i8*, align 8, !ctir !9
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !2645, metadata !DIExpression()), !dbg !2646
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !2647, metadata !DIExpression()), !dbg !2648
  %frombool = zext i1 %dest_is_dir to i8
  store i8 %frombool, i8* %dest_is_dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dest_is_dir.addr, metadata !2649, metadata !DIExpression()), !dbg !2650
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2651, metadata !DIExpression()), !dbg !2652
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2653, metadata !DIExpression()), !dbg !2654
  %0 = load i8, i8* @remove_trailing_slashes, align 1, !dbg !2655
  %tobool = trunc i8 %0 to i1, !dbg !2655
  br i1 %tobool, label %if.then, label %if.end, !dbg !2657

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %source.addr, align 8, !dbg !2658
  %call = call zeroext i1 @strip_trailing_slashes(i8* %1), !dbg !2659
  br label %if.end, !dbg !2659

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* %dest_is_dir.addr, align 1, !dbg !2660
  %tobool1 = trunc i8 %2 to i1, !dbg !2660
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !2662

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %src_basename, metadata !2663, metadata !DIExpression()), !dbg !2665
  %3 = load i8*, i8** %source.addr, align 8, !dbg !2666
  %call3 = call i8* @last_component(i8* %3) #14, !dbg !2667
  store i8* %call3, i8** %src_basename, align 8, !dbg !2665
  call void @llvm.dbg.declare(metadata i8** %new_dest, metadata !2668, metadata !DIExpression()), !dbg !2669
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !2670
  %5 = load i8*, i8** %src_basename, align 8, !dbg !2671
  %call4 = call i8* @file_name_concat(i8* %4, i8* %5, i8** null), !dbg !2672
  store i8* %call4, i8** %new_dest, align 8, !dbg !2669
  %6 = load i8*, i8** %new_dest, align 8, !dbg !2673
  %call5 = call zeroext i1 @strip_trailing_slashes(i8* %6), !dbg !2674
  %7 = load i8*, i8** %source.addr, align 8, !dbg !2675
  %8 = load i8*, i8** %new_dest, align 8, !dbg !2676
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2677
  %call6 = call zeroext i1 @do_move(i8* %7, i8* %8, %struct.cp_options* %9), !dbg !2678
  %frombool7 = zext i1 %call6 to i8, !dbg !2679
  store i8 %frombool7, i8* %ok, align 1, !dbg !2679
  %10 = load i8*, i8** %new_dest, align 8, !dbg !2680
  call void @free(i8* %10) #10, !dbg !2681
  br label %if.end10, !dbg !2682

if.else:                                          ; preds = %if.end
  %11 = load i8*, i8** %source.addr, align 8, !dbg !2683
  %12 = load i8*, i8** %dest.addr, align 8, !dbg !2685
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2686
  %call8 = call zeroext i1 @do_move(i8* %11, i8* %12, %struct.cp_options* %13), !dbg !2687
  %frombool9 = zext i1 %call8 to i8, !dbg !2688
  store i8 %frombool9, i8* %ok, align 1, !dbg !2688
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then2
  %14 = load i8, i8* %ok, align 1, !dbg !2689
  %tobool11 = trunc i8 %14 to i1, !dbg !2689
  ret i1 %tobool11, !dbg !2690
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @do_move(i8* %source, i8* %dest, %struct.cp_options* %x) #4 !dbg !2691 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !142
  %rename_succeeded = alloca i8, align 1, !ctir !142
  %ok = alloca i8, align 1, !ctir !142
  %dir_to_remove = alloca i8*, align 8, !ctir !116
  %rm_options = alloca %struct.rm_options, align 8, !ctir !277
  %status = alloca i32, align 4, !ctir !106
  %dir = alloca [2 x i8*], align 16, !ctir !245
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !2694, metadata !DIExpression()), !dbg !2695
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !2696, metadata !DIExpression()), !dbg !2697
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !2698, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !2700, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.declare(metadata i8* %rename_succeeded, metadata !2702, metadata !DIExpression()), !dbg !2703
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !2704, metadata !DIExpression()), !dbg !2705
  %0 = load i8*, i8** %source.addr, align 8, !dbg !2706
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !2707
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2708
  %call = call zeroext i1 @copy(i8* %0, i8* %1, i1 zeroext false, %struct.cp_options* %2, i8* %copy_into_self, i8* %rename_succeeded), !dbg !2709
  %frombool = zext i1 %call to i8, !dbg !2705
  store i8 %frombool, i8* %ok, align 1, !dbg !2705
  %3 = load i8, i8* %ok, align 1, !dbg !2710
  %tobool = trunc i8 %3 to i1, !dbg !2710
  br i1 %tobool, label %if.then, label %if.end24, !dbg !2712

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %dir_to_remove, metadata !2713, metadata !DIExpression()), !dbg !2715
  %4 = load i8, i8* %copy_into_self, align 1, !dbg !2716
  %tobool1 = trunc i8 %4 to i1, !dbg !2716
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !2718

if.then2:                                         ; preds = %if.then
  store i8* null, i8** %dir_to_remove, align 8, !dbg !2719
  store i8 0, i8* %ok, align 1, !dbg !2721
  br label %if.end6, !dbg !2722

if.else:                                          ; preds = %if.then
  %5 = load i8, i8* %rename_succeeded, align 1, !dbg !2723
  %tobool3 = trunc i8 %5 to i1, !dbg !2723
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !2725

if.then4:                                         ; preds = %if.else
  store i8* null, i8** %dir_to_remove, align 8, !dbg !2726
  br label %if.end, !dbg !2728

if.else5:                                         ; preds = %if.else
  %6 = load i8*, i8** %source.addr, align 8, !dbg !2729
  store i8* %6, i8** %dir_to_remove, align 8, !dbg !2731
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  %7 = load i8*, i8** %dir_to_remove, align 8, !dbg !2732
  %cmp = icmp ne i8* %7, null, !dbg !2734
  br i1 %cmp, label %if.then7, label %if.end23, !dbg !2735

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.rm_options* %rm_options, metadata !2736, metadata !DIExpression()), !dbg !2738
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2739, metadata !DIExpression()), !dbg !2740
  call void @llvm.dbg.declare(metadata [2 x i8*]* %dir, metadata !2741, metadata !DIExpression()), !dbg !2742
  call void @rm_option_init(%struct.rm_options* %rm_options), !dbg !2743
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !2744
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 31, !dbg !2745, !ctir !2644
  %9 = load i8, i8* %verbose, align 2, !dbg !2745
  %tobool8 = trunc i8 %9 to i1, !dbg !2745, !ctir !142
  %verbose9 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %rm_options, i32 0, i32 8, !dbg !2746, !ctir !277
  %frombool10 = zext i1 %tobool8 to i8, !dbg !2747
  store i8 %frombool10, i8* %verbose9, align 2, !dbg !2747, !ctir !142
  %10 = load i8*, i8** %dir_to_remove, align 8, !dbg !2748
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !2749, !ctir !245
  store i8* %10, i8** %arrayidx, align 16, !dbg !2750
  %arrayidx11 = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 1, !dbg !2751, !ctir !245
  store i8* null, i8** %arrayidx11, align 8, !dbg !2752
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !2753, !ctir !245
  %11 = bitcast i8** %arraydecay to i8*, !dbg !2754
  %12 = bitcast i8* %11 to i8**, !dbg !2754
  %call12 = call i32 @rm(i8** %12, %struct.rm_options* %rm_options), !dbg !2755
  store i32 %call12, i32* %status, align 4, !dbg !2756
  %13 = load i32, i32* %status, align 4, !dbg !2757
  %cmp13 = icmp eq i32 %13, 2, !dbg !2757
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !2757

lor.lhs.false:                                    ; preds = %if.then7
  %14 = load i32, i32* %status, align 4, !dbg !2757
  %cmp14 = icmp eq i32 %14, 3, !dbg !2757
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !2757

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %15 = load i32, i32* %status, align 4, !dbg !2757
  %cmp16 = icmp eq i32 %15, 4, !dbg !2757
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !2760

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.then7
  br label %if.end19, !dbg !2760

if.else18:                                        ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.do_move, i64 0, i64 0)) #13, !dbg !2757
  unreachable, !dbg !2757

if.end19:                                         ; preds = %if.then17
  %16 = load i32, i32* %status, align 4, !dbg !2761
  %cmp20 = icmp eq i32 %16, 4, !dbg !2763
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !2764

if.then21:                                        ; preds = %if.end19
  store i8 0, i8* %ok, align 1, !dbg !2765
  br label %if.end22, !dbg !2766

if.end22:                                         ; preds = %if.then21, %if.end19
  br label %if.end23, !dbg !2767

if.end23:                                         ; preds = %if.end22, %if.end6
  br label %if.end24, !dbg !2768

if.end24:                                         ; preds = %if.end23, %entry
  %17 = load i8, i8* %ok, align 1, !dbg !2769
  %tobool25 = trunc i8 %17 to i1, !dbg !2769
  ret i1 %tobool25, !dbg !2770
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rm_option_init(%struct.rm_options* %x) #4 !dbg !273 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !2771, metadata !DIExpression()), !dbg !2772
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2773
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !2774, !ctir !277
  store i8 0, i8* %ignore_missing_files, align 8, !dbg !2775, !ctir !142
  %1 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2776
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %1, i32 0, i32 4, !dbg !2777, !ctir !277
  store i8 1, i8* %remove_empty_directories, align 2, !dbg !2778, !ctir !142
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2779
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !2780, !ctir !277
  store i8 1, i8* %recursive, align 1, !dbg !2781, !ctir !142
  %3 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2782
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %3, i32 0, i32 2, !dbg !2783, !ctir !277
  store i8 0, i8* %one_file_system, align 8, !dbg !2784, !ctir !142
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2785
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 1, !dbg !2786, !ctir !277
  store i32 5, i32* %interactive, align 4, !dbg !2787, !ctir !100
  %5 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2788
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %5, i32 0, i32 7, !dbg !2789, !ctir !277
  store i8 0, i8* %stdin_tty, align 1, !dbg !2790, !ctir !142
  %6 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2791
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %6, i32 0, i32 8, !dbg !2792, !ctir !277
  store i8 0, i8* %verbose, align 2, !dbg !2793, !ctir !142
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2794
  %require_restore_cwd = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 9, !dbg !2795, !ctir !277
  store i8 1, i8* %require_restore_cwd, align 1, !dbg !2796, !ctir !142
  %call = call %struct.timespec* @get_root_dev_ino(%struct.timespec* @rm_option_init.dev_ino_buf), !dbg !2797
  %8 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2799
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %8, i32 0, i32 5, !dbg !2800, !ctir !277
  store %struct.timespec* %call, %struct.timespec** %root_dev_ino, align 8, !dbg !2801, !ctir !254
  %9 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2802
  %root_dev_ino1 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %9, i32 0, i32 5, !dbg !2804, !ctir !277
  %10 = load %struct.timespec*, %struct.timespec** %root_dev_ino1, align 8, !dbg !2804, !ctir !254
  %cmp = icmp eq %struct.timespec* %10, null, !dbg !2805
  br i1 %cmp, label %if.then, label %if.end, !dbg !2806

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #15, !dbg !2807
  %11 = load i32, i32* %call2, align 4, !dbg !2807, !ctir !7
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !2807
  %call4 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !2807
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call3, i8* %call4), !dbg !2807
  unreachable, !dbg !2807

if.end:                                           ; preds = %entry
  %12 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2808
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %12, i32 0, i32 6, !dbg !2809, !ctir !277
  store i8 0, i8* %preserve_all_root, align 8, !dbg !2810, !ctir !142
  ret void, !dbg !2811
}

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rm(i8** %file, %struct.rm_options* %x) #4 !dbg !2812 {
entry:
  %file.addr = alloca i8**, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %rm_status = alloca i32, align 4, !ctir !106
  %bit_flags = alloca i32, align 4, !ctir !7
  %fts = alloca %struct.FTS*, align 8, !ctir !1063
  %ent = alloca %struct._ftsent*, align 8, !ctir !1156
  %s = alloca i32, align 4, !ctir !106
  store i8** %file, i8*** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !2830, metadata !DIExpression()), !dbg !2831
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !2832, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata i32* %rm_status, metadata !2834, metadata !DIExpression()), !dbg !2835
  store i32 2, i32* %rm_status, align 4, !dbg !2835
  %0 = load i8**, i8*** %file.addr, align 8, !dbg !2836
  %1 = load i8*, i8** %0, align 8, !dbg !2838, !ctir !1062
  %tobool = icmp ne i8* %1, null, !dbg !2838
  br i1 %tobool, label %if.then, label %if.end31, !dbg !2839

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bit_flags, metadata !2840, metadata !DIExpression()), !dbg !2842
  store i32 536, i32* %bit_flags, align 4, !dbg !2842
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2843
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 2, !dbg !2845, !ctir !2817
  %3 = load i8, i8* %one_file_system, align 8, !dbg !2845
  %tobool1 = trunc i8 %3 to i1, !dbg !2845, !ctir !142
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2846

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %bit_flags, align 4, !dbg !2847
  %or = or i32 %4, 64, !dbg !2847
  store i32 %or, i32* %bit_flags, align 4, !dbg !2847
  br label %if.end, !dbg !2848

if.end:                                           ; preds = %if.then2, %if.then
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !2849, metadata !DIExpression()), !dbg !2850
  %5 = load i8**, i8*** %file.addr, align 8, !dbg !2851
  %6 = load i32, i32* %bit_flags, align 4, !dbg !2852
  %call = call %struct.FTS* @xfts_open(i8** %5, i32 %6, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !2853
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !2850
  br label %while.body, !dbg !2854

while.body:                                       ; preds = %if.end, %do.end
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent, metadata !2855, metadata !DIExpression()), !dbg !2857
  %7 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !2858
  %call3 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %7), !dbg !2859
  store %struct._ftsent* %call3, %struct._ftsent** %ent, align 8, !dbg !2860
  %8 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !2861
  %cmp = icmp eq %struct._ftsent* %8, null, !dbg !2863
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !2864

if.then4:                                         ; preds = %while.body
  %call5 = call i32* @__errno_location() #15, !dbg !2865
  %9 = load i32, i32* %call5, align 4, !dbg !2865, !ctir !7
  %cmp6 = icmp ne i32 %9, 0, !dbg !2868
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !2869

if.then7:                                         ; preds = %if.then4
  %call8 = call i32* @__errno_location() #15, !dbg !2870
  %10 = load i32, i32* %call8, align 4, !dbg !2870, !ctir !7
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !2872
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call9), !dbg !2873
  store i32 4, i32* %rm_status, align 4, !dbg !2874
  br label %if.end10, !dbg !2875

if.end10:                                         ; preds = %if.then7, %if.then4
  br label %while.end, !dbg !2876

if.end11:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %s, metadata !2877, metadata !DIExpression()), !dbg !2878
  %11 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !2879
  %12 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !2880
  %13 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2881
  %call12 = call i32 @rm_fts(%struct.FTS* %11, %struct._ftsent* %12, %struct.rm_options* %13), !dbg !2882
  store i32 %call12, i32* %s, align 4, !dbg !2878
  %14 = load i32, i32* %s, align 4, !dbg !2883
  %cmp13 = icmp eq i32 %14, 2, !dbg !2883
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !2883

lor.lhs.false:                                    ; preds = %if.end11
  %15 = load i32, i32* %s, align 4, !dbg !2883
  %cmp14 = icmp eq i32 %15, 3, !dbg !2883
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !2883

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %16 = load i32, i32* %s, align 4, !dbg !2883
  %cmp16 = icmp eq i32 %16, 4, !dbg !2883
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !2886

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.end11
  br label %if.end18, !dbg !2886

if.else:                                          ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.63, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.64, i64 0, i64 0), i32 609, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.rm, i64 0, i64 0)) #13, !dbg !2883
  unreachable, !dbg !2883

if.end18:                                         ; preds = %if.then17
  br label %do.body, !dbg !2887

do.body:                                          ; preds = %if.end18
  %17 = load i32, i32* %s, align 4, !dbg !2888
  %cmp19 = icmp eq i32 %17, 4, !dbg !2888
  br i1 %cmp19, label %if.then23, label %lor.lhs.false20, !dbg !2888

lor.lhs.false20:                                  ; preds = %do.body
  %18 = load i32, i32* %s, align 4, !dbg !2888
  %cmp21 = icmp eq i32 %18, 3, !dbg !2888
  br i1 %cmp21, label %land.lhs.true, label %if.end24, !dbg !2888

land.lhs.true:                                    ; preds = %lor.lhs.false20
  %19 = load i32, i32* %rm_status, align 4, !dbg !2888
  %cmp22 = icmp eq i32 %19, 2, !dbg !2888
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !2891

if.then23:                                        ; preds = %land.lhs.true, %do.body
  %20 = load i32, i32* %s, align 4, !dbg !2888
  store i32 %20, i32* %rm_status, align 4, !dbg !2888
  br label %if.end24, !dbg !2888

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %lor.lhs.false20
  br label %do.end, !dbg !2891

do.end:                                           ; preds = %if.end24
  br label %while.body, !dbg !2854, !llvm.loop !2892

while.end:                                        ; preds = %if.end10
  %21 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !2894
  %call25 = call i32 @rpl_fts_close(%struct.FTS* %21), !dbg !2896
  %cmp26 = icmp ne i32 %call25, 0, !dbg !2897
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !2898

if.then27:                                        ; preds = %while.end
  %call28 = call i32* @__errno_location() #15, !dbg !2899
  %22 = load i32, i32* %call28, align 4, !dbg !2899, !ctir !7
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.65, i64 0, i64 0)) #10, !dbg !2901
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %22, i8* %call29), !dbg !2902
  store i32 4, i32* %rm_status, align 4, !dbg !2903
  br label %if.end30, !dbg !2904

if.end30:                                         ; preds = %if.then27, %while.end
  br label %if.end31, !dbg !2905

if.end31:                                         ; preds = %if.end30, %entry
  %23 = load i32, i32* %rm_status, align 4, !dbg !2906
  ret i32 %23, !dbg !2907
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rm_fts(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x) #4 !dbg !2908 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %err = alloca i32, align 4, !ctir !7
  %failed = alloca i8, align 1, !ctir !142
  %parent = alloca i8*, align 8, !ctir !9
  %statbuf = alloca %struct.stat, align 8, !ctir !1093
  %is_empty_directory = alloca i32, align 4, !ctir !1170
  %s = alloca i32, align 4, !ctir !106
  %is_dir = alloca i8, align 1, !ctir !142
  %s126 = alloca i32, align 4, !ctir !106
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !2911, metadata !DIExpression()), !dbg !2912
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !2913, metadata !DIExpression()), !dbg !2914
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !2915, metadata !DIExpression()), !dbg !2916
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2917
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !2918, !ctir !1157
  %1 = load i16, i16* %fts_info, align 8, !dbg !2918, !ctir !33
  %conv = zext i16 %1 to i32, !dbg !2917
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 8, label %sw.bb94
    i32 10, label %sw.bb94
    i32 12, label %sw.bb94
    i32 13, label %sw.bb94
    i32 6, label %sw.bb94
    i32 4, label %sw.bb94
    i32 11, label %sw.bb94
    i32 3, label %sw.bb94
    i32 2, label %sw.bb135
    i32 7, label %sw.bb141
  ], !dbg !2919

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2920
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !2923, !ctir !2817
  %3 = load i8, i8* %recursive, align 1, !dbg !2923
  %tobool = trunc i8 %3 to i1, !dbg !2923, !ctir !142
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !2924

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2925
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 4, !dbg !2926, !ctir !2817
  %5 = load i8, i8* %remove_empty_directories, align 2, !dbg !2926
  %tobool1 = trunc i8 %5 to i1, !dbg !2926, !ctir !142
  br i1 %tobool1, label %land.lhs.true3, label %if.then, !dbg !2927

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2928
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 6, !dbg !2929, !ctir !1064
  %7 = load i32, i32* %fts_cwd_fd, align 4, !dbg !2929, !ctir !7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2930
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !2931, !ctir !1157
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !2931, !ctir !9
  %call = call zeroext i1 @is_empty_dir(i32 %7, i8* %9), !dbg !2932
  br i1 %call, label %if.end, label %if.then, !dbg !2933

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %err, metadata !2934, metadata !DIExpression()), !dbg !2936
  %10 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2937
  %remove_empty_directories5 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %10, i32 0, i32 4, !dbg !2938, !ctir !2817
  %11 = load i8, i8* %remove_empty_directories5, align 2, !dbg !2938
  %tobool6 = trunc i8 %11 to i1, !dbg !2938, !ctir !142
  %12 = zext i1 %tobool6 to i64, !dbg !2937
  %cond = select i1 %tobool6, i32 39, i32 21, !dbg !2937
  store i32 %cond, i32* %err, align 4, !dbg !2936
  %13 = load i32, i32* %err, align 4, !dbg !2939
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !2940
  %14 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2941
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !2941, !ctir !1157
  %15 = load i8*, i8** %fts_path, align 8, !dbg !2941, !ctir !9
  %call9 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !2941
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %13, i8* %call8, i8* %call9), !dbg !2942
  %16 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2943
  call void @mark_ancestor_dirs(%struct._ftsent* %16), !dbg !2944
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2945
  %18 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2946
  call void @fts_skip_tree(%struct.FTS* %17, %struct._ftsent* %18), !dbg !2947
  store i32 4, i32* %retval, align 4, !dbg !2948
  br label %return, !dbg !2948

if.end:                                           ; preds = %land.lhs.true3, %sw.bb
  %19 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2949
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !2951, !ctir !1157
  %20 = load i64, i64* %fts_level, align 8, !dbg !2951, !ctir !506
  %cmp = icmp eq i64 %20, 0, !dbg !2952
  br i1 %cmp, label %if.then11, label %if.end80, !dbg !2953

if.then11:                                        ; preds = %if.end
  %21 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2954
  %fts_accpath12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !2957, !ctir !1157
  %22 = load i8*, i8** %fts_accpath12, align 8, !dbg !2957, !ctir !9
  %call13 = call i8* @last_component(i8* %22) #14, !dbg !2958
  %call14 = call zeroext i1 @dot_or_dotdot(i8* %call13), !dbg !2959
  br i1 %call14, label %if.then15, label %if.end21, !dbg !2960

if.then15:                                        ; preds = %if.then11
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.67, i64 0, i64 0)) #10, !dbg !2961
  %call17 = call i8* @quotearg_n_style(i32 0, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.68, i64 0, i64 0)), !dbg !2963
  %call18 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0)), !dbg !2964
  %23 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2965
  %fts_path19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 7, !dbg !2965, !ctir !1157
  %24 = load i8*, i8** %fts_path19, align 8, !dbg !2965, !ctir !9
  %call20 = call i8* @quotearg_n_style(i32 2, i32 4, i8* %24), !dbg !2965
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call16, i8* %call17, i8* %call18, i8* %call20), !dbg !2966
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2967
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2968
  call void @fts_skip_tree(%struct.FTS* %25, %struct._ftsent* %26), !dbg !2969
  store i32 4, i32* %retval, align 4, !dbg !2970
  br label %return, !dbg !2970

if.end21:                                         ; preds = %if.then11
  %27 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2971
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %27, i32 0, i32 5, !dbg !2971, !ctir !2817
  %28 = load %struct.timespec*, %struct.timespec** %root_dev_ino, align 8, !dbg !2971, !ctir !1159
  %tobool22 = icmp ne %struct.timespec* %28, null, !dbg !2971
  br i1 %tobool22, label %land.lhs.true23, label %if.end50, !dbg !2971

land.lhs.true23:                                  ; preds = %if.end21
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2971
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !2971, !ctir !1157
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !2971, !ctir !1092
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !2971, !ctir !1093
  %30 = load i64, i64* %st_ino, align 8, !dbg !2971, !ctir !260
  %31 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2971
  %root_dev_ino24 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %31, i32 0, i32 5, !dbg !2971, !ctir !2817
  %32 = load %struct.timespec*, %struct.timespec** %root_dev_ino24, align 8, !dbg !2971, !ctir !1159
  %st_ino25 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0, !dbg !2971, !ctir !1160
  %33 = load i64, i64* %st_ino25, align 8, !dbg !2971, !ctir !259
  %cmp26 = icmp eq i64 %30, %33, !dbg !2971
  br i1 %cmp26, label %land.lhs.true28, label %if.end50, !dbg !2971

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %34 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2971
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !2971, !ctir !1157
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !2971, !ctir !1092
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 0, !dbg !2971, !ctir !1093
  %35 = load i64, i64* %st_dev, align 8, !dbg !2971, !ctir !263
  %36 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2971
  %root_dev_ino31 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %36, i32 0, i32 5, !dbg !2971, !ctir !2817
  %37 = load %struct.timespec*, %struct.timespec** %root_dev_ino31, align 8, !dbg !2971, !ctir !1159
  %st_dev32 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 1, !dbg !2971, !ctir !1160
  %38 = load i64, i64* %st_dev32, align 8, !dbg !2971, !ctir !262
  %cmp33 = icmp eq i64 %35, %38, !dbg !2971
  br i1 %cmp33, label %if.then35, label %if.end50, !dbg !2973

if.then35:                                        ; preds = %land.lhs.true28
  br label %do.body, !dbg !2974

do.body:                                          ; preds = %if.then35
  %39 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2976
  %fts_path36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %39, i32 0, i32 7, !dbg !2976, !ctir !1157
  %40 = load i8*, i8** %fts_path36, align 8, !dbg !2976, !ctir !9
  %call37 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)) #14, !dbg !2976
  %cmp38 = icmp eq i32 %call37, 0, !dbg !2976
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !2979

if.then40:                                        ; preds = %do.body
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.71, i64 0, i64 0)) #10, !dbg !2976
  %41 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2976
  %fts_path42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 7, !dbg !2976, !ctir !1157
  %42 = load i8*, i8** %fts_path42, align 8, !dbg !2976, !ctir !9
  %call43 = call i8* @quotearg_style(i32 4, i8* %42), !dbg !2976
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call43), !dbg !2976
  br label %if.end48, !dbg !2976

if.else:                                          ; preds = %do.body
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10.72, i64 0, i64 0)) #10, !dbg !2976
  %43 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2976
  %fts_path45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %43, i32 0, i32 7, !dbg !2976, !ctir !1157
  %44 = load i8*, i8** %fts_path45, align 8, !dbg !2976, !ctir !9
  %call46 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %44), !dbg !2976
  %call47 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)), !dbg !2976
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44, i8* %call46, i8* %call47), !dbg !2976
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then40
  %call49 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11.73, i64 0, i64 0)) #10, !dbg !2979
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call49), !dbg !2979
  br label %do.end, !dbg !2979

do.end:                                           ; preds = %if.end48
  %45 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !2980
  %46 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2981
  call void @fts_skip_tree(%struct.FTS* %45, %struct._ftsent* %46), !dbg !2982
  store i32 4, i32* %retval, align 4, !dbg !2983
  br label %return, !dbg !2983

if.end50:                                         ; preds = %land.lhs.true28, %land.lhs.true23, %if.end21
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !2984
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 6, !dbg !2986, !ctir !2817
  %48 = load i8, i8* %preserve_all_root, align 8, !dbg !2986
  %tobool51 = trunc i8 %48 to i1, !dbg !2986, !ctir !142
  br i1 %tobool51, label %if.then52, label %if.end79, !dbg !2987

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i8* %failed, metadata !2988, metadata !DIExpression()), !dbg !2990
  store i8 0, i8* %failed, align 1, !dbg !2990
  call void @llvm.dbg.declare(metadata i8** %parent, metadata !2991, metadata !DIExpression()), !dbg !2992
  %49 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !2993
  %fts_accpath53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %49, i32 0, i32 6, !dbg !2994, !ctir !1157
  %50 = load i8*, i8** %fts_accpath53, align 8, !dbg !2994, !ctir !9
  %call54 = call i8* @file_name_concat(i8* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0), i8** null), !dbg !2995
  store i8* %call54, i8** %parent, align 8, !dbg !2992
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !2996, metadata !DIExpression()), !dbg !2997
  %51 = load i8*, i8** %parent, align 8, !dbg !2998
  %tobool55 = icmp ne i8* %51, null, !dbg !2998
  br i1 %tobool55, label %lor.lhs.false, label %if.then58, !dbg !3000

lor.lhs.false:                                    ; preds = %if.then52
  %52 = load i8*, i8** %parent, align 8, !dbg !3001
  %call56 = call i32 @lstat(i8* %52, %struct.stat* %statbuf) #10, !dbg !3002
  %tobool57 = icmp ne i32 %call56, 0, !dbg !3002
  br i1 %tobool57, label %if.then58, label %if.end63, !dbg !3003

if.then58:                                        ; preds = %lor.lhs.false, %if.then52
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.74, i64 0, i64 0)) #10, !dbg !3004
  %53 = load i8*, i8** %parent, align 8, !dbg !3006
  %call60 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %53), !dbg !3006
  %54 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3007
  %fts_accpath61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !3007, !ctir !1157
  %55 = load i8*, i8** %fts_accpath61, align 8, !dbg !3007, !ctir !9
  %call62 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %55), !dbg !3007
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call60, i8* %call62), !dbg !3008
  store i8 1, i8* %failed, align 1, !dbg !3009
  br label %if.end63, !dbg !3010

if.end63:                                         ; preds = %if.then58, %lor.lhs.false
  %56 = load i8*, i8** %parent, align 8, !dbg !3011
  call void @free(i8* %56) #10, !dbg !3012
  %57 = load i8, i8* %failed, align 1, !dbg !3013
  %tobool64 = trunc i8 %57 to i1, !dbg !3013
  br i1 %tobool64, label %if.then70, label %lor.lhs.false66, !dbg !3015

lor.lhs.false66:                                  ; preds = %if.end63
  %58 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3016
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 3, !dbg !3017, !ctir !1064
  %59 = load i64, i64* %fts_dev, align 8, !dbg !3017, !ctir !262
  %st_dev67 = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !3018, !ctir !1093
  %60 = load i64, i64* %st_dev67, align 8, !dbg !3018, !ctir !263
  %cmp68 = icmp ne i64 %59, %60, !dbg !3019
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !3020

if.then70:                                        ; preds = %lor.lhs.false66, %if.end63
  %61 = load i8, i8* %failed, align 1, !dbg !3021
  %tobool71 = trunc i8 %61 to i1, !dbg !3021
  br i1 %tobool71, label %if.end77, label %if.then72, !dbg !3024

if.then72:                                        ; preds = %if.then70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #10, !dbg !3025
  %62 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3027
  %fts_path74 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 7, !dbg !3027, !ctir !1157
  %63 = load i8*, i8** %fts_path74, align 8, !dbg !3027, !ctir !9
  %call75 = call i8* @quotearg_style(i32 4, i8* %63), !dbg !3027
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call73, i8* %call75), !dbg !3028
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.76, i64 0, i64 0)) #10, !dbg !3029
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call76), !dbg !3030
  br label %if.end77, !dbg !3031

if.end77:                                         ; preds = %if.then72, %if.then70
  %64 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3032
  %65 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3033
  call void @fts_skip_tree(%struct.FTS* %64, %struct._ftsent* %65), !dbg !3034
  store i32 4, i32* %retval, align 4, !dbg !3035
  br label %return, !dbg !3035

if.end78:                                         ; preds = %lor.lhs.false66
  br label %if.end79, !dbg !3036

if.end79:                                         ; preds = %if.end78, %if.end50
  br label %if.end80, !dbg !3037

if.end80:                                         ; preds = %if.end79, %if.end
  call void @llvm.dbg.declare(metadata i32* %is_empty_directory, metadata !3038, metadata !DIExpression()), !dbg !3040
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3041, metadata !DIExpression()), !dbg !3042
  %66 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3043
  %67 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3044
  %68 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3045
  %call81 = call i32 @prompt(%struct.FTS* %66, %struct._ftsent* %67, i1 zeroext true, %struct.rm_options* %68, i32 2, i32* %is_empty_directory), !dbg !3046
  store i32 %call81, i32* %s, align 4, !dbg !3042
  %69 = load i32, i32* %s, align 4, !dbg !3047
  %cmp82 = icmp eq i32 %69, 2, !dbg !3049
  br i1 %cmp82, label %land.lhs.true84, label %if.end89, !dbg !3050

land.lhs.true84:                                  ; preds = %if.end80
  %70 = load i32, i32* %is_empty_directory, align 4, !dbg !3051
  %cmp85 = icmp eq i32 %70, 4, !dbg !3052
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !3053

if.then87:                                        ; preds = %land.lhs.true84
  %71 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3054
  %72 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3056
  %73 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3057
  %call88 = call i32 @excise(%struct.FTS* %71, %struct._ftsent* %72, %struct.rm_options* %73, i1 zeroext true), !dbg !3058
  store i32 %call88, i32* %s, align 4, !dbg !3059
  %74 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3060
  %75 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3061
  call void @fts_skip_tree(%struct.FTS* %74, %struct._ftsent* %75), !dbg !3062
  br label %if.end89, !dbg !3063

if.end89:                                         ; preds = %if.then87, %land.lhs.true84, %if.end80
  %76 = load i32, i32* %s, align 4, !dbg !3064
  %cmp90 = icmp ne i32 %76, 2, !dbg !3066
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3067

if.then92:                                        ; preds = %if.end89
  %77 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3068
  call void @mark_ancestor_dirs(%struct._ftsent* %77), !dbg !3070
  %78 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3071
  %79 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3072
  call void @fts_skip_tree(%struct.FTS* %78, %struct._ftsent* %79), !dbg !3073
  br label %if.end93, !dbg !3074

if.end93:                                         ; preds = %if.then92, %if.end89
  %80 = load i32, i32* %s, align 4, !dbg !3075
  store i32 %80, i32* %retval, align 4, !dbg !3076
  br label %return, !dbg !3076

sw.bb94:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %81 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3077
  %fts_info95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 15, !dbg !3080, !ctir !1157
  %82 = load i16, i16* %fts_info95, align 8, !dbg !3080, !ctir !33
  %conv96 = zext i16 %82 to i32, !dbg !3077
  %cmp97 = icmp eq i32 %conv96, 6, !dbg !3081
  br i1 %cmp97, label %land.lhs.true99, label %if.end117, !dbg !3082

land.lhs.true99:                                  ; preds = %sw.bb94
  %83 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3083
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %83, i32 0, i32 2, !dbg !3084, !ctir !2817
  %84 = load i8, i8* %one_file_system, align 8, !dbg !3084
  %tobool100 = trunc i8 %84 to i1, !dbg !3084, !ctir !142
  br i1 %tobool100, label %land.lhs.true102, label %if.end117, !dbg !3085

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %85 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3086
  %fts_level103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 12, !dbg !3087, !ctir !1157
  %86 = load i64, i64* %fts_level103, align 8, !dbg !3087, !ctir !506
  %cmp104 = icmp slt i64 0, %86, !dbg !3088
  br i1 %cmp104, label %land.lhs.true106, label %if.end117, !dbg !3089

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %87 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3090
  %fts_statp107 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 18, !dbg !3091, !ctir !1157
  %arraydecay108 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp107, i64 0, i64 0, !dbg !3092, !ctir !1092
  %st_dev109 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay108, i32 0, i32 0, !dbg !3092, !ctir !1093
  %88 = load i64, i64* %st_dev109, align 8, !dbg !3092, !ctir !263
  %89 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3093
  %fts_dev110 = getelementptr inbounds %struct.FTS, %struct.FTS* %89, i32 0, i32 3, !dbg !3094, !ctir !1064
  %90 = load i64, i64* %fts_dev110, align 8, !dbg !3094, !ctir !262
  %cmp111 = icmp ne i64 %88, %90, !dbg !3095
  br i1 %cmp111, label %if.then113, label %if.end117, !dbg !3096

if.then113:                                       ; preds = %land.lhs.true106
  %91 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3097
  call void @mark_ancestor_dirs(%struct._ftsent* %91), !dbg !3099
  %call114 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #10, !dbg !3100
  %92 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3101
  %fts_path115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 7, !dbg !3101, !ctir !1157
  %93 = load i8*, i8** %fts_path115, align 8, !dbg !3101, !ctir !9
  %call116 = call i8* @quotearg_style(i32 4, i8* %93), !dbg !3101
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call114, i8* %call116), !dbg !3102
  store i32 4, i32* %retval, align 4, !dbg !3103
  br label %return, !dbg !3103

if.end117:                                        ; preds = %land.lhs.true106, %land.lhs.true102, %land.lhs.true99, %sw.bb94
  call void @llvm.dbg.declare(metadata i8* %is_dir, metadata !3104, metadata !DIExpression()), !dbg !3105
  %94 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3106
  %fts_info118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 15, !dbg !3107, !ctir !1157
  %95 = load i16, i16* %fts_info118, align 8, !dbg !3107, !ctir !33
  %conv119 = zext i16 %95 to i32, !dbg !3106
  %cmp120 = icmp eq i32 %conv119, 6, !dbg !3108
  br i1 %cmp120, label %lor.end, label %lor.rhs, !dbg !3109

lor.rhs:                                          ; preds = %if.end117
  %96 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3110
  %fts_info122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 15, !dbg !3111, !ctir !1157
  %97 = load i16, i16* %fts_info122, align 8, !dbg !3111, !ctir !33
  %conv123 = zext i16 %97 to i32, !dbg !3110
  %cmp124 = icmp eq i32 %conv123, 4, !dbg !3112
  br label %lor.end, !dbg !3109

lor.end:                                          ; preds = %lor.rhs, %if.end117
  %98 = phi i1 [ true, %if.end117 ], [ %cmp124, %lor.rhs ]
  %frombool = zext i1 %98 to i8, !dbg !3105
  store i8 %frombool, i8* %is_dir, align 1, !dbg !3105
  call void @llvm.dbg.declare(metadata i32* %s126, metadata !3113, metadata !DIExpression()), !dbg !3114
  %99 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3115
  %100 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3116
  %101 = load i8, i8* %is_dir, align 1, !dbg !3117
  %tobool127 = trunc i8 %101 to i1, !dbg !3117
  %102 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3118
  %call128 = call i32 @prompt(%struct.FTS* %99, %struct._ftsent* %100, i1 zeroext %tobool127, %struct.rm_options* %102, i32 3, i32* null), !dbg !3119
  store i32 %call128, i32* %s126, align 4, !dbg !3114
  %103 = load i32, i32* %s126, align 4, !dbg !3120
  %cmp129 = icmp ne i32 %103, 2, !dbg !3122
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !3123

if.then131:                                       ; preds = %lor.end
  %104 = load i32, i32* %s126, align 4, !dbg !3124
  store i32 %104, i32* %retval, align 4, !dbg !3125
  br label %return, !dbg !3125

if.end132:                                        ; preds = %lor.end
  %105 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3126
  %106 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3127
  %107 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3128
  %108 = load i8, i8* %is_dir, align 1, !dbg !3129
  %tobool133 = trunc i8 %108 to i1, !dbg !3129
  %call134 = call i32 @excise(%struct.FTS* %105, %struct._ftsent* %106, %struct.rm_options* %107, i1 zeroext %tobool133), !dbg !3130
  store i32 %call134, i32* %retval, align 4, !dbg !3131
  br label %return, !dbg !3131

sw.bb135:                                         ; preds = %entry
  br label %do.body136, !dbg !3132

do.body136:                                       ; preds = %sw.bb135
  %call137 = call i8* @gettext(i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.15.77, i64 0, i64 0)) #10, !dbg !3133
  %109 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3133
  %fts_path138 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %109, i32 0, i32 7, !dbg !3133, !ctir !1157
  %110 = load i8*, i8** %fts_path138, align 8, !dbg !3133, !ctir !9
  %call139 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %110), !dbg !3133
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call137, i8* %call139), !dbg !3133
  br label %do.end140, !dbg !3133

do.end140:                                        ; preds = %do.body136
  %111 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3135
  %112 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3136
  call void @fts_skip_tree(%struct.FTS* %111, %struct._ftsent* %112), !dbg !3137
  store i32 4, i32* %retval, align 4, !dbg !3138
  br label %return, !dbg !3138

sw.bb141:                                         ; preds = %entry
  %113 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3139
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %113, i32 0, i32 8, !dbg !3140, !ctir !1157
  %114 = load i32, i32* %fts_errno, align 8, !dbg !3140, !ctir !7
  %call142 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.78, i64 0, i64 0)) #10, !dbg !3141
  %115 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3142
  %fts_path143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %115, i32 0, i32 7, !dbg !3142, !ctir !1157
  %116 = load i8*, i8** %fts_path143, align 8, !dbg !3142, !ctir !9
  %call144 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %116), !dbg !3142
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %114, i8* %call142, i8* %call144), !dbg !3143
  %117 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3144
  %118 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3145
  call void @fts_skip_tree(%struct.FTS* %117, %struct._ftsent* %118), !dbg !3146
  store i32 4, i32* %retval, align 4, !dbg !3147
  br label %return, !dbg !3147

sw.default:                                       ; preds = %entry
  %call145 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17.79, i64 0, i64 0)) #10, !dbg !3148
  %119 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3149
  %fts_info146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 15, !dbg !3150, !ctir !1157
  %120 = load i16, i16* %fts_info146, align 8, !dbg !3150, !ctir !33
  %conv147 = zext i16 %120 to i32, !dbg !3149
  %121 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3151
  %fts_path148 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 7, !dbg !3151, !ctir !1157
  %122 = load i8*, i8** %fts_path148, align 8, !dbg !3151, !ctir !9
  %call149 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %122), !dbg !3151
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call145, i32 %conv147, i8* %call149, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18.80, i64 0, i64 0)), !dbg !3152
  call void @abort() #13, !dbg !3153
  unreachable, !dbg !3153

return:                                           ; preds = %sw.bb141, %do.end140, %if.end132, %if.then131, %if.then113, %if.end93, %if.end77, %do.end, %if.then15, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !3154
  ret i32 %123, !dbg !3154
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_empty_dir(i32 %fd_cwd, i8* %dir) #4 !dbg !3155 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !541
  %dp = alloca %struct.dirent*, align 8, !ctir !1174
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !3158, metadata !DIExpression()), !dbg !3159
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3160, metadata !DIExpression()), !dbg !3161
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !3162, metadata !DIExpression()), !dbg !3163
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !3164, metadata !DIExpression()), !dbg !3165
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !3166, metadata !DIExpression()), !dbg !3167
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !3168, metadata !DIExpression()), !dbg !3169
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !3170
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !3171
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %0, i8* %1, i32 198912), !dbg !3172
  store i32 %call, i32* %fd, align 4, !dbg !3169
  %2 = load i32, i32* %fd, align 4, !dbg !3173
  %cmp = icmp slt i32 %2, 0, !dbg !3175
  br i1 %cmp, label %if.then, label %if.end, !dbg !3176

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3177
  br label %return, !dbg !3177

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %fd, align 4, !dbg !3178
  %call1 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !3179
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !3180
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !3181
  %cmp2 = icmp eq %struct.__dirstream* %4, null, !dbg !3183
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !3184

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %fd, align 4, !dbg !3185
  %call4 = call i32 @close(i32 %5), !dbg !3187
  store i1 false, i1* %retval, align 1, !dbg !3188
  br label %return, !dbg !3188

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !3189
  store i32 0, i32* %call6, align 4, !dbg !3190, !ctir !7
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !3191
  %call7 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %6), !dbg !3192
  store %struct.dirent* %call7, %struct.dirent** %dp, align 8, !dbg !3193
  %call8 = call i32* @__errno_location() #15, !dbg !3194
  %7 = load i32, i32* %call8, align 4, !dbg !3194, !ctir !7
  store i32 %7, i32* %saved_errno, align 4, !dbg !3195
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !3196
  %call9 = call i32 @closedir(%struct.__dirstream* %8), !dbg !3197
  %9 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3198
  %cmp10 = icmp ne %struct.dirent* %9, null, !dbg !3200
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3201

if.then11:                                        ; preds = %if.end5
  store i1 false, i1* %retval, align 1, !dbg !3202
  br label %return, !dbg !3202

if.end12:                                         ; preds = %if.end5
  %10 = load i32, i32* %saved_errno, align 4, !dbg !3203
  %cmp13 = icmp eq i32 %10, 0, !dbg !3204
  %11 = zext i1 %cmp13 to i64, !dbg !3203
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !3203
  %tobool = icmp ne i32 %cond, 0, !dbg !3203
  store i1 %tobool, i1* %retval, align 1, !dbg !3205
  br label %return, !dbg !3205

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !3206
  ret i1 %12, !dbg !3206
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_ancestor_dirs(%struct._ftsent* %ent) #4 !dbg !3207 {
entry:
  %ent.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1156
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3210, metadata !DIExpression()), !dbg !3211
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !3212, metadata !DIExpression()), !dbg !3213
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3214
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 1, !dbg !3216, !ctir !1157
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !3216, !ctir !1069
  store %struct._ftsent* %1, %struct._ftsent** %p, align 8, !dbg !3217
  br label %for.cond, !dbg !3218

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3219
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 12, !dbg !3221, !ctir !1157
  %3 = load i64, i64* %fts_level, align 8, !dbg !3221, !ctir !506
  %cmp = icmp sle i64 0, %3, !dbg !3222
  br i1 %cmp, label %for.body, label %for.end, !dbg !3223

for.body:                                         ; preds = %for.cond
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3224
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 4, !dbg !3227, !ctir !1157
  %5 = load i64, i64* %fts_number, align 8, !dbg !3227, !ctir !31
  %tobool = icmp ne i64 %5, 0, !dbg !3224
  br i1 %tobool, label %if.then, label %if.end, !dbg !3228

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !3229

if.end:                                           ; preds = %for.body
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3230
  %fts_number1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 4, !dbg !3231, !ctir !1157
  store i64 1, i64* %fts_number1, align 8, !dbg !3232, !ctir !31
  br label %for.inc, !dbg !3233

for.inc:                                          ; preds = %if.end
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !3234
  %fts_parent2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 1, !dbg !3235, !ctir !1157
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_parent2, align 8, !dbg !3235, !ctir !1069
  store %struct._ftsent* %8, %struct._ftsent** %p, align 8, !dbg !3236
  br label %for.cond, !dbg !3237, !llvm.loop !3238

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !3240
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_skip_tree(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !3241 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %__x = alloca %struct._ftsent*, align 8, !ctir !1156
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3244, metadata !DIExpression()), !dbg !3245
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3246, metadata !DIExpression()), !dbg !3247
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3248
  %1 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3249
  %call = call i32 @rpl_fts_set(%struct.FTS* %0, %struct._ftsent* %1, i32 4), !dbg !3250
  call void @llvm.dbg.declare(metadata %struct._ftsent** %__x, metadata !3251, metadata !DIExpression()), !dbg !3253
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3253
  %call1 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %2), !dbg !3253
  store %struct._ftsent* %call1, %struct._ftsent** %__x, align 8, !dbg !3253
  %3 = load %struct._ftsent*, %struct._ftsent** %__x, align 8, !dbg !3253
  ret void, !dbg !3254
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !3255 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !3256, metadata !DIExpression()), !dbg !3257
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !3258
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !3258, !ctir !116
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3258
  %conv = sext i8 %1 to i32, !dbg !3258
  %cmp = icmp eq i32 %conv, 46, !dbg !3260
  br i1 %cmp, label %if.then, label %if.else, !dbg !3261

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !3262, metadata !DIExpression()), !dbg !3264
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !3265
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !3266
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !3266, !ctir !116
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3266
  %conv3 = sext i8 %4 to i32, !dbg !3266
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !3267
  %conv5 = zext i1 %cmp4 to i32, !dbg !3267
  %add = add nsw i32 %conv5, 1, !dbg !3268
  %idxprom = sext i32 %add to i64, !dbg !3265
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !3265, !ctir !116
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !3265
  store i8 %5, i8* %sep, align 1, !dbg !3264
  %6 = load i8, i8* %sep, align 1, !dbg !3269
  %tobool = icmp ne i8 %6, 0, !dbg !3269
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3270

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !3271
  %conv7 = sext i8 %7 to i32, !dbg !3271
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3271
  br label %lor.end, !dbg !3270

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !3272
  br label %return, !dbg !3272

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3273
  br label %return, !dbg !3273

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !3274
  ret i1 %9, !dbg !3274
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @prompt(%struct.FTS* %fts, %struct._ftsent* %ent, i1 zeroext %is_dir, %struct.rm_options* %x, i32 %mode, i32* %is_empty_p) #4 !dbg !3275 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.rm_options*, align 8
  %mode.addr = alloca i32, align 4
  %is_empty_p.addr = alloca i32*, align 8
  %fd_cwd = alloca i32, align 4, !ctir !7
  %full_name = alloca i8*, align 8, !ctir !116
  %filename = alloca i8*, align 8, !ctir !116
  %st = alloca %struct.stat, align 8, !ctir !1093
  %sbuf = alloca %struct.stat*, align 8, !ctir !1185
  %dirent_type = alloca i32, align 4, !ctir !7
  %write_protected = alloca i32, align 4, !ctir !7
  %is_empty = alloca i8, align 1, !ctir !142
  %wp_errno = alloca i32, align 4, !ctir !7
  %quoted_name = alloca i8*, align 8, !ctir !116
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3281, metadata !DIExpression()), !dbg !3282
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3283, metadata !DIExpression()), !dbg !3284
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !3285, metadata !DIExpression()), !dbg !3286
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3287, metadata !DIExpression()), !dbg !3288
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3289, metadata !DIExpression()), !dbg !3290
  store i32* %is_empty_p, i32** %is_empty_p.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %is_empty_p.addr, metadata !3291, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.declare(metadata i32* %fd_cwd, metadata !3293, metadata !DIExpression()), !dbg !3294
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3295
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !3296, !ctir !1183
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !3296, !ctir !7
  store i32 %1, i32* %fd_cwd, align 4, !dbg !3294
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !3297, metadata !DIExpression()), !dbg !3298
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3299
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 7, !dbg !3300, !ctir !1184
  %3 = load i8*, i8** %fts_path, align 8, !dbg !3300, !ctir !9
  store i8* %3, i8** %full_name, align 8, !dbg !3298
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !3301, metadata !DIExpression()), !dbg !3302
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3303
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !3304, !ctir !1184
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !3304, !ctir !9
  store i8* %5, i8** %filename, align 8, !dbg !3302
  %6 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3305
  %tobool = icmp ne i32* %6, null, !dbg !3305
  br i1 %tobool, label %if.then, label %if.end, !dbg !3307

if.then:                                          ; preds = %entry
  %7 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3308
  store i32 2, i32* %7, align 4, !dbg !3309, !ctir !1170
  br label %if.end, !dbg !3310

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3311, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.declare(metadata %struct.stat** %sbuf, metadata !3313, metadata !DIExpression()), !dbg !3314
  store %struct.stat* %st, %struct.stat** %sbuf, align 8, !dbg !3314
  %8 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3315
  %call = call %struct.stat* @cache_stat_init(%struct.stat* %8), !dbg !3316
  call void @llvm.dbg.declare(metadata i32* %dirent_type, metadata !3317, metadata !DIExpression()), !dbg !3318
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !3319
  %tobool1 = trunc i8 %9 to i1, !dbg !3319
  %10 = zext i1 %tobool1 to i64, !dbg !3319
  %cond = select i1 %tobool1, i32 4, i32 0, !dbg !3319
  store i32 %cond, i32* %dirent_type, align 4, !dbg !3318
  call void @llvm.dbg.declare(metadata i32* %write_protected, metadata !3320, metadata !DIExpression()), !dbg !3321
  store i32 0, i32* %write_protected, align 4, !dbg !3321
  call void @llvm.dbg.declare(metadata i8* %is_empty, metadata !3322, metadata !DIExpression()), !dbg !3323
  store i8 0, i8* %is_empty, align 1, !dbg !3323
  %11 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3324
  %tobool2 = icmp ne i32* %11, null, !dbg !3324
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !3326

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %fd_cwd, align 4, !dbg !3327
  %13 = load i8*, i8** %filename, align 8, !dbg !3329
  %call4 = call zeroext i1 @is_empty_dir(i32 %12, i8* %13), !dbg !3330
  %frombool5 = zext i1 %call4 to i8, !dbg !3331
  store i8 %frombool5, i8* %is_empty, align 1, !dbg !3331
  %14 = load i8, i8* %is_empty, align 1, !dbg !3332
  %tobool6 = trunc i8 %14 to i1, !dbg !3332
  %15 = zext i1 %tobool6 to i64, !dbg !3332
  %cond7 = select i1 %tobool6, i32 4, i32 3, !dbg !3332
  %16 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !3333
  store i32 %cond7, i32* %16, align 4, !dbg !3334, !ctir !1170
  br label %if.end8, !dbg !3335

if.end8:                                          ; preds = %if.then3, %if.end
  %17 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3336
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 4, !dbg !3338, !ctir !1184
  %18 = load i64, i64* %fts_number, align 8, !dbg !3338, !ctir !31
  %tobool9 = icmp ne i64 %18, 0, !dbg !3336
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !3339

if.then10:                                        ; preds = %if.end8
  store i32 3, i32* %retval, align 4, !dbg !3340
  br label %return, !dbg !3340

if.end11:                                         ; preds = %if.end8
  %19 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3341
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %19, i32 0, i32 1, !dbg !3343, !ctir !2817
  %20 = load i32, i32* %interactive, align 4, !dbg !3343, !ctir !100
  %cmp = icmp eq i32 %20, 5, !dbg !3344
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !3345

if.then12:                                        ; preds = %if.end11
  store i32 2, i32* %retval, align 4, !dbg !3346
  br label %return, !dbg !3346

if.end13:                                         ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %wp_errno, metadata !3347, metadata !DIExpression()), !dbg !3348
  store i32 0, i32* %wp_errno, align 4, !dbg !3348
  %21 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3349
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %21, i32 0, i32 0, !dbg !3351, !ctir !2817
  %22 = load i8, i8* %ignore_missing_files, align 8, !dbg !3351
  %tobool14 = trunc i8 %22 to i1, !dbg !3351, !ctir !142
  br i1 %tobool14, label %if.end23, label %land.lhs.true, !dbg !3352

land.lhs.true:                                    ; preds = %if.end13
  %23 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3353
  %interactive15 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %23, i32 0, i32 1, !dbg !3354, !ctir !2817
  %24 = load i32, i32* %interactive15, align 4, !dbg !3354, !ctir !100
  %cmp16 = icmp eq i32 %24, 3, !dbg !3355
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false, !dbg !3356

lor.lhs.false:                                    ; preds = %land.lhs.true
  %25 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3357
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %25, i32 0, i32 7, !dbg !3358, !ctir !2817
  %26 = load i8, i8* %stdin_tty, align 1, !dbg !3358
  %tobool17 = trunc i8 %26 to i1, !dbg !3358, !ctir !142
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !3359

land.lhs.true18:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load i32, i32* %dirent_type, align 4, !dbg !3360
  %cmp19 = icmp ne i32 %27, 10, !dbg !3361
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !3362

if.then20:                                        ; preds = %land.lhs.true18
  %28 = load i32, i32* %fd_cwd, align 4, !dbg !3363
  %29 = load i8*, i8** %filename, align 8, !dbg !3365
  %30 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3366
  %call21 = call i32 @write_protected_non_symlink(i32 %28, i8* %29, %struct.stat* %30), !dbg !3367
  store i32 %call21, i32* %write_protected, align 4, !dbg !3368
  %call22 = call i32* @__errno_location() #15, !dbg !3369
  %31 = load i32, i32* %call22, align 4, !dbg !3369, !ctir !7
  store i32 %31, i32* %wp_errno, align 4, !dbg !3370
  br label %if.end23, !dbg !3371

if.end23:                                         ; preds = %if.then20, %land.lhs.true18, %lor.lhs.false, %if.end13
  %32 = load i32, i32* %write_protected, align 4, !dbg !3372
  %tobool24 = icmp ne i32 %32, 0, !dbg !3372
  br i1 %tobool24, label %if.then28, label %lor.lhs.false25, !dbg !3374

lor.lhs.false25:                                  ; preds = %if.end23
  %33 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3375
  %interactive26 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %33, i32 0, i32 1, !dbg !3376, !ctir !2817
  %34 = load i32, i32* %interactive26, align 4, !dbg !3376, !ctir !100
  %cmp27 = icmp eq i32 %34, 3, !dbg !3377
  br i1 %cmp27, label %if.then28, label %if.end99, !dbg !3378

if.then28:                                        ; preds = %lor.lhs.false25, %if.end23
  %35 = load i32, i32* %write_protected, align 4, !dbg !3379
  %cmp29 = icmp sle i32 0, %35, !dbg !3382
  br i1 %cmp29, label %land.lhs.true30, label %if.end47, !dbg !3383

land.lhs.true30:                                  ; preds = %if.then28
  %36 = load i32, i32* %dirent_type, align 4, !dbg !3384
  %cmp31 = icmp eq i32 %36, 0, !dbg !3385
  br i1 %cmp31, label %if.then32, label %if.end47, !dbg !3386

if.then32:                                        ; preds = %land.lhs.true30
  %37 = load i32, i32* %fd_cwd, align 4, !dbg !3387
  %38 = load i8*, i8** %filename, align 8, !dbg !3390
  %39 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3391
  %call33 = call i32 @cache_fstatat(i32 %37, i8* %38, %struct.stat* %39, i32 256), !dbg !3392
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3393
  br i1 %cmp34, label %if.then35, label %if.else44, !dbg !3394

if.then35:                                        ; preds = %if.then32
  %40 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3395
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 3, !dbg !3395, !ctir !1093
  %41 = load i32, i32* %st_mode, align 8, !dbg !3395, !ctir !168
  %and = and i32 %41, 61440, !dbg !3395
  %cmp36 = icmp eq i32 %and, 40960, !dbg !3395
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !3398

if.then37:                                        ; preds = %if.then35
  store i32 10, i32* %dirent_type, align 4, !dbg !3399
  br label %if.end43, !dbg !3400

if.else:                                          ; preds = %if.then35
  %42 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3401
  %st_mode38 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 3, !dbg !3401, !ctir !1093
  %43 = load i32, i32* %st_mode38, align 8, !dbg !3401, !ctir !168
  %and39 = and i32 %43, 61440, !dbg !3401
  %cmp40 = icmp eq i32 %and39, 16384, !dbg !3401
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !3403

if.then41:                                        ; preds = %if.else
  store i32 4, i32* %dirent_type, align 4, !dbg !3404
  br label %if.end42, !dbg !3405

if.end42:                                         ; preds = %if.then41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then37
  br label %if.end46, !dbg !3406

if.else44:                                        ; preds = %if.then32
  store i32 -1, i32* %write_protected, align 4, !dbg !3407
  %call45 = call i32* @__errno_location() #15, !dbg !3409
  %44 = load i32, i32* %call45, align 4, !dbg !3409, !ctir !7
  store i32 %44, i32* %wp_errno, align 4, !dbg !3410
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.end43
  br label %if.end47, !dbg !3411

if.end47:                                         ; preds = %if.end46, %land.lhs.true30, %if.then28
  %45 = load i32, i32* %write_protected, align 4, !dbg !3412
  %cmp48 = icmp sle i32 0, %45, !dbg !3414
  br i1 %cmp48, label %if.then49, label %if.end62, !dbg !3415

if.then49:                                        ; preds = %if.end47
  %46 = load i32, i32* %dirent_type, align 4, !dbg !3416
  switch i32 %46, label %sw.epilog [
    i32 10, label %sw.bb
    i32 4, label %sw.bb54
  ], !dbg !3417

sw.bb:                                            ; preds = %if.then49
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3418
  %interactive50 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 1, !dbg !3421, !ctir !2817
  %48 = load i32, i32* %interactive50, align 4, !dbg !3421, !ctir !100
  %cmp51 = icmp ne i32 %48, 3, !dbg !3422
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !3423

if.then52:                                        ; preds = %sw.bb
  store i32 2, i32* %retval, align 4, !dbg !3424
  br label %return, !dbg !3424

if.end53:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !3425

sw.bb54:                                          ; preds = %if.then49
  %49 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3426
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %49, i32 0, i32 3, !dbg !3428, !ctir !2817
  %50 = load i8, i8* %recursive, align 1, !dbg !3428
  %tobool55 = trunc i8 %50 to i1, !dbg !3428, !ctir !142
  br i1 %tobool55, label %if.end61, label %lor.lhs.false56, !dbg !3429

lor.lhs.false56:                                  ; preds = %sw.bb54
  %51 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3430
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %51, i32 0, i32 4, !dbg !3431, !ctir !2817
  %52 = load i8, i8* %remove_empty_directories, align 2, !dbg !3431
  %tobool57 = trunc i8 %52 to i1, !dbg !3431, !ctir !142
  br i1 %tobool57, label %land.lhs.true58, label %if.then60, !dbg !3432

land.lhs.true58:                                  ; preds = %lor.lhs.false56
  %53 = load i8, i8* %is_empty, align 1, !dbg !3433
  %tobool59 = trunc i8 %53 to i1, !dbg !3433
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !3434

if.then60:                                        ; preds = %land.lhs.true58, %lor.lhs.false56
  store i32 -1, i32* %write_protected, align 4, !dbg !3435
  store i32 21, i32* %wp_errno, align 4, !dbg !3437
  br label %if.end61, !dbg !3438

if.end61:                                         ; preds = %if.then60, %land.lhs.true58, %sw.bb54
  br label %sw.epilog, !dbg !3439

sw.epilog:                                        ; preds = %if.then49, %if.end61, %if.end53
  br label %if.end62, !dbg !3440

if.end62:                                         ; preds = %sw.epilog, %if.end47
  call void @llvm.dbg.declare(metadata i8** %quoted_name, metadata !3441, metadata !DIExpression()), !dbg !3442
  %54 = load i8*, i8** %full_name, align 8, !dbg !3443
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !3443
  store i8* %call63, i8** %quoted_name, align 8, !dbg !3442
  %55 = load i32, i32* %write_protected, align 4, !dbg !3444
  %cmp64 = icmp slt i32 %55, 0, !dbg !3446
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !3447

if.then65:                                        ; preds = %if.end62
  %56 = load i32, i32* %wp_errno, align 4, !dbg !3448
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !3450
  %57 = load i8*, i8** %quoted_name, align 8, !dbg !3451
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %56, i8* %call66, i8* %57), !dbg !3452
  store i32 4, i32* %retval, align 4, !dbg !3453
  br label %return, !dbg !3453

if.end67:                                         ; preds = %if.end62
  %58 = load i32, i32* %dirent_type, align 4, !dbg !3454
  %cmp68 = icmp eq i32 %58, 4, !dbg !3456
  br i1 %cmp68, label %land.lhs.true69, label %if.else79, !dbg !3457

land.lhs.true69:                                  ; preds = %if.end67
  %59 = load i32, i32* %mode.addr, align 4, !dbg !3458
  %cmp70 = icmp eq i32 %59, 2, !dbg !3459
  br i1 %cmp70, label %land.lhs.true71, label %if.else79, !dbg !3460

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %60 = load i8, i8* %is_empty, align 1, !dbg !3461
  %tobool72 = trunc i8 %60 to i1, !dbg !3461
  br i1 %tobool72, label %if.else79, label %if.then73, !dbg !3462

if.then73:                                        ; preds = %land.lhs.true71
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3463
  %62 = load i32, i32* %write_protected, align 4, !dbg !3464
  %tobool74 = icmp ne i32 %62, 0, !dbg !3464
  br i1 %tobool74, label %cond.true, label %cond.false, !dbg !3464

cond.true:                                        ; preds = %if.then73
  %call75 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19.83, i64 0, i64 0)) #10, !dbg !3465
  br label %cond.end, !dbg !3464

cond.false:                                       ; preds = %if.then73
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.84, i64 0, i64 0)) #10, !dbg !3466
  br label %cond.end, !dbg !3464

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond77 = phi i8* [ %call75, %cond.true ], [ %call76, %cond.false ], !dbg !3464
  %63 = load i8*, i8** @program_name, align 8, !dbg !3467
  %64 = load i8*, i8** %quoted_name, align 8, !dbg !3468
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %cond77, i8* %63, i8* %64), !dbg !3469
  br label %if.end95, !dbg !3469

if.else79:                                        ; preds = %land.lhs.true71, %land.lhs.true69, %if.end67
  %65 = load i32, i32* %fd_cwd, align 4, !dbg !3470
  %66 = load i8*, i8** %filename, align 8, !dbg !3473
  %67 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3474
  %call80 = call i32 @cache_fstatat(i32 %65, i8* %66, %struct.stat* %67, i32 256), !dbg !3475
  %cmp81 = icmp ne i32 %call80, 0, !dbg !3476
  br i1 %cmp81, label %if.then82, label %if.end85, !dbg !3477

if.then82:                                        ; preds = %if.else79
  %call83 = call i32* @__errno_location() #15, !dbg !3478
  %68 = load i32, i32* %call83, align 4, !dbg !3478, !ctir !7
  %call84 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !3480
  %69 = load i8*, i8** %quoted_name, align 8, !dbg !3481
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call84, i8* %69), !dbg !3482
  store i32 4, i32* %retval, align 4, !dbg !3483
  br label %return, !dbg !3483

if.end85:                                         ; preds = %if.else79
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3484
  %71 = load i32, i32* %write_protected, align 4, !dbg !3485
  %tobool86 = icmp ne i32 %71, 0, !dbg !3485
  br i1 %tobool86, label %cond.true87, label %cond.false89, !dbg !3485

cond.true87:                                      ; preds = %if.end85
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.85, i64 0, i64 0)) #10, !dbg !3486
  br label %cond.end91, !dbg !3485

cond.false89:                                     ; preds = %if.end85
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22.86, i64 0, i64 0)) #10, !dbg !3487
  br label %cond.end91, !dbg !3485

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i8* [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !3485
  %72 = load i8*, i8** @program_name, align 8, !dbg !3488
  %73 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !3489
  %call93 = call i8* @file_type(%struct.stat* %73) #14, !dbg !3490
  %74 = load i8*, i8** %quoted_name, align 8, !dbg !3491
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* %cond92, i8* %72, i8* %call93, i8* %74), !dbg !3492
  br label %if.end95

if.end95:                                         ; preds = %cond.end91, %cond.end
  %call96 = call zeroext i1 @yesno(), !dbg !3493
  br i1 %call96, label %if.end98, label %if.then97, !dbg !3495

if.then97:                                        ; preds = %if.end95
  store i32 3, i32* %retval, align 4, !dbg !3496
  br label %return, !dbg !3496

if.end98:                                         ; preds = %if.end95
  br label %if.end99, !dbg !3497

if.end99:                                         ; preds = %if.end98, %lor.lhs.false25
  store i32 2, i32* %retval, align 4, !dbg !3498
  br label %return, !dbg !3498

return:                                           ; preds = %if.end99, %if.then97, %if.then82, %if.then65, %if.then52, %if.then12, %if.then10
  %75 = load i32, i32* %retval, align 4, !dbg !3499
  ret i32 %75, !dbg !3499
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @excise(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x, i1 zeroext %is_dir) #4 !dbg !3500 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %is_dir.addr = alloca i8, align 1
  %flag = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1093
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3503, metadata !DIExpression()), !dbg !3504
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3505, metadata !DIExpression()), !dbg !3506
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !3509, metadata !DIExpression()), !dbg !3510
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !3511, metadata !DIExpression()), !dbg !3512
  %0 = load i8, i8* %is_dir.addr, align 1, !dbg !3513
  %tobool = trunc i8 %0 to i1, !dbg !3513
  %1 = zext i1 %tobool to i64, !dbg !3513
  %cond = select i1 %tobool, i32 512, i32 0, !dbg !3513
  store i32 %cond, i32* %flag, align 4, !dbg !3512
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3514
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 6, !dbg !3516, !ctir !1064
  %3 = load i32, i32* %fts_cwd_fd, align 4, !dbg !3516, !ctir !7
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3517
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !3518, !ctir !1157
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !3518, !ctir !9
  %6 = load i32, i32* %flag, align 4, !dbg !3519
  %call = call i32 @unlinkat(i32 %3, i8* %5, i32 %6) #10, !dbg !3520
  %cmp = icmp eq i32 %call, 0, !dbg !3521
  br i1 %cmp, label %if.then, label %if.end9, !dbg !3522

if.then:                                          ; preds = %entry
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3523
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 8, !dbg !3526, !ctir !2817
  %8 = load i8, i8* %verbose, align 2, !dbg !3526
  %tobool1 = trunc i8 %8 to i1, !dbg !3526, !ctir !142
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3527

if.then2:                                         ; preds = %if.then
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !3528
  %tobool3 = trunc i8 %9 to i1, !dbg !3528
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !3528

cond.true:                                        ; preds = %if.then2
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23.81, i64 0, i64 0)) #10, !dbg !3530
  br label %cond.end, !dbg !3528

cond.false:                                       ; preds = %if.then2
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24.82, i64 0, i64 0)) #10, !dbg !3531
  br label %cond.end, !dbg !3528

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i8* [ %call4, %cond.true ], [ %call5, %cond.false ], !dbg !3528
  %10 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3532
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 7, !dbg !3532, !ctir !1157
  %11 = load i8*, i8** %fts_path, align 8, !dbg !3532, !ctir !9
  %call7 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !3532
  %call8 = call i32 (i8*, ...) @printf(i8* %cond6, i8* %call7), !dbg !3533
  br label %if.end, !dbg !3534

if.end:                                           ; preds = %cond.end, %if.then
  store i32 2, i32* %retval, align 4, !dbg !3535
  br label %return, !dbg !3535

if.end9:                                          ; preds = %entry
  %call10 = call i32* @__errno_location() #15, !dbg !3536
  %12 = load i32, i32* %call10, align 4, !dbg !3536, !ctir !7
  %cmp11 = icmp eq i32 %12, 30, !dbg !3538
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !3539

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3540, metadata !DIExpression()), !dbg !3542
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3543
  %fts_cwd_fd13 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 6, !dbg !3545, !ctir !1064
  %14 = load i32, i32* %fts_cwd_fd13, align 4, !dbg !3545, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3546
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 6, !dbg !3547, !ctir !1157
  %16 = load i8*, i8** %fts_accpath14, align 8, !dbg !3547, !ctir !9
  %call15 = call i32 @lstatat(i32 %14, i8* %16, %struct.stat* %st), !dbg !3548
  %tobool16 = icmp ne i32 %call15, 0, !dbg !3548
  br i1 %tobool16, label %land.lhs.true, label %if.then19, !dbg !3549

land.lhs.true:                                    ; preds = %if.then12
  %call17 = call i32* @__errno_location() #15, !dbg !3550
  %17 = load i32, i32* %call17, align 4, !dbg !3550, !ctir !7
  %cmp18 = icmp eq i32 %17, 2, !dbg !3551
  br i1 %cmp18, label %if.end21, label %if.then19, !dbg !3552

if.then19:                                        ; preds = %land.lhs.true, %if.then12
  %call20 = call i32* @__errno_location() #15, !dbg !3553
  store i32 30, i32* %call20, align 4, !dbg !3554, !ctir !7
  br label %if.end21, !dbg !3553

if.end21:                                         ; preds = %if.then19, %land.lhs.true
  br label %if.end22, !dbg !3555

if.end22:                                         ; preds = %if.end21, %if.end9
  %18 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3556
  %call23 = call i32* @__errno_location() #15, !dbg !3558
  %19 = load i32, i32* %call23, align 4, !dbg !3558, !ctir !7
  %call24 = call zeroext i1 @ignorable_missing(%struct.rm_options* %18, i32 %19), !dbg !3559
  br i1 %call24, label %if.then25, label %if.end26, !dbg !3560

if.then25:                                        ; preds = %if.end22
  store i32 2, i32* %retval, align 4, !dbg !3561
  br label %return, !dbg !3561

if.end26:                                         ; preds = %if.end22
  %20 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3562
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 15, !dbg !3564, !ctir !1157
  %21 = load i16, i16* %fts_info, align 8, !dbg !3564, !ctir !33
  %conv = zext i16 %21 to i32, !dbg !3562
  %cmp27 = icmp eq i32 %conv, 4, !dbg !3565
  br i1 %cmp27, label %land.lhs.true29, label %if.end54, !dbg !3566

land.lhs.true29:                                  ; preds = %if.end26
  %call30 = call i32* @__errno_location() #15, !dbg !3567
  %22 = load i32, i32* %call30, align 4, !dbg !3567, !ctir !7
  %cmp31 = icmp eq i32 %22, 39, !dbg !3568
  br i1 %cmp31, label %land.lhs.true44, label %lor.lhs.false, !dbg !3569

lor.lhs.false:                                    ; preds = %land.lhs.true29
  %call33 = call i32* @__errno_location() #15, !dbg !3570
  %23 = load i32, i32* %call33, align 4, !dbg !3570, !ctir !7
  %cmp34 = icmp eq i32 %23, 21, !dbg !3571
  br i1 %cmp34, label %land.lhs.true44, label %lor.lhs.false36, !dbg !3572

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %call37 = call i32* @__errno_location() #15, !dbg !3573
  %24 = load i32, i32* %call37, align 4, !dbg !3573, !ctir !7
  %cmp38 = icmp eq i32 %24, 20, !dbg !3574
  br i1 %cmp38, label %land.lhs.true44, label %lor.lhs.false40, !dbg !3575

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %call41 = call i32* @__errno_location() #15, !dbg !3576
  %25 = load i32, i32* %call41, align 4, !dbg !3576, !ctir !7
  %cmp42 = icmp eq i32 %25, 17, !dbg !3577
  br i1 %cmp42, label %land.lhs.true44, label %if.end54, !dbg !3578

land.lhs.true44:                                  ; preds = %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false, %land.lhs.true29
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3579
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 8, !dbg !3580, !ctir !1157
  %27 = load i32, i32* %fts_errno, align 8, !dbg !3580, !ctir !7
  %cmp45 = icmp eq i32 %27, 1, !dbg !3581
  br i1 %cmp45, label %if.then51, label %lor.lhs.false47, !dbg !3582

lor.lhs.false47:                                  ; preds = %land.lhs.true44
  %28 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3583
  %fts_errno48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 8, !dbg !3584, !ctir !1157
  %29 = load i32, i32* %fts_errno48, align 8, !dbg !3584, !ctir !7
  %cmp49 = icmp eq i32 %29, 13, !dbg !3585
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !3586

if.then51:                                        ; preds = %lor.lhs.false47, %land.lhs.true44
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3587
  %fts_errno52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 8, !dbg !3588, !ctir !1157
  %31 = load i32, i32* %fts_errno52, align 8, !dbg !3588, !ctir !7
  %call53 = call i32* @__errno_location() #15, !dbg !3589
  store i32 %31, i32* %call53, align 4, !dbg !3590, !ctir !7
  br label %if.end54, !dbg !3589

if.end54:                                         ; preds = %if.then51, %lor.lhs.false47, %lor.lhs.false40, %if.end26
  %call55 = call i32* @__errno_location() #15, !dbg !3591
  %32 = load i32, i32* %call55, align 4, !dbg !3591, !ctir !7
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !3592
  %33 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3593
  %fts_path57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 7, !dbg !3593, !ctir !1157
  %34 = load i8*, i8** %fts_path57, align 8, !dbg !3593, !ctir !9
  %call58 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !3593
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %32, i8* %call56, i8* %call58), !dbg !3594
  %35 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3595
  call void @mark_ancestor_dirs(%struct._ftsent* %35), !dbg !3596
  store i32 4, i32* %retval, align 4, !dbg !3597
  br label %return, !dbg !3597

return:                                           ; preds = %if.end54, %if.then25, %if.end
  %36 = load i32, i32* %retval, align 4, !dbg !3598
  ret i32 %36, !dbg !3598
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options* %x, i32 %errnum) #4 !dbg !3599 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  %errnum.addr = alloca i32, align 4
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3602, metadata !DIExpression()), !dbg !3603
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !3604, metadata !DIExpression()), !dbg !3605
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3606
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !3607, !ctir !2817
  %1 = load i8, i8* %ignore_missing_files, align 8, !dbg !3607
  %tobool = trunc i8 %1 to i1, !dbg !3607, !ctir !142
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3608

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %errnum.addr, align 4, !dbg !3609
  %call = call zeroext i1 @nonexistent_file_errno(i32 %2), !dbg !3610
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !3611
  ret i1 %3, !dbg !3612
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @nonexistent_file_errno(i32 %errnum) #4 !dbg !3613 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !3616, metadata !DIExpression()), !dbg !3617
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !3618
  switch i32 %0, label %sw.default [
    i32 84, label %sw.bb
    i32 22, label %sw.bb
    i32 2, label %sw.bb
    i32 20, label %sw.bb
  ], !dbg !3619

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !3620
  br label %return, !dbg !3620

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3622
  br label %return, !dbg !3622

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !3623
  ret i1 %1, !dbg !3623
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat* %st) #4 !dbg !3624 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !3627, metadata !DIExpression()), !dbg !3628
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3629
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !3630, !ctir !1093
  store i64 -1, i64* %st_size, align 8, !dbg !3631, !ctir !29
  %1 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3632
  ret %struct.stat* %1, !dbg !3633
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @write_protected_non_symlink(i32 %fd_cwd, i8* %file, %struct.stat* %buf) #4 !dbg !3634 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !3637, metadata !DIExpression()), !dbg !3638
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3639, metadata !DIExpression()), !dbg !3640
  store %struct.stat* %buf, %struct.stat** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %buf.addr, metadata !3641, metadata !DIExpression()), !dbg !3642
  %call = call zeroext i1 @can_write_any_file(), !dbg !3643
  br i1 %call, label %if.then, label %if.end, !dbg !3645

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !3646
  br label %return, !dbg !3646

if.end:                                           ; preds = %entry
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !3647
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3649
  %2 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !3650
  %call1 = call i32 @cache_fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256), !dbg !3651
  %cmp = icmp ne i32 %call1, 0, !dbg !3652
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3653

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !3654
  br label %return, !dbg !3654

if.end3:                                          ; preds = %if.end
  %3 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !3655
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !3655, !ctir !1093
  %4 = load i32, i32* %st_mode, align 8, !dbg !3655, !ctir !168
  %and = and i32 %4, 61440, !dbg !3655
  %cmp4 = icmp eq i32 %and, 40960, !dbg !3655
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !3657

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !3658
  br label %return, !dbg !3658

if.end6:                                          ; preds = %if.end3
  %5 = load i32, i32* %fd_cwd.addr, align 4, !dbg !3659
  %6 = load i8*, i8** %file.addr, align 8, !dbg !3662
  %call7 = call i32 @faccessat(i32 %5, i8* %6, i32 2, i32 512) #10, !dbg !3663
  %cmp8 = icmp eq i32 %call7, 0, !dbg !3664
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3665

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !3666
  br label %return, !dbg !3666

if.end10:                                         ; preds = %if.end6
  %call11 = call i32* @__errno_location() #15, !dbg !3667
  %7 = load i32, i32* %call11, align 4, !dbg !3667, !ctir !7
  %cmp12 = icmp eq i32 %7, 13, !dbg !3668
  %8 = zext i1 %cmp12 to i64, !dbg !3667
  %cond = select i1 %cmp12, i32 1, i32 -1, !dbg !3667
  store i32 %cond, i32* %retval, align 4, !dbg !3669
  br label %return, !dbg !3669

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !3670
  ret i32 %9, !dbg !3670
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cache_fstatat(i32 %fd, i8* %file, %struct.stat* %st, i32 %flag) #4 !dbg !3671 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flag.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !3674, metadata !DIExpression()), !dbg !3675
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3676, metadata !DIExpression()), !dbg !3677
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !3678, metadata !DIExpression()), !dbg !3679
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3682
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !3684, !ctir !1093
  %1 = load i64, i64* %st_size, align 8, !dbg !3684, !ctir !29
  %cmp = icmp eq i64 %1, -1, !dbg !3685
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3686

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !3687
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3688
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3689
  %5 = load i32, i32* %flag.addr, align 4, !dbg !3690
  %call = call i32 @fstatat(i32 %2, i8* %3, %struct.stat* %4, i32 %5) #10, !dbg !3691
  %cmp1 = icmp ne i32 %call, 0, !dbg !3692
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3693

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3694
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !3696, !ctir !1093
  store i64 -2, i64* %st_size2, align 8, !dbg !3697, !ctir !29
  %call3 = call i32* @__errno_location() #15, !dbg !3698
  %7 = load i32, i32* %call3, align 4, !dbg !3698, !ctir !7
  %conv = sext i32 %7 to i64, !dbg !3698
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3699
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !3700, !ctir !1093
  store i64 %conv, i64* %st_ino, align 8, !dbg !3701, !ctir !260
  br label %if.end, !dbg !3702

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3703
  %st_size4 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 8, !dbg !3705, !ctir !1093
  %10 = load i64, i64* %st_size4, align 8, !dbg !3705, !ctir !29
  %cmp5 = icmp sle i64 0, %10, !dbg !3706
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !3707

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3708
  br label %return, !dbg !3708

if.end8:                                          ; preds = %if.end
  %11 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !3709
  %st_ino9 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1, !dbg !3710, !ctir !1093
  %12 = load i64, i64* %st_ino9, align 8, !dbg !3710, !ctir !260
  %conv10 = trunc i64 %12 to i32, !dbg !3711
  %call11 = call i32* @__errno_location() #15, !dbg !3712
  store i32 %conv10, i32* %call11, align 4, !dbg !3713, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !3714
  br label %return, !dbg !3714

return:                                           ; preds = %if.end8, %if.then7
  %13 = load i32, i32* %retval, align 4, !dbg !3715
  ret i32 %13, !dbg !3715
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @faccessat(i32, i8*, i32, i32) #2

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %dirp) #4 !dbg !3716 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8, !ctir !1174
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !3719, metadata !DIExpression()), !dbg !3720
  br label %while.body, !dbg !3721

while.body:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !3722, metadata !DIExpression()), !dbg !3724
  %0 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !3725
  %call = call %struct.dirent* @readdir(%struct.__dirstream* %0), !dbg !3726
  store %struct.dirent* %call, %struct.dirent** %dp, align 8, !dbg !3724
  %1 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3727
  %cmp = icmp eq %struct.dirent* %1, null, !dbg !3729
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3730

lor.lhs.false:                                    ; preds = %while.body
  %2 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3731
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %2, i32 0, i32 4, !dbg !3732, !ctir !1175
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !3731, !ctir !879
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %arraydecay), !dbg !3733
  br i1 %call1, label %if.end, label %if.then, !dbg !3734

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %3 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !3735
  ret %struct.dirent* %3, !dbg !3736

if.end:                                           ; preds = %lor.lhs.false
  br label %while.body, !dbg !3721, !llvm.loop !3737
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !3739 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %con = alloca i8*, align 8, !ctir !9
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3785, metadata !DIExpression()), !dbg !3786
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3787, metadata !DIExpression()), !dbg !3788
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3789, metadata !DIExpression()), !dbg !3790
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !3791, metadata !DIExpression()), !dbg !3792
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3793, metadata !DIExpression()), !dbg !3794
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3795
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !3797, !ctir !3743
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !3797
  %tobool = trunc i8 %1 to i1, !dbg !3797, !ctir !142
  br i1 %tobool, label %if.then, label %if.else40, !dbg !3798

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3799, metadata !DIExpression()), !dbg !3801
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3802
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !3803, !ctir !3743
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !3803
  %tobool1 = trunc i8 %3 to i1, !dbg !3803, !ctir !142
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !3804

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3805
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !3806, !ctir !3743
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !3806
  %tobool2 = trunc i8 %5 to i1, !dbg !3806, !ctir !142
  br label %lor.end, !dbg !3804

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !3801
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3801
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3807, metadata !DIExpression()), !dbg !3808
  %7 = load i8, i8* %all_errors, align 1, !dbg !3809
  %tobool4 = trunc i8 %7 to i1, !dbg !3809
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3810

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3811
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !3812, !ctir !3743
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3812
  %tobool5 = trunc i8 %9 to i1, !dbg !3812, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !3813
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3814
  %frombool6 = zext i1 %10 to i8, !dbg !3808
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3808
  call void @llvm.dbg.declare(metadata i8** %con, metadata !3815, metadata !DIExpression()), !dbg !3816
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !3817
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !3819
  %cmp = icmp sle i32 0, %call, !dbg !3820
  br i1 %cmp, label %if.then7, label %if.else, !dbg !3821

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !3822
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !3825
  %cmp9 = icmp slt i32 %call8, 0, !dbg !3826
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !3827

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !3828
  %tobool11 = trunc i8 %13 to i1, !dbg !3828
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !3831

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !3832
  %tobool12 = trunc i8 %14 to i1, !dbg !3832
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !3833

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #15, !dbg !3834
  %15 = load i32, i32* %call13, align 4, !dbg !3834, !ctir !7
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !3835
  br i1 %call14, label %if.end, label %if.then15, !dbg !3836

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #15, !dbg !3837
  %16 = load i32, i32* %call16, align 4, !dbg !3837, !ctir !7
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0)) #10, !dbg !3838
  %17 = load i8*, i8** %con, align 8, !dbg !3839
  %call18 = call i8* @quote(i8* %17), !dbg !3840
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !3841
  br label %if.end, !dbg !3841

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3842
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !3844, !ctir !3743
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !3844
  %tobool20 = trunc i8 %19 to i1, !dbg !3844, !ctir !142
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3845

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !3846
  call void @freecon(i8* %20), !dbg !3848
  store i1 false, i1* %retval, align 1, !dbg !3849
  br label %return, !dbg !3849

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !3850

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !3851
  call void @freecon(i8* %21), !dbg !3852
  br label %if.end39, !dbg !3853

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !3854
  %tobool24 = trunc i8 %22 to i1, !dbg !3854
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !3857

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !3858
  %tobool26 = trunc i8 %23 to i1, !dbg !3858
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !3859

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #15, !dbg !3860
  %24 = load i32, i32* %call28, align 4, !dbg !3860, !ctir !7
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !3861
  br i1 %call29, label %if.end34, label %if.then30, !dbg !3862

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #15, !dbg !3863
  %25 = load i32, i32* %call31, align 4, !dbg !3863, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.88, i64 0, i64 0)) #10, !dbg !3865
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !3866
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !3866
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !3867
  br label %if.end34, !dbg !3868

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3869
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !3871, !ctir !3743
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !3871
  %tobool36 = trunc i8 %28 to i1, !dbg !3871, !ctir !142
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !3872

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !3873
  br label %return, !dbg !3873

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !3874

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3875
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !3877, !ctir !3743
  %30 = load i8, i8* %set_security_context, align 1, !dbg !3877
  %tobool41 = trunc i8 %30 to i1, !dbg !3877, !ctir !142
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !3878

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !3879
  %tobool43 = trunc i8 %31 to i1, !dbg !3879
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !3882

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !3883
  %33 = load i32, i32* %mode.addr, align 4, !dbg !3884
  %call45 = call i32 @defaultcon(i8* %32, i32 %33), !dbg !3885
  %cmp46 = icmp slt i32 %call45, 0, !dbg !3886
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !3887

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #15, !dbg !3888
  %34 = load i32, i32* %call48, align 4, !dbg !3888, !ctir !7
  %call49 = call zeroext i1 @ignorable_ctx_err(i32 %34), !dbg !3889
  br i1 %call49, label %if.end54, label %if.then50, !dbg !3890

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #15, !dbg !3891
  %35 = load i32, i32* %call51, align 4, !dbg !3891, !ctir !7
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.89, i64 0, i64 0)) #10, !dbg !3893
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !3894
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !3894
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !3895
  br label %if.end54, !dbg !3896

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !3897

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !3898
  br label %return, !dbg !3898

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !3899
  ret i1 %37, !dbg !3899
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !3900 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3901, metadata !DIExpression()), !dbg !3902
  %0 = load i32, i32* %err.addr, align 4, !dbg !3903
  %cmp = icmp eq i32 %0, 95, !dbg !3904
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3905

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3906
  %cmp1 = icmp eq i32 %1, 61, !dbg !3907
  br label %lor.end, !dbg !3905

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3908
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !3909 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3913, metadata !DIExpression()), !dbg !3914
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3915, metadata !DIExpression()), !dbg !3916
  %call = call i32* @__errno_location() #15, !dbg !3917
  store i32 95, i32* %call, align 4, !dbg !3918, !ctir !7
  ret i32 -1, !dbg !3919
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !3920 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3921, metadata !DIExpression()), !dbg !3922
  %0 = load i32, i32* %err.addr, align 4, !dbg !3923
  %cmp = icmp eq i32 %0, 95, !dbg !3924
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3925

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3926
  %cmp1 = icmp eq i32 %1, 61, !dbg !3927
  br label %lor.end, !dbg !3925

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3928
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !3929 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !3932, metadata !DIExpression()), !dbg !3933
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !3934, metadata !DIExpression()), !dbg !3935
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3936, metadata !DIExpression()), !dbg !3937
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3938, metadata !DIExpression()), !dbg !3939
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !3940, metadata !DIExpression()), !dbg !3941
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3942
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !3943, !ctir !3743
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !3943
  %tobool = trunc i8 %1 to i1, !dbg !3943, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !3944

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3945
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !3946, !ctir !3743
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !3946
  %tobool2 = trunc i8 %3 to i1, !dbg !3946, !ctir !142
  br label %lor.end, !dbg !3944

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !3941
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !3941
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !3947, metadata !DIExpression()), !dbg !3948
  %5 = load i8, i8* %all_errors, align 1, !dbg !3949
  %tobool4 = trunc i8 %5 to i1, !dbg !3949
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !3950

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3951
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !3952, !ctir !3743
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !3952
  %tobool5 = trunc i8 %7 to i1, !dbg !3952, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !3953
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !3954
  %frombool6 = zext i1 %8 to i8, !dbg !3948
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !3948
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !3955
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !3957
  %tobool7 = trunc i8 %10 to i1, !dbg !3957
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !3958
  %tobool8 = trunc i8 %11 to i1, !dbg !3958
  %call = call zeroext i1 @restorecon(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !3959
  br i1 %call, label %if.end17, label %if.then, !dbg !3960

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !3961
  %tobool9 = trunc i8 %12 to i1, !dbg !3961
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !3964

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !3965
  %tobool10 = trunc i8 %13 to i1, !dbg !3965
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !3966

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #15, !dbg !3967
  %14 = load i32, i32* %call11, align 4, !dbg !3967, !ctir !7
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !3968
  br i1 %call12, label %if.end, label %if.then13, !dbg !3969

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !3970
  %15 = load i32, i32* %call14, align 4, !dbg !3970, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.90, i64 0, i64 0)) #10, !dbg !3971
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !3972
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !3972
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !3973
  br label %if.end, !dbg !3973

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !3974
  br label %return, !dbg !3974

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !3975
  br label %return, !dbg !3975

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !3976
  ret i1 %17, !dbg !3976
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !3977 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3980, metadata !DIExpression()), !dbg !3981
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !3982, metadata !DIExpression()), !dbg !3983
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !3984, metadata !DIExpression()), !dbg !3985
  %call = call i32* @__errno_location() #15, !dbg !3986
  store i32 95, i32* %call, align 4, !dbg !3987, !ctir !7
  ret i1 false, !dbg !3988
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !3989 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3993, metadata !DIExpression()), !dbg !3994
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !3995
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3996
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !3997, !ctir !3744
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !3998, !ctir !241
  ret void, !dbg !3999
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4000 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4001, metadata !DIExpression()), !dbg !4002
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4003
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4004
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4005, !ctir !3744
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4006, !ctir !241
  ret void, !dbg !4007
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4008 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4012, metadata !DIExpression()), !dbg !4013
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4014, metadata !DIExpression()), !dbg !4015
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4016, metadata !DIExpression()), !dbg !4017
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4018, metadata !DIExpression()), !dbg !4019
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4020, metadata !DIExpression()), !dbg !4021
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4022, metadata !DIExpression()), !dbg !4023
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4024
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4024
  br i1 %call, label %if.then, label %if.else, !dbg !4027

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4027

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.95, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2975, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4024
  unreachable, !dbg !4024

if.end:                                           ; preds = %if.then
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !4028
  store i8* %1, i8** @top_level_src_name, align 8, !dbg !4029
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !4030
  store i8* %2, i8** @top_level_dst_name, align 8, !dbg !4031
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4032, metadata !DIExpression()), !dbg !4033
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4033
  %3 = load i8*, i8** %src_name.addr, align 8, !dbg !4034
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !4035
  %5 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4036
  %tobool = trunc i8 %5 to i1, !dbg !4036
  %6 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4037
  %7 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4038
  %8 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4039
  %call1 = call zeroext i1 @copy_internal(i8* %3, i8* %4, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %6, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %7, i8* %8), !dbg !4040
  ret i1 %call1, !dbg !4041
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #9 !dbg !4042 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4045, metadata !DIExpression()), !dbg !4046
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4047
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4047
  br i1 %cmp, label %if.then, label %if.else, !dbg !4050

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4050

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.149, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2950, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4047
  unreachable, !dbg !4047

if.end:                                           ; preds = %if.then
  %1 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4051
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 0, !dbg !4051, !ctir !3743
  %2 = load i32, i32* %backup_type, align 8, !dbg !4051, !ctir !68
  %cmp1 = icmp ule i32 %2, 3, !dbg !4051
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !4054

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !4054

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.150, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2951, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4051
  unreachable, !dbg !4051

if.end4:                                          ; preds = %if.then2
  %3 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4055
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 3, !dbg !4055, !ctir !3743
  %4 = load i32, i32* %sparse_mode, align 4, !dbg !4055, !ctir !89
  %cmp5 = icmp eq i32 %4, 1, !dbg !4055
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !4055

lor.lhs.false:                                    ; preds = %if.end4
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4055
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4055, !ctir !3743
  %6 = load i32, i32* %sparse_mode6, align 4, !dbg !4055, !ctir !89
  %cmp7 = icmp eq i32 %6, 2, !dbg !4055
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !4055

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4055
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4055, !ctir !3743
  %8 = load i32, i32* %sparse_mode9, align 4, !dbg !4055, !ctir !89
  %cmp10 = icmp eq i32 %8, 3, !dbg !4055
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !4058

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %if.end13, !dbg !4058

if.else12:                                        ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.151, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2952, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4055
  unreachable, !dbg !4055

if.end13:                                         ; preds = %if.then11
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4059
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 36, !dbg !4059, !ctir !3743
  %10 = load i32, i32* %reflink_mode, align 8, !dbg !4059, !ctir !95
  %cmp14 = icmp eq i32 %10, 0, !dbg !4059
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !4059

lor.lhs.false15:                                  ; preds = %if.end13
  %11 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4059
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36, !dbg !4059, !ctir !3743
  %12 = load i32, i32* %reflink_mode16, align 8, !dbg !4059, !ctir !95
  %cmp17 = icmp eq i32 %12, 1, !dbg !4059
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !4059

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %13 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4059
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 36, !dbg !4059, !ctir !3743
  %14 = load i32, i32* %reflink_mode19, align 8, !dbg !4059, !ctir !95
  %cmp20 = icmp eq i32 %14, 2, !dbg !4059
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !4062

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false15, %if.end13
  br label %if.end23, !dbg !4062

if.else22:                                        ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.152, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2953, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4059
  unreachable, !dbg !4059

if.end23:                                         ; preds = %if.then21
  %15 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4063
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 8, !dbg !4063, !ctir !3743
  %16 = load i8, i8* %hard_link, align 1, !dbg !4063
  %tobool = trunc i8 %16 to i1, !dbg !4063, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.then25, !dbg !4063

land.lhs.true:                                    ; preds = %if.end23
  %17 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4063
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 29, !dbg !4063, !ctir !3743
  %18 = load i8, i8* %symbolic_link, align 4, !dbg !4063
  %tobool24 = trunc i8 %18 to i1, !dbg !4063, !ctir !142
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !4066

if.then25:                                        ; preds = %land.lhs.true, %if.end23
  br label %if.end27, !dbg !4066

if.else26:                                        ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.153, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2954, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4063
  unreachable, !dbg !4063

if.end27:                                         ; preds = %if.then25
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4067
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 36, !dbg !4067, !ctir !3743
  %20 = load i32, i32* %reflink_mode28, align 8, !dbg !4067, !ctir !95
  %cmp29 = icmp eq i32 %20, 2, !dbg !4067
  br i1 %cmp29, label %land.lhs.true30, label %if.then33, !dbg !4067

land.lhs.true30:                                  ; preds = %if.end27
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4067
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !4067, !ctir !3743
  %22 = load i32, i32* %sparse_mode31, align 4, !dbg !4067, !ctir !89
  %cmp32 = icmp ne i32 %22, 2, !dbg !4067
  br i1 %cmp32, label %if.else34, label %if.then33, !dbg !4070

if.then33:                                        ; preds = %land.lhs.true30, %if.end27
  br label %if.end35, !dbg !4070

if.else34:                                        ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.154, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2957, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4067
  unreachable, !dbg !4067

if.end35:                                         ; preds = %if.then33
  ret i1 true, !dbg !4071
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4072 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !338
  %dst_sb = alloca %struct.stat, align 8, !ctir !338
  %src_mode = alloca i32, align 4, !ctir !239
  %dst_mode = alloca i32, align 4, !ctir !239
  %dst_mode_bits = alloca i32, align 4, !ctir !239
  %omitted_permissions = alloca i32, align 4, !ctir !239
  %restore_dst_mode = alloca i8, align 1, !ctir !142
  %earlier_file = alloca i8*, align 8, !ctir !9
  %dst_backup = alloca i8*, align 8, !ctir !9
  %delayed_ok = alloca i8, align 1, !ctir !142
  %copied_as_regular = alloca i8, align 1, !ctir !142
  %dest_is_symlink = alloca i8, align 1, !ctir !142
  %have_dst_lstat = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %name = alloca i8*, align 8, !ctir !116
  %dereference69 = alloca i8, align 1, !ctir !142
  %use_lstat = alloca i8, align 1, !ctir !142
  %fstatat_flags = alloca i32, align 4, !ctir !7
  %return_now = alloca i8, align 1, !ctir !142
  %options = alloca i32, align 4, !ctir !7
  %srcbase = alloca i8*, align 8, !ctir !116
  %fmt = alloca i8*, align 8, !ctir !116
  %tmp_backup = alloca i8*, align 8, !ctir !9
  %__old = alloca i8*, align 8, !ctir !116
  %__len = alloca i64, align 8, !ctir !55
  %__new = alloca i8*, align 8, !ctir !9
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !142
  %tmp_buf = alloca %struct.stat, align 8, !ctir !338
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !337
  %dir = alloca %struct.dir_list*, align 8, !ctir !375
  %dot_sb = alloca %struct.stat, align 8, !ctir !338
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !338
  %dst_parent = alloca i8*, align 8, !ctir !9
  %in_current_dir = alloca i8, align 1, !ctir !142
  %err = alloca i32, align 4, !ctir !7
  %replace = alloca i8, align 1, !ctir !142
  %src_link_val = alloca i8*, align 8, !ctir !9
  %symlink_err = alloca i32, align 4, !ctir !7
  %dest_link_val = alloca i8*, align 8, !ctir !9
  %sb = alloca %struct.stat, align 8, !ctir !338
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !390
  %tmp955 = alloca %struct.timespec, align 8
  %tmp958 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4075, metadata !DIExpression()), !dbg !4076
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4081, metadata !DIExpression()), !dbg !4082
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4083, metadata !DIExpression()), !dbg !4084
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4085, metadata !DIExpression()), !dbg !4086
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4087, metadata !DIExpression()), !dbg !4088
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4089, metadata !DIExpression()), !dbg !4090
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4091, metadata !DIExpression()), !dbg !4092
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4093, metadata !DIExpression()), !dbg !4094
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4095, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4097, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4099, metadata !DIExpression()), !dbg !4100
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4101, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4103, metadata !DIExpression()), !dbg !4104
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4105, metadata !DIExpression()), !dbg !4106
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4107, metadata !DIExpression()), !dbg !4108
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4108
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4109, metadata !DIExpression()), !dbg !4110
  store i8* null, i8** %earlier_file, align 8, !dbg !4110
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4111, metadata !DIExpression()), !dbg !4112
  store i8* null, i8** %dst_backup, align 8, !dbg !4112
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4113, metadata !DIExpression()), !dbg !4114
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4115, metadata !DIExpression()), !dbg !4116
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4116
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4117, metadata !DIExpression()), !dbg !4118
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4118
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4119, metadata !DIExpression()), !dbg !4120
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4120
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4121
  store i8 0, i8* %0, align 1, !dbg !4122, !ctir !142
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4123, metadata !DIExpression()), !dbg !4124
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4125
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4126, !ctir !3743
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4126, !ctir !7
  store i32 %2, i32* %rename_errno, align 4, !dbg !4124
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4127
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4129, !ctir !3743
  %4 = load i8, i8* %move_mode, align 8, !dbg !4129
  %tobool = trunc i8 %4 to i1, !dbg !4129, !ctir !142
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4130

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4131
  %cmp = icmp slt i32 %5, 0, !dbg !4134
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4135

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4136
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4137
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4138
  %tobool4 = icmp ne i32 %call, 0, !dbg !4138
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4138

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #15, !dbg !4139
  %8 = load i32, i32* %call5, align 4, !dbg !4139, !ctir !7
  br label %cond.end, !dbg !4138

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4138

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4138
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4140
  br label %if.end, !dbg !4141

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4142
  %cmp6 = icmp eq i32 %9, 0, !dbg !4143
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4144
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4144
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4145
  %tobool8 = icmp ne i8* %10, null, !dbg !4145
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4147

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4148
  %tobool10 = trunc i8 %11 to i1, !dbg !4148
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4149
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4150
  store i8 %frombool11, i8* %12, align 1, !dbg !4150, !ctir !142
  br label %if.end12, !dbg !4151

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4152

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4153
  %cmp14 = icmp eq i32 %13, 0, !dbg !4155
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4156

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4157
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4158, !ctir !3743
  %15 = load i8, i8* %last_file, align 1, !dbg !4158
  %tobool16 = trunc i8 %15 to i1, !dbg !4158, !ctir !142
  br i1 %tobool16, label %if.end51, label %if.then20, !dbg !4153

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4159
  %cmp18 = icmp ne i32 %16, 17, !dbg !4160
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4161

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4162
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4163, !ctir !3743
  %18 = load i32, i32* %interactive, align 8, !dbg !4163, !ctir !83
  %cmp19 = icmp ne i32 %18, 2, !dbg !4164
  br i1 %cmp19, label %if.then20, label %if.end51, !dbg !4156

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4165, metadata !DIExpression()), !dbg !4167
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4168
  %cmp21 = icmp eq i32 %19, 0, !dbg !4169
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4168

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4170
  br label %cond.end24, !dbg !4168

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4171
  br label %cond.end24, !dbg !4168

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4168
  store i8* %cond25, i8** %name, align 8, !dbg !4167
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4172
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4172, !ctir !3743
  %23 = load i32, i32* %dereference, align 4, !dbg !4172, !ctir !76
  %cmp26 = icmp eq i32 %23, 2, !dbg !4172
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !4172

cond.true27:                                      ; preds = %cond.end24
  %24 = load i8*, i8** %name, align 8, !dbg !4172
  %call28 = call i32 @lstat(i8* %24, %struct.stat* %src_sb) #10, !dbg !4172
  br label %cond.end31, !dbg !4172

cond.false29:                                     ; preds = %cond.end24
  %25 = load i8*, i8** %name, align 8, !dbg !4172
  %call30 = call i32 @stat(i8* %25, %struct.stat* %src_sb) #10, !dbg !4172
  br label %cond.end31, !dbg !4172

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !4172
  %cmp33 = icmp ne i32 %cond32, 0, !dbg !4174
  br i1 %cmp33, label %if.then34, label %if.end38, !dbg !4175

if.then34:                                        ; preds = %cond.end31
  %call35 = call i32* @__errno_location() #15, !dbg !4176
  %26 = load i32, i32* %call35, align 4, !dbg !4176, !ctir !7
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !4178
  %27 = load i8*, i8** %name, align 8, !dbg !4179
  %call37 = call i8* @quotearg_style(i32 4, i8* %27), !dbg !4179
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %26, i8* %call36, i8* %call37), !dbg !4180
  store i1 false, i1* %retval, align 1, !dbg !4181
  br label %return, !dbg !4181

if.end38:                                         ; preds = %cond.end31
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4182, !ctir !338
  %28 = load i32, i32* %st_mode, align 8, !dbg !4182, !ctir !168
  store i32 %28, i32* %src_mode, align 4, !dbg !4183
  %29 = load i32, i32* %src_mode, align 4, !dbg !4184
  %and = and i32 %29, 61440, !dbg !4184
  %cmp39 = icmp eq i32 %and, 16384, !dbg !4184
  br i1 %cmp39, label %land.lhs.true, label %if.end50, !dbg !4186

land.lhs.true:                                    ; preds = %if.end38
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4187
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 27, !dbg !4188, !ctir !3743
  %31 = load i8, i8* %recursive, align 2, !dbg !4188
  %tobool40 = trunc i8 %31 to i1, !dbg !4188, !ctir !142
  br i1 %tobool40, label %if.end50, label %if.then41, !dbg !4189

if.then41:                                        ; preds = %land.lhs.true
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4190
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 10, !dbg !4192, !ctir !3743
  %33 = load i8, i8* %install_mode, align 1, !dbg !4192
  %tobool42 = trunc i8 %33 to i1, !dbg !4192, !ctir !142
  br i1 %tobool42, label %cond.false45, label %cond.true43, !dbg !4193

cond.true43:                                      ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.98, i64 0, i64 0)) #10, !dbg !4194
  br label %cond.end47, !dbg !4193

cond.false45:                                     ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.99, i64 0, i64 0)) #10, !dbg !4195
  br label %cond.end47, !dbg !4193

cond.end47:                                       ; preds = %cond.false45, %cond.true43
  %cond48 = phi i8* [ %call44, %cond.true43 ], [ %call46, %cond.false45 ], !dbg !4193
  %34 = load i8*, i8** %src_name.addr, align 8, !dbg !4196
  %call49 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !4196
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond48, i8* %call49), !dbg !4197
  store i1 false, i1* %retval, align 1, !dbg !4198
  br label %return, !dbg !4198

if.end50:                                         ; preds = %land.lhs.true, %if.end38
  br label %if.end51, !dbg !4199

if.end51:                                         ; preds = %if.end50, %lor.lhs.false, %cond.true15
  %35 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4200
  %tobool52 = trunc i8 %35 to i1, !dbg !4200
  br i1 %tobool52, label %land.lhs.true53, label %if.end68, !dbg !4202

land.lhs.true53:                                  ; preds = %if.end51
  %36 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4203
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %36, i32 0, i32 38, !dbg !4204, !ctir !3743
  %37 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !4204, !ctir !241
  %tobool54 = icmp ne %struct.hash_table* %37, null, !dbg !4203
  br i1 %tobool54, label %if.then55, label %if.end68, !dbg !4205

if.then55:                                        ; preds = %land.lhs.true53
  %38 = load i32, i32* %src_mode, align 4, !dbg !4206
  %and56 = and i32 %38, 61440, !dbg !4206
  %cmp57 = icmp eq i32 %and56, 16384, !dbg !4206
  br i1 %cmp57, label %if.end66, label %land.lhs.true58, !dbg !4209

land.lhs.true58:                                  ; preds = %if.then55
  %39 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4210
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %39, i32 0, i32 0, !dbg !4211, !ctir !3743
  %40 = load i32, i32* %backup_type, align 8, !dbg !4211, !ctir !68
  %cmp59 = icmp eq i32 %40, 0, !dbg !4212
  br i1 %cmp59, label %land.lhs.true60, label %if.end66, !dbg !4213

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4214
  %src_info61 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 38, !dbg !4215, !ctir !3743
  %42 = load %struct.hash_table*, %struct.hash_table** %src_info61, align 8, !dbg !4215, !ctir !241
  %43 = load i8*, i8** %src_name.addr, align 8, !dbg !4216
  %call62 = call zeroext i1 @seen_file(%struct.hash_table* %42, i8* %43, %struct.stat* %src_sb), !dbg !4217
  br i1 %call62, label %if.then63, label %if.end66, !dbg !4218

if.then63:                                        ; preds = %land.lhs.true60
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.100, i64 0, i64 0)) #10, !dbg !4219
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !4221
  %call65 = call i8* @quotearg_style(i32 4, i8* %44), !dbg !4221
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call64, i8* %call65), !dbg !4222
  store i1 true, i1* %retval, align 1, !dbg !4223
  br label %return, !dbg !4223

if.end66:                                         ; preds = %land.lhs.true60, %land.lhs.true58, %if.then55
  %45 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4224
  %src_info67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %45, i32 0, i32 38, !dbg !4225, !ctir !3743
  %46 = load %struct.hash_table*, %struct.hash_table** %src_info67, align 8, !dbg !4225, !ctir !241
  %47 = load i8*, i8** %src_name.addr, align 8, !dbg !4226
  call void @record_file(%struct.hash_table* %46, i8* %47, %struct.stat* %src_sb), !dbg !4227
  br label %if.end68, !dbg !4228

if.end68:                                         ; preds = %if.end66, %land.lhs.true53, %if.end51
  call void @llvm.dbg.declare(metadata i8* %dereference69, metadata !4229, metadata !DIExpression()), !dbg !4230
  %48 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4231
  %49 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4232
  %tobool70 = trunc i8 %49 to i1, !dbg !4232
  %call71 = call zeroext i1 @should_dereference(%struct.cp_options* %48, i1 zeroext %tobool70) #14, !dbg !4233
  %frombool72 = zext i1 %call71 to i8, !dbg !4230
  store i8 %frombool72, i8* %dereference69, align 1, !dbg !4230
  %50 = load i8, i8* %new_dst.addr, align 1, !dbg !4234
  %tobool73 = trunc i8 %50 to i1, !dbg !4234
  br i1 %tobool73, label %if.end348, label %if.then74, !dbg !4236

if.then74:                                        ; preds = %if.end68
  %51 = load i32, i32* %rename_errno, align 4, !dbg !4237
  %cmp75 = icmp eq i32 %51, 17, !dbg !4240
  br i1 %cmp75, label %land.lhs.true76, label %if.then79, !dbg !4241

land.lhs.true76:                                  ; preds = %if.then74
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4242
  %interactive77 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %52, i32 0, i32 2, !dbg !4243, !ctir !3743
  %53 = load i32, i32* %interactive77, align 8, !dbg !4243, !ctir !83
  %cmp78 = icmp eq i32 %53, 2, !dbg !4244
  br i1 %cmp78, label %if.end125, label %if.then79, !dbg !4245

if.then79:                                        ; preds = %land.lhs.true76, %if.then74
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !4246, metadata !DIExpression()), !dbg !4248
  %54 = load i32, i32* %src_mode, align 4, !dbg !4249
  %and80 = and i32 %54, 61440, !dbg !4249
  %cmp81 = icmp eq i32 %and80, 32768, !dbg !4249
  br i1 %cmp81, label %lor.lhs.false90, label %land.lhs.true82, !dbg !4250

land.lhs.true82:                                  ; preds = %if.then79
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4251
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 5, !dbg !4252, !ctir !3743
  %56 = load i8, i8* %copy_as_regular, align 4, !dbg !4252
  %tobool83 = trunc i8 %56 to i1, !dbg !4252, !ctir !142
  br i1 %tobool83, label %lor.lhs.false84, label %lor.end, !dbg !4253

lor.lhs.false84:                                  ; preds = %land.lhs.true82
  %57 = load i32, i32* %src_mode, align 4, !dbg !4254
  %and85 = and i32 %57, 61440, !dbg !4254
  %cmp86 = icmp eq i32 %and85, 16384, !dbg !4254
  br i1 %cmp86, label %lor.end, label %lor.lhs.false87, !dbg !4255

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %58 = load i32, i32* %src_mode, align 4, !dbg !4256
  %and88 = and i32 %58, 61440, !dbg !4256
  %cmp89 = icmp eq i32 %and88, 40960, !dbg !4256
  br i1 %cmp89, label %lor.end, label %lor.lhs.false90, !dbg !4257

lor.lhs.false90:                                  ; preds = %lor.lhs.false87, %if.then79
  %59 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4258
  %move_mode91 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %59, i32 0, i32 9, !dbg !4259, !ctir !3743
  %60 = load i8, i8* %move_mode91, align 8, !dbg !4259
  %tobool92 = trunc i8 %60 to i1, !dbg !4259, !ctir !142
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !4260

lor.lhs.false93:                                  ; preds = %lor.lhs.false90
  %61 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4261
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %61, i32 0, i32 29, !dbg !4262, !ctir !3743
  %62 = load i8, i8* %symbolic_link, align 4, !dbg !4262
  %tobool94 = trunc i8 %62 to i1, !dbg !4262, !ctir !142
  br i1 %tobool94, label %lor.end, label %lor.lhs.false95, !dbg !4263

lor.lhs.false95:                                  ; preds = %lor.lhs.false93
  %63 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4264
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %63, i32 0, i32 8, !dbg !4265, !ctir !3743
  %64 = load i8, i8* %hard_link, align 1, !dbg !4265
  %tobool96 = trunc i8 %64 to i1, !dbg !4265, !ctir !142
  br i1 %tobool96, label %lor.end, label %lor.lhs.false97, !dbg !4266

lor.lhs.false97:                                  ; preds = %lor.lhs.false95
  %65 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4267
  %backup_type98 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %65, i32 0, i32 0, !dbg !4268, !ctir !3743
  %66 = load i32, i32* %backup_type98, align 8, !dbg !4268, !ctir !68
  %cmp99 = icmp ne i32 %66, 0, !dbg !4269
  br i1 %cmp99, label %lor.end, label %lor.rhs, !dbg !4270

lor.rhs:                                          ; preds = %lor.lhs.false97
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4271
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 6, !dbg !4272, !ctir !3743
  %68 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !4272
  %tobool100 = trunc i8 %68 to i1, !dbg !4272, !ctir !142
  br label %lor.end, !dbg !4270

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false97, %lor.lhs.false95, %lor.lhs.false93, %lor.lhs.false90, %lor.lhs.false87, %lor.lhs.false84, %land.lhs.true82
  %69 = phi i1 [ true, %lor.lhs.false97 ], [ true, %lor.lhs.false95 ], [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false90 ], [ true, %lor.lhs.false87 ], [ true, %lor.lhs.false84 ], [ true, %land.lhs.true82 ], [ %tobool100, %lor.rhs ]
  %frombool101 = zext i1 %69 to i8, !dbg !4248
  store i8 %frombool101, i8* %use_lstat, align 1, !dbg !4248
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !4273, metadata !DIExpression()), !dbg !4274
  %70 = load i8, i8* %use_lstat, align 1, !dbg !4275
  %tobool102 = trunc i8 %70 to i1, !dbg !4275
  %71 = zext i1 %tobool102 to i64, !dbg !4275
  %cond103 = select i1 %tobool102, i32 256, i32 0, !dbg !4275
  store i32 %cond103, i32* %fstatat_flags, align 4, !dbg !4274
  %72 = load i8*, i8** %dst_name.addr, align 8, !dbg !4276
  %73 = load i32, i32* %fstatat_flags, align 4, !dbg !4278
  %call104 = call i32 @fstatat(i32 -100, i8* %72, %struct.stat* %dst_sb, i32 %73) #10, !dbg !4279
  %cmp105 = icmp eq i32 %call104, 0, !dbg !4280
  br i1 %cmp105, label %if.then106, label %if.else, !dbg !4281

if.then106:                                       ; preds = %lor.end
  %74 = load i8, i8* %use_lstat, align 1, !dbg !4282
  %tobool107 = trunc i8 %74 to i1, !dbg !4282
  %frombool108 = zext i1 %tobool107 to i8, !dbg !4284
  store i8 %frombool108, i8* %have_dst_lstat, align 1, !dbg !4284
  store i32 17, i32* %rename_errno, align 4, !dbg !4285
  br label %if.end124, !dbg !4286

if.else:                                          ; preds = %lor.end
  %call109 = call i32* @__errno_location() #15, !dbg !4287
  %75 = load i32, i32* %call109, align 4, !dbg !4287, !ctir !7
  %cmp110 = icmp eq i32 %75, 40, !dbg !4290
  br i1 %cmp110, label %land.lhs.true111, label %if.else114, !dbg !4291

land.lhs.true111:                                 ; preds = %if.else
  %76 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4292
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %76, i32 0, i32 7, !dbg !4293, !ctir !3743
  %77 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !4293
  %tobool112 = trunc i8 %77 to i1, !dbg !4293, !ctir !142
  br i1 %tobool112, label %if.then113, label %if.else114, !dbg !4294

if.then113:                                       ; preds = %land.lhs.true111
  br label %if.end123, !dbg !4294

if.else114:                                       ; preds = %land.lhs.true111, %if.else
  %call115 = call i32* @__errno_location() #15, !dbg !4295
  %78 = load i32, i32* %call115, align 4, !dbg !4295, !ctir !7
  %cmp116 = icmp ne i32 %78, 2, !dbg !4297
  br i1 %cmp116, label %if.then117, label %if.else121, !dbg !4298

if.then117:                                       ; preds = %if.else114
  %call118 = call i32* @__errno_location() #15, !dbg !4299
  %79 = load i32, i32* %call118, align 4, !dbg !4299, !ctir !7
  %call119 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !4301
  %80 = load i8*, i8** %dst_name.addr, align 8, !dbg !4302
  %call120 = call i8* @quotearg_style(i32 4, i8* %80), !dbg !4302
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %79, i8* %call119, i8* %call120), !dbg !4303
  store i1 false, i1* %retval, align 1, !dbg !4304
  br label %return, !dbg !4304

if.else121:                                       ; preds = %if.else114
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4305
  br label %if.end122

if.end122:                                        ; preds = %if.else121
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then113
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then106
  br label %if.end125, !dbg !4306

if.end125:                                        ; preds = %if.end124, %land.lhs.true76
  %81 = load i32, i32* %rename_errno, align 4, !dbg !4307
  %cmp126 = icmp eq i32 %81, 17, !dbg !4309
  br i1 %cmp126, label %if.then127, label %if.end347, !dbg !4310

if.then127:                                       ; preds = %if.end125
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !4311, metadata !DIExpression()), !dbg !4313
  store i8 0, i8* %return_now, align 1, !dbg !4313
  %82 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4314
  %interactive128 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %82, i32 0, i32 2, !dbg !4316, !ctir !3743
  %83 = load i32, i32* %interactive128, align 8, !dbg !4316, !ctir !83
  %cmp129 = icmp ne i32 %83, 2, !dbg !4317
  br i1 %cmp129, label %land.lhs.true130, label %if.end136, !dbg !4318

land.lhs.true130:                                 ; preds = %if.then127
  %84 = load i8*, i8** %src_name.addr, align 8, !dbg !4319
  %85 = load i8*, i8** %dst_name.addr, align 8, !dbg !4320
  %86 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4321
  %call131 = call zeroext i1 @same_file_ok(i8* %84, %struct.stat* %src_sb, i8* %85, %struct.stat* %dst_sb, %struct.cp_options* %86, i8* %return_now), !dbg !4322
  br i1 %call131, label %if.end136, label %if.then132, !dbg !4323

if.then132:                                       ; preds = %land.lhs.true130
  %call133 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.101, i64 0, i64 0)) #10, !dbg !4324
  %87 = load i8*, i8** %src_name.addr, align 8, !dbg !4326
  %call134 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %87), !dbg !4326
  %88 = load i8*, i8** %dst_name.addr, align 8, !dbg !4327
  %call135 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %88), !dbg !4327
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call133, i8* %call134, i8* %call135), !dbg !4328
  store i1 false, i1* %retval, align 1, !dbg !4329
  br label %return, !dbg !4329

if.end136:                                        ; preds = %land.lhs.true130, %if.then127
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4330
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 30, !dbg !4332, !ctir !3743
  %90 = load i8, i8* %update, align 1, !dbg !4332
  %tobool137 = trunc i8 %90 to i1, !dbg !4332, !ctir !142
  br i1 %tobool137, label %land.lhs.true138, label %if.end167, !dbg !4333

land.lhs.true138:                                 ; preds = %if.end136
  %91 = load i32, i32* %src_mode, align 4, !dbg !4334
  %and139 = and i32 %91, 61440, !dbg !4334
  %cmp140 = icmp eq i32 %and139, 16384, !dbg !4334
  br i1 %cmp140, label %if.end167, label %if.then141, !dbg !4335

if.then141:                                       ; preds = %land.lhs.true138
  call void @llvm.dbg.declare(metadata i32* %options, metadata !4336, metadata !DIExpression()), !dbg !4338
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4339
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 16, !dbg !4340, !ctir !3743
  %93 = load i8, i8* %preserve_timestamps, align 1, !dbg !4340
  %tobool142 = trunc i8 %93 to i1, !dbg !4340, !ctir !142
  br i1 %tobool142, label %land.rhs, label %land.end148, !dbg !4341

land.rhs:                                         ; preds = %if.then141
  %94 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4342
  %move_mode143 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %94, i32 0, i32 9, !dbg !4343, !ctir !3743
  %95 = load i8, i8* %move_mode143, align 8, !dbg !4343
  %tobool144 = trunc i8 %95 to i1, !dbg !4343, !ctir !142
  br i1 %tobool144, label %land.rhs145, label %land.end, !dbg !4344

land.rhs145:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4345, !ctir !338
  %96 = load i64, i64* %st_dev, align 8, !dbg !4345, !ctir !263
  %st_dev146 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4346, !ctir !338
  %97 = load i64, i64* %st_dev146, align 8, !dbg !4346, !ctir !263
  %cmp147 = icmp eq i64 %96, %97, !dbg !4347
  br label %land.end

land.end:                                         ; preds = %land.rhs145, %land.rhs
  %98 = phi i1 [ false, %land.rhs ], [ %cmp147, %land.rhs145 ], !dbg !4348
  %lnot = xor i1 %98, true, !dbg !4349
  br label %land.end148

land.end148:                                      ; preds = %land.end, %if.then141
  %99 = phi i1 [ false, %if.then141 ], [ %lnot, %land.end ], !dbg !4348
  %100 = zext i1 %99 to i64, !dbg !4350
  %cond149 = select i1 %99, i32 1, i32 0, !dbg !4350
  store i32 %cond149, i32* %options, align 4, !dbg !4338
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !4351
  %102 = load i32, i32* %options, align 4, !dbg !4353
  %call150 = call i32 @utimecmp(i8* %101, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %102), !dbg !4354
  %cmp151 = icmp sle i32 0, %call150, !dbg !4355
  br i1 %cmp151, label %if.then152, label %if.end166, !dbg !4356

if.then152:                                       ; preds = %land.end148
  %103 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4357
  %tobool153 = icmp ne i8* %103, null, !dbg !4357
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !4360

if.then154:                                       ; preds = %if.then152
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4361
  store i8 1, i8* %104, align 1, !dbg !4362, !ctir !142
  br label %if.end155, !dbg !4363

if.end155:                                        ; preds = %if.then154, %if.then152
  %105 = load i8*, i8** %dst_name.addr, align 8, !dbg !4364
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4365, !ctir !338
  %106 = load i64, i64* %st_ino, align 8, !dbg !4365, !ctir !260
  %st_dev156 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4366, !ctir !338
  %107 = load i64, i64* %st_dev156, align 8, !dbg !4366, !ctir !263
  %call157 = call i8* @remember_copied(i8* %105, i64 %106, i64 %107), !dbg !4367
  store i8* %call157, i8** %earlier_file, align 8, !dbg !4368
  %108 = load i8*, i8** %earlier_file, align 8, !dbg !4369
  %tobool158 = icmp ne i8* %108, null, !dbg !4369
  br i1 %tobool158, label %if.then159, label %if.end165, !dbg !4371

if.then159:                                       ; preds = %if.end155
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !4372
  %110 = load i8*, i8** %dst_name.addr, align 8, !dbg !4375
  %111 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4376
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %111, i32 0, i32 31, !dbg !4377, !ctir !3743
  %112 = load i8, i8* %verbose, align 2, !dbg !4377
  %tobool160 = trunc i8 %112 to i1, !dbg !4377, !ctir !142
  %113 = load i8, i8* %dereference69, align 1, !dbg !4378
  %tobool161 = trunc i8 %113 to i1, !dbg !4378
  %call162 = call zeroext i1 @create_hard_link(i8* %109, i8* %110, i1 zeroext true, i1 zeroext %tobool160, i1 zeroext %tobool161), !dbg !4379
  br i1 %call162, label %if.end164, label %if.then163, !dbg !4380

if.then163:                                       ; preds = %if.then159
  br label %un_backup, !dbg !4381

if.end164:                                        ; preds = %if.then159
  br label %if.end165, !dbg !4383

if.end165:                                        ; preds = %if.end164, %if.end155
  store i1 true, i1* %retval, align 1, !dbg !4384
  br label %return, !dbg !4384

if.end166:                                        ; preds = %land.end148
  br label %if.end167, !dbg !4385

if.end167:                                        ; preds = %if.end166, %land.lhs.true138, %if.end136
  %114 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4386
  %move_mode168 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %114, i32 0, i32 9, !dbg !4388, !ctir !3743
  %115 = load i8, i8* %move_mode168, align 8, !dbg !4388
  %tobool169 = trunc i8 %115 to i1, !dbg !4388, !ctir !142
  br i1 %tobool169, label %if.then170, label %if.else177, !dbg !4389

if.then170:                                       ; preds = %if.end167
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4390
  %117 = load i8*, i8** %dst_name.addr, align 8, !dbg !4393
  %call171 = call zeroext i1 @abandon_move(%struct.cp_options* %116, i8* %117, %struct.stat* %dst_sb), !dbg !4394
  br i1 %call171, label %if.then172, label %if.end176, !dbg !4395

if.then172:                                       ; preds = %if.then170
  %118 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4396
  %tobool173 = icmp ne i8* %118, null, !dbg !4396
  br i1 %tobool173, label %if.then174, label %if.end175, !dbg !4399

if.then174:                                       ; preds = %if.then172
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4400
  store i8 1, i8* %119, align 1, !dbg !4401, !ctir !142
  br label %if.end175, !dbg !4402

if.end175:                                        ; preds = %if.then174, %if.then172
  store i1 true, i1* %retval, align 1, !dbg !4403
  br label %return, !dbg !4403

if.end176:                                        ; preds = %if.then170
  br label %if.end190, !dbg !4404

if.else177:                                       ; preds = %if.end167
  %120 = load i32, i32* %src_mode, align 4, !dbg !4405
  %and178 = and i32 %120, 61440, !dbg !4405
  %cmp179 = icmp eq i32 %and178, 16384, !dbg !4405
  br i1 %cmp179, label %if.end189, label %land.lhs.true180, !dbg !4408

land.lhs.true180:                                 ; preds = %if.else177
  %121 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4409
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %121, i32 0, i32 2, !dbg !4410, !ctir !3743
  %122 = load i32, i32* %interactive181, align 8, !dbg !4410, !ctir !83
  %cmp182 = icmp eq i32 %122, 2, !dbg !4411
  br i1 %cmp182, label %if.then188, label %lor.lhs.false183, !dbg !4412

lor.lhs.false183:                                 ; preds = %land.lhs.true180
  %123 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4413
  %interactive184 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %123, i32 0, i32 2, !dbg !4414, !ctir !3743
  %124 = load i32, i32* %interactive184, align 8, !dbg !4414, !ctir !83
  %cmp185 = icmp eq i32 %124, 3, !dbg !4415
  br i1 %cmp185, label %land.lhs.true186, label %if.end189, !dbg !4416

land.lhs.true186:                                 ; preds = %lor.lhs.false183
  %125 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4417
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !4418
  %call187 = call zeroext i1 @overwrite_ok(%struct.cp_options* %125, i8* %126, %struct.stat* %dst_sb), !dbg !4419
  br i1 %call187, label %if.end189, label %if.then188, !dbg !4420

if.then188:                                       ; preds = %land.lhs.true186, %land.lhs.true180
  store i1 true, i1* %retval, align 1, !dbg !4421
  br label %return, !dbg !4421

if.end189:                                        ; preds = %land.lhs.true186, %lor.lhs.false183, %if.else177
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end176
  %127 = load i8, i8* %return_now, align 1, !dbg !4422
  %tobool191 = trunc i8 %127 to i1, !dbg !4422
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !4424

if.then192:                                       ; preds = %if.end190
  store i1 true, i1* %retval, align 1, !dbg !4425
  br label %return, !dbg !4425

if.end193:                                        ; preds = %if.end190
  %st_mode194 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4426, !ctir !338
  %128 = load i32, i32* %st_mode194, align 8, !dbg !4426, !ctir !168
  %and195 = and i32 %128, 61440, !dbg !4426
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !4426
  br i1 %cmp196, label %if.end224, label %if.then197, !dbg !4428

if.then197:                                       ; preds = %if.end193
  %129 = load i32, i32* %src_mode, align 4, !dbg !4429
  %and198 = and i32 %129, 61440, !dbg !4429
  %cmp199 = icmp eq i32 %and198, 16384, !dbg !4429
  br i1 %cmp199, label %if.then200, label %if.end212, !dbg !4432

if.then200:                                       ; preds = %if.then197
  %130 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4433
  %move_mode201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %130, i32 0, i32 9, !dbg !4436, !ctir !3743
  %131 = load i8, i8* %move_mode201, align 8, !dbg !4436
  %tobool202 = trunc i8 %131 to i1, !dbg !4436, !ctir !142
  br i1 %tobool202, label %land.lhs.true203, label %if.else207, !dbg !4437

land.lhs.true203:                                 ; preds = %if.then200
  %132 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4438
  %backup_type204 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %132, i32 0, i32 0, !dbg !4439, !ctir !3743
  %133 = load i32, i32* %backup_type204, align 8, !dbg !4439, !ctir !68
  %cmp205 = icmp ne i32 %133, 0, !dbg !4440
  br i1 %cmp205, label %if.then206, label %if.else207, !dbg !4441

if.then206:                                       ; preds = %land.lhs.true203
  br label %if.end211, !dbg !4442

if.else207:                                       ; preds = %land.lhs.true203, %if.then200
  %call208 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.102, i64 0, i64 0)) #10, !dbg !4444
  %134 = load i8*, i8** %dst_name.addr, align 8, !dbg !4446
  %call209 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %134), !dbg !4446
  %135 = load i8*, i8** %src_name.addr, align 8, !dbg !4447
  %call210 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %135), !dbg !4447
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call208, i8* %call209, i8* %call210), !dbg !4448
  store i1 false, i1* %retval, align 1, !dbg !4449
  br label %return, !dbg !4449

if.end211:                                        ; preds = %if.then206
  br label %if.end212, !dbg !4450

if.end212:                                        ; preds = %if.end211, %if.then197
  %136 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4451
  %tobool213 = trunc i8 %136 to i1, !dbg !4451
  br i1 %tobool213, label %land.lhs.true214, label %if.end223, !dbg !4453

land.lhs.true214:                                 ; preds = %if.end212
  %137 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4454
  %backup_type215 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %137, i32 0, i32 0, !dbg !4455, !ctir !3743
  %138 = load i32, i32* %backup_type215, align 8, !dbg !4455, !ctir !68
  %cmp216 = icmp ne i32 %138, 3, !dbg !4456
  br i1 %cmp216, label %land.lhs.true217, label %if.end223, !dbg !4457

land.lhs.true217:                                 ; preds = %land.lhs.true214
  %139 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4458
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %139, i32 0, i32 37, !dbg !4459, !ctir !3743
  %140 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !4459, !ctir !241
  %141 = load i8*, i8** %dst_name.addr, align 8, !dbg !4460
  %call218 = call zeroext i1 @seen_file(%struct.hash_table* %140, i8* %141, %struct.stat* %dst_sb), !dbg !4461
  br i1 %call218, label %if.then219, label %if.end223, !dbg !4462

if.then219:                                       ; preds = %land.lhs.true217
  %call220 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.103, i64 0, i64 0)) #10, !dbg !4463
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !4465
  %call221 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %142), !dbg !4465
  %143 = load i8*, i8** %src_name.addr, align 8, !dbg !4466
  %call222 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %143), !dbg !4466
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call220, i8* %call221, i8* %call222), !dbg !4467
  store i1 false, i1* %retval, align 1, !dbg !4468
  br label %return, !dbg !4468

if.end223:                                        ; preds = %land.lhs.true217, %land.lhs.true214, %if.end212
  br label %if.end224, !dbg !4469

if.end224:                                        ; preds = %if.end223, %if.end193
  %144 = load i32, i32* %src_mode, align 4, !dbg !4470
  %and225 = and i32 %144, 61440, !dbg !4470
  %cmp226 = icmp eq i32 %and225, 16384, !dbg !4470
  br i1 %cmp226, label %if.end243, label %if.then227, !dbg !4472

if.then227:                                       ; preds = %if.end224
  %st_mode228 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4473, !ctir !338
  %145 = load i32, i32* %st_mode228, align 8, !dbg !4473, !ctir !168
  %and229 = and i32 %145, 61440, !dbg !4473
  %cmp230 = icmp eq i32 %and229, 16384, !dbg !4473
  br i1 %cmp230, label %if.then231, label %if.end242, !dbg !4476

if.then231:                                       ; preds = %if.then227
  %146 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4477
  %move_mode232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %146, i32 0, i32 9, !dbg !4480, !ctir !3743
  %147 = load i8, i8* %move_mode232, align 8, !dbg !4480
  %tobool233 = trunc i8 %147 to i1, !dbg !4480, !ctir !142
  br i1 %tobool233, label %land.lhs.true234, label %if.else238, !dbg !4481

land.lhs.true234:                                 ; preds = %if.then231
  %148 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4482
  %backup_type235 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %148, i32 0, i32 0, !dbg !4483, !ctir !3743
  %149 = load i32, i32* %backup_type235, align 8, !dbg !4483, !ctir !68
  %cmp236 = icmp ne i32 %149, 0, !dbg !4484
  br i1 %cmp236, label %if.then237, label %if.else238, !dbg !4485

if.then237:                                       ; preds = %land.lhs.true234
  br label %if.end241, !dbg !4486

if.else238:                                       ; preds = %land.lhs.true234, %if.then231
  %call239 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.104, i64 0, i64 0)) #10, !dbg !4488
  %150 = load i8*, i8** %dst_name.addr, align 8, !dbg !4490
  %call240 = call i8* @quotearg_style(i32 4, i8* %150), !dbg !4490
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call239, i8* %call240), !dbg !4491
  store i1 false, i1* %retval, align 1, !dbg !4492
  br label %return, !dbg !4492

if.end241:                                        ; preds = %if.then237
  br label %if.end242, !dbg !4493

if.end242:                                        ; preds = %if.end241, %if.then227
  br label %if.end243, !dbg !4494

if.end243:                                        ; preds = %if.end242, %if.end224
  %151 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4495
  %move_mode244 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %151, i32 0, i32 9, !dbg !4497, !ctir !3743
  %152 = load i8, i8* %move_mode244, align 8, !dbg !4497
  %tobool245 = trunc i8 %152 to i1, !dbg !4497, !ctir !142
  br i1 %tobool245, label %if.then246, label %if.end262, !dbg !4498

if.then246:                                       ; preds = %if.end243
  %st_mode247 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4499, !ctir !338
  %153 = load i32, i32* %st_mode247, align 8, !dbg !4499, !ctir !168
  %and248 = and i32 %153, 61440, !dbg !4499
  %cmp249 = icmp eq i32 %and248, 16384, !dbg !4499
  br i1 %cmp249, label %land.lhs.true250, label %if.end261, !dbg !4502

land.lhs.true250:                                 ; preds = %if.then246
  %st_mode251 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4503, !ctir !338
  %154 = load i32, i32* %st_mode251, align 8, !dbg !4503, !ctir !168
  %and252 = and i32 %154, 61440, !dbg !4503
  %cmp253 = icmp eq i32 %and252, 16384, !dbg !4503
  br i1 %cmp253, label %if.end261, label %land.lhs.true254, !dbg !4504

land.lhs.true254:                                 ; preds = %land.lhs.true250
  %155 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4505
  %backup_type255 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %155, i32 0, i32 0, !dbg !4506, !ctir !3743
  %156 = load i32, i32* %backup_type255, align 8, !dbg !4506, !ctir !68
  %cmp256 = icmp eq i32 %156, 0, !dbg !4507
  br i1 %cmp256, label %if.then257, label %if.end261, !dbg !4508

if.then257:                                       ; preds = %land.lhs.true254
  %call258 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.105, i64 0, i64 0)) #10, !dbg !4509
  %157 = load i8*, i8** %src_name.addr, align 8, !dbg !4511
  %call259 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %157), !dbg !4511
  %158 = load i8*, i8** %dst_name.addr, align 8, !dbg !4512
  %call260 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !4512
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call258, i8* %call259, i8* %call260), !dbg !4513
  store i1 false, i1* %retval, align 1, !dbg !4514
  br label %return, !dbg !4514

if.end261:                                        ; preds = %land.lhs.true254, %land.lhs.true250, %if.then246
  br label %if.end262, !dbg !4515

if.end262:                                        ; preds = %if.end261, %if.end243
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !4516, metadata !DIExpression()), !dbg !4517
  %159 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4518
  %backup_type263 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %159, i32 0, i32 0, !dbg !4520, !ctir !3743
  %160 = load i32, i32* %backup_type263, align 8, !dbg !4520, !ctir !68
  %cmp264 = icmp ne i32 %160, 0, !dbg !4521
  br i1 %cmp264, label %land.lhs.true265, label %if.else306, !dbg !4522

land.lhs.true265:                                 ; preds = %if.end262
  %161 = load i8*, i8** %src_name.addr, align 8, !dbg !4523
  %call266 = call i8* @last_component(i8* %161) #14, !dbg !4524
  store i8* %call266, i8** %srcbase, align 8, !dbg !4525
  %call267 = call zeroext i1 @dot_or_dotdot.106(i8* %call266), !dbg !4526
  br i1 %call267, label %if.else306, label %land.lhs.true268, !dbg !4527

land.lhs.true268:                                 ; preds = %land.lhs.true265
  %162 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4528
  %move_mode269 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %162, i32 0, i32 9, !dbg !4529, !ctir !3743
  %163 = load i8, i8* %move_mode269, align 8, !dbg !4529
  %tobool270 = trunc i8 %163 to i1, !dbg !4529, !ctir !142
  br i1 %tobool270, label %if.then275, label %lor.lhs.false271, !dbg !4530

lor.lhs.false271:                                 ; preds = %land.lhs.true268
  %st_mode272 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4531, !ctir !338
  %164 = load i32, i32* %st_mode272, align 8, !dbg !4531, !ctir !168
  %and273 = and i32 %164, 61440, !dbg !4531
  %cmp274 = icmp eq i32 %and273, 16384, !dbg !4531
  br i1 %cmp274, label %if.else306, label %if.then275, !dbg !4532

if.then275:                                       ; preds = %lor.lhs.false271, %land.lhs.true268
  %165 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4533
  %backup_type276 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %165, i32 0, i32 0, !dbg !4536, !ctir !3743
  %166 = load i32, i32* %backup_type276, align 8, !dbg !4536, !ctir !68
  %cmp277 = icmp ne i32 %166, 3, !dbg !4537
  br i1 %cmp277, label %land.lhs.true278, label %if.end291, !dbg !4538

land.lhs.true278:                                 ; preds = %if.then275
  %167 = load i8*, i8** %srcbase, align 8, !dbg !4539
  %168 = load i8*, i8** %dst_name.addr, align 8, !dbg !4540
  %call279 = call zeroext i1 @source_is_dst_backup(i8* %167, %struct.stat* %src_sb, i8* %168), !dbg !4541
  br i1 %call279, label %if.then280, label %if.end291, !dbg !4542

if.then280:                                       ; preds = %land.lhs.true278
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4543, metadata !DIExpression()), !dbg !4545
  %169 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4546
  %move_mode281 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %169, i32 0, i32 9, !dbg !4547, !ctir !3743
  %170 = load i8, i8* %move_mode281, align 8, !dbg !4547
  %tobool282 = trunc i8 %170 to i1, !dbg !4547, !ctir !142
  br i1 %tobool282, label %cond.true283, label %cond.false285, !dbg !4546

cond.true283:                                     ; preds = %if.then280
  %call284 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.107, i64 0, i64 0)) #10, !dbg !4548
  br label %cond.end287, !dbg !4546

cond.false285:                                    ; preds = %if.then280
  %call286 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.108, i64 0, i64 0)) #10, !dbg !4549
  br label %cond.end287, !dbg !4546

cond.end287:                                      ; preds = %cond.false285, %cond.true283
  %cond288 = phi i8* [ %call284, %cond.true283 ], [ %call286, %cond.false285 ], !dbg !4546
  store i8* %cond288, i8** %fmt, align 8, !dbg !4550
  %171 = load i8*, i8** %fmt, align 8, !dbg !4551
  %172 = load i8*, i8** %dst_name.addr, align 8, !dbg !4552
  %call289 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %172), !dbg !4552
  %173 = load i8*, i8** %src_name.addr, align 8, !dbg !4553
  %call290 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %173), !dbg !4553
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %171, i8* %call289, i8* %call290), !dbg !4554
  store i1 false, i1* %retval, align 1, !dbg !4555
  br label %return, !dbg !4555

if.end291:                                        ; preds = %land.lhs.true278, %if.then275
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !4556, metadata !DIExpression()), !dbg !4557
  %174 = load i8*, i8** %dst_name.addr, align 8, !dbg !4558
  %175 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4559
  %backup_type292 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %175, i32 0, i32 0, !dbg !4560, !ctir !3743
  %176 = load i32, i32* %backup_type292, align 8, !dbg !4560, !ctir !68
  %call293 = call i8* @backup_file_rename(i32 -100, i8* %174, i32 %176), !dbg !4561
  store i8* %call293, i8** %tmp_backup, align 8, !dbg !4557
  %177 = load i8*, i8** %tmp_backup, align 8, !dbg !4562
  %tobool294 = icmp ne i8* %177, null, !dbg !4562
  br i1 %tobool294, label %if.then295, label %if.else297, !dbg !4564

if.then295:                                       ; preds = %if.end291
  br label %do.body, !dbg !4565

do.body:                                          ; preds = %if.then295
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !4567, metadata !DIExpression()), !dbg !4570
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !4570
  store i8* %178, i8** %__old, align 8, !dbg !4570
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4571, metadata !DIExpression()), !dbg !4570
  %179 = load i8*, i8** %__old, align 8, !dbg !4570
  %call296 = call i64 @strlen(i8* %179) #14, !dbg !4570
  %add = add i64 %call296, 1, !dbg !4570
  store i64 %add, i64* %__len, align 8, !dbg !4570
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !4572, metadata !DIExpression()), !dbg !4570
  %180 = load i64, i64* %__len, align 8, !dbg !4570
  %181 = alloca i8, i64 %180, align 16, !dbg !4570
  store i8* %181, i8** %__new, align 8, !dbg !4570
  %182 = load i8*, i8** %__new, align 8, !dbg !4570
  %183 = load i8*, i8** %__old, align 8, !dbg !4570
  %184 = load i64, i64* %__len, align 8, !dbg !4570
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %182, i8* align 1 %183, i64 %184, i1 false), !dbg !4570
  store i8* %182, i8** %tmp, align 8, !dbg !4570
  %185 = load i8*, i8** %tmp, align 8, !dbg !4570
  store i8* %185, i8** %dst_backup, align 8, !dbg !4573
  br label %do.end, !dbg !4573

do.end:                                           ; preds = %do.body
  %186 = load i8*, i8** %tmp_backup, align 8, !dbg !4574
  call void @free(i8* %186) #10, !dbg !4575
  br label %if.end305, !dbg !4576

if.else297:                                       ; preds = %if.end291
  %call298 = call i32* @__errno_location() #15, !dbg !4577
  %187 = load i32, i32* %call298, align 4, !dbg !4577, !ctir !7
  %cmp299 = icmp ne i32 %187, 2, !dbg !4579
  br i1 %cmp299, label %if.then300, label %if.end304, !dbg !4580

if.then300:                                       ; preds = %if.else297
  %call301 = call i32* @__errno_location() #15, !dbg !4581
  %188 = load i32, i32* %call301, align 4, !dbg !4581, !ctir !7
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.109, i64 0, i64 0)) #10, !dbg !4583
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !4584
  %call303 = call i8* @quotearg_style(i32 4, i8* %189), !dbg !4584
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %188, i8* %call302, i8* %call303), !dbg !4585
  store i1 false, i1* %retval, align 1, !dbg !4586
  br label %return, !dbg !4586

if.end304:                                        ; preds = %if.else297
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4587
  br label %if.end346, !dbg !4588

if.else306:                                       ; preds = %lor.lhs.false271, %land.lhs.true265, %if.end262
  %st_mode307 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4589, !ctir !338
  %190 = load i32, i32* %st_mode307, align 8, !dbg !4589, !ctir !168
  %and308 = and i32 %190, 61440, !dbg !4589
  %cmp309 = icmp eq i32 %and308, 16384, !dbg !4589
  br i1 %cmp309, label %if.end345, label %land.lhs.true310, !dbg !4591

land.lhs.true310:                                 ; preds = %if.else306
  %191 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4592
  %move_mode311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %191, i32 0, i32 9, !dbg !4593, !ctir !3743
  %192 = load i8, i8* %move_mode311, align 8, !dbg !4593
  %tobool312 = trunc i8 %192 to i1, !dbg !4593, !ctir !142
  br i1 %tobool312, label %if.end345, label %land.lhs.true313, !dbg !4594

land.lhs.true313:                                 ; preds = %land.lhs.true310
  %193 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4595
  %unlink_dest_before_opening314 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %193, i32 0, i32 6, !dbg !4596, !ctir !3743
  %194 = load i8, i8* %unlink_dest_before_opening314, align 1, !dbg !4596
  %tobool315 = trunc i8 %194 to i1, !dbg !4596, !ctir !142
  br i1 %tobool315, label %if.then327, label %lor.lhs.false316, !dbg !4597

lor.lhs.false316:                                 ; preds = %land.lhs.true313
  %195 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4598
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %195, i32 0, i32 19, !dbg !4599, !ctir !3743
  %196 = load i8, i8* %preserve_links, align 2, !dbg !4599
  %tobool317 = trunc i8 %196 to i1, !dbg !4599, !ctir !142
  br i1 %tobool317, label %land.lhs.true318, label %lor.lhs.false320, !dbg !4600

land.lhs.true318:                                 ; preds = %lor.lhs.false316
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !4601, !ctir !338
  %197 = load i64, i64* %st_nlink, align 8, !dbg !4601, !ctir !336
  %cmp319 = icmp ult i64 1, %197, !dbg !4602
  br i1 %cmp319, label %if.then327, label %lor.lhs.false320, !dbg !4603

lor.lhs.false320:                                 ; preds = %land.lhs.true318, %lor.lhs.false316
  %198 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4604
  %dereference321 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %198, i32 0, i32 1, !dbg !4605, !ctir !3743
  %199 = load i32, i32* %dereference321, align 4, !dbg !4605, !ctir !76
  %cmp322 = icmp eq i32 %199, 2, !dbg !4606
  br i1 %cmp322, label %land.lhs.true323, label %if.end345, !dbg !4607

land.lhs.true323:                                 ; preds = %lor.lhs.false320
  %st_mode324 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4608, !ctir !338
  %200 = load i32, i32* %st_mode324, align 8, !dbg !4608, !ctir !168
  %and325 = and i32 %200, 61440, !dbg !4608
  %cmp326 = icmp eq i32 %and325, 32768, !dbg !4608
  br i1 %cmp326, label %if.end345, label %if.then327, !dbg !4609

if.then327:                                       ; preds = %land.lhs.true323, %land.lhs.true318, %land.lhs.true313
  %201 = load i8*, i8** %dst_name.addr, align 8, !dbg !4610
  %call328 = call i32 @unlink(i8* %201) #10, !dbg !4613
  %cmp329 = icmp ne i32 %call328, 0, !dbg !4614
  br i1 %cmp329, label %land.lhs.true330, label %if.end337, !dbg !4615

land.lhs.true330:                                 ; preds = %if.then327
  %call331 = call i32* @__errno_location() #15, !dbg !4616
  %202 = load i32, i32* %call331, align 4, !dbg !4616, !ctir !7
  %cmp332 = icmp ne i32 %202, 2, !dbg !4617
  br i1 %cmp332, label %if.then333, label %if.end337, !dbg !4618

if.then333:                                       ; preds = %land.lhs.true330
  %call334 = call i32* @__errno_location() #15, !dbg !4619
  %203 = load i32, i32* %call334, align 4, !dbg !4619, !ctir !7
  %call335 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #10, !dbg !4621
  %204 = load i8*, i8** %dst_name.addr, align 8, !dbg !4622
  %call336 = call i8* @quotearg_style(i32 4, i8* %204), !dbg !4622
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %203, i8* %call335, i8* %call336), !dbg !4623
  store i1 false, i1* %retval, align 1, !dbg !4624
  br label %return, !dbg !4624

if.end337:                                        ; preds = %land.lhs.true330, %if.then327
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4625
  %205 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4626
  %verbose338 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %205, i32 0, i32 31, !dbg !4628, !ctir !3743
  %206 = load i8, i8* %verbose338, align 2, !dbg !4628
  %tobool339 = trunc i8 %206 to i1, !dbg !4628, !ctir !142
  br i1 %tobool339, label %if.then340, label %if.end344, !dbg !4629

if.then340:                                       ; preds = %if.end337
  %call341 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !4630
  %207 = load i8*, i8** %dst_name.addr, align 8, !dbg !4631
  %call342 = call i8* @quotearg_style(i32 4, i8* %207), !dbg !4631
  %call343 = call i32 (i8*, ...) @printf(i8* %call341, i8* %call342), !dbg !4632
  br label %if.end344, !dbg !4632

if.end344:                                        ; preds = %if.then340, %if.end337
  br label %if.end345, !dbg !4633

if.end345:                                        ; preds = %if.end344, %land.lhs.true323, %lor.lhs.false320, %land.lhs.true310, %if.else306
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.end305
  br label %if.end347, !dbg !4634

if.end347:                                        ; preds = %if.end346, %if.end125
  br label %if.end348, !dbg !4635

if.end348:                                        ; preds = %if.end347, %if.end68
  %208 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4636
  %tobool349 = trunc i8 %208 to i1, !dbg !4636
  br i1 %tobool349, label %land.lhs.true350, label %if.end382, !dbg !4638

land.lhs.true350:                                 ; preds = %if.end348
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4639
  %dest_info351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 37, !dbg !4640, !ctir !3743
  %210 = load %struct.hash_table*, %struct.hash_table** %dest_info351, align 8, !dbg !4640, !ctir !241
  %tobool352 = icmp ne %struct.hash_table* %210, null, !dbg !4639
  br i1 %tobool352, label %land.lhs.true353, label %if.end382, !dbg !4641

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %211 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4642
  %move_mode354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %211, i32 0, i32 9, !dbg !4643, !ctir !3743
  %212 = load i8, i8* %move_mode354, align 8, !dbg !4643
  %tobool355 = trunc i8 %212 to i1, !dbg !4643, !ctir !142
  br i1 %tobool355, label %if.end382, label %land.lhs.true356, !dbg !4644

land.lhs.true356:                                 ; preds = %land.lhs.true353
  %213 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4645
  %backup_type357 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %213, i32 0, i32 0, !dbg !4646, !ctir !3743
  %214 = load i32, i32* %backup_type357, align 8, !dbg !4646, !ctir !68
  %cmp358 = icmp eq i32 %214, 0, !dbg !4647
  br i1 %cmp358, label %if.then359, label %if.end382, !dbg !4648

if.then359:                                       ; preds = %land.lhs.true356
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !4649, metadata !DIExpression()), !dbg !4651
  store i8 1, i8* %lstat_ok, align 1, !dbg !4651
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !4652, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !4654, metadata !DIExpression()), !dbg !4655
  %215 = load i8, i8* %have_dst_lstat, align 1, !dbg !4656
  %tobool360 = trunc i8 %215 to i1, !dbg !4656
  br i1 %tobool360, label %if.then361, label %if.else362, !dbg !4658

if.then361:                                       ; preds = %if.then359
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !4659
  br label %if.end368, !dbg !4660

if.else362:                                       ; preds = %if.then359
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !4661
  %call363 = call i32 @lstat(i8* %216, %struct.stat* %tmp_buf) #10, !dbg !4664
  %cmp364 = icmp eq i32 %call363, 0, !dbg !4665
  br i1 %cmp364, label %if.then365, label %if.else366, !dbg !4666

if.then365:                                       ; preds = %if.else362
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !4667
  br label %if.end367, !dbg !4668

if.else366:                                       ; preds = %if.else362
  store i8 0, i8* %lstat_ok, align 1, !dbg !4669
  br label %if.end367

if.end367:                                        ; preds = %if.else366, %if.then365
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then361
  %217 = load i8, i8* %lstat_ok, align 1, !dbg !4670
  %tobool369 = trunc i8 %217 to i1, !dbg !4670
  br i1 %tobool369, label %land.lhs.true370, label %if.end381, !dbg !4672

land.lhs.true370:                                 ; preds = %if.end368
  %218 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4673
  %st_mode371 = getelementptr inbounds %struct.stat, %struct.stat* %218, i32 0, i32 3, !dbg !4673, !ctir !338
  %219 = load i32, i32* %st_mode371, align 8, !dbg !4673, !ctir !168
  %and372 = and i32 %219, 61440, !dbg !4673
  %cmp373 = icmp eq i32 %and372, 40960, !dbg !4673
  br i1 %cmp373, label %land.lhs.true374, label %if.end381, !dbg !4674

land.lhs.true374:                                 ; preds = %land.lhs.true370
  %220 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4675
  %dest_info375 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %220, i32 0, i32 37, !dbg !4676, !ctir !3743
  %221 = load %struct.hash_table*, %struct.hash_table** %dest_info375, align 8, !dbg !4676, !ctir !241
  %222 = load i8*, i8** %dst_name.addr, align 8, !dbg !4677
  %223 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !4678
  %call376 = call zeroext i1 @seen_file(%struct.hash_table* %221, i8* %222, %struct.stat* %223), !dbg !4679
  br i1 %call376, label %if.then377, label %if.end381, !dbg !4680

if.then377:                                       ; preds = %land.lhs.true374
  %call378 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.112, i64 0, i64 0)) #10, !dbg !4681
  %224 = load i8*, i8** %src_name.addr, align 8, !dbg !4683
  %call379 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %224), !dbg !4683
  %225 = load i8*, i8** %dst_name.addr, align 8, !dbg !4684
  %call380 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %225), !dbg !4684
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call378, i8* %call379, i8* %call380), !dbg !4685
  store i1 false, i1* %retval, align 1, !dbg !4686
  br label %return, !dbg !4686

if.end381:                                        ; preds = %land.lhs.true374, %land.lhs.true370, %if.end368
  br label %if.end382, !dbg !4687

if.end382:                                        ; preds = %if.end381, %land.lhs.true356, %land.lhs.true353, %land.lhs.true350, %if.end348
  %226 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4688
  %verbose383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %226, i32 0, i32 31, !dbg !4690, !ctir !3743
  %227 = load i8, i8* %verbose383, align 2, !dbg !4690
  %tobool384 = trunc i8 %227 to i1, !dbg !4690, !ctir !142
  br i1 %tobool384, label %land.lhs.true385, label %if.end392, !dbg !4691

land.lhs.true385:                                 ; preds = %if.end382
  %228 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4692
  %move_mode386 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %228, i32 0, i32 9, !dbg !4693, !ctir !3743
  %229 = load i8, i8* %move_mode386, align 8, !dbg !4693
  %tobool387 = trunc i8 %229 to i1, !dbg !4693, !ctir !142
  br i1 %tobool387, label %if.end392, label %land.lhs.true388, !dbg !4694

land.lhs.true388:                                 ; preds = %land.lhs.true385
  %230 = load i32, i32* %src_mode, align 4, !dbg !4695
  %and389 = and i32 %230, 61440, !dbg !4695
  %cmp390 = icmp eq i32 %and389, 16384, !dbg !4695
  br i1 %cmp390, label %if.end392, label %if.then391, !dbg !4696

if.then391:                                       ; preds = %land.lhs.true388
  %231 = load i8*, i8** %src_name.addr, align 8, !dbg !4697
  %232 = load i8*, i8** %dst_name.addr, align 8, !dbg !4698
  %233 = load i8*, i8** %dst_backup, align 8, !dbg !4699
  call void @emit_verbose(i8* %231, i8* %232, i8* %233), !dbg !4700
  br label %if.end392, !dbg !4700

if.end392:                                        ; preds = %if.then391, %land.lhs.true388, %land.lhs.true385, %if.end382
  %234 = load i32, i32* %rename_errno, align 4, !dbg !4701
  %cmp393 = icmp eq i32 %234, 0, !dbg !4703
  br i1 %cmp393, label %if.then394, label %if.else395, !dbg !4704

if.then394:                                       ; preds = %if.end392
  store i8* null, i8** %earlier_file, align 8, !dbg !4705
  br label %if.end446, !dbg !4706

if.else395:                                       ; preds = %if.end392
  %235 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4707
  %recursive396 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %235, i32 0, i32 27, !dbg !4709, !ctir !3743
  %236 = load i8, i8* %recursive396, align 2, !dbg !4709
  %tobool397 = trunc i8 %236 to i1, !dbg !4709, !ctir !142
  br i1 %tobool397, label %land.lhs.true398, label %if.else412, !dbg !4710

land.lhs.true398:                                 ; preds = %if.else395
  %237 = load i32, i32* %src_mode, align 4, !dbg !4711
  %and399 = and i32 %237, 61440, !dbg !4711
  %cmp400 = icmp eq i32 %and399, 16384, !dbg !4711
  br i1 %cmp400, label %if.then401, label %if.else412, !dbg !4712

if.then401:                                       ; preds = %land.lhs.true398
  %238 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4713
  %tobool402 = trunc i8 %238 to i1, !dbg !4713
  br i1 %tobool402, label %if.then403, label %if.else407, !dbg !4716

if.then403:                                       ; preds = %if.then401
  %239 = load i8*, i8** %dst_name.addr, align 8, !dbg !4717
  %st_ino404 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4718, !ctir !338
  %240 = load i64, i64* %st_ino404, align 8, !dbg !4718, !ctir !260
  %st_dev405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4719, !ctir !338
  %241 = load i64, i64* %st_dev405, align 8, !dbg !4719, !ctir !263
  %call406 = call i8* @remember_copied(i8* %239, i64 %240, i64 %241), !dbg !4720
  store i8* %call406, i8** %earlier_file, align 8, !dbg !4721
  br label %if.end411, !dbg !4722

if.else407:                                       ; preds = %if.then401
  %st_ino408 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4723, !ctir !338
  %242 = load i64, i64* %st_ino408, align 8, !dbg !4723, !ctir !260
  %st_dev409 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4724, !ctir !338
  %243 = load i64, i64* %st_dev409, align 8, !dbg !4724, !ctir !263
  %call410 = call i8* @src_to_dest_lookup(i64 %242, i64 %243), !dbg !4725
  store i8* %call410, i8** %earlier_file, align 8, !dbg !4726
  br label %if.end411

if.end411:                                        ; preds = %if.else407, %if.then403
  br label %if.end445, !dbg !4727

if.else412:                                       ; preds = %land.lhs.true398, %if.else395
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4728
  %move_mode413 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 9, !dbg !4730, !ctir !3743
  %245 = load i8, i8* %move_mode413, align 8, !dbg !4730
  %tobool414 = trunc i8 %245 to i1, !dbg !4730, !ctir !142
  br i1 %tobool414, label %land.lhs.true415, label %if.else422, !dbg !4731

land.lhs.true415:                                 ; preds = %if.else412
  %st_nlink416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4732, !ctir !338
  %246 = load i64, i64* %st_nlink416, align 8, !dbg !4732, !ctir !336
  %cmp417 = icmp eq i64 %246, 1, !dbg !4733
  br i1 %cmp417, label %if.then418, label %if.else422, !dbg !4734

if.then418:                                       ; preds = %land.lhs.true415
  %st_ino419 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4735, !ctir !338
  %247 = load i64, i64* %st_ino419, align 8, !dbg !4735, !ctir !260
  %st_dev420 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4737, !ctir !338
  %248 = load i64, i64* %st_dev420, align 8, !dbg !4737, !ctir !263
  %call421 = call i8* @src_to_dest_lookup(i64 %247, i64 %248), !dbg !4738
  store i8* %call421, i8** %earlier_file, align 8, !dbg !4739
  br label %if.end444, !dbg !4740

if.else422:                                       ; preds = %land.lhs.true415, %if.else412
  %249 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4741
  %preserve_links423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %249, i32 0, i32 19, !dbg !4743, !ctir !3743
  %250 = load i8, i8* %preserve_links423, align 2, !dbg !4743
  %tobool424 = trunc i8 %250 to i1, !dbg !4743, !ctir !142
  br i1 %tobool424, label %land.lhs.true425, label %if.end443, !dbg !4744

land.lhs.true425:                                 ; preds = %if.else422
  %251 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4745
  %hard_link426 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %251, i32 0, i32 8, !dbg !4746, !ctir !3743
  %252 = load i8, i8* %hard_link426, align 1, !dbg !4746
  %tobool427 = trunc i8 %252 to i1, !dbg !4746, !ctir !142
  br i1 %tobool427, label %if.end443, label %land.lhs.true428, !dbg !4747

land.lhs.true428:                                 ; preds = %land.lhs.true425
  %st_nlink429 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !4748, !ctir !338
  %253 = load i64, i64* %st_nlink429, align 8, !dbg !4748, !ctir !336
  %cmp430 = icmp ult i64 1, %253, !dbg !4749
  br i1 %cmp430, label %if.then439, label %lor.lhs.false431, !dbg !4750

lor.lhs.false431:                                 ; preds = %land.lhs.true428
  %254 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4751
  %tobool432 = trunc i8 %254 to i1, !dbg !4751
  br i1 %tobool432, label %land.lhs.true433, label %lor.lhs.false436, !dbg !4752

land.lhs.true433:                                 ; preds = %lor.lhs.false431
  %255 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4753
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %255, i32 0, i32 1, !dbg !4754, !ctir !3743
  %256 = load i32, i32* %dereference434, align 4, !dbg !4754, !ctir !76
  %cmp435 = icmp eq i32 %256, 3, !dbg !4755
  br i1 %cmp435, label %if.then439, label %lor.lhs.false436, !dbg !4756

lor.lhs.false436:                                 ; preds = %land.lhs.true433, %lor.lhs.false431
  %257 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4757
  %dereference437 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %257, i32 0, i32 1, !dbg !4758, !ctir !3743
  %258 = load i32, i32* %dereference437, align 4, !dbg !4758, !ctir !76
  %cmp438 = icmp eq i32 %258, 4, !dbg !4759
  br i1 %cmp438, label %if.then439, label %if.end443, !dbg !4760

if.then439:                                       ; preds = %lor.lhs.false436, %land.lhs.true433, %land.lhs.true428
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !4761
  %st_ino440 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4763, !ctir !338
  %260 = load i64, i64* %st_ino440, align 8, !dbg !4763, !ctir !260
  %st_dev441 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4764, !ctir !338
  %261 = load i64, i64* %st_dev441, align 8, !dbg !4764, !ctir !263
  %call442 = call i8* @remember_copied(i8* %259, i64 %260, i64 %261), !dbg !4765
  store i8* %call442, i8** %earlier_file, align 8, !dbg !4766
  br label %if.end443, !dbg !4767

if.end443:                                        ; preds = %if.then439, %lor.lhs.false436, %land.lhs.true425, %if.else422
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %if.then418
  br label %if.end445

if.end445:                                        ; preds = %if.end444, %if.end411
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.then394
  %262 = load i8*, i8** %earlier_file, align 8, !dbg !4768
  %tobool447 = icmp ne i8* %262, null, !dbg !4768
  br i1 %tobool447, label %if.then448, label %if.end492, !dbg !4770

if.then448:                                       ; preds = %if.end446
  %263 = load i32, i32* %src_mode, align 4, !dbg !4771
  %and449 = and i32 %263, 61440, !dbg !4771
  %cmp450 = icmp eq i32 %and449, 16384, !dbg !4771
  br i1 %cmp450, label %if.then451, label %if.else484, !dbg !4774

if.then451:                                       ; preds = %if.then448
  %264 = load i8*, i8** %src_name.addr, align 8, !dbg !4775
  %265 = load i8*, i8** %earlier_file, align 8, !dbg !4778
  %call452 = call zeroext i1 @same_name(i8* %264, i8* %265), !dbg !4779
  br i1 %call452, label %if.then453, label %if.else457, !dbg !4780

if.then453:                                       ; preds = %if.then451
  %call454 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.113, i64 0, i64 0)) #10, !dbg !4781
  %266 = load i8*, i8** @top_level_src_name, align 8, !dbg !4783
  %call455 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %266), !dbg !4783
  %267 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4784
  %call456 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %267), !dbg !4784
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call454, i8* %call455, i8* %call456), !dbg !4785
  %268 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4786
  store i8 1, i8* %268, align 1, !dbg !4787, !ctir !142
  br label %un_backup, !dbg !4788

if.else457:                                       ; preds = %if.then451
  %269 = load i8*, i8** %dst_name.addr, align 8, !dbg !4789
  %270 = load i8*, i8** %earlier_file, align 8, !dbg !4791
  %call458 = call zeroext i1 @same_name(i8* %269, i8* %270), !dbg !4792
  br i1 %call458, label %if.then459, label %if.else468, !dbg !4793

if.then459:                                       ; preds = %if.else457
  %call460 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.114, i64 0, i64 0)) #10, !dbg !4794
  %271 = load i8*, i8** @top_level_src_name, align 8, !dbg !4796
  %call461 = call i8* @quotearg_style(i32 4, i8* %271), !dbg !4796
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call460, i8* %call461), !dbg !4797
  %272 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4798
  %move_mode462 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %272, i32 0, i32 9, !dbg !4800, !ctir !3743
  %273 = load i8, i8* %move_mode462, align 8, !dbg !4800
  %tobool463 = trunc i8 %273 to i1, !dbg !4800, !ctir !142
  br i1 %tobool463, label %land.lhs.true464, label %if.end467, !dbg !4801

land.lhs.true464:                                 ; preds = %if.then459
  %274 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4802
  %tobool465 = icmp ne i8* %274, null, !dbg !4802
  br i1 %tobool465, label %if.then466, label %if.end467, !dbg !4803

if.then466:                                       ; preds = %land.lhs.true464
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4804
  store i8 1, i8* %275, align 1, !dbg !4805, !ctir !142
  br label %if.end467, !dbg !4806

if.end467:                                        ; preds = %if.then466, %land.lhs.true464, %if.then459
  store i1 true, i1* %retval, align 1, !dbg !4807
  br label %return, !dbg !4807

if.else468:                                       ; preds = %if.else457
  %276 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4808
  %dereference469 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %276, i32 0, i32 1, !dbg !4810, !ctir !3743
  %277 = load i32, i32* %dereference469, align 4, !dbg !4810, !ctir !76
  %cmp470 = icmp eq i32 %277, 4, !dbg !4811
  br i1 %cmp470, label %if.then476, label %lor.lhs.false471, !dbg !4812

lor.lhs.false471:                                 ; preds = %if.else468
  %278 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4813
  %tobool472 = trunc i8 %278 to i1, !dbg !4813
  br i1 %tobool472, label %land.lhs.true473, label %if.else477, !dbg !4814

land.lhs.true473:                                 ; preds = %lor.lhs.false471
  %279 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4815
  %dereference474 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %279, i32 0, i32 1, !dbg !4816, !ctir !3743
  %280 = load i32, i32* %dereference474, align 4, !dbg !4816, !ctir !76
  %cmp475 = icmp eq i32 %280, 3, !dbg !4817
  br i1 %cmp475, label %if.then476, label %if.else477, !dbg !4818

if.then476:                                       ; preds = %land.lhs.true473, %if.else468
  br label %if.end481, !dbg !4819

if.else477:                                       ; preds = %land.lhs.true473, %lor.lhs.false471
  %call478 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.115, i64 0, i64 0)) #10, !dbg !4821
  %281 = load i8*, i8** %dst_name.addr, align 8, !dbg !4823
  %call479 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %281), !dbg !4823
  %282 = load i8*, i8** %earlier_file, align 8, !dbg !4824
  %call480 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %282), !dbg !4824
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call478, i8* %call479, i8* %call480), !dbg !4825
  br label %un_backup, !dbg !4826

if.end481:                                        ; preds = %if.then476
  br label %if.end482

if.end482:                                        ; preds = %if.end481
  br label %if.end483

if.end483:                                        ; preds = %if.end482
  br label %if.end491, !dbg !4827

if.else484:                                       ; preds = %if.then448
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !4828
  %284 = load i8*, i8** %dst_name.addr, align 8, !dbg !4831
  %285 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4832
  %verbose485 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %285, i32 0, i32 31, !dbg !4833, !ctir !3743
  %286 = load i8, i8* %verbose485, align 2, !dbg !4833
  %tobool486 = trunc i8 %286 to i1, !dbg !4833, !ctir !142
  %287 = load i8, i8* %dereference69, align 1, !dbg !4834
  %tobool487 = trunc i8 %287 to i1, !dbg !4834
  %call488 = call zeroext i1 @create_hard_link(i8* %283, i8* %284, i1 zeroext true, i1 zeroext %tobool486, i1 zeroext %tobool487), !dbg !4835
  br i1 %call488, label %if.end490, label %if.then489, !dbg !4836

if.then489:                                       ; preds = %if.else484
  br label %un_backup, !dbg !4837

if.end490:                                        ; preds = %if.else484
  store i1 true, i1* %retval, align 1, !dbg !4838
  br label %return, !dbg !4838

if.end491:                                        ; preds = %if.end483
  br label %if.end492, !dbg !4839

if.end492:                                        ; preds = %if.end491, %if.end446
  %288 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4840
  %move_mode493 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %288, i32 0, i32 9, !dbg !4842, !ctir !3743
  %289 = load i8, i8* %move_mode493, align 8, !dbg !4842
  %tobool494 = trunc i8 %289 to i1, !dbg !4842, !ctir !142
  br i1 %tobool494, label %if.then495, label %if.end572, !dbg !4843

if.then495:                                       ; preds = %if.end492
  %290 = load i32, i32* %rename_errno, align 4, !dbg !4844
  %cmp496 = icmp eq i32 %290, 17, !dbg !4847
  br i1 %cmp496, label %if.then497, label %if.end505, !dbg !4848

if.then497:                                       ; preds = %if.then495
  %291 = load i8*, i8** %src_name.addr, align 8, !dbg !4849
  %292 = load i8*, i8** %dst_name.addr, align 8, !dbg !4850
  %call498 = call i32 @rename(i8* %291, i8* %292) #10, !dbg !4851
  %cmp499 = icmp eq i32 %call498, 0, !dbg !4852
  br i1 %cmp499, label %cond.true500, label %cond.false501, !dbg !4851

cond.true500:                                     ; preds = %if.then497
  br label %cond.end503, !dbg !4851

cond.false501:                                    ; preds = %if.then497
  %call502 = call i32* @__errno_location() #15, !dbg !4853
  %293 = load i32, i32* %call502, align 4, !dbg !4853, !ctir !7
  br label %cond.end503, !dbg !4851

cond.end503:                                      ; preds = %cond.false501, %cond.true500
  %cond504 = phi i32 [ 0, %cond.true500 ], [ %293, %cond.false501 ], !dbg !4851
  store i32 %cond504, i32* %rename_errno, align 4, !dbg !4854
  br label %if.end505, !dbg !4855

if.end505:                                        ; preds = %cond.end503, %if.then495
  %294 = load i32, i32* %rename_errno, align 4, !dbg !4856
  %cmp506 = icmp eq i32 %294, 0, !dbg !4858
  br i1 %cmp506, label %if.then507, label %if.end528, !dbg !4859

if.then507:                                       ; preds = %if.end505
  %295 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4860
  %verbose508 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %295, i32 0, i32 31, !dbg !4863, !ctir !3743
  %296 = load i8, i8* %verbose508, align 2, !dbg !4863
  %tobool509 = trunc i8 %296 to i1, !dbg !4863, !ctir !142
  br i1 %tobool509, label %if.then510, label %if.end513, !dbg !4864

if.then510:                                       ; preds = %if.then507
  %call511 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.116, i64 0, i64 0)) #10, !dbg !4865
  %call512 = call i32 (i8*, ...) @printf(i8* %call511), !dbg !4867
  %297 = load i8*, i8** %src_name.addr, align 8, !dbg !4868
  %298 = load i8*, i8** %dst_name.addr, align 8, !dbg !4869
  %299 = load i8*, i8** %dst_backup, align 8, !dbg !4870
  call void @emit_verbose(i8* %297, i8* %298, i8* %299), !dbg !4871
  br label %if.end513, !dbg !4872

if.end513:                                        ; preds = %if.then510, %if.then507
  %300 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4873
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %300, i32 0, i32 18, !dbg !4875, !ctir !3743
  %301 = load i8, i8* %set_security_context, align 1, !dbg !4875
  %tobool514 = trunc i8 %301 to i1, !dbg !4875, !ctir !142
  br i1 %tobool514, label %if.then515, label %if.end517, !dbg !4876

if.then515:                                       ; preds = %if.end513
  %302 = load i8*, i8** %dst_name.addr, align 8, !dbg !4877
  %303 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4879
  %call516 = call zeroext i1 @set_file_security_ctx(i8* %302, i1 zeroext false, i1 zeroext true, %struct.cp_options* %303), !dbg !4880
  br label %if.end517, !dbg !4881

if.end517:                                        ; preds = %if.then515, %if.end513
  %304 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4882
  %tobool518 = icmp ne i8* %304, null, !dbg !4882
  br i1 %tobool518, label %if.then519, label %if.end520, !dbg !4884

if.then519:                                       ; preds = %if.end517
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4885
  store i8 1, i8* %305, align 1, !dbg !4886, !ctir !142
  br label %if.end520, !dbg !4887

if.end520:                                        ; preds = %if.then519, %if.end517
  %306 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4888
  %tobool521 = trunc i8 %306 to i1, !dbg !4888
  br i1 %tobool521, label %land.lhs.true522, label %if.end527, !dbg !4890

land.lhs.true522:                                 ; preds = %if.end520
  %307 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4891
  %last_file523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %307, i32 0, i32 34, !dbg !4892, !ctir !3743
  %308 = load i8, i8* %last_file523, align 1, !dbg !4892
  %tobool524 = trunc i8 %308 to i1, !dbg !4892, !ctir !142
  br i1 %tobool524, label %if.end527, label %if.then525, !dbg !4893

if.then525:                                       ; preds = %land.lhs.true522
  %309 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4894
  %dest_info526 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %309, i32 0, i32 37, !dbg !4896, !ctir !3743
  %310 = load %struct.hash_table*, %struct.hash_table** %dest_info526, align 8, !dbg !4896, !ctir !241
  %311 = load i8*, i8** %dst_name.addr, align 8, !dbg !4897
  call void @record_file(%struct.hash_table* %310, i8* %311, %struct.stat* %src_sb), !dbg !4898
  br label %if.end527, !dbg !4899

if.end527:                                        ; preds = %if.then525, %land.lhs.true522, %if.end520
  store i1 true, i1* %retval, align 1, !dbg !4900
  br label %return, !dbg !4900

if.end528:                                        ; preds = %if.end505
  %312 = load i32, i32* %rename_errno, align 4, !dbg !4901
  %cmp529 = icmp eq i32 %312, 22, !dbg !4903
  br i1 %cmp529, label %if.then530, label %if.end534, !dbg !4904

if.then530:                                       ; preds = %if.end528
  %call531 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.117, i64 0, i64 0)) #10, !dbg !4905
  %313 = load i8*, i8** @top_level_src_name, align 8, !dbg !4907
  %call532 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %313), !dbg !4907
  %314 = load i8*, i8** @top_level_dst_name, align 8, !dbg !4908
  %call533 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %314), !dbg !4908
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call531, i8* %call532, i8* %call533), !dbg !4909
  %315 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4910
  store i8 1, i8* %315, align 1, !dbg !4911, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !4912
  br label %return, !dbg !4912

if.end534:                                        ; preds = %if.end528
  %316 = load i32, i32* %rename_errno, align 4, !dbg !4913
  %cmp535 = icmp ne i32 %316, 18, !dbg !4915
  br i1 %cmp535, label %if.then536, label %if.end542, !dbg !4916

if.then536:                                       ; preds = %if.end534
  %317 = load i32, i32* %rename_errno, align 4, !dbg !4917
  %call537 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.118, i64 0, i64 0)) #10, !dbg !4919
  %318 = load i8*, i8** %src_name.addr, align 8, !dbg !4920
  %call538 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %318), !dbg !4920
  %319 = load i8*, i8** %dst_name.addr, align 8, !dbg !4921
  %call539 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %319), !dbg !4921
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %317, i8* %call537, i8* %call538, i8* %call539), !dbg !4922
  %st_ino540 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4923, !ctir !338
  %320 = load i64, i64* %st_ino540, align 8, !dbg !4923, !ctir !260
  %st_dev541 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4924, !ctir !338
  %321 = load i64, i64* %st_dev541, align 8, !dbg !4924, !ctir !263
  call void @forget_created(i64 %320, i64 %321), !dbg !4925
  store i1 false, i1* %retval, align 1, !dbg !4926
  br label %return, !dbg !4926

if.end542:                                        ; preds = %if.end534
  %322 = load i32, i32* %src_mode, align 4, !dbg !4927
  %and543 = and i32 %322, 61440, !dbg !4927
  %cmp544 = icmp eq i32 %and543, 16384, !dbg !4927
  br i1 %cmp544, label %cond.true545, label %cond.false547, !dbg !4927

cond.true545:                                     ; preds = %if.end542
  %323 = load i8*, i8** %dst_name.addr, align 8, !dbg !4929
  %call546 = call i32 @rmdir(i8* %323) #10, !dbg !4930
  br label %cond.end549, !dbg !4927

cond.false547:                                    ; preds = %if.end542
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !4931
  %call548 = call i32 @unlink(i8* %324) #10, !dbg !4932
  br label %cond.end549, !dbg !4927

cond.end549:                                      ; preds = %cond.false547, %cond.true545
  %cond550 = phi i32 [ %call546, %cond.true545 ], [ %call548, %cond.false547 ], !dbg !4927
  %cmp551 = icmp ne i32 %cond550, 0, !dbg !4933
  br i1 %cmp551, label %land.lhs.true552, label %if.end562, !dbg !4934

land.lhs.true552:                                 ; preds = %cond.end549
  %call553 = call i32* @__errno_location() #15, !dbg !4935
  %325 = load i32, i32* %call553, align 4, !dbg !4935, !ctir !7
  %cmp554 = icmp ne i32 %325, 2, !dbg !4936
  br i1 %cmp554, label %if.then555, label %if.end562, !dbg !4937

if.then555:                                       ; preds = %land.lhs.true552
  %call556 = call i32* @__errno_location() #15, !dbg !4938
  %326 = load i32, i32* %call556, align 4, !dbg !4938, !ctir !7
  %call557 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.119, i64 0, i64 0)) #10, !dbg !4940
  %327 = load i8*, i8** %src_name.addr, align 8, !dbg !4941
  %call558 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %327), !dbg !4941
  %328 = load i8*, i8** %dst_name.addr, align 8, !dbg !4942
  %call559 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %328), !dbg !4942
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %326, i8* %call557, i8* %call558, i8* %call559), !dbg !4943
  %st_ino560 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4944, !ctir !338
  %329 = load i64, i64* %st_ino560, align 8, !dbg !4944, !ctir !260
  %st_dev561 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4945, !ctir !338
  %330 = load i64, i64* %st_dev561, align 8, !dbg !4945, !ctir !263
  call void @forget_created(i64 %329, i64 %330), !dbg !4946
  store i1 false, i1* %retval, align 1, !dbg !4947
  br label %return, !dbg !4947

if.end562:                                        ; preds = %land.lhs.true552, %cond.end549
  %331 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4948
  %verbose563 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %331, i32 0, i32 31, !dbg !4950, !ctir !3743
  %332 = load i8, i8* %verbose563, align 2, !dbg !4950
  %tobool564 = trunc i8 %332 to i1, !dbg !4950, !ctir !142
  br i1 %tobool564, label %land.lhs.true565, label %if.end571, !dbg !4951

land.lhs.true565:                                 ; preds = %if.end562
  %333 = load i32, i32* %src_mode, align 4, !dbg !4952
  %and566 = and i32 %333, 61440, !dbg !4952
  %cmp567 = icmp eq i32 %and566, 16384, !dbg !4952
  br i1 %cmp567, label %if.end571, label %if.then568, !dbg !4953

if.then568:                                       ; preds = %land.lhs.true565
  %call569 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.120, i64 0, i64 0)) #10, !dbg !4954
  %call570 = call i32 (i8*, ...) @printf(i8* %call569), !dbg !4956
  %334 = load i8*, i8** %src_name.addr, align 8, !dbg !4957
  %335 = load i8*, i8** %dst_name.addr, align 8, !dbg !4958
  %336 = load i8*, i8** %dst_backup, align 8, !dbg !4959
  call void @emit_verbose(i8* %334, i8* %335, i8* %336), !dbg !4960
  br label %if.end571, !dbg !4961

if.end571:                                        ; preds = %if.then568, %land.lhs.true565, %if.end562
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4962
  br label %if.end572, !dbg !4963

if.end572:                                        ; preds = %if.end571, %if.end492
  %337 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4964
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %337, i32 0, i32 28, !dbg !4965, !ctir !3743
  %338 = load i8, i8* %set_mode, align 1, !dbg !4965
  %tobool573 = trunc i8 %338 to i1, !dbg !4965, !ctir !142
  br i1 %tobool573, label %cond.true574, label %cond.false575, !dbg !4964

cond.true574:                                     ; preds = %if.end572
  %339 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4966
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %339, i32 0, i32 4, !dbg !4967, !ctir !3743
  %340 = load i32, i32* %mode, align 8, !dbg !4967, !ctir !239
  br label %cond.end576, !dbg !4964

cond.false575:                                    ; preds = %if.end572
  %341 = load i32, i32* %src_mode, align 4, !dbg !4968
  br label %cond.end576, !dbg !4964

cond.end576:                                      ; preds = %cond.false575, %cond.true574
  %cond577 = phi i32 [ %340, %cond.true574 ], [ %341, %cond.false575 ], !dbg !4964
  %and578 = and i32 %cond577, 4095, !dbg !4969
  store i32 %and578, i32* %dst_mode_bits, align 4, !dbg !4970
  %342 = load i32, i32* %dst_mode_bits, align 4, !dbg !4971
  %343 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4972
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %343, i32 0, i32 14, !dbg !4973, !ctir !3743
  %344 = load i8, i8* %preserve_ownership, align 1, !dbg !4973
  %tobool579 = trunc i8 %344 to i1, !dbg !4973, !ctir !142
  br i1 %tobool579, label %cond.true580, label %cond.false581, !dbg !4972

cond.true580:                                     ; preds = %cond.end576
  br label %cond.end585, !dbg !4972

cond.false581:                                    ; preds = %cond.end576
  %345 = load i32, i32* %src_mode, align 4, !dbg !4974
  %and582 = and i32 %345, 61440, !dbg !4974
  %cmp583 = icmp eq i32 %and582, 16384, !dbg !4974
  %346 = zext i1 %cmp583 to i64, !dbg !4974
  %cond584 = select i1 %cmp583, i32 18, i32 0, !dbg !4974
  br label %cond.end585, !dbg !4972

cond.end585:                                      ; preds = %cond.false581, %cond.true580
  %cond586 = phi i32 [ 63, %cond.true580 ], [ %cond584, %cond.false581 ], !dbg !4972
  %and587 = and i32 %342, %cond586, !dbg !4975
  store i32 %and587, i32* %omitted_permissions, align 4, !dbg !4976
  store i8 1, i8* %delayed_ok, align 1, !dbg !4977
  %347 = load i8*, i8** %src_name.addr, align 8, !dbg !4978
  %348 = load i8*, i8** %dst_name.addr, align 8, !dbg !4980
  %349 = load i32, i32* %src_mode, align 4, !dbg !4981
  %350 = load i8, i8* %new_dst.addr, align 1, !dbg !4982
  %tobool588 = trunc i8 %350 to i1, !dbg !4982
  %351 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4983
  %call589 = call zeroext i1 @set_process_security_ctx(i8* %347, i8* %348, i32 %349, i1 zeroext %tobool588, %struct.cp_options* %351), !dbg !4984
  br i1 %call589, label %if.end591, label %if.then590, !dbg !4985

if.then590:                                       ; preds = %cond.end585
  store i1 false, i1* %retval, align 1, !dbg !4986
  br label %return, !dbg !4986

if.end591:                                        ; preds = %cond.end585
  %352 = load i32, i32* %src_mode, align 4, !dbg !4987
  %and592 = and i32 %352, 61440, !dbg !4987
  %cmp593 = icmp eq i32 %and592, 16384, !dbg !4987
  br i1 %cmp593, label %if.then594, label %if.else685, !dbg !4989

if.then594:                                       ; preds = %if.end591
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !4990, metadata !DIExpression()), !dbg !4992
  %353 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !4993
  %call595 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %353) #14, !dbg !4995
  br i1 %call595, label %if.then596, label %if.end599, !dbg !4996

if.then596:                                       ; preds = %if.then594
  %call597 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.121, i64 0, i64 0)) #10, !dbg !4997
  %354 = load i8*, i8** %src_name.addr, align 8, !dbg !4999
  %call598 = call i8* @quotearg_style(i32 4, i8* %354), !dbg !4999
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call597, i8* %call598), !dbg !5000
  br label %un_backup, !dbg !5001

if.end599:                                        ; preds = %if.then594
  %355 = alloca i8, i64 24, align 16, !dbg !5002
  %356 = bitcast i8* %355 to %struct.dir_list*, !dbg !5002
  store %struct.dir_list* %356, %struct.dir_list** %dir, align 8, !dbg !5003
  %357 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5004
  %358 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5005
  %parent600 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %358, i32 0, i32 0, !dbg !5006, !ctir !376
  store %struct.dir_list* %357, %struct.dir_list** %parent600, align 8, !dbg !5007, !ctir !375
  %st_ino601 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5008, !ctir !338
  %359 = load i64, i64* %st_ino601, align 8, !dbg !5008, !ctir !260
  %360 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5009
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %360, i32 0, i32 1, !dbg !5010, !ctir !376
  store i64 %359, i64* %ino, align 8, !dbg !5011, !ctir !259
  %st_dev602 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5012, !ctir !338
  %361 = load i64, i64* %st_dev602, align 8, !dbg !5012, !ctir !263
  %362 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5013
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %362, i32 0, i32 2, !dbg !5014, !ctir !376
  store i64 %361, i64* %dev, align 8, !dbg !5015, !ctir !262
  %363 = load i8, i8* %new_dst.addr, align 1, !dbg !5016
  %tobool603 = trunc i8 %363 to i1, !dbg !5016
  br i1 %tobool603, label %if.then608, label %lor.lhs.false604, !dbg !5018

lor.lhs.false604:                                 ; preds = %if.end599
  %st_mode605 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5019, !ctir !338
  %364 = load i32, i32* %st_mode605, align 8, !dbg !5019, !ctir !168
  %and606 = and i32 %364, 61440, !dbg !5019
  %cmp607 = icmp eq i32 %and606, 16384, !dbg !5019
  br i1 %cmp607, label %if.else656, label %if.then608, !dbg !5020

if.then608:                                       ; preds = %lor.lhs.false604, %if.end599
  %365 = load i8*, i8** %dst_name.addr, align 8, !dbg !5021
  %366 = load i32, i32* %dst_mode_bits, align 4, !dbg !5024
  %367 = load i32, i32* %omitted_permissions, align 4, !dbg !5025
  %neg = xor i32 %367, -1, !dbg !5026
  %and609 = and i32 %366, %neg, !dbg !5027
  %call610 = call i32 @mkdir(i8* %365, i32 %and609) #10, !dbg !5028
  %cmp611 = icmp ne i32 %call610, 0, !dbg !5029
  br i1 %cmp611, label %if.then612, label %if.end616, !dbg !5030

if.then612:                                       ; preds = %if.then608
  %call613 = call i32* @__errno_location() #15, !dbg !5031
  %368 = load i32, i32* %call613, align 4, !dbg !5031, !ctir !7
  %call614 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.122, i64 0, i64 0)) #10, !dbg !5033
  %369 = load i8*, i8** %dst_name.addr, align 8, !dbg !5034
  %call615 = call i8* @quotearg_style(i32 4, i8* %369), !dbg !5034
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %368, i8* %call614, i8* %call615), !dbg !5035
  br label %un_backup, !dbg !5036

if.end616:                                        ; preds = %if.then608
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5037
  %call617 = call i32 @lstat(i8* %370, %struct.stat* %dst_sb) #10, !dbg !5039
  %cmp618 = icmp ne i32 %call617, 0, !dbg !5040
  br i1 %cmp618, label %if.then619, label %if.else623, !dbg !5041

if.then619:                                       ; preds = %if.end616
  %call620 = call i32* @__errno_location() #15, !dbg !5042
  %371 = load i32, i32* %call620, align 4, !dbg !5042, !ctir !7
  %call621 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !5044
  %372 = load i8*, i8** %dst_name.addr, align 8, !dbg !5045
  %call622 = call i8* @quotearg_style(i32 4, i8* %372), !dbg !5045
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %371, i8* %call621, i8* %call622), !dbg !5046
  br label %un_backup, !dbg !5047

if.else623:                                       ; preds = %if.end616
  %st_mode624 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5048, !ctir !338
  %373 = load i32, i32* %st_mode624, align 8, !dbg !5048, !ctir !168
  %and625 = and i32 %373, 448, !dbg !5050
  %cmp626 = icmp ne i32 %and625, 448, !dbg !5051
  br i1 %cmp626, label %if.then627, label %if.end636, !dbg !5052

if.then627:                                       ; preds = %if.else623
  %st_mode628 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5053, !ctir !338
  %374 = load i32, i32* %st_mode628, align 8, !dbg !5053, !ctir !168
  store i32 %374, i32* %dst_mode, align 4, !dbg !5055
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5056
  %375 = load i8*, i8** %dst_name.addr, align 8, !dbg !5057
  %376 = load i32, i32* %dst_mode, align 4, !dbg !5059
  %or = or i32 %376, 448, !dbg !5060
  %call629 = call i32 @chmod(i8* %375, i32 %or) #10, !dbg !5061
  %cmp630 = icmp ne i32 %call629, 0, !dbg !5062
  br i1 %cmp630, label %if.then631, label %if.end635, !dbg !5063

if.then631:                                       ; preds = %if.then627
  %call632 = call i32* @__errno_location() #15, !dbg !5064
  %377 = load i32, i32* %call632, align 4, !dbg !5064, !ctir !7
  %call633 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.123, i64 0, i64 0)) #10, !dbg !5066
  %378 = load i8*, i8** %dst_name.addr, align 8, !dbg !5067
  %call634 = call i8* @quotearg_style(i32 4, i8* %378), !dbg !5067
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %377, i8* %call633, i8* %call634), !dbg !5068
  br label %un_backup, !dbg !5069

if.end635:                                        ; preds = %if.then627
  br label %if.end636, !dbg !5070

if.end636:                                        ; preds = %if.end635, %if.else623
  br label %if.end637

if.end637:                                        ; preds = %if.end636
  %379 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5071
  %380 = load i8, i8* %379, align 1, !dbg !5073
  %tobool638 = trunc i8 %380 to i1, !dbg !5073, !ctir !142
  br i1 %tobool638, label %if.end643, label %if.then639, !dbg !5074

if.then639:                                       ; preds = %if.end637
  %381 = load i8*, i8** %dst_name.addr, align 8, !dbg !5075
  %st_ino640 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5077, !ctir !338
  %382 = load i64, i64* %st_ino640, align 8, !dbg !5077, !ctir !260
  %st_dev641 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5078, !ctir !338
  %383 = load i64, i64* %st_dev641, align 8, !dbg !5078, !ctir !263
  %call642 = call i8* @remember_copied(i8* %381, i64 %382, i64 %383), !dbg !5079
  %384 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5080
  store i8 1, i8* %384, align 1, !dbg !5081, !ctir !142
  br label %if.end643, !dbg !5082

if.end643:                                        ; preds = %if.then639, %if.end637
  %385 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5083
  %verbose644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %385, i32 0, i32 31, !dbg !5085, !ctir !3743
  %386 = load i8, i8* %verbose644, align 2, !dbg !5085
  %tobool645 = trunc i8 %386 to i1, !dbg !5085, !ctir !142
  br i1 %tobool645, label %if.then646, label %if.end655, !dbg !5086

if.then646:                                       ; preds = %if.end643
  %387 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5087
  %move_mode647 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %387, i32 0, i32 9, !dbg !5090, !ctir !3743
  %388 = load i8, i8* %move_mode647, align 8, !dbg !5090
  %tobool648 = trunc i8 %388 to i1, !dbg !5090, !ctir !142
  br i1 %tobool648, label %if.then649, label %if.else653, !dbg !5091

if.then649:                                       ; preds = %if.then646
  %call650 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.124, i64 0, i64 0)) #10, !dbg !5092
  %389 = load i8*, i8** %dst_name.addr, align 8, !dbg !5093
  %call651 = call i8* @quotearg_style(i32 4, i8* %389), !dbg !5093
  %call652 = call i32 (i8*, ...) @printf(i8* %call650, i8* %call651), !dbg !5094
  br label %if.end654, !dbg !5094

if.else653:                                       ; preds = %if.then646
  %390 = load i8*, i8** %src_name.addr, align 8, !dbg !5095
  %391 = load i8*, i8** %dst_name.addr, align 8, !dbg !5096
  call void @emit_verbose(i8* %390, i8* %391, i8* null), !dbg !5097
  br label %if.end654

if.end654:                                        ; preds = %if.else653, %if.then649
  br label %if.end655, !dbg !5098

if.end655:                                        ; preds = %if.end654, %if.end643
  br label %if.end671, !dbg !5099

if.else656:                                       ; preds = %lor.lhs.false604
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5100
  %392 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5102
  %set_security_context657 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %392, i32 0, i32 18, !dbg !5104, !ctir !3743
  %393 = load i8, i8* %set_security_context657, align 1, !dbg !5104
  %tobool658 = trunc i8 %393 to i1, !dbg !5104, !ctir !142
  br i1 %tobool658, label %if.then661, label %lor.lhs.false659, !dbg !5105

lor.lhs.false659:                                 ; preds = %if.else656
  %394 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5106
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %394, i32 0, i32 22, !dbg !5107, !ctir !3743
  %395 = load i8, i8* %preserve_security_context, align 1, !dbg !5107
  %tobool660 = trunc i8 %395 to i1, !dbg !5107, !ctir !142
  br i1 %tobool660, label %if.then661, label %if.end670, !dbg !5108

if.then661:                                       ; preds = %lor.lhs.false659, %if.else656
  %396 = load i8*, i8** %dst_name.addr, align 8, !dbg !5109
  %397 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5111
  %preserve_security_context662 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %397, i32 0, i32 22, !dbg !5112, !ctir !3743
  %398 = load i8, i8* %preserve_security_context662, align 1, !dbg !5112
  %tobool663 = trunc i8 %398 to i1, !dbg !5112, !ctir !142
  %399 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5113
  %call664 = call zeroext i1 @set_file_security_ctx(i8* %396, i1 zeroext %tobool663, i1 zeroext false, %struct.cp_options* %399), !dbg !5114
  br i1 %call664, label %if.end669, label %if.then665, !dbg !5115

if.then665:                                       ; preds = %if.then661
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5116
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %400, i32 0, i32 23, !dbg !5119, !ctir !3743
  %401 = load i8, i8* %require_preserve_context, align 2, !dbg !5119
  %tobool666 = trunc i8 %401 to i1, !dbg !5119, !ctir !142
  br i1 %tobool666, label %if.then667, label %if.end668, !dbg !5120

if.then667:                                       ; preds = %if.then665
  br label %un_backup, !dbg !5121

if.end668:                                        ; preds = %if.then665
  br label %if.end669, !dbg !5122

if.end669:                                        ; preds = %if.end668, %if.then661
  br label %if.end670, !dbg !5123

if.end670:                                        ; preds = %if.end669, %lor.lhs.false659
  br label %if.end671

if.end671:                                        ; preds = %if.end670, %if.end655
  %402 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5124
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %402, i32 0, i32 13, !dbg !5126, !ctir !3743
  %403 = load i8, i8* %one_file_system, align 4, !dbg !5126
  %tobool672 = trunc i8 %403 to i1, !dbg !5126, !ctir !142
  br i1 %tobool672, label %land.lhs.true673, label %if.else680, !dbg !5127

land.lhs.true673:                                 ; preds = %if.end671
  %404 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5128
  %tobool674 = icmp ne %struct.stat* %404, null, !dbg !5128
  br i1 %tobool674, label %land.lhs.true675, label %if.else680, !dbg !5129

land.lhs.true675:                                 ; preds = %land.lhs.true673
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5130
  %st_dev676 = getelementptr inbounds %struct.stat, %struct.stat* %405, i32 0, i32 0, !dbg !5131, !ctir !392
  %406 = load i64, i64* %st_dev676, align 8, !dbg !5131, !ctir !263
  %st_dev677 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5132, !ctir !338
  %407 = load i64, i64* %st_dev677, align 8, !dbg !5132, !ctir !263
  %cmp678 = icmp ne i64 %406, %407, !dbg !5133
  br i1 %cmp678, label %if.then679, label %if.else680, !dbg !5134

if.then679:                                       ; preds = %land.lhs.true675
  br label %if.end684, !dbg !5135

if.else680:                                       ; preds = %land.lhs.true675, %land.lhs.true673, %if.end671
  %408 = load i8*, i8** %src_name.addr, align 8, !dbg !5137
  %409 = load i8*, i8** %dst_name.addr, align 8, !dbg !5139
  %410 = load i8, i8* %new_dst.addr, align 1, !dbg !5140
  %tobool681 = trunc i8 %410 to i1, !dbg !5140
  %411 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5141
  %412 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5142
  %413 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5143
  %414 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5144
  %call682 = call zeroext i1 @copy_dir(i8* %408, i8* %409, i1 zeroext %tobool681, %struct.stat* %src_sb, %struct.dir_list* %411, %struct.cp_options* %412, i8* %413, i8* %414), !dbg !5145
  %frombool683 = zext i1 %call682 to i8, !dbg !5146
  store i8 %frombool683, i8* %delayed_ok, align 1, !dbg !5146
  br label %if.end684

if.end684:                                        ; preds = %if.else680, %if.then679
  br label %if.end897, !dbg !5147

if.else685:                                       ; preds = %if.end591
  %415 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5148
  %symbolic_link686 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %415, i32 0, i32 29, !dbg !5150, !ctir !3743
  %416 = load i8, i8* %symbolic_link686, align 4, !dbg !5150
  %tobool687 = trunc i8 %416 to i1, !dbg !5150, !ctir !142
  br i1 %tobool687, label %if.then688, label %if.else733, !dbg !5151

if.then688:                                       ; preds = %if.else685
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5152
  %417 = load i8*, i8** %src_name.addr, align 8, !dbg !5154
  %418 = load i8, i8* %417, align 1, !dbg !5156, !ctir !117
  %conv = sext i8 %418 to i32, !dbg !5156
  %cmp689 = icmp ne i32 %conv, 47, !dbg !5157
  br i1 %cmp689, label %if.then691, label %if.end722, !dbg !5158

if.then691:                                       ; preds = %if.then688
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5159, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5162, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5164, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5166, metadata !DIExpression()), !dbg !5167
  %419 = load i8*, i8** %dst_name.addr, align 8, !dbg !5168
  %call692 = call i8* @dir_name(i8* %419), !dbg !5169
  store i8* %call692, i8** %dst_parent, align 8, !dbg !5170
  %420 = load i8*, i8** %dst_parent, align 8, !dbg !5171
  %call693 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), i8* %420) #14, !dbg !5171
  %cmp694 = icmp eq i32 %call693, 0, !dbg !5171
  br i1 %cmp694, label %lor.end715, label %lor.lhs.false696, !dbg !5172

lor.lhs.false696:                                 ; preds = %if.then691
  %call697 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), %struct.stat* %dot_sb) #10, !dbg !5173
  %cmp698 = icmp ne i32 %call697, 0, !dbg !5174
  br i1 %cmp698, label %lor.end715, label %lor.lhs.false700, !dbg !5175

lor.lhs.false700:                                 ; preds = %lor.lhs.false696
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !5176
  %call701 = call i32 @stat(i8* %421, %struct.stat* %dst_parent_sb) #10, !dbg !5177
  %cmp702 = icmp ne i32 %call701, 0, !dbg !5178
  br i1 %cmp702, label %lor.end715, label %lor.rhs704, !dbg !5179

lor.rhs704:                                       ; preds = %lor.lhs.false700
  %st_ino705 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !5180, !ctir !338
  %422 = load i64, i64* %st_ino705, align 8, !dbg !5180, !ctir !260
  %st_ino706 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !5180, !ctir !338
  %423 = load i64, i64* %st_ino706, align 8, !dbg !5180, !ctir !260
  %cmp707 = icmp eq i64 %422, %423, !dbg !5180
  br i1 %cmp707, label %land.rhs709, label %land.end714, !dbg !5180

land.rhs709:                                      ; preds = %lor.rhs704
  %st_dev710 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !5180, !ctir !338
  %424 = load i64, i64* %st_dev710, align 8, !dbg !5180, !ctir !263
  %st_dev711 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !5180, !ctir !338
  %425 = load i64, i64* %st_dev711, align 8, !dbg !5180, !ctir !263
  %cmp712 = icmp eq i64 %424, %425, !dbg !5180
  br label %land.end714

land.end714:                                      ; preds = %land.rhs709, %lor.rhs704
  %426 = phi i1 [ false, %lor.rhs704 ], [ %cmp712, %land.rhs709 ], !dbg !5181
  br label %lor.end715, !dbg !5179

lor.end715:                                       ; preds = %land.end714, %lor.lhs.false700, %lor.lhs.false696, %if.then691
  %427 = phi i1 [ true, %lor.lhs.false700 ], [ true, %lor.lhs.false696 ], [ true, %if.then691 ], [ %426, %land.end714 ]
  %frombool716 = zext i1 %427 to i8, !dbg !5182
  store i8 %frombool716, i8* %in_current_dir, align 1, !dbg !5182
  %428 = load i8*, i8** %dst_parent, align 8, !dbg !5183
  call void @free(i8* %428) #10, !dbg !5184
  %429 = load i8, i8* %in_current_dir, align 1, !dbg !5185
  %tobool717 = trunc i8 %429 to i1, !dbg !5185
  br i1 %tobool717, label %if.end721, label %if.then718, !dbg !5187

if.then718:                                       ; preds = %lor.end715
  %call719 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.126, i64 0, i64 0)) #10, !dbg !5188
  %430 = load i8*, i8** %dst_name.addr, align 8, !dbg !5190
  %call720 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %430), !dbg !5190
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call719, i8* %call720), !dbg !5191
  br label %un_backup, !dbg !5192

if.end721:                                        ; preds = %lor.end715
  br label %if.end722, !dbg !5193

if.end722:                                        ; preds = %if.end721, %if.then688
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5194, metadata !DIExpression()), !dbg !5195
  %431 = load i8*, i8** %src_name.addr, align 8, !dbg !5196
  %432 = load i8*, i8** %dst_name.addr, align 8, !dbg !5197
  %433 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5198
  %unlink_dest_after_failed_open723 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %433, i32 0, i32 7, !dbg !5199, !ctir !3743
  %434 = load i8, i8* %unlink_dest_after_failed_open723, align 2, !dbg !5199
  %tobool724 = trunc i8 %434 to i1, !dbg !5199, !ctir !142
  %call725 = call i32 @force_symlinkat(i8* %431, i32 -100, i8* %432, i1 zeroext %tobool724, i32 -1), !dbg !5200
  store i32 %call725, i32* %err, align 4, !dbg !5195
  %435 = load i32, i32* %err, align 4, !dbg !5201
  %cmp726 = icmp slt i32 0, %435, !dbg !5203
  br i1 %cmp726, label %if.then728, label %if.end732, !dbg !5204

if.then728:                                       ; preds = %if.end722
  %436 = load i32, i32* %err, align 4, !dbg !5205
  %call729 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.127, i64 0, i64 0)) #10, !dbg !5207
  %437 = load i8*, i8** %dst_name.addr, align 8, !dbg !5208
  %call730 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %437), !dbg !5208
  %438 = load i8*, i8** %src_name.addr, align 8, !dbg !5209
  %call731 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %438), !dbg !5209
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %436, i8* %call729, i8* %call730, i8* %call731), !dbg !5210
  br label %un_backup, !dbg !5211

if.end732:                                        ; preds = %if.end722
  br label %if.end896, !dbg !5212

if.else733:                                       ; preds = %if.else685
  %439 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5213
  %hard_link734 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %439, i32 0, i32 8, !dbg !5215, !ctir !3743
  %440 = load i8, i8* %hard_link734, align 1, !dbg !5215
  %tobool735 = trunc i8 %440 to i1, !dbg !5215, !ctir !142
  br i1 %tobool735, label %if.then737, label %if.else752, !dbg !5216

if.then737:                                       ; preds = %if.else733
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !5217, metadata !DIExpression()), !dbg !5219
  %441 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5220
  %unlink_dest_after_failed_open738 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %441, i32 0, i32 7, !dbg !5221, !ctir !3743
  %442 = load i8, i8* %unlink_dest_after_failed_open738, align 2, !dbg !5221
  %tobool739 = trunc i8 %442 to i1, !dbg !5221, !ctir !142
  br i1 %tobool739, label %lor.end745, label %lor.rhs741, !dbg !5222

lor.rhs741:                                       ; preds = %if.then737
  %443 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5223
  %interactive742 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %443, i32 0, i32 2, !dbg !5224, !ctir !3743
  %444 = load i32, i32* %interactive742, align 8, !dbg !5224, !ctir !83
  %cmp743 = icmp eq i32 %444, 3, !dbg !5225
  br label %lor.end745, !dbg !5222

lor.end745:                                       ; preds = %lor.rhs741, %if.then737
  %445 = phi i1 [ true, %if.then737 ], [ %cmp743, %lor.rhs741 ]
  %frombool746 = zext i1 %445 to i8, !dbg !5219
  store i8 %frombool746, i8* %replace, align 1, !dbg !5219
  %446 = load i8*, i8** %src_name.addr, align 8, !dbg !5226
  %447 = load i8*, i8** %dst_name.addr, align 8, !dbg !5228
  %448 = load i8, i8* %replace, align 1, !dbg !5229
  %tobool747 = trunc i8 %448 to i1, !dbg !5229
  %449 = load i8, i8* %dereference69, align 1, !dbg !5230
  %tobool748 = trunc i8 %449 to i1, !dbg !5230
  %call749 = call zeroext i1 @create_hard_link(i8* %446, i8* %447, i1 zeroext %tobool747, i1 zeroext false, i1 zeroext %tobool748), !dbg !5231
  br i1 %call749, label %if.end751, label %if.then750, !dbg !5232

if.then750:                                       ; preds = %lor.end745
  br label %un_backup, !dbg !5233

if.end751:                                        ; preds = %lor.end745
  br label %if.end895, !dbg !5234

if.else752:                                       ; preds = %if.else733
  %450 = load i32, i32* %src_mode, align 4, !dbg !5235
  %and753 = and i32 %450, 61440, !dbg !5235
  %cmp754 = icmp eq i32 %and753, 32768, !dbg !5235
  br i1 %cmp754, label %if.then764, label %lor.lhs.false756, !dbg !5237

lor.lhs.false756:                                 ; preds = %if.else752
  %451 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5238
  %copy_as_regular757 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %451, i32 0, i32 5, !dbg !5239, !ctir !3743
  %452 = load i8, i8* %copy_as_regular757, align 4, !dbg !5239
  %tobool758 = trunc i8 %452 to i1, !dbg !5239, !ctir !142
  br i1 %tobool758, label %land.lhs.true760, label %if.else769, !dbg !5240

land.lhs.true760:                                 ; preds = %lor.lhs.false756
  %453 = load i32, i32* %src_mode, align 4, !dbg !5241
  %and761 = and i32 %453, 61440, !dbg !5241
  %cmp762 = icmp eq i32 %and761, 40960, !dbg !5241
  br i1 %cmp762, label %if.else769, label %if.then764, !dbg !5242

if.then764:                                       ; preds = %land.lhs.true760, %if.else752
  store i8 1, i8* %copied_as_regular, align 1, !dbg !5243
  %454 = load i8*, i8** %src_name.addr, align 8, !dbg !5245
  %455 = load i8*, i8** %dst_name.addr, align 8, !dbg !5247
  %456 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5248
  %457 = load i32, i32* %dst_mode_bits, align 4, !dbg !5249
  %and765 = and i32 %457, 511, !dbg !5250
  %458 = load i32, i32* %omitted_permissions, align 4, !dbg !5251
  %call766 = call zeroext i1 @copy_reg(i8* %454, i8* %455, %struct.cp_options* %456, i32 %and765, i32 %458, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !5252
  br i1 %call766, label %if.end768, label %if.then767, !dbg !5253

if.then767:                                       ; preds = %if.then764
  br label %un_backup, !dbg !5254

if.end768:                                        ; preds = %if.then764
  br label %if.end894, !dbg !5255

if.else769:                                       ; preds = %land.lhs.true760, %lor.lhs.false756
  %459 = load i32, i32* %src_mode, align 4, !dbg !5256
  %and770 = and i32 %459, 61440, !dbg !5256
  %cmp771 = icmp eq i32 %and770, 4096, !dbg !5256
  br i1 %cmp771, label %if.then773, label %if.else792, !dbg !5258

if.then773:                                       ; preds = %if.else769
  %460 = load i8*, i8** %dst_name.addr, align 8, !dbg !5259
  %461 = load i32, i32* %src_mode, align 4, !dbg !5262
  %462 = load i32, i32* %omitted_permissions, align 4, !dbg !5263
  %neg774 = xor i32 %462, -1, !dbg !5264
  %and775 = and i32 %461, %neg774, !dbg !5265
  %call776 = call i32 @mknod(i8* %460, i32 %and775, i64 0) #10, !dbg !5266
  %cmp777 = icmp ne i32 %call776, 0, !dbg !5267
  br i1 %cmp777, label %if.then779, label %if.end791, !dbg !5268

if.then779:                                       ; preds = %if.then773
  %463 = load i8*, i8** %dst_name.addr, align 8, !dbg !5269
  %464 = load i32, i32* %src_mode, align 4, !dbg !5271
  %and780 = and i32 %464, -4097, !dbg !5272
  %465 = load i32, i32* %omitted_permissions, align 4, !dbg !5273
  %neg781 = xor i32 %465, -1, !dbg !5274
  %and782 = and i32 %and780, %neg781, !dbg !5275
  %call783 = call i32 @mkfifo(i8* %463, i32 %and782) #10, !dbg !5276
  %cmp784 = icmp ne i32 %call783, 0, !dbg !5277
  br i1 %cmp784, label %if.then786, label %if.end790, !dbg !5278

if.then786:                                       ; preds = %if.then779
  %call787 = call i32* @__errno_location() #15, !dbg !5279
  %466 = load i32, i32* %call787, align 4, !dbg !5279, !ctir !7
  %call788 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.128, i64 0, i64 0)) #10, !dbg !5281
  %467 = load i8*, i8** %dst_name.addr, align 8, !dbg !5282
  %call789 = call i8* @quotearg_style(i32 4, i8* %467), !dbg !5282
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %466, i8* %call788, i8* %call789), !dbg !5283
  br label %un_backup, !dbg !5284

if.end790:                                        ; preds = %if.then779
  br label %if.end791, !dbg !5285

if.end791:                                        ; preds = %if.end790, %if.then773
  br label %if.end893, !dbg !5286

if.else792:                                       ; preds = %if.else769
  %468 = load i32, i32* %src_mode, align 4, !dbg !5287
  %and793 = and i32 %468, 61440, !dbg !5287
  %cmp794 = icmp eq i32 %and793, 24576, !dbg !5287
  br i1 %cmp794, label %if.then804, label %lor.lhs.false796, !dbg !5289

lor.lhs.false796:                                 ; preds = %if.else792
  %469 = load i32, i32* %src_mode, align 4, !dbg !5290
  %and797 = and i32 %469, 61440, !dbg !5290
  %cmp798 = icmp eq i32 %and797, 8192, !dbg !5290
  br i1 %cmp798, label %if.then804, label %lor.lhs.false800, !dbg !5291

lor.lhs.false800:                                 ; preds = %lor.lhs.false796
  %470 = load i32, i32* %src_mode, align 4, !dbg !5292
  %and801 = and i32 %470, 61440, !dbg !5292
  %cmp802 = icmp eq i32 %and801, 49152, !dbg !5292
  br i1 %cmp802, label %if.then804, label %if.else815, !dbg !5293

if.then804:                                       ; preds = %lor.lhs.false800, %lor.lhs.false796, %if.else792
  %471 = load i8*, i8** %dst_name.addr, align 8, !dbg !5294
  %472 = load i32, i32* %src_mode, align 4, !dbg !5297
  %473 = load i32, i32* %omitted_permissions, align 4, !dbg !5298
  %neg805 = xor i32 %473, -1, !dbg !5299
  %and806 = and i32 %472, %neg805, !dbg !5300
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !5301, !ctir !338
  %474 = load i64, i64* %st_rdev, align 8, !dbg !5301, !ctir !263
  %call807 = call i32 @mknod(i8* %471, i32 %and806, i64 %474) #10, !dbg !5302
  %cmp808 = icmp ne i32 %call807, 0, !dbg !5303
  br i1 %cmp808, label %if.then810, label %if.end814, !dbg !5304

if.then810:                                       ; preds = %if.then804
  %call811 = call i32* @__errno_location() #15, !dbg !5305
  %475 = load i32, i32* %call811, align 4, !dbg !5305, !ctir !7
  %call812 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.129, i64 0, i64 0)) #10, !dbg !5307
  %476 = load i8*, i8** %dst_name.addr, align 8, !dbg !5308
  %call813 = call i8* @quotearg_style(i32 4, i8* %476), !dbg !5308
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %475, i8* %call812, i8* %call813), !dbg !5309
  br label %un_backup, !dbg !5310

if.end814:                                        ; preds = %if.then804
  br label %if.end892, !dbg !5311

if.else815:                                       ; preds = %lor.lhs.false800
  %477 = load i32, i32* %src_mode, align 4, !dbg !5312
  %and816 = and i32 %477, 61440, !dbg !5312
  %cmp817 = icmp eq i32 %and816, 40960, !dbg !5312
  br i1 %cmp817, label %if.then819, label %if.else888, !dbg !5314

if.then819:                                       ; preds = %if.else815
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !5315, metadata !DIExpression()), !dbg !5317
  %478 = load i8*, i8** %src_name.addr, align 8, !dbg !5318
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !5319, !ctir !338
  %479 = load i64, i64* %st_size, align 8, !dbg !5319, !ctir !29
  %call820 = call i8* @areadlink_with_size(i8* %478, i64 %479), !dbg !5320
  store i8* %call820, i8** %src_link_val, align 8, !dbg !5317
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5321
  %480 = load i8*, i8** %src_link_val, align 8, !dbg !5322
  %cmp821 = icmp eq i8* %480, null, !dbg !5324
  br i1 %cmp821, label %if.then823, label %if.end827, !dbg !5325

if.then823:                                       ; preds = %if.then819
  %call824 = call i32* @__errno_location() #15, !dbg !5326
  %481 = load i32, i32* %call824, align 4, !dbg !5326, !ctir !7
  %call825 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.130, i64 0, i64 0)) #10, !dbg !5328
  %482 = load i8*, i8** %src_name.addr, align 8, !dbg !5329
  %call826 = call i8* @quotearg_style(i32 4, i8* %482), !dbg !5329
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %481, i8* %call825, i8* %call826), !dbg !5330
  br label %un_backup, !dbg !5331

if.end827:                                        ; preds = %if.then819
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !5332, metadata !DIExpression()), !dbg !5333
  %483 = load i8*, i8** %src_link_val, align 8, !dbg !5334
  %484 = load i8*, i8** %dst_name.addr, align 8, !dbg !5335
  %485 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5336
  %unlink_dest_after_failed_open828 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %485, i32 0, i32 7, !dbg !5337, !ctir !3743
  %486 = load i8, i8* %unlink_dest_after_failed_open828, align 2, !dbg !5337
  %tobool829 = trunc i8 %486 to i1, !dbg !5337, !ctir !142
  %call830 = call i32 @force_symlinkat(i8* %483, i32 -100, i8* %484, i1 zeroext %tobool829, i32 -1), !dbg !5338
  store i32 %call830, i32* %symlink_err, align 4, !dbg !5333
  %487 = load i32, i32* %symlink_err, align 4, !dbg !5339
  %cmp831 = icmp slt i32 0, %487, !dbg !5341
  br i1 %cmp831, label %land.lhs.true833, label %if.end860, !dbg !5342

land.lhs.true833:                                 ; preds = %if.end827
  %488 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5343
  %update834 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %488, i32 0, i32 30, !dbg !5344, !ctir !3743
  %489 = load i8, i8* %update834, align 1, !dbg !5344
  %tobool835 = trunc i8 %489 to i1, !dbg !5344, !ctir !142
  br i1 %tobool835, label %land.lhs.true837, label %if.end860, !dbg !5345

land.lhs.true837:                                 ; preds = %land.lhs.true833
  %490 = load i8, i8* %new_dst.addr, align 1, !dbg !5346
  %tobool838 = trunc i8 %490 to i1, !dbg !5346
  br i1 %tobool838, label %if.end860, label %land.lhs.true839, !dbg !5347

land.lhs.true839:                                 ; preds = %land.lhs.true837
  %st_mode840 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5348, !ctir !338
  %491 = load i32, i32* %st_mode840, align 8, !dbg !5348, !ctir !168
  %and841 = and i32 %491, 61440, !dbg !5348
  %cmp842 = icmp eq i32 %and841, 40960, !dbg !5348
  br i1 %cmp842, label %land.lhs.true844, label %if.end860, !dbg !5349

land.lhs.true844:                                 ; preds = %land.lhs.true839
  %st_size845 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5350, !ctir !338
  %492 = load i64, i64* %st_size845, align 8, !dbg !5350, !ctir !29
  %493 = load i8*, i8** %src_link_val, align 8, !dbg !5351
  %call846 = call i64 @strlen(i8* %493) #14, !dbg !5352
  %cmp847 = icmp eq i64 %492, %call846, !dbg !5353
  br i1 %cmp847, label %if.then849, label %if.end860, !dbg !5354

if.then849:                                       ; preds = %land.lhs.true844
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !5355, metadata !DIExpression()), !dbg !5357
  %494 = load i8*, i8** %dst_name.addr, align 8, !dbg !5358
  %st_size850 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5359, !ctir !338
  %495 = load i64, i64* %st_size850, align 8, !dbg !5359, !ctir !29
  %call851 = call i8* @areadlink_with_size(i8* %494, i64 %495), !dbg !5360
  store i8* %call851, i8** %dest_link_val, align 8, !dbg !5357
  %496 = load i8*, i8** %dest_link_val, align 8, !dbg !5361
  %tobool852 = icmp ne i8* %496, null, !dbg !5361
  br i1 %tobool852, label %if.then853, label %if.end859, !dbg !5363

if.then853:                                       ; preds = %if.then849
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !5364
  %498 = load i8*, i8** %src_link_val, align 8, !dbg !5364
  %call854 = call i32 @strcmp(i8* %497, i8* %498) #14, !dbg !5364
  %cmp855 = icmp eq i32 %call854, 0, !dbg !5364
  br i1 %cmp855, label %if.then857, label %if.end858, !dbg !5367

if.then857:                                       ; preds = %if.then853
  store i32 0, i32* %symlink_err, align 4, !dbg !5368
  br label %if.end858, !dbg !5369

if.end858:                                        ; preds = %if.then857, %if.then853
  %499 = load i8*, i8** %dest_link_val, align 8, !dbg !5370
  call void @free(i8* %499) #10, !dbg !5371
  br label %if.end859, !dbg !5372

if.end859:                                        ; preds = %if.end858, %if.then849
  br label %if.end860, !dbg !5373

if.end860:                                        ; preds = %if.end859, %land.lhs.true844, %land.lhs.true839, %land.lhs.true837, %land.lhs.true833, %if.end827
  %500 = load i8*, i8** %src_link_val, align 8, !dbg !5374
  call void @free(i8* %500) #10, !dbg !5375
  %501 = load i32, i32* %symlink_err, align 4, !dbg !5376
  %cmp861 = icmp slt i32 0, %501, !dbg !5378
  br i1 %cmp861, label %if.then863, label %if.end866, !dbg !5379

if.then863:                                       ; preds = %if.end860
  %502 = load i32, i32* %symlink_err, align 4, !dbg !5380
  %call864 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.131, i64 0, i64 0)) #10, !dbg !5382
  %503 = load i8*, i8** %dst_name.addr, align 8, !dbg !5383
  %call865 = call i8* @quotearg_style(i32 4, i8* %503), !dbg !5383
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %502, i8* %call864, i8* %call865), !dbg !5384
  br label %un_backup, !dbg !5385

if.end866:                                        ; preds = %if.end860
  %504 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5386
  %preserve_security_context867 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %504, i32 0, i32 22, !dbg !5388, !ctir !3743
  %505 = load i8, i8* %preserve_security_context867, align 1, !dbg !5388
  %tobool868 = trunc i8 %505 to i1, !dbg !5388, !ctir !142
  br i1 %tobool868, label %if.then869, label %if.end870, !dbg !5389

if.then869:                                       ; preds = %if.end866
  call void @restore_default_fscreatecon_or_die(), !dbg !5390
  br label %if.end870, !dbg !5390

if.end870:                                        ; preds = %if.then869, %if.end866
  %506 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5391
  %preserve_ownership871 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %506, i32 0, i32 14, !dbg !5393, !ctir !3743
  %507 = load i8, i8* %preserve_ownership871, align 1, !dbg !5393
  %tobool872 = trunc i8 %507 to i1, !dbg !5393, !ctir !142
  br i1 %tobool872, label %if.then873, label %if.end887, !dbg !5394

if.then873:                                       ; preds = %if.end870
  %508 = load i8*, i8** %dst_name.addr, align 8, !dbg !5395
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5398, !ctir !338
  %509 = load i32, i32* %st_uid, align 4, !dbg !5398, !ctir !346
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5399, !ctir !338
  %510 = load i32, i32* %st_gid, align 8, !dbg !5399, !ctir !348
  %call874 = call i32 @lchown(i8* %508, i32 %509, i32 %510) #10, !dbg !5400
  %cmp875 = icmp ne i32 %call874, 0, !dbg !5401
  br i1 %cmp875, label %land.lhs.true877, label %if.else885, !dbg !5402

land.lhs.true877:                                 ; preds = %if.then873
  %511 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5403
  %call878 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %511) #14, !dbg !5404
  br i1 %call878, label %if.else885, label %if.then879, !dbg !5405

if.then879:                                       ; preds = %land.lhs.true877
  %call880 = call i32* @__errno_location() #15, !dbg !5406
  %512 = load i32, i32* %call880, align 4, !dbg !5406, !ctir !7
  %call881 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #10, !dbg !5408
  %513 = load i8*, i8** %dst_name.addr, align 8, !dbg !5409
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %512, i8* %call881, i8* %513), !dbg !5410
  %514 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5411
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %514, i32 0, i32 21, !dbg !5413, !ctir !3743
  %515 = load i8, i8* %require_preserve, align 4, !dbg !5413
  %tobool882 = trunc i8 %515 to i1, !dbg !5413, !ctir !142
  br i1 %tobool882, label %if.then883, label %if.end884, !dbg !5414

if.then883:                                       ; preds = %if.then879
  br label %un_backup, !dbg !5415

if.end884:                                        ; preds = %if.then879
  br label %if.end886, !dbg !5416

if.else885:                                       ; preds = %land.lhs.true877, %if.then873
  br label %if.end886

if.end886:                                        ; preds = %if.else885, %if.end884
  br label %if.end887, !dbg !5417

if.end887:                                        ; preds = %if.end886, %if.end870
  br label %if.end891, !dbg !5418

if.else888:                                       ; preds = %if.else815
  %call889 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.133, i64 0, i64 0)) #10, !dbg !5419
  %516 = load i8*, i8** %src_name.addr, align 8, !dbg !5421
  %call890 = call i8* @quotearg_style(i32 4, i8* %516), !dbg !5421
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call889, i8* %call890), !dbg !5422
  br label %un_backup, !dbg !5423

if.end891:                                        ; preds = %if.end887
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end814
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end791
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end768
  br label %if.end895

if.end895:                                        ; preds = %if.end894, %if.end751
  br label %if.end896

if.end896:                                        ; preds = %if.end895, %if.end732
  br label %if.end897

if.end897:                                        ; preds = %if.end896, %if.end684
  %517 = load i8, i8* %new_dst.addr, align 1, !dbg !5424
  %tobool898 = trunc i8 %517 to i1, !dbg !5424
  br i1 %tobool898, label %if.end924, label %land.lhs.true899, !dbg !5426

land.lhs.true899:                                 ; preds = %if.end897
  %518 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5427
  %copy_as_regular900 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %518, i32 0, i32 5, !dbg !5428, !ctir !3743
  %519 = load i8, i8* %copy_as_regular900, align 4, !dbg !5428
  %tobool901 = trunc i8 %519 to i1, !dbg !5428, !ctir !142
  br i1 %tobool901, label %if.end924, label %land.lhs.true902, !dbg !5429

land.lhs.true902:                                 ; preds = %land.lhs.true899
  %520 = load i32, i32* %src_mode, align 4, !dbg !5430
  %and903 = and i32 %520, 61440, !dbg !5430
  %cmp904 = icmp eq i32 %and903, 16384, !dbg !5430
  br i1 %cmp904, label %if.end924, label %land.lhs.true906, !dbg !5431

land.lhs.true906:                                 ; preds = %land.lhs.true902
  %521 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5432
  %set_security_context907 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %521, i32 0, i32 18, !dbg !5433, !ctir !3743
  %522 = load i8, i8* %set_security_context907, align 1, !dbg !5433
  %tobool908 = trunc i8 %522 to i1, !dbg !5433, !ctir !142
  br i1 %tobool908, label %if.then914, label %lor.lhs.false910, !dbg !5434

lor.lhs.false910:                                 ; preds = %land.lhs.true906
  %523 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5435
  %preserve_security_context911 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %523, i32 0, i32 22, !dbg !5436, !ctir !3743
  %524 = load i8, i8* %preserve_security_context911, align 1, !dbg !5436
  %tobool912 = trunc i8 %524 to i1, !dbg !5436, !ctir !142
  br i1 %tobool912, label %if.then914, label %if.end924, !dbg !5437

if.then914:                                       ; preds = %lor.lhs.false910, %land.lhs.true906
  %525 = load i8*, i8** %dst_name.addr, align 8, !dbg !5438
  %526 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5441
  %preserve_security_context915 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %526, i32 0, i32 22, !dbg !5442, !ctir !3743
  %527 = load i8, i8* %preserve_security_context915, align 1, !dbg !5442
  %tobool916 = trunc i8 %527 to i1, !dbg !5442, !ctir !142
  %528 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5443
  %call917 = call zeroext i1 @set_file_security_ctx(i8* %525, i1 zeroext %tobool916, i1 zeroext false, %struct.cp_options* %528), !dbg !5444
  br i1 %call917, label %if.end923, label %if.then918, !dbg !5445

if.then918:                                       ; preds = %if.then914
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5446
  %require_preserve_context919 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %529, i32 0, i32 23, !dbg !5449, !ctir !3743
  %530 = load i8, i8* %require_preserve_context919, align 2, !dbg !5449
  %tobool920 = trunc i8 %530 to i1, !dbg !5449, !ctir !142
  br i1 %tobool920, label %if.then921, label %if.end922, !dbg !5450

if.then921:                                       ; preds = %if.then918
  br label %un_backup, !dbg !5451

if.end922:                                        ; preds = %if.then918
  br label %if.end923, !dbg !5452

if.end923:                                        ; preds = %if.end922, %if.then914
  br label %if.end924, !dbg !5453

if.end924:                                        ; preds = %if.end923, %lor.lhs.false910, %land.lhs.true902, %land.lhs.true899, %if.end897
  %531 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5454
  %tobool925 = trunc i8 %531 to i1, !dbg !5454
  br i1 %tobool925, label %land.lhs.true927, label %if.end937, !dbg !5456

land.lhs.true927:                                 ; preds = %if.end924
  %532 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5457
  %dest_info928 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %532, i32 0, i32 37, !dbg !5458, !ctir !3743
  %533 = load %struct.hash_table*, %struct.hash_table** %dest_info928, align 8, !dbg !5458, !ctir !241
  %tobool929 = icmp ne %struct.hash_table* %533, null, !dbg !5457
  br i1 %tobool929, label %if.then930, label %if.end937, !dbg !5459

if.then930:                                       ; preds = %land.lhs.true927
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !5460, metadata !DIExpression()), !dbg !5462
  %534 = load i8*, i8** %dst_name.addr, align 8, !dbg !5463
  %call931 = call i32 @lstat(i8* %534, %struct.stat* %sb) #10, !dbg !5465
  %cmp932 = icmp eq i32 %call931, 0, !dbg !5466
  br i1 %cmp932, label %if.then934, label %if.end936, !dbg !5467

if.then934:                                       ; preds = %if.then930
  %535 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5468
  %dest_info935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %535, i32 0, i32 37, !dbg !5469, !ctir !3743
  %536 = load %struct.hash_table*, %struct.hash_table** %dest_info935, align 8, !dbg !5469, !ctir !241
  %537 = load i8*, i8** %dst_name.addr, align 8, !dbg !5470
  call void @record_file(%struct.hash_table* %536, i8* %537, %struct.stat* %sb), !dbg !5471
  br label %if.end936, !dbg !5471

if.end936:                                        ; preds = %if.then934, %if.then930
  br label %if.end937, !dbg !5472

if.end937:                                        ; preds = %if.end936, %land.lhs.true927, %if.end924
  %538 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5473
  %hard_link938 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %538, i32 0, i32 8, !dbg !5475, !ctir !3743
  %539 = load i8, i8* %hard_link938, align 1, !dbg !5475
  %tobool939 = trunc i8 %539 to i1, !dbg !5475, !ctir !142
  br i1 %tobool939, label %land.lhs.true941, label %if.end947, !dbg !5476

land.lhs.true941:                                 ; preds = %if.end937
  %540 = load i32, i32* %src_mode, align 4, !dbg !5477
  %and942 = and i32 %540, 61440, !dbg !5477
  %cmp943 = icmp eq i32 %and942, 16384, !dbg !5477
  br i1 %cmp943, label %if.end947, label %if.then945, !dbg !5478

if.then945:                                       ; preds = %land.lhs.true941
  %541 = load i8, i8* %delayed_ok, align 1, !dbg !5479
  %tobool946 = trunc i8 %541 to i1, !dbg !5479
  store i1 %tobool946, i1* %retval, align 1, !dbg !5480
  br label %return, !dbg !5480

if.end947:                                        ; preds = %land.lhs.true941, %if.end937
  %542 = load i8, i8* %copied_as_regular, align 1, !dbg !5481
  %tobool948 = trunc i8 %542 to i1, !dbg !5481
  br i1 %tobool948, label %if.then949, label %if.end951, !dbg !5483

if.then949:                                       ; preds = %if.end947
  %543 = load i8, i8* %delayed_ok, align 1, !dbg !5484
  %tobool950 = trunc i8 %543 to i1, !dbg !5484
  store i1 %tobool950, i1* %retval, align 1, !dbg !5485
  br label %return, !dbg !5485

if.end951:                                        ; preds = %if.end947
  %544 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5486
  %preserve_timestamps952 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %544, i32 0, i32 16, !dbg !5488, !ctir !3743
  %545 = load i8, i8* %preserve_timestamps952, align 1, !dbg !5488
  %tobool953 = trunc i8 %545 to i1, !dbg !5488, !ctir !142
  br i1 %tobool953, label %if.then954, label %if.end980, !dbg !5489

if.then954:                                       ; preds = %if.end951
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !5490, metadata !DIExpression()), !dbg !5492
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5493, !ctir !390
  %call956 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !5494
  %546 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !5494
  %547 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 0, !dbg !5494
  %548 = extractvalue { i64, i64 } %call956, 0, !dbg !5494
  store i64 %548, i64* %547, align 8, !dbg !5494
  %549 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 1, !dbg !5494
  %550 = extractvalue { i64, i64 } %call956, 1, !dbg !5494
  store i64 %550, i64* %549, align 8, !dbg !5494
  %551 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !5494
  %552 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !5494
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %551, i8* align 8 %552, i64 16, i1 false), !dbg !5494
  %arrayidx957 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !5495, !ctir !390
  %call959 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !5496
  %553 = bitcast %struct.timespec* %tmp958 to { i64, i64 }*, !dbg !5496
  %554 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 0, !dbg !5496
  %555 = extractvalue { i64, i64 } %call959, 0, !dbg !5496
  store i64 %555, i64* %554, align 8, !dbg !5496
  %556 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 1, !dbg !5496
  %557 = extractvalue { i64, i64 } %call959, 1, !dbg !5496
  store i64 %557, i64* %556, align 8, !dbg !5496
  %558 = bitcast %struct.timespec* %arrayidx957 to i8*, !dbg !5496
  %559 = bitcast %struct.timespec* %tmp958 to i8*, !dbg !5496
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %558, i8* align 8 %559, i64 16, i1 false), !dbg !5496
  %560 = load i8, i8* %dest_is_symlink, align 1, !dbg !5497
  %tobool960 = trunc i8 %560 to i1, !dbg !5497
  br i1 %tobool960, label %cond.true962, label %cond.false964, !dbg !5497

cond.true962:                                     ; preds = %if.then954
  %561 = load i8*, i8** %dst_name.addr, align 8, !dbg !5499
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5500, !ctir !390
  %call963 = call i32 @utimens_symlink(i8* %561, %struct.timespec* %arraydecay), !dbg !5501
  br label %cond.end967, !dbg !5497

cond.false964:                                    ; preds = %if.then954
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !5502
  %arraydecay965 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5503, !ctir !390
  %call966 = call i32 @utimens(i8* %562, %struct.timespec* %arraydecay965), !dbg !5504
  br label %cond.end967, !dbg !5497

cond.end967:                                      ; preds = %cond.false964, %cond.true962
  %cond968 = phi i32 [ %call963, %cond.true962 ], [ %call966, %cond.false964 ], !dbg !5497
  %cmp969 = icmp ne i32 %cond968, 0, !dbg !5505
  br i1 %cmp969, label %if.then971, label %if.end979, !dbg !5506

if.then971:                                       ; preds = %cond.end967
  %call972 = call i32* @__errno_location() #15, !dbg !5507
  %563 = load i32, i32* %call972, align 4, !dbg !5507, !ctir !7
  %call973 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #10, !dbg !5509
  %564 = load i8*, i8** %dst_name.addr, align 8, !dbg !5510
  %call974 = call i8* @quotearg_style(i32 4, i8* %564), !dbg !5510
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %563, i8* %call973, i8* %call974), !dbg !5511
  %565 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5512
  %require_preserve975 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %565, i32 0, i32 21, !dbg !5514, !ctir !3743
  %566 = load i8, i8* %require_preserve975, align 4, !dbg !5514
  %tobool976 = trunc i8 %566 to i1, !dbg !5514, !ctir !142
  br i1 %tobool976, label %if.then977, label %if.end978, !dbg !5515

if.then977:                                       ; preds = %if.then971
  store i1 false, i1* %retval, align 1, !dbg !5516
  br label %return, !dbg !5516

if.end978:                                        ; preds = %if.then971
  br label %if.end979, !dbg !5517

if.end979:                                        ; preds = %if.end978, %cond.end967
  br label %if.end980, !dbg !5518

if.end980:                                        ; preds = %if.end979, %if.end951
  %567 = load i8, i8* %dest_is_symlink, align 1, !dbg !5519
  %tobool981 = trunc i8 %567 to i1, !dbg !5519
  br i1 %tobool981, label %if.end1004, label %land.lhs.true982, !dbg !5521

land.lhs.true982:                                 ; preds = %if.end980
  %568 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5522
  %preserve_ownership983 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %568, i32 0, i32 14, !dbg !5523, !ctir !3743
  %569 = load i8, i8* %preserve_ownership983, align 1, !dbg !5523
  %tobool984 = trunc i8 %569 to i1, !dbg !5523, !ctir !142
  br i1 %tobool984, label %land.lhs.true986, label %if.end1004, !dbg !5524

land.lhs.true986:                                 ; preds = %land.lhs.true982
  %570 = load i8, i8* %new_dst.addr, align 1, !dbg !5525
  %tobool987 = trunc i8 %570 to i1, !dbg !5525
  br i1 %tobool987, label %if.then999, label %lor.lhs.false989, !dbg !5526

lor.lhs.false989:                                 ; preds = %land.lhs.true986
  %st_uid990 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5527, !ctir !338
  %571 = load i32, i32* %st_uid990, align 4, !dbg !5527, !ctir !346
  %st_uid991 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !5527, !ctir !338
  %572 = load i32, i32* %st_uid991, align 4, !dbg !5527, !ctir !346
  %cmp992 = icmp eq i32 %571, %572, !dbg !5527
  br i1 %cmp992, label %land.lhs.true994, label %if.then999, !dbg !5527

land.lhs.true994:                                 ; preds = %lor.lhs.false989
  %st_gid995 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5527, !ctir !338
  %573 = load i32, i32* %st_gid995, align 8, !dbg !5527, !ctir !348
  %st_gid996 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !5527, !ctir !338
  %574 = load i32, i32* %st_gid996, align 8, !dbg !5527, !ctir !348
  %cmp997 = icmp eq i32 %573, %574, !dbg !5527
  br i1 %cmp997, label %if.end1004, label %if.then999, !dbg !5528

if.then999:                                       ; preds = %land.lhs.true994, %lor.lhs.false989, %land.lhs.true986
  %575 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5529
  %576 = load i8*, i8** %dst_name.addr, align 8, !dbg !5531
  %577 = load i8, i8* %new_dst.addr, align 1, !dbg !5532
  %tobool1000 = trunc i8 %577 to i1, !dbg !5532
  %call1001 = call i32 @set_owner(%struct.cp_options* %575, i8* %576, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool1000, %struct.stat* %dst_sb), !dbg !5533
  switch i32 %call1001, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb1002
  ], !dbg !5534

sw.bb:                                            ; preds = %if.then999
  store i1 false, i1* %retval, align 1, !dbg !5535
  br label %return, !dbg !5535

sw.bb1002:                                        ; preds = %if.then999
  %578 = load i32, i32* %src_mode, align 4, !dbg !5537
  %and1003 = and i32 %578, -3585, !dbg !5537
  store i32 %and1003, i32* %src_mode, align 4, !dbg !5537
  br label %sw.epilog, !dbg !5538

sw.epilog:                                        ; preds = %if.then999, %sw.bb1002
  br label %if.end1004, !dbg !5539

if.end1004:                                       ; preds = %sw.epilog, %land.lhs.true994, %land.lhs.true982, %if.end980
  %579 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5540
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %579, i32 0, i32 24, !dbg !5542, !ctir !3743
  %580 = load i8, i8* %preserve_xattr, align 1, !dbg !5542
  %tobool1005 = trunc i8 %580 to i1, !dbg !5542, !ctir !142
  br i1 %tobool1005, label %land.lhs.true1007, label %if.end1013, !dbg !5543

land.lhs.true1007:                                ; preds = %if.end1004
  %581 = load i8*, i8** %src_name.addr, align 8, !dbg !5544
  %582 = load i8*, i8** %dst_name.addr, align 8, !dbg !5545
  %583 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5546
  %call1008 = call zeroext i1 @copy_attr(i8* %581, i32 -1, i8* %582, i32 -1, %struct.cp_options* %583), !dbg !5547
  br i1 %call1008, label %if.end1013, label %land.lhs.true1009, !dbg !5548

land.lhs.true1009:                                ; preds = %land.lhs.true1007
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5549
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %584, i32 0, i32 25, !dbg !5550, !ctir !3743
  %585 = load i8, i8* %require_preserve_xattr, align 8, !dbg !5550
  %tobool1010 = trunc i8 %585 to i1, !dbg !5550, !ctir !142
  br i1 %tobool1010, label %if.then1012, label %if.end1013, !dbg !5551

if.then1012:                                      ; preds = %land.lhs.true1009
  store i1 false, i1* %retval, align 1, !dbg !5552
  br label %return, !dbg !5552

if.end1013:                                       ; preds = %land.lhs.true1009, %land.lhs.true1007, %if.end1004
  %586 = load i8, i8* %dest_is_symlink, align 1, !dbg !5553
  %tobool1014 = trunc i8 %586 to i1, !dbg !5553
  br i1 %tobool1014, label %if.then1015, label %if.end1017, !dbg !5555

if.then1015:                                      ; preds = %if.end1013
  %587 = load i8, i8* %delayed_ok, align 1, !dbg !5556
  %tobool1016 = trunc i8 %587 to i1, !dbg !5556
  store i1 %tobool1016, i1* %retval, align 1, !dbg !5557
  br label %return, !dbg !5557

if.end1017:                                       ; preds = %if.end1013
  %588 = load i8*, i8** %dst_name.addr, align 8, !dbg !5558
  call void @set_author(i8* %588, i32 -1, %struct.stat* %src_sb), !dbg !5559
  %589 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5560
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %589, i32 0, i32 15, !dbg !5562, !ctir !3743
  %590 = load i8, i8* %preserve_mode, align 2, !dbg !5562
  %tobool1018 = trunc i8 %590 to i1, !dbg !5562, !ctir !142
  br i1 %tobool1018, label %if.then1024, label %lor.lhs.false1020, !dbg !5563

lor.lhs.false1020:                                ; preds = %if.end1017
  %591 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5564
  %move_mode1021 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %591, i32 0, i32 9, !dbg !5565, !ctir !3743
  %592 = load i8, i8* %move_mode1021, align 8, !dbg !5565
  %tobool1022 = trunc i8 %592 to i1, !dbg !5565, !ctir !142
  br i1 %tobool1022, label %if.then1024, label %if.else1034, !dbg !5566

if.then1024:                                      ; preds = %lor.lhs.false1020, %if.end1017
  %593 = load i8*, i8** %src_name.addr, align 8, !dbg !5567
  %594 = load i8*, i8** %dst_name.addr, align 8, !dbg !5570
  %595 = load i32, i32* %src_mode, align 4, !dbg !5571
  %call1025 = call i32 @copy_acl(i8* %593, i32 -1, i8* %594, i32 -1, i32 %595), !dbg !5572
  %cmp1026 = icmp ne i32 %call1025, 0, !dbg !5573
  br i1 %cmp1026, label %land.lhs.true1028, label %if.end1033, !dbg !5574

land.lhs.true1028:                                ; preds = %if.then1024
  %596 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5575
  %require_preserve1029 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %596, i32 0, i32 21, !dbg !5576, !ctir !3743
  %597 = load i8, i8* %require_preserve1029, align 4, !dbg !5576
  %tobool1030 = trunc i8 %597 to i1, !dbg !5576, !ctir !142
  br i1 %tobool1030, label %if.then1032, label %if.end1033, !dbg !5577

if.then1032:                                      ; preds = %land.lhs.true1028
  store i1 false, i1* %retval, align 1, !dbg !5578
  br label %return, !dbg !5578

if.end1033:                                       ; preds = %land.lhs.true1028, %if.then1024
  br label %if.end1115, !dbg !5579

if.else1034:                                      ; preds = %lor.lhs.false1020
  %598 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5580
  %set_mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %598, i32 0, i32 28, !dbg !5582, !ctir !3743
  %599 = load i8, i8* %set_mode1035, align 1, !dbg !5582
  %tobool1036 = trunc i8 %599 to i1, !dbg !5582, !ctir !142
  br i1 %tobool1036, label %if.then1037, label %if.else1044, !dbg !5583

if.then1037:                                      ; preds = %if.else1034
  %600 = load i8*, i8** %dst_name.addr, align 8, !dbg !5584
  %601 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5587
  %mode1038 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %601, i32 0, i32 4, !dbg !5588, !ctir !3743
  %602 = load i32, i32* %mode1038, align 8, !dbg !5588, !ctir !239
  %call1039 = call i32 @set_acl(i8* %600, i32 -1, i32 %602), !dbg !5589
  %cmp1040 = icmp ne i32 %call1039, 0, !dbg !5590
  br i1 %cmp1040, label %if.then1042, label %if.end1043, !dbg !5591

if.then1042:                                      ; preds = %if.then1037
  store i1 false, i1* %retval, align 1, !dbg !5592
  br label %return, !dbg !5592

if.end1043:                                       ; preds = %if.then1037
  br label %if.end1114, !dbg !5593

if.else1044:                                      ; preds = %if.else1034
  %603 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5594
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %603, i32 0, i32 17, !dbg !5596, !ctir !3743
  %604 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !5596
  %tobool1045 = trunc i8 %604 to i1, !dbg !5596, !ctir !142
  br i1 %tobool1045, label %land.lhs.true1047, label %if.else1068, !dbg !5597

land.lhs.true1047:                                ; preds = %if.else1044
  %605 = load i8, i8* %new_dst.addr, align 1, !dbg !5598
  %tobool1048 = trunc i8 %605 to i1, !dbg !5598
  br i1 %tobool1048, label %if.then1050, label %if.else1068, !dbg !5599

if.then1050:                                      ; preds = %land.lhs.true1047
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !5600, metadata !DIExpression()), !dbg !5602
  %606 = load i32, i32* %src_mode, align 4, !dbg !5603
  %and1051 = and i32 %606, 61440, !dbg !5603
  %cmp1052 = icmp eq i32 %and1051, 16384, !dbg !5603
  br i1 %cmp1052, label %lor.end1058, label %lor.rhs1054, !dbg !5604

lor.rhs1054:                                      ; preds = %if.then1050
  %607 = load i32, i32* %src_mode, align 4, !dbg !5605
  %and1055 = and i32 %607, 61440, !dbg !5605
  %cmp1056 = icmp eq i32 %and1055, 49152, !dbg !5605
  br label %lor.end1058, !dbg !5604

lor.end1058:                                      ; preds = %lor.rhs1054, %if.then1050
  %608 = phi i1 [ true, %if.then1050 ], [ %cmp1056, %lor.rhs1054 ]
  %609 = zext i1 %608 to i64, !dbg !5603
  %cond1059 = select i1 %608, i32 511, i32 438, !dbg !5603
  store i32 %cond1059, i32* %default_permissions, align 4, !dbg !5602
  %610 = load i8*, i8** %dst_name.addr, align 8, !dbg !5606
  %611 = load i32, i32* %default_permissions, align 4, !dbg !5608
  %call1060 = call i32 @cached_umask(), !dbg !5609
  %neg1061 = xor i32 %call1060, -1, !dbg !5610
  %and1062 = and i32 %611, %neg1061, !dbg !5611
  %call1063 = call i32 @set_acl(i8* %610, i32 -1, i32 %and1062), !dbg !5612
  %cmp1064 = icmp ne i32 %call1063, 0, !dbg !5613
  br i1 %cmp1064, label %if.then1066, label %if.end1067, !dbg !5614

if.then1066:                                      ; preds = %lor.end1058
  store i1 false, i1* %retval, align 1, !dbg !5615
  br label %return, !dbg !5615

if.end1067:                                       ; preds = %lor.end1058
  br label %if.end1113, !dbg !5616

if.else1068:                                      ; preds = %land.lhs.true1047, %if.else1044
  %612 = load i32, i32* %omitted_permissions, align 4, !dbg !5617
  %tobool1069 = icmp ne i32 %612, 0, !dbg !5617
  br i1 %tobool1069, label %if.then1070, label %if.end1096, !dbg !5620

if.then1070:                                      ; preds = %if.else1068
  %call1071 = call i32 @cached_umask(), !dbg !5621
  %neg1072 = xor i32 %call1071, -1, !dbg !5623
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !5624
  %and1073 = and i32 %613, %neg1072, !dbg !5624
  store i32 %and1073, i32* %omitted_permissions, align 4, !dbg !5624
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !5625
  %tobool1074 = icmp ne i32 %614, 0, !dbg !5625
  br i1 %tobool1074, label %land.lhs.true1075, label %if.end1095, !dbg !5627

land.lhs.true1075:                                ; preds = %if.then1070
  %615 = load i8, i8* %restore_dst_mode, align 1, !dbg !5628
  %tobool1076 = trunc i8 %615 to i1, !dbg !5628
  br i1 %tobool1076, label %if.end1095, label %if.then1077, !dbg !5629

if.then1077:                                      ; preds = %land.lhs.true1075
  %616 = load i8, i8* %new_dst.addr, align 1, !dbg !5630
  %tobool1078 = trunc i8 %616 to i1, !dbg !5630
  br i1 %tobool1078, label %land.lhs.true1080, label %if.end1088, !dbg !5633

land.lhs.true1080:                                ; preds = %if.then1077
  %617 = load i8*, i8** %dst_name.addr, align 8, !dbg !5634
  %call1081 = call i32 @lstat(i8* %617, %struct.stat* %dst_sb) #10, !dbg !5635
  %cmp1082 = icmp ne i32 %call1081, 0, !dbg !5636
  br i1 %cmp1082, label %if.then1084, label %if.end1088, !dbg !5637

if.then1084:                                      ; preds = %land.lhs.true1080
  %call1085 = call i32* @__errno_location() #15, !dbg !5638
  %618 = load i32, i32* %call1085, align 4, !dbg !5638, !ctir !7
  %call1086 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !5640
  %619 = load i8*, i8** %dst_name.addr, align 8, !dbg !5641
  %call1087 = call i8* @quotearg_style(i32 4, i8* %619), !dbg !5641
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %618, i8* %call1086, i8* %call1087), !dbg !5642
  store i1 false, i1* %retval, align 1, !dbg !5643
  br label %return, !dbg !5643

if.end1088:                                       ; preds = %land.lhs.true1080, %if.then1077
  %st_mode1089 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5644, !ctir !338
  %620 = load i32, i32* %st_mode1089, align 8, !dbg !5644, !ctir !168
  store i32 %620, i32* %dst_mode, align 4, !dbg !5645
  %621 = load i32, i32* %omitted_permissions, align 4, !dbg !5646
  %622 = load i32, i32* %dst_mode, align 4, !dbg !5648
  %neg1090 = xor i32 %622, -1, !dbg !5649
  %and1091 = and i32 %621, %neg1090, !dbg !5650
  %tobool1092 = icmp ne i32 %and1091, 0, !dbg !5650
  br i1 %tobool1092, label %if.then1093, label %if.end1094, !dbg !5651

if.then1093:                                      ; preds = %if.end1088
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5652
  br label %if.end1094, !dbg !5653

if.end1094:                                       ; preds = %if.then1093, %if.end1088
  br label %if.end1095, !dbg !5654

if.end1095:                                       ; preds = %if.end1094, %land.lhs.true1075, %if.then1070
  br label %if.end1096, !dbg !5655

if.end1096:                                       ; preds = %if.end1095, %if.else1068
  %623 = load i8, i8* %restore_dst_mode, align 1, !dbg !5656
  %tobool1097 = trunc i8 %623 to i1, !dbg !5656
  br i1 %tobool1097, label %if.then1098, label %if.end1112, !dbg !5658

if.then1098:                                      ; preds = %if.end1096
  %624 = load i8*, i8** %dst_name.addr, align 8, !dbg !5659
  %625 = load i32, i32* %dst_mode, align 4, !dbg !5662
  %626 = load i32, i32* %omitted_permissions, align 4, !dbg !5663
  %or1099 = or i32 %625, %626, !dbg !5664
  %call1100 = call i32 @chmod(i8* %624, i32 %or1099) #10, !dbg !5665
  %cmp1101 = icmp ne i32 %call1100, 0, !dbg !5666
  br i1 %cmp1101, label %if.then1103, label %if.end1111, !dbg !5667

if.then1103:                                      ; preds = %if.then1098
  %call1104 = call i32* @__errno_location() #15, !dbg !5668
  %627 = load i32, i32* %call1104, align 4, !dbg !5668, !ctir !7
  %call1105 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #10, !dbg !5670
  %628 = load i8*, i8** %dst_name.addr, align 8, !dbg !5671
  %call1106 = call i8* @quotearg_style(i32 4, i8* %628), !dbg !5671
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %627, i8* %call1105, i8* %call1106), !dbg !5672
  %629 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5673
  %require_preserve1107 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %629, i32 0, i32 21, !dbg !5675, !ctir !3743
  %630 = load i8, i8* %require_preserve1107, align 4, !dbg !5675
  %tobool1108 = trunc i8 %630 to i1, !dbg !5675, !ctir !142
  br i1 %tobool1108, label %if.then1109, label %if.end1110, !dbg !5676

if.then1109:                                      ; preds = %if.then1103
  store i1 false, i1* %retval, align 1, !dbg !5677
  br label %return, !dbg !5677

if.end1110:                                       ; preds = %if.then1103
  br label %if.end1111, !dbg !5678

if.end1111:                                       ; preds = %if.end1110, %if.then1098
  br label %if.end1112, !dbg !5679

if.end1112:                                       ; preds = %if.end1111, %if.end1096
  br label %if.end1113

if.end1113:                                       ; preds = %if.end1112, %if.end1067
  br label %if.end1114

if.end1114:                                       ; preds = %if.end1113, %if.end1043
  br label %if.end1115

if.end1115:                                       ; preds = %if.end1114, %if.end1033
  %631 = load i8, i8* %delayed_ok, align 1, !dbg !5680
  %tobool1116 = trunc i8 %631 to i1, !dbg !5680
  store i1 %tobool1116, i1* %retval, align 1, !dbg !5681
  br label %return, !dbg !5681

un_backup:                                        ; preds = %if.then921, %if.else888, %if.then883, %if.then863, %if.then823, %if.then810, %if.then786, %if.then767, %if.then750, %if.then728, %if.then718, %if.then667, %if.then631, %if.then619, %if.then612, %if.then596, %if.then489, %if.else477, %if.then453, %if.then163
  call void @llvm.dbg.label(metadata !5682), !dbg !5683
  %632 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5684
  %preserve_security_context1117 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %632, i32 0, i32 22, !dbg !5686, !ctir !3743
  %633 = load i8, i8* %preserve_security_context1117, align 1, !dbg !5686
  %tobool1118 = trunc i8 %633 to i1, !dbg !5686, !ctir !142
  br i1 %tobool1118, label %if.then1119, label %if.end1120, !dbg !5687

if.then1119:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !5688
  br label %if.end1120, !dbg !5688

if.end1120:                                       ; preds = %if.then1119, %un_backup
  %634 = load i8*, i8** %earlier_file, align 8, !dbg !5689
  %cmp1121 = icmp eq i8* %634, null, !dbg !5691
  br i1 %cmp1121, label %if.then1123, label %if.end1126, !dbg !5692

if.then1123:                                      ; preds = %if.end1120
  %st_ino1124 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5693, !ctir !338
  %635 = load i64, i64* %st_ino1124, align 8, !dbg !5693, !ctir !260
  %st_dev1125 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5694, !ctir !338
  %636 = load i64, i64* %st_dev1125, align 8, !dbg !5694, !ctir !263
  call void @forget_created(i64 %635, i64 %636), !dbg !5695
  br label %if.end1126, !dbg !5695

if.end1126:                                       ; preds = %if.then1123, %if.end1120
  %637 = load i8*, i8** %dst_backup, align 8, !dbg !5696
  %tobool1127 = icmp ne i8* %637, null, !dbg !5696
  br i1 %tobool1127, label %if.then1128, label %if.end1146, !dbg !5698

if.then1128:                                      ; preds = %if.end1126
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !5699
  %639 = load i8*, i8** %dst_name.addr, align 8, !dbg !5702
  %call1129 = call i32 @rename(i8* %638, i8* %639) #10, !dbg !5703
  %cmp1130 = icmp ne i32 %call1129, 0, !dbg !5704
  br i1 %cmp1130, label %if.then1132, label %if.else1136, !dbg !5705

if.then1132:                                      ; preds = %if.then1128
  %call1133 = call i32* @__errno_location() #15, !dbg !5706
  %640 = load i32, i32* %call1133, align 4, !dbg !5706, !ctir !7
  %call1134 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.136, i64 0, i64 0)) #10, !dbg !5707
  %641 = load i8*, i8** %dst_name.addr, align 8, !dbg !5708
  %call1135 = call i8* @quotearg_style(i32 4, i8* %641), !dbg !5708
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %640, i8* %call1134, i8* %call1135), !dbg !5709
  br label %if.end1145, !dbg !5709

if.else1136:                                      ; preds = %if.then1128
  %642 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5710
  %verbose1137 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %642, i32 0, i32 31, !dbg !5713, !ctir !3743
  %643 = load i8, i8* %verbose1137, align 2, !dbg !5713
  %tobool1138 = trunc i8 %643 to i1, !dbg !5713, !ctir !142
  br i1 %tobool1138, label %if.then1139, label %if.end1144, !dbg !5714

if.then1139:                                      ; preds = %if.else1136
  %call1140 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.137, i64 0, i64 0)) #10, !dbg !5715
  %644 = load i8*, i8** %dst_backup, align 8, !dbg !5716
  %call1141 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %644), !dbg !5716
  %645 = load i8*, i8** %dst_name.addr, align 8, !dbg !5717
  %call1142 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %645), !dbg !5717
  %call1143 = call i32 (i8*, ...) @printf(i8* %call1140, i8* %call1141, i8* %call1142), !dbg !5718
  br label %if.end1144, !dbg !5718

if.end1144:                                       ; preds = %if.then1139, %if.else1136
  br label %if.end1145

if.end1145:                                       ; preds = %if.end1144, %if.then1132
  br label %if.end1146, !dbg !5719

if.end1146:                                       ; preds = %if.end1145, %if.end1126
  store i1 false, i1* %retval, align 1, !dbg !5720
  br label %return, !dbg !5720

return:                                           ; preds = %if.end1146, %if.end1115, %if.then1109, %if.then1084, %if.then1066, %if.then1042, %if.then1032, %if.then1015, %if.then1012, %sw.bb, %if.then977, %if.then949, %if.then945, %if.then590, %if.then555, %if.then536, %if.then530, %if.end527, %if.end490, %if.end467, %if.then377, %if.then333, %if.then300, %cond.end287, %if.then257, %if.else238, %if.then219, %if.else207, %if.then192, %if.then188, %if.end175, %if.end165, %if.then132, %if.then117, %if.then63, %cond.end47, %if.then34
  %646 = load i1, i1* %retval, align 1, !dbg !5721
  ret i1 %646, !dbg !5721
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #9 !dbg !5722 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !5727, metadata !DIExpression()), !dbg !5728
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5729
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !5730, !ctir !3743
  %1 = load i32, i32* %dereference, align 4, !dbg !5730, !ctir !76
  %cmp = icmp eq i32 %1, 4, !dbg !5731
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5732

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5733
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !5734, !ctir !3743
  %3 = load i32, i32* %dereference1, align 4, !dbg !5734, !ctir !76
  %cmp2 = icmp eq i32 %3, 3, !dbg !5735
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !5736

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5737
  %tobool = trunc i8 %4 to i1, !dbg !5737
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !5738
  br label %lor.end, !dbg !5732

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !5739
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !5740 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !391
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !391
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !338
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !338
  %same_link = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %sn = alloca i8, align 1, !ctir !142
  %abs_src = alloca i8*, align 8, !ctir !9
  %result = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !5743, metadata !DIExpression()), !dbg !5744
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !5749, metadata !DIExpression()), !dbg !5750
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !5751, metadata !DIExpression()), !dbg !5752
  store i8* %return_now, i8** %return_now.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !5753, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !5755, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !5757, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !5763, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.declare(metadata i8* %same, metadata !5765, metadata !DIExpression()), !dbg !5766
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5767
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !5767, !ctir !392
  %1 = load i64, i64* %st_ino, align 8, !dbg !5767, !ctir !260
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5767
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !5767, !ctir !392
  %3 = load i64, i64* %st_ino1, align 8, !dbg !5767, !ctir !260
  %cmp = icmp eq i64 %1, %3, !dbg !5767
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5767

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5767
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !5767, !ctir !392
  %5 = load i64, i64* %st_dev, align 8, !dbg !5767, !ctir !263
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5767
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !5767, !ctir !392
  %7 = load i64, i64* %st_dev2, align 8, !dbg !5767, !ctir !263
  %cmp3 = icmp eq i64 %5, %7, !dbg !5767
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !5768
  %frombool = zext i1 %8 to i8, !dbg !5766
  store i8 %frombool, i8* %same, align 1, !dbg !5766
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !5769
  store i8 0, i8* %9, align 1, !dbg !5770, !ctir !142
  %10 = load i8, i8* %same, align 1, !dbg !5771
  %tobool = trunc i8 %10 to i1, !dbg !5771
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5773

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5774
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !5775, !ctir !3743
  %12 = load i8, i8* %hard_link, align 1, !dbg !5775
  %tobool4 = trunc i8 %12 to i1, !dbg !5775, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5776

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !5777
  store i8 1, i8* %13, align 1, !dbg !5779, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !5780
  br label %return, !dbg !5780

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5781
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !5783, !ctir !3743
  %15 = load i32, i32* %dereference, align 4, !dbg !5783, !ctir !76
  %cmp5 = icmp eq i32 %15, 2, !dbg !5784
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !5785

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !5786
  %tobool7 = trunc i8 %16 to i1, !dbg !5786
  %frombool8 = zext i1 %tobool7 to i8, !dbg !5788
  store i8 %frombool8, i8* %same_link, align 1, !dbg !5788
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5789
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !5789, !ctir !392
  %18 = load i32, i32* %st_mode, align 8, !dbg !5789, !ctir !168
  %and = and i32 %18, 61440, !dbg !5789
  %cmp9 = icmp eq i32 %and, 40960, !dbg !5789
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !5791

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5792
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !5792, !ctir !392
  %20 = load i32, i32* %st_mode11, align 8, !dbg !5792, !ctir !168
  %and12 = and i32 %20, 61440, !dbg !5792
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !5792
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !5793

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !5794, metadata !DIExpression()), !dbg !5796
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !5797
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !5798
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !5799
  %frombool15 = zext i1 %call to i8, !dbg !5796
  store i8 %frombool15, i8* %sn, align 1, !dbg !5796
  %23 = load i8, i8* %sn, align 1, !dbg !5800
  %tobool16 = trunc i8 %23 to i1, !dbg !5800
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !5802

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5803
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !5806, !ctir !3743
  %25 = load i32, i32* %backup_type, align 8, !dbg !5806, !ctir !68
  %cmp18 = icmp ne i32 %25, 0, !dbg !5807
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !5808

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !5809
  br label %return, !dbg !5809

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !5810
  %tobool21 = trunc i8 %26 to i1, !dbg !5810
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !5812

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !5813
  store i8 1, i8* %27, align 1, !dbg !5815, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5816
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !5817, !ctir !3743
  %29 = load i8, i8* %move_mode, align 8, !dbg !5817
  %tobool23 = trunc i8 %29 to i1, !dbg !5817, !ctir !142
  %lnot = xor i1 %tobool23, true, !dbg !5818
  store i1 %lnot, i1* %retval, align 1, !dbg !5819
  br label %return, !dbg !5819

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !5820

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !5821
  %tobool26 = trunc i8 %30 to i1, !dbg !5821
  %lnot27 = xor i1 %tobool26, true, !dbg !5822
  store i1 %lnot27, i1* %retval, align 1, !dbg !5823
  br label %return, !dbg !5823

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5824
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !5825
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !5826
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !5827
  br label %if.end58, !dbg !5828

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !5829
  %tobool29 = trunc i8 %33 to i1, !dbg !5829
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !5832

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !5833
  br label %return, !dbg !5833

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !5834
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #10, !dbg !5836
  %cmp33 = icmp ne i32 %call32, 0, !dbg !5837
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !5838

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !5839
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #10, !dbg !5840
  %cmp35 = icmp ne i32 %call34, 0, !dbg !5841
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !5842

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !5843
  br label %return, !dbg !5843

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !5844
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !5845
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5846
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !5846, !ctir !392
  %37 = load i64, i64* %st_ino38, align 8, !dbg !5846, !ctir !260
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5846
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !5846, !ctir !392
  %39 = load i64, i64* %st_ino39, align 8, !dbg !5846, !ctir !260
  %cmp40 = icmp eq i64 %37, %39, !dbg !5846
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !5846

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5846
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !5846, !ctir !392
  %41 = load i64, i64* %st_dev42, align 8, !dbg !5846, !ctir !263
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5846
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !5846, !ctir !392
  %43 = load i64, i64* %st_dev43, align 8, !dbg !5846, !ctir !263
  %cmp44 = icmp eq i64 %41, %43, !dbg !5846
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !5847
  %frombool46 = zext i1 %44 to i8, !dbg !5848
  store i8 %frombool46, i8* %same_link, align 1, !dbg !5848
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5849
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !5849, !ctir !392
  %46 = load i32, i32* %st_mode47, align 8, !dbg !5849, !ctir !168
  %and48 = and i32 %46, 61440, !dbg !5849
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !5849
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !5851

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5852
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !5852, !ctir !392
  %48 = load i32, i32* %st_mode51, align 8, !dbg !5852, !ctir !168
  %and52 = and i32 %48, 61440, !dbg !5852
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !5852
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !5853

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5854
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !5855, !ctir !3743
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5855
  %tobool55 = trunc i8 %50 to i1, !dbg !5855, !ctir !142
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5856

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !5857
  br label %return, !dbg !5857

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5858
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !5860, !ctir !3743
  %52 = load i32, i32* %backup_type59, align 8, !dbg !5860, !ctir !68
  %cmp60 = icmp ne i32 %52, 0, !dbg !5861
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !5862

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !5863
  %tobool62 = trunc i8 %53 to i1, !dbg !5863
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !5866

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5867
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !5870, !ctir !3743
  %55 = load i8, i8* %move_mode64, align 8, !dbg !5870
  %tobool65 = trunc i8 %55 to i1, !dbg !5870, !ctir !142
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !5871

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5872
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !5873, !ctir !3743
  %57 = load i32, i32* %dereference67, align 4, !dbg !5873, !ctir !76
  %cmp68 = icmp ne i32 %57, 2, !dbg !5874
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !5875

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5876
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !5876, !ctir !392
  %59 = load i32, i32* %st_mode70, align 8, !dbg !5876, !ctir !168
  %and71 = and i32 %59, 61440, !dbg !5876
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !5876
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !5877

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5878
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !5878, !ctir !392
  %61 = load i32, i32* %st_mode74, align 8, !dbg !5878, !ctir !168
  %and75 = and i32 %61, 61440, !dbg !5878
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !5878
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !5879

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !5880
  br label %return, !dbg !5880

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !5881
  br label %return, !dbg !5881

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !5882
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !5883
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !5884
  %lnot81 = xor i1 %call80, true, !dbg !5885
  store i1 %lnot81, i1* %retval, align 1, !dbg !5886
  br label %return, !dbg !5886

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5887
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !5889, !ctir !3743
  %65 = load i8, i8* %move_mode83, align 8, !dbg !5889
  %tobool84 = trunc i8 %65 to i1, !dbg !5889, !ctir !142
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !5890

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5891
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !5892, !ctir !3743
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !5892
  %tobool87 = trunc i8 %67 to i1, !dbg !5892, !ctir !142
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !5893

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5894
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !5894, !ctir !392
  %69 = load i32, i32* %st_mode89, align 8, !dbg !5894, !ctir !168
  %and90 = and i32 %69, 61440, !dbg !5894
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !5894
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !5897

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !5898
  br label %return, !dbg !5898

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !5899
  %tobool94 = trunc i8 %70 to i1, !dbg !5899
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !5901

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5902
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !5903, !ctir !392
  %72 = load i64, i64* %st_nlink, align 8, !dbg !5903, !ctir !336
  %cmp96 = icmp ult i64 1, %72, !dbg !5904
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !5905

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !5906
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !5907
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !5908
  br i1 %call98, label %if.end103, label %if.then99, !dbg !5909

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5910
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !5911, !ctir !3743
  %76 = load i8, i8* %move_mode100, align 8, !dbg !5911
  %tobool101 = trunc i8 %76 to i1, !dbg !5911, !ctir !142
  %lnot102 = xor i1 %tobool101, true, !dbg !5912
  store i1 %lnot102, i1* %retval, align 1, !dbg !5913
  br label %return, !dbg !5913

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !5914

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5915
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !5915, !ctir !392
  %78 = load i32, i32* %st_mode105, align 8, !dbg !5915, !ctir !168
  %and106 = and i32 %78, 61440, !dbg !5915
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !5915
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !5917

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5918
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !5918, !ctir !392
  %80 = load i32, i32* %st_mode109, align 8, !dbg !5918, !ctir !168
  %and110 = and i32 %80, 61440, !dbg !5918
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !5918
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !5919

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5920
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !5920, !ctir !392
  %82 = load i64, i64* %st_ino113, align 8, !dbg !5920, !ctir !260
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5920
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !5920, !ctir !392
  %84 = load i64, i64* %st_ino114, align 8, !dbg !5920, !ctir !260
  %cmp115 = icmp eq i64 %82, %84, !dbg !5920
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !5920

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5920
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !5920, !ctir !392
  %86 = load i64, i64* %st_dev117, align 8, !dbg !5920, !ctir !263
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5920
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !5920, !ctir !392
  %88 = load i64, i64* %st_dev118, align 8, !dbg !5920, !ctir !263
  %cmp119 = icmp eq i64 %86, %88, !dbg !5920
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !5923

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !5924
  br label %return, !dbg !5924

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5925
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !5927, !ctir !3743
  %90 = load i8, i8* %hard_link122, align 1, !dbg !5927
  %tobool123 = trunc i8 %90 to i1, !dbg !5927, !ctir !142
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !5928

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !5929
  store i8 1, i8* %91, align 1, !dbg !5931, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !5932
  br label %return, !dbg !5932

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !5933

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5934
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !5936, !ctir !3743
  %93 = load i8, i8* %move_mode127, align 8, !dbg !5936
  %tobool128 = trunc i8 %93 to i1, !dbg !5936, !ctir !142
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !5937

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !5938
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !5938, !ctir !392
  %95 = load i32, i32* %st_mode130, align 8, !dbg !5938, !ctir !168
  %and131 = and i32 %95, 61440, !dbg !5938
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !5938
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !5939

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5940
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !5941, !ctir !392
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !5941, !ctir !336
  %cmp135 = icmp ult i64 1, %97, !dbg !5942
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !5943

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !5944, metadata !DIExpression()), !dbg !5946
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !5947
  %call137 = call i8* @canonicalize_file_name(i8* %98) #10, !dbg !5948
  store i8* %call137, i8** %abs_src, align 8, !dbg !5946
  %99 = load i8*, i8** %abs_src, align 8, !dbg !5949
  %tobool138 = icmp ne i8* %99, null, !dbg !5949
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !5951

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !5952, metadata !DIExpression()), !dbg !5954
  %100 = load i8*, i8** %abs_src, align 8, !dbg !5955
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !5956
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !5957
  %lnot141 = xor i1 %call140, true, !dbg !5958
  %frombool142 = zext i1 %lnot141 to i8, !dbg !5954
  store i8 %frombool142, i8* %result, align 1, !dbg !5954
  %102 = load i8*, i8** %abs_src, align 8, !dbg !5959
  call void @free(i8* %102) #10, !dbg !5960
  %103 = load i8, i8* %result, align 1, !dbg !5961
  %tobool143 = trunc i8 %103 to i1, !dbg !5961
  store i1 %tobool143, i1* %retval, align 1, !dbg !5962
  br label %return, !dbg !5962

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !5963

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5964
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !5966, !ctir !3743
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !5966
  %tobool146 = trunc i8 %105 to i1, !dbg !5966, !ctir !142
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !5967

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5968
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !5968, !ctir !392
  %107 = load i32, i32* %st_mode148, align 8, !dbg !5968, !ctir !168
  %and149 = and i32 %107, 61440, !dbg !5968
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !5968
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !5969

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !5970
  br label %return, !dbg !5970

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5971
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !5973, !ctir !3743
  %109 = load i32, i32* %dereference153, align 4, !dbg !5973, !ctir !76
  %cmp154 = icmp eq i32 %109, 2, !dbg !5974
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !5975

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5976
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !5976, !ctir !392
  %111 = load i32, i32* %st_mode156, align 8, !dbg !5976, !ctir !168
  %and157 = and i32 %111, 61440, !dbg !5976
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !5976
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !5979

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !5980
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !5981
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !5981
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !5981
  br label %if.end165, !dbg !5982

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !5983
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #10, !dbg !5985
  %cmp162 = icmp ne i32 %call161, 0, !dbg !5986
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !5987

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !5988
  br label %return, !dbg !5988

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5989
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !5989, !ctir !392
  %117 = load i32, i32* %st_mode166, align 8, !dbg !5989, !ctir !168
  %and167 = and i32 %117, 61440, !dbg !5989
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !5989
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !5991

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !5992
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !5993
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !5993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !5993
  br label %if.end175, !dbg !5994

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !5995
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #10, !dbg !5997
  %cmp172 = icmp ne i32 %call171, 0, !dbg !5998
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !5999

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6000
  br label %return, !dbg !6000

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6001, !ctir !338
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6001, !ctir !260
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6001, !ctir !338
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6001, !ctir !260
  %cmp178 = icmp eq i64 %122, %123, !dbg !6001
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6001

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6001, !ctir !338
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6001, !ctir !263
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6001, !ctir !338
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6001, !ctir !263
  %cmp182 = icmp eq i64 %124, %125, !dbg !6001
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6003

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6004
  br label %return, !dbg !6004

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6005
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6007, !ctir !3743
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6007
  %tobool186 = trunc i8 %127 to i1, !dbg !6007, !ctir !142
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6008

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6009
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6009, !ctir !392
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6009, !ctir !168
  %and189 = and i32 %129, 61440, !dbg !6009
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6009
  %lnot191 = xor i1 %cmp190, true, !dbg !6011
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6012
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6013
  store i8 %frombool192, i8* %130, align 1, !dbg !6013, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !6014
  br label %return, !dbg !6014

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6015

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6016
  br label %return, !dbg !6016

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6017
  ret i1 %131, !dbg !6017
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6018 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6021, metadata !DIExpression()), !dbg !6022
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6023, metadata !DIExpression()), !dbg !6024
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6025, metadata !DIExpression()), !dbg !6026
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6029, metadata !DIExpression()), !dbg !6030
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6031, metadata !DIExpression()), !dbg !6032
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6033
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6034
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6035
  %tobool = trunc i8 %2 to i1, !dbg !6035
  %3 = zext i1 %tobool to i64, !dbg !6035
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6035
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6036
  %tobool3 = trunc i8 %4 to i1, !dbg !6036
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6037
  store i32 %call, i32* %err, align 4, !dbg !6032
  %5 = load i32, i32* %err, align 4, !dbg !6038
  %cmp = icmp slt i32 0, %5, !dbg !6040
  br i1 %cmp, label %if.then, label %if.end, !dbg !6041

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6042
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.148, i64 0, i64 0)) #10, !dbg !6044
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6045
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6045
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6046
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6046
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6047
  store i1 false, i1* %retval, align 1, !dbg !6048
  br label %return, !dbg !6048

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6049
  %cmp7 = icmp slt i32 %9, 0, !dbg !6051
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6052

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6053
  %tobool8 = trunc i8 %10 to i1, !dbg !6053
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6054

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !6055
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6056
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6056
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6057
  br label %if.end13, !dbg !6057

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6058
  br label %return, !dbg !6058

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6059
  ret i1 %12, !dbg !6059
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6060 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6063, metadata !DIExpression()), !dbg !6064
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6065, metadata !DIExpression()), !dbg !6066
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6067, metadata !DIExpression()), !dbg !6068
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6069
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6069, !ctir !3743
  %1 = load i8, i8* %move_mode, align 8, !dbg !6069
  %tobool = trunc i8 %1 to i1, !dbg !6069, !ctir !142
  br i1 %tobool, label %if.then, label %if.else, !dbg !6072

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6072

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.147, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 1746, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6069
  unreachable, !dbg !6069

if.end:                                           ; preds = %if.then
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6073
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 2, !dbg !6074, !ctir !3743
  %3 = load i32, i32* %interactive, align 8, !dbg !6074, !ctir !83
  %cmp = icmp eq i32 %3, 2, !dbg !6075
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6076

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6077
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 2, !dbg !6078, !ctir !3743
  %5 = load i32, i32* %interactive1, align 8, !dbg !6078, !ctir !83
  %cmp2 = icmp eq i32 %5, 3, !dbg !6079
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6080

lor.lhs.false:                                    ; preds = %lor.rhs
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6081
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 2, !dbg !6082, !ctir !3743
  %7 = load i32, i32* %interactive3, align 8, !dbg !6082, !ctir !83
  %cmp4 = icmp eq i32 %7, 4, !dbg !6083
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6084

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6085
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 32, !dbg !6086, !ctir !3743
  %9 = load i8, i8* %stdin_tty, align 1, !dbg !6086
  %tobool5 = trunc i8 %9 to i1, !dbg !6086, !ctir !142
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6087

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst_name.addr, align 8, !dbg !6088
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6089
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !6090, !ctir !392
  %12 = load i32, i32* %st_mode, align 8, !dbg !6090, !ctir !168
  %call = call zeroext i1 @writable_destination(i8* %10, i32 %12), !dbg !6091
  br i1 %call, label %land.end, label %land.rhs, !dbg !6092

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6093
  %14 = load i8*, i8** %dst_name.addr, align 8, !dbg !6094
  %15 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6095
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %13, i8* %14, %struct.stat* %15), !dbg !6096
  %lnot = xor i1 %call7, true, !dbg !6097
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6098
  br label %lor.end, !dbg !6076

lor.end:                                          ; preds = %land.end, %if.end
  %17 = phi i1 [ true, %if.end ], [ %16, %land.end ]
  ret i1 %17, !dbg !6099
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6100 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !173
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6101, metadata !DIExpression()), !dbg !6102
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6107
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6109
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6110, !ctir !392
  %2 = load i32, i32* %st_mode, align 8, !dbg !6110, !ctir !168
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6111
  br i1 %call, label %if.else, label %if.then, !dbg !6112

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6113, metadata !DIExpression()), !dbg !6115
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6116
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6117, !ctir !392
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6117, !ctir !168
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6118, !ctir !173
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6119
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6120, !ctir !173
  store i8 0, i8* %arrayidx, align 1, !dbg !6121
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6122
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6123
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6124, !ctir !3743
  %7 = load i8, i8* %move_mode, align 8, !dbg !6124
  %tobool = trunc i8 %7 to i1, !dbg !6124, !ctir !142
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6125

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6126
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6127, !ctir !3743
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6127
  %tobool2 = trunc i8 %9 to i1, !dbg !6127, !ctir !142
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6128

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6129
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6130, !ctir !3743
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6130
  %tobool4 = trunc i8 %11 to i1, !dbg !6130, !ctir !142
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6131

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.144, i64 0, i64 0)) #10, !dbg !6132
  br label %cond.end, !dbg !6131

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.145, i64 0, i64 0)) #10, !dbg !6133
  br label %cond.end, !dbg !6131

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6131
  %12 = load i8*, i8** @program_name, align 8, !dbg !6134
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6135
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6135
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6136
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6137, !ctir !392
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6137, !ctir !168
  %and = and i32 %15, 4095, !dbg !6138
  %conv = zext i32 %and to i64, !dbg !6139
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6140, !ctir !173
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6141
  br label %if.end, !dbg !6142

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6143
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.146, i64 0, i64 0)) #10, !dbg !6145
  %17 = load i8*, i8** @program_name, align 8, !dbg !6146
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6147
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6147
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6148
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6149
  ret i1 %call14, !dbg !6150
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot.106(i8* %file_name) #4 !dbg !6151 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !6152, metadata !DIExpression()), !dbg !6153
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !6154
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6154, !ctir !116
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6154
  %conv = sext i8 %1 to i32, !dbg !6154
  %cmp = icmp eq i32 %conv, 46, !dbg !6156
  br i1 %cmp, label %if.then, label %if.else, !dbg !6157

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !6158, metadata !DIExpression()), !dbg !6160
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !6161
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !6162
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6162, !ctir !116
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6162
  %conv3 = sext i8 %4 to i32, !dbg !6162
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !6163
  %conv5 = zext i1 %cmp4 to i32, !dbg !6163
  %add = add nsw i32 %conv5, 1, !dbg !6164
  %idxprom = sext i32 %add to i64, !dbg !6161
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !6161, !ctir !116
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !6161
  store i8 %5, i8* %sep, align 1, !dbg !6160
  %6 = load i8, i8* %sep, align 1, !dbg !6165
  %tobool = icmp ne i8 %6, 0, !dbg !6165
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6166

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !6167
  %conv7 = sext i8 %7 to i32, !dbg !6167
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !6167
  br label %lor.end, !dbg !6166

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !6168
  br label %return, !dbg !6168

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6169
  br label %return, !dbg !6169

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !6170
  ret i1 %9, !dbg !6170
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !6171 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !55
  %dstbase = alloca i8*, align 8, !ctir !116
  %dstbaselen = alloca i64, align 8, !ctir !55
  %suffixlen = alloca i64, align 8, !ctir !55
  %dstlen = alloca i64, align 8, !ctir !55
  %dst_back = alloca i8*, align 8, !ctir !9
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !338
  %dst_back_status = alloca i32, align 4, !ctir !7
  store i8* %srcbase, i8** %srcbase.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !6174, metadata !DIExpression()), !dbg !6175
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !6180, metadata !DIExpression()), !dbg !6181
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !6182
  %call = call i64 @strlen(i8* %0) #14, !dbg !6183
  store i64 %call, i64* %srcbaselen, align 8, !dbg !6181
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !6184, metadata !DIExpression()), !dbg !6185
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6186
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !6187
  store i8* %call1, i8** %dstbase, align 8, !dbg !6185
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !6188, metadata !DIExpression()), !dbg !6189
  %2 = load i8*, i8** %dstbase, align 8, !dbg !6190
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !6191
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !6189
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !6192, metadata !DIExpression()), !dbg !6193
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6194
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !6195
  store i64 %call3, i64* %suffixlen, align 8, !dbg !6193
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !6196
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !6198
  %6 = load i64, i64* %suffixlen, align 8, !dbg !6199
  %add = add i64 %5, %6, !dbg !6200
  %cmp = icmp eq i64 %4, %add, !dbg !6201
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !6202

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !6203
  %8 = load i8*, i8** %dstbase, align 8, !dbg !6204
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !6205
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !6206
  %cmp5 = icmp eq i32 %call4, 0, !dbg !6207
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !6208

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !6209
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !6209
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !6209, !ctir !117
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6209
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !6209
  %cmp8 = icmp eq i32 %call7, 0, !dbg !6209
  br i1 %cmp8, label %if.end, label %if.then, !dbg !6210

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !6211
  br label %return, !dbg !6211

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !6212, metadata !DIExpression()), !dbg !6213
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6214
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !6215
  store i64 %call9, i64* %dstlen, align 8, !dbg !6213
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !6216, metadata !DIExpression()), !dbg !6217
  %14 = load i64, i64* %dstlen, align 8, !dbg !6218
  %15 = load i64, i64* %suffixlen, align 8, !dbg !6219
  %add10 = add i64 %14, %15, !dbg !6220
  %add11 = add i64 %add10, 1, !dbg !6221
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !6222
  store i8* %call12, i8** %dst_back, align 8, !dbg !6217
  %16 = load i8*, i8** %dst_back, align 8, !dbg !6223
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !6224
  %18 = load i64, i64* %dstlen, align 8, !dbg !6225
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #10, !dbg !6226
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6227
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #10, !dbg !6228
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !6229, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !6231, metadata !DIExpression()), !dbg !6232
  %20 = load i8*, i8** %dst_back, align 8, !dbg !6233
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #10, !dbg !6234
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !6232
  %21 = load i8*, i8** %dst_back, align 8, !dbg !6235
  call void @free(i8* %21) #10, !dbg !6236
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !6237
  %cmp16 = icmp eq i32 %22, 0, !dbg !6238
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !6239

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6240
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !6240, !ctir !392
  %24 = load i64, i64* %st_ino, align 8, !dbg !6240, !ctir !260
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !6240, !ctir !338
  %25 = load i64, i64* %st_ino17, align 8, !dbg !6240, !ctir !260
  %cmp18 = icmp eq i64 %24, %25, !dbg !6240
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !6240

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6240
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !6240, !ctir !392
  %27 = load i64, i64* %st_dev, align 8, !dbg !6240, !ctir !263
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !6240, !ctir !338
  %28 = load i64, i64* %st_dev20, align 8, !dbg !6240, !ctir !263
  %cmp21 = icmp eq i64 %27, %28, !dbg !6240
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !6241
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !6241
  store i1 %30, i1* %retval, align 1, !dbg !6242
  br label %return, !dbg !6242

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !6243
  ret i1 %31, !dbg !6243
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !6244 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6247, metadata !DIExpression()), !dbg !6248
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6253
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !6253
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6254
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !6254
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.142, i64 0, i64 0), i8* %call, i8* %call1), !dbg !6255
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6256
  %tobool = icmp ne i8* %2, null, !dbg !6256
  br i1 %tobool, label %if.then, label %if.end, !dbg !6258

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.143, i64 0, i64 0)) #10, !dbg !6259
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6260
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !6260
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !6261
  br label %if.end, !dbg !6261

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6262
  ret void, !dbg !6263
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #9 !dbg !6264 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !6269, metadata !DIExpression()), !dbg !6270
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6271, metadata !DIExpression()), !dbg !6272
  br label %while.cond, !dbg !6273

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6274
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !6275
  br i1 %cmp, label %while.body, label %while.end, !dbg !6273

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6276
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !6279, !ctir !6268
  %2 = load i64, i64* %ino, align 8, !dbg !6279, !ctir !259
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6280
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !6281, !ctir !392
  %4 = load i64, i64* %st_ino, align 8, !dbg !6281, !ctir !260
  %cmp1 = icmp eq i64 %2, %4, !dbg !6282
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6283

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6284
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !6285, !ctir !6268
  %6 = load i64, i64* %dev, align 8, !dbg !6285, !ctir !262
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6286
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !6287, !ctir !392
  %8 = load i64, i64* %st_dev, align 8, !dbg !6287, !ctir !263
  %cmp2 = icmp eq i64 %6, %8, !dbg !6288
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6289

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6290
  br label %return, !dbg !6290

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6291
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !6292, !ctir !6268
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !6292, !ctir !375
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !6293
  br label %while.cond, !dbg !6273, !llvm.loop !6294

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !6296
  br label %return, !dbg !6296

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !6297
  ret i1 %11, !dbg !6297
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !6298 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !9
  %namep = alloca i8*, align 8, !ctir !9
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !3744
  %ok = alloca i8, align 1, !ctir !142
  %new_first_dir_created = alloca i8, align 1, !ctir !142
  %local_copy_into_self = alloca i8, align 1, !ctir !142
  %src_name = alloca i8*, align 8, !ctir !9
  %dst_name = alloca i8*, align 8, !ctir !9
  %first_dir_created = alloca i8, align 1, !ctir !142
  store i8* %src_name_in, i8** %src_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !6301, metadata !DIExpression()), !dbg !6302
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !6303, metadata !DIExpression()), !dbg !6304
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6305, metadata !DIExpression()), !dbg !6306
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6307, metadata !DIExpression()), !dbg !6308
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !6313, metadata !DIExpression()), !dbg !6314
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !6315, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !6317, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !6319, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !6321, metadata !DIExpression()), !dbg !6322
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6323
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !6324
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !6324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !6324
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6325, metadata !DIExpression()), !dbg !6326
  store i8 1, i8* %ok, align 1, !dbg !6326
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6327
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !6328
  store i8* %call, i8** %name_space, align 8, !dbg !6329
  %4 = load i8*, i8** %name_space, align 8, !dbg !6330
  %cmp = icmp eq i8* %4, null, !dbg !6332
  br i1 %cmp, label %if.then, label %if.end, !dbg !6333

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !6334
  %5 = load i32, i32* %call1, align 4, !dbg !6334, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.141, i64 0, i64 0)) #10, !dbg !6336
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6337
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6337
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !6338
  store i1 false, i1* %retval, align 1, !dbg !6339
  br label %return, !dbg !6339

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6340
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !6342, !ctir !3743
  %8 = load i32, i32* %dereference, align 4, !dbg !6342, !ctir !76
  %cmp4 = icmp eq i32 %8, 3, !dbg !6343
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6344

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !6345, !ctir !3744
  store i32 2, i32* %dereference6, align 4, !dbg !6346, !ctir !76
  br label %if.end7, !dbg !6347

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !6348, metadata !DIExpression()), !dbg !6349
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !6349
  %9 = load i8*, i8** %name_space, align 8, !dbg !6350
  store i8* %9, i8** %namep, align 8, !dbg !6351
  br label %while.cond, !dbg !6352

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !6353
  %11 = load i8, i8* %10, align 1, !dbg !6354, !ctir !10
  %conv = sext i8 %11 to i32, !dbg !6354
  %cmp8 = icmp ne i32 %conv, 0, !dbg !6355
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6352

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !6356, metadata !DIExpression()), !dbg !6358
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !6359, metadata !DIExpression()), !dbg !6360
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6361
  %13 = load i8*, i8** %namep, align 8, !dbg !6362
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !6363
  store i8* %call10, i8** %src_name, align 8, !dbg !6360
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !6364, metadata !DIExpression()), !dbg !6365
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !6366
  %15 = load i8*, i8** %namep, align 8, !dbg !6367
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !6368
  store i8* %call11, i8** %dst_name, align 8, !dbg !6365
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !6369, metadata !DIExpression()), !dbg !6370
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6371
  %17 = load i8, i8* %16, align 1, !dbg !6372
  %tobool = trunc i8 %17 to i1, !dbg !6372, !ctir !142
  %frombool12 = zext i1 %tobool to i8, !dbg !6370
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !6370
  %18 = load i8*, i8** %src_name, align 8, !dbg !6373
  %19 = load i8*, i8** %dst_name, align 8, !dbg !6374
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !6375
  %tobool13 = trunc i8 %20 to i1, !dbg !6375
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6376
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6377
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !6378
  %conv15 = zext i1 %call14 to i32, !dbg !6378
  %23 = load i8, i8* %ok, align 1, !dbg !6379
  %tobool16 = trunc i8 %23 to i1, !dbg !6379
  %conv17 = zext i1 %tobool16 to i32, !dbg !6379
  %and = and i32 %conv17, %conv15, !dbg !6379
  %tobool18 = icmp ne i32 %and, 0, !dbg !6379
  %frombool19 = zext i1 %tobool18 to i8, !dbg !6379
  store i8 %frombool19, i8* %ok, align 1, !dbg !6379
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !6380
  %tobool20 = trunc i8 %24 to i1, !dbg !6380
  %conv21 = zext i1 %tobool20 to i32, !dbg !6380
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !6381
  %26 = load i8, i8* %25, align 1, !dbg !6382
  %tobool22 = trunc i8 %26 to i1, !dbg !6382, !ctir !142
  %conv23 = zext i1 %tobool22 to i32, !dbg !6382
  %or = or i32 %conv23, %conv21, !dbg !6382
  %tobool24 = icmp ne i32 %or, 0, !dbg !6382
  %frombool25 = zext i1 %tobool24 to i8, !dbg !6382
  store i8 %frombool25, i8* %25, align 1, !dbg !6382, !ctir !142
  %27 = load i8*, i8** %dst_name, align 8, !dbg !6383
  call void @free(i8* %27) #10, !dbg !6384
  %28 = load i8*, i8** %src_name, align 8, !dbg !6385
  call void @free(i8* %28) #10, !dbg !6386
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !6387
  %tobool26 = trunc i8 %29 to i1, !dbg !6387
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6389

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !6390

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !6391
  %tobool29 = trunc i8 %30 to i1, !dbg !6391
  %conv30 = zext i1 %tobool29 to i32, !dbg !6391
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !6392
  %tobool31 = trunc i8 %31 to i1, !dbg !6392
  %conv32 = zext i1 %tobool31 to i32, !dbg !6392
  %or33 = or i32 %conv32, %conv30, !dbg !6392
  %tobool34 = icmp ne i32 %or33, 0, !dbg !6392
  %frombool35 = zext i1 %tobool34 to i8, !dbg !6392
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !6392
  %32 = load i8*, i8** %namep, align 8, !dbg !6393
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !6394
  %add = add i64 %call36, 1, !dbg !6395
  %33 = load i8*, i8** %namep, align 8, !dbg !6396
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !6396, !ctir !10
  store i8* %add.ptr, i8** %namep, align 8, !dbg !6396
  br label %while.cond, !dbg !6352, !llvm.loop !6397

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !6399
  call void @free(i8* %34) #10, !dbg !6400
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !6401
  %tobool37 = trunc i8 %35 to i1, !dbg !6401
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6402
  %frombool38 = zext i1 %tobool37 to i8, !dbg !6403
  store i8 %frombool38, i8* %36, align 1, !dbg !6403, !ctir !142
  %37 = load i8, i8* %ok, align 1, !dbg !6404
  %tobool39 = trunc i8 %37 to i1, !dbg !6404
  store i1 %tobool39, i1* %retval, align 1, !dbg !6405
  br label %return, !dbg !6405

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !6406
  ret i1 %38, !dbg !6406
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !6407 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %buf_alloc = alloca i8*, align 8, !ctir !9
  %name_alloc = alloca i8*, align 8, !ctir !9
  %dest_desc = alloca i32, align 4, !ctir !7
  %dest_errno = alloca i32, align 4, !ctir !7
  %source_desc = alloca i32, align 4, !ctir !7
  %src_mode = alloca i32, align 4, !ctir !239
  %sb = alloca %struct.stat, align 8, !ctir !338
  %src_open_sb = alloca %struct.stat, align 8, !ctir !338
  %return_val = alloca i8, align 1, !ctir !142
  %data_copy_required = alloca i8, align 1, !ctir !142
  %open_flags = alloca i32, align 4, !ctir !7
  %open_flags72 = alloca i32, align 4, !ctir !7
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !338
  %clone_ok = alloca i8, align 1, !ctir !142
  %buf_alignment = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %hole_size = alloca i64, align 8, !ctir !55
  %make_holes = alloca i8, align 1, !ctir !142
  %sparse_src = alloca i8, align 1, !ctir !142
  %blcm_max = alloca i64, align 8, !ctir !55
  %blcm = alloca i64, align 8, !ctir !55
  %normal_copy_required = alloca i8, align 1, !ctir !142
  %n_read = alloca i64, align 8, !ctir !295
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !390
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6410, metadata !DIExpression()), !dbg !6411
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6412, metadata !DIExpression()), !dbg !6413
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6414, metadata !DIExpression()), !dbg !6415
  store i32 %dst_mode, i32* %dst_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !6416, metadata !DIExpression()), !dbg !6417
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !6418, metadata !DIExpression()), !dbg !6419
  store i8* %new_dst, i8** %new_dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !6420, metadata !DIExpression()), !dbg !6421
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6422, metadata !DIExpression()), !dbg !6423
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6424, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !6426, metadata !DIExpression()), !dbg !6427
  store i8* null, i8** %buf_alloc, align 8, !dbg !6427
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i8* null, i8** %name_alloc, align 8, !dbg !6429
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !6430, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !6432, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !6434, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !6436, metadata !DIExpression()), !dbg !6437
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6438
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !6439, !ctir !392
  %1 = load i32, i32* %st_mode, align 8, !dbg !6439, !ctir !168
  store i32 %1, i32* %src_mode, align 4, !dbg !6437
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6440, metadata !DIExpression()), !dbg !6441
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !6442, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !6444, metadata !DIExpression()), !dbg !6445
  store i8 1, i8* %return_val, align 1, !dbg !6445
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !6446, metadata !DIExpression()), !dbg !6447
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6448
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !6449, !ctir !3743
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !6449
  %tobool = trunc i8 %3 to i1, !dbg !6449, !ctir !142
  %frombool = zext i1 %tobool to i8, !dbg !6447
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !6447
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !6450
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6451
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !6452, !ctir !3743
  %6 = load i32, i32* %dereference, align 4, !dbg !6452, !ctir !76
  %cmp = icmp eq i32 %6, 2, !dbg !6453
  %7 = zext i1 %cmp to i64, !dbg !6451
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !6451
  %or = or i32 0, %cond, !dbg !6454
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !6455
  store i32 %call, i32* %source_desc, align 4, !dbg !6456
  %8 = load i32, i32* %source_desc, align 4, !dbg !6457
  %cmp2 = icmp slt i32 %8, 0, !dbg !6459
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6460

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #15, !dbg !6461
  %9 = load i32, i32* %call3, align 4, !dbg !6461, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.138, i64 0, i64 0)) #10, !dbg !6463
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !6464
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !6464
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !6465
  store i1 false, i1* %retval, align 1, !dbg !6466
  br label %return, !dbg !6466

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !6467
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #10, !dbg !6469
  %cmp7 = icmp ne i32 %call6, 0, !dbg !6470
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6471

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #15, !dbg !6472
  %12 = load i32, i32* %call9, align 4, !dbg !6472, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #10, !dbg !6474
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !6475
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6475
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !6476
  store i8 0, i8* %return_val, align 1, !dbg !6477
  br label %close_src_desc, !dbg !6478

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6479
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !6479, !ctir !392
  %15 = load i64, i64* %st_ino, align 8, !dbg !6479, !ctir !260
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !6479, !ctir !338
  %16 = load i64, i64* %st_ino13, align 8, !dbg !6479, !ctir !260
  %cmp14 = icmp eq i64 %15, %16, !dbg !6479
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !6479

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6479
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !6479, !ctir !392
  %18 = load i64, i64* %st_dev, align 8, !dbg !6479, !ctir !263
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !6479, !ctir !338
  %19 = load i64, i64* %st_dev15, align 8, !dbg !6479, !ctir !263
  %cmp16 = icmp eq i64 %18, %19, !dbg !6479
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !6481

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.140, i64 0, i64 0)) #10, !dbg !6482
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !6484
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !6484
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !6485
  store i8 0, i8* %return_val, align 1, !dbg !6486
  br label %close_src_desc, !dbg !6487

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !6488
  %22 = load i8, i8* %21, align 1, !dbg !6490
  %tobool21 = trunc i8 %22 to i1, !dbg !6490, !ctir !142
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !6491

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !6492, metadata !DIExpression()), !dbg !6494
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6495
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !6496, !ctir !3743
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !6496
  %tobool24 = trunc i8 %24 to i1, !dbg !6496, !ctir !142
  %25 = zext i1 %tobool24 to i64, !dbg !6495
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !6495
  %or26 = or i32 1, %cond25, !dbg !6497
  store i32 %or26, i32* %open_flags, align 4, !dbg !6494
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !6498
  %27 = load i32, i32* %open_flags, align 4, !dbg !6499
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !6500
  store i32 %call27, i32* %dest_desc, align 4, !dbg !6501
  %call28 = call i32* @__errno_location() #15, !dbg !6502
  %28 = load i32, i32* %call28, align 4, !dbg !6502, !ctir !7
  store i32 %28, i32* %dest_errno, align 4, !dbg !6503
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6504
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !6506, !ctir !3743
  %30 = load i8, i8* %set_security_context, align 1, !dbg !6506
  %tobool29 = trunc i8 %30 to i1, !dbg !6506, !ctir !142
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !6507

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6508
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !6509, !ctir !3743
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !6509
  %tobool30 = trunc i8 %32 to i1, !dbg !6509, !ctir !142
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !6510

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !6511
  %cmp32 = icmp sle i32 0, %33, !dbg !6512
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !6513

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6514
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6517
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !6518, !ctir !3743
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !6518
  %tobool35 = trunc i8 %36 to i1, !dbg !6518, !ctir !142
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6519
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !6520
  br i1 %call36, label %if.end41, label %if.then37, !dbg !6521

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6522
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !6525, !ctir !3743
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !6525
  %tobool38 = trunc i8 %39 to i1, !dbg !6525, !ctir !142
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6526

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !6527
  br label %close_src_and_dst_desc, !dbg !6529

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !6530

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !6531

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !6532
  %cmp43 = icmp slt i32 %40, 0, !dbg !6534
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !6535

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6536
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !6537, !ctir !3743
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6537
  %tobool45 = trunc i8 %42 to i1, !dbg !6537, !ctir !142
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !6538

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !6539
  %call47 = call i32 @unlink(i8* %43) #10, !dbg !6542
  %cmp48 = icmp ne i32 %call47, 0, !dbg !6543
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !6544

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #15, !dbg !6545
  %44 = load i32, i32* %call50, align 4, !dbg !6545, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #10, !dbg !6547
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !6548
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !6548
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !6549
  store i8 0, i8* %return_val, align 1, !dbg !6550
  br label %close_src_desc, !dbg !6551

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6552
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !6554, !ctir !3743
  %47 = load i8, i8* %verbose, align 2, !dbg !6554
  %tobool54 = trunc i8 %47 to i1, !dbg !6554, !ctir !142
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6555

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !6556
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !6557
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !6557
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !6558
  br label %if.end59, !dbg !6558

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !6559
  store i8 1, i8* %49, align 1, !dbg !6560, !ctir !142
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6561
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !6563, !ctir !3743
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !6563
  %tobool61 = trunc i8 %51 to i1, !dbg !6563, !ctir !142
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !6564

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !6565
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !6568
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !6569
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !6570
  %56 = load i8, i8* %55, align 1, !dbg !6571
  %tobool63 = trunc i8 %56 to i1, !dbg !6571, !ctir !142
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6572
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !6573
  br i1 %call64, label %if.end66, label %if.then65, !dbg !6574

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !6575
  br label %close_src_desc, !dbg !6577

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !6578

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !6579

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !6580

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !6581
  %59 = load i8, i8* %58, align 1, !dbg !6583
  %tobool70 = trunc i8 %59 to i1, !dbg !6583, !ctir !142
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !6584

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !6585

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !6586), !dbg !6588
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !6589, metadata !DIExpression()), !dbg !6590
  store i32 65, i32* %open_flags72, align 4, !dbg !6590
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !6591
  %61 = load i32, i32* %open_flags72, align 4, !dbg !6592
  %or73 = or i32 %61, 128, !dbg !6593
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !6594
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6595
  %neg = xor i32 %63, -1, !dbg !6596
  %and = and i32 %62, %neg, !dbg !6597
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !6598
  store i32 %call74, i32* %dest_desc, align 4, !dbg !6599
  %call75 = call i32* @__errno_location() #15, !dbg !6600
  %64 = load i32, i32* %call75, align 4, !dbg !6600, !ctir !7
  store i32 %64, i32* %dest_errno, align 4, !dbg !6601
  %65 = load i32, i32* %dest_desc, align 4, !dbg !6602
  %cmp76 = icmp slt i32 %65, 0, !dbg !6604
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !6605

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !6606
  %cmp78 = icmp eq i32 %66, 17, !dbg !6607
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !6608

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6609
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !6610, !ctir !3743
  %68 = load i8, i8* %move_mode, align 8, !dbg !6610
  %tobool80 = trunc i8 %68 to i1, !dbg !6610, !ctir !142
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !6611

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !6612, metadata !DIExpression()), !dbg !6614
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !6615
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #10, !dbg !6617
  %cmp83 = icmp eq i32 %call82, 0, !dbg !6618
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !6619

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !6620, !ctir !338
  %70 = load i32, i32* %st_mode85, align 8, !dbg !6620, !ctir !168
  %and86 = and i32 %70, 61440, !dbg !6620
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !6620
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !6621

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6622
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !6625, !ctir !3743
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !6625
  %tobool89 = trunc i8 %72 to i1, !dbg !6625, !ctir !142
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !6626

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !6627
  %74 = load i32, i32* %open_flags72, align 4, !dbg !6629
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !6630
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6631
  %neg91 = xor i32 %76, -1, !dbg !6632
  %and92 = and i32 %75, %neg91, !dbg !6633
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !6634
  store i32 %call93, i32* %dest_desc, align 4, !dbg !6635
  %call94 = call i32* @__errno_location() #15, !dbg !6636
  %77 = load i32, i32* %call94, align 4, !dbg !6636, !ctir !7
  store i32 %77, i32* %dest_errno, align 4, !dbg !6637
  br label %if.end97, !dbg !6638

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !6639
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !6641
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !6641
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !6642
  store i8 0, i8* %return_val, align 1, !dbg !6643
  br label %close_src_desc, !dbg !6644

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !6645

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !6646

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !6647
  %cmp100 = icmp slt i32 %79, 0, !dbg !6649
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !6650

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !6651
  %cmp102 = icmp eq i32 %80, 21, !dbg !6652
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !6653

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !6654
  %82 = load i8, i8* %81, align 1, !dbg !6655, !ctir !117
  %conv = sext i8 %82 to i32, !dbg !6655
  %tobool104 = icmp ne i32 %conv, 0, !dbg !6655
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !6656

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !6657
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !6658
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !6659
  %sub = sub i64 %call106, 1, !dbg !6660
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !6657, !ctir !116
  %85 = load i8, i8* %arrayidx, align 1, !dbg !6657
  %conv107 = sext i8 %85 to i32, !dbg !6657
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !6661
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6662

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !6663
  br label %if.end111, !dbg !6664

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !6665

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !6666
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !6668
  %cmp114 = icmp slt i32 %86, 0, !dbg !6670
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !6671

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !6672
  %cmp117 = icmp eq i32 %87, 2, !dbg !6675
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !6676

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !6677
  %89 = load i8, i8* %88, align 1, !dbg !6678
  %tobool120 = trunc i8 %89 to i1, !dbg !6678, !ctir !142
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !6679

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6680
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !6681, !ctir !3743
  %91 = load i8, i8* %move_mode122, align 8, !dbg !6681
  %tobool123 = trunc i8 %91 to i1, !dbg !6681, !ctir !142
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !6682

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !6683
  store i8 1, i8* %92, align 1, !dbg !6685, !ctir !142
  br label %open_with_O_CREAT, !dbg !6686

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !6687
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !6688
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !6689
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !6689
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !6690
  store i8 0, i8* %return_val, align 1, !dbg !6691
  br label %close_src_desc, !dbg !6692

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !6693
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #10, !dbg !6695
  %cmp130 = icmp ne i32 %call129, 0, !dbg !6696
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !6697

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #15, !dbg !6698
  %96 = load i32, i32* %call133, align 4, !dbg !6698, !ctir !7
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #10, !dbg !6700
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !6701
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !6701
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !6702
  store i8 0, i8* %return_val, align 1, !dbg !6703
  br label %close_src_and_dst_desc, !dbg !6704

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !6705
  %tobool137 = trunc i8 %98 to i1, !dbg !6705
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !6707

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6708
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !6709, !ctir !3743
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !6709, !ctir !95
  %tobool140 = icmp ne i32 %100, 0, !dbg !6708
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !6710

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !6711, metadata !DIExpression()), !dbg !6713
  %101 = load i32, i32* %dest_desc, align 4, !dbg !6714
  %102 = load i32, i32* %source_desc, align 4, !dbg !6715
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !6716
  %cmp143 = icmp eq i32 %call142, 0, !dbg !6717
  %frombool145 = zext i1 %cmp143 to i8, !dbg !6713
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !6713
  %103 = load i8, i8* %clone_ok, align 1, !dbg !6718
  %tobool146 = trunc i8 %103 to i1, !dbg !6718
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !6720

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6721
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !6722, !ctir !3743
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !6722, !ctir !95
  %cmp150 = icmp eq i32 %105, 2, !dbg !6723
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !6724

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !6725
  %tobool153 = trunc i8 %106 to i1, !dbg !6725
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !6728

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #15, !dbg !6729
  %107 = load i32, i32* %call155, align 4, !dbg !6729, !ctir !7
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !6731
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !6732
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !6732
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !6733
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !6733
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !6734
  store i8 0, i8* %return_val, align 1, !dbg !6735
  br label %close_src_and_dst_desc, !dbg !6736

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !6737
  br label %if.end160, !dbg !6738

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !6739

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !6740
  %tobool162 = trunc i8 %110 to i1, !dbg !6740
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !6742

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !6743, metadata !DIExpression()), !dbg !6745
  %call164 = call i32 @getpagesize() #15, !dbg !6746
  %conv165 = sext i32 %call164 to i64, !dbg !6746
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !6745
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !6747, metadata !DIExpression()), !dbg !6748
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !6749
  store i64 %call166, i64* %buf_size, align 8, !dbg !6748
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !6750, metadata !DIExpression()), !dbg !6751
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6752, !ctir !338
  %111 = load i64, i64* %st_blksize, align 8, !dbg !6752, !ctir !353
  %cmp167 = icmp slt i64 0, %111, !dbg !6752
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !6752

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6752, !ctir !338
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !6752, !ctir !353
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !6752
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !6752

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !6752, !ctir !338
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !6752, !ctir !353
  br label %cond.end, !dbg !6752

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !6752

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !6752
  store i64 %cond174, i64* %hole_size, align 8, !dbg !6751
  %114 = load i32, i32* %source_desc, align 4, !dbg !6753
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !6754
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !6755, metadata !DIExpression()), !dbg !6756
  store i8 0, i8* %make_holes, align 1, !dbg !6756
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !6757, metadata !DIExpression()), !dbg !6758
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !6759
  %frombool176 = zext i1 %call175 to i8, !dbg !6758
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !6758
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6760, !ctir !338
  %115 = load i32, i32* %st_mode177, align 8, !dbg !6760, !ctir !168
  %and178 = and i32 %115, 61440, !dbg !6760
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !6760
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !6762

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6763
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !6766, !ctir !3743
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !6766, !ctir !89
  %cmp182 = icmp eq i32 %117, 3, !dbg !6767
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !6768

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !6769
  br label %if.end185, !dbg !6770

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6771
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !6773, !ctir !3743
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !6773, !ctir !89
  %cmp187 = icmp eq i32 %119, 2, !dbg !6774
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !6775

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !6776
  %tobool190 = trunc i8 %120 to i1, !dbg !6776
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !6777

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !6778
  br label %if.end193, !dbg !6779

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !6780

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !6781
  %tobool195 = trunc i8 %121 to i1, !dbg !6781
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !6783

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !6784, metadata !DIExpression()), !dbg !6786
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !6787
  %sub197 = sub i64 9223372036854775807, %122, !dbg !6788
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !6786
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !6789, metadata !DIExpression()), !dbg !6790
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !6791
  %123 = load i64, i64* %buf_size, align 8, !dbg !6792
  %124 = load i64, i64* %blcm_max, align 8, !dbg !6793
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #15, !dbg !6794
  store i64 %call199, i64* %blcm, align 8, !dbg !6790
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !6795, !ctir !338
  %125 = load i32, i32* %st_mode200, align 8, !dbg !6795, !ctir !168
  %and201 = and i32 %125, 61440, !dbg !6795
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !6795
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !6797

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6798, !ctir !338
  %126 = load i64, i64* %st_size, align 8, !dbg !6798, !ctir !29
  %127 = load i64, i64* %buf_size, align 8, !dbg !6799
  %cmp205 = icmp ult i64 %126, %127, !dbg !6800
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !6801

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6802, !ctir !338
  %128 = load i64, i64* %st_size208, align 8, !dbg !6802, !ctir !29
  %add = add nsw i64 %128, 1, !dbg !6803
  store i64 %add, i64* %buf_size, align 8, !dbg !6804
  br label %if.end209, !dbg !6805

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !6806
  %sub210 = sub i64 %129, 1, !dbg !6807
  %130 = load i64, i64* %buf_size, align 8, !dbg !6808
  %add211 = add i64 %130, %sub210, !dbg !6808
  store i64 %add211, i64* %buf_size, align 8, !dbg !6808
  %131 = load i64, i64* %buf_size, align 8, !dbg !6809
  %132 = load i64, i64* %blcm, align 8, !dbg !6810
  %rem = urem i64 %131, %132, !dbg !6811
  %133 = load i64, i64* %buf_size, align 8, !dbg !6812
  %sub212 = sub i64 %133, %rem, !dbg !6812
  store i64 %sub212, i64* %buf_size, align 8, !dbg !6812
  %134 = load i64, i64* %buf_size, align 8, !dbg !6813
  %cmp213 = icmp eq i64 %134, 0, !dbg !6815
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !6816

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !6817
  %136 = load i64, i64* %buf_size, align 8, !dbg !6818
  %cmp216 = icmp ult i64 %135, %136, !dbg !6819
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !6820

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !6821
  store i64 %137, i64* %buf_size, align 8, !dbg !6822
  br label %if.end219, !dbg !6823

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !6824

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !6825
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !6826
  %add221 = add i64 %138, %139, !dbg !6827
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !6828
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !6829
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !6830
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !6831
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !6832
  store i8* %call223, i8** %buf, align 8, !dbg !6833
  %142 = load i8, i8* %sparse_src, align 1, !dbg !6834
  %tobool224 = trunc i8 %142 to i1, !dbg !6834
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !6836

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !6837, metadata !DIExpression()), !dbg !6839
  %143 = load i32, i32* %source_desc, align 4, !dbg !6840
  %144 = load i32, i32* %dest_desc, align 4, !dbg !6842
  %145 = load i8*, i8** %buf, align 8, !dbg !6843
  %146 = load i64, i64* %buf_size, align 8, !dbg !6844
  %147 = load i64, i64* %hole_size, align 8, !dbg !6845
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !6846, !ctir !338
  %148 = load i64, i64* %st_size226, align 8, !dbg !6846, !ctir !29
  %149 = load i8, i8* %make_holes, align 1, !dbg !6847
  %tobool227 = trunc i8 %149 to i1, !dbg !6847
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !6847

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6848
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !6849, !ctir !3743
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !6849, !ctir !89
  br label %cond.end232, !dbg !6847

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !6847

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !6847
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !6850
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !6851
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !6852
  br i1 %call234, label %if.then235, label %if.end236, !dbg !6853

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !6854

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !6855
  %tobool237 = trunc i8 %154 to i1, !dbg !6855
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !6857

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !6858
  br label %close_src_and_dst_desc, !dbg !6860

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !6861

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !6862, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !6864, metadata !DIExpression()), !dbg !6865
  %155 = load i32, i32* %source_desc, align 4, !dbg !6866
  %156 = load i32, i32* %dest_desc, align 4, !dbg !6868
  %157 = load i8*, i8** %buf, align 8, !dbg !6869
  %158 = load i64, i64* %buf_size, align 8, !dbg !6870
  %159 = load i8, i8* %make_holes, align 1, !dbg !6871
  %tobool241 = trunc i8 %159 to i1, !dbg !6871
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !6871

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !6872
  br label %cond.end245, !dbg !6871

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !6871

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !6871
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6873
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !6874, !ctir !3743
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !6874, !ctir !89
  %cmp248 = icmp eq i32 %162, 3, !dbg !6875
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !6876
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !6877
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !6878
  br i1 %call250, label %if.else252, label %if.then251, !dbg !6879

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !6880
  br label %close_src_and_dst_desc, !dbg !6882

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !6883
  %tobool253 = trunc i8 %165 to i1, !dbg !6883
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !6885

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !6886
  %167 = load i64, i64* %n_read, align 8, !dbg !6887
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #10, !dbg !6888
  %cmp257 = icmp slt i32 %call256, 0, !dbg !6889
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !6890

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #15, !dbg !6891
  %168 = load i32, i32* %call260, align 4, !dbg !6891, !ctir !7
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !6893
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !6894
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !6894
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !6895
  store i8 0, i8* %return_val, align 1, !dbg !6896
  br label %close_src_and_dst_desc, !dbg !6897

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !6898

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !6740

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !6899), !dbg !6900
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6901
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !6903, !ctir !3743
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !6903
  %tobool266 = trunc i8 %171 to i1, !dbg !6903, !ctir !142
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !6904

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !6905, metadata !DIExpression()), !dbg !6907
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6908, !ctir !390
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6909
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !6910
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !6910
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !6910
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !6910
  store i64 %175, i64* %174, align 8, !dbg !6910
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !6910
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !6910
  store i64 %177, i64* %176, align 8, !dbg !6910
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !6910
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !6910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !6910
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !6911, !ctir !390
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6912
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !6913
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !6913
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !6913
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !6913
  store i64 %183, i64* %182, align 8, !dbg !6913
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !6913
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !6913
  store i64 %185, i64* %184, align 8, !dbg !6913
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !6913
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !6913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !6913
  %188 = load i32, i32* %dest_desc, align 4, !dbg !6914
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !6916
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6917, !ctir !390
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !6918
  %cmp274 = icmp ne i32 %call273, 0, !dbg !6919
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !6920

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #15, !dbg !6921
  %190 = load i32, i32* %call277, align 4, !dbg !6921, !ctir !7
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #10, !dbg !6923
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !6924
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !6924
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !6925
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6926
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !6928, !ctir !3743
  %193 = load i8, i8* %require_preserve, align 4, !dbg !6928
  %tobool280 = trunc i8 %193 to i1, !dbg !6928, !ctir !142
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !6929

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !6930
  br label %close_src_and_dst_desc, !dbg !6932

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !6933

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !6934

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6935
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !6937, !ctir !3743
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !6937
  %tobool285 = trunc i8 %195 to i1, !dbg !6937, !ctir !142
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !6938

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6939
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !6939, !ctir !392
  %197 = load i32, i32* %st_uid, align 4, !dbg !6939, !ctir !346
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !6939, !ctir !338
  %198 = load i32, i32* %st_uid288, align 4, !dbg !6939, !ctir !346
  %cmp289 = icmp eq i32 %197, %198, !dbg !6939
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !6939

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6939
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !6939, !ctir !392
  %200 = load i32, i32* %st_gid, align 8, !dbg !6939, !ctir !348
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !6939, !ctir !338
  %201 = load i32, i32* %st_gid292, align 8, !dbg !6939, !ctir !348
  %cmp293 = icmp eq i32 %200, %201, !dbg !6939
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !6940

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6941
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !6943
  %204 = load i32, i32* %dest_desc, align 4, !dbg !6944
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6945
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !6946
  %207 = load i8, i8* %206, align 1, !dbg !6947
  %tobool296 = trunc i8 %207 to i1, !dbg !6947, !ctir !142
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !6948
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !6949

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !6950
  br label %close_src_and_dst_desc, !dbg !6952

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !6953
  %and299 = and i32 %208, -3585, !dbg !6953
  store i32 %and299, i32* %src_mode, align 4, !dbg !6953
  br label %sw.epilog, !dbg !6954

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !6955

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6956
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !6958, !ctir !3743
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !6958
  %tobool301 = trunc i8 %210 to i1, !dbg !6958, !ctir !142
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !6959

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !6960, metadata !DIExpression()), !dbg !6962
  store i8 0, i8* %access_changed, align 1, !dbg !6962
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !6963, !ctir !338
  %211 = load i32, i32* %st_mode303, align 8, !dbg !6963, !ctir !168
  %and304 = and i32 %211, 128, !dbg !6965
  %tobool305 = icmp ne i32 %and304, 0, !dbg !6965
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !6966

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #10, !dbg !6967
  %cmp308 = icmp ne i32 %call307, 0, !dbg !6968
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !6969

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !6970
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !6972
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !6973
  %cmp312 = icmp eq i32 %call311, 0, !dbg !6974
  %frombool314 = zext i1 %cmp312 to i8, !dbg !6975
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !6975
  br label %if.end315, !dbg !6976

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !6977
  %215 = load i32, i32* %source_desc, align 4, !dbg !6979
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !6980
  %217 = load i32, i32* %dest_desc, align 4, !dbg !6981
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6982
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !6983
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !6984

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6985
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !6986, !ctir !3743
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !6986
  %tobool318 = trunc i8 %220 to i1, !dbg !6986, !ctir !142
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !6987

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !6988
  br label %if.end321, !dbg !6989

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !6990
  %tobool322 = trunc i8 %221 to i1, !dbg !6990
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !6992

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !6993
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !6994
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !6995
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6996
  %neg324 = xor i32 %225, -1, !dbg !6997
  %and325 = and i32 %224, %neg324, !dbg !6998
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !6999
  br label %if.end327, !dbg !6999

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7000

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7001
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7002
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7003
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7004
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7005
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7007, !ctir !3743
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7007
  %tobool329 = trunc i8 %230 to i1, !dbg !7007, !ctir !142
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7008

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7009
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7010, !ctir !3743
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7010
  %tobool333 = trunc i8 %232 to i1, !dbg !7010, !ctir !142
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7011

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7012
  %234 = load i32, i32* %source_desc, align 4, !dbg !7015
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7016
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7017
  %237 = load i32, i32* %src_mode, align 4, !dbg !7018
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7019
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7020
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7021

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7022
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7023, !ctir !3743
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7023
  %tobool341 = trunc i8 %239 to i1, !dbg !7023, !ctir !142
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7024

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7025
  br label %if.end344, !dbg !7026

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7027

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7028
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7030, !ctir !3743
  %241 = load i8, i8* %set_mode, align 1, !dbg !7030
  %tobool346 = trunc i8 %241 to i1, !dbg !7030, !ctir !142
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7031

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7032
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7035
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7036
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7037, !ctir !3743
  %245 = load i32, i32* %mode, align 8, !dbg !7037, !ctir !239
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7038
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7039
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7040

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7041
  br label %if.end352, !dbg !7042

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7043

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7044
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7046, !ctir !3743
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7046
  %tobool354 = trunc i8 %247 to i1, !dbg !7046, !ctir !142
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7047

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7048
  %249 = load i8, i8* %248, align 1, !dbg !7049
  %tobool357 = trunc i8 %249 to i1, !dbg !7049, !ctir !142
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7050

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7051
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7054
  %call360 = call i32 @cached_umask(), !dbg !7055
  %neg361 = xor i32 %call360, -1, !dbg !7056
  %and362 = and i32 438, %neg361, !dbg !7057
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7058
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7059
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7060

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7061
  br label %if.end367, !dbg !7062

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7063

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7064
  %tobool369 = icmp ne i32 %252, 0, !dbg !7064
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7066

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7067
  %neg372 = xor i32 %call371, -1, !dbg !7069
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7070
  %and373 = and i32 %253, %neg372, !dbg !7070
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7070
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7071
  %tobool374 = icmp ne i32 %254, 0, !dbg !7071
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7073

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7074
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7075
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7076
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7077
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7078
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7079

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #15, !dbg !7080
  %258 = load i32, i32* %call380, align 4, !dbg !7080, !ctir !7
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #10, !dbg !7082
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7083
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7083
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7084
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7085
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7087, !ctir !3743
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7087
  %tobool384 = trunc i8 %261 to i1, !dbg !7087, !ctir !142
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7088

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7089
  br label %if.end386, !dbg !7090

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7091

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7092

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7010

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7093), !dbg !7094
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7095
  %call392 = call i32 @close(i32 %262), !dbg !7097
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7098
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7099

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #15, !dbg !7100
  %263 = load i32, i32* %call396, align 4, !dbg !7100, !ctir !7
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !7102
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7103
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7103
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7104
  store i8 0, i8* %return_val, align 1, !dbg !7105
  br label %if.end399, !dbg !7106

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7107

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7108), !dbg !7109
  %265 = load i32, i32* %source_desc, align 4, !dbg !7110
  %call400 = call i32 @close(i32 %265), !dbg !7112
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7113
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7114

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #15, !dbg !7115
  %266 = load i32, i32* %call404, align 4, !dbg !7115, !ctir !7
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !7117
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7118
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7118
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7119
  store i8 0, i8* %return_val, align 1, !dbg !7120
  br label %if.end407, !dbg !7121

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7122
  call void @free(i8* %268) #10, !dbg !7123
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7124
  call void @free(i8* %269) #10, !dbg !7125
  %270 = load i8, i8* %return_val, align 1, !dbg !7126
  %tobool408 = trunc i8 %270 to i1, !dbg !7126
  store i1 %tobool408, i1* %retval, align 1, !dbg !7127
  br label %return, !dbg !7127

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7128
  ret i1 %271, !dbg !7128
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7129 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7130
  %cmp = icmp ne i32 %call, 0, !dbg !7132
  br i1 %cmp, label %if.then, label %if.end, !dbg !7133

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7134
  %0 = load i32, i32* %call1, align 4, !dbg !7134, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75, i64 0, i64 0)) #10, !dbg !7134
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7134
  unreachable, !dbg !7134

if.end:                                           ; preds = %entry
  ret void, !dbg !7135
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #9 !dbg !7136 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  %call = call i32* @__errno_location() #15, !dbg !7139
  %0 = load i32, i32* %call, align 4, !dbg !7139, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7140
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7141

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7142
  %1 = load i32, i32* %call1, align 4, !dbg !7142, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7143
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7144

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7145
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7146, !ctir !3743
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7146
  %tobool = trunc i8 %3 to i1, !dbg !7146, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !7147
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7148
  ret i1 %4, !dbg !7149
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7150 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7155, metadata !DIExpression()), !dbg !7156
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7157, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7159, metadata !DIExpression()), !dbg !7160
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7161
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7162
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7163
  store i32 %call, i32* %err, align 4, !dbg !7160
  %2 = load i32, i32* %err, align 4, !dbg !7164
  %tobool = icmp ne i32 %2, 0, !dbg !7164
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7166

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7167
  %3 = load i32, i32* %call1, align 4, !dbg !7167, !ctir !7
  %cmp = icmp eq i32 %3, 38, !dbg !7168
  br i1 %cmp, label %if.then, label %if.end, !dbg !7169

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !7170
  br label %if.end, !dbg !7171

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !7172
  ret i32 %4, !dbg !7173
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !7174 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !451
  %gid = alloca i32, align 4, !ctir !452
  %old_mode = alloca i32, align 4, !ctir !239
  %new_mode = alloca i32, align 4, !ctir !239
  %restrictive_temp_mode = alloca i32, align 4, !ctir !239
  %saved_errno = alloca i32, align 4, !ctir !7
  %__x = alloca i32, align 4, !ctir !7
  %saved_errno54 = alloca i32, align 4, !ctir !7
  %__x56 = alloca i32, align 4, !ctir !7
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7177, metadata !DIExpression()), !dbg !7178
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7179, metadata !DIExpression()), !dbg !7180
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7181, metadata !DIExpression()), !dbg !7182
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7183, metadata !DIExpression()), !dbg !7184
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7185, metadata !DIExpression()), !dbg !7186
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7189, metadata !DIExpression()), !dbg !7190
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7191
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !7192, !ctir !392
  %1 = load i32, i32* %st_uid, align 4, !dbg !7192, !ctir !346
  store i32 %1, i32* %uid, align 4, !dbg !7190
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !7193, metadata !DIExpression()), !dbg !7194
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7195
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !7196, !ctir !392
  %3 = load i32, i32* %st_gid, align 8, !dbg !7196, !ctir !348
  store i32 %3, i32* %gid, align 4, !dbg !7194
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !7197
  %tobool = trunc i8 %4 to i1, !dbg !7197
  br i1 %tobool, label %if.end20, label %land.lhs.true, !dbg !7199

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7200
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !7201, !ctir !3743
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !7201
  %tobool1 = trunc i8 %6 to i1, !dbg !7201, !ctir !142
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7202

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7203
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !7204, !ctir !3743
  %8 = load i8, i8* %move_mode, align 8, !dbg !7204
  %tobool2 = trunc i8 %8 to i1, !dbg !7204, !ctir !142
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !7205

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7206
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !7207, !ctir !3743
  %10 = load i8, i8* %set_mode, align 1, !dbg !7207
  %tobool4 = trunc i8 %10 to i1, !dbg !7207, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end20, !dbg !7208

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !7209, metadata !DIExpression()), !dbg !7211
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !7212
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !7213, !ctir !392
  %12 = load i32, i32* %st_mode, align 8, !dbg !7213, !ctir !168
  store i32 %12, i32* %old_mode, align 4, !dbg !7211
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !7214, metadata !DIExpression()), !dbg !7215
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7216
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !7217, !ctir !3743
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !7217
  %tobool6 = trunc i8 %14 to i1, !dbg !7217, !ctir !142
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !7218

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7219
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !7220, !ctir !3743
  %16 = load i8, i8* %move_mode8, align 8, !dbg !7220
  %tobool9 = trunc i8 %16 to i1, !dbg !7220, !ctir !142
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !7216

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7221
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !7222, !ctir !392
  %18 = load i32, i32* %st_mode10, align 8, !dbg !7222, !ctir !168
  br label %cond.end, !dbg !7216

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7223
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !7224, !ctir !3743
  %20 = load i32, i32* %mode, align 8, !dbg !7224, !ctir !239
  br label %cond.end, !dbg !7216

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !7216
  store i32 %cond, i32* %new_mode, align 4, !dbg !7215
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !7225, metadata !DIExpression()), !dbg !7226
  %21 = load i32, i32* %old_mode, align 4, !dbg !7227
  %22 = load i32, i32* %new_mode, align 4, !dbg !7228
  %and = and i32 %21, %22, !dbg !7229
  %and11 = and i32 %and, 448, !dbg !7230
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !7226
  %23 = load i8*, i8** %dst_name.addr, align 8, !dbg !7231
  %24 = load i32, i32* %dest_desc.addr, align 4, !dbg !7233
  %25 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !7234
  %call = call i32 @qset_acl(i8* %23, i32 %24, i32 %25), !dbg !7235
  %cmp = icmp ne i32 %call, 0, !dbg !7236
  br i1 %cmp, label %if.then12, label %if.end19, !dbg !7237

if.then12:                                        ; preds = %cond.end
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7238
  %call13 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %26), !dbg !7241
  br i1 %call13, label %if.end, label %if.then14, !dbg !7242

if.then14:                                        ; preds = %if.then12
  %call15 = call i32* @__errno_location() #15, !dbg !7243
  %27 = load i32, i32* %call15, align 4, !dbg !7243, !ctir !7
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !7244
  %28 = load i8*, i8** %dst_name.addr, align 8, !dbg !7245
  %call17 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !7245
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call16, i8* %call17), !dbg !7246
  br label %if.end, !dbg !7246

if.end:                                           ; preds = %if.then14, %if.then12
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7247
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 21, !dbg !7248, !ctir !3743
  %30 = load i8, i8* %require_preserve, align 4, !dbg !7248
  %tobool18 = trunc i8 %30 to i1, !dbg !7248, !ctir !142
  %conv = zext i1 %tobool18 to i32, !dbg !7247
  %sub = sub nsw i32 0, %conv, !dbg !7249
  store i32 %sub, i32* %retval, align 4, !dbg !7250
  br label %return, !dbg !7250

if.end19:                                         ; preds = %cond.end
  br label %if.end20, !dbg !7251

if.end20:                                         ; preds = %if.end19, %lor.lhs.false3, %entry
  %31 = load i32, i32* %dest_desc.addr, align 4, !dbg !7252
  %cmp21 = icmp ne i32 %31, -1, !dbg !7254
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !7255

if.then23:                                        ; preds = %if.end20
  %32 = load i32, i32* %dest_desc.addr, align 4, !dbg !7256
  %33 = load i32, i32* %uid, align 4, !dbg !7259
  %34 = load i32, i32* %gid, align 4, !dbg !7260
  %call24 = call i32 @fchown(i32 %32, i32 %33, i32 %34) #10, !dbg !7261
  %cmp25 = icmp eq i32 %call24, 0, !dbg !7262
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7263

if.then27:                                        ; preds = %if.then23
  store i32 1, i32* %retval, align 4, !dbg !7264
  br label %return, !dbg !7264

if.end28:                                         ; preds = %if.then23
  %call29 = call i32* @__errno_location() #15, !dbg !7265
  %35 = load i32, i32* %call29, align 4, !dbg !7265, !ctir !7
  %cmp30 = icmp eq i32 %35, 1, !dbg !7267
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !7268

lor.lhs.false32:                                  ; preds = %if.end28
  %call33 = call i32* @__errno_location() #15, !dbg !7269
  %36 = load i32, i32* %call33, align 4, !dbg !7269, !ctir !7
  %cmp34 = icmp eq i32 %36, 22, !dbg !7270
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !7271

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !7272, metadata !DIExpression()), !dbg !7274
  %call37 = call i32* @__errno_location() #15, !dbg !7275
  %37 = load i32, i32* %call37, align 4, !dbg !7275, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !7274
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7276, metadata !DIExpression()), !dbg !7278
  %38 = load i32, i32* %dest_desc.addr, align 4, !dbg !7278
  %39 = load i32, i32* %gid, align 4, !dbg !7278
  %call38 = call i32 @fchown(i32 %38, i32 -1, i32 %39) #10, !dbg !7278
  store i32 %call38, i32* %__x, align 4, !dbg !7278
  %40 = load i32, i32* %__x, align 4, !dbg !7278
  %41 = load i32, i32* %saved_errno, align 4, !dbg !7279
  %call39 = call i32* @__errno_location() #15, !dbg !7280
  store i32 %41, i32* %call39, align 4, !dbg !7281, !ctir !7
  br label %if.end40, !dbg !7282

if.end40:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %if.end60, !dbg !7283

if.else:                                          ; preds = %if.end20
  %42 = load i8*, i8** %dst_name.addr, align 8, !dbg !7284
  %43 = load i32, i32* %uid, align 4, !dbg !7287
  %44 = load i32, i32* %gid, align 4, !dbg !7288
  %call41 = call i32 @lchown(i8* %42, i32 %43, i32 %44) #10, !dbg !7289
  %cmp42 = icmp eq i32 %call41, 0, !dbg !7290
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7291

if.then44:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7292
  br label %return, !dbg !7292

if.end45:                                         ; preds = %if.else
  %call46 = call i32* @__errno_location() #15, !dbg !7293
  %45 = load i32, i32* %call46, align 4, !dbg !7293, !ctir !7
  %cmp47 = icmp eq i32 %45, 1, !dbg !7295
  br i1 %cmp47, label %if.then53, label %lor.lhs.false49, !dbg !7296

lor.lhs.false49:                                  ; preds = %if.end45
  %call50 = call i32* @__errno_location() #15, !dbg !7297
  %46 = load i32, i32* %call50, align 4, !dbg !7297, !ctir !7
  %cmp51 = icmp eq i32 %46, 22, !dbg !7298
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !7299

if.then53:                                        ; preds = %lor.lhs.false49, %if.end45
  call void @llvm.dbg.declare(metadata i32* %saved_errno54, metadata !7300, metadata !DIExpression()), !dbg !7302
  %call55 = call i32* @__errno_location() #15, !dbg !7303
  %47 = load i32, i32* %call55, align 4, !dbg !7303, !ctir !7
  store i32 %47, i32* %saved_errno54, align 4, !dbg !7302
  call void @llvm.dbg.declare(metadata i32* %__x56, metadata !7304, metadata !DIExpression()), !dbg !7306
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !7306
  %49 = load i32, i32* %gid, align 4, !dbg !7306
  %call57 = call i32 @lchown(i8* %48, i32 -1, i32 %49) #10, !dbg !7306
  store i32 %call57, i32* %__x56, align 4, !dbg !7306
  %50 = load i32, i32* %__x56, align 4, !dbg !7306
  %51 = load i32, i32* %saved_errno54, align 4, !dbg !7307
  %call58 = call i32* @__errno_location() #15, !dbg !7308
  store i32 %51, i32* %call58, align 4, !dbg !7309, !ctir !7
  br label %if.end59, !dbg !7310

if.end59:                                         ; preds = %if.then53, %lor.lhs.false49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end40
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7311
  %call61 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %52) #14, !dbg !7313
  br i1 %call61, label %if.end70, label %if.then62, !dbg !7314

if.then62:                                        ; preds = %if.end60
  %call63 = call i32* @__errno_location() #15, !dbg !7315
  %53 = load i32, i32* %call63, align 4, !dbg !7315, !ctir !7
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #10, !dbg !7317
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !7318
  %call65 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !7318
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call64, i8* %call65), !dbg !7319
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7320
  %require_preserve66 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 21, !dbg !7322, !ctir !3743
  %56 = load i8, i8* %require_preserve66, align 4, !dbg !7322
  %tobool67 = trunc i8 %56 to i1, !dbg !7322, !ctir !142
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !7323

if.then68:                                        ; preds = %if.then62
  store i32 -1, i32* %retval, align 4, !dbg !7324
  br label %return, !dbg !7324

if.end69:                                         ; preds = %if.then62
  br label %if.end70, !dbg !7325

if.end70:                                         ; preds = %if.end69, %if.end60
  store i32 0, i32* %retval, align 4, !dbg !7326
  br label %return, !dbg !7326

return:                                           ; preds = %if.end70, %if.then68, %if.then44, %if.then27, %if.end
  %57 = load i32, i32* %retval, align 4, !dbg !7327
  ret i32 %57, !dbg !7327
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !7328 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %selinux_done = alloca i8, align 1, !ctir !142
  %ctx = alloca %struct.error_context, align 8, !ctir !7331
  store i8* %src_path, i8** %src_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !7347, metadata !DIExpression()), !dbg !7348
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7349, metadata !DIExpression()), !dbg !7350
  store i8* %dst_path, i8** %dst_path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !7351, metadata !DIExpression()), !dbg !7352
  store i32 %dst_fd, i32* %dst_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !7353, metadata !DIExpression()), !dbg !7354
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7355, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7357, metadata !DIExpression()), !dbg !7358
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !7359, metadata !DIExpression()), !dbg !7360
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7361
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !7362, !ctir !3743
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !7362
  %tobool = trunc i8 %1 to i1, !dbg !7362, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7363

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7364
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 25, !dbg !7365, !ctir !3743
  %3 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7365
  %tobool1 = trunc i8 %3 to i1, !dbg !7365, !ctir !142
  br label %lor.end, !dbg !7363

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %frombool = zext i1 %4 to i8, !dbg !7360
  store i8 %frombool, i8* %all_errors, align 1, !dbg !7360
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !7366, metadata !DIExpression()), !dbg !7367
  %5 = load i8, i8* %all_errors, align 1, !dbg !7368
  %tobool2 = trunc i8 %5 to i1, !dbg !7368
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !7369

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7370
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !7371, !ctir !3743
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !7371
  %tobool3 = trunc i8 %7 to i1, !dbg !7371, !ctir !142
  %lnot = xor i1 %tobool3, true, !dbg !7372
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !7373
  %frombool4 = zext i1 %8 to i8, !dbg !7367
  store i8 %frombool4, i8* %some_errors, align 1, !dbg !7367
  call void @llvm.dbg.declare(metadata i8* %selinux_done, metadata !7374, metadata !DIExpression()), !dbg !7375
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7376
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 22, !dbg !7377, !ctir !3743
  %10 = load i8, i8* %preserve_security_context, align 1, !dbg !7377
  %tobool5 = trunc i8 %10 to i1, !dbg !7377, !ctir !142
  br i1 %tobool5, label %lor.end8, label %lor.rhs6, !dbg !7378

lor.rhs6:                                         ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7379
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !7380, !ctir !3743
  %12 = load i8, i8* %set_security_context, align 1, !dbg !7380
  %tobool7 = trunc i8 %12 to i1, !dbg !7380, !ctir !142
  br label %lor.end8, !dbg !7378

lor.end8:                                         ; preds = %lor.rhs6, %land.end
  %13 = phi i1 [ true, %land.end ], [ %tobool7, %lor.rhs6 ]
  %frombool9 = zext i1 %13 to i8, !dbg !7375
  store i8 %frombool9, i8* %selinux_done, align 1, !dbg !7375
  call void @llvm.dbg.declare(metadata %struct.error_context* %ctx, metadata !7381, metadata !DIExpression()), !dbg !7382
  %error = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 0, !dbg !7383
  %14 = load i8, i8* %all_errors, align 1, !dbg !7384
  %tobool10 = trunc i8 %14 to i1, !dbg !7384
  %15 = zext i1 %tobool10 to i64, !dbg !7384
  %cond = select i1 %tobool10, void (%struct.error_context*, i8*, ...)* @copy_attr_allerror, void (%struct.error_context*, i8*, ...)* @copy_attr_error, !dbg !7384
  store void (%struct.error_context*, i8*, ...)* %cond, void (%struct.error_context*, i8*, ...)** %error, align 8, !dbg !7383
  %quote = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 1, !dbg !7383
  store i8* (%struct.error_context*, i8*)* @copy_attr_quote, i8* (%struct.error_context*, i8*)** %quote, align 8, !dbg !7383
  %quote_free = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 2, !dbg !7383
  store void (%struct.error_context*, i8*)* @copy_attr_free, void (%struct.error_context*, i8*)** %quote_free, align 8, !dbg !7383
  %16 = load i32, i32* %src_fd.addr, align 4, !dbg !7385
  %cmp = icmp sle i32 0, %16, !dbg !7387
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7388

land.lhs.true:                                    ; preds = %lor.end8
  %17 = load i32, i32* %dst_fd.addr, align 4, !dbg !7389
  %cmp11 = icmp sle i32 0, %17, !dbg !7390
  br i1 %cmp11, label %if.then, label %if.else, !dbg !7391

if.then:                                          ; preds = %land.lhs.true
  %18 = load i8*, i8** %src_path.addr, align 8, !dbg !7392
  %19 = load i32, i32* %src_fd.addr, align 4, !dbg !7393
  %20 = load i8*, i8** %dst_path.addr, align 8, !dbg !7394
  %21 = load i32, i32* %dst_fd.addr, align 4, !dbg !7395
  %22 = load i8, i8* %selinux_done, align 1, !dbg !7396
  %tobool12 = trunc i8 %22 to i1, !dbg !7396
  %23 = zext i1 %tobool12 to i64, !dbg !7396
  %cond13 = select i1 %tobool12, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7396
  %24 = load i8, i8* %all_errors, align 1, !dbg !7397
  %tobool14 = trunc i8 %24 to i1, !dbg !7397
  br i1 %tobool14, label %cond.true, label %lor.lhs.false, !dbg !7398

lor.lhs.false:                                    ; preds = %if.then
  %25 = load i8, i8* %some_errors, align 1, !dbg !7399
  %tobool15 = trunc i8 %25 to i1, !dbg !7399
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !7397

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !7397

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !7397

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.error_context* [ %ctx, %cond.true ], [ null, %cond.false ], !dbg !7397
  %call = call i32 @attr_copy_fd(i8* %18, i32 %19, i8* %20, i32 %21, i32 (i8*, %struct.error_context*)* %cond13, %struct.error_context* %cond16), !dbg !7400
  store i32 %call, i32* %ret, align 4, !dbg !7401
  br label %if.end, !dbg !7402

if.else:                                          ; preds = %land.lhs.true, %lor.end8
  %26 = load i8*, i8** %src_path.addr, align 8, !dbg !7403
  %27 = load i8*, i8** %dst_path.addr, align 8, !dbg !7404
  %28 = load i8, i8* %selinux_done, align 1, !dbg !7405
  %tobool17 = trunc i8 %28 to i1, !dbg !7405
  %29 = zext i1 %tobool17 to i64, !dbg !7405
  %cond18 = select i1 %tobool17, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7405
  %30 = load i8, i8* %all_errors, align 1, !dbg !7406
  %tobool19 = trunc i8 %30 to i1, !dbg !7406
  br i1 %tobool19, label %cond.true22, label %lor.lhs.false20, !dbg !7407

lor.lhs.false20:                                  ; preds = %if.else
  %31 = load i8, i8* %some_errors, align 1, !dbg !7408
  %tobool21 = trunc i8 %31 to i1, !dbg !7408
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !7406

cond.true22:                                      ; preds = %lor.lhs.false20, %if.else
  br label %cond.end24, !dbg !7406

cond.false23:                                     ; preds = %lor.lhs.false20
  br label %cond.end24, !dbg !7406

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi %struct.error_context* [ %ctx, %cond.true22 ], [ null, %cond.false23 ], !dbg !7406
  %call26 = call i32 @attr_copy_file(i8* %26, i8* %27, i32 (i8*, %struct.error_context*)* %cond18, %struct.error_context* %cond25), !dbg !7409
  store i32 %call26, i32* %ret, align 4, !dbg !7410
  br label %if.end

if.end:                                           ; preds = %cond.end24, %cond.end
  %32 = load i32, i32* %ret, align 4, !dbg !7411
  %cmp27 = icmp eq i32 %32, 0, !dbg !7412
  ret i1 %cmp27, !dbg !7413
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !7414 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7417, metadata !DIExpression()), !dbg !7418
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7419, metadata !DIExpression()), !dbg !7420
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7421, metadata !DIExpression()), !dbg !7422
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !7423
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !7424
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7425
  ret void, !dbg !7426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !467 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !7427
  %cmp = icmp eq i32 %0, -1, !dbg !7429
  br i1 %cmp, label %if.then, label %if.end, !dbg !7430

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #10, !dbg !7431
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !7433
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !7434
  %call1 = call i32 @umask(i32 %1) #10, !dbg !7435
  br label %if.end, !dbg !7436

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !7437
  ret i32 %2, !dbg !7438
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_allerror(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7439 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !453
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7444, metadata !DIExpression()), !dbg !7445
  %call = call i32* @__errno_location() #15, !dbg !7446
  %0 = load i32, i32* %call, align 4, !dbg !7446, !ctir !7
  store i32 %0, i32* %err, align 4, !dbg !7445
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7447, metadata !DIExpression()), !dbg !7448
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7449, !ctir !453
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7449
  call void @llvm.va_start(i8* %arraydecay1), !dbg !7449
  %1 = load i32, i32* %err, align 4, !dbg !7450
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !7451
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7452, !ctir !453
  call void @verror(i32 0, i32 %1, i8* %2, %struct.__va_list_tag* %arraydecay2), !dbg !7453
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7454, !ctir !453
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !7454
  call void @llvm.va_end(i8* %arraydecay34), !dbg !7454
  ret void, !dbg !7455
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_error(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7456 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !453
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7457, metadata !DIExpression()), !dbg !7458
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7459, metadata !DIExpression()), !dbg !7460
  %call = call i32* @__errno_location() #15, !dbg !7461
  %0 = load i32, i32* %call, align 4, !dbg !7461, !ctir !7
  %call1 = call zeroext i1 @errno_unsupported(i32 %0), !dbg !7463
  br i1 %call1, label %if.end, label %if.then, !dbg !7464

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7465, metadata !DIExpression()), !dbg !7467
  %call2 = call i32* @__errno_location() #15, !dbg !7468
  %1 = load i32, i32* %call2, align 4, !dbg !7468, !ctir !7
  store i32 %1, i32* %err, align 4, !dbg !7467
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7469, metadata !DIExpression()), !dbg !7470
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7471, !ctir !453
  %arraydecay3 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7471
  call void @llvm.va_start(i8* %arraydecay3), !dbg !7471
  %2 = load i32, i32* %err, align 4, !dbg !7472
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !7473
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7474, !ctir !453
  call void @verror(i32 0, i32 %2, i8* %3, %struct.__va_list_tag* %arraydecay4), !dbg !7475
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7476, !ctir !453
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !7476
  call void @llvm.va_end(i8* %arraydecay56), !dbg !7476
  br label %if.end, !dbg !7477

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7478
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @copy_attr_quote(%struct.error_context* %ctx, i8* %str) #4 !dbg !7479 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7480, metadata !DIExpression()), !dbg !7481
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7482, metadata !DIExpression()), !dbg !7483
  %0 = load i8*, i8** %str.addr, align 8, !dbg !7484
  %call = call i8* @quotearg_style(i32 4, i8* %0), !dbg !7484
  ret i8* %call, !dbg !7485
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_free(%struct.error_context* %ctx, i8* %str) #4 !dbg !7486 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7487, metadata !DIExpression()), !dbg !7488
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7489, metadata !DIExpression()), !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_selinux_attr(i8* %name, %struct.error_context* %ctx) #4 !dbg !7492 {
entry:
  %name.addr = alloca i8*, align 8
  %ctx.addr = alloca %struct.error_context*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7499
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0), i64 16) #14, !dbg !7499
  %tobool = icmp ne i32 %call, 0, !dbg !7499
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7500

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7501
  %2 = load %struct.error_context*, %struct.error_context** %ctx.addr, align 8, !dbg !7502
  %call1 = call i32 @attr_copy_check_permissions(i8* %1, %struct.error_context* %2), !dbg !7503
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7500
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !7504
  %land.ext = zext i1 %3 to i32, !dbg !7500
  ret i32 %land.ext, !dbg !7505
}

declare dso_local i32 @attr_copy_fd(i8*, i32, i8*, i32, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_file(i8*, i8*, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_check_permissions(i8*, %struct.error_context*) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !7506 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7507, metadata !DIExpression()), !dbg !7508
  %call = call i32* @__errno_location() #15, !dbg !7509
  %0 = load i32, i32* %call, align 4, !dbg !7509, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7510
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7511

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7512
  %1 = load i32, i32* %call1, align 4, !dbg !7512, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7513
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7514

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7515
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7516, !ctir !3743
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !7516
  %tobool = trunc i8 %3 to i1, !dbg !7516, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !7517
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7518
  ret i1 %4, !dbg !7519
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !7520 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7521, metadata !DIExpression()), !dbg !7522
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7523, metadata !DIExpression()), !dbg !7524
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !7525
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !7526
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #10, !dbg !7527
  ret i32 %call, !dbg !7528
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !7529 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7533, metadata !DIExpression()), !dbg !7534
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7535, !ctir !338
  %0 = load i64, i64* %st_blksize, align 8, !dbg !7535, !ctir !353
  %cmp = icmp slt i64 0, %0, !dbg !7535
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7535

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7535, !ctir !338
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !7535, !ctir !353
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !7535
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7535

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7535, !ctir !338
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !7535, !ctir !353
  br label %cond.end, !dbg !7535

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7535

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !7535
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !7535
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !7535

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !7535

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7535, !ctir !338
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !7535, !ctir !353
  %cmp8 = icmp slt i64 0, %3, !dbg !7535
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !7535

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7535, !ctir !338
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !7535, !ctir !353
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !7535
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !7535

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7535, !ctir !338
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !7535, !ctir !353
  br label %cond.end15, !dbg !7535

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !7535

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !7535
  br label %cond.end17, !dbg !7535

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !7535
  ret i64 %cond18, !dbg !7536
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !7537 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7540, metadata !DIExpression()), !dbg !7541
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7542
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7542, !ctir !392
  %1 = load i32, i32* %st_mode, align 8, !dbg !7542, !ctir !168
  %and = and i32 %1, 61440, !dbg !7542
  %cmp = icmp eq i32 %and, 32768, !dbg !7542
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7543

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7544
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !7544, !ctir !392
  %3 = load i64, i64* %st_blocks, align 8, !dbg !7544, !ctir !355
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7545
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !7546, !ctir !392
  %5 = load i64, i64* %st_size, align 8, !dbg !7546, !ctir !29
  %div = sdiv i64 %5, 512, !dbg !7547
  %cmp1 = icmp slt i64 %3, %div, !dbg !7548
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7549
  ret i1 %6, !dbg !7550
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !7551 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !116
  %p1 = alloca i8*, align 8, !ctir !116
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7554, metadata !DIExpression()), !dbg !7555
  store i64 %alignment, i64* %alignment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7558, metadata !DIExpression()), !dbg !7559
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7560
  store i8* %0, i8** %p0, align 8, !dbg !7559
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !7561, metadata !DIExpression()), !dbg !7562
  %1 = load i8*, i8** %p0, align 8, !dbg !7563
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !7564
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !7565, !ctir !117
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !7566, !ctir !117
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !7562
  %3 = load i8*, i8** %p1, align 8, !dbg !7567
  %4 = load i8*, i8** %p1, align 8, !dbg !7568
  %5 = ptrtoint i8* %4 to i64, !dbg !7569
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !7570
  %rem = urem i64 %5, %6, !dbg !7571
  %idx.neg = sub i64 0, %rem, !dbg !7572
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !7572, !ctir !117
  ret i8* %add.ptr2, !dbg !7573
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !7574 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !7577
  %last_ext_start = alloca i64, align 8, !ctir !295
  %last_ext_len = alloca i64, align 8, !ctir !295
  %dest_pos = alloca i64, align 8, !ctir !295
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %ok = alloca i8, align 1, !ctir !142
  %empty_extent = alloca i8, align 1, !ctir !142
  %i = alloca i32, align 4, !ctir !70
  %ext_start = alloca i64, align 8, !ctir !295
  %ext_len = alloca i64, align 8, !ctir !295
  %ext_hole_size = alloca i64, align 8, !ctir !295
  %nzeros = alloca i64, align 8, !ctir !295
  %n_read = alloca i64, align 8, !ctir !295
  %read_hole = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7588, metadata !DIExpression()), !dbg !7589
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7590, metadata !DIExpression()), !dbg !7591
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7592, metadata !DIExpression()), !dbg !7593
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7594, metadata !DIExpression()), !dbg !7595
  store i64 %src_total_size, i64* %src_total_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !7596, metadata !DIExpression()), !dbg !7597
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !7598, metadata !DIExpression()), !dbg !7599
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !7606, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !7608, metadata !DIExpression()), !dbg !7609
  store i64 0, i64* %last_ext_start, align 8, !dbg !7609
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !7610, metadata !DIExpression()), !dbg !7611
  store i64 0, i64* %last_ext_len, align 8, !dbg !7611
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !7612, metadata !DIExpression()), !dbg !7613
  store i64 0, i64* %dest_pos, align 8, !dbg !7613
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !7614
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !7615
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7616
  store i8 0, i8* %1, align 1, !dbg !7617, !ctir !142
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7618, metadata !DIExpression()), !dbg !7619
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7619
  br label %do.body, !dbg !7620

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7621, metadata !DIExpression()), !dbg !7623
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !7624
  %frombool = zext i1 %call to i8, !dbg !7623
  store i8 %frombool, i8* %ok, align 1, !dbg !7623
  %2 = load i8, i8* %ok, align 1, !dbg !7625
  %tobool = trunc i8 %2 to i1, !dbg !7625
  br i1 %tobool, label %if.end9, label %if.then, !dbg !7627

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7628, !ctir !7577
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !7628
  %tobool1 = trunc i8 %3 to i1, !dbg !7628, !ctir !142
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7631

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !7632

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !7633, !ctir !7577
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !7633
  %tobool3 = trunc i8 %4 to i1, !dbg !7633, !ctir !142
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7635

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7636
  store i8 1, i8* %5, align 1, !dbg !7638, !ctir !142
  store i1 false, i1* %retval, align 1, !dbg !7639
  br label %return, !dbg !7639

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !7640
  %6 = load i32, i32* %call6, align 4, !dbg !7640, !ctir !7
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !7641
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !7642
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !7642
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !7643
  store i1 false, i1* %retval, align 1, !dbg !7644
  br label %return, !dbg !7644

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !7645, metadata !DIExpression()), !dbg !7646
  store i8 0, i8* %empty_extent, align 1, !dbg !7646
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7647, metadata !DIExpression()), !dbg !7649
  store i32 0, i32* %i, align 4, !dbg !7649
  br label %for.cond, !dbg !7650

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !7651
  %conv = zext i32 %8 to i64, !dbg !7651
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7653, !ctir !7577
  %9 = load i64, i64* %ei_count, align 8, !dbg !7653, !ctir !55
  %cmp = icmp ult i64 %conv, %9, !dbg !7654
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7655

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !7656
  %tobool11 = trunc i8 %10 to i1, !dbg !7656
  br label %lor.end, !dbg !7655

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !7657

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !7658, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !7661, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !7663, metadata !DIExpression()), !dbg !7664
  %12 = load i32, i32* %i, align 4, !dbg !7665
  %conv13 = zext i32 %12 to i64, !dbg !7665
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7667, !ctir !7577
  %13 = load i64, i64* %ei_count14, align 8, !dbg !7667, !ctir !55
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !7668
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !7669

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7670, !ctir !7577
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !7670, !ctir !436
  %15 = load i32, i32* %i, align 4, !dbg !7672
  %idxprom = zext i32 %15 to i64, !dbg !7673
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !7673, !ctir !436
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !7674, !ctir !437
  %16 = load i64, i64* %ext_logical, align 8, !dbg !7674, !ctir !295
  store i64 %16, i64* %ext_start, align 8, !dbg !7675
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7676, !ctir !7577
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !7676, !ctir !436
  %18 = load i32, i32* %i, align 4, !dbg !7677
  %idxprom19 = zext i32 %18 to i64, !dbg !7678
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !7678, !ctir !436
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !7679, !ctir !437
  %19 = load i64, i64* %ext_length, align 8, !dbg !7679, !ctir !295
  store i64 %19, i64* %ext_len, align 8, !dbg !7680
  br label %if.end25, !dbg !7681

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7682
  %dec = add i32 %20, -1, !dbg !7682
  store i32 %dec, i32* %i, align 4, !dbg !7682
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !7684
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7685, !ctir !7577
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !7685, !ctir !436
  %23 = load i32, i32* %i, align 4, !dbg !7686
  %idxprom22 = zext i32 %23 to i64, !dbg !7687
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !7687, !ctir !436
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !7688, !ctir !437
  %24 = load i64, i64* %ext_length24, align 8, !dbg !7688, !ctir !295
  %add = add nsw i64 %21, %24, !dbg !7689
  store i64 %add, i64* %ext_start, align 8, !dbg !7690
  store i64 0, i64* %ext_len, align 8, !dbg !7691
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !7692
  %26 = load i64, i64* %ext_start, align 8, !dbg !7694
  %27 = load i64, i64* %ext_len, align 8, !dbg !7695
  %add26 = add nsw i64 %26, %27, !dbg !7696
  %cmp27 = icmp slt i64 %25, %add26, !dbg !7697
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !7698

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !7699
  %29 = load i64, i64* %ext_start, align 8, !dbg !7702
  %cmp30 = icmp slt i64 %28, %29, !dbg !7703
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7704

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !7705
  store i64 %30, i64* %ext_start, align 8, !dbg !7706
  br label %if.end33, !dbg !7707

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !7708
  %32 = load i64, i64* %ext_start, align 8, !dbg !7709
  %sub = sub nsw i64 %31, %32, !dbg !7710
  store i64 %sub, i64* %ext_len, align 8, !dbg !7711
  br label %if.end34, !dbg !7712

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !7713
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !7714
  %sub35 = sub nsw i64 %33, %34, !dbg !7715
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !7716
  %sub36 = sub nsw i64 %sub35, %35, !dbg !7717
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !7718
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !7719
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !7720
  %tobool37 = icmp ne i64 %36, 0, !dbg !7720
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !7722

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !7723
  %38 = load i64, i64* %ext_start, align 8, !dbg !7726
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #10, !dbg !7727
  %cmp40 = icmp slt i64 %call39, 0, !dbg !7728
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !7729

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #15, !dbg !7730
  %39 = load i32, i32* %call43, align 4, !dbg !7730, !ctir !7
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #10, !dbg !7732
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !7733
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !7733
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !7734
  br label %fail, !dbg !7734

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !7735), !dbg !7736
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7737
  store i1 false, i1* %retval, align 1, !dbg !7738
  br label %return, !dbg !7738

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !7739
  %tobool47 = trunc i8 %41 to i1, !dbg !7739
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !7741

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7742
  %cmp49 = icmp eq i32 %42, 3, !dbg !7743
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !7744

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !7745
  %tobool51 = trunc i8 %43 to i1, !dbg !7745
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !7746

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7747
  %cmp53 = icmp ne i32 %44, 1, !dbg !7748
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !7749

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !7750
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !7753
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7754
  %cmp56 = icmp eq i32 %47, 3, !dbg !7755
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !7756
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !7757
  br i1 %call58, label %if.end60, label %if.then59, !dbg !7758

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !7759

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7760
  br label %if.end81, !dbg !7761

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !7762, metadata !DIExpression()), !dbg !7764
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !7765
  store i64 %49, i64* %nzeros, align 8, !dbg !7764
  %50 = load i8, i8* %empty_extent, align 1, !dbg !7766
  %tobool62 = trunc i8 %50 to i1, !dbg !7766
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !7768

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !7769
  %52 = load i64, i64* %dest_pos, align 8, !dbg !7769
  %sub64 = sub nsw i64 %51, %52, !dbg !7769
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !7769
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !7769
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !7769

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !7769
  %55 = load i64, i64* %dest_pos, align 8, !dbg !7769
  %sub67 = sub nsw i64 %54, %55, !dbg !7769
  br label %cond.end, !dbg !7769

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !7769
  br label %cond.end, !dbg !7769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !7769
  store i64 %cond, i64* %nzeros, align 8, !dbg !7770
  br label %if.end68, !dbg !7771

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !7772
  %58 = load i64, i64* %nzeros, align 8, !dbg !7774
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !7775
  br i1 %call69, label %if.end74, label %if.then70, !dbg !7776

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #15, !dbg !7777
  %59 = load i32, i32* %call71, align 4, !dbg !7777, !ctir !7
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #10, !dbg !7779
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7780
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !7780
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !7781
  br label %fail, !dbg !7782

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !7783
  %62 = load i64, i64* %ext_start, align 8, !dbg !7783
  %cmp75 = icmp slt i64 %61, %62, !dbg !7783
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !7783

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !7783
  br label %cond.end79, !dbg !7783

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !7783
  br label %cond.end79, !dbg !7783

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !7783
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !7784
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !7785

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !7786
  store i64 %65, i64* %last_ext_start, align 8, !dbg !7787
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7788, metadata !DIExpression()), !dbg !7791
  store i8 0, i8* %empty_extent, align 1, !dbg !7792
  %66 = load i64, i64* %ext_len, align 8, !dbg !7793
  store i64 %66, i64* %last_ext_len, align 8, !dbg !7794
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !7795, metadata !DIExpression()), !dbg !7796
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !7797
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !7799
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !7800
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !7801
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7802
  %cmp83 = icmp eq i32 %71, 3, !dbg !7803
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !7802

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !7804
  br label %cond.end87, !dbg !7802

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !7802

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !7802
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !7805
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !7806
  %75 = load i64, i64* %ext_len, align 8, !dbg !7807
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !7808
  br i1 %call89, label %if.end91, label %if.then90, !dbg !7809

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !7810

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !7811
  %77 = load i64, i64* %n_read, align 8, !dbg !7812
  %add92 = add nsw i64 %76, %77, !dbg !7813
  store i64 %add92, i64* %dest_pos, align 8, !dbg !7814
  %78 = load i64, i64* %n_read, align 8, !dbg !7815
  %tobool93 = icmp ne i64 %78, 0, !dbg !7815
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !7817

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !7818
  %tobool95 = trunc i8 %79 to i1, !dbg !7818
  %frombool96 = zext i1 %tobool95 to i8, !dbg !7819
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !7819
  br label %if.end97, !dbg !7820

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !7821
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !7823
  %cmp98 = icmp eq i64 %80, %81, !dbg !7824
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !7825

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7826, !ctir !7577
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !7828, !ctir !142
  br label %for.end, !dbg !7829

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !7830

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !7831
  %inc = add i32 %82, 1, !dbg !7831
  store i32 %inc, i32* %i, align 4, !dbg !7831
  br label %for.cond, !dbg !7832, !llvm.loop !7833

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !7835
  br label %do.cond, !dbg !7836

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7837, !ctir !7577
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !7837
  %tobool104 = trunc i8 %83 to i1, !dbg !7837, !ctir !142
  %lnot = xor i1 %tobool104, true, !dbg !7838
  br i1 %lnot, label %do.body, label %do.end, !dbg !7836, !llvm.loop !7839

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !7841
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !7843
  %cmp105 = icmp slt i64 %84, %85, !dbg !7844
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !7845

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7846
  %tobool108 = trunc i8 %86 to i1, !dbg !7846
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !7847

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7848
  %cmp111 = icmp ne i32 %87, 1, !dbg !7849
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !7850

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !7851
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !7852
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #10, !dbg !7853
  %tobool115 = icmp ne i32 %call114, 0, !dbg !7853
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !7848

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !7854
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !7855
  %92 = load i64, i64* %dest_pos, align 8, !dbg !7856
  %sub117 = sub nsw i64 %91, %92, !dbg !7857
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !7858
  br i1 %call118, label %if.end123, label %if.then119, !dbg !7850

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #15, !dbg !7859
  %93 = load i32, i32* %call120, align 4, !dbg !7859, !ctir !7
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !7861
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7862
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7862
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !7863
  store i1 false, i1* %retval, align 1, !dbg !7864
  br label %return, !dbg !7864

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !7865
  %cmp124 = icmp eq i32 %95, 3, !dbg !7867
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !7868

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !7869
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !7870
  %cmp127 = icmp slt i64 %96, %97, !dbg !7871
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !7872

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !7873
  %99 = load i64, i64* %dest_pos, align 8, !dbg !7874
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !7875
  %101 = load i64, i64* %dest_pos, align 8, !dbg !7876
  %sub130 = sub nsw i64 %100, %101, !dbg !7877
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !7878
  %cmp132 = icmp slt i32 %call131, 0, !dbg !7879
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !7880

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #15, !dbg !7881
  %102 = load i32, i32* %call135, align 4, !dbg !7881, !ctir !7
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !7883
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !7884
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !7884
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !7885
  store i1 false, i1* %retval, align 1, !dbg !7886
  br label %return, !dbg !7886

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !7887
  br label %return, !dbg !7887

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !7888
  ret i1 %104, !dbg !7888
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !7889 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !142
  %psize = alloca i64, align 8, !ctir !295
  %n_read = alloca i64, align 8, !ctir !446
  %csize = alloca i64, align 8, !ctir !55
  %cbuf = alloca i8*, align 8, !ctir !9
  %pbuf = alloca i8*, align 8, !ctir !9
  %prev_hole = alloca i8, align 1, !ctir !142
  %transition = alloca i8, align 1, !ctir !142
  %last_chunk = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7893, metadata !DIExpression()), !dbg !7894
  store i32 %dest_fd, i32* %dest_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7895, metadata !DIExpression()), !dbg !7896
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7897, metadata !DIExpression()), !dbg !7898
  store i64 %buf_size, i64* %buf_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7899, metadata !DIExpression()), !dbg !7900
  store i64 %hole_size, i64* %hole_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7901, metadata !DIExpression()), !dbg !7902
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !7903, metadata !DIExpression()), !dbg !7904
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  store i64 %max_n_read, i64* %max_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !7909, metadata !DIExpression()), !dbg !7910
  store i64* %total_n_read, i64** %total_n_read.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !7911, metadata !DIExpression()), !dbg !7912
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !7915
  store i8 0, i8* %0, align 1, !dbg !7916, !ctir !142
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7917
  store i64 0, i64* %1, align 8, !dbg !7918, !ctir !295
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !7919, metadata !DIExpression()), !dbg !7920
  store i8 0, i8* %make_hole, align 1, !dbg !7920
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !7921, metadata !DIExpression()), !dbg !7922
  store i64 0, i64* %psize, align 8, !dbg !7922
  br label %while.cond, !dbg !7923

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !7924
  %tobool = icmp ne i64 %2, 0, !dbg !7923
  br i1 %tobool, label %while.body, label %while.end94, !dbg !7923

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7925, metadata !DIExpression()), !dbg !7927
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !7928
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !7929
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !7930
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !7930
  %cmp = icmp ult i64 %5, %6, !dbg !7930
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7930

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !7930
  br label %cond.end, !dbg !7930

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !7930
  br label %cond.end, !dbg !7930

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !7930
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !7931
  store i64 %call, i64* %n_read, align 8, !dbg !7927
  %9 = load i64, i64* %n_read, align 8, !dbg !7932
  %cmp1 = icmp slt i64 %9, 0, !dbg !7934
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !7935

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #15, !dbg !7936
  %10 = load i32, i32* %call2, align 4, !dbg !7936, !ctir !7
  %cmp3 = icmp eq i32 %10, 4, !dbg !7939
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7940

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !7941, !llvm.loop !7942

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #15, !dbg !7944
  %11 = load i32, i32* %call5, align 4, !dbg !7944, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #10, !dbg !7945
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !7946
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !7946
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !7947
  store i1 false, i1* %retval, align 1, !dbg !7948
  br label %return, !dbg !7948

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !7949
  %cmp9 = icmp eq i64 %13, 0, !dbg !7951
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7952

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !7953

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !7954
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !7955
  %sub = sub i64 %15, %14, !dbg !7955
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !7955
  %16 = load i64, i64* %n_read, align 8, !dbg !7956
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !7957
  %18 = load i64, i64* %17, align 8, !dbg !7958, !ctir !295
  %add = add nsw i64 %18, %16, !dbg !7958
  store i64 %add, i64* %17, align 8, !dbg !7958, !ctir !295
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !7959, metadata !DIExpression()), !dbg !7960
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !7961
  %tobool12 = icmp ne i64 %19, 0, !dbg !7961
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !7961

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !7962
  br label %cond.end15, !dbg !7961

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !7963
  br label %cond.end15, !dbg !7961

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !7961
  store i64 %cond16, i64* %csize, align 8, !dbg !7960
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !7964, metadata !DIExpression()), !dbg !7965
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !7966
  store i8* %22, i8** %cbuf, align 8, !dbg !7965
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !7967, metadata !DIExpression()), !dbg !7968
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !7969
  store i8* %23, i8** %pbuf, align 8, !dbg !7968
  br label %while.cond17, !dbg !7970

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !7971
  %tobool18 = icmp ne i64 %24, 0, !dbg !7970
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !7970

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !7972, metadata !DIExpression()), !dbg !7974
  %25 = load i8, i8* %make_hole, align 1, !dbg !7975
  %tobool20 = trunc i8 %25 to i1, !dbg !7975
  %frombool21 = zext i1 %tobool20 to i8, !dbg !7974
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !7974
  %26 = load i64, i64* %csize, align 8, !dbg !7976
  %27 = load i64, i64* %n_read, align 8, !dbg !7976
  %cmp22 = icmp ult i64 %26, %27, !dbg !7976
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !7976

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !7976
  br label %cond.end25, !dbg !7976

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !7976
  br label %cond.end25, !dbg !7976

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !7976
  store i64 %cond26, i64* %csize, align 8, !dbg !7977
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !7978
  %tobool27 = icmp ne i64 %30, 0, !dbg !7978
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !7980

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !7981
  %tobool28 = icmp ne i64 %31, 0, !dbg !7981
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !7982

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !7983
  %33 = load i64, i64* %csize, align 8, !dbg !7984
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !7985
  %frombool31 = zext i1 %call30 to i8, !dbg !7986
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !7986
  br label %if.end32, !dbg !7987

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !7988, metadata !DIExpression()), !dbg !7989
  %34 = load i8, i8* %make_hole, align 1, !dbg !7990
  %tobool33 = trunc i8 %34 to i1, !dbg !7990
  %conv = zext i1 %tobool33 to i32, !dbg !7990
  %35 = load i8, i8* %prev_hole, align 1, !dbg !7991
  %tobool34 = trunc i8 %35 to i1, !dbg !7991
  %conv35 = zext i1 %tobool34 to i32, !dbg !7991
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !7992
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !7993

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !7994
  %tobool38 = icmp ne i64 %36, 0, !dbg !7993
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !7995
  %frombool39 = zext i1 %37 to i8, !dbg !7989
  store i8 %frombool39, i8* %transition, align 1, !dbg !7989
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !7996, metadata !DIExpression()), !dbg !7997
  %38 = load i64, i64* %n_read, align 8, !dbg !7998
  %39 = load i64, i64* %csize, align 8, !dbg !7999
  %cmp40 = icmp eq i64 %38, %39, !dbg !8000
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !8001

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !8002
  %tobool43 = trunc i8 %40 to i1, !dbg !8002
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !8003

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !8004
  %tobool44 = icmp ne i64 %41, 0, !dbg !8005
  %lnot = xor i1 %tobool44, true, !dbg !8005
  br label %lor.end, !dbg !8003

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !7997
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !7997
  %43 = load i8, i8* %transition, align 1, !dbg !8006
  %tobool46 = trunc i8 %43 to i1, !dbg !8006
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !8008

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !8009
  %tobool48 = trunc i8 %44 to i1, !dbg !8009
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !8010

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !8011
  %tobool51 = trunc i8 %45 to i1, !dbg !8011
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !8014

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !8015
  %47 = load i64, i64* %psize, align 8, !dbg !8016
  %add53 = add i64 %47, %46, !dbg !8016
  store i64 %add53, i64* %psize, align 8, !dbg !8016
  br label %if.end54, !dbg !8017

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !8018
  %tobool55 = trunc i8 %48 to i1, !dbg !8018
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !8020

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !8021
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8024
  %51 = load i64, i64* %psize, align 8, !dbg !8025
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !8026
  %52 = load i64, i64* %psize, align 8, !dbg !8027
  %cmp58 = icmp ne i64 %call57, %52, !dbg !8028
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !8029

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #15, !dbg !8030
  %53 = load i32, i32* %call61, align 4, !dbg !8030, !ctir !7
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i64 0, i64 0)) #10, !dbg !8032
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8033
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8033
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !8034
  store i1 false, i1* %retval, align 1, !dbg !8035
  br label %return, !dbg !8035

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !8036

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !8037
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8040
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !8041
  %tobool65 = trunc i8 %57 to i1, !dbg !8041
  %58 = load i64, i64* %psize, align 8, !dbg !8042
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !8043
  br i1 %call66, label %if.end68, label %if.then67, !dbg !8044

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !8045
  br label %return, !dbg !8045

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !8046
  store i8* %59, i8** %pbuf, align 8, !dbg !8047
  %60 = load i64, i64* %csize, align 8, !dbg !8048
  store i64 %60, i64* %psize, align 8, !dbg !8049
  %61 = load i8, i8* %last_chunk, align 1, !dbg !8050
  %tobool70 = trunc i8 %61 to i1, !dbg !8050
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !8052

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !8053
  %tobool72 = icmp ne i64 %62, 0, !dbg !8053
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8056

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !8057
  br label %if.end74, !dbg !8058

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !8059
  %tobool75 = trunc i8 %63 to i1, !dbg !8059
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8061

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !8062
  br label %if.end78, !dbg !8063

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !8064
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !8065

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !8066

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !8067
  %65 = load i64, i64* %csize, align 8, !dbg !8070
  %sub81 = sub i64 9223372036854775807, %65, !dbg !8071
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !8072
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8073

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !8074
  %67 = load i64, i64* %psize, align 8, !dbg !8075
  %add85 = add i64 %67, %66, !dbg !8075
  store i64 %add85, i64* %psize, align 8, !dbg !8075
  br label %if.end89, !dbg !8076

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i64 0, i64 0)) #10, !dbg !8077
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !8079
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !8079
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !8080
  store i1 false, i1* %retval, align 1, !dbg !8081
  br label %return, !dbg !8081

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !8082
  %70 = load i64, i64* %n_read, align 8, !dbg !8083
  %sub91 = sub i64 %70, %69, !dbg !8083
  store i64 %sub91, i64* %n_read, align 8, !dbg !8083
  %71 = load i64, i64* %csize, align 8, !dbg !8084
  %72 = load i8*, i8** %cbuf, align 8, !dbg !8085
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !8085, !ctir !10
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !8085
  br label %while.cond17, !dbg !7970, !llvm.loop !8086

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !8088
  %tobool92 = trunc i8 %73 to i1, !dbg !8088
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8089
  %frombool93 = zext i1 %tobool92 to i8, !dbg !8090
  store i8 %frombool93, i8* %74, align 1, !dbg !8090, !ctir !142
  br label %while.cond, !dbg !7923, !llvm.loop !7942

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !8091
  %tobool95 = trunc i8 %75 to i1, !dbg !8091
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !8093

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !8094
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !8095
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !8096
  %tobool98 = trunc i8 %78 to i1, !dbg !8096
  %79 = load i64, i64* %psize, align 8, !dbg !8097
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !8098
  br i1 %call99, label %if.else101, label %if.then100, !dbg !8099

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !8100
  br label %return, !dbg !8100

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !8101
  br label %return, !dbg !8101

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !8102
  ret i1 %80, !dbg !8102
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !8103 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8106, metadata !DIExpression()), !dbg !8107
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8108, metadata !DIExpression()), !dbg !8109
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8110, metadata !DIExpression()), !dbg !8111
  %0 = load i32, i32* %desc.addr, align 4, !dbg !8112
  %cmp = icmp sle i32 0, %0, !dbg !8114
  br i1 %cmp, label %if.then, label %if.end, !dbg !8115

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8116
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8117
  %call = call i32 @fchmod(i32 %1, i32 %2) #10, !dbg !8118
  store i32 %call, i32* %retval, align 4, !dbg !8119
  br label %return, !dbg !8119

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8120
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8121
  %call1 = call i32 @chmod(i8* %3, i32 %4) #10, !dbg !8122
  store i32 %call1, i32* %retval, align 4, !dbg !8123
  br label %return, !dbg !8123

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8124
  ret i32 %5, !dbg !8124
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #9 !dbg !8125 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !448
  %word = alloca i8, align 1, !ctir !450
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8130, metadata !DIExpression()), !dbg !8131
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8132, metadata !DIExpression()), !dbg !8133
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8134
  store i8* %0, i8** %p, align 8, !dbg !8133
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8135, metadata !DIExpression()), !dbg !8136
  %1 = load i64, i64* %length.addr, align 8, !dbg !8137
  %tobool = icmp ne i64 %1, 0, !dbg !8137
  br i1 %tobool, label %if.end, label %if.then, !dbg !8139

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8140
  br label %return, !dbg !8140

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8141

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8142
  %and = and i64 %2, 0, !dbg !8142
  %tobool1 = icmp ne i64 %and, 0, !dbg !8141
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8141

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8143
  %4 = load i8, i8* %3, align 1, !dbg !8146, !ctir !449
  %tobool2 = icmp ne i8 %4, 0, !dbg !8146
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8147

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8148
  br label %return, !dbg !8148

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8149
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8149, !ctir !449
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8149
  %6 = load i64, i64* %length.addr, align 8, !dbg !8150
  %dec = add i64 %6, -1, !dbg !8150
  store i64 %dec, i64* %length.addr, align 8, !dbg !8150
  %7 = load i64, i64* %length.addr, align 8, !dbg !8151
  %tobool5 = icmp ne i64 %7, 0, !dbg !8151
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8153

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8154
  br label %return, !dbg !8154

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8141, !llvm.loop !8155

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8157

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8158
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8162
  %9 = load i8, i8* %word, align 1, !dbg !8163
  %tobool8 = icmp ne i8 %9, 0, !dbg !8163
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8165

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8166
  br label %return, !dbg !8166

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8167
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8167, !ctir !449
  store i8* %add.ptr, i8** %p, align 8, !dbg !8167
  %11 = load i64, i64* %length.addr, align 8, !dbg !8168
  %sub = sub i64 %11, 1, !dbg !8168
  store i64 %sub, i64* %length.addr, align 8, !dbg !8168
  %12 = load i64, i64* %length.addr, align 8, !dbg !8169
  %tobool11 = icmp ne i64 %12, 0, !dbg !8169
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8171

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8172
  br label %return, !dbg !8172

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8173
  %and14 = and i64 %13, 15, !dbg !8173
  %cmp = icmp eq i64 %and14, 0, !dbg !8175
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8176

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8177

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8178, !llvm.loop !8179

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8182
  %15 = load i8*, i8** %p, align 8, !dbg !8183
  %16 = load i64, i64* %length.addr, align 8, !dbg !8184
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8185
  %cmp17 = icmp eq i32 %call, 0, !dbg !8186
  store i1 %cmp17, i1* %retval, align 1, !dbg !8187
  br label %return, !dbg !8187

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8188
  ret i1 %17, !dbg !8188
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8189 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !295
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8198, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8200, metadata !DIExpression()), !dbg !8201
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8202
  %1 = load i64, i64* %size.addr, align 8, !dbg !8203
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #10, !dbg !8204
  store i64 %call, i64* %file_end, align 8, !dbg !8201
  %2 = load i64, i64* %file_end, align 8, !dbg !8205
  %cmp = icmp slt i64 %2, 0, !dbg !8207
  br i1 %cmp, label %if.then, label %if.end, !dbg !8208

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8209
  %3 = load i32, i32* %call1, align 4, !dbg !8209, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #10, !dbg !8211
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8212
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !8212
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !8213
  store i1 false, i1* %retval, align 1, !dbg !8214
  br label %return, !dbg !8214

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !8215
  %tobool = trunc i8 %5 to i1, !dbg !8215
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8217

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !8218
  %7 = load i64, i64* %file_end, align 8, !dbg !8219
  %8 = load i64, i64* %size.addr, align 8, !dbg !8220
  %sub = sub nsw i64 %7, %8, !dbg !8221
  %9 = load i64, i64* %size.addr, align 8, !dbg !8222
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !8223
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8224
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8225

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #15, !dbg !8226
  %10 = load i32, i32* %call7, align 4, !dbg !8226, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !8228
  %11 = load i8*, i8** %name.addr, align 8, !dbg !8229
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !8229
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !8230
  store i1 false, i1* %retval, align 1, !dbg !8231
  br label %return, !dbg !8231

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !8232
  br label %return, !dbg !8232

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !8233
  ret i1 %12, !dbg !8233
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !8234 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8237, metadata !DIExpression()), !dbg !8238
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8239, metadata !DIExpression()), !dbg !8240
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8241, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8243, metadata !DIExpression()), !dbg !8244
  store i32 0, i32* %ret, align 4, !dbg !8244
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8245
  %1 = load i64, i64* %offset.addr, align 8, !dbg !8246
  %2 = load i64, i64* %length.addr, align 8, !dbg !8247
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !8248
  store i32 %call, i32* %ret, align 4, !dbg !8249
  %3 = load i32, i32* %ret, align 4, !dbg !8250
  %cmp = icmp slt i32 %3, 0, !dbg !8252
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8253

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8254
  %4 = load i32, i32* %call1, align 4, !dbg !8254, !ctir !7
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !8255
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !8256

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #15, !dbg !8257
  %5 = load i32, i32* %call3, align 4, !dbg !8257, !ctir !7
  %cmp4 = icmp eq i32 %5, 38, !dbg !8258
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8259

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !8260
  br label %if.end, !dbg !8261

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8262
  ret i32 %6, !dbg !8263
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !8264 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  %0 = load i32, i32* %err.addr, align 4, !dbg !8267
  %cmp = icmp eq i32 %0, 95, !dbg !8268
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8269

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8269

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8270
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !8271 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8277
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8278, !ctir !7577
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8278, !ctir !436
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !8277
  call void @free(i8* %2) #10, !dbg !8279
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8280
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8281, !ctir !7577
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !8282, !ctir !436
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8283
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !8284, !ctir !7577
  store i64 0, i64* %ei_count, align 8, !dbg !8285, !ctir !55
  ret void, !dbg !8286
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !474 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8287, metadata !DIExpression()), !dbg !8288
  store i64 %n_bytes, i64* %n_bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8291
  %cmp = icmp eq i8* %0, null, !dbg !8293
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8294

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !8295
  %call = call noalias i8* @calloc(i64 %1, i64 1) #10, !dbg !8297
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !8298
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8299
  %cmp1 = icmp eq i8* %2, null, !dbg !8301
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8302

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !8303
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !8305
  br label %if.end, !dbg !8306

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8307

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !8308

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !8309
  %tobool = icmp ne i64 %3, 0, !dbg !8308
  br i1 %tobool, label %while.body, label %while.end, !dbg !8308

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8310, metadata !DIExpression()), !dbg !8312
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !8313
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !8313
  %cmp4 = icmp ult i64 %4, %5, !dbg !8313
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8313

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !8313
  br label %cond.end, !dbg !8313

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !8313
  br label %cond.end, !dbg !8313

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8313
  store i64 %cond, i64* %n, align 8, !dbg !8312
  %8 = load i32, i32* %fd.addr, align 4, !dbg !8314
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8316
  %10 = load i64, i64* %n, align 8, !dbg !8317
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !8318
  %11 = load i64, i64* %n, align 8, !dbg !8319
  %cmp6 = icmp ne i64 %call5, %11, !dbg !8320
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8321

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !8322
  br label %return, !dbg !8322

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !8323
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !8324
  %sub = sub i64 %13, %12, !dbg !8324
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !8324
  br label %while.cond, !dbg !8308, !llvm.loop !8325

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !8327
  br label %return, !dbg !8327

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !8328
  ret i1 %14, !dbg !8328
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !8329 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8332, metadata !DIExpression()), !dbg !8333
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8334, metadata !DIExpression()), !dbg !8335
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8336
  %and = and i32 %0, 61440, !dbg !8336
  %cmp = icmp eq i32 %and, 40960, !dbg !8336
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8337

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !8338
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !8339

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !8340
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #10, !dbg !8341
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8342
  br label %lor.end, !dbg !8339

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !8343
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !8344 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8345, metadata !DIExpression()), !dbg !8346
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8347
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !8348
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !8348
  %call = call i32 @geteuid() #10, !dbg !8349
  %cmp = icmp eq i32 %call, 0, !dbg !8350
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8351
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8352, !ctir !3744
  %frombool = zext i1 %cmp to i8, !dbg !8353
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !8353, !ctir !142
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8354
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !8355, !ctir !3744
  %frombool1 = zext i1 %cmp to i8, !dbg !8356
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !8356, !ctir !142
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8357
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !8358, !ctir !3744
  store i32 -1, i32* %rename_errno, align 4, !dbg !8359, !ctir !7
  ret void, !dbg !8360
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !8361 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !490
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !489
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8366, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !8368, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8370, metadata !DIExpression()), !dbg !8371
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8372
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !8373, !ctir !490
  store i64 %0, i64* %st_ino, align 8, !dbg !8374, !ctir !259
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8375
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !8376, !ctir !490
  store i64 %1, i64* %st_dev, align 8, !dbg !8377, !ctir !262
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !8378, !ctir !490
  store i8* null, i8** %name, align 8, !dbg !8379, !ctir !9
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8380
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !8381
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !8382
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8382
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !8383
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8384
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8384
  br i1 %tobool, label %if.then, label %if.end, !dbg !8386

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8387
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !8387
  call void @src_to_dest_free(i8* %7), !dbg !8388
  br label %if.end, !dbg !8388

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8389
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !8390 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !489
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8395
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8395
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8394
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8396
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8397, !ctir !490
  %3 = load i8*, i8** %name, align 8, !dbg !8397, !ctir !9
  call void @free(i8* %3) #10, !dbg !8398
  %4 = load i8*, i8** %x.addr, align 8, !dbg !8399
  call void @free(i8* %4) #10, !dbg !8400
  ret void, !dbg !8401
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !8402 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !490
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !495
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8405, metadata !DIExpression()), !dbg !8406
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !8409, metadata !DIExpression()), !dbg !8410
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !8411, metadata !DIExpression()), !dbg !8412
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8413
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !8414, !ctir !490
  store i64 %0, i64* %st_ino, align 8, !dbg !8415, !ctir !259
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8416
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !8417, !ctir !490
  store i64 %1, i64* %st_dev, align 8, !dbg !8418, !ctir !262
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8419
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !8420
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !8421
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8421
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !8422
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8423
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8423
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8423

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8424
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !8425, !ctir !496
  %7 = load i8*, i8** %name, align 8, !dbg !8425, !ctir !9
  br label %cond.end, !dbg !8423

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !8423
  ret i8* %cond, !dbg !8426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !8427 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !489
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !489
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  store i64 %ino, i64* %ino.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8432, metadata !DIExpression()), !dbg !8433
  store i64 %dev, i64* %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8434, metadata !DIExpression()), !dbg !8435
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8436, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !8438, metadata !DIExpression()), !dbg !8439
  %call = call noalias i8* @xmalloc(i64 24), !dbg !8440
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8440
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !8441
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8442
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !8443
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8444
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8445, !ctir !490
  store i8* %call1, i8** %name2, align 8, !dbg !8446, !ctir !9
  %3 = load i64, i64* %ino.addr, align 8, !dbg !8447
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8448
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8449, !ctir !490
  store i64 %3, i64* %st_ino, align 8, !dbg !8450, !ctir !259
  %5 = load i64, i64* %dev.addr, align 8, !dbg !8451
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8452
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !8453, !ctir !490
  store i64 %5, i64* %st_dev, align 8, !dbg !8454, !ctir !262
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8455
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8456
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !8456
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !8457
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !8457
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8458
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8459
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !8461
  br i1 %cmp, label %if.then, label %if.end, !dbg !8462

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !8463
  unreachable, !dbg !8463

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8465
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8467
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !8468
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8469

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8470
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !8470
  call void @src_to_dest_free(i8* %15), !dbg !8472
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8473
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !8474, !ctir !490
  %17 = load i8*, i8** %name6, align 8, !dbg !8474, !ctir !9
  store i8* %17, i8** %retval, align 8, !dbg !8475
  br label %return, !dbg !8475

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !8476
  br label %return, !dbg !8476

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !8477
  ret i8* %18, !dbg !8477
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !8478 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !8479
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !8480
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8481
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !8483
  br i1 %cmp, label %if.then, label %if.end, !dbg !8484

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !8485
  unreachable, !dbg !8485

if.end:                                           ; preds = %entry
  ret void, !dbg !8486
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !8487 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !495
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8488, metadata !DIExpression()), !dbg !8489
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !8490, metadata !DIExpression()), !dbg !8491
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !8492, metadata !DIExpression()), !dbg !8493
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8494
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8494
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !8493
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !8495
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !8496, !ctir !496
  %3 = load i64, i64* %st_ino, align 8, !dbg !8496, !ctir !259
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !8497
  %rem = urem i64 %3, %4, !dbg !8498
  ret i64 %rem, !dbg !8499
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !8500 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !495
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !495
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8501, metadata !DIExpression()), !dbg !8502
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !8503, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8505, metadata !DIExpression()), !dbg !8506
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8507
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8507
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8506
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !8508, metadata !DIExpression()), !dbg !8509
  %2 = load i8*, i8** %y.addr, align 8, !dbg !8510
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !8510
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !8509
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8511
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8511, !ctir !496
  %5 = load i64, i64* %st_ino, align 8, !dbg !8511, !ctir !259
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8511
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !8511, !ctir !496
  %7 = load i64, i64* %st_ino1, align 8, !dbg !8511, !ctir !259
  %cmp = icmp eq i64 %5, %7, !dbg !8511
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8511

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8511
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !8511, !ctir !496
  %9 = load i64, i64* %st_dev, align 8, !dbg !8511, !ctir !262
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8511
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !8511, !ctir !496
  %11 = load i64, i64* %st_dev2, align 8, !dbg !8511, !ctir !262
  %cmp3 = icmp eq i64 %9, %11, !dbg !8511
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8512
  %13 = zext i1 %12 to i64, !dbg !8511
  %cond = select i1 %12, i32 1, i32 0, !dbg !8511
  %tobool = icmp ne i32 %cond, 0, !dbg !8511
  ret i1 %tobool, !dbg !8513
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !8514 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8515
  call void @hash_free(%struct.hash_table* %0), !dbg !8516
  ret void, !dbg !8517
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !8518 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8533, metadata !DIExpression()), !dbg !8534
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8535
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8536
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !8537, !ctir !8522
  store i32 %0, i32* %fd, align 8, !dbg !8538, !ctir !7
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8539
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !8540, !ctir !8522
  store i64 0, i64* %ei_count, align 8, !dbg !8541, !ctir !55
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8542
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8543, !ctir !8522
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !8544, !ctir !1230
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8545
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8546, !ctir !8522
  store i64 0, i64* %scan_start, align 8, !dbg !8547, !ctir !1229
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8548
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !8549, !ctir !8522
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !8550, !ctir !142
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8551
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !8552, !ctir !8522
  store i8 0, i8* %hit_final_extent, align 1, !dbg !8553, !ctir !142
  %call = call zeroext i1 @extent_need_sync(), !dbg !8554
  %7 = zext i1 %call to i64, !dbg !8554
  %cond = select i1 %call, i32 1, i32 0, !dbg !8554
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8555
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !8556, !ctir !8522
  store i32 %cond, i32* %fm_flags, align 8, !dbg !8557, !ctir !70
  ret void, !dbg !8558
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !8559 {
entry:
  ret i1 true, !dbg !8560
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !8561 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !70
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1230
  %fiemap_buf = alloca %union.anon.20, align 8, !ctir !8564
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1236
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1265
  %prev_idx = alloca i64, align 8, !ctir !55
  %i = alloca i32, align 4, !ctir !70
  %new_logical = alloca i64, align 8, !ctir !1241
  %length_adjust = alloca i64, align 8, !ctir !1241
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.declare(metadata i32* %si, metadata !8570, metadata !DIExpression()), !dbg !8571
  store i32 0, i32* %si, align 4, !dbg !8571
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !8572, metadata !DIExpression()), !dbg !8573
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8574
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8575, !ctir !8522
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8575, !ctir !1230
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !8573
  br label %while.body, !dbg !8576

while.body:                                       ; preds = %entry, %if.end165
  call void @llvm.dbg.declare(metadata %union.anon.20* %fiemap_buf, metadata !8577, metadata !DIExpression()), !dbg !8579
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !8580, metadata !DIExpression()), !dbg !8581
  %f = bitcast %union.anon.20* %fiemap_buf to %struct.fiemap*, !dbg !8582
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !8581
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !8583, metadata !DIExpression()), !dbg !8584
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8585
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !8586, !ctir !1237
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !8585, !ctir !1252
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8584
  %3 = bitcast %union.anon.20* %fiemap_buf to i8*, !dbg !8587
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !8587
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8588
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8589, !ctir !8522
  %5 = load i64, i64* %scan_start, align 8, !dbg !8589, !ctir !1229
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8590
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !8591, !ctir !1237
  store i64 %5, i64* %fm_start, align 8, !dbg !8592, !ctir !1241
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8593
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !8594, !ctir !8522
  %8 = load i32, i32* %fm_flags, align 8, !dbg !8594, !ctir !70
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8595
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !8596, !ctir !1237
  store i32 %8, i32* %fm_flags2, align 8, !dbg !8597, !ctir !1246
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8598
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !8599, !ctir !1237
  store i32 72, i32* %fm_extent_count, align 8, !dbg !8600, !ctir !1246
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8601
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !8602, !ctir !8522
  %12 = load i64, i64* %scan_start3, align 8, !dbg !8602, !ctir !1229
  %sub = sub i64 -1, %12, !dbg !8603
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8604
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !8605, !ctir !1237
  store i64 %sub, i64* %fm_length, align 8, !dbg !8606, !ctir !1241
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8607
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !8609, !ctir !8522
  %15 = load i32, i32* %fd, align 8, !dbg !8609, !ctir !7
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8610
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #10, !dbg !8611
  %cmp = icmp slt i32 %call, 0, !dbg !8612
  br i1 %cmp, label %if.then, label %if.end7, !dbg !8613

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8614
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !8617, !ctir !8522
  %18 = load i64, i64* %scan_start4, align 8, !dbg !8617, !ctir !1229
  %cmp5 = icmp eq i64 %18, 0, !dbg !8618
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8619

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8620
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !8621, !ctir !8522
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !8622, !ctir !142
  br label %if.end, !dbg !8620

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !8623
  br label %return, !dbg !8623

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8624
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !8626, !ctir !1237
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !8626, !ctir !1246
  %cmp8 = icmp eq i32 %21, 0, !dbg !8627
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8628

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8629
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !8631, !ctir !8522
  store i8 1, i8* %hit_final_extent, align 1, !dbg !8632, !ctir !142
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8633
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !8634, !ctir !8522
  %24 = load i64, i64* %scan_start10, align 8, !dbg !8634, !ctir !1229
  %cmp11 = icmp ne i64 %24, 0, !dbg !8635
  store i1 %cmp11, i1* %retval, align 1, !dbg !8636
  br label %return, !dbg !8636

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8637
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !8637, !ctir !8522
  %26 = load i64, i64* %ei_count, align 8, !dbg !8637, !ctir !55
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8637
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !8637, !ctir !1237
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !8637, !ctir !1246
  %conv = zext i32 %28 to i64, !dbg !8637
  %sub14 = sub i64 -1, %conv, !dbg !8637
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !8637
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8640

if.then17:                                        ; preds = %if.end12
  br label %if.end18, !dbg !8640

if.else:                                          ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8637
  unreachable, !dbg !8637

if.end18:                                         ; preds = %if.then17
  %29 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8641
  %fm_mapped_extents19 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %29, i32 0, i32 3, !dbg !8642, !ctir !1237
  %30 = load i32, i32* %fm_mapped_extents19, align 4, !dbg !8642, !ctir !1246
  %conv20 = zext i32 %30 to i64, !dbg !8641
  %31 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8643
  %ei_count21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %31, i32 0, i32 3, !dbg !8644, !ctir !8522
  %32 = load i64, i64* %ei_count21, align 8, !dbg !8645, !ctir !55
  %add = add i64 %32, %conv20, !dbg !8645
  store i64 %add, i64* %ei_count21, align 8, !dbg !8645, !ctir !55
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !8646, metadata !DIExpression()), !dbg !8648
  %33 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8649
  %34 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8650
  %ext_info22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %34, i32 0, i32 6, !dbg !8651, !ctir !8522
  %35 = load %struct.extent_info*, %struct.extent_info** %ext_info22, align 8, !dbg !8651, !ctir !1230
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %33 to i64, !dbg !8652
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %35 to i64, !dbg !8652
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8652
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !8652
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !8648
  %36 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8653
  %ext_info23 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %36, i32 0, i32 6, !dbg !8654, !ctir !8522
  %37 = load %struct.extent_info*, %struct.extent_info** %ext_info23, align 8, !dbg !8654, !ctir !1230
  %38 = bitcast %struct.extent_info* %37 to i8*, !dbg !8653
  %39 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8655
  %ei_count24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %39, i32 0, i32 3, !dbg !8656, !ctir !8522
  %40 = load i64, i64* %ei_count24, align 8, !dbg !8656, !ctir !55
  %call25 = call i8* @xnrealloc(i8* %38, i64 %40, i64 24), !dbg !8657
  %41 = bitcast i8* %call25 to %struct.extent_info*, !dbg !8657
  %42 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8658
  %ext_info26 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %42, i32 0, i32 6, !dbg !8659, !ctir !8522
  store %struct.extent_info* %41, %struct.extent_info** %ext_info26, align 8, !dbg !8660, !ctir !1230
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8661
  %ext_info27 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !8662, !ctir !8522
  %44 = load %struct.extent_info*, %struct.extent_info** %ext_info27, align 8, !dbg !8662, !ctir !1230
  %45 = load i64, i64* %prev_idx, align 8, !dbg !8663
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %44, i64 %45, !dbg !8664, !ctir !1231
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !8665
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8666, metadata !DIExpression()), !dbg !8667
  store i32 0, i32* %i, align 4, !dbg !8667
  store i32 0, i32* %i, align 4, !dbg !8668
  br label %for.cond, !dbg !8670

for.cond:                                         ; preds = %for.inc, %if.end18
  %46 = load i32, i32* %i, align 4, !dbg !8671
  %47 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8673
  %fm_mapped_extents28 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %47, i32 0, i32 3, !dbg !8674, !ctir !1237
  %48 = load i32, i32* %fm_mapped_extents28, align 4, !dbg !8674, !ctir !1246
  %cmp29 = icmp ult i32 %46, %48, !dbg !8675
  br i1 %cmp29, label %for.body, label %for.end, !dbg !8676

for.body:                                         ; preds = %for.cond
  %49 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8677
  %50 = load i32, i32* %i, align 4, !dbg !8677
  %idxprom = zext i32 %50 to i64, !dbg !8677
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %49, i64 %idxprom, !dbg !8677, !ctir !1265
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 0, !dbg !8677, !ctir !1253
  %51 = load i64, i64* %fe_logical, align 8, !dbg !8677, !ctir !1241
  %52 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8677
  %53 = load i32, i32* %i, align 4, !dbg !8677
  %idxprom32 = zext i32 %53 to i64, !dbg !8677
  %arrayidx33 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %52, i64 %idxprom32, !dbg !8677, !ctir !1265
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx33, i32 0, i32 2, !dbg !8677, !ctir !1253
  %54 = load i64, i64* %fe_length, align 8, !dbg !8677, !ctir !1241
  %sub34 = sub i64 9223372036854775807, %54, !dbg !8677
  %cmp35 = icmp ule i64 %51, %sub34, !dbg !8677
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !8681

if.then37:                                        ; preds = %for.body
  br label %if.end39, !dbg !8681

if.else38:                                        ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.171, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8677
  unreachable, !dbg !8677

if.end39:                                         ; preds = %if.then37
  %55 = load i32, i32* %si, align 4, !dbg !8682
  %tobool = icmp ne i32 %55, 0, !dbg !8682
  br i1 %tobool, label %land.lhs.true, label %if.else61, !dbg !8684

land.lhs.true:                                    ; preds = %if.end39
  %56 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8685
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %56, i32 0, i32 2, !dbg !8686, !ctir !1231
  %57 = load i32, i32* %ext_flags, align 8, !dbg !8686, !ctir !70
  %58 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8687
  %59 = load i32, i32* %i, align 4, !dbg !8688
  %idxprom40 = zext i32 %59 to i64, !dbg !8687
  %arrayidx41 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %58, i64 %idxprom40, !dbg !8687, !ctir !1265
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx41, i32 0, i32 4, !dbg !8689, !ctir !1253
  %60 = load i32, i32* %fe_flags, align 8, !dbg !8689, !ctir !1246
  %and = and i32 %60, -2, !dbg !8690
  %cmp42 = icmp eq i32 %57, %and, !dbg !8691
  br i1 %cmp42, label %land.lhs.true44, label %if.else61, !dbg !8692

land.lhs.true44:                                  ; preds = %land.lhs.true
  %61 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8693
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %61, i32 0, i32 0, !dbg !8694, !ctir !1231
  %62 = load i64, i64* %ext_logical, align 8, !dbg !8694, !ctir !1229
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8695
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 1, !dbg !8696, !ctir !1231
  %64 = load i64, i64* %ext_length, align 8, !dbg !8696, !ctir !1229
  %add45 = add nsw i64 %62, %64, !dbg !8697
  %65 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8698
  %66 = load i32, i32* %i, align 4, !dbg !8699
  %idxprom46 = zext i32 %66 to i64, !dbg !8698
  %arrayidx47 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %65, i64 %idxprom46, !dbg !8698, !ctir !1265
  %fe_logical48 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx47, i32 0, i32 0, !dbg !8700, !ctir !1253
  %67 = load i64, i64* %fe_logical48, align 8, !dbg !8700, !ctir !1241
  %cmp49 = icmp eq i64 %add45, %67, !dbg !8701
  br i1 %cmp49, label %if.then51, label %if.else61, !dbg !8702

if.then51:                                        ; preds = %land.lhs.true44
  %68 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8703
  %69 = load i32, i32* %i, align 4, !dbg !8705
  %idxprom52 = zext i32 %69 to i64, !dbg !8703
  %arrayidx53 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %68, i64 %idxprom52, !dbg !8703, !ctir !1265
  %fe_length54 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx53, i32 0, i32 2, !dbg !8706, !ctir !1253
  %70 = load i64, i64* %fe_length54, align 8, !dbg !8706, !ctir !1241
  %71 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8707
  %ext_length55 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %71, i32 0, i32 1, !dbg !8708, !ctir !1231
  %72 = load i64, i64* %ext_length55, align 8, !dbg !8709, !ctir !1229
  %add56 = add i64 %72, %70, !dbg !8709
  store i64 %add56, i64* %ext_length55, align 8, !dbg !8709, !ctir !1229
  %73 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8710
  %74 = load i32, i32* %i, align 4, !dbg !8711
  %idxprom57 = zext i32 %74 to i64, !dbg !8710
  %arrayidx58 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %73, i64 %idxprom57, !dbg !8710, !ctir !1265
  %fe_flags59 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx58, i32 0, i32 4, !dbg !8712, !ctir !1253
  %75 = load i32, i32* %fe_flags59, align 8, !dbg !8712, !ctir !1246
  %76 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8713
  %ext_flags60 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %76, i32 0, i32 2, !dbg !8714, !ctir !1231
  store i32 %75, i32* %ext_flags60, align 8, !dbg !8715, !ctir !70
  br label %if.end131, !dbg !8716

if.else61:                                        ; preds = %land.lhs.true44, %land.lhs.true, %if.end39
  %77 = load i32, i32* %si, align 4, !dbg !8717
  %cmp62 = icmp eq i32 %77, 0, !dbg !8719
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false, !dbg !8720

land.lhs.true64:                                  ; preds = %if.else61
  %78 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8721
  %scan_start65 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %78, i32 0, i32 1, !dbg !8722, !ctir !8522
  %79 = load i64, i64* %scan_start65, align 8, !dbg !8722, !ctir !1229
  %80 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8723
  %81 = load i32, i32* %i, align 4, !dbg !8724
  %idxprom66 = zext i32 %81 to i64, !dbg !8723
  %arrayidx67 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %80, i64 %idxprom66, !dbg !8723, !ctir !1265
  %fe_logical68 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx67, i32 0, i32 0, !dbg !8725, !ctir !1253
  %82 = load i64, i64* %fe_logical68, align 8, !dbg !8725, !ctir !1241
  %cmp69 = icmp ugt i64 %79, %82, !dbg !8726
  br i1 %cmp69, label %if.then81, label %lor.lhs.false, !dbg !8727

lor.lhs.false:                                    ; preds = %land.lhs.true64, %if.else61
  %83 = load i32, i32* %si, align 4, !dbg !8728
  %tobool71 = icmp ne i32 %83, 0, !dbg !8728
  br i1 %tobool71, label %land.lhs.true72, label %if.else115, !dbg !8729

land.lhs.true72:                                  ; preds = %lor.lhs.false
  %84 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8730
  %ext_logical73 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %84, i32 0, i32 0, !dbg !8731, !ctir !1231
  %85 = load i64, i64* %ext_logical73, align 8, !dbg !8731, !ctir !1229
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8732
  %ext_length74 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 1, !dbg !8733, !ctir !1231
  %87 = load i64, i64* %ext_length74, align 8, !dbg !8733, !ctir !1229
  %add75 = add nsw i64 %85, %87, !dbg !8734
  %88 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8735
  %89 = load i32, i32* %i, align 4, !dbg !8736
  %idxprom76 = zext i32 %89 to i64, !dbg !8735
  %arrayidx77 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %88, i64 %idxprom76, !dbg !8735, !ctir !1265
  %fe_logical78 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx77, i32 0, i32 0, !dbg !8737, !ctir !1253
  %90 = load i64, i64* %fe_logical78, align 8, !dbg !8737, !ctir !1241
  %cmp79 = icmp ugt i64 %add75, %90, !dbg !8738
  br i1 %cmp79, label %if.then81, label %if.else115, !dbg !8739

if.then81:                                        ; preds = %land.lhs.true72, %land.lhs.true64
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !8740, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !8743, metadata !DIExpression()), !dbg !8744
  %91 = load i32, i32* %si, align 4, !dbg !8745
  %cmp82 = icmp eq i32 %91, 0, !dbg !8747
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8748

if.then84:                                        ; preds = %if.then81
  %92 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8749
  %scan_start85 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %92, i32 0, i32 1, !dbg !8750, !ctir !8522
  %93 = load i64, i64* %scan_start85, align 8, !dbg !8750, !ctir !1229
  store i64 %93, i64* %new_logical, align 8, !dbg !8751
  br label %if.end90, !dbg !8752

if.else86:                                        ; preds = %if.then81
  %94 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8753
  %ext_logical87 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %94, i32 0, i32 0, !dbg !8755, !ctir !1231
  %95 = load i64, i64* %ext_logical87, align 8, !dbg !8755, !ctir !1229
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8756
  %ext_length88 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 1, !dbg !8757, !ctir !1231
  %97 = load i64, i64* %ext_length88, align 8, !dbg !8757, !ctir !1229
  %add89 = add nsw i64 %95, %97, !dbg !8758
  store i64 %add89, i64* %new_logical, align 8, !dbg !8759
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then84
  %98 = load i64, i64* %new_logical, align 8, !dbg !8760
  %99 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8761
  %100 = load i32, i32* %i, align 4, !dbg !8762
  %idxprom91 = zext i32 %100 to i64, !dbg !8761
  %arrayidx92 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %99, i64 %idxprom91, !dbg !8761, !ctir !1265
  %fe_logical93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx92, i32 0, i32 0, !dbg !8763, !ctir !1253
  %101 = load i64, i64* %fe_logical93, align 8, !dbg !8763, !ctir !1241
  %sub94 = sub i64 %98, %101, !dbg !8764
  store i64 %sub94, i64* %length_adjust, align 8, !dbg !8765
  %102 = load i64, i64* %length_adjust, align 8, !dbg !8766
  %103 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8768
  %104 = load i32, i32* %i, align 4, !dbg !8769
  %idxprom95 = zext i32 %104 to i64, !dbg !8768
  %arrayidx96 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %103, i64 %idxprom95, !dbg !8768, !ctir !1265
  %fe_length97 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx96, i32 0, i32 2, !dbg !8770, !ctir !1253
  %105 = load i64, i64* %fe_length97, align 8, !dbg !8770, !ctir !1241
  %cmp98 = icmp ult i64 %102, %105, !dbg !8771
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !8772

if.then100:                                       ; preds = %if.end90
  %106 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8773
  %scan_start101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %106, i32 0, i32 1, !dbg !8776, !ctir !8522
  %107 = load i64, i64* %scan_start101, align 8, !dbg !8776, !ctir !1229
  %cmp102 = icmp eq i64 %107, 0, !dbg !8777
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !8778

if.then104:                                       ; preds = %if.then100
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8779
  %initial_scan_failed105 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 4, !dbg !8780, !ctir !8522
  store i8 1, i8* %initial_scan_failed105, align 8, !dbg !8781, !ctir !142
  br label %if.end106, !dbg !8779

if.end106:                                        ; preds = %if.then104, %if.then100
  store i1 false, i1* %retval, align 1, !dbg !8782
  br label %return, !dbg !8782

if.end107:                                        ; preds = %if.end90
  %109 = load i64, i64* %new_logical, align 8, !dbg !8783
  %110 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8784
  %111 = load i32, i32* %i, align 4, !dbg !8785
  %idxprom108 = zext i32 %111 to i64, !dbg !8784
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %110, i64 %idxprom108, !dbg !8784, !ctir !1265
  %fe_logical110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 0, !dbg !8786, !ctir !1253
  store i64 %109, i64* %fe_logical110, align 8, !dbg !8787, !ctir !1241
  %112 = load i64, i64* %length_adjust, align 8, !dbg !8788
  %113 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8789
  %114 = load i32, i32* %i, align 4, !dbg !8790
  %idxprom111 = zext i32 %114 to i64, !dbg !8789
  %arrayidx112 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %113, i64 %idxprom111, !dbg !8789, !ctir !1265
  %fe_length113 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx112, i32 0, i32 2, !dbg !8791, !ctir !1253
  %115 = load i64, i64* %fe_length113, align 8, !dbg !8792, !ctir !1241
  %sub114 = sub i64 %115, %112, !dbg !8792
  store i64 %sub114, i64* %fe_length113, align 8, !dbg !8792, !ctir !1241
  %116 = load i32, i32* %i, align 4, !dbg !8793
  %dec = add i32 %116, -1, !dbg !8793
  store i32 %dec, i32* %i, align 4, !dbg !8793
  br label %for.inc, !dbg !8794

if.else115:                                       ; preds = %land.lhs.true72, %lor.lhs.false
  %117 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8795
  %ext_info116 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %117, i32 0, i32 6, !dbg !8797, !ctir !8522
  %118 = load %struct.extent_info*, %struct.extent_info** %ext_info116, align 8, !dbg !8797, !ctir !1230
  %119 = load i32, i32* %si, align 4, !dbg !8798
  %idx.ext = zext i32 %119 to i64, !dbg !8799
  %add.ptr117 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %118, i64 %idx.ext, !dbg !8799, !ctir !1231
  store %struct.extent_info* %add.ptr117, %struct.extent_info** %last_ei, align 8, !dbg !8800
  %120 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8801
  %121 = load i32, i32* %i, align 4, !dbg !8802
  %idxprom118 = zext i32 %121 to i64, !dbg !8801
  %arrayidx119 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %120, i64 %idxprom118, !dbg !8801, !ctir !1265
  %fe_logical120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx119, i32 0, i32 0, !dbg !8803, !ctir !1253
  %122 = load i64, i64* %fe_logical120, align 8, !dbg !8803, !ctir !1241
  %123 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8804
  %ext_logical121 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %123, i32 0, i32 0, !dbg !8805, !ctir !1231
  store i64 %122, i64* %ext_logical121, align 8, !dbg !8806, !ctir !1229
  %124 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8807
  %125 = load i32, i32* %i, align 4, !dbg !8808
  %idxprom122 = zext i32 %125 to i64, !dbg !8807
  %arrayidx123 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %124, i64 %idxprom122, !dbg !8807, !ctir !1265
  %fe_length124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx123, i32 0, i32 2, !dbg !8809, !ctir !1253
  %126 = load i64, i64* %fe_length124, align 8, !dbg !8809, !ctir !1241
  %127 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8810
  %ext_length125 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %127, i32 0, i32 1, !dbg !8811, !ctir !1231
  store i64 %126, i64* %ext_length125, align 8, !dbg !8812, !ctir !1229
  %128 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8813
  %129 = load i32, i32* %i, align 4, !dbg !8814
  %idxprom126 = zext i32 %129 to i64, !dbg !8813
  %arrayidx127 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %128, i64 %idxprom126, !dbg !8813, !ctir !1265
  %fe_flags128 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx127, i32 0, i32 4, !dbg !8815, !ctir !1253
  %130 = load i32, i32* %fe_flags128, align 8, !dbg !8815, !ctir !1246
  %131 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8816
  %ext_flags129 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %131, i32 0, i32 2, !dbg !8817, !ctir !1231
  store i32 %130, i32* %ext_flags129, align 8, !dbg !8818, !ctir !70
  %132 = load i32, i32* %si, align 4, !dbg !8819
  %inc = add i32 %132, 1, !dbg !8819
  store i32 %inc, i32* %si, align 4, !dbg !8819
  br label %if.end130

if.end130:                                        ; preds = %if.else115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then51
  br label %for.inc, !dbg !8820

for.inc:                                          ; preds = %if.end131, %if.end107
  %133 = load i32, i32* %i, align 4, !dbg !8821
  %inc132 = add i32 %133, 1, !dbg !8821
  store i32 %inc132, i32* %i, align 4, !dbg !8821
  br label %for.cond, !dbg !8822, !llvm.loop !8823

for.end:                                          ; preds = %for.cond
  %134 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8825
  %ext_flags133 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %134, i32 0, i32 2, !dbg !8827, !ctir !1231
  %135 = load i32, i32* %ext_flags133, align 8, !dbg !8827, !ctir !70
  %and134 = and i32 %135, 1, !dbg !8828
  %tobool135 = icmp ne i32 %and134, 0, !dbg !8828
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !8829

if.then136:                                       ; preds = %for.end
  %136 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8830
  %hit_final_extent137 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %136, i32 0, i32 5, !dbg !8831, !ctir !8522
  store i8 1, i8* %hit_final_extent137, align 1, !dbg !8832, !ctir !142
  br label %if.end138, !dbg !8830

if.end138:                                        ; preds = %if.then136, %for.end
  %137 = load i32, i32* %si, align 4, !dbg !8833
  %cmp139 = icmp ugt i32 %137, 72, !dbg !8835
  br i1 %cmp139, label %land.lhs.true141, label %if.end150, !dbg !8836

land.lhs.true141:                                 ; preds = %if.end138
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8837
  %hit_final_extent142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !8838, !ctir !8522
  %139 = load i8, i8* %hit_final_extent142, align 1, !dbg !8838
  %tobool143 = trunc i8 %139 to i1, !dbg !8838, !ctir !142
  br i1 %tobool143, label %if.end150, label %if.then144, !dbg !8839

if.then144:                                       ; preds = %land.lhs.true141
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8840
  %ext_info145 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 6, !dbg !8841, !ctir !8522
  %141 = load %struct.extent_info*, %struct.extent_info** %ext_info145, align 8, !dbg !8841, !ctir !1230
  %142 = load i32, i32* %si, align 4, !dbg !8842
  %dec146 = add i32 %142, -1, !dbg !8842
  store i32 %dec146, i32* %si, align 4, !dbg !8842
  %idx.ext147 = zext i32 %dec146 to i64, !dbg !8843
  %add.ptr148 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %141, i64 %idx.ext147, !dbg !8843, !ctir !1231
  %add.ptr149 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr148, i64 -1, !dbg !8844, !ctir !1231
  store %struct.extent_info* %add.ptr149, %struct.extent_info** %last_ei, align 8, !dbg !8845
  br label %if.end150, !dbg !8846

if.end150:                                        ; preds = %if.then144, %land.lhs.true141, %if.end138
  %143 = load i32, i32* %si, align 4, !dbg !8847
  %conv151 = zext i32 %143 to i64, !dbg !8847
  %144 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8848
  %ei_count152 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %144, i32 0, i32 3, !dbg !8849, !ctir !8522
  store i64 %conv151, i64* %ei_count152, align 8, !dbg !8850, !ctir !55
  %145 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8851
  %hit_final_extent153 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %145, i32 0, i32 5, !dbg !8853, !ctir !8522
  %146 = load i8, i8* %hit_final_extent153, align 1, !dbg !8853
  %tobool154 = trunc i8 %146 to i1, !dbg !8853, !ctir !142
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !8854

if.then155:                                       ; preds = %if.end150
  br label %while.end, !dbg !8855

if.else156:                                       ; preds = %if.end150
  %147 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8856
  %ext_logical157 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %147, i32 0, i32 0, !dbg !8857, !ctir !1231
  %148 = load i64, i64* %ext_logical157, align 8, !dbg !8857, !ctir !1229
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8858
  %ext_length158 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 1, !dbg !8859, !ctir !1231
  %150 = load i64, i64* %ext_length158, align 8, !dbg !8859, !ctir !1229
  %add159 = add nsw i64 %148, %150, !dbg !8860
  %151 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8861
  %scan_start160 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %151, i32 0, i32 1, !dbg !8862, !ctir !8522
  store i64 %add159, i64* %scan_start160, align 8, !dbg !8863, !ctir !1229
  br label %if.end161

if.end161:                                        ; preds = %if.else156
  %152 = load i32, i32* %si, align 4, !dbg !8864
  %cmp162 = icmp uge i32 %152, 72, !dbg !8866
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !8867

if.then164:                                       ; preds = %if.end161
  br label %while.end, !dbg !8868

if.end165:                                        ; preds = %if.end161
  br label %while.body, !dbg !8576, !llvm.loop !8869

while.end:                                        ; preds = %if.then164, %if.then155
  store i1 true, i1* %retval, align 1, !dbg !8871
  br label %return, !dbg !8871

return:                                           ; preds = %while.end, %if.end106, %if.then9, %if.end
  %153 = load i1, i1* %retval, align 1, !dbg !8872
  ret i1 %153, !dbg !8872
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !8873 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !503
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.link_arg, align 8, !ctir !509
  %err = alloca i32, align 4, !ctir !7
  store i32 %srcdir, i32* %srcdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8882, metadata !DIExpression()), !dbg !8883
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8884, metadata !DIExpression()), !dbg !8885
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !8886, metadata !DIExpression()), !dbg !8887
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8890
  %cmp = icmp slt i32 %0, 0, !dbg !8892
  br i1 %cmp, label %if.then, label %if.end, !dbg !8893

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !8894
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !8895
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !8896
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !8897
  %5 = load i32, i32* %flags.addr, align 4, !dbg !8898
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #10, !dbg !8899
  %cmp1 = icmp eq i32 %call, 0, !dbg !8900
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !8899

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !8899

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !8901
  %6 = load i32, i32* %call2, align 4, !dbg !8901, !ctir !7
  br label %cond.end, !dbg !8899

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !8899
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !8902
  br label %if.end, !dbg !8903

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !8904
  %tobool = trunc i8 %7 to i1, !dbg !8904
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !8906

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8907
  %cmp3 = icmp ne i32 %8, 17, !dbg !8908
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8909

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !8910
  store i32 %9, i32* %retval, align 4, !dbg !8911
  br label %return, !dbg !8911

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !8912, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8914, metadata !DIExpression()), !dbg !8915
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !8916
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8917, !ctir !503
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !8918
  store i8* %call6, i8** %dsttmp, align 8, !dbg !8915
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !8919
  %tobool7 = icmp ne i8* %11, null, !dbg !8919
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !8921

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !8922
  %12 = load i32, i32* %call9, align 4, !dbg !8922, !ctir !7
  store i32 %12, i32* %retval, align 4, !dbg !8923
  br label %return, !dbg !8923

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !8924, metadata !DIExpression()), !dbg !8925
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !8926
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !8927
  store i32 %13, i32* %srcdir11, align 8, !dbg !8926
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !8926
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !8928
  store i8* %14, i8** %srcname12, align 8, !dbg !8926
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !8926
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !8929
  store i32 %15, i32* %dstdir13, align 8, !dbg !8926
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !8926
  %16 = load i32, i32* %flags.addr, align 4, !dbg !8930
  store i32 %16, i32* %flags14, align 4, !dbg !8926
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8931, metadata !DIExpression()), !dbg !8932
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !8933
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !8935
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !8936
  %cmp16 = icmp ne i32 %call15, 0, !dbg !8937
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !8938

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #15, !dbg !8939
  %19 = load i32, i32* %call18, align 4, !dbg !8939, !ctir !7
  store i32 %19, i32* %err, align 4, !dbg !8940
  br label %if.end27, !dbg !8941

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !8942
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !8944
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !8945
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !8946
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #10, !dbg !8947
  %cmp20 = icmp eq i32 %call19, 0, !dbg !8948
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !8947

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !8947

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !8949
  %24 = load i32, i32* %call23, align 4, !dbg !8949, !ctir !7
  br label %cond.end24, !dbg !8947

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !8947
  store i32 %cond25, i32* %err, align 4, !dbg !8950
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !8951
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !8952
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #10, !dbg !8953
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !8954
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !8956, !ctir !503
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !8957
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !8958

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !8959
  call void @free(i8* %28) #10, !dbg !8960
  br label %if.end31, !dbg !8960

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !8961
  store i32 %29, i32* %retval, align 4, !dbg !8962
  br label %return, !dbg !8962

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !8963
  ret i32 %30, !dbg !8963
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !8964 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !506
  %dsttmpsize = alloca i64, align 8, !ctir !55
  %dsttmp = alloca i8*, align 8, !ctir !9
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !8971, metadata !DIExpression()), !dbg !8972
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !8973
  %call = call i8* @last_component(i8* %0) #14, !dbg !8974
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !8975
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !8976
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !8976
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8976
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !8972
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !8977, metadata !DIExpression()), !dbg !8978
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !8979
  %add = add i64 %2, 9, !dbg !8980
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !8978
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !8981, metadata !DIExpression()), !dbg !8982
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !8983
  %cmp = icmp ule i64 %3, 256, !dbg !8985
  br i1 %cmp, label %if.then, label %if.else, !dbg !8986

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8987
  store i8* %4, i8** %dsttmp, align 8, !dbg !8988
  br label %if.end3, !dbg !8989

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !8990
  %call1 = call noalias i8* @malloc(i64 %5) #10, !dbg !8992
  store i8* %call1, i8** %dsttmp, align 8, !dbg !8993
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !8994
  %tobool = icmp ne i8* %6, null, !dbg !8994
  br i1 %tobool, label %if.end, label %if.then2, !dbg !8996

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !8997
  store i8* %7, i8** %retval, align 8, !dbg !8998
  br label %return, !dbg !8998

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !8999
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !9000
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !9001
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #10, !dbg !9002
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #10, !dbg !9003
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9004
  store i8* %11, i8** %retval, align 8, !dbg !9005
  br label %return, !dbg !9005

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !9006
  ret i8* %12, !dbg !9006
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !9007 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !508
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9008, metadata !DIExpression()), !dbg !9009
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9010, metadata !DIExpression()), !dbg !9011
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !9012, metadata !DIExpression()), !dbg !9013
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9014
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !9014
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !9013
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9015
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !9016, !ctir !509
  %3 = load i32, i32* %srcdir, align 8, !dbg !9016, !ctir !7
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9017
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !9018, !ctir !509
  %5 = load i8*, i8** %srcname, align 8, !dbg !9018, !ctir !116
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9019
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !9020, !ctir !509
  %7 = load i32, i32* %dstdir, align 8, !dbg !9020, !ctir !7
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !9021
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9022
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !9023, !ctir !509
  %10 = load i32, i32* %flags, align 4, !dbg !9023, !ctir !7
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #10, !dbg !9024
  ret i32 %call, !dbg !9025
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !9026 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !503
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.symlink_arg, align 8, !ctir !516
  %err = alloca i32, align 4, !ctir !7
  store i8* %srcname, i8** %srcname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  store i32 %dstdir, i32* %dstdir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9031, metadata !DIExpression()), !dbg !9032
  store i8* %dstname, i8** %dstname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9033, metadata !DIExpression()), !dbg !9034
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9035, metadata !DIExpression()), !dbg !9036
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9039
  %cmp = icmp slt i32 %0, 0, !dbg !9041
  br i1 %cmp, label %if.then, label %if.end, !dbg !9042

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !9043
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !9044
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !9045
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #10, !dbg !9046
  %cmp1 = icmp eq i32 %call, 0, !dbg !9047
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9046

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9046

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !9048
  %4 = load i32, i32* %call2, align 4, !dbg !9048, !ctir !7
  br label %cond.end, !dbg !9046

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !9046
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !9049
  br label %if.end, !dbg !9050

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !9051
  %tobool = trunc i8 %5 to i1, !dbg !9051
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9053

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9054
  %cmp3 = icmp ne i32 %6, 17, !dbg !9055
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9056

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9057
  store i32 %7, i32* %retval, align 4, !dbg !9058
  br label %return, !dbg !9058

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9059, metadata !DIExpression()), !dbg !9060
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9061, metadata !DIExpression()), !dbg !9062
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !9063
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9064, !ctir !503
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !9065
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9062
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !9066
  %tobool7 = icmp ne i8* %9, null, !dbg !9066
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9068

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !9069
  %10 = load i32, i32* %call9, align 4, !dbg !9069, !ctir !7
  store i32 %10, i32* %retval, align 4, !dbg !9070
  br label %return, !dbg !9070

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !9071, metadata !DIExpression()), !dbg !9072
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !9073
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !9074
  store i8* %11, i8** %srcname11, align 8, !dbg !9073
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !9073
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !9075
  store i32 %12, i32* %dstdir12, align 8, !dbg !9073
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9076, metadata !DIExpression()), !dbg !9077
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !9078
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !9080
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !9081
  %cmp14 = icmp ne i32 %call13, 0, !dbg !9082
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9083

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #15, !dbg !9084
  %15 = load i32, i32* %call16, align 4, !dbg !9084, !ctir !7
  store i32 %15, i32* %err, align 4, !dbg !9085
  br label %if.end24, !dbg !9086

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !9087
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9089
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !9090
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !9091
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #10, !dbg !9092
  %cmp18 = icmp ne i32 %call17, 0, !dbg !9093
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !9094

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #15, !dbg !9095
  %20 = load i32, i32* %call20, align 4, !dbg !9095, !ctir !7
  store i32 %20, i32* %err, align 4, !dbg !9097
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !9098
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !9099
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #10, !dbg !9100
  br label %if.end23, !dbg !9101

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !9102
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !9104
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9106, !ctir !503
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !9107
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9108

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !9109
  call void @free(i8* %24) #10, !dbg !9110
  br label %if.end28, !dbg !9110

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !9111
  store i32 %25, i32* %retval, align 4, !dbg !9112
  br label %return, !dbg !9112

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !9113
  ret i32 %26, !dbg !9113
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !9114 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !515
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9115, metadata !DIExpression()), !dbg !9116
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9117, metadata !DIExpression()), !dbg !9118
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !9119, metadata !DIExpression()), !dbg !9120
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9121
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !9121
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !9120
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9122
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !9123, !ctir !516
  %3 = load i8*, i8** %srcname, align 8, !dbg !9123, !ctir !116
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9124
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9125, !ctir !516
  %5 = load i32, i32* %dstdir, align 8, !dbg !9125, !ctir !7
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9126
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #10, !dbg !9127
  ret i32 %call, !dbg !9128
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9129 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9133, metadata !DIExpression()), !dbg !9134
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9135, metadata !DIExpression()), !dbg !9136
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9139, metadata !DIExpression()), !dbg !9140
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9141, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9143, metadata !DIExpression()), !dbg !9144
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9145
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9146
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9147
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9148
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9149
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9150
  store i32 %call, i32* %ret, align 4, !dbg !9144
  %5 = load i32, i32* %ret, align 4, !dbg !9151
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9152

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9153
  %6 = load i32, i32* %call1, align 4, !dbg !9153, !ctir !7
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9155
  %call2 = call i8* @quote(i8* %7), !dbg !9156
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i64 0, i64 0), i8* %call2), !dbg !9157
  br label %sw.epilog, !dbg !9158

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !9159
  %8 = load i32, i32* %call4, align 4, !dbg !9159, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.182, i64 0, i64 0)) #10, !dbg !9160
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9161
  %call6 = call i8* @quote(i8* %9), !dbg !9162
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9163
  br label %sw.epilog, !dbg !9164

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9165

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9166
  ret i32 %10, !dbg !9167
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9168 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9172, metadata !DIExpression()), !dbg !9173
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9178, metadata !DIExpression()), !dbg !9179
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9180
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9181
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9182
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9183
  store i32 %call, i32* %ret, align 4, !dbg !9179
  %3 = load i32, i32* %ret, align 4, !dbg !9184
  %cmp = icmp ne i32 %3, 0, !dbg !9186
  br i1 %cmp, label %if.then, label %if.end, !dbg !9187

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9188
  %4 = load i32, i32* %call1, align 4, !dbg !9188, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.185, i64 0, i64 0)) #10, !dbg !9189
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9190
  %call3 = call i8* @quote(i8* %5), !dbg !9191
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9192
  br label %if.end, !dbg !9192

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9193
  ret i32 %6, !dbg !9194
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9195 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !55
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !55
  %initial_limit = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !540
  %link_length = alloca i64, align 8, !ctir !55
  %buffer = alloca i8*, align 8, !ctir !9
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9201, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9203, metadata !DIExpression()), !dbg !9204
  store i64 1024, i64* %symlink_max, align 8, !dbg !9204
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9205, metadata !DIExpression()), !dbg !9206
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9206
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9207, metadata !DIExpression()), !dbg !9208
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9209
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9210
  %cmp = icmp ult i64 %0, %1, !dbg !9211
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9209

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9212
  %add = add i64 %2, 1, !dbg !9213
  br label %cond.end, !dbg !9209

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9214
  br label %cond.end, !dbg !9209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9209
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9208
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9215, metadata !DIExpression()), !dbg !9216
  %4 = load i64, i64* %size.addr, align 8, !dbg !9217
  %5 = load i64, i64* %initial_limit, align 8, !dbg !9218
  %cmp1 = icmp ult i64 %4, %5, !dbg !9219
  br i1 %cmp1, label %cond.true2, label %cond.false4, !dbg !9217

cond.true2:                                       ; preds = %cond.end
  %6 = load i64, i64* %size.addr, align 8, !dbg !9220
  %add3 = add i64 %6, 1, !dbg !9221
  br label %cond.end5, !dbg !9217

cond.false4:                                      ; preds = %cond.end
  %7 = load i64, i64* %initial_limit, align 8, !dbg !9222
  br label %cond.end5, !dbg !9217

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi i64 [ %add3, %cond.true2 ], [ %7, %cond.false4 ], !dbg !9217
  store i64 %cond6, i64* %buf_size, align 8, !dbg !9216
  br label %while.body, !dbg !9223

while.body:                                       ; preds = %cond.end5, %if.end26
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9224, metadata !DIExpression()), !dbg !9226
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9227, metadata !DIExpression()), !dbg !9228
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9229, metadata !DIExpression()), !dbg !9230
  %8 = load i64, i64* %buf_size, align 8, !dbg !9231
  %call = call noalias i8* @malloc(i64 %8) #10, !dbg !9232
  store i8* %call, i8** %buffer, align 8, !dbg !9230
  %9 = load i8*, i8** %buffer, align 8, !dbg !9233
  %cmp7 = icmp eq i8* %9, null, !dbg !9235
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9236

if.then:                                          ; preds = %while.body
  store i8* null, i8** %retval, align 8, !dbg !9237
  br label %return, !dbg !9237

if.end:                                           ; preds = %while.body
  %10 = load i8*, i8** %file.addr, align 8, !dbg !9238
  %11 = load i8*, i8** %buffer, align 8, !dbg !9239
  %12 = load i64, i64* %buf_size, align 8, !dbg !9240
  %call8 = call i64 @readlink(i8* %10, i8* %11, i64 %12) #10, !dbg !9241
  store i64 %call8, i64* %r, align 8, !dbg !9242
  %13 = load i64, i64* %r, align 8, !dbg !9243
  store i64 %13, i64* %link_length, align 8, !dbg !9244
  %14 = load i64, i64* %r, align 8, !dbg !9245
  %cmp9 = icmp slt i64 %14, 0, !dbg !9247
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !9248

land.lhs.true:                                    ; preds = %if.end
  %call10 = call i32* @__errno_location() #15, !dbg !9249
  %15 = load i32, i32* %call10, align 4, !dbg !9249, !ctir !7
  %cmp11 = icmp ne i32 %15, 34, !dbg !9250
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !9251

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9252, metadata !DIExpression()), !dbg !9254
  %call13 = call i32* @__errno_location() #15, !dbg !9255
  %16 = load i32, i32* %call13, align 4, !dbg !9255, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !9254
  %17 = load i8*, i8** %buffer, align 8, !dbg !9256
  call void @free(i8* %17) #10, !dbg !9257
  %18 = load i32, i32* %saved_errno, align 4, !dbg !9258
  %call14 = call i32* @__errno_location() #15, !dbg !9259
  store i32 %18, i32* %call14, align 4, !dbg !9260, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9261
  br label %return, !dbg !9261

if.end15:                                         ; preds = %land.lhs.true, %if.end
  %19 = load i64, i64* %link_length, align 8, !dbg !9262
  %20 = load i64, i64* %buf_size, align 8, !dbg !9264
  %cmp16 = icmp ult i64 %19, %20, !dbg !9265
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9266

if.then17:                                        ; preds = %if.end15
  %21 = load i8*, i8** %buffer, align 8, !dbg !9267
  %22 = load i64, i64* %link_length, align 8, !dbg !9269
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !9267, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !9270
  %23 = load i8*, i8** %buffer, align 8, !dbg !9271
  store i8* %23, i8** %retval, align 8, !dbg !9272
  br label %return, !dbg !9272

if.end18:                                         ; preds = %if.end15
  %24 = load i8*, i8** %buffer, align 8, !dbg !9273
  call void @free(i8* %24) #10, !dbg !9274
  %25 = load i64, i64* %buf_size, align 8, !dbg !9275
  %cmp19 = icmp ule i64 %25, 4611686018427387903, !dbg !9277
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !9278

if.then20:                                        ; preds = %if.end18
  %26 = load i64, i64* %buf_size, align 8, !dbg !9279
  %mul = mul i64 %26, 2, !dbg !9279
  store i64 %mul, i64* %buf_size, align 8, !dbg !9279
  br label %if.end26, !dbg !9280

if.else:                                          ; preds = %if.end18
  %27 = load i64, i64* %buf_size, align 8, !dbg !9281
  %cmp21 = icmp ult i64 %27, 9223372036854775807, !dbg !9283
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !9284

if.then22:                                        ; preds = %if.else
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9285
  br label %if.end25, !dbg !9286

if.else23:                                        ; preds = %if.else
  %call24 = call i32* @__errno_location() #15, !dbg !9287
  store i32 12, i32* %call24, align 4, !dbg !9289, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9290
  br label %return, !dbg !9290

if.end25:                                         ; preds = %if.then22
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then20
  br label %while.body, !dbg !9223, !llvm.loop !9291

return:                                           ; preds = %if.else23, %if.then17, %if.then12, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !9293
  ret i8* %28, !dbg !9293
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !9294 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9297
  %tobool = icmp ne i8* %0, null, !dbg !9297
  br i1 %tobool, label %if.end, label %if.then, !dbg !9299

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.192, i64 0, i64 0)) #10, !dbg !9300
  store i8* %call, i8** %s.addr, align 8, !dbg !9301
  br label %if.end, !dbg !9302

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !9303
  %tobool1 = icmp ne i8* %1, null, !dbg !9303
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !9304

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9305
  %3 = load i8, i8* %2, align 1, !dbg !9306, !ctir !117
  %conv = sext i8 %3 to i32, !dbg !9306
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9306
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !9307

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !9308
  %5 = load i8*, i8** %s.addr, align 8, !dbg !9309
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !9310
  %cmp = icmp eq i8* %4, %call4, !dbg !9311
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9303

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !9312
  br label %cond.end, !dbg !9303

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !9303

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.193, i64 0, i64 0), %cond.false ], !dbg !9303
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !9313
  ret void, !dbg !9314
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !9315 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !506
  %filelen = alloca i64, align 8, !ctir !55
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !55
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !55
  %ssize = alloca i64, align 8, !ctir !540
  %s = alloca i8*, align 8, !ctir !9
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !541
  %sdir = alloca i32, align 4, !ctir !7
  %base_max = alloca i64, align 8, !ctir !55
  %flags = alloca i32, align 4, !ctir !70
  %e = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9318, metadata !DIExpression()), !dbg !9319
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9320, metadata !DIExpression()), !dbg !9321
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9322, metadata !DIExpression()), !dbg !9323
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9324, metadata !DIExpression()), !dbg !9325
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !9326, metadata !DIExpression()), !dbg !9327
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9328
  %call = call i8* @last_component(i8* %0) #14, !dbg !9329
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9330
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9331
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9331
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9331
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !9327
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !9332, metadata !DIExpression()), !dbg !9333
  %2 = load i64, i64* %base_offset, align 8, !dbg !9334
  %3 = load i8*, i8** %file.addr, align 8, !dbg !9335
  %4 = load i64, i64* %base_offset, align 8, !dbg !9336
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !9337, !ctir !117
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !9338
  %add = add i64 %2, %call1, !dbg !9339
  store i64 %add, i64* %filelen, align 8, !dbg !9333
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9340
  %tobool = icmp ne i8* %5, null, !dbg !9340
  br i1 %tobool, label %if.end, label %if.then, !dbg !9342

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !9343
  br label %if.end, !dbg !9343

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !9344, metadata !DIExpression()), !dbg !9345
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9346
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !9347
  %add3 = add i64 %call2, 1, !dbg !9348
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !9345
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !9349, metadata !DIExpression()), !dbg !9350
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9351
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !9350
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9352
  %cmp = icmp ult i64 %8, 9, !dbg !9354
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9355

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !9356
  br label %if.end5, !dbg !9357

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !9358, metadata !DIExpression()), !dbg !9359
  %9 = load i64, i64* %filelen, align 8, !dbg !9360
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9361
  %add6 = add i64 %9, %10, !dbg !9362
  %add7 = add i64 %add6, 1, !dbg !9363
  store i64 %add7, i64* %ssize, align 8, !dbg !9359
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9364, metadata !DIExpression()), !dbg !9365
  %11 = load i64, i64* %ssize, align 8, !dbg !9366
  %call8 = call noalias i8* @malloc(i64 %11) #10, !dbg !9367
  store i8* %call8, i8** %s, align 8, !dbg !9365
  %12 = load i8*, i8** %s, align 8, !dbg !9368
  %tobool9 = icmp ne i8* %12, null, !dbg !9368
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9370

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !9371
  store i8* %13, i8** %retval, align 8, !dbg !9372
  br label %return, !dbg !9372

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9373, metadata !DIExpression()), !dbg !9374
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !9374
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !9375, metadata !DIExpression()), !dbg !9376
  store i32 -1, i32* %sdir, align 4, !dbg !9376
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !9377, metadata !DIExpression()), !dbg !9378
  store i64 0, i64* %base_max, align 8, !dbg !9378
  br label %while.body, !dbg !9379

while.body:                                       ; preds = %if.end11, %if.end46
  %14 = load i8*, i8** %s, align 8, !dbg !9380
  %15 = load i8*, i8** %file.addr, align 8, !dbg !9382
  %16 = load i64, i64* %filelen, align 8, !dbg !9383
  %add12 = add i64 %16, 1, !dbg !9384
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !9385
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !9386
  %cmp13 = icmp eq i32 %17, 1, !dbg !9388
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9389

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !9390
  %19 = load i64, i64* %filelen, align 8, !dbg !9391
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !9392, !ctir !10
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9393
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !9395
  br label %if.end25, !dbg !9395

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !9396
  %23 = load i64, i64* %ssize, align 8, !dbg !9397
  %24 = load i64, i64* %filelen, align 8, !dbg !9398
  %25 = load i64, i64* %base_offset, align 8, !dbg !9399
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !9400
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !9401

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !9402

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !9404
  %cmp18 = icmp eq i32 %26, 2, !dbg !9406
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9407

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !9408
  %27 = load i8*, i8** %s, align 8, !dbg !9410
  %28 = load i64, i64* %filelen, align 8, !dbg !9411
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !9412, !ctir !10
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9413
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9414
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !9415
  br label %if.end21, !dbg !9416

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !9417

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !9418
  %32 = load i64, i64* %filelen, align 8, !dbg !9419
  %33 = load i32, i32* %sdir, align 4, !dbg !9420
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !9421
  br label %sw.epilog, !dbg !9422

sw.bb23:                                          ; preds = %if.else
  %34 = load i8*, i8** %s, align 8, !dbg !9423
  call void @free(i8* %34) #10, !dbg !9424
  %call24 = call i32* @__errno_location() #15, !dbg !9425
  store i32 12, i32* %call24, align 4, !dbg !9426, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9427
  br label %return, !dbg !9427

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end25

if.end25:                                         ; preds = %sw.epilog, %if.then14
  %35 = load i8, i8* %rename.addr, align 1, !dbg !9428
  %tobool26 = trunc i8 %35 to i1, !dbg !9428
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !9430

if.then27:                                        ; preds = %if.end25
  br label %while.end, !dbg !9431

if.end28:                                         ; preds = %if.end25
  %36 = load i32, i32* %sdir, align 4, !dbg !9432
  %cmp29 = icmp slt i32 %36, 0, !dbg !9434
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9435

if.then30:                                        ; preds = %if.end28
  store i32 -100, i32* %sdir, align 4, !dbg !9436
  store i64 0, i64* %base_offset, align 8, !dbg !9438
  br label %if.end31, !dbg !9439

if.end31:                                         ; preds = %if.then30, %if.end28
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9440, metadata !DIExpression()), !dbg !9441
  %37 = load i32, i32* %backup_type.addr, align 4, !dbg !9442
  %cmp32 = icmp eq i32 %37, 1, !dbg !9443
  %38 = zext i1 %cmp32 to i64, !dbg !9442
  %cond = select i1 %cmp32, i32 0, i32 1, !dbg !9442
  store i32 %cond, i32* %flags, align 4, !dbg !9441
  %39 = load i8*, i8** %file.addr, align 8, !dbg !9444
  %40 = load i32, i32* %sdir, align 4, !dbg !9446
  %41 = load i8*, i8** %s, align 8, !dbg !9447
  %42 = load i64, i64* %base_offset, align 8, !dbg !9448
  %add.ptr33 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9449, !ctir !10
  %43 = load i32, i32* %flags, align 4, !dbg !9450
  %call34 = call i32 @renameatu(i32 -100, i8* %39, i32 %40, i8* %add.ptr33, i32 %43), !dbg !9451
  %cmp35 = icmp eq i32 %call34, 0, !dbg !9452
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !9453

if.then36:                                        ; preds = %if.end31
  br label %while.end, !dbg !9454

if.end37:                                         ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9455, metadata !DIExpression()), !dbg !9456
  %call38 = call i32* @__errno_location() #15, !dbg !9457
  %44 = load i32, i32* %call38, align 4, !dbg !9457, !ctir !7
  store i32 %44, i32* %e, align 4, !dbg !9456
  %45 = load i32, i32* %e, align 4, !dbg !9458
  %cmp39 = icmp ne i32 %45, 17, !dbg !9460
  br i1 %cmp39, label %if.then40, label %if.end46, !dbg !9461

if.then40:                                        ; preds = %if.end37
  %46 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9462
  %tobool41 = icmp ne %struct.__dirstream* %46, null, !dbg !9462
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !9465

if.then42:                                        ; preds = %if.then40
  %47 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9466
  %call43 = call i32 @closedir(%struct.__dirstream* %47), !dbg !9467
  br label %if.end44, !dbg !9467

if.end44:                                         ; preds = %if.then42, %if.then40
  %48 = load i8*, i8** %s, align 8, !dbg !9468
  call void @free(i8* %48) #10, !dbg !9469
  %49 = load i32, i32* %e, align 4, !dbg !9470
  %call45 = call i32* @__errno_location() #15, !dbg !9471
  store i32 %49, i32* %call45, align 4, !dbg !9472, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9473
  br label %return, !dbg !9473

if.end46:                                         ; preds = %if.end37
  br label %while.body, !dbg !9379, !llvm.loop !9474

while.end:                                        ; preds = %if.then36, %if.then27
  %50 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9476
  %tobool47 = icmp ne %struct.__dirstream* %50, null, !dbg !9476
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !9478

if.then48:                                        ; preds = %while.end
  %51 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9479
  %call49 = call i32 @closedir(%struct.__dirstream* %51), !dbg !9480
  br label %if.end50, !dbg !9480

if.end50:                                         ; preds = %if.then48, %while.end
  %52 = load i8*, i8** %s, align 8, !dbg !9481
  store i8* %52, i8** %retval, align 8, !dbg !9482
  br label %return, !dbg !9482

return:                                           ; preds = %if.end50, %if.end44, %sw.bb23, %if.then10
  %53 = load i8*, i8** %retval, align 8, !dbg !9483
  ret i8* %53, !dbg !9483
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !9484 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !532
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !541
  %dp = alloca %struct.dirent*, align 8, !ctir !545
  %buf = alloca i8*, align 8, !ctir !9
  %versionlenmax = alloca i64, align 8, !ctir !55
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %tmp = alloca [2 x i8], align 1, !ctir !267
  %p = alloca i8*, align 8, !ctir !116
  %q = alloca i8*, align 8, !ctir !9
  %all_9s = alloca i8, align 1, !ctir !142
  %versionlen = alloca i64, align 8, !ctir !55
  %new_buffer_size = alloca i64, align 8, !ctir !55
  %new_buf = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9488, metadata !DIExpression()), !dbg !9489
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9494, metadata !DIExpression()), !dbg !9495
  store i64 %base_offset, i64* %base_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !9500, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9502, metadata !DIExpression()), !dbg !9503
  store i32 2, i32* %result, align 4, !dbg !9503
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9504, metadata !DIExpression()), !dbg !9505
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9506
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !9507, !ctir !541
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !9505
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !9508, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9510, metadata !DIExpression()), !dbg !9511
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !9512
  %3 = load i8*, i8** %2, align 8, !dbg !9513, !ctir !9
  store i8* %3, i8** %buf, align 8, !dbg !9511
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !9514, metadata !DIExpression()), !dbg !9515
  store i64 1, i64* %versionlenmax, align 8, !dbg !9515
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9516, metadata !DIExpression()), !dbg !9517
  %4 = load i8*, i8** %buf, align 8, !dbg !9518
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !9519
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !9520, !ctir !10
  store i8* %add.ptr, i8** %base, align 8, !dbg !9517
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9521, metadata !DIExpression()), !dbg !9522
  %6 = load i8*, i8** %base, align 8, !dbg !9523
  %call = call i64 @base_len(i8* %6) #14, !dbg !9524
  store i64 %call, i64* %baselen, align 8, !dbg !9522
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9525
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !9525
  br i1 %tobool, label %if.then, label %if.else, !dbg !9527

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9528
  call void @rewinddir(%struct.__dirstream* %8) #10, !dbg !9529
  br label %if.end12, !dbg !9529

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9530, metadata !DIExpression()), !dbg !9532
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9533, !ctir !267
  %9 = load i8*, i8** %base, align 8, !dbg !9534
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !9533
  %10 = load i8*, i8** %base, align 8, !dbg !9535
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #10, !dbg !9536
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !9537
  %12 = load i8*, i8** %buf, align 8, !dbg !9538
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !9539
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !9540
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !9541
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9542
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !9542
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !9544

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #15, !dbg !9545
  %15 = load i32, i32* %call4, align 4, !dbg !9545, !ctir !7
  %cmp = icmp eq i32 %15, 12, !dbg !9546
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9547

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !9548
  br label %if.end, !dbg !9549

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !9550
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9551, !ctir !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !9551
  %17 = load i8*, i8** %base, align 8, !dbg !9552
  %18 = load i64, i64* %baselen, align 8, !dbg !9553
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !9554, !ctir !10
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.195, i64 0, i64 0)) #10, !dbg !9555
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9556
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !9556
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9558

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !9559
  store i32 %20, i32* %retval, align 4, !dbg !9560
  br label %return, !dbg !9560

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9561
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9562
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !9563, !ctir !541
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !9564

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9565
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !9566
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !9567
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !9568
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !9564

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9569, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata i8** %q, metadata !9572, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !9576, metadata !DIExpression()), !dbg !9577
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9578
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !9578, !ctir !546
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !9578, !ctir !503
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !9578
  %25 = load i64, i64* %baselen, align 8, !dbg !9580
  %add = add i64 %25, 4, !dbg !9581
  %cmp17 = icmp ult i64 %call16, %add, !dbg !9582
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9583

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !9584, !llvm.loop !9585

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !9587
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !9589
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !9590, !ctir !10
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9591
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !9592, !ctir !546
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !9591, !ctir !503
  %29 = load i64, i64* %baselen, align 8, !dbg !9593
  %add23 = add i64 %29, 2, !dbg !9594
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !9595
  %cmp25 = icmp ne i32 %call24, 0, !dbg !9596
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9597

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !9598, !llvm.loop !9585

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9599
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !9600, !ctir !546
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !9599, !ctir !503
  %31 = load i64, i64* %baselen, align 8, !dbg !9601
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !9602, !ctir !10
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !9603, !ctir !10
  store i8* %add.ptr31, i8** %p, align 8, !dbg !9604
  %32 = load i8*, i8** %p, align 8, !dbg !9605
  %33 = load i8, i8* %32, align 1, !dbg !9607, !ctir !117
  %conv = sext i8 %33 to i32, !dbg !9607
  %cmp32 = icmp sle i32 49, %conv, !dbg !9608
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !9609

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !9610
  %35 = load i8, i8* %34, align 1, !dbg !9611, !ctir !117
  %conv35 = sext i8 %35 to i32, !dbg !9611
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !9612
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !9613

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !9614, !llvm.loop !9585

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !9615
  %37 = load i8, i8* %36, align 1, !dbg !9616, !ctir !117
  %conv40 = sext i8 %37 to i32, !dbg !9616
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !9617
  %frombool = zext i1 %cmp41 to i8, !dbg !9618
  store i8 %frombool, i8* %all_9s, align 1, !dbg !9618
  store i64 1, i64* %versionlen, align 8, !dbg !9619
  br label %for.cond, !dbg !9621

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !9622
  %39 = load i64, i64* %versionlen, align 8, !dbg !9622
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !9622, !ctir !116
  %40 = load i8, i8* %arrayidx, align 1, !dbg !9622
  %conv43 = sext i8 %40 to i32, !dbg !9622
  %sub = sub i32 %conv43, 48, !dbg !9622
  %cmp44 = icmp ule i32 %sub, 9, !dbg !9622
  br i1 %cmp44, label %for.body, label %for.end, !dbg !9624

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !9625
  %42 = load i64, i64* %versionlen, align 8, !dbg !9626
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9625, !ctir !116
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !9625
  %conv47 = sext i8 %43 to i32, !dbg !9625
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !9627
  %conv49 = zext i1 %cmp48 to i32, !dbg !9627
  %44 = load i8, i8* %all_9s, align 1, !dbg !9628
  %tobool50 = trunc i8 %44 to i1, !dbg !9628
  %conv51 = zext i1 %tobool50 to i32, !dbg !9628
  %and = and i32 %conv51, %conv49, !dbg !9628
  %tobool52 = icmp ne i32 %and, 0, !dbg !9628
  %frombool53 = zext i1 %tobool52 to i8, !dbg !9628
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !9628
  br label %for.inc, !dbg !9629

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !9630
  %inc = add i64 %45, 1, !dbg !9630
  store i64 %inc, i64* %versionlen, align 8, !dbg !9630
  br label %for.cond, !dbg !9631, !llvm.loop !9632

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !9634
  %47 = load i64, i64* %versionlen, align 8, !dbg !9636
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !9634, !ctir !116
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !9634
  %conv55 = sext i8 %48 to i32, !dbg !9634
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !9637
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !9638

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !9639
  %50 = load i64, i64* %versionlen, align 8, !dbg !9640
  %add59 = add i64 %50, 1, !dbg !9641
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !9639, !ctir !116
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !9639
  %tobool61 = icmp ne i8 %51, 0, !dbg !9639
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !9642

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !9643
  %53 = load i64, i64* %versionlen, align 8, !dbg !9644
  %cmp63 = icmp ult i64 %52, %53, !dbg !9645
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !9646

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !9647
  %55 = load i64, i64* %versionlen, align 8, !dbg !9648
  %cmp65 = icmp eq i64 %54, %55, !dbg !9649
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !9650

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !9651
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !9652
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !9653, !ctir !10
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !9654, !ctir !10
  %58 = load i8*, i8** %p, align 8, !dbg !9655
  %59 = load i64, i64* %versionlen, align 8, !dbg !9656
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !9657
  %cmp71 = icmp sle i32 %call70, 0, !dbg !9658
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !9659

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !9660, !llvm.loop !9585

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !9661
  %tobool75 = trunc i8 %60 to i1, !dbg !9661
  %conv76 = zext i1 %tobool75 to i64, !dbg !9661
  %61 = load i64, i64* %versionlen, align 8, !dbg !9662
  %add77 = add i64 %conv76, %61, !dbg !9663
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !9664
  %62 = load i8, i8* %all_9s, align 1, !dbg !9665
  %tobool78 = trunc i8 %62 to i1, !dbg !9665
  %63 = zext i1 %tobool78 to i64, !dbg !9665
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !9665
  store i32 %cond, i32* %result, align 4, !dbg !9666
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !9667, metadata !DIExpression()), !dbg !9668
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !9669
  %add80 = add i64 %64, 2, !dbg !9670
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !9671
  %add81 = add i64 %add80, %65, !dbg !9672
  %add82 = add i64 %add81, 2, !dbg !9673
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !9668
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !9674
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !9676
  %cmp83 = icmp ult i64 %66, %67, !dbg !9677
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !9678

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !9679
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !9679
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !9682

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !9683
  %mul = mul i64 %69, 2, !dbg !9683
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !9683
  br label %if.end89, !dbg !9684

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !9685, metadata !DIExpression()), !dbg !9686
  %70 = load i8*, i8** %buf, align 8, !dbg !9687
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !9688
  %call90 = call i8* @realloc(i8* %70, i64 %71) #10, !dbg !9689
  store i8* %call90, i8** %new_buf, align 8, !dbg !9686
  %72 = load i8*, i8** %new_buf, align 8, !dbg !9690
  %tobool91 = icmp ne i8* %72, null, !dbg !9690
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !9692

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !9693
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !9695
  store i8* %73, i8** %74, align 8, !dbg !9696, !ctir !9
  store i32 3, i32* %retval, align 4, !dbg !9697
  br label %return, !dbg !9697

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !9698
  store i8* %75, i8** %buf, align 8, !dbg !9699
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !9700
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !9701
  br label %if.end94, !dbg !9702

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !9703
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !9704
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !9705, !ctir !10
  store i8* %add.ptr95, i8** %q, align 8, !dbg !9706
  %79 = load i8*, i8** %q, align 8, !dbg !9707
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !9707, !ctir !10
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !9707
  store i8 46, i8* %79, align 1, !dbg !9708, !ctir !10
  %80 = load i8*, i8** %q, align 8, !dbg !9709
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !9709, !ctir !10
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !9709
  store i8 126, i8* %80, align 1, !dbg !9710, !ctir !10
  %81 = load i8*, i8** %q, align 8, !dbg !9711
  store i8 48, i8* %81, align 1, !dbg !9712, !ctir !10
  %82 = load i8, i8* %all_9s, align 1, !dbg !9713
  %tobool97 = trunc i8 %82 to i1, !dbg !9713
  %conv98 = zext i1 %tobool97 to i32, !dbg !9713
  %83 = load i8*, i8** %q, align 8, !dbg !9714
  %idx.ext = sext i32 %conv98 to i64, !dbg !9714
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !9714, !ctir !10
  store i8* %add.ptr99, i8** %q, align 8, !dbg !9714
  %84 = load i8*, i8** %q, align 8, !dbg !9715
  %85 = load i8*, i8** %p, align 8, !dbg !9716
  %86 = load i64, i64* %versionlen, align 8, !dbg !9717
  %add100 = add i64 %86, 2, !dbg !9718
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !9719
  %87 = load i64, i64* %versionlen, align 8, !dbg !9720
  %88 = load i8*, i8** %q, align 8, !dbg !9721
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !9721, !ctir !10
  store i8* %add.ptr101, i8** %q, align 8, !dbg !9721
  br label %while.cond102, !dbg !9722

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !9723
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !9723, !ctir !10
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !9723
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !9724, !ctir !10
  %conv104 = sext i8 %90 to i32, !dbg !9724
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !9725
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !9722

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !9726
  store i8 48, i8* %91, align 1, !dbg !9727, !ctir !10
  br label %while.cond102, !dbg !9722, !llvm.loop !9728

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !9730
  %93 = load i8, i8* %92, align 1, !dbg !9731, !ctir !10
  %inc108 = add i8 %93, 1, !dbg !9731
  store i8 %inc108, i8* %92, align 1, !dbg !9731, !ctir !10
  br label %while.cond, !dbg !9564, !llvm.loop !9585

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !9732
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !9733
  store i8* %94, i8** %95, align 8, !dbg !9734, !ctir !9
  %96 = load i32, i32* %result, align 4, !dbg !9735
  store i32 %96, i32* %retval, align 4, !dbg !9736
  br label %return, !dbg !9736

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !9737
  ret i32 %97, !dbg !9737
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !9738 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %baselen_max = alloca i64, align 8, !ctir !55
  %name_max = alloca i64, align 8, !ctir !31
  %tmp = alloca [2 x i8], align 1, !ctir !267
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i64 %filelen, i64* %filelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store i8 %e, i8* %e.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9748, metadata !DIExpression()), !dbg !9749
  store i64* %base_max, i64** %base_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !9750, metadata !DIExpression()), !dbg !9751
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9752, metadata !DIExpression()), !dbg !9753
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9754
  %call = call i8* @last_component(i8* %0) #14, !dbg !9755
  store i8* %call, i8** %base, align 8, !dbg !9753
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9756, metadata !DIExpression()), !dbg !9757
  %1 = load i8*, i8** %base, align 8, !dbg !9758
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !9759
  store i64 %call1, i64* %baselen, align 8, !dbg !9757
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !9760, metadata !DIExpression()), !dbg !9761
  store i64 255, i64* %baselen_max, align 8, !dbg !9761
  %2 = load i64, i64* %baselen, align 8, !dbg !9762
  %cmp = icmp ult i64 14, %2, !dbg !9764
  br i1 %cmp, label %if.then, label %if.end27, !dbg !9765

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !9766
  %4 = load i64, i64* %3, align 8, !dbg !9769, !ctir !55
  %cmp2 = icmp eq i64 %4, 0, !dbg !9770
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !9771

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !9772, metadata !DIExpression()), !dbg !9774
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !9775
  %cmp4 = icmp slt i32 %5, 0, !dbg !9777
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !9778

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9779, metadata !DIExpression()), !dbg !9781
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9782, !ctir !267
  %6 = load i8*, i8** %base, align 8, !dbg !9783
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !9782
  %7 = load i8*, i8** %base, align 8, !dbg !9784
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #10, !dbg !9785
  %call7 = call i32* @__errno_location() #15, !dbg !9786
  store i32 0, i32* %call7, align 4, !dbg !9787, !ctir !7
  %8 = load i8*, i8** %file.addr, align 8, !dbg !9788
  %call8 = call i64 @pathconf(i8* %8, i32 3) #10, !dbg !9789
  store i64 %call8, i64* %name_max, align 8, !dbg !9790
  %call9 = call i32* @__errno_location() #15, !dbg !9791
  %9 = load i32, i32* %call9, align 4, !dbg !9791, !ctir !7
  %tobool = icmp ne i32 %9, 0, !dbg !9792
  %lnot = xor i1 %tobool, true, !dbg !9792
  %lnot.ext = zext i1 %lnot to i32, !dbg !9792
  %conv = sext i32 %lnot.ext to i64, !dbg !9792
  %10 = load i64, i64* %name_max, align 8, !dbg !9793
  %sub = sub nsw i64 %10, %conv, !dbg !9793
  store i64 %sub, i64* %name_max, align 8, !dbg !9793
  %11 = load i8*, i8** %base, align 8, !dbg !9794
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9795, !ctir !267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !9795
  br label %if.end, !dbg !9796

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #15, !dbg !9797
  store i32 0, i32* %call11, align 4, !dbg !9799, !ctir !7
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !9800
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #10, !dbg !9801
  store i64 %call12, i64* %name_max, align 8, !dbg !9802
  %call13 = call i32* @__errno_location() #15, !dbg !9803
  %13 = load i32, i32* %call13, align 4, !dbg !9803, !ctir !7
  %tobool14 = icmp ne i32 %13, 0, !dbg !9804
  %lnot15 = xor i1 %tobool14, true, !dbg !9804
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !9804
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !9804
  %14 = load i64, i64* %name_max, align 8, !dbg !9805
  %sub18 = sub nsw i64 %14, %conv17, !dbg !9805
  store i64 %sub18, i64* %name_max, align 8, !dbg !9805
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !9806
  %cmp19 = icmp sle i64 0, %15, !dbg !9807
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !9808

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !9809
  %cmp21 = icmp ule i64 %16, -1, !dbg !9810
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !9811

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !9812
  br label %cond.end, !dbg !9811

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !9813
  %cmp23 = icmp slt i64 %18, -1, !dbg !9814
  %19 = zext i1 %cmp23 to i64, !dbg !9813
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !9813
  br label %cond.end, !dbg !9811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !9811
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !9815
  store i64 %cond25, i64* %20, align 8, !dbg !9816, !ctir !55
  br label %if.end26, !dbg !9817

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !9818
  %22 = load i64, i64* %21, align 8, !dbg !9819, !ctir !55
  store i64 %22, i64* %baselen_max, align 8, !dbg !9820
  br label %if.end27, !dbg !9821

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !9822
  %24 = load i64, i64* %baselen, align 8, !dbg !9824
  %cmp28 = icmp ult i64 %23, %24, !dbg !9825
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !9826

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !9827
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !9829
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !9830, !ctir !10
  %27 = load i8*, i8** %base, align 8, !dbg !9831
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !9832
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !9832
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9832
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !9833
  %28 = load i64, i64* %baselen_max, align 8, !dbg !9834
  %29 = load i64, i64* %baselen, align 8, !dbg !9836
  %cmp31 = icmp ule i64 %28, %29, !dbg !9837
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !9838

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !9839
  %sub34 = sub i64 %30, 1, !dbg !9840
  store i64 %sub34, i64* %baselen, align 8, !dbg !9841
  br label %if.end35, !dbg !9842

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !9843
  %32 = load i8*, i8** %base, align 8, !dbg !9844
  %33 = load i64, i64* %baselen, align 8, !dbg !9845
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !9844, !ctir !9
  store i8 %31, i8* %arrayidx, align 1, !dbg !9846
  %34 = load i8*, i8** %base, align 8, !dbg !9847
  %35 = load i64, i64* %baselen, align 8, !dbg !9848
  %add = add i64 %35, 1, !dbg !9849
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !9847, !ctir !9
  store i8 0, i8* %arrayidx36, align 1, !dbg !9850
  br label %if.end37, !dbg !9851

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !9852
}

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9853 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9857, metadata !DIExpression()), !dbg !9858
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9859, metadata !DIExpression()), !dbg !9860
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9861, metadata !DIExpression()), !dbg !9862
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9863
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9864
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9865
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !9866
  ret i8* %call, !dbg !9867
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !9868 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9869, metadata !DIExpression()), !dbg !9870
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9871, metadata !DIExpression()), !dbg !9872
  store i32 %backup_type, i32* %backup_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9873, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.declare(metadata i8** %result, metadata !9875, metadata !DIExpression()), !dbg !9876
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !9877
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9878
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !9879
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !9880
  store i8* %call, i8** %result, align 8, !dbg !9876
  %3 = load i8*, i8** %result, align 8, !dbg !9881
  %tobool = icmp ne i8* %3, null, !dbg !9881
  br i1 %tobool, label %if.end, label %if.then, !dbg !9883

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9884
  unreachable, !dbg !9884

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !9885
  ret i8* %4, !dbg !9886
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !9887 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9894
  %cmp = icmp eq i8* %0, null, !dbg !9896
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9897

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9898
  %2 = load i8, i8* %1, align 1, !dbg !9899, !ctir !117
  %conv = sext i8 %2 to i32, !dbg !9899
  %cmp1 = icmp eq i32 %conv, 0, !dbg !9900
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9901

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !9902
  br label %return, !dbg !9902

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9903
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9903
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !9903
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !9903
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !9903, !ctir !564
  %6 = load i32, i32* %arrayidx, align 4, !dbg !9903
  store i32 %6, i32* %retval, align 4, !dbg !9904
  br label %return, !dbg !9904

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !9905
  ret i32 %7, !dbg !9905
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !9906 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9907, metadata !DIExpression()), !dbg !9908
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !9909, metadata !DIExpression()), !dbg !9910
  %0 = load i8*, i8** %version.addr, align 8, !dbg !9911
  %tobool = icmp ne i8* %0, null, !dbg !9911
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9913

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !9914
  %2 = load i8, i8* %1, align 1, !dbg !9915, !ctir !117
  %conv = sext i8 %2 to i32, !dbg !9915
  %tobool1 = icmp ne i32 %conv, 0, !dbg !9915
  br i1 %tobool1, label %if.then, label %if.else, !dbg !9916

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !9917
  %4 = load i8*, i8** %version.addr, align 8, !dbg !9918
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !9919
  store i32 %call, i32* %retval, align 4, !dbg !9920
  br label %return, !dbg !9920

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.208, i64 0, i64 0)) #10, !dbg !9921
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.209, i64 0, i64 0), i8* %call2), !dbg !9922
  store i32 %call3, i32* %retval, align 4, !dbg !9923
  br label %return, !dbg !9923

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !9924
  ret i32 %5, !dbg !9924
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !9925 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !55
  %lcm = alloca i64, align 8, !ctir !55
  %m = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %q = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !55
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9929, metadata !DIExpression()), !dbg !9930
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9931, metadata !DIExpression()), !dbg !9932
  store i64 %lcm_max, i64* %lcm_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !9933, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.declare(metadata i64* %size, metadata !9935, metadata !DIExpression()), !dbg !9936
  %0 = load i64, i64* %a.addr, align 8, !dbg !9937
  %tobool = icmp ne i64 %0, 0, !dbg !9937
  br i1 %tobool, label %if.else, label %if.then, !dbg !9939

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !9940
  %tobool1 = icmp ne i64 %1, 0, !dbg !9940
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !9940

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !9941
  br label %cond.end, !dbg !9940

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !9940
  store i64 %cond, i64* %size, align 8, !dbg !9942
  br label %if.end9, !dbg !9943

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !9944
  %tobool2 = icmp ne i64 %3, 0, !dbg !9944
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !9947

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !9948, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.declare(metadata i64* %m, metadata !9951, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9953, metadata !DIExpression()), !dbg !9954
  call void @llvm.dbg.declare(metadata i64* %q, metadata !9955, metadata !DIExpression()), !dbg !9956
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9957, metadata !DIExpression()), !dbg !9958
  %4 = load i64, i64* %a.addr, align 8, !dbg !9959
  store i64 %4, i64* %m, align 8, !dbg !9961
  %5 = load i64, i64* %b.addr, align 8, !dbg !9962
  store i64 %5, i64* %n, align 8, !dbg !9963
  br label %for.cond, !dbg !9964

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !9965
  %7 = load i64, i64* %n, align 8, !dbg !9967
  %rem = urem i64 %6, %7, !dbg !9968
  store i64 %rem, i64* %r, align 8, !dbg !9969
  %cmp = icmp ne i64 %rem, 0, !dbg !9970
  br i1 %cmp, label %for.body, label %for.end, !dbg !9971

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !9972

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !9973
  store i64 %8, i64* %m, align 8, !dbg !9974
  %9 = load i64, i64* %r, align 8, !dbg !9975
  store i64 %9, i64* %n, align 8, !dbg !9976
  br label %for.cond, !dbg !9977, !llvm.loop !9978

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !9980
  %11 = load i64, i64* %n, align 8, !dbg !9981
  %div = udiv i64 %10, %11, !dbg !9982
  store i64 %div, i64* %q, align 8, !dbg !9983
  %12 = load i64, i64* %q, align 8, !dbg !9984
  %13 = load i64, i64* %b.addr, align 8, !dbg !9985
  %mul = mul i64 %12, %13, !dbg !9986
  store i64 %mul, i64* %lcm, align 8, !dbg !9987
  %14 = load i64, i64* %lcm, align 8, !dbg !9988
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !9990
  %cmp4 = icmp ule i64 %14, %15, !dbg !9991
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !9992

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !9993
  %17 = load i64, i64* %b.addr, align 8, !dbg !9994
  %div5 = udiv i64 %16, %17, !dbg !9995
  %18 = load i64, i64* %q, align 8, !dbg !9996
  %cmp6 = icmp eq i64 %div5, %18, !dbg !9997
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !9998

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !9999
  store i64 %19, i64* %retval, align 8, !dbg !10000
  br label %return, !dbg !10000

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !10001

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !10002
  store i64 %20, i64* %size, align 8, !dbg !10003
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !10004
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !10005
  %cmp10 = icmp ule i64 %21, %22, !dbg !10006
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10004

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !10007
  br label %cond.end13, !dbg !10004

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !10008
  br label %cond.end13, !dbg !10004

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !10004
  store i64 %cond14, i64* %retval, align 8, !dbg !10009
  br label %return, !dbg !10009

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !10010
  ret i64 %25, !dbg !10010
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !10011 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10012, metadata !DIExpression()), !dbg !10013
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10014
  store i8* %0, i8** @file_name, align 8, !dbg !10015
  ret void, !dbg !10016
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !10017 {
entry:
  %fail = alloca i8, align 1, !ctir !142
  %close_error = alloca i8*, align 8, !ctir !116
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10018, metadata !DIExpression()), !dbg !10019
  store i8 0, i8* %fail, align 1, !dbg !10019
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10020
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !10022
  %cmp = icmp ugt i64 %call, 0, !dbg !10023
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10024

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10025
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !10028
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10029
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10030

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10031
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !10032
  %cmp4 = icmp ne i32 %call3, 0, !dbg !10033
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10034

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !10035
  br label %if.end, !dbg !10036

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !10037

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10038
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !10040
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10041
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10042

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !10043
  br label %if.end10, !dbg !10044

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !10045
  %tobool = trunc i8 %4 to i1, !dbg !10045
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !10047

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !10048, metadata !DIExpression()), !dbg !10050
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.214, i64 0, i64 0)) #10, !dbg !10051
  store i8* %call12, i8** %close_error, align 8, !dbg !10050
  %5 = load i8*, i8** @file_name, align 8, !dbg !10052
  %tobool13 = icmp ne i8* %5, null, !dbg !10052
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10054

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !10055
  %6 = load i32, i32* %call15, align 4, !dbg !10055, !ctir !7
  %7 = load i8*, i8** @file_name, align 8, !dbg !10056
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !10057
  %8 = load i8*, i8** %close_error, align 8, !dbg !10058
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.215, i64 0, i64 0), i8* %call16, i8* %8), !dbg !10059
  br label %if.end18, !dbg !10059

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #15, !dbg !10060
  %9 = load i32, i32* %call17, align 4, !dbg !10060, !ctir !7
  %10 = load i8*, i8** %close_error, align 8, !dbg !10061
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.216, i64 0, i64 0), i8* %10), !dbg !10062
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10063

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10064
  %11 = load i8, i8* %fail, align 1, !dbg !10065
  %tobool20 = trunc i8 %11 to i1, !dbg !10065
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10067

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10068
  call void @_exit(i32 %12) #16, !dbg !10069
  unreachable, !dbg !10069

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10070
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10071 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10072, metadata !DIExpression()), !dbg !10073
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10074
  store i8* %0, i8** @file_name.217, align 8, !dbg !10075
  ret void, !dbg !10076
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10077 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10082
  %tobool = trunc i8 %0 to i1, !dbg !10082
  %frombool1 = zext i1 %tobool to i8, !dbg !10083
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10085 {
entry:
  %write_error = alloca i8*, align 8, !ctir !116
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10086
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10088
  %cmp = icmp ne i32 %call, 0, !dbg !10089
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10090

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10091
  %tobool = trunc i8 %1 to i1, !dbg !10091
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10092

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #15, !dbg !10093
  %2 = load i32, i32* %call2, align 4, !dbg !10093, !ctir !7
  %cmp3 = icmp eq i32 %2, 32, !dbg !10094
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10095

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10096, metadata !DIExpression()), !dbg !10098
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0)) #10, !dbg !10099
  store i8* %call4, i8** %write_error, align 8, !dbg !10098
  %3 = load i8*, i8** @file_name.217, align 8, !dbg !10100
  %tobool5 = icmp ne i8* %3, null, !dbg !10100
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10102

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #15, !dbg !10103
  %4 = load i32, i32* %call7, align 4, !dbg !10103, !ctir !7
  %5 = load i8*, i8** @file_name.217, align 8, !dbg !10104
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10105
  %6 = load i8*, i8** %write_error, align 8, !dbg !10106
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.221, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10107
  br label %if.end, !dbg !10107

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #15, !dbg !10108
  %7 = load i32, i32* %call9, align 4, !dbg !10108, !ctir !7
  %8 = load i8*, i8** %write_error, align 8, !dbg !10109
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.222, i64 0, i64 0), i8* %8), !dbg !10110
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10111
  call void @_exit(i32 %9) #16, !dbg !10112
  unreachable, !dbg !10112

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10113
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10115
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10116
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10117

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10118
  call void @_exit(i32 %11) #16, !dbg !10119
  unreachable, !dbg !10119

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10120
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10121 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10125, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10127, metadata !DIExpression()), !dbg !10128
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10129
  %call = call i8* @mdir_name(i8* %0), !dbg !10130
  store i8* %call, i8** %result, align 8, !dbg !10128
  %1 = load i8*, i8** %result, align 8, !dbg !10131
  %tobool = icmp ne i8* %1, null, !dbg !10131
  br i1 %tobool, label %if.end, label %if.then, !dbg !10133

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10134
  unreachable, !dbg !10134

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10135
  ret i8* %2, !dbg !10136
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10137 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !55
  %length = alloca i64, align 8, !ctir !55
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10141, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10143, metadata !DIExpression()), !dbg !10144
  store i64 0, i64* %prefix_length, align 8, !dbg !10144
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10145, metadata !DIExpression()), !dbg !10146
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10147
  %cmp = icmp ne i64 %0, 0, !dbg !10148
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10147

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10147

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10149
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10149, !ctir !116
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10149
  %conv = sext i8 %2 to i32, !dbg !10149
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10149
  %3 = zext i1 %cmp1 to i64, !dbg !10149
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10149
  br label %cond.end, !dbg !10147

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10147
  %conv4 = sext i32 %cond3 to i64, !dbg !10150
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10151
  %add = add i64 %4, %conv4, !dbg !10151
  store i64 %add, i64* %prefix_length, align 8, !dbg !10151
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10152
  %call = call i8* @last_component(i8* %5) #14, !dbg !10154
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10155
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10156
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10156
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10156
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10157
  br label %for.cond, !dbg !10158

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10159
  %8 = load i64, i64* %length, align 8, !dbg !10161
  %cmp5 = icmp ult i64 %7, %8, !dbg !10162
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10163

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10164
  %10 = load i64, i64* %length, align 8, !dbg !10164
  %sub = sub i64 %10, 1, !dbg !10164
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10164, !ctir !116
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10164
  %conv8 = sext i8 %11 to i32, !dbg !10164
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10164
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10166

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10167

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10164

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10168
  %dec = add i64 %12, -1, !dbg !10168
  store i64 %dec, i64* %length, align 8, !dbg !10168
  br label %for.cond, !dbg !10169, !llvm.loop !10170

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10172
  ret i64 %13, !dbg !10173
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10174 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !55
  %append_dot = alloca i8, align 1, !ctir !142
  %dir = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10177, metadata !DIExpression()), !dbg !10178
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10179
  %call = call i64 @dir_len(i8* %0) #14, !dbg !10180
  store i64 %call, i64* %length, align 8, !dbg !10178
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10181, metadata !DIExpression()), !dbg !10182
  %1 = load i64, i64* %length, align 8, !dbg !10183
  %cmp = icmp eq i64 %1, 0, !dbg !10184
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10185

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10185

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10182
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10182
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10186, metadata !DIExpression()), !dbg !10187
  %3 = load i64, i64* %length, align 8, !dbg !10188
  %4 = load i8, i8* %append_dot, align 1, !dbg !10189
  %tobool = trunc i8 %4 to i1, !dbg !10189
  %conv = zext i1 %tobool to i64, !dbg !10189
  %add = add i64 %3, %conv, !dbg !10190
  %add1 = add i64 %add, 1, !dbg !10191
  %call2 = call noalias i8* @malloc(i64 %add1) #10, !dbg !10192
  store i8* %call2, i8** %dir, align 8, !dbg !10187
  %5 = load i8*, i8** %dir, align 8, !dbg !10193
  %tobool3 = icmp ne i8* %5, null, !dbg !10193
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10195

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10196
  br label %return, !dbg !10196

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10197
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10198
  %8 = load i64, i64* %length, align 8, !dbg !10199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10200
  %9 = load i8, i8* %append_dot, align 1, !dbg !10201
  %tobool4 = trunc i8 %9 to i1, !dbg !10201
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10203

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10204
  %11 = load i64, i64* %length, align 8, !dbg !10205
  %inc = add i64 %11, 1, !dbg !10205
  store i64 %inc, i64* %length, align 8, !dbg !10205
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10204, !ctir !9
  store i8 46, i8* %arrayidx, align 1, !dbg !10206
  br label %if.end6, !dbg !10204

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10207
  %13 = load i64, i64* %length, align 8, !dbg !10208
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10207, !ctir !9
  store i8 0, i8* %arrayidx7, align 1, !dbg !10209
  %14 = load i8*, i8** %dir, align 8, !dbg !10210
  store i8* %14, i8** %retval, align 8, !dbg !10211
  br label %return, !dbg !10211

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10212
  ret i8* %15, !dbg !10212
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10213 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !116
  %p = alloca i8*, align 8, !ctir !116
  %saw_slash = alloca i8, align 1, !ctir !142
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10215, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10217, metadata !DIExpression()), !dbg !10218
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10219
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10220, !ctir !117
  store i8* %add.ptr, i8** %base, align 8, !dbg !10218
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10221, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10223, metadata !DIExpression()), !dbg !10224
  store i8 0, i8* %saw_slash, align 1, !dbg !10224
  br label %while.cond, !dbg !10225

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10226
  %2 = load i8, i8* %1, align 1, !dbg !10226, !ctir !117
  %conv = sext i8 %2 to i32, !dbg !10226
  %cmp = icmp eq i32 %conv, 47, !dbg !10226
  br i1 %cmp, label %while.body, label %while.end, !dbg !10225

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10227
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10227, !ctir !117
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10227
  br label %while.cond, !dbg !10225, !llvm.loop !10228

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10229
  store i8* %4, i8** %p, align 8, !dbg !10231
  br label %for.cond, !dbg !10232

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10233
  %6 = load i8, i8* %5, align 1, !dbg !10235, !ctir !117
  %tobool = icmp ne i8 %6, 0, !dbg !10236
  br i1 %tobool, label %for.body, label %for.end, !dbg !10236

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10237
  %8 = load i8, i8* %7, align 1, !dbg !10237, !ctir !117
  %conv2 = sext i8 %8 to i32, !dbg !10237
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10237
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10240

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10241
  br label %if.end7, !dbg !10242

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10243
  %tobool5 = trunc i8 %9 to i1, !dbg !10243
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10245

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10246
  store i8* %10, i8** %base, align 8, !dbg !10248
  store i8 0, i8* %saw_slash, align 1, !dbg !10249
  br label %if.end, !dbg !10250

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10251

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10252
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10252, !ctir !117
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10252
  br label %for.cond, !dbg !10253, !llvm.loop !10254

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10256
  ret i8* %12, !dbg !10257
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10258 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !55
  %prefix_len = alloca i64, align 8, !ctir !55
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10259, metadata !DIExpression()), !dbg !10260
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10261, metadata !DIExpression()), !dbg !10262
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10263, metadata !DIExpression()), !dbg !10264
  store i64 0, i64* %prefix_len, align 8, !dbg !10264
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10265
  %call = call i64 @strlen(i8* %0) #14, !dbg !10267
  store i64 %call, i64* %len, align 8, !dbg !10268
  br label %for.cond, !dbg !10269

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10270
  %cmp = icmp ult i64 1, %1, !dbg !10272
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10273

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10274
  %3 = load i64, i64* %len, align 8, !dbg !10274
  %sub = sub i64 %3, 1, !dbg !10274
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10274, !ctir !116
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10274
  %conv = sext i8 %4 to i32, !dbg !10274
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10274
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10275
  br i1 %5, label %for.body, label %for.end, !dbg !10276

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10277

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10278
  %dec = add i64 %6, -1, !dbg !10278
  store i64 %dec, i64* %len, align 8, !dbg !10278
  br label %for.cond, !dbg !10279, !llvm.loop !10280

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10282
  ret i64 %7, !dbg !10283
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strip_trailing_slashes(i8* %file) #4 !dbg !10284 {
entry:
  %file.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %base_lim = alloca i8*, align 8, !ctir !9
  %had_slash = alloca i8, align 1, !ctir !142
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10288, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10290, metadata !DIExpression()), !dbg !10291
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10292
  %call = call i8* @last_component(i8* %0) #14, !dbg !10293
  store i8* %call, i8** %base, align 8, !dbg !10291
  call void @llvm.dbg.declare(metadata i8** %base_lim, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.declare(metadata i8* %had_slash, metadata !10296, metadata !DIExpression()), !dbg !10297
  %1 = load i8*, i8** %base, align 8, !dbg !10298
  %2 = load i8, i8* %1, align 1, !dbg !10300, !ctir !10
  %tobool = icmp ne i8 %2, 0, !dbg !10300
  br i1 %tobool, label %if.end, label %if.then, !dbg !10301

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !10302
  store i8* %3, i8** %base, align 8, !dbg !10303
  br label %if.end, !dbg !10304

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %base, align 8, !dbg !10305
  %5 = load i8*, i8** %base, align 8, !dbg !10306
  %call1 = call i64 @base_len(i8* %5) #14, !dbg !10307
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %call1, !dbg !10308, !ctir !10
  store i8* %add.ptr, i8** %base_lim, align 8, !dbg !10309
  %6 = load i8*, i8** %base_lim, align 8, !dbg !10310
  %7 = load i8, i8* %6, align 1, !dbg !10311, !ctir !10
  %conv = sext i8 %7 to i32, !dbg !10311
  %cmp = icmp ne i32 %conv, 0, !dbg !10312
  %frombool = zext i1 %cmp to i8, !dbg !10313
  store i8 %frombool, i8* %had_slash, align 1, !dbg !10313
  %8 = load i8*, i8** %base_lim, align 8, !dbg !10314
  store i8 0, i8* %8, align 1, !dbg !10315, !ctir !10
  %9 = load i8, i8* %had_slash, align 1, !dbg !10316
  %tobool3 = trunc i8 %9 to i1, !dbg !10316
  ret i1 %tobool3, !dbg !10317
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !10318 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10323, metadata !DIExpression()), !dbg !10324
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10325, metadata !DIExpression()), !dbg !10326
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10327, metadata !DIExpression()), !dbg !10328
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10329, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10331, metadata !DIExpression()), !dbg !10333
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10333
  %1 = load i64, i64* %offset.addr, align 8, !dbg !10333
  %2 = load i64, i64* %len.addr, align 8, !dbg !10333
  %3 = load i32, i32* %advice.addr, align 4, !dbg !10333
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #10, !dbg !10333
  store i32 %call, i32* %__x, align 4, !dbg !10333
  %4 = load i32, i32* %__x, align 4, !dbg !10333
  ret void, !dbg !10334
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !10335 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10372, metadata !DIExpression()), !dbg !10373
  store i32 %advice, i32* %advice.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10374, metadata !DIExpression()), !dbg !10375
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10376
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10376
  br i1 %tobool, label %if.then, label %if.end, !dbg !10378

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10379
  %call = call i32 @fileno(%struct._IO_FILE* %1) #10, !dbg !10380
  %2 = load i32, i32* %advice.addr, align 4, !dbg !10381
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !10382
  br label %if.end, !dbg !10382

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10383
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !10384 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !239
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1319
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10388, metadata !DIExpression()), !dbg !10389
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10392, metadata !DIExpression()), !dbg !10393
  store i32 0, i32* %mode, align 4, !dbg !10393
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10394
  %and = and i32 %0, 64, !dbg !10396
  %tobool = icmp ne i32 %and, 0, !dbg !10396
  br i1 %tobool, label %if.then, label %if.end, !dbg !10397

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !10398, metadata !DIExpression()), !dbg !10400
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10401, !ctir !1319
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !10401
  call void @llvm.va_start(i8* %arraydecay1), !dbg !10401
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10402, !ctir !1319
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !10402
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !10402
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !10402
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10402

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !10402
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !10402
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !10402
  %3 = bitcast i8* %2 to i32*, !dbg !10402
  %4 = add i32 %gp_offset, 8, !dbg !10402
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !10402
  br label %vaarg.end, !dbg !10402

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !10402
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10402
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !10402
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !10402
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10402
  br label %vaarg.end, !dbg !10402

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !10402
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !10402
  store i32 %6, i32* %mode, align 4, !dbg !10403
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10404, !ctir !1319
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !10404
  call void @llvm.va_end(i8* %arraydecay34), !dbg !10404
  br label %if.end, !dbg !10405

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10406
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10407
  %9 = load i32, i32* %mode, align 4, !dbg !10408
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !10409
  %call5 = call i32 @fd_safer(i32 %call), !dbg !10410
  ret i32 %call5, !dbg !10411
}

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !10412 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1331
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1331
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10439, metadata !DIExpression()), !dbg !10440
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10441, metadata !DIExpression()), !dbg !10442
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10443, metadata !DIExpression()), !dbg !10444
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10445, metadata !DIExpression()), !dbg !10446
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10447
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10449
  br i1 %cmp, label %if.then, label %if.end, !dbg !10450

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10451

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10452
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10452
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10453
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10454
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10455
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10456
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10457, !ctir !1332
  store i8* %call1, i8** %name, align 8, !dbg !10458, !ctir !9
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10459
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10460, !ctir !10417
  %5 = load i64, i64* %st_ino, align 8, !dbg !10460, !ctir !260
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10461
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10462, !ctir !1332
  store i64 %5, i64* %st_ino2, align 8, !dbg !10463, !ctir !259
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10464
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10465, !ctir !10417
  %8 = load i64, i64* %st_dev, align 8, !dbg !10465, !ctir !263
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10466
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10467, !ctir !1332
  store i64 %8, i64* %st_dev3, align 8, !dbg !10468, !ctir !262
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10469, metadata !DIExpression()), !dbg !10471
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10472
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10473
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10473
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10474
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10474
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10471
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10475
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10477
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10478

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !10479
  unreachable, !dbg !10479

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10481
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10483
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10484
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10485

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10486
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10486
  call void @triple_free(i8* %18), !dbg !10488
  br label %if.end10, !dbg !10489

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !10491 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1332
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10496, metadata !DIExpression()), !dbg !10497
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10498, metadata !DIExpression()), !dbg !10499
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10500, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10502, metadata !DIExpression()), !dbg !10503
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10504
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10506
  br i1 %cmp, label %if.then, label %if.end, !dbg !10507

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10508
  br label %return, !dbg !10508

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10509
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10510, !ctir !1332
  store i8* %1, i8** %name, align 8, !dbg !10511, !ctir !9
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10512
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10513, !ctir !10417
  %3 = load i64, i64* %st_ino, align 8, !dbg !10513, !ctir !260
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10514, !ctir !1332
  store i64 %3, i64* %st_ino1, align 8, !dbg !10515, !ctir !259
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10516
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10517, !ctir !10417
  %5 = load i64, i64* %st_dev, align 8, !dbg !10517, !ctir !263
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10518, !ctir !1332
  store i64 %5, i64* %st_dev2, align 8, !dbg !10519, !ctir !262
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10520
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10521
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10522
  %tobool = icmp ne i8* %call, null, !dbg !10523
  %lnot = xor i1 %tobool, true, !dbg !10523
  %lnot3 = xor i1 %lnot, true, !dbg !10524
  store i1 %lnot3, i1* %retval, align 1, !dbg !10525
  br label %return, !dbg !10525

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10526
  ret i1 %8, !dbg !10526
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @file_type(%struct.stat* %st) #9 !dbg !10527 {
entry:
  %retval = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !10554, metadata !DIExpression()), !dbg !10555
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10556
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10556, !ctir !10532
  %1 = load i32, i32* %st_mode, align 8, !dbg !10556, !ctir !168
  %and = and i32 %1, 61440, !dbg !10556
  %cmp = icmp eq i32 %and, 32768, !dbg !10556
  br i1 %cmp, label %if.then, label %if.end, !dbg !10558

if.then:                                          ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10559
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 8, !dbg !10560, !ctir !10532
  %3 = load i64, i64* %st_size, align 8, !dbg !10560, !ctir !29
  %cmp1 = icmp eq i64 %3, 0, !dbg !10561
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !10559

cond.true:                                        ; preds = %if.then
  %call = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.245, i64 0, i64 0)) #10, !dbg !10562
  br label %cond.end, !dbg !10559

cond.false:                                       ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.246, i64 0, i64 0)) #10, !dbg !10563
  br label %cond.end, !dbg !10559

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !10559
  store i8* %cond, i8** %retval, align 8, !dbg !10564
  br label %return, !dbg !10564

if.end:                                           ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10565
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !10565, !ctir !10532
  %5 = load i32, i32* %st_mode3, align 8, !dbg !10565, !ctir !168
  %and4 = and i32 %5, 61440, !dbg !10565
  %cmp5 = icmp eq i32 %and4, 16384, !dbg !10565
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !10567

if.then6:                                         ; preds = %if.end
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.247, i64 0, i64 0)) #10, !dbg !10568
  store i8* %call7, i8** %retval, align 8, !dbg !10569
  br label %return, !dbg !10569

if.end8:                                          ; preds = %if.end
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10570
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !10570, !ctir !10532
  %7 = load i32, i32* %st_mode9, align 8, !dbg !10570, !ctir !168
  %and10 = and i32 %7, 61440, !dbg !10570
  %cmp11 = icmp eq i32 %and10, 40960, !dbg !10570
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !10572

if.then12:                                        ; preds = %if.end8
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.248, i64 0, i64 0)) #10, !dbg !10573
  store i8* %call13, i8** %retval, align 8, !dbg !10574
  br label %return, !dbg !10574

if.end14:                                         ; preds = %if.end8
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10575
  %st_mode15 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10575, !ctir !10532
  %9 = load i32, i32* %st_mode15, align 8, !dbg !10575, !ctir !168
  %10 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10575
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10575, !ctir !10532
  %11 = load i32, i32* %st_mode16, align 8, !dbg !10575, !ctir !168
  %sub = sub i32 %9, %11, !dbg !10575
  %tobool = icmp ne i32 %sub, 0, !dbg !10575
  br i1 %tobool, label %if.then17, label %if.end19, !dbg !10577

if.then17:                                        ; preds = %if.end14
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.249, i64 0, i64 0)) #10, !dbg !10578
  store i8* %call18, i8** %retval, align 8, !dbg !10579
  br label %return, !dbg !10579

if.end19:                                         ; preds = %if.end14
  %12 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10580
  %st_mode20 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !10580, !ctir !10532
  %13 = load i32, i32* %st_mode20, align 8, !dbg !10580, !ctir !168
  %14 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10580
  %st_mode21 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !10580, !ctir !10532
  %15 = load i32, i32* %st_mode21, align 8, !dbg !10580, !ctir !168
  %sub22 = sub i32 %13, %15, !dbg !10580
  %tobool23 = icmp ne i32 %sub22, 0, !dbg !10580
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !10582

if.then24:                                        ; preds = %if.end19
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.250, i64 0, i64 0)) #10, !dbg !10583
  store i8* %call25, i8** %retval, align 8, !dbg !10584
  br label %return, !dbg !10584

if.end26:                                         ; preds = %if.end19
  %16 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10585
  %st_mode27 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !10585, !ctir !10532
  %17 = load i32, i32* %st_mode27, align 8, !dbg !10585, !ctir !168
  %18 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10585
  %st_mode28 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !10585, !ctir !10532
  %19 = load i32, i32* %st_mode28, align 8, !dbg !10585, !ctir !168
  %sub29 = sub i32 %17, %19, !dbg !10585
  %tobool30 = icmp ne i32 %sub29, 0, !dbg !10585
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !10587

if.then31:                                        ; preds = %if.end26
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.251, i64 0, i64 0)) #10, !dbg !10588
  store i8* %call32, i8** %retval, align 8, !dbg !10589
  br label %return, !dbg !10589

if.end33:                                         ; preds = %if.end26
  %20 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10590
  %st_mode34 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 3, !dbg !10590, !ctir !10532
  %21 = load i32, i32* %st_mode34, align 8, !dbg !10590, !ctir !168
  %and35 = and i32 %21, 61440, !dbg !10590
  %cmp36 = icmp eq i32 %and35, 24576, !dbg !10590
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !10592

if.then37:                                        ; preds = %if.end33
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.252, i64 0, i64 0)) #10, !dbg !10593
  store i8* %call38, i8** %retval, align 8, !dbg !10594
  br label %return, !dbg !10594

if.end39:                                         ; preds = %if.end33
  %22 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10595
  %st_mode40 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3, !dbg !10595, !ctir !10532
  %23 = load i32, i32* %st_mode40, align 8, !dbg !10595, !ctir !168
  %and41 = and i32 %23, 61440, !dbg !10595
  %cmp42 = icmp eq i32 %and41, 8192, !dbg !10595
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !10597

if.then43:                                        ; preds = %if.end39
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.253, i64 0, i64 0)) #10, !dbg !10598
  store i8* %call44, i8** %retval, align 8, !dbg !10599
  br label %return, !dbg !10599

if.end45:                                         ; preds = %if.end39
  %24 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10600
  %st_mode46 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 3, !dbg !10600, !ctir !10532
  %25 = load i32, i32* %st_mode46, align 8, !dbg !10600, !ctir !168
  %and47 = and i32 %25, 61440, !dbg !10600
  %cmp48 = icmp eq i32 %and47, 4096, !dbg !10600
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !10602

if.then49:                                        ; preds = %if.end45
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.254, i64 0, i64 0)) #10, !dbg !10603
  store i8* %call50, i8** %retval, align 8, !dbg !10604
  br label %return, !dbg !10604

if.end51:                                         ; preds = %if.end45
  %26 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !10605
  %st_mode52 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !10605, !ctir !10532
  %27 = load i32, i32* %st_mode52, align 8, !dbg !10605, !ctir !168
  %and53 = and i32 %27, 61440, !dbg !10605
  %cmp54 = icmp eq i32 %and53, 49152, !dbg !10605
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !10607

if.then55:                                        ; preds = %if.end51
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.255, i64 0, i64 0)) #10, !dbg !10608
  store i8* %call56, i8** %retval, align 8, !dbg !10609
  br label %return, !dbg !10609

if.end57:                                         ; preds = %if.end51
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.256, i64 0, i64 0)) #10, !dbg !10610
  store i8* %call58, i8** %retval, align 8, !dbg !10611
  br label %return, !dbg !10611

return:                                           ; preds = %if.end57, %if.then55, %if.then49, %if.then43, %if.then37, %if.then31, %if.then24, %if.then17, %if.then12, %if.then6, %cond.end
  %28 = load i8*, i8** %retval, align 8, !dbg !10612
  ret i8* %28, !dbg !10612
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !10613 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10617, metadata !DIExpression()), !dbg !10618
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10619, metadata !DIExpression()), !dbg !10620
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10621
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10622
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10623
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10623, !ctir !9
  store i8 %call, i8* %arrayidx, align 1, !dbg !10624
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10625
  %and = and i32 %2, 256, !dbg !10626
  %tobool = icmp ne i32 %and, 0, !dbg !10625
  %3 = zext i1 %tobool to i64, !dbg !10625
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10625
  %conv = trunc i32 %cond to i8, !dbg !10625
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10627
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10627, !ctir !9
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10628
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10629
  %and2 = and i32 %5, 128, !dbg !10630
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10629
  %6 = zext i1 %tobool3 to i64, !dbg !10629
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10629
  %conv5 = trunc i32 %cond4 to i8, !dbg !10629
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10631
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10631, !ctir !9
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10632
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10633
  %and7 = and i32 %8, 2048, !dbg !10634
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10634
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10633

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10635
  %and9 = and i32 %9, 64, !dbg !10636
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10635
  %10 = zext i1 %tobool10 to i64, !dbg !10635
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10635
  br label %cond.end, !dbg !10633

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10637
  %and12 = and i32 %11, 64, !dbg !10638
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10637
  %12 = zext i1 %tobool13 to i64, !dbg !10637
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10637
  br label %cond.end, !dbg !10633

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10633
  %conv16 = trunc i32 %cond15 to i8, !dbg !10639
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10640
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10640, !ctir !9
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10641
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10642
  %and18 = and i32 %14, 32, !dbg !10643
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10642
  %15 = zext i1 %tobool19 to i64, !dbg !10642
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10642
  %conv21 = trunc i32 %cond20 to i8, !dbg !10642
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10644
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10644, !ctir !9
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10645
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10646
  %and23 = and i32 %17, 16, !dbg !10647
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10646
  %18 = zext i1 %tobool24 to i64, !dbg !10646
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10646
  %conv26 = trunc i32 %cond25 to i8, !dbg !10646
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10648
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10648, !ctir !9
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10649
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10650
  %and28 = and i32 %20, 1024, !dbg !10651
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10651
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10650

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10652
  %and31 = and i32 %21, 8, !dbg !10653
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10652
  %22 = zext i1 %tobool32 to i64, !dbg !10652
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10652
  br label %cond.end38, !dbg !10650

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10654
  %and35 = and i32 %23, 8, !dbg !10655
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10654
  %24 = zext i1 %tobool36 to i64, !dbg !10654
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10654
  br label %cond.end38, !dbg !10650

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10650
  %conv40 = trunc i32 %cond39 to i8, !dbg !10656
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10657
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10657, !ctir !9
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10658
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10659
  %and42 = and i32 %26, 4, !dbg !10660
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10659
  %27 = zext i1 %tobool43 to i64, !dbg !10659
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10659
  %conv45 = trunc i32 %cond44 to i8, !dbg !10659
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10661
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10661, !ctir !9
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10662
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10663
  %and47 = and i32 %29, 2, !dbg !10664
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10663
  %30 = zext i1 %tobool48 to i64, !dbg !10663
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10663
  %conv50 = trunc i32 %cond49 to i8, !dbg !10663
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10665
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10665, !ctir !9
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10666
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10667
  %and52 = and i32 %32, 512, !dbg !10668
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10668
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10667

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10669
  %and55 = and i32 %33, 1, !dbg !10670
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10669
  %34 = zext i1 %tobool56 to i64, !dbg !10669
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10669
  br label %cond.end62, !dbg !10667

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10671
  %and59 = and i32 %35, 1, !dbg !10672
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10671
  %36 = zext i1 %tobool60 to i64, !dbg !10671
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10671
  br label %cond.end62, !dbg !10667

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10667
  %conv64 = trunc i32 %cond63 to i8, !dbg !10673
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10674
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10674, !ctir !9
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10675
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10676
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10676, !ctir !9
  store i8 32, i8* %arrayidx66, align 1, !dbg !10677
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10678
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10678, !ctir !9
  store i8 0, i8* %arrayidx67, align 1, !dbg !10679
  ret void, !dbg !10680
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !10681 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10684, metadata !DIExpression()), !dbg !10685
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10686
  %and = and i32 %0, 61440, !dbg !10686
  %cmp = icmp eq i32 %and, 32768, !dbg !10686
  br i1 %cmp, label %if.then, label %if.end, !dbg !10688

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10689
  br label %return, !dbg !10689

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10690
  %and1 = and i32 %1, 61440, !dbg !10690
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10690
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10692

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10693
  br label %return, !dbg !10693

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10694
  %and5 = and i32 %2, 61440, !dbg !10694
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10694
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10696

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10697
  br label %return, !dbg !10697

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10698
  %and9 = and i32 %3, 61440, !dbg !10698
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10698
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10700

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10701
  br label %return, !dbg !10701

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10702
  %and13 = and i32 %4, 61440, !dbg !10702
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10702
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10704

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10705
  br label %return, !dbg !10705

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10706
  %and17 = and i32 %5, 61440, !dbg !10706
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10706
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10708

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10709
  br label %return, !dbg !10709

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10710
  %and21 = and i32 %6, 61440, !dbg !10710
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10710
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10712

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10713
  br label %return, !dbg !10713

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10714
  br label %return, !dbg !10714

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10715
  ret i8 %7, !dbg !10715
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !10716 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10742, metadata !DIExpression()), !dbg !10743
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10744, metadata !DIExpression()), !dbg !10745
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10746
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10747, !ctir !10720
  %1 = load i32, i32* %st_mode, align 8, !dbg !10747, !ctir !168
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10748
  call void @strmode(i32 %1, i8* %2), !dbg !10749
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10750
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10750, !ctir !10720
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10750, !ctir !168
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10750
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10750, !ctir !10720
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10750, !ctir !168
  %sub = sub i32 %4, %6, !dbg !10750
  %tobool = icmp ne i32 %sub, 0, !dbg !10750
  br i1 %tobool, label %if.then, label %if.else, !dbg !10752

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10753
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10753, !ctir !9
  store i8 70, i8* %arrayidx, align 1, !dbg !10754
  br label %if.end18, !dbg !10753

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10755
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10755, !ctir !10720
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10755, !ctir !168
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10755
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10755, !ctir !10720
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10755, !ctir !168
  %sub5 = sub i32 %9, %11, !dbg !10755
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10755
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10758

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10759
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10759, !ctir !9
  store i8 81, i8* %arrayidx8, align 1, !dbg !10760
  br label %if.end17, !dbg !10759

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10761
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10761, !ctir !10720
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10761, !ctir !168
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10761
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10761, !ctir !10720
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10761, !ctir !168
  %sub12 = sub i32 %14, %16, !dbg !10761
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10761
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10763

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10764
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10764, !ctir !9
  store i8 83, i8* %arrayidx15, align 1, !dbg !10765
  br label %if.end, !dbg !10764

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10766
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10767 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10771, metadata !DIExpression()), !dbg !10772
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10773, metadata !DIExpression()), !dbg !10774
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10775, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10777, metadata !DIExpression()), !dbg !10778
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10779
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10780
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10781
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10782
  store i8* %call, i8** %p, align 8, !dbg !10778
  %3 = load i8*, i8** %p, align 8, !dbg !10783
  %cmp = icmp eq i8* %3, null, !dbg !10785
  br i1 %cmp, label %if.then, label %if.end, !dbg !10786

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10787
  unreachable, !dbg !10787

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10788
  ret i8* %4, !dbg !10789
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10790 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !116
  %dirbaselen = alloca i64, align 8, !ctir !55
  %dirlen = alloca i64, align 8, !ctir !55
  %baselen = alloca i64, align 8, !ctir !55
  %sep = alloca i8, align 1, !ctir !10
  %p_concat = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10792, metadata !DIExpression()), !dbg !10793
  store i8* %base, i8** %base.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10794, metadata !DIExpression()), !dbg !10795
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10796, metadata !DIExpression()), !dbg !10797
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10798, metadata !DIExpression()), !dbg !10799
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10800
  %call = call i8* @last_component(i8* %0) #14, !dbg !10801
  store i8* %call, i8** %dirbase, align 8, !dbg !10799
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !10802, metadata !DIExpression()), !dbg !10803
  %1 = load i8*, i8** %dirbase, align 8, !dbg !10804
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10805
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !10803
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !10806, metadata !DIExpression()), !dbg !10807
  %2 = load i8*, i8** %dirbase, align 8, !dbg !10808
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !10809
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10810
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10810
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10810
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !10811
  %add = add i64 %sub.ptr.sub, %4, !dbg !10812
  store i64 %add, i64* %dirlen, align 8, !dbg !10807
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10813, metadata !DIExpression()), !dbg !10814
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10815
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !10816
  store i64 %call2, i64* %baselen, align 8, !dbg !10814
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !10817, metadata !DIExpression()), !dbg !10818
  store i8 0, i8* %sep, align 1, !dbg !10818
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !10819
  %tobool = icmp ne i64 %6, 0, !dbg !10819
  br i1 %tobool, label %if.then, label %if.else, !dbg !10821

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !10822
  %8 = load i64, i64* %dirlen, align 8, !dbg !10822
  %sub = sub i64 %8, 1, !dbg !10822
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !10822, !ctir !116
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10822
  %conv = sext i8 %9 to i32, !dbg !10822
  %cmp = icmp eq i32 %conv, 47, !dbg !10822
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10825

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !10826
  %11 = load i8, i8* %10, align 1, !dbg !10826, !ctir !117
  %conv4 = sext i8 %11 to i32, !dbg !10826
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !10826
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !10827

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !10828
  br label %if.end, !dbg !10829

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !10830

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !10831
  %13 = load i8, i8* %12, align 1, !dbg !10831, !ctir !117
  %conv8 = sext i8 %13 to i32, !dbg !10831
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10831
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10833

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !10834
  br label %if.end12, !dbg !10836

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !10837, metadata !DIExpression()), !dbg !10838
  %14 = load i64, i64* %dirlen, align 8, !dbg !10839
  %15 = load i8, i8* %sep, align 1, !dbg !10840
  %conv14 = sext i8 %15 to i32, !dbg !10840
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !10841
  %conv16 = zext i1 %cmp15 to i32, !dbg !10841
  %conv17 = sext i32 %conv16 to i64, !dbg !10842
  %add18 = add i64 %14, %conv17, !dbg !10843
  %16 = load i64, i64* %baselen, align 8, !dbg !10844
  %add19 = add i64 %add18, %16, !dbg !10845
  %add20 = add i64 %add19, 1, !dbg !10846
  %call21 = call noalias i8* @malloc(i64 %add20) #10, !dbg !10847
  store i8* %call21, i8** %p_concat, align 8, !dbg !10838
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10848, metadata !DIExpression()), !dbg !10849
  %17 = load i8*, i8** %p_concat, align 8, !dbg !10850
  %cmp22 = icmp eq i8* %17, null, !dbg !10852
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10853

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !10854
  br label %return, !dbg !10854

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !10855
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !10856
  %20 = load i64, i64* %dirlen, align 8, !dbg !10857
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #10, !dbg !10858
  store i8* %call26, i8** %p, align 8, !dbg !10859
  %21 = load i8, i8* %sep, align 1, !dbg !10860
  %22 = load i8*, i8** %p, align 8, !dbg !10861
  store i8 %21, i8* %22, align 1, !dbg !10862, !ctir !10
  %23 = load i8, i8* %sep, align 1, !dbg !10863
  %conv27 = sext i8 %23 to i32, !dbg !10863
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10864
  %conv29 = zext i1 %cmp28 to i32, !dbg !10864
  %24 = load i8*, i8** %p, align 8, !dbg !10865
  %idx.ext = sext i32 %conv29 to i64, !dbg !10865
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !10865, !ctir !10
  store i8* %add.ptr, i8** %p, align 8, !dbg !10865
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10866
  %tobool30 = icmp ne i8** %25, null, !dbg !10866
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10868

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !10869
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10870
  store i8* %26, i8** %27, align 8, !dbg !10871, !ctir !9
  br label %if.end32, !dbg !10872

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !10873
  %29 = load i8*, i8** %base.addr, align 8, !dbg !10874
  %30 = load i64, i64* %baselen, align 8, !dbg !10875
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #10, !dbg !10876
  store i8* %call33, i8** %p, align 8, !dbg !10877
  %31 = load i8*, i8** %p, align 8, !dbg !10878
  store i8 0, i8* %31, align 1, !dbg !10879, !ctir !10
  %32 = load i8*, i8** %p_concat, align 8, !dbg !10880
  store i8* %32, i8** %retval, align 8, !dbg !10881
  br label %return, !dbg !10881

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !10882
  ret i8* %33, !dbg !10882
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !10883 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !116
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10887, metadata !DIExpression()), !dbg !10888
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  call void @llvm.dbg.declare(metadata i64* %total, metadata !10893, metadata !DIExpression()), !dbg !10894
  store i64 0, i64* %total, align 8, !dbg !10894
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10895, metadata !DIExpression()), !dbg !10896
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10897
  store i8* %0, i8** %ptr, align 8, !dbg !10896
  br label %while.cond, !dbg !10898

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10899
  %cmp = icmp ugt i64 %1, 0, !dbg !10900
  br i1 %cmp, label %while.body, label %while.end, !dbg !10898

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !10901, metadata !DIExpression()), !dbg !10903
  %2 = load i32, i32* %fd.addr, align 4, !dbg !10904
  %3 = load i8*, i8** %ptr, align 8, !dbg !10905
  %4 = load i64, i64* %count.addr, align 8, !dbg !10906
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !10907
  store i64 %call, i64* %n_rw, align 8, !dbg !10903
  %5 = load i64, i64* %n_rw, align 8, !dbg !10908
  %cmp1 = icmp eq i64 %5, -1, !dbg !10910
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10911

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10912

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !10913
  %cmp2 = icmp eq i64 %6, 0, !dbg !10915
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10916

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #15, !dbg !10917
  store i32 28, i32* %call4, align 4, !dbg !10919, !ctir !7
  br label %while.end, !dbg !10920

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !10921
  %8 = load i64, i64* %total, align 8, !dbg !10922
  %add = add i64 %8, %7, !dbg !10922
  store i64 %add, i64* %total, align 8, !dbg !10922
  %9 = load i64, i64* %n_rw, align 8, !dbg !10923
  %10 = load i8*, i8** %ptr, align 8, !dbg !10924
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !10924, !ctir !117
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10924
  %11 = load i64, i64* %n_rw, align 8, !dbg !10925
  %12 = load i64, i64* %count.addr, align 8, !dbg !10926
  %sub = sub i64 %12, %11, !dbg !10926
  store i64 %sub, i64* %count.addr, align 8, !dbg !10926
  br label %while.cond, !dbg !10898, !llvm.loop !10927

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !10929
  ret i64 %13, !dbg !10930
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !10931 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10937
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !10938, !ctir !675
  %1 = load i64, i64* %n_buckets, align 8, !dbg !10938, !ctir !55
  ret i64 %1, !dbg !10939
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !10940 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10941, metadata !DIExpression()), !dbg !10942
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10943
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !10944, !ctir !675
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !10944, !ctir !55
  ret i64 %1, !dbg !10945
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !10946 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10947, metadata !DIExpression()), !dbg !10948
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10949
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !10950, !ctir !675
  %1 = load i64, i64* %n_entries, align 8, !dbg !10950, !ctir !55
  ret i64 %1, !dbg !10951
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !10952 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !687
  %max_bucket_length = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !687
  %bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !10953, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !10955, metadata !DIExpression()), !dbg !10956
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !10957, metadata !DIExpression()), !dbg !10958
  store i64 0, i64* %max_bucket_length, align 8, !dbg !10958
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10959
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !10961, !ctir !675
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !10961, !ctir !681
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !10962
  br label %for.cond, !dbg !10963

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10964
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !10966
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !10967, !ctir !675
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !10967, !ctir !687
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !10968
  br i1 %cmp, label %for.body, label %for.end, !dbg !10969

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10970
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !10973, !ctir !688
  %6 = load i8*, i8** %data, align 8, !dbg !10973, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !10970
  br i1 %tobool, label %if.then, label %if.end5, !dbg !10974

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !10975, metadata !DIExpression()), !dbg !10977
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10978
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !10977
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !10979, metadata !DIExpression()), !dbg !10980
  store i64 1, i64* %bucket_length, align 8, !dbg !10980
  br label %while.cond, !dbg !10981

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10982
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !10983, !ctir !688
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !10983, !ctir !681
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !10984
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !10985
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !10981
  br i1 %tobool2, label %while.body, label %while.end, !dbg !10981

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !10986
  %inc = add i64 %11, 1, !dbg !10986
  store i64 %inc, i64* %bucket_length, align 8, !dbg !10986
  br label %while.cond, !dbg !10981, !llvm.loop !10987

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !10988
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !10990
  %cmp3 = icmp ugt i64 %12, %13, !dbg !10991
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !10992

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !10993
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !10994
  br label %if.end, !dbg !10995

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !10996

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10997

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !10998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !10998, !ctir !688
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !10998
  br label %for.cond, !dbg !10999, !llvm.loop !11000

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11002
  ret i64 %16, !dbg !11003
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11004 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !687
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %n_entries = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !687
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11007, metadata !DIExpression()), !dbg !11008
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11009, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11011, metadata !DIExpression()), !dbg !11012
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11012
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11013, metadata !DIExpression()), !dbg !11014
  store i64 0, i64* %n_entries, align 8, !dbg !11014
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11015
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11017, !ctir !675
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11017, !ctir !681
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11018
  br label %for.cond, !dbg !11019

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11020
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11022
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11023, !ctir !675
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11023, !ctir !687
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11024
  br i1 %cmp, label %for.body, label %for.end, !dbg !11025

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11026
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11029, !ctir !688
  %6 = load i8*, i8** %data, align 8, !dbg !11029, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11026
  br i1 %tobool, label %if.then, label %if.end, !dbg !11030

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11031, metadata !DIExpression()), !dbg !11033
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11034
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11033
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11035
  %inc = add i64 %8, 1, !dbg !11035
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11035
  %9 = load i64, i64* %n_entries, align 8, !dbg !11036
  %inc2 = add i64 %9, 1, !dbg !11036
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11036
  br label %while.cond, !dbg !11037

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11038
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11039, !ctir !688
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11039, !ctir !681
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11040
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11041
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11037
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11037

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11042
  %inc4 = add i64 %13, 1, !dbg !11042
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11042
  br label %while.cond, !dbg !11037, !llvm.loop !11043

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11044

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11045

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11046
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11046, !ctir !688
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11046
  br label %for.cond, !dbg !11047, !llvm.loop !11048

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11050
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11052
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11053, !ctir !675
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11053, !ctir !55
  %cmp6 = icmp eq i64 %15, %17, !dbg !11054
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11055

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11056
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11057
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11058, !ctir !675
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11058, !ctir !55
  %cmp8 = icmp eq i64 %18, %20, !dbg !11059
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11060

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11061
  br label %return, !dbg !11061

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11062
  br label %return, !dbg !11062

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11063
  ret i1 %21, !dbg !11063
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11064 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !55
  %n_buckets = alloca i64, align 8, !ctir !55
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %max_bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11101, metadata !DIExpression()), !dbg !11102
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11103, metadata !DIExpression()), !dbg !11104
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11105, metadata !DIExpression()), !dbg !11106
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11107
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11108
  store i64 %call, i64* %n_entries, align 8, !dbg !11106
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11109, metadata !DIExpression()), !dbg !11110
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11111
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11112
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11110
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11113, metadata !DIExpression()), !dbg !11114
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11115
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11116
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11114
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11117, metadata !DIExpression()), !dbg !11118
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11119
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11120
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11118
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11121
  %5 = load i64, i64* %n_entries, align 8, !dbg !11122
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.265, i64 0, i64 0), i64 %5), !dbg !11123
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11124
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11125
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.266, i64 0, i64 0), i64 %7), !dbg !11126
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11127
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11128
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11129
  %conv = uitofp i64 %10 to double, !dbg !11129
  %mul = fmul double 1.000000e+02, %conv, !dbg !11130
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11131
  %conv6 = uitofp i64 %11 to double, !dbg !11131
  %div = fdiv double %mul, %conv6, !dbg !11132
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.267, i64 0, i64 0), i64 %9, double %div), !dbg !11133
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11134
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11135
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.268, i64 0, i64 0), i64 %13), !dbg !11136
  ret void, !dbg !11137
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11138 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !687
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !687
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11143, metadata !DIExpression()), !dbg !11144
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11145, metadata !DIExpression()), !dbg !11146
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11147
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11148
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11149
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11146
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11150, metadata !DIExpression()), !dbg !11151
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11152
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11154, !ctir !688
  %3 = load i8*, i8** %data, align 8, !dbg !11154, !ctir !53
  %cmp = icmp eq i8* %3, null, !dbg !11155
  br i1 %cmp, label %if.then, label %if.end, !dbg !11156

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11157
  br label %return, !dbg !11157

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11158
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11160
  br label %for.cond, !dbg !11161

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11162
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11164
  br i1 %tobool, label %for.body, label %for.end, !dbg !11164

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11165
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11167
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11168, !ctir !688
  %8 = load i8*, i8** %data2, align 8, !dbg !11168, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !11169
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11170

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11171
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11172, !ctir !675
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11172, !ctir !712
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11173
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11174
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11175, !ctir !688
  %13 = load i8*, i8** %data4, align 8, !dbg !11175, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11171
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11176

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11177
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11178, !ctir !688
  %15 = load i8*, i8** %data7, align 8, !dbg !11178, !ctir !53
  store i8* %15, i8** %retval, align 8, !dbg !11179
  br label %return, !dbg !11179

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11180

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11181
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11182, !ctir !688
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11182, !ctir !681
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11183
  br label %for.cond, !dbg !11184, !llvm.loop !11185

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11187
  br label %return, !dbg !11187

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11188
  ret i8* %18, !dbg !11188
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11189 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11192, metadata !DIExpression()), !dbg !11193
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11194, metadata !DIExpression()), !dbg !11195
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11196, metadata !DIExpression()), !dbg !11197
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11198
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11199, !ctir !675
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11199, !ctir !705
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11200
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11201
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11202, !ctir !675
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11202, !ctir !55
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11198
  store i64 %call, i64* %n, align 8, !dbg !11197
  %5 = load i64, i64* %n, align 8, !dbg !11203
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11205
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11206, !ctir !675
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11206, !ctir !55
  %cmp = icmp ult i64 %5, %7, !dbg !11207
  br i1 %cmp, label %if.end, label %if.then, !dbg !11208

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11209
  unreachable, !dbg !11209

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11210
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11211, !ctir !675
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11211, !ctir !681
  %10 = load i64, i64* %n, align 8, !dbg !11212
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11213, !ctir !682
  ret %struct.hash_entry* %add.ptr, !dbg !11214
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11215 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !687
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11220, metadata !DIExpression()), !dbg !11221
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11222
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11224, !ctir !675
  %1 = load i64, i64* %n_entries, align 8, !dbg !11224, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !11225
  br i1 %cmp, label %if.then, label %if.end, !dbg !11226

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11227
  br label %return, !dbg !11227

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11228
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11230, !ctir !675
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11230, !ctir !681
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11231
  br label %for.cond, !dbg !11232

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11233
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11236
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11237, !ctir !675
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11237, !ctir !687
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11238
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11239

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11240
  unreachable, !dbg !11240

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11241
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11243, !ctir !688
  %8 = load i8*, i8** %data, align 8, !dbg !11243, !ctir !53
  %tobool = icmp ne i8* %8, null, !dbg !11241
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11244

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11245
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11246, !ctir !688
  %10 = load i8*, i8** %data5, align 8, !dbg !11246, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11247
  br label %return, !dbg !11247

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11248

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11249
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11249, !ctir !688
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11249
  br label %for.cond, !dbg !11250, !llvm.loop !11251

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11254
  ret i8* %12, !dbg !11254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11255 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !687
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !687
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11256, metadata !DIExpression()), !dbg !11257
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11258, metadata !DIExpression()), !dbg !11259
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11260, metadata !DIExpression()), !dbg !11261
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11262
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11263
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11264
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11261
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11265, metadata !DIExpression()), !dbg !11266
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11267
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11268
  br label %do.body, !dbg !11269

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11270
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11273, !ctir !688
  %4 = load i8*, i8** %data, align 8, !dbg !11273, !ctir !53
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11274
  %cmp = icmp eq i8* %4, %5, !dbg !11275
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11276

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11277
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11278, !ctir !688
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11278, !ctir !681
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11277
  br i1 %tobool, label %if.then, label %if.end, !dbg !11279

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11280
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11281, !ctir !688
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11281, !ctir !681
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11282, !ctir !682
  %10 = load i8*, i8** %data3, align 8, !dbg !11282, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11283
  br label %return, !dbg !11283

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11284
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11285, !ctir !688
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11285, !ctir !681
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11286
  br label %do.cond, !dbg !11287

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11288
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11289
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11287, !llvm.loop !11290

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11292

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11293
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11293, !ctir !688
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11293
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11294
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11295, !ctir !675
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11295, !ctir !687
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11296
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11292

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11297
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11299, !ctir !688
  %18 = load i8*, i8** %data7, align 8, !dbg !11299, !ctir !53
  %tobool8 = icmp ne i8* %18, null, !dbg !11297
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11300

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11301
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11302, !ctir !688
  %20 = load i8*, i8** %data10, align 8, !dbg !11302, !ctir !53
  store i8* %20, i8** %retval, align 8, !dbg !11303
  br label %return, !dbg !11303

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11292, !llvm.loop !11304

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11306
  br label %return, !dbg !11306

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11307
  ret i8* %21, !dbg !11307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11308 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !687
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !687
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11311, metadata !DIExpression()), !dbg !11312
  store i8** %buffer, i8*** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  store i64 %buffer_size, i64* %buffer_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11317, metadata !DIExpression()), !dbg !11318
  store i64 0, i64* %counter, align 8, !dbg !11318
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11319, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11321, metadata !DIExpression()), !dbg !11322
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11323
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11325, !ctir !675
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11325, !ctir !681
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11326
  br label %for.cond, !dbg !11327

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11328
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11330
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11331, !ctir !675
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11331, !ctir !687
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11332
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11333

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11334
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11337, !ctir !688
  %6 = load i8*, i8** %data, align 8, !dbg !11337, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11334
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11338

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11339
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11342
  br label %for.cond2, !dbg !11343

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11344
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11346
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11346

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11347
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11350
  %cmp5 = icmp uge i64 %9, %10, !dbg !11351
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11352

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11353
  store i64 %11, i64* %retval, align 8, !dbg !11354
  br label %return, !dbg !11354

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11355
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11356, !ctir !688
  %13 = load i8*, i8** %data7, align 8, !dbg !11356, !ctir !53
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11357
  %15 = load i64, i64* %counter, align 8, !dbg !11358
  %inc = add i64 %15, 1, !dbg !11358
  store i64 %inc, i64* %counter, align 8, !dbg !11358
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11357, !ctir !722
  store i8* %13, i8** %arrayidx, align 8, !dbg !11359
  br label %for.inc, !dbg !11360

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11361
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11362, !ctir !688
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11362, !ctir !681
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11363
  br label %for.cond2, !dbg !11364, !llvm.loop !11365

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11367

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11368

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11369
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11369, !ctir !688
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11369
  br label %for.cond, !dbg !11370, !llvm.loop !11371

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11373
  store i64 %19, i64* %retval, align 8, !dbg !11374
  br label %return, !dbg !11374

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11375
  ret i64 %20, !dbg !11375
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11376 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !687
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !687
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11385, metadata !DIExpression()), !dbg !11386
  store i8* %processor_data, i8** %processor_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11389, metadata !DIExpression()), !dbg !11390
  store i64 0, i64* %counter, align 8, !dbg !11390
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11391, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11393, metadata !DIExpression()), !dbg !11394
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11395
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11397, !ctir !675
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11397, !ctir !681
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11398
  br label %for.cond, !dbg !11399

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11400
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11402
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11403, !ctir !675
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11403, !ctir !687
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11404
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11405

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11406
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11409, !ctir !688
  %6 = load i8*, i8** %data, align 8, !dbg !11409, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11406
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11410

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11411
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11414
  br label %for.cond2, !dbg !11415

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11416
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11418
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11418

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11419
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11422
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11423, !ctir !688
  %11 = load i8*, i8** %data5, align 8, !dbg !11423, !ctir !53
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11424
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11419
  br i1 %call, label %if.end, label %if.then6, !dbg !11425

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11426
  store i64 %13, i64* %retval, align 8, !dbg !11427
  br label %return, !dbg !11427

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11428
  %inc = add i64 %14, 1, !dbg !11428
  store i64 %inc, i64* %counter, align 8, !dbg !11428
  br label %for.inc, !dbg !11429

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11430
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11431, !ctir !688
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11431, !ctir !681
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11432
  br label %for.cond2, !dbg !11433, !llvm.loop !11434

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11436

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11437

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11438
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11438, !ctir !688
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11438
  br label %for.cond, !dbg !11439, !llvm.loop !11440

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11442
  store i64 %18, i64* %retval, align 8, !dbg !11443
  br label %return, !dbg !11443

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11444
  ret i64 %19, !dbg !11444
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !11445 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !55
  %ch = alloca i8, align 1, !ctir !450
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11448, metadata !DIExpression()), !dbg !11449
  store i64 %n_buckets, i64* %n_buckets.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11450, metadata !DIExpression()), !dbg !11451
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11452, metadata !DIExpression()), !dbg !11453
  store i64 0, i64* %value, align 8, !dbg !11453
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11454, metadata !DIExpression()), !dbg !11455
  br label %for.cond, !dbg !11456

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11457
  %1 = load i8, i8* %0, align 1, !dbg !11460, !ctir !117
  store i8 %1, i8* %ch, align 1, !dbg !11461
  %tobool = icmp ne i8 %1, 0, !dbg !11462
  br i1 %tobool, label %for.body, label %for.end, !dbg !11462

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11463
  %mul = mul i64 %2, 31, !dbg !11464
  %3 = load i8, i8* %ch, align 1, !dbg !11465
  %conv = zext i8 %3 to i64, !dbg !11465
  %add = add i64 %mul, %conv, !dbg !11466
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11467
  %rem = urem i64 %add, %4, !dbg !11468
  store i64 %rem, i64* %value, align 8, !dbg !11469
  br label %for.inc, !dbg !11470

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11471
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11471, !ctir !117
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11471
  br label %for.cond, !dbg !11472, !llvm.loop !11473

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11475
  ret i64 %6, !dbg !11476
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11477 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11481, metadata !DIExpression()), !dbg !11482
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11483
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11484
  ret void, !dbg !11485
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11486 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !723
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11489, metadata !DIExpression()), !dbg !11490
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11491, metadata !DIExpression()), !dbg !11492
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11493, metadata !DIExpression()), !dbg !11494
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11495, metadata !DIExpression()), !dbg !11496
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11499, metadata !DIExpression()), !dbg !11500
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11501
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11503
  br i1 %cmp, label %if.then, label %if.end, !dbg !11504

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11505
  br label %if.end, !dbg !11506

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11507
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11509
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11510

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11511
  br label %if.end3, !dbg !11512

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #10, !dbg !11513
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11513
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11514
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11515
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11517
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11518

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11519
  br label %return, !dbg !11519

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11520
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11520
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11522

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11523
  br label %if.end8, !dbg !11524

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11525
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11526
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11527, !ctir !676
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11528, !ctir !693
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11529
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11531
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11532

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11533

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11535
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11536
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !11537
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11538
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11539, !ctir !676
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11540, !ctir !55
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11541
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11543, !ctir !676
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11543, !ctir !55
  %tobool15 = icmp ne i64 %12, 0, !dbg !11541
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11544

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11545

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11546
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11547, !ctir !676
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11547, !ctir !55
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #10, !dbg !11548
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11548
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11549
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11550, !ctir !676
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11551, !ctir !681
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11552
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11554, !ctir !676
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11554, !ctir !681
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11555
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11556

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11557

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11558
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11559, !ctir !676
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11559, !ctir !681
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11560
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11561, !ctir !676
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11561, !ctir !55
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11562, !ctir !682
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11563
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11564, !ctir !676
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11565, !ctir !687
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11566
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11567, !ctir !676
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11568, !ctir !55
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11569
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11570, !ctir !676
  store i64 0, i64* %n_entries, align 8, !dbg !11571, !ctir !55
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11572
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11573
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11574, !ctir !676
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11575, !ctir !705
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11576
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11577
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11578, !ctir !676
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11579, !ctir !712
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11580
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11581
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11582, !ctir !676
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11583, !ctir !717
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11584
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11585, !ctir !676
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11586, !ctir !681
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11587
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11588
  br label %return, !dbg !11588

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11589), !dbg !11590
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11591
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11591
  call void @free(i8* %35) #10, !dbg !11592
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11593
  br label %return, !dbg !11593

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11594
  ret %struct.hash_table* %36, !dbg !11594
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !11595 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !55
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11596, metadata !DIExpression()), !dbg !11597
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11598, metadata !DIExpression()), !dbg !11599
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11600, metadata !DIExpression()), !dbg !11601
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11602
  %1 = ptrtoint i8* %0 to i64, !dbg !11603
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11604
  store i64 %call, i64* %val, align 8, !dbg !11601
  %2 = load i64, i64* %val, align 8, !dbg !11605
  %3 = load i64, i64* %n.addr, align 8, !dbg !11606
  %rem = urem i64 %2, %3, !dbg !11607
  ret i64 %rem, !dbg !11608
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !11609 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11610, metadata !DIExpression()), !dbg !11611
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11612, metadata !DIExpression()), !dbg !11613
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11614
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11615
  %cmp = icmp eq i8* %0, %1, !dbg !11616
  ret i1 %cmp, !dbg !11617
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !11618 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !693
  %epsilon = alloca float, align 4, !ctir !699
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11621, metadata !DIExpression()), !dbg !11622
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11623, metadata !DIExpression()), !dbg !11624
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11625
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11626, !ctir !676
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11626, !ctir !693
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11624
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11627, metadata !DIExpression()), !dbg !11628
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11629
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11631
  br i1 %cmp, label %if.then, label %if.end, !dbg !11632

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11633
  br label %return, !dbg !11633

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11634
  %3 = load float, float* %epsilon, align 4, !dbg !11635
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11637
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11638, !ctir !694
  %5 = load float, float* %growth_threshold, align 4, !dbg !11638, !ctir !699
  %cmp2 = fcmp olt float %3, %5, !dbg !11639
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11640

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11641
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11642, !ctir !694
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11642, !ctir !699
  %8 = load float, float* %epsilon, align 4, !dbg !11643
  %sub = fsub float 1.000000e+00, %8, !dbg !11644
  %cmp4 = fcmp olt float %7, %sub, !dbg !11645
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11646

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11647
  %add = fadd float 1.000000e+00, %9, !dbg !11648
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11649
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11650, !ctir !694
  %11 = load float, float* %growth_factor, align 4, !dbg !11650, !ctir !699
  %cmp6 = fcmp olt float %add, %11, !dbg !11651
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11652

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11653
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11654, !ctir !694
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11654, !ctir !699
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11655
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11656

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11657
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11658, !ctir !694
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11658, !ctir !699
  %16 = load float, float* %epsilon, align 4, !dbg !11659
  %add11 = fadd float %15, %16, !dbg !11660
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11661
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11662, !ctir !694
  %18 = load float, float* %shrink_factor, align 4, !dbg !11662, !ctir !699
  %cmp12 = fcmp olt float %add11, %18, !dbg !11663
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11664

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11665
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11666, !ctir !694
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11666, !ctir !699
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11667
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11668

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11669
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11670, !ctir !694
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11670, !ctir !699
  %23 = load float, float* %epsilon, align 4, !dbg !11671
  %add18 = fadd float %22, %23, !dbg !11672
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11673
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11674, !ctir !694
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11674, !ctir !699
  %cmp20 = fcmp olt float %add18, %25, !dbg !11675
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11676

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11677
  br label %return, !dbg !11677

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11678
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11679, !ctir !676
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11680, !ctir !693
  store i1 false, i1* %retval, align 1, !dbg !11681
  br label %return, !dbg !11681

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11682
  ret i1 %27, !dbg !11682
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !11683 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !699
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11686, metadata !DIExpression()), !dbg !11687
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11688, metadata !DIExpression()), !dbg !11689
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11690
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11692, !ctir !694
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11692
  %tobool = trunc i8 %1 to i1, !dbg !11692, !ctir !142
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11693

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11694, metadata !DIExpression()), !dbg !11696
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11697
  %conv = uitofp i64 %2 to float, !dbg !11697
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11698
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11699, !ctir !694
  %4 = load float, float* %growth_threshold, align 4, !dbg !11699, !ctir !699
  %div = fdiv float %conv, %4, !dbg !11700
  store float %div, float* %new_candidate, align 4, !dbg !11696
  %5 = load float, float* %new_candidate, align 4, !dbg !11701
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11703
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11704

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11705
  br label %return, !dbg !11705

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11706
  %conv3 = fptoui float %6 to i64, !dbg !11706
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11707
  br label %if.end4, !dbg !11708

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11709
  %call = call i64 @next_prime(i64 %7) #15, !dbg !11710
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11711
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11712
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11712
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11714

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11715
  br label %return, !dbg !11715

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11716
  store i64 %9, i64* %retval, align 8, !dbg !11717
  br label %return, !dbg !11717

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11718
  ret i64 %10, !dbg !11718
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !11719 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11722, metadata !DIExpression()), !dbg !11723
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11724
  %cmp = icmp ult i64 %0, 10, !dbg !11726
  br i1 %cmp, label %if.then, label %if.end, !dbg !11727

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11728
  br label %if.end, !dbg !11729

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11730
  %or = or i64 %1, 1, !dbg !11730
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11730
  br label %while.cond, !dbg !11731

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11732
  %cmp1 = icmp ne i64 -1, %2, !dbg !11733
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11734

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11735
  %call = call zeroext i1 @is_prime(i64 %3) #15, !dbg !11736
  %lnot = xor i1 %call, true, !dbg !11737
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11738
  br i1 %4, label %while.body, label %while.end, !dbg !11731

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11739
  %add = add i64 %5, 2, !dbg !11739
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11739
  br label %while.cond, !dbg !11731, !llvm.loop !11740

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11742
  ret i64 %6, !dbg !11743
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !11744 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !55
  %square = alloca i64, align 8, !ctir !55
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11747, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11749, metadata !DIExpression()), !dbg !11750
  store i64 3, i64* %divisor, align 8, !dbg !11750
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11751, metadata !DIExpression()), !dbg !11752
  %0 = load i64, i64* %divisor, align 8, !dbg !11753
  %1 = load i64, i64* %divisor, align 8, !dbg !11754
  %mul = mul i64 %0, %1, !dbg !11755
  store i64 %mul, i64* %square, align 8, !dbg !11752
  br label %while.cond, !dbg !11756

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11757
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11758
  %cmp = icmp ult i64 %2, %3, !dbg !11759
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11760

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11761
  %5 = load i64, i64* %divisor, align 8, !dbg !11762
  %rem = urem i64 %4, %5, !dbg !11763
  %tobool = icmp ne i64 %rem, 0, !dbg !11760
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11764
  br i1 %6, label %while.body, label %while.end, !dbg !11756

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11765
  %inc = add i64 %7, 1, !dbg !11765
  store i64 %inc, i64* %divisor, align 8, !dbg !11765
  %8 = load i64, i64* %divisor, align 8, !dbg !11767
  %mul1 = mul i64 4, %8, !dbg !11768
  %9 = load i64, i64* %square, align 8, !dbg !11769
  %add = add i64 %9, %mul1, !dbg !11769
  store i64 %add, i64* %square, align 8, !dbg !11769
  %10 = load i64, i64* %divisor, align 8, !dbg !11770
  %inc2 = add i64 %10, 1, !dbg !11770
  store i64 %inc2, i64* %divisor, align 8, !dbg !11770
  br label %while.cond, !dbg !11756, !llvm.loop !11771

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !11773
  %12 = load i64, i64* %divisor, align 8, !dbg !11774
  %rem3 = urem i64 %11, %12, !dbg !11775
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !11773
  %13 = zext i1 %tobool4 to i64, !dbg !11773
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !11773
  %tobool5 = icmp ne i32 %cond, 0, !dbg !11776
  ret i1 %tobool5, !dbg !11777
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !11778 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !681
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !681
  %next = alloca %struct.hash_entry*, align 8, !ctir !681
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11781, metadata !DIExpression()), !dbg !11782
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11783, metadata !DIExpression()), !dbg !11784
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11785
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11787, !ctir !676
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11787, !ctir !681
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11788
  br label %for.cond, !dbg !11789

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11790
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11792
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11793, !ctir !676
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11793, !ctir !687
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11794
  br i1 %cmp, label %for.body, label %for.end24, !dbg !11795

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11796
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11799, !ctir !682
  %6 = load i8*, i8** %data, align 8, !dbg !11799, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11796
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11800

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11801, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11804, metadata !DIExpression()), !dbg !11805
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11806
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11808, !ctir !682
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11808, !ctir !681
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11809
  br label %for.cond3, !dbg !11810

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11811
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !11813
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !11813

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11814
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !11817, !ctir !676
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11817, !ctir !717
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !11814
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11818

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11819
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !11820, !ctir !676
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11820, !ctir !717
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11821
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11822, !ctir !682
  %15 = load i8*, i8** %data9, align 8, !dbg !11822, !ctir !53
  call void %13(i8* %15), !dbg !11819
  br label %if.end, !dbg !11819

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11823
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11824, !ctir !682
  store i8* null, i8** %data10, align 8, !dbg !11825, !ctir !53
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11826
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11827, !ctir !682
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !11827, !ctir !681
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !11828
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11829
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !11830, !ctir !676
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11830, !ctir !681
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11831
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !11832, !ctir !682
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !11833, !ctir !681
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11834
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11835
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !11836, !ctir !676
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !11837, !ctir !681
  br label %for.inc, !dbg !11838

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11839
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !11840
  br label %for.cond3, !dbg !11841, !llvm.loop !11842

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11844
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !11846, !ctir !676
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !11846, !ctir !717
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !11844
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !11847

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11848
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !11849, !ctir !676
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !11849, !ctir !717
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11850
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !11851, !ctir !682
  %30 = load i8*, i8** %data18, align 8, !dbg !11851, !ctir !53
  call void %28(i8* %30), !dbg !11848
  br label %if.end19, !dbg !11848

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11852
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !11853, !ctir !682
  store i8* null, i8** %data20, align 8, !dbg !11854, !ctir !53
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11855
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11856, !ctir !682
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !11857, !ctir !681
  br label %if.end22, !dbg !11858

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !11859

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11860
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11860, !ctir !682
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11860
  br label %for.cond, !dbg !11861, !llvm.loop !11862

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11864
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !11865, !ctir !676
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11866, !ctir !55
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11867
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !11868, !ctir !676
  store i64 0, i64* %n_entries, align 8, !dbg !11869, !ctir !55
  ret void, !dbg !11870
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !11871 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !681
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !681
  %next = alloca %struct.hash_entry*, align 8, !ctir !681
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11872, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11874, metadata !DIExpression()), !dbg !11875
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11876, metadata !DIExpression()), !dbg !11877
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11878, metadata !DIExpression()), !dbg !11879
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11880
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !11882, !ctir !676
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11882, !ctir !717
  %tobool = icmp ne void (i8*)* %1, null, !dbg !11880
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !11883

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11884
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !11885, !ctir !676
  %3 = load i64, i64* %n_entries, align 8, !dbg !11885, !ctir !55
  %tobool1 = icmp ne i64 %3, 0, !dbg !11884
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !11886

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11887
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !11890, !ctir !676
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !11890, !ctir !681
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !11891
  br label %for.cond, !dbg !11892

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11893
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11895
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !11896, !ctir !676
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11896, !ctir !687
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !11897
  br i1 %cmp, label %for.body, label %for.end12, !dbg !11898

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11899
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11902, !ctir !682
  %10 = load i8*, i8** %data, align 8, !dbg !11902, !ctir !53
  %tobool3 = icmp ne i8* %10, null, !dbg !11899
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11903

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11904
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11907
  br label %for.cond5, !dbg !11908

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11909
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !11911
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !11911

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11912
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !11913, !ctir !676
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11913, !ctir !717
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11914
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !11915, !ctir !682
  %16 = load i8*, i8** %data9, align 8, !dbg !11915, !ctir !53
  call void %14(i8* %16), !dbg !11912
  br label %for.inc, !dbg !11912

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11916
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11917, !ctir !682
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !11917, !ctir !681
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !11918
  br label %for.cond5, !dbg !11919, !llvm.loop !11920

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !11922

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !11923

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11924
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !11924, !ctir !682
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11924
  br label %for.cond, !dbg !11925, !llvm.loop !11926

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !11928

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11929
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !11931, !ctir !676
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !11931, !ctir !681
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !11932
  br label %for.cond15, !dbg !11933

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11934
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11936
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11937, !ctir !676
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !11937, !ctir !687
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !11938
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !11939

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11940
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !11943, !ctir !682
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !11943, !ctir !681
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !11944
  br label %for.cond20, !dbg !11945

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11946
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !11948
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !11948

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11949
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !11951, !ctir !682
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !11951, !ctir !681
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !11952
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11953
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !11953
  call void @free(i8* %31) #10, !dbg !11954
  br label %for.inc24, !dbg !11955

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11956
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !11957
  br label %for.cond20, !dbg !11958, !llvm.loop !11959

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !11961

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11962
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11962, !ctir !682
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !11962
  br label %for.cond15, !dbg !11963, !llvm.loop !11964

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11966
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !11968, !ctir !676
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11968, !ctir !681
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !11969
  br label %for.cond29, !dbg !11970

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11971
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !11973
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !11973

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11974
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !11976, !ctir !682
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !11976, !ctir !681
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !11977
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11978
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !11978
  call void @free(i8* %40) #10, !dbg !11979
  br label %for.inc33, !dbg !11980

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11981
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !11982
  br label %for.cond29, !dbg !11983, !llvm.loop !11984

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11986
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !11987, !ctir !676
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !11987, !ctir !681
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !11986
  call void @free(i8* %44) #10, !dbg !11988
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11989
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !11989
  call void @free(i8* %46) #10, !dbg !11990
  ret void, !dbg !11991
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !11992 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !676
  %new_table = alloca %struct.hash_table*, align 8, !ctir !723
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11995, metadata !DIExpression()), !dbg !11996
  store i64 %candidate, i64* %candidate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11997, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !11999, metadata !DIExpression()), !dbg !12000
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12001, metadata !DIExpression()), !dbg !12002
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12003, metadata !DIExpression()), !dbg !12004
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12005
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12006
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12007, !ctir !676
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12007, !ctir !693
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12008
  store i64 %call, i64* %new_size, align 8, !dbg !12004
  %3 = load i64, i64* %new_size, align 8, !dbg !12009
  %tobool = icmp ne i64 %3, 0, !dbg !12009
  br i1 %tobool, label %if.end, label %if.then, !dbg !12011

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12012
  br label %return, !dbg !12012

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12013
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12015
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12016, !ctir !676
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12016, !ctir !55
  %cmp = icmp eq i64 %4, %6, !dbg !12017
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12018

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12019
  br label %return, !dbg !12019

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12020
  %7 = load i64, i64* %new_size, align 8, !dbg !12021
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #10, !dbg !12022
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12022
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12023
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12024, !ctir !676
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12025, !ctir !681
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12026
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12028, !ctir !676
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12028, !ctir !681
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12029
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12030

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12031
  br label %return, !dbg !12031

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12032
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12033
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12034, !ctir !676
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12035, !ctir !55
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12036
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12037, !ctir !676
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12037, !ctir !681
  %16 = load i64, i64* %new_size, align 8, !dbg !12038
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12039, !ctir !682
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12040
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12041, !ctir !676
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12042, !ctir !687
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12043
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12044, !ctir !676
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12045, !ctir !55
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12046
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12047, !ctir !676
  store i64 0, i64* %n_entries, align 8, !dbg !12048, !ctir !55
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12049
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12050, !ctir !676
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12050, !ctir !693
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12051
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12052, !ctir !676
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12053, !ctir !693
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12054
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12055, !ctir !676
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12055, !ctir !705
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12056
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12057, !ctir !676
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12058, !ctir !705
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12059
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12060, !ctir !676
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12060, !ctir !712
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12061
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12062, !ctir !676
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12063, !ctir !712
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12064
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12065, !ctir !676
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12065, !ctir !717
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12066
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12067, !ctir !676
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12068, !ctir !717
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12069
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12070, !ctir !676
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12070, !ctir !681
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12071
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12072, !ctir !676
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12073, !ctir !681
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12074
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12076
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12077
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12078

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12079
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12081, !ctir !676
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12081, !ctir !681
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12079
  call void @free(i8* %39) #10, !dbg !12082
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12083
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12084, !ctir !676
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12084, !ctir !681
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12085
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12086, !ctir !676
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12087, !ctir !681
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12088
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12089, !ctir !676
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12089, !ctir !687
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12090
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12091, !ctir !676
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12092, !ctir !687
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12093
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12094, !ctir !676
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12094, !ctir !55
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12095
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12096, !ctir !676
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12097, !ctir !55
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12098
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12099, !ctir !676
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12099, !ctir !55
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12100
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12101, !ctir !676
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12102, !ctir !55
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12103
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12104, !ctir !676
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12104, !ctir !681
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12105
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12106, !ctir !676
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12107, !ctir !681
  store i1 true, i1* %retval, align 1, !dbg !12108
  br label %return, !dbg !12108

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12109
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12110, !ctir !676
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12110, !ctir !681
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12111
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12112, !ctir !676
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12113, !ctir !681
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12114
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12116
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12117
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12118

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12119
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12120
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12121
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12122

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12123
  unreachable, !dbg !12123

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12124
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12125, !ctir !676
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12125, !ctir !681
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12124
  call void @free(i8* %64) #10, !dbg !12126
  store i1 false, i1* %retval, align 1, !dbg !12127
  br label %return, !dbg !12127

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12128
  ret i1 %65, !dbg !12128
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12129 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !681
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !681
  %next = alloca %struct.hash_entry*, align 8, !ctir !681
  %data2 = alloca i8*, align 8, !ctir !53
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !681
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !681
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12132, metadata !DIExpression()), !dbg !12133
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12134, metadata !DIExpression()), !dbg !12135
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12138, metadata !DIExpression()), !dbg !12139
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12140, metadata !DIExpression()), !dbg !12141
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12142, metadata !DIExpression()), !dbg !12143
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12144
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12146, !ctir !676
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12146, !ctir !681
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12147
  br label %for.cond, !dbg !12148

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12149
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12151
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12152, !ctir !676
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12152, !ctir !687
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12153
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12154

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12155
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12157, !ctir !682
  %6 = load i8*, i8** %data, align 8, !dbg !12157, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12155
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12158

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12159, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12162, metadata !DIExpression()), !dbg !12163
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12164
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12166, !ctir !682
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12166, !ctir !681
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12167
  br label %for.cond4, !dbg !12168

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12169
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12171
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12171

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12172
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12174, !ctir !682
  %11 = load i8*, i8** %data7, align 8, !dbg !12174, !ctir !53
  store i8* %11, i8** %data2, align 8, !dbg !12175
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12176
  %13 = load i8*, i8** %data2, align 8, !dbg !12177
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12178
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12179
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12180
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12181, !ctir !682
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12181, !ctir !681
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12182
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12183
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12185, !ctir !682
  %17 = load i8*, i8** %data9, align 8, !dbg !12185, !ctir !53
  %tobool10 = icmp ne i8* %17, null, !dbg !12183
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12186

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12187
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12189, !ctir !682
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12189, !ctir !681
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12190
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12191, !ctir !682
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12192, !ctir !681
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12193
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12194
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12195, !ctir !682
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12196, !ctir !681
  br label %if.end, !dbg !12197

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12198
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12200
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12201, !ctir !682
  store i8* %23, i8** %data15, align 8, !dbg !12202, !ctir !53
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12203
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12204, !ctir !676
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12205, !ctir !55
  %inc = add i64 %26, 1, !dbg !12205
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12205, !ctir !55
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12206
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12207
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12208
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12209

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12210
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12211
  br label %for.cond4, !dbg !12212, !llvm.loop !12213

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12215
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12216, !ctir !682
  %31 = load i8*, i8** %data16, align 8, !dbg !12216, !ctir !53
  store i8* %31, i8** %data2, align 8, !dbg !12217
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12218
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12219, !ctir !682
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12220, !ctir !681
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12221
  %tobool18 = trunc i8 %33 to i1, !dbg !12221
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12223

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12224

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12225
  %35 = load i8*, i8** %data2, align 8, !dbg !12226
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12227
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12228
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12229
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12231, !ctir !682
  %37 = load i8*, i8** %data22, align 8, !dbg !12231, !ctir !53
  %tobool23 = icmp ne i8* %37, null, !dbg !12229
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12232

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12233, metadata !DIExpression()), !dbg !12235
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12236
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12237
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12235
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12238
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12240
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12241

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12242
  br label %return, !dbg !12242

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12243
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12244
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12245, !ctir !682
  store i8* %40, i8** %data29, align 8, !dbg !12246, !ctir !53
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12247
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12248, !ctir !682
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12248, !ctir !681
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12249
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12250, !ctir !682
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12251, !ctir !681
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12252
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12253
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12254, !ctir !682
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12255, !ctir !681
  br label %if.end37, !dbg !12256

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12257
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12259
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12260, !ctir !682
  store i8* %47, i8** %data34, align 8, !dbg !12261, !ctir !53
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12262
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12263, !ctir !676
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12264, !ctir !55
  %inc36 = add i64 %50, 1, !dbg !12264
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12264, !ctir !55
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12265
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12266, !ctir !682
  store i8* null, i8** %data38, align 8, !dbg !12267, !ctir !53
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12268
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12269, !ctir !676
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12270, !ctir !55
  %dec = add i64 %53, -1, !dbg !12270
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12270, !ctir !55
  br label %if.end40, !dbg !12271

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12157

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12272
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12272, !ctir !682
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12272
  br label %for.cond, !dbg !12273, !llvm.loop !12274

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12276
  br label %return, !dbg !12276

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12277
  ret i1 %55, !dbg !12277
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12278 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12281, metadata !DIExpression()), !dbg !12282
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12283, metadata !DIExpression()), !dbg !12284
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12285
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12286, !ctir !682
  store i8* null, i8** %data, align 8, !dbg !12287, !ctir !53
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12288
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12289, !ctir !676
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12289, !ctir !681
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12290
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12291, !ctir !682
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12292, !ctir !681
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12293
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12294
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12295, !ctir !676
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12296, !ctir !681
  ret void, !dbg !12297
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12298 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !681
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12301, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12303, metadata !DIExpression()), !dbg !12304
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12305
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12307, !ctir !676
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12307, !ctir !681
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12305
  br i1 %tobool, label %if.then, label %if.else, !dbg !12308

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12309
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12311, !ctir !676
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12311, !ctir !681
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12312
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12313
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12314, !ctir !682
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12314, !ctir !681
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12315
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12316, !ctir !676
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12317, !ctir !681
  br label %if.end, !dbg !12318

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #10, !dbg !12319
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12319
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12321
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12322
  ret %struct.hash_entry* %8, !dbg !12323
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12324 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !681
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !693
  %candidate = alloca float, align 4, !ctir !699
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !681
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12328, metadata !DIExpression()), !dbg !12329
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12330, metadata !DIExpression()), !dbg !12331
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12332, metadata !DIExpression()), !dbg !12333
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12334, metadata !DIExpression()), !dbg !12335
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12336, metadata !DIExpression()), !dbg !12337
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12338
  %tobool = icmp ne i8* %0, null, !dbg !12338
  br i1 %tobool, label %if.end, label %if.then, !dbg !12340

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12341
  unreachable, !dbg !12341

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12342
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12344
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12345
  store i8* %call, i8** %data, align 8, !dbg !12346
  %cmp = icmp ne i8* %call, null, !dbg !12347
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12348

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12349
  %tobool3 = icmp ne i8** %3, null, !dbg !12349
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12352

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12353
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12354
  store i8* %4, i8** %5, align 8, !dbg !12355, !ctir !709
  br label %if.end5, !dbg !12356

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12357
  br label %return, !dbg !12357

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12358
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12360, !ctir !676
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12360, !ctir !55
  %conv = uitofp i64 %7 to float, !dbg !12358
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12361
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12362, !ctir !676
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12362, !ctir !693
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12363, !ctir !694
  %10 = load float, float* %growth_threshold, align 4, !dbg !12363, !ctir !699
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12364
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12365, !ctir !676
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12365, !ctir !55
  %conv7 = uitofp i64 %12 to float, !dbg !12364
  %mul = fmul float %10, %conv7, !dbg !12366
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12367
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12368

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12369
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12371
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12372
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12374, !ctir !676
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12374, !ctir !55
  %conv13 = uitofp i64 %15 to float, !dbg !12372
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12375
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12376, !ctir !676
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12376, !ctir !693
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12377, !ctir !694
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12377, !ctir !699
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12378
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12379, !ctir !676
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12379, !ctir !55
  %conv17 = uitofp i64 %20 to float, !dbg !12378
  %mul18 = fmul float %18, %conv17, !dbg !12380
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12381
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12382

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12383, metadata !DIExpression()), !dbg !12385
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12386
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12387, !ctir !676
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12387, !ctir !693
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12385
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12388, metadata !DIExpression()), !dbg !12389
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12390
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12391, !ctir !694
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12391
  %tobool24 = trunc i8 %24 to i1, !dbg !12391, !ctir !142
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12390

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12392
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12393, !ctir !676
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12393, !ctir !55
  %conv27 = uitofp i64 %26 to float, !dbg !12392
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12394
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12395, !ctir !694
  %28 = load float, float* %growth_factor, align 4, !dbg !12395, !ctir !699
  %mul28 = fmul float %conv27, %28, !dbg !12396
  br label %cond.end, !dbg !12390

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12397
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12398, !ctir !676
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12398, !ctir !55
  %conv30 = uitofp i64 %30 to float, !dbg !12397
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12399
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12400, !ctir !694
  %32 = load float, float* %growth_factor31, align 4, !dbg !12400, !ctir !699
  %mul32 = fmul float %conv30, %32, !dbg !12401
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12402
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12403, !ctir !694
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12403, !ctir !699
  %mul34 = fmul float %mul32, %34, !dbg !12404
  br label %cond.end, !dbg !12390

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12390
  store float %cond, float* %candidate, align 4, !dbg !12389
  %35 = load float, float* %candidate, align 4, !dbg !12405
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12407
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12408

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12409
  br label %return, !dbg !12409

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12410
  %37 = load float, float* %candidate, align 4, !dbg !12412
  %conv39 = fptoui float %37 to i64, !dbg !12412
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12413
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12414

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12415
  br label %return, !dbg !12415

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12416
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12418
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12419
  %cmp44 = icmp ne i8* %call43, null, !dbg !12420
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12421

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12422
  unreachable, !dbg !12422

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12423

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12424

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12425
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12427, !ctir !682
  %41 = load i8*, i8** %data50, align 8, !dbg !12427, !ctir !53
  %tobool51 = icmp ne i8* %41, null, !dbg !12425
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12428

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12429, metadata !DIExpression()), !dbg !12431
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12432
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12433
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12431
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12434
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12436
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12437

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12438
  br label %return, !dbg !12438

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12439
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12440
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12441, !ctir !682
  store i8* %44, i8** %data58, align 8, !dbg !12442, !ctir !53
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12443
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12444, !ctir !682
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12444, !ctir !681
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12445
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12446, !ctir !682
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12447, !ctir !681
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12448
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12449
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12450, !ctir !682
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12451, !ctir !681
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12452
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12453, !ctir !676
  %52 = load i64, i64* %n_entries, align 8, !dbg !12454, !ctir !55
  %inc = add i64 %52, 1, !dbg !12454
  store i64 %inc, i64* %n_entries, align 8, !dbg !12454, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12455
  br label %return, !dbg !12455

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12456
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12457
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12458, !ctir !682
  store i8* %53, i8** %data62, align 8, !dbg !12459, !ctir !53
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12460
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12461, !ctir !676
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12462, !ctir !55
  %inc64 = add i64 %56, 1, !dbg !12462
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12462, !ctir !55
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12463
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12464, !ctir !676
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12465, !ctir !55
  %inc66 = add i64 %58, 1, !dbg !12465
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12465, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12466
  br label %return, !dbg !12466

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12467
  ret i32 %59, !dbg !12467
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12468 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !681
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !681
  %data7 = alloca i8*, align 8, !ctir !53
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !681
  %data29 = alloca i8*, align 8, !ctir !53
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !681
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12472, metadata !DIExpression()), !dbg !12473
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12474, metadata !DIExpression()), !dbg !12475
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12476, metadata !DIExpression()), !dbg !12477
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12480, metadata !DIExpression()), !dbg !12481
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12482
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12483
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12484
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12481
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12485, metadata !DIExpression()), !dbg !12486
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12487
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12488
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12489, !ctir !681
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12490
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12492, !ctir !682
  %5 = load i8*, i8** %data, align 8, !dbg !12492, !ctir !53
  %cmp = icmp eq i8* %5, null, !dbg !12493
  br i1 %cmp, label %if.then, label %if.end, !dbg !12494

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12495
  br label %return, !dbg !12495

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12496
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12498
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12499, !ctir !682
  %8 = load i8*, i8** %data2, align 8, !dbg !12499, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !12500
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12501

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12502
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12503, !ctir !676
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12503, !ctir !712
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12504
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12505
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12506, !ctir !682
  %13 = load i8*, i8** %data4, align 8, !dbg !12506, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12502
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12507

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12508, metadata !DIExpression()), !dbg !12510
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12511
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12512, !ctir !682
  %15 = load i8*, i8** %data8, align 8, !dbg !12512, !ctir !53
  store i8* %15, i8** %data7, align 8, !dbg !12510
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12513
  %tobool = trunc i8 %16 to i1, !dbg !12513
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12515

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12516
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12519, !ctir !682
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12519, !ctir !681
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12516
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12520

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12521, metadata !DIExpression()), !dbg !12523
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12524
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12525, !ctir !682
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12525, !ctir !681
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12523
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12526
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12527
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12528
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12528
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12529
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12530
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12531
  br label %if.end15, !dbg !12532

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12533
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12535, !ctir !682
  store i8* null, i8** %data14, align 8, !dbg !12536, !ctir !53
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12537

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12538
  store i8* %28, i8** %retval, align 8, !dbg !12539
  br label %return, !dbg !12539

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12540
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12542
  br label %for.cond, !dbg !12543

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12544
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12546, !ctir !682
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12546, !ctir !681
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12547
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12547

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12548
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12551
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12552, !ctir !682
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12552, !ctir !681
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12553, !ctir !682
  %35 = load i8*, i8** %data21, align 8, !dbg !12553, !ctir !53
  %cmp22 = icmp eq i8* %32, %35, !dbg !12554
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12555

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12556
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12557, !ctir !676
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12557, !ctir !712
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12558
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12559
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12560, !ctir !682
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12560, !ctir !681
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12561, !ctir !682
  %41 = load i8*, i8** %data26, align 8, !dbg !12561, !ctir !53
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12556
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12562

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12563, metadata !DIExpression()), !dbg !12565
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12566
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12567, !ctir !682
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12567, !ctir !681
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12568, !ctir !682
  %44 = load i8*, i8** %data31, align 8, !dbg !12568, !ctir !53
  store i8* %44, i8** %data29, align 8, !dbg !12565
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12569
  %tobool32 = trunc i8 %45 to i1, !dbg !12569
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12571

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12572, metadata !DIExpression()), !dbg !12574
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12575
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12576, !ctir !682
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12576, !ctir !681
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12574
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12577
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12578, !ctir !682
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12578, !ctir !681
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12579
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12580, !ctir !682
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12581, !ctir !681
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12582
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12583
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12584
  br label %if.end38, !dbg !12585

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12586
  store i8* %53, i8** %retval, align 8, !dbg !12587
  br label %return, !dbg !12587

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12588

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12589
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12590, !ctir !682
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12590, !ctir !681
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12591
  br label %for.cond, !dbg !12592, !llvm.loop !12593

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12595
  br label %return, !dbg !12595

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12596
  ret i8* %56, !dbg !12596
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12597 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !709
  %err = alloca i32, align 4, !ctir !7
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12600, metadata !DIExpression()), !dbg !12601
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12602, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12604, metadata !DIExpression()), !dbg !12605
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12606, metadata !DIExpression()), !dbg !12607
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12608
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12609
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12610
  store i32 %call, i32* %err, align 4, !dbg !12607
  %2 = load i32, i32* %err, align 4, !dbg !12611
  %cmp = icmp eq i32 %2, -1, !dbg !12612
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12611

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12611

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12613
  %cmp2 = icmp eq i32 %3, 0, !dbg !12614
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12613

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12615
  br label %cond.end, !dbg !12613

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12616
  br label %cond.end, !dbg !12613

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12613
  br label %cond.end5, !dbg !12611

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12611
  ret i8* %cond6, !dbg !12617
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12618 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !681
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !693
  %candidate = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !681
  %next = alloca %struct.hash_entry*, align 8, !ctir !681
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12619, metadata !DIExpression()), !dbg !12620
  store i8* %entry1, i8** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12621, metadata !DIExpression()), !dbg !12622
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12623, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12625, metadata !DIExpression()), !dbg !12626
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12627
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12628
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12629
  store i8* %call, i8** %data, align 8, !dbg !12630
  %2 = load i8*, i8** %data, align 8, !dbg !12631
  %tobool = icmp ne i8* %2, null, !dbg !12631
  br i1 %tobool, label %if.end, label %if.then, !dbg !12633

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12634
  br label %return, !dbg !12634

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12635
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12636, !ctir !676
  %4 = load i64, i64* %n_entries, align 8, !dbg !12637, !ctir !55
  %dec = add i64 %4, -1, !dbg !12637
  store i64 %dec, i64* %n_entries, align 8, !dbg !12637, !ctir !55
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12638
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12640, !ctir !682
  %6 = load i8*, i8** %data2, align 8, !dbg !12640, !ctir !53
  %tobool3 = icmp ne i8* %6, null, !dbg !12638
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12641

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12642
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12644, !ctir !676
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12645, !ctir !55
  %dec5 = add i64 %8, -1, !dbg !12645
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12645, !ctir !55
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12646
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12648, !ctir !676
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12648, !ctir !55
  %conv = uitofp i64 %10 to float, !dbg !12646
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12649
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12650, !ctir !676
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12650, !ctir !693
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12651, !ctir !694
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12651, !ctir !699
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12652
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12653, !ctir !676
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12653, !ctir !55
  %conv7 = uitofp i64 %15 to float, !dbg !12652
  %mul = fmul float %13, %conv7, !dbg !12654
  %cmp = fcmp olt float %conv, %mul, !dbg !12655
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12656

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12657
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12659
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12660
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12662, !ctir !676
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12662, !ctir !55
  %conv12 = uitofp i64 %18 to float, !dbg !12660
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12663
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12664, !ctir !676
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12664, !ctir !693
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12665, !ctir !694
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12665, !ctir !699
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12666
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12667, !ctir !676
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12667, !ctir !55
  %conv16 = uitofp i64 %23 to float, !dbg !12666
  %mul17 = fmul float %21, %conv16, !dbg !12668
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12669
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12670

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12671, metadata !DIExpression()), !dbg !12673
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12674
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12675, !ctir !676
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12675, !ctir !693
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12673
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12676, metadata !DIExpression()), !dbg !12677
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12678
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12679, !ctir !694
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12679
  %tobool23 = trunc i8 %27 to i1, !dbg !12679, !ctir !142
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12678

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12680
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12681, !ctir !676
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12681, !ctir !55
  %conv26 = uitofp i64 %29 to float, !dbg !12680
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12682
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12683, !ctir !694
  %31 = load float, float* %shrink_factor, align 4, !dbg !12683, !ctir !699
  %mul27 = fmul float %conv26, %31, !dbg !12684
  br label %cond.end, !dbg !12678

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12685
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12686, !ctir !676
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12686, !ctir !55
  %conv29 = uitofp i64 %33 to float, !dbg !12685
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12687
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12688, !ctir !694
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12688, !ctir !699
  %mul31 = fmul float %conv29, %35, !dbg !12689
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12690
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12691, !ctir !694
  %37 = load float, float* %growth_threshold, align 4, !dbg !12691, !ctir !699
  %mul32 = fmul float %mul31, %37, !dbg !12692
  br label %cond.end, !dbg !12678

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12678
  %conv33 = fptoui float %cond to i64, !dbg !12693
  store i64 %conv33, i64* %candidate, align 8, !dbg !12677
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12694
  %39 = load i64, i64* %candidate, align 8, !dbg !12696
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12697
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12698

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12699, metadata !DIExpression()), !dbg !12701
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12702
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12703, !ctir !676
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12703, !ctir !681
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12701
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12704, metadata !DIExpression()), !dbg !12705
  br label %while.cond, !dbg !12706

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12707
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12706
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12706

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12708
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12710, !ctir !682
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12710, !ctir !681
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12711
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12712
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12712
  call void @free(i8* %46) #10, !dbg !12713
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12714
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12715
  br label %while.cond, !dbg !12706, !llvm.loop !12716

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12718
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12719, !ctir !676
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12720, !ctir !681
  br label %if.end39, !dbg !12721

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12722

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12723

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12724

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12725
  store i8* %49, i8** %retval, align 8, !dbg !12726
  br label %return, !dbg !12726

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12727
  ret i8* %50, !dbg !12727
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !12728 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1356
  %tmp = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12730, metadata !DIExpression()), !dbg !12731
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12732, metadata !DIExpression()), !dbg !12733
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12734, metadata !DIExpression()), !dbg !12735
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12736
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12736
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12735
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12737, metadata !DIExpression()), !dbg !12738
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12739
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12740, !ctir !1357
  %3 = load i8*, i8** %name, align 8, !dbg !12740, !ctir !9
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12741
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !12742
  store i64 %call, i64* %tmp, align 8, !dbg !12738
  %5 = load i64, i64* %tmp, align 8, !dbg !12743
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12744
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12745, !ctir !1357
  %7 = load i64, i64* %st_ino, align 8, !dbg !12745, !ctir !259
  %xor = xor i64 %5, %7, !dbg !12746
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12747
  %rem = urem i64 %xor, %8, !dbg !12748
  ret i64 %rem, !dbg !12749
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !12750 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1356
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12751, metadata !DIExpression()), !dbg !12752
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12753, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12755, metadata !DIExpression()), !dbg !12756
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12757
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12757
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12756
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12758
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12759, !ctir !1357
  %3 = load i64, i64* %st_ino, align 8, !dbg !12759, !ctir !259
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12760
  %rem = urem i64 %3, %4, !dbg !12761
  ret i64 %rem, !dbg !12762
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !12763 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1356
  %b = alloca %struct.F_triple*, align 8, !ctir !1356
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12764, metadata !DIExpression()), !dbg !12765
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12766, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12768, metadata !DIExpression()), !dbg !12769
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12770
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12770
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12769
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12771, metadata !DIExpression()), !dbg !12772
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12773
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12773
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12772
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12774
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12774, !ctir !1357
  %5 = load i64, i64* %st_ino, align 8, !dbg !12774, !ctir !259
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12774
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12774, !ctir !1357
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12774, !ctir !259
  %cmp = icmp eq i64 %5, %7, !dbg !12774
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12774

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12774
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12774, !ctir !1357
  %9 = load i64, i64* %st_dev, align 8, !dbg !12774, !ctir !262
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12774
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12774, !ctir !1357
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12774, !ctir !262
  %cmp3 = icmp eq i64 %9, %11, !dbg !12774
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12775

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12776
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12777, !ctir !1357
  %13 = load i8*, i8** %name, align 8, !dbg !12777, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12778
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12779, !ctir !1357
  %15 = load i8*, i8** %name4, align 8, !dbg !12779, !ctir !9
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !12780
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !12781
  %17 = zext i1 %16 to i64, !dbg !12782
  %cond = select i1 %16, i32 1, i32 0, !dbg !12782
  %tobool = icmp ne i32 %cond, 0, !dbg !12782
  ret i1 %tobool, !dbg !12783
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !12784 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1356
  %b = alloca %struct.F_triple*, align 8, !ctir !1356
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12785, metadata !DIExpression()), !dbg !12786
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12787, metadata !DIExpression()), !dbg !12788
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12789, metadata !DIExpression()), !dbg !12790
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12791
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12791
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12790
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12792, metadata !DIExpression()), !dbg !12793
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12794
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12794
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12793
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12795
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12795, !ctir !1357
  %5 = load i64, i64* %st_ino, align 8, !dbg !12795, !ctir !259
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12795
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12795, !ctir !1357
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12795, !ctir !259
  %cmp = icmp eq i64 %5, %7, !dbg !12795
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12795

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12795
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12795, !ctir !1357
  %9 = load i64, i64* %st_dev, align 8, !dbg !12795, !ctir !262
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12795
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12795, !ctir !1357
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12795, !ctir !262
  %cmp3 = icmp eq i64 %9, %11, !dbg !12795
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12796

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12797
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12797, !ctir !1357
  %13 = load i8*, i8** %name, align 8, !dbg !12797, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12797
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12797, !ctir !1357
  %15 = load i8*, i8** %name4, align 8, !dbg !12797, !ctir !9
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !12797
  %cmp5 = icmp eq i32 %call, 0, !dbg !12797
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !12798
  %17 = zext i1 %16 to i64, !dbg !12799
  %cond = select i1 %16, i32 1, i32 0, !dbg !12799
  %tobool = icmp ne i32 %cond, 0, !dbg !12799
  ret i1 %tobool, !dbg !12800
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !12801 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1363
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12802, metadata !DIExpression()), !dbg !12803
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12804, metadata !DIExpression()), !dbg !12805
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12806
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12806
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12805
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12807
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12808, !ctir !1358
  %3 = load i8*, i8** %name, align 8, !dbg !12808, !ctir !9
  call void @free(i8* %3) #10, !dbg !12809
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12810
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !12810
  call void @free(i8* %5) #10, !dbg !12811
  ret void, !dbg !12812
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !12813 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %new_fd = alloca i32, align 4, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !541
  %fdopendir_errno = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !12817, metadata !DIExpression()), !dbg !12818
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !12819, metadata !DIExpression()), !dbg !12820
  store i32 %extra_flags, i32* %extra_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !12821, metadata !DIExpression()), !dbg !12822
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !12823, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !12825, metadata !DIExpression()), !dbg !12826
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !12827
  %or = or i32 592128, %0, !dbg !12828
  store i32 %or, i32* %open_flags, align 4, !dbg !12826
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !12829, metadata !DIExpression()), !dbg !12830
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !12831
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !12832
  %3 = load i32, i32* %open_flags, align 4, !dbg !12833
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !12834
  store i32 %call, i32* %new_fd, align 4, !dbg !12830
  %4 = load i32, i32* %new_fd, align 4, !dbg !12835
  %cmp = icmp slt i32 %4, 0, !dbg !12837
  br i1 %cmp, label %if.then, label %if.end, !dbg !12838

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !12839
  br label %return, !dbg !12839

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !12840, metadata !DIExpression()), !dbg !12841
  %5 = load i32, i32* %new_fd, align 4, !dbg !12842
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !12843
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !12841
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !12844
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !12844
  br i1 %tobool, label %if.then2, label %if.else, !dbg !12846

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !12847
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !12848
  store i32 %7, i32* %8, align 4, !dbg !12849, !ctir !7
  br label %if.end6, !dbg !12850

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !12851, metadata !DIExpression()), !dbg !12853
  %call3 = call i32* @__errno_location() #15, !dbg !12854
  %9 = load i32, i32* %call3, align 4, !dbg !12854, !ctir !7
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !12853
  %10 = load i32, i32* %new_fd, align 4, !dbg !12855
  %call4 = call i32 @close(i32 %10), !dbg !12856
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !12857
  %call5 = call i32* @__errno_location() #15, !dbg !12858
  store i32 %11, i32* %call5, align 4, !dbg !12859, !ctir !7
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !12860
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !12861
  br label %return, !dbg !12861

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !12862
  ret %struct.__dirstream* %13, !dbg !12862
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_remove_linkdir() #4 !dbg !12863 {
entry:
  ret i32 -1, !dbg !12866
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_restore_linkdir() #4 !dbg !12867 {
entry:
  ret i32 -1, !dbg !12868
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !12869 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !116
  %base = alloca i8*, align 8, !ctir !116
  store i8* %argv0, i8** %argv0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !12870, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !12872, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.declare(metadata i8** %base, metadata !12874, metadata !DIExpression()), !dbg !12875
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !12876
  %cmp = icmp eq i8* %0, null, !dbg !12878
  br i1 %cmp, label %if.then, label %if.end, !dbg !12879

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !12880
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.295, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !12882
  call void @abort() #13, !dbg !12883
  unreachable, !dbg !12883

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !12884
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !12885
  store i8* %call1, i8** %slash, align 8, !dbg !12886
  %3 = load i8*, i8** %slash, align 8, !dbg !12887
  %cmp2 = icmp ne i8* %3, null, !dbg !12888
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !12887

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !12889
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !12890, !ctir !117
  br label %cond.end, !dbg !12887

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !12891
  br label %cond.end, !dbg !12887

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !12887
  store i8* %cond, i8** %base, align 8, !dbg !12892
  %6 = load i8*, i8** %base, align 8, !dbg !12893
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !12895
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !12896
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !12896
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12896
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !12897
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !12898

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !12899
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !12900, !ctir !117
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.296, i64 0, i64 0), i64 7) #14, !dbg !12901
  %cmp6 = icmp eq i32 %call5, 0, !dbg !12902
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !12903

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !12904
  store i8* %9, i8** %argv0.addr, align 8, !dbg !12906
  %10 = load i8*, i8** %base, align 8, !dbg !12907
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.297, i64 0, i64 0), i64 3) #14, !dbg !12909
  %cmp9 = icmp eq i32 %call8, 0, !dbg !12910
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !12911

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !12912
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !12914, !ctir !117
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !12915
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !12916
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !12917
  br label %if.end12, !dbg !12918

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !12919

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !12920
  store i8* %13, i8** @program_name, align 8, !dbg !12921
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !12922
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !12923
  ret void, !dbg !12924
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !12925 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !12927
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !12934, metadata !DIExpression()), !dbg !12935
  store i32 %source_desc, i32* %source_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !12936, metadata !DIExpression()), !dbg !12937
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !12938, metadata !DIExpression()), !dbg !12939
  store i32 %dest_desc, i32* %dest_desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !12940, metadata !DIExpression()), !dbg !12941
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12942, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !12944, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12946, metadata !DIExpression()), !dbg !12947
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !12948
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !12949
  %2 = load i32, i32* %mode.addr, align 4, !dbg !12950
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !12951
  store i32 %call, i32* %ret, align 4, !dbg !12952
  %3 = load i32, i32* %ret, align 4, !dbg !12953
  %cmp = icmp ne i32 %3, 0, !dbg !12955
  br i1 %cmp, label %if.then, label %if.end, !dbg !12956

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !12957
  br label %return, !dbg !12957

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !12958
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !12959
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !12960
  store i32 %call1, i32* %ret, align 4, !dbg !12961
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !12962
  %6 = load i32, i32* %ret, align 4, !dbg !12963
  store i32 %6, i32* %retval, align 4, !dbg !12964
  br label %return, !dbg !12964

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !12965
  ret i32 %7, !dbg !12965
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !12966 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !12968
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12974, metadata !DIExpression()), !dbg !12975
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !12976, metadata !DIExpression()), !dbg !12977
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12978, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !12980, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12982, metadata !DIExpression()), !dbg !12983
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !12984
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !12984
  %1 = load i32, i32* %mode.addr, align 4, !dbg !12985
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !12986, !ctir !12968
  store i32 %1, i32* %mode1, align 8, !dbg !12987, !ctir !239
  %2 = load i8*, i8** %name.addr, align 8, !dbg !12988
  %3 = load i32, i32* %desc.addr, align 4, !dbg !12989
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !12990
  store i32 %call, i32* %ret, align 4, !dbg !12991
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !12992
  %4 = load i32, i32* %ret, align 4, !dbg !12993
  ret i32 %4, !dbg !12994
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !12995 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %p = alloca %struct.quoting_options*, align 8, !ctir !789
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !12998, metadata !DIExpression()), !dbg !12999
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13000, metadata !DIExpression()), !dbg !13001
  %call = call i32* @__errno_location() #15, !dbg !13002
  %0 = load i32, i32* %call, align 4, !dbg !13002, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !13001
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13003, metadata !DIExpression()), !dbg !13004
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13005
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13005
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13005

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13006
  br label %cond.end, !dbg !13005

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13005

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13005
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !13005
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !13007
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !13007
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !13004
  %5 = load i32, i32* %e, align 4, !dbg !13008
  %call2 = call i32* @__errno_location() #15, !dbg !13009
  store i32 %5, i32* %call2, align 4, !dbg !13010, !ctir !7
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13011
  ret %struct.quoting_options* %6, !dbg !13012
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !13013 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13016, metadata !DIExpression()), !dbg !13017
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13018
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13018
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13018

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13019
  br label %cond.end, !dbg !13018

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13018

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13018
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13020, !ctir !801
  %2 = load i32, i32* %style, align 8, !dbg !13020, !ctir !771
  ret i32 %2, !dbg !13021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !13022 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13025, metadata !DIExpression()), !dbg !13026
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13027, metadata !DIExpression()), !dbg !13028
  %0 = load i32, i32* %s.addr, align 4, !dbg !13029
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13030
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13030
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13030

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13031
  br label %cond.end, !dbg !13030

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13030

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13030
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13032, !ctir !790
  store i32 %0, i32* %style, align 8, !dbg !13033, !ctir !771
  ret void, !dbg !13034
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !13035 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !450
  %p = alloca i32*, align 8, !ctir !799
  %shift = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  store i8 %c, i8* %c.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !13040, metadata !DIExpression()), !dbg !13041
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !13044, metadata !DIExpression()), !dbg !13045
  %0 = load i8, i8* %c.addr, align 1, !dbg !13046
  store i8 %0, i8* %uc, align 1, !dbg !13045
  call void @llvm.dbg.declare(metadata i32** %p, metadata !13047, metadata !DIExpression()), !dbg !13048
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13049
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13049
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13049

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13050
  br label %cond.end, !dbg !13049

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13049
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !13051, !ctir !790
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13052, !ctir !796
  %3 = load i8, i8* %uc, align 1, !dbg !13053
  %conv = zext i8 %3 to i64, !dbg !13053
  %div = udiv i64 %conv, 32, !dbg !13054
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !13055, !ctir !70
  store i32* %add.ptr, i32** %p, align 8, !dbg !13048
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13056, metadata !DIExpression()), !dbg !13057
  %4 = load i8, i8* %uc, align 1, !dbg !13058
  %conv1 = zext i8 %4 to i64, !dbg !13058
  %rem = urem i64 %conv1, 32, !dbg !13059
  %conv2 = trunc i64 %rem to i32, !dbg !13058
  store i32 %conv2, i32* %shift, align 4, !dbg !13057
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13060, metadata !DIExpression()), !dbg !13061
  %5 = load i32*, i32** %p, align 8, !dbg !13062
  %6 = load i32, i32* %5, align 4, !dbg !13063, !ctir !70
  %7 = load i32, i32* %shift, align 4, !dbg !13064
  %shr = lshr i32 %6, %7, !dbg !13065
  %and = and i32 %shr, 1, !dbg !13066
  store i32 %and, i32* %r, align 4, !dbg !13061
  %8 = load i32, i32* %i.addr, align 4, !dbg !13067
  %and3 = and i32 %8, 1, !dbg !13068
  %9 = load i32, i32* %r, align 4, !dbg !13069
  %xor = xor i32 %and3, %9, !dbg !13070
  %10 = load i32, i32* %shift, align 4, !dbg !13071
  %shl = shl i32 %xor, %10, !dbg !13072
  %11 = load i32*, i32** %p, align 8, !dbg !13073
  %12 = load i32, i32* %11, align 4, !dbg !13074, !ctir !70
  %xor4 = xor i32 %12, %shl, !dbg !13074
  store i32 %xor4, i32* %11, align 4, !dbg !13074, !ctir !70
  %13 = load i32, i32* %r, align 4, !dbg !13075
  ret i32 %13, !dbg !13076
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !13077 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13080, metadata !DIExpression()), !dbg !13081
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13082, metadata !DIExpression()), !dbg !13083
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13084, metadata !DIExpression()), !dbg !13085
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13086
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13086
  br i1 %tobool, label %if.end, label %if.then, !dbg !13088

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13089
  br label %if.end, !dbg !13090

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13091
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !13092, !ctir !790
  %2 = load i32, i32* %flags, align 4, !dbg !13092, !ctir !7
  store i32 %2, i32* %r, align 4, !dbg !13093
  %3 = load i32, i32* %i.addr, align 4, !dbg !13094
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13095
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !13096, !ctir !790
  store i32 %3, i32* %flags1, align 4, !dbg !13097, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !13098
  ret i32 %5, !dbg !13099
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !13100 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13103, metadata !DIExpression()), !dbg !13104
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13107, metadata !DIExpression()), !dbg !13108
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13109
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13109
  br i1 %tobool, label %if.end, label %if.then, !dbg !13111

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13112
  br label %if.end, !dbg !13113

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13114
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !13115, !ctir !790
  store i32 10, i32* %style, align 8, !dbg !13116, !ctir !771
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !13117
  %tobool1 = icmp ne i8* %2, null, !dbg !13117
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !13119

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !13120
  %tobool2 = icmp ne i8* %3, null, !dbg !13120
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13121

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !13122
  unreachable, !dbg !13122

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !13123
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13124
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !13125, !ctir !790
  store i8* %4, i8** %left_quote5, align 8, !dbg !13126, !ctir !116
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !13127
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13128
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !13129, !ctir !790
  store i8* %6, i8** %right_quote6, align 8, !dbg !13130, !ctir !116
  ret void, !dbg !13131
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !13132 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !800
  %e = alloca i32, align 4, !ctir !7
  %r = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13135, metadata !DIExpression()), !dbg !13136
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13137, metadata !DIExpression()), !dbg !13138
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13139, metadata !DIExpression()), !dbg !13140
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13141, metadata !DIExpression()), !dbg !13142
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13143, metadata !DIExpression()), !dbg !13144
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13145, metadata !DIExpression()), !dbg !13146
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13147
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13147
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13147

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13148
  br label %cond.end, !dbg !13147

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13147

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13147
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !13146
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13149, metadata !DIExpression()), !dbg !13150
  %call = call i32* @__errno_location() #15, !dbg !13151
  %2 = load i32, i32* %call, align 4, !dbg !13151, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !13150
  call void @llvm.dbg.declare(metadata i64* %r, metadata !13152, metadata !DIExpression()), !dbg !13153
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !13154
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13155
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13156
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !13157
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13158
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !13159, !ctir !801
  %8 = load i32, i32* %style, align 8, !dbg !13159, !ctir !771
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13160
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !13161, !ctir !801
  %10 = load i32, i32* %flags, align 4, !dbg !13161, !ctir !7
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13162
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !13163, !ctir !801
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13162, !ctir !802
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13164
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !13165, !ctir !801
  %13 = load i8*, i8** %left_quote, align 8, !dbg !13165, !ctir !116
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13166
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !13167, !ctir !801
  %15 = load i8*, i8** %right_quote, align 8, !dbg !13167, !ctir !116
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !13168
  store i64 %call1, i64* %r, align 8, !dbg !13153
  %16 = load i32, i32* %e, align 4, !dbg !13169
  %call2 = call i32* @__errno_location() #15, !dbg !13170
  store i32 %16, i32* %call2, align 4, !dbg !13171, !ctir !7
  %17 = load i64, i64* %r, align 8, !dbg !13172
  ret i64 %17, !dbg !13173
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !13174 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %orig_buffersize = alloca i64, align 8, !ctir !55
  %quote_string = alloca i8*, align 8, !ctir !116
  %quote_string_len = alloca i64, align 8, !ctir !55
  %backslash_escapes = alloca i8, align 1, !ctir !142
  %unibyte_locale = alloca i8, align 1, !ctir !142
  %elide_outer_quotes = alloca i8, align 1, !ctir !142
  %pending_shell_escape_end = alloca i8, align 1, !ctir !142
  %encountered_single_quote = alloca i8, align 1, !ctir !142
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %c = alloca i8, align 1, !ctir !450
  %esc = alloca i8, align 1, !ctir !450
  %is_right_quote = alloca i8, align 1, !ctir !142
  %escaping = alloca i8, align 1, !ctir !142
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %m = alloca i64, align 8, !ctir !55
  %printable = alloca i8, align 1, !ctir !142
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !810
  %w = alloca i32, align 4, !ctir !822
  %bytes = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %ilim = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13177, metadata !DIExpression()), !dbg !13178
  store i64 %buffersize, i64* %buffersize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13179, metadata !DIExpression()), !dbg !13180
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13181, metadata !DIExpression()), !dbg !13182
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13183, metadata !DIExpression()), !dbg !13184
  store i32 %quoting_style, i32* %quoting_style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !13185, metadata !DIExpression()), !dbg !13186
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13187, metadata !DIExpression()), !dbg !13188
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !13189, metadata !DIExpression()), !dbg !13190
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13191, metadata !DIExpression()), !dbg !13192
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13193, metadata !DIExpression()), !dbg !13194
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13195, metadata !DIExpression()), !dbg !13196
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13197, metadata !DIExpression()), !dbg !13198
  store i64 0, i64* %len, align 8, !dbg !13198
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !13199, metadata !DIExpression()), !dbg !13200
  store i64 0, i64* %orig_buffersize, align 8, !dbg !13200
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !13201, metadata !DIExpression()), !dbg !13202
  store i8* null, i8** %quote_string, align 8, !dbg !13202
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !13203, metadata !DIExpression()), !dbg !13204
  store i64 0, i64* %quote_string_len, align 8, !dbg !13204
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !13205, metadata !DIExpression()), !dbg !13206
  store i8 0, i8* %backslash_escapes, align 1, !dbg !13206
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !13207, metadata !DIExpression()), !dbg !13208
  %call = call i64 @__ctype_get_mb_cur_max() #10, !dbg !13209
  %cmp = icmp eq i64 %call, 1, !dbg !13210
  %frombool = zext i1 %cmp to i8, !dbg !13208
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !13208
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !13211, metadata !DIExpression()), !dbg !13212
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13213
  %and = and i32 %0, 2, !dbg !13214
  %cmp1 = icmp ne i32 %and, 0, !dbg !13215
  %frombool2 = zext i1 %cmp1 to i8, !dbg !13212
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !13212
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !13216, metadata !DIExpression()), !dbg !13217
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13217
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !13218, metadata !DIExpression()), !dbg !13219
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !13219
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !13220, metadata !DIExpression()), !dbg !13221
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13221
  br label %process_input, !dbg !13222

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !13223), !dbg !13224
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !13225
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !13226

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !13227
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13229
  br label %sw.bb3, !dbg !13230

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13231
  %tobool = trunc i8 %2 to i1, !dbg !13231
  br i1 %tobool, label %if.end6, label %if.then, !dbg !13233

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !13234

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !13235
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13235
  %cmp4 = icmp ult i64 %3, %4, !dbg !13235
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13238

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !13235
  %6 = load i64, i64* %len, align 8, !dbg !13235
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !13235, !ctir !9
  store i8 34, i8* %arrayidx, align 1, !dbg !13235
  br label %if.end, !dbg !13235

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !13238
  %inc = add i64 %7, 1, !dbg !13238
  store i64 %inc, i64* %len, align 8, !dbg !13238
  br label %do.end, !dbg !13238

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !13238

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13239
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13240
  store i64 1, i64* %quote_string_len, align 8, !dbg !13241
  br label %sw.epilog, !dbg !13242

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13243
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13244
  br label %sw.epilog, !dbg !13245

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !13246
  %cmp9 = icmp ne i32 %8, 10, !dbg !13249
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !13250

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !13251
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.313, i64 0, i64 0), i32 %9), !dbg !13253
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !13254
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !13255
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i32 %10), !dbg !13256
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !13257
  br label %if.end13, !dbg !13258

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13259
  %tobool14 = trunc i8 %11 to i1, !dbg !13259
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !13261

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !13262
  store i8* %12, i8** %quote_string, align 8, !dbg !13264
  br label %for.cond, !dbg !13265

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !13266
  %14 = load i8, i8* %13, align 1, !dbg !13268, !ctir !117
  %tobool16 = icmp ne i8 %14, 0, !dbg !13269
  br i1 %tobool16, label %for.body, label %for.end, !dbg !13269

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !13270

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !13271
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !13271
  %cmp18 = icmp ult i64 %15, %16, !dbg !13271
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !13274

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !13271
  %18 = load i8, i8* %17, align 1, !dbg !13271, !ctir !117
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !13271
  %20 = load i64, i64* %len, align 8, !dbg !13271
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !13271, !ctir !9
  store i8 %18, i8* %arrayidx20, align 1, !dbg !13271
  br label %if.end21, !dbg !13271

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !13274
  %inc22 = add i64 %21, 1, !dbg !13274
  store i64 %inc22, i64* %len, align 8, !dbg !13274
  br label %do.end23, !dbg !13274

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !13274

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !13275
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13275, !ctir !117
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !13275
  br label %for.cond, !dbg !13276, !llvm.loop !13277

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !13278

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13279
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !13280
  store i8* %23, i8** %quote_string, align 8, !dbg !13281
  %24 = load i8*, i8** %quote_string, align 8, !dbg !13282
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !13283
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !13284
  br label %sw.epilog, !dbg !13285

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13286
  br label %sw.bb27, !dbg !13287

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13288
  br label %sw.bb28, !dbg !13289

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13290
  %tobool29 = trunc i8 %25 to i1, !dbg !13290
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13292

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13293
  br label %if.end31, !dbg !13294

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !13295

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !13296
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13297
  %tobool33 = trunc i8 %26 to i1, !dbg !13297
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !13299

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !13300

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !13301
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !13301
  %cmp36 = icmp ult i64 %27, %28, !dbg !13301
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !13304

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !13301
  %30 = load i64, i64* %len, align 8, !dbg !13301
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !13301, !ctir !9
  store i8 39, i8* %arrayidx38, align 1, !dbg !13301
  br label %if.end39, !dbg !13301

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !13304
  %inc40 = add i64 %31, 1, !dbg !13304
  store i64 %inc40, i64* %len, align 8, !dbg !13304
  br label %do.end41, !dbg !13304

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !13304

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13305
  store i64 1, i64* %quote_string_len, align 8, !dbg !13306
  br label %sw.epilog, !dbg !13307

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13308
  br label %sw.epilog, !dbg !13309

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !13310
  unreachable, !dbg !13310

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !13311
  br label %for.cond44, !dbg !13313

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !13314
  %cmp45 = icmp eq i64 %32, -1, !dbg !13316
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !13314

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !13317
  %34 = load i64, i64* %i, align 8, !dbg !13318
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13317, !ctir !116
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !13317
  %conv = sext i8 %35 to i32, !dbg !13317
  %cmp47 = icmp eq i32 %conv, 0, !dbg !13319
  %conv48 = zext i1 %cmp47 to i32, !dbg !13319
  br label %cond.end, !dbg !13314

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !13320
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !13321
  %cmp49 = icmp eq i64 %36, %37, !dbg !13322
  %conv50 = zext i1 %cmp49 to i32, !dbg !13322
  br label %cond.end, !dbg !13314

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !13314
  %tobool51 = icmp ne i32 %cond, 0, !dbg !13323
  %lnot = xor i1 %tobool51, true, !dbg !13323
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !13324

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13325, metadata !DIExpression()), !dbg !13327
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !13328, metadata !DIExpression()), !dbg !13329
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !13330, metadata !DIExpression()), !dbg !13331
  store i8 0, i8* %is_right_quote, align 1, !dbg !13331
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !13332, metadata !DIExpression()), !dbg !13333
  store i8 0, i8* %escaping, align 1, !dbg !13333
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !13334, metadata !DIExpression()), !dbg !13335
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !13335
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !13336
  %tobool53 = trunc i8 %38 to i1, !dbg !13336
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !13338

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !13339
  %cmp55 = icmp ne i32 %39, 2, !dbg !13340
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !13341

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !13342
  %tobool58 = icmp ne i64 %40, 0, !dbg !13342
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !13343

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !13344
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !13345
  %add = add i64 %41, %42, !dbg !13346
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !13347
  %cmp60 = icmp eq i64 %43, -1, !dbg !13348
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !13349

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !13350
  %cmp63 = icmp ult i64 1, %44, !dbg !13351
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !13347

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !13352
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !13353
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !13354
  br label %cond.end68, !dbg !13347

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !13355
  br label %cond.end68, !dbg !13347

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !13347
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !13356
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !13357

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !13358
  %48 = load i64, i64* %i, align 8, !dbg !13359
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !13360, !ctir !117
  %49 = load i8*, i8** %quote_string, align 8, !dbg !13361
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !13362
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !13363
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13364
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !13365

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13366
  %tobool77 = trunc i8 %51 to i1, !dbg !13366
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13369

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !13370

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !13371
  br label %if.end80, !dbg !13372

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !13373
  %53 = load i64, i64* %i, align 8, !dbg !13374
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !13373, !ctir !116
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !13373
  store i8 %54, i8* %c, align 1, !dbg !13375
  %55 = load i8, i8* %c, align 1, !dbg !13376
  %conv82 = zext i8 %55 to i32, !dbg !13376
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !13377

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !13378
  %tobool84 = trunc i8 %56 to i1, !dbg !13378
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !13381

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !13382

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13384
  %tobool87 = trunc i8 %57 to i1, !dbg !13384
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !13387

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !13384

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !13387
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !13388
  %cmp90 = icmp eq i32 %58, 2, !dbg !13388
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !13388

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13388
  %tobool93 = trunc i8 %59 to i1, !dbg !13388
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !13387

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !13390

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !13392
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !13392
  %cmp96 = icmp ult i64 %60, %61, !dbg !13392
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !13395

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !13392
  %63 = load i64, i64* %len, align 8, !dbg !13392
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !13392, !ctir !9
  store i8 39, i8* %arrayidx99, align 1, !dbg !13392
  br label %if.end100, !dbg !13392

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !13395
  %inc101 = add i64 %64, 1, !dbg !13395
  store i64 %inc101, i64* %len, align 8, !dbg !13395
  br label %do.end102, !dbg !13395

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !13390

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !13396
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !13396
  %cmp104 = icmp ult i64 %65, %66, !dbg !13396
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !13399

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !13396
  %68 = load i64, i64* %len, align 8, !dbg !13396
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !13396, !ctir !9
  store i8 36, i8* %arrayidx107, align 1, !dbg !13396
  br label %if.end108, !dbg !13396

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !13399
  %inc109 = add i64 %69, 1, !dbg !13399
  store i64 %inc109, i64* %len, align 8, !dbg !13399
  br label %do.end110, !dbg !13399

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !13390

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !13400
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !13400
  %cmp112 = icmp ult i64 %70, %71, !dbg !13400
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !13403

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !13400
  %73 = load i64, i64* %len, align 8, !dbg !13400
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !13400, !ctir !9
  store i8 39, i8* %arrayidx115, align 1, !dbg !13400
  br label %if.end116, !dbg !13400

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !13403
  %inc117 = add i64 %74, 1, !dbg !13403
  store i64 %inc117, i64* %len, align 8, !dbg !13403
  br label %do.end118, !dbg !13403

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13390
  br label %if.end119, !dbg !13390

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !13387

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !13404
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !13404
  %cmp121 = icmp ult i64 %75, %76, !dbg !13404
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !13407

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !13404
  %78 = load i64, i64* %len, align 8, !dbg !13404
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !13404, !ctir !9
  store i8 92, i8* %arrayidx124, align 1, !dbg !13404
  br label %if.end125, !dbg !13404

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !13407
  %inc126 = add i64 %79, 1, !dbg !13407
  store i64 %inc126, i64* %len, align 8, !dbg !13407
  br label %do.end127, !dbg !13407

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !13387

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !13408
  %cmp129 = icmp ne i32 %80, 2, !dbg !13410
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !13411

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !13412
  %add132 = add i64 %81, 1, !dbg !13413
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !13414
  %cmp133 = icmp ult i64 %add132, %82, !dbg !13415
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !13416

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !13417
  %84 = load i64, i64* %i, align 8, !dbg !13418
  %add136 = add i64 %84, 1, !dbg !13419
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !13417, !ctir !116
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !13417
  %conv138 = sext i8 %85 to i32, !dbg !13417
  %cmp139 = icmp sle i32 48, %conv138, !dbg !13420
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !13421

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !13422
  %87 = load i64, i64* %i, align 8, !dbg !13423
  %add142 = add i64 %87, 1, !dbg !13424
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !13422, !ctir !116
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !13422
  %conv144 = sext i8 %88 to i32, !dbg !13422
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !13425
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !13426

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !13427

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !13429
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !13429
  %cmp149 = icmp ult i64 %89, %90, !dbg !13429
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !13432

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !13429
  %92 = load i64, i64* %len, align 8, !dbg !13429
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !13429, !ctir !9
  store i8 48, i8* %arrayidx152, align 1, !dbg !13429
  br label %if.end153, !dbg !13429

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !13432
  %inc154 = add i64 %93, 1, !dbg !13432
  store i64 %inc154, i64* %len, align 8, !dbg !13432
  br label %do.end155, !dbg !13432

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !13433

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !13434
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !13434
  %cmp157 = icmp ult i64 %94, %95, !dbg !13434
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !13437

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !13434
  %97 = load i64, i64* %len, align 8, !dbg !13434
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !13434, !ctir !9
  store i8 48, i8* %arrayidx160, align 1, !dbg !13434
  br label %if.end161, !dbg !13434

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !13437
  %inc162 = add i64 %98, 1, !dbg !13437
  store i64 %inc162, i64* %len, align 8, !dbg !13437
  br label %do.end163, !dbg !13437

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !13438

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !13439
  br label %if.end169, !dbg !13440

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !13441
  %and165 = and i32 %99, 1, !dbg !13443
  %tobool166 = icmp ne i32 %and165, 0, !dbg !13443
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !13444

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !13445

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !13446

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !13447
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !13448

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13449
  %tobool172 = trunc i8 %101 to i1, !dbg !13449
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !13452

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !13453

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !13454

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !13455
  %and176 = and i32 %102, 4, !dbg !13457
  %tobool177 = icmp ne i32 %and176, 0, !dbg !13457
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !13458

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !13459
  %add179 = add i64 %103, 2, !dbg !13460
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !13461
  %cmp180 = icmp ult i64 %add179, %104, !dbg !13462
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !13463

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !13464
  %106 = load i64, i64* %i, align 8, !dbg !13465
  %add183 = add i64 %106, 1, !dbg !13466
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !13464, !ctir !116
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !13464
  %conv185 = sext i8 %107 to i32, !dbg !13464
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !13467
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !13468

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !13469
  %109 = load i64, i64* %i, align 8, !dbg !13470
  %add189 = add i64 %109, 2, !dbg !13471
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !13469, !ctir !116
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !13469
  %conv191 = sext i8 %110 to i32, !dbg !13469
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !13472

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13473
  %tobool193 = trunc i8 %111 to i1, !dbg !13473
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !13476

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !13477

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !13478
  %113 = load i64, i64* %i, align 8, !dbg !13479
  %add196 = add i64 %113, 2, !dbg !13480
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !13478, !ctir !116
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !13478
  store i8 %114, i8* %c, align 1, !dbg !13481
  %115 = load i64, i64* %i, align 8, !dbg !13482
  %add198 = add i64 %115, 2, !dbg !13482
  store i64 %add198, i64* %i, align 8, !dbg !13482
  br label %do.body199, !dbg !13483

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !13484
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !13484
  %cmp200 = icmp ult i64 %116, %117, !dbg !13484
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !13487

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !13484
  %119 = load i64, i64* %len, align 8, !dbg !13484
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !13484, !ctir !9
  store i8 63, i8* %arrayidx203, align 1, !dbg !13484
  br label %if.end204, !dbg !13484

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !13487
  %inc205 = add i64 %120, 1, !dbg !13487
  store i64 %inc205, i64* %len, align 8, !dbg !13487
  br label %do.end206, !dbg !13487

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !13488

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !13489
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !13489
  %cmp208 = icmp ult i64 %121, %122, !dbg !13489
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !13492

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !13489
  %124 = load i64, i64* %len, align 8, !dbg !13489
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !13489, !ctir !9
  store i8 34, i8* %arrayidx211, align 1, !dbg !13489
  br label %if.end212, !dbg !13489

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !13492
  %inc213 = add i64 %125, 1, !dbg !13492
  store i64 %inc213, i64* %len, align 8, !dbg !13492
  br label %do.end214, !dbg !13492

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !13493

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !13494
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !13494
  %cmp216 = icmp ult i64 %126, %127, !dbg !13494
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !13497

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !13494
  %129 = load i64, i64* %len, align 8, !dbg !13494
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !13494, !ctir !9
  store i8 34, i8* %arrayidx219, align 1, !dbg !13494
  br label %if.end220, !dbg !13494

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !13497
  %inc221 = add i64 %130, 1, !dbg !13497
  store i64 %inc221, i64* %len, align 8, !dbg !13497
  br label %do.end222, !dbg !13497

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !13498

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !13499
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !13499
  %cmp224 = icmp ult i64 %131, %132, !dbg !13499
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !13502

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !13499
  %134 = load i64, i64* %len, align 8, !dbg !13499
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !13499, !ctir !9
  store i8 63, i8* %arrayidx227, align 1, !dbg !13499
  br label %if.end228, !dbg !13499

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !13502
  %inc229 = add i64 %135, 1, !dbg !13502
  store i64 %inc229, i64* %len, align 8, !dbg !13502
  br label %do.end230, !dbg !13502

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !13503

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !13504

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !13505

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !13506

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !13507

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !13508

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !13509
  br label %c_escape, !dbg !13510

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !13511
  br label %c_escape, !dbg !13512

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !13513
  br label %c_escape, !dbg !13514

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !13515
  br label %c_and_shell_escape, !dbg !13516

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !13517
  br label %c_and_shell_escape, !dbg !13518

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !13519
  br label %c_and_shell_escape, !dbg !13520

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !13521
  br label %c_escape, !dbg !13522

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !13523
  store i8 %136, i8* %esc, align 1, !dbg !13524
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !13525
  %cmp244 = icmp eq i32 %137, 2, !dbg !13527
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !13528

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13529
  %tobool247 = trunc i8 %138 to i1, !dbg !13529
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !13532

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !13533

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !13534

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !13535
  %tobool251 = trunc i8 %139 to i1, !dbg !13535
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !13537

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13538
  %tobool254 = trunc i8 %140 to i1, !dbg !13538
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !13539

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !13540
  %tobool257 = icmp ne i64 %141, 0, !dbg !13540
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !13541

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !13542

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !13540

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !13543), !dbg !13544
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !13545
  %cmp260 = icmp eq i32 %142, 2, !dbg !13547
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !13548

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13549
  %tobool263 = trunc i8 %143 to i1, !dbg !13549
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !13550

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !13551

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !13549

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !13552), !dbg !13553
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !13554
  %tobool267 = trunc i8 %144 to i1, !dbg !13554
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !13556

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !13557
  store i8 %145, i8* %c, align 1, !dbg !13559
  br label %store_escape, !dbg !13560

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !13561

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !13562
  %cmp271 = icmp eq i64 %146, -1, !dbg !13564
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !13565

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !13566
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !13566, !ctir !116
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !13566
  %conv275 = sext i8 %148 to i32, !dbg !13566
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !13567
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !13562

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !13568
  %cmp279 = icmp eq i64 %149, 1, !dbg !13569
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !13565

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !13570

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !13571

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !13572
  %cmp284 = icmp ne i64 %150, 0, !dbg !13574
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !13575

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !13576

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !13577

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !13578
  br label %sw.bb289, !dbg !13579

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !13580
  %cmp290 = icmp eq i32 %151, 2, !dbg !13582
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !13583

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13584
  %tobool293 = trunc i8 %152 to i1, !dbg !13584
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !13585

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !13586

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !13587

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !13588
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !13589
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !13590
  %cmp298 = icmp eq i32 %153, 2, !dbg !13592
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !13593

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13594
  %tobool301 = trunc i8 %154 to i1, !dbg !13594
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !13597

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !13598

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !13599
  %tobool304 = icmp ne i64 %155, 0, !dbg !13599
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !13601

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !13602
  %tobool306 = icmp ne i64 %156, 0, !dbg !13602
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !13603

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !13604
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !13606
  store i64 0, i64* %buffersize.addr, align 8, !dbg !13607
  br label %if.end308, !dbg !13608

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !13609

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !13610
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !13610
  %cmp310 = icmp ult i64 %158, %159, !dbg !13610
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !13613

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !13610
  %161 = load i64, i64* %len, align 8, !dbg !13610
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !13610, !ctir !9
  store i8 39, i8* %arrayidx313, align 1, !dbg !13610
  br label %if.end314, !dbg !13610

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !13613
  %inc315 = add i64 %162, 1, !dbg !13613
  store i64 %inc315, i64* %len, align 8, !dbg !13613
  br label %do.end316, !dbg !13613

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !13614

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !13615
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !13615
  %cmp318 = icmp ult i64 %163, %164, !dbg !13615
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !13618

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !13615
  %166 = load i64, i64* %len, align 8, !dbg !13615
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !13615, !ctir !9
  store i8 92, i8* %arrayidx321, align 1, !dbg !13615
  br label %if.end322, !dbg !13615

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !13618
  %inc323 = add i64 %167, 1, !dbg !13618
  store i64 %inc323, i64* %len, align 8, !dbg !13618
  br label %do.end324, !dbg !13618

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !13619

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !13620
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !13620
  %cmp326 = icmp ult i64 %168, %169, !dbg !13620
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !13623

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !13620
  %171 = load i64, i64* %len, align 8, !dbg !13620
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !13620, !ctir !9
  store i8 39, i8* %arrayidx329, align 1, !dbg !13620
  br label %if.end330, !dbg !13620

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !13623
  %inc331 = add i64 %172, 1, !dbg !13623
  store i64 %inc331, i64* %len, align 8, !dbg !13623
  br label %do.end332, !dbg !13623

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13624
  br label %if.end333, !dbg !13625

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !13626

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !13627
  br label %sw.epilog564, !dbg !13628

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !13629, metadata !DIExpression()), !dbg !13631
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !13632, metadata !DIExpression()), !dbg !13633
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !13634
  %tobool336 = trunc i8 %173 to i1, !dbg !13634
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !13636

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !13637
  %call338 = call i16** @__ctype_b_loc() #15, !dbg !13639
  %174 = load i16*, i16** %call338, align 8, !dbg !13639, !ctir !808
  %175 = load i8, i8* %c, align 1, !dbg !13639
  %conv339 = zext i8 %175 to i32, !dbg !13639
  %idxprom = sext i32 %conv339 to i64, !dbg !13639
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !13639, !ctir !808
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !13639
  %conv341 = zext i16 %176 to i32, !dbg !13639
  %and342 = and i32 %conv341, 16384, !dbg !13639
  %cmp343 = icmp ne i32 %and342, 0, !dbg !13640
  %frombool345 = zext i1 %cmp343 to i8, !dbg !13641
  store i8 %frombool345, i8* %printable, align 1, !dbg !13641
  br label %if.end410, !dbg !13642

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !13643, metadata !DIExpression()), !dbg !13645
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !13646
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !13646
  store i64 0, i64* %m, align 8, !dbg !13647
  store i8 1, i8* %printable, align 1, !dbg !13648
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !13649
  %cmp347 = icmp eq i64 %178, -1, !dbg !13651
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !13652

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !13653
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !13654
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !13655
  br label %if.end351, !dbg !13656

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !13657

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !13658, metadata !DIExpression()), !dbg !13660
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13661, metadata !DIExpression()), !dbg !13662
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !13663
  %181 = load i64, i64* %i, align 8, !dbg !13664
  %182 = load i64, i64* %m, align 8, !dbg !13665
  %add353 = add i64 %181, %182, !dbg !13666
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !13663, !ctir !116
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !13667
  %184 = load i64, i64* %i, align 8, !dbg !13668
  %185 = load i64, i64* %m, align 8, !dbg !13669
  %add355 = add i64 %184, %185, !dbg !13670
  %sub = sub i64 %183, %add355, !dbg !13671
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !13672
  store i64 %call356, i64* %bytes, align 8, !dbg !13662
  %186 = load i64, i64* %bytes, align 8, !dbg !13673
  %cmp357 = icmp eq i64 %186, 0, !dbg !13675
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !13676

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !13677

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !13678
  %cmp361 = icmp eq i64 %187, -1, !dbg !13680
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !13681

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !13682
  br label %do.end409, !dbg !13684

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !13685
  %cmp365 = icmp eq i64 %188, -2, !dbg !13687
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !13688

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !13689
  br label %while.cond, !dbg !13691

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !13692
  %190 = load i64, i64* %m, align 8, !dbg !13693
  %add368 = add i64 %189, %190, !dbg !13694
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !13695
  %cmp369 = icmp ult i64 %add368, %191, !dbg !13696
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !13697

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !13698
  %193 = load i64, i64* %i, align 8, !dbg !13699
  %194 = load i64, i64* %m, align 8, !dbg !13700
  %add371 = add i64 %193, %194, !dbg !13701
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !13698, !ctir !116
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !13698
  %conv373 = sext i8 %195 to i32, !dbg !13698
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !13697
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !13702
  br i1 %196, label %while.body, label %while.end, !dbg !13691

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !13703
  %inc375 = add i64 %197, 1, !dbg !13703
  store i64 %inc375, i64* %m, align 8, !dbg !13703
  br label %while.cond, !dbg !13691, !llvm.loop !13704

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !13705

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13706
  %tobool377 = trunc i8 %198 to i1, !dbg !13706
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !13709

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !13710
  %cmp380 = icmp eq i32 %199, 2, !dbg !13711
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !13712

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !13713, metadata !DIExpression()), !dbg !13715
  store i64 1, i64* %j, align 8, !dbg !13716
  br label %for.cond383, !dbg !13718

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !13719
  %201 = load i64, i64* %bytes, align 8, !dbg !13721
  %cmp384 = icmp ult i64 %200, %201, !dbg !13722
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !13723

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !13724
  %203 = load i64, i64* %i, align 8, !dbg !13725
  %204 = load i64, i64* %m, align 8, !dbg !13726
  %add387 = add i64 %203, %204, !dbg !13727
  %205 = load i64, i64* %j, align 8, !dbg !13728
  %add388 = add i64 %add387, %205, !dbg !13729
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !13724, !ctir !116
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !13724
  %conv390 = sext i8 %206 to i32, !dbg !13724
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !13730

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !13731

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !13733

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !13734

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !13735
  %inc395 = add i64 %207, 1, !dbg !13735
  store i64 %inc395, i64* %j, align 8, !dbg !13735
  br label %for.cond383, !dbg !13736, !llvm.loop !13737

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !13739

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !13740
  %call398 = call i32 @iswprint(i32 %208) #10, !dbg !13742
  %tobool399 = icmp ne i32 %call398, 0, !dbg !13742
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !13743

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !13744
  br label %if.end401, !dbg !13745

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !13746
  %210 = load i64, i64* %m, align 8, !dbg !13747
  %add402 = add i64 %210, %209, !dbg !13747
  store i64 %add402, i64* %m, align 8, !dbg !13747
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !13748

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !13749
  %tobool407 = icmp ne i32 %call406, 0, !dbg !13750
  %lnot408 = xor i1 %tobool407, true, !dbg !13750
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !13748, !llvm.loop !13751

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !13753
  %tobool411 = trunc i8 %211 to i1, !dbg !13753
  %frombool412 = zext i1 %tobool411 to i8, !dbg !13754
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !13754
  %212 = load i64, i64* %m, align 8, !dbg !13755
  %cmp413 = icmp ult i64 1, %212, !dbg !13757
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !13758

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !13759
  %tobool415 = trunc i8 %213 to i1, !dbg !13759
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !13760

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !13761
  %tobool418 = trunc i8 %214 to i1, !dbg !13761
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !13762

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !13763, metadata !DIExpression()), !dbg !13765
  %215 = load i64, i64* %i, align 8, !dbg !13766
  %216 = load i64, i64* %m, align 8, !dbg !13767
  %add420 = add i64 %215, %216, !dbg !13768
  store i64 %add420, i64* %ilim, align 8, !dbg !13765
  br label %for.cond421, !dbg !13769

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !13770
  %tobool422 = trunc i8 %217 to i1, !dbg !13770
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !13775

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !13776
  %tobool425 = trunc i8 %218 to i1, !dbg !13776
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !13777

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !13778

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13780
  %tobool428 = trunc i8 %219 to i1, !dbg !13780
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !13783

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !13780

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !13783
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !13784
  %cmp431 = icmp eq i32 %220, 2, !dbg !13784
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !13784

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13784
  %tobool434 = trunc i8 %221 to i1, !dbg !13784
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !13783

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !13786

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !13788
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !13788
  %cmp437 = icmp ult i64 %222, %223, !dbg !13788
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !13791

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !13788
  %225 = load i64, i64* %len, align 8, !dbg !13788
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !13788, !ctir !9
  store i8 39, i8* %arrayidx440, align 1, !dbg !13788
  br label %if.end441, !dbg !13788

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !13791
  %inc442 = add i64 %226, 1, !dbg !13791
  store i64 %inc442, i64* %len, align 8, !dbg !13791
  br label %do.end444, !dbg !13791

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !13786

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !13792
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !13792
  %cmp446 = icmp ult i64 %227, %228, !dbg !13792
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !13795

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !13792
  %230 = load i64, i64* %len, align 8, !dbg !13792
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !13792, !ctir !9
  store i8 36, i8* %arrayidx449, align 1, !dbg !13792
  br label %if.end450, !dbg !13792

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !13795
  %inc451 = add i64 %231, 1, !dbg !13795
  store i64 %inc451, i64* %len, align 8, !dbg !13795
  br label %do.end453, !dbg !13795

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !13786

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !13796
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !13796
  %cmp455 = icmp ult i64 %232, %233, !dbg !13796
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !13799

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !13796
  %235 = load i64, i64* %len, align 8, !dbg !13796
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !13796, !ctir !9
  store i8 39, i8* %arrayidx458, align 1, !dbg !13796
  br label %if.end459, !dbg !13796

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !13799
  %inc460 = add i64 %236, 1, !dbg !13799
  store i64 %inc460, i64* %len, align 8, !dbg !13799
  br label %do.end462, !dbg !13799

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13786
  br label %if.end463, !dbg !13786

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !13783

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !13800
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !13800
  %cmp465 = icmp ult i64 %237, %238, !dbg !13800
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !13803

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !13800
  %240 = load i64, i64* %len, align 8, !dbg !13800
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !13800, !ctir !9
  store i8 92, i8* %arrayidx468, align 1, !dbg !13800
  br label %if.end469, !dbg !13800

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !13803
  %inc470 = add i64 %241, 1, !dbg !13803
  store i64 %inc470, i64* %len, align 8, !dbg !13803
  br label %do.end472, !dbg !13803

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !13783

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !13804

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !13805
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !13805
  %cmp476 = icmp ult i64 %242, %243, !dbg !13805
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !13808

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !13805
  %conv479 = zext i8 %244 to i32, !dbg !13805
  %shr = ashr i32 %conv479, 6, !dbg !13805
  %add480 = add nsw i32 48, %shr, !dbg !13805
  %conv481 = trunc i32 %add480 to i8, !dbg !13805
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !13805
  %246 = load i64, i64* %len, align 8, !dbg !13805
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !13805, !ctir !9
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !13805
  br label %if.end483, !dbg !13805

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !13808
  %inc484 = add i64 %247, 1, !dbg !13808
  store i64 %inc484, i64* %len, align 8, !dbg !13808
  br label %do.end486, !dbg !13808

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !13809

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !13810
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !13810
  %cmp488 = icmp ult i64 %248, %249, !dbg !13810
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !13813

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !13810
  %conv491 = zext i8 %250 to i32, !dbg !13810
  %shr492 = ashr i32 %conv491, 3, !dbg !13810
  %and493 = and i32 %shr492, 7, !dbg !13810
  %add494 = add nsw i32 48, %and493, !dbg !13810
  %conv495 = trunc i32 %add494 to i8, !dbg !13810
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !13810
  %252 = load i64, i64* %len, align 8, !dbg !13810
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !13810, !ctir !9
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !13810
  br label %if.end497, !dbg !13810

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !13813
  %inc498 = add i64 %253, 1, !dbg !13813
  store i64 %inc498, i64* %len, align 8, !dbg !13813
  br label %do.end500, !dbg !13813

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !13814
  %conv501 = zext i8 %254 to i32, !dbg !13814
  %and502 = and i32 %conv501, 7, !dbg !13815
  %add503 = add nsw i32 48, %and502, !dbg !13816
  %conv504 = trunc i32 %add503 to i8, !dbg !13817
  store i8 %conv504, i8* %c, align 1, !dbg !13818
  br label %if.end518, !dbg !13819

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !13820
  %tobool506 = trunc i8 %255 to i1, !dbg !13820
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !13822

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !13823

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !13825
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !13825
  %cmp509 = icmp ult i64 %256, %257, !dbg !13825
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !13828

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !13825
  %259 = load i64, i64* %len, align 8, !dbg !13825
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !13825, !ctir !9
  store i8 92, i8* %arrayidx512, align 1, !dbg !13825
  br label %if.end513, !dbg !13825

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !13828
  %inc514 = add i64 %260, 1, !dbg !13828
  store i64 %inc514, i64* %len, align 8, !dbg !13828
  br label %do.end516, !dbg !13828

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !13829
  br label %if.end517, !dbg !13830

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !13831
  %262 = load i64, i64* %i, align 8, !dbg !13833
  %add519 = add i64 %262, 1, !dbg !13834
  %cmp520 = icmp ule i64 %261, %add519, !dbg !13835
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !13836

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !13837

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !13838

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13839
  %tobool525 = trunc i8 %263 to i1, !dbg !13839
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !13839

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !13839
  %tobool528 = trunc i8 %264 to i1, !dbg !13839
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !13842

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !13843

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !13845
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !13845
  %cmp531 = icmp ult i64 %265, %266, !dbg !13845
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !13848

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !13845
  %268 = load i64, i64* %len, align 8, !dbg !13845
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !13845, !ctir !9
  store i8 39, i8* %arrayidx534, align 1, !dbg !13845
  br label %if.end535, !dbg !13845

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !13848
  %inc536 = add i64 %269, 1, !dbg !13848
  store i64 %inc536, i64* %len, align 8, !dbg !13848
  br label %do.end538, !dbg !13848

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !13843

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !13849
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !13849
  %cmp540 = icmp ult i64 %270, %271, !dbg !13849
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !13852

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !13849
  %273 = load i64, i64* %len, align 8, !dbg !13849
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !13849, !ctir !9
  store i8 39, i8* %arrayidx543, align 1, !dbg !13849
  br label %if.end544, !dbg !13849

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !13852
  %inc545 = add i64 %274, 1, !dbg !13852
  store i64 %inc545, i64* %len, align 8, !dbg !13852
  br label %do.end547, !dbg !13852

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13843
  br label %if.end548, !dbg !13843

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !13842

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !13853

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !13854
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !13854
  %cmp552 = icmp ult i64 %275, %276, !dbg !13854
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !13857

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !13854
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !13854
  %279 = load i64, i64* %len, align 8, !dbg !13854
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !13854, !ctir !9
  store i8 %277, i8* %arrayidx555, align 1, !dbg !13854
  br label %if.end556, !dbg !13854

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !13857
  %inc557 = add i64 %280, 1, !dbg !13857
  store i64 %inc557, i64* %len, align 8, !dbg !13857
  br label %do.end559, !dbg !13857

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !13858
  %282 = load i64, i64* %i, align 8, !dbg !13859
  %inc560 = add i64 %282, 1, !dbg !13859
  store i64 %inc560, i64* %i, align 8, !dbg !13859
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !13858, !ctir !116
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !13858
  store i8 %283, i8* %c, align 1, !dbg !13860
  br label %for.cond421, !dbg !13861, !llvm.loop !13862

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !13865

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !13866

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !13867
  %tobool565 = trunc i8 %284 to i1, !dbg !13867
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !13869

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !13870
  %cmp568 = icmp ne i32 %285, 2, !dbg !13871
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !13872

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13873
  %tobool571 = trunc i8 %286 to i1, !dbg !13873
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !13874

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !13875
  %tobool574 = icmp ne i32* %287, null, !dbg !13875
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !13876

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !13877
  %289 = load i8, i8* %c, align 1, !dbg !13878
  %conv576 = zext i8 %289 to i64, !dbg !13878
  %div = udiv i64 %conv576, 32, !dbg !13879
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !13877, !ctir !823
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !13877
  %291 = load i8, i8* %c, align 1, !dbg !13880
  %conv578 = zext i8 %291 to i64, !dbg !13880
  %rem = urem i64 %conv578, 32, !dbg !13881
  %sh_prom = trunc i64 %rem to i32, !dbg !13882
  %shr579 = lshr i32 %290, %sh_prom, !dbg !13882
  %and580 = and i32 %shr579, 1, !dbg !13883
  %tobool581 = icmp ne i32 %and580, 0, !dbg !13883
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !13884

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !13885
  %tobool583 = trunc i8 %292 to i1, !dbg !13885
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !13886

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !13887

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !13885

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !13888), !dbg !13889
  br label %do.body586, !dbg !13890

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13891
  %tobool587 = trunc i8 %293 to i1, !dbg !13891
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !13894

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !13891

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !13894
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !13895
  %cmp590 = icmp eq i32 %294, 2, !dbg !13895
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !13895

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13895
  %tobool593 = trunc i8 %295 to i1, !dbg !13895
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !13894

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !13897

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !13899
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !13899
  %cmp596 = icmp ult i64 %296, %297, !dbg !13899
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !13902

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !13899
  %299 = load i64, i64* %len, align 8, !dbg !13899
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !13899, !ctir !9
  store i8 39, i8* %arrayidx599, align 1, !dbg !13899
  br label %if.end600, !dbg !13899

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !13902
  %inc601 = add i64 %300, 1, !dbg !13902
  store i64 %inc601, i64* %len, align 8, !dbg !13902
  br label %do.end603, !dbg !13902

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !13897

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !13903
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !13903
  %cmp605 = icmp ult i64 %301, %302, !dbg !13903
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !13906

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !13903
  %304 = load i64, i64* %len, align 8, !dbg !13903
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !13903, !ctir !9
  store i8 36, i8* %arrayidx608, align 1, !dbg !13903
  br label %if.end609, !dbg !13903

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !13906
  %inc610 = add i64 %305, 1, !dbg !13906
  store i64 %inc610, i64* %len, align 8, !dbg !13906
  br label %do.end612, !dbg !13906

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !13897

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !13907
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !13907
  %cmp614 = icmp ult i64 %306, %307, !dbg !13907
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !13910

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !13907
  %309 = load i64, i64* %len, align 8, !dbg !13907
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !13907, !ctir !9
  store i8 39, i8* %arrayidx617, align 1, !dbg !13907
  br label %if.end618, !dbg !13907

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !13910
  %inc619 = add i64 %310, 1, !dbg !13910
  store i64 %inc619, i64* %len, align 8, !dbg !13910
  br label %do.end621, !dbg !13910

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13897
  br label %if.end622, !dbg !13897

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !13894

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !13911
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !13911
  %cmp624 = icmp ult i64 %311, %312, !dbg !13911
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !13914

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !13911
  %314 = load i64, i64* %len, align 8, !dbg !13911
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !13911, !ctir !9
  store i8 92, i8* %arrayidx627, align 1, !dbg !13911
  br label %if.end628, !dbg !13911

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !13914
  %inc629 = add i64 %315, 1, !dbg !13914
  store i64 %inc629, i64* %len, align 8, !dbg !13914
  br label %do.end631, !dbg !13914

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !13894

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !13894

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !13915), !dbg !13916
  br label %do.body634, !dbg !13917

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13918
  %tobool635 = trunc i8 %316 to i1, !dbg !13918
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !13918

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !13918
  %tobool638 = trunc i8 %317 to i1, !dbg !13918
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !13921

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !13922

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !13924
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !13924
  %cmp641 = icmp ult i64 %318, %319, !dbg !13924
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !13927

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !13924
  %321 = load i64, i64* %len, align 8, !dbg !13924
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !13924, !ctir !9
  store i8 39, i8* %arrayidx644, align 1, !dbg !13924
  br label %if.end645, !dbg !13924

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !13927
  %inc646 = add i64 %322, 1, !dbg !13927
  store i64 %inc646, i64* %len, align 8, !dbg !13927
  br label %do.end648, !dbg !13927

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !13922

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !13928
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !13928
  %cmp650 = icmp ult i64 %323, %324, !dbg !13928
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !13931

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !13928
  %326 = load i64, i64* %len, align 8, !dbg !13928
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !13928, !ctir !9
  store i8 39, i8* %arrayidx653, align 1, !dbg !13928
  br label %if.end654, !dbg !13928

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !13931
  %inc655 = add i64 %327, 1, !dbg !13931
  store i64 %inc655, i64* %len, align 8, !dbg !13931
  br label %do.end657, !dbg !13931

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13922
  br label %if.end658, !dbg !13922

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !13921

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !13932

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !13933
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !13933
  %cmp662 = icmp ult i64 %328, %329, !dbg !13933
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !13936

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !13933
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !13933
  %332 = load i64, i64* %len, align 8, !dbg !13933
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !13933, !ctir !9
  store i8 %330, i8* %arrayidx665, align 1, !dbg !13933
  br label %if.end666, !dbg !13933

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !13936
  %inc667 = add i64 %333, 1, !dbg !13936
  store i64 %inc667, i64* %len, align 8, !dbg !13936
  br label %do.end669, !dbg !13936

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !13937
  %tobool670 = trunc i8 %334 to i1, !dbg !13937
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !13939

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13940
  br label %if.end672, !dbg !13941

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !13942

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !13943
  %inc674 = add i64 %335, 1, !dbg !13943
  store i64 %inc674, i64* %i, align 8, !dbg !13943
  br label %for.cond44, !dbg !13944, !llvm.loop !13945

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !13947
  %cmp676 = icmp eq i64 %336, 0, !dbg !13949
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !13950

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !13951
  %cmp679 = icmp eq i32 %337, 2, !dbg !13952
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !13953

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13954
  %tobool682 = trunc i8 %338 to i1, !dbg !13954
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !13955

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !13956

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !13957
  %cmp686 = icmp eq i32 %339, 2, !dbg !13959
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !13960

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13961
  %tobool689 = trunc i8 %340 to i1, !dbg !13961
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !13962

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !13963
  %tobool691 = trunc i8 %341 to i1, !dbg !13963
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !13964

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13965
  %tobool694 = trunc i8 %342 to i1, !dbg !13965
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !13968

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !13969
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !13970
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !13971
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !13972
  %347 = load i32, i32* %flags.addr, align 4, !dbg !13973
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !13974
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !13975
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !13976
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !13977
  store i64 %call696, i64* %retval, align 8, !dbg !13978
  br label %return, !dbg !13978

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !13979
  %tobool698 = icmp ne i64 %351, 0, !dbg !13979
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !13981

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !13982
  %tobool700 = icmp ne i64 %352, 0, !dbg !13982
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !13983

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !13984
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !13986
  store i64 0, i64* %len, align 8, !dbg !13987
  br label %process_input, !dbg !13988

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !13989

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !13990
  %tobool705 = icmp ne i8* %354, null, !dbg !13990
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !13992

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13993
  %tobool707 = trunc i8 %355 to i1, !dbg !13993
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !13994

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !13995

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !13996
  %357 = load i8, i8* %356, align 1, !dbg !13999, !ctir !117
  %tobool710 = icmp ne i8 %357, 0, !dbg !14000
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14000

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14001

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14002
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14002
  %cmp713 = icmp ult i64 %358, %359, !dbg !14002
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !14005

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14002
  %361 = load i8, i8* %360, align 1, !dbg !14002, !ctir !117
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14002
  %363 = load i64, i64* %len, align 8, !dbg !14002
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14002, !ctir !9
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14002
  br label %if.end717, !dbg !14002

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !14005
  %inc718 = add i64 %364, 1, !dbg !14005
  store i64 %inc718, i64* %len, align 8, !dbg !14005
  br label %do.end720, !dbg !14005

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !14005

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !14006
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !14006, !ctir !117
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !14006
  br label %for.cond709, !dbg !14007, !llvm.loop !14008

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !14009

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !14010
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !14012
  %cmp725 = icmp ult i64 %366, %367, !dbg !14013
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !14014

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !14015
  %369 = load i64, i64* %len, align 8, !dbg !14016
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !14015, !ctir !9
  store i8 0, i8* %arrayidx728, align 1, !dbg !14017
  br label %if.end729, !dbg !14015

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !14018
  store i64 %370, i64* %retval, align 8, !dbg !14019
  br label %return, !dbg !14019

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !14020), !dbg !14021
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !14022
  %cmp730 = icmp eq i32 %371, 2, !dbg !14024
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !14025

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !14026
  %tobool733 = trunc i8 %372 to i1, !dbg !14026
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !14027

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !14028
  br label %if.end736, !dbg !14029

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !14030
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !14031
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !14032
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !14033
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !14034
  %378 = load i32, i32* %flags.addr, align 4, !dbg !14035
  %and737 = and i32 %378, -3, !dbg !14036
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !14037
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !14038
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !14039
  store i64 %call738, i64* %retval, align 8, !dbg !14040
  br label %return, !dbg !14040

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !14041
  ret i64 %381, !dbg !14041
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !14042 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !116
  %locale_code = alloca i8*, align 8, !ctir !116
  store i8* %msgid, i8** %msgid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !14045, metadata !DIExpression()), !dbg !14046
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14047, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !14049, metadata !DIExpression()), !dbg !14050
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !14051
  %call = call i8* @gettext(i8* %0) #10, !dbg !14051
  store i8* %call, i8** %translation, align 8, !dbg !14050
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !14052, metadata !DIExpression()), !dbg !14053
  %1 = load i8*, i8** %translation, align 8, !dbg !14054
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !14056
  %cmp = icmp ne i8* %1, %2, !dbg !14057
  br i1 %cmp, label %if.then, label %if.end, !dbg !14058

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !14059
  store i8* %3, i8** %retval, align 8, !dbg !14060
  br label %return, !dbg !14060

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !14061
  store i8* %call1, i8** %locale_code, align 8, !dbg !14062
  %4 = load i8*, i8** %locale_code, align 8, !dbg !14063
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.315, i64 0, i64 0)) #14, !dbg !14063
  %cmp3 = icmp eq i32 %call2, 0, !dbg !14063
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14065

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !14066
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !14066, !ctir !116
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14066
  %conv = sext i8 %6 to i32, !dbg !14066
  %cmp5 = icmp eq i32 %conv, 96, !dbg !14067
  %7 = zext i1 %cmp5 to i64, !dbg !14066
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.316, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.317, i64 0, i64 0), !dbg !14066
  store i8* %cond, i8** %retval, align 8, !dbg !14068
  br label %return, !dbg !14068

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !14069
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.318, i64 0, i64 0)) #14, !dbg !14069
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14069
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14071

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !14072
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !14072, !ctir !116
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !14072
  %conv13 = sext i8 %10 to i32, !dbg !14072
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !14073
  %11 = zext i1 %cmp14 to i64, !dbg !14072
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.319, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.320, i64 0, i64 0), !dbg !14072
  store i8* %cond16, i8** %retval, align 8, !dbg !14074
  br label %return, !dbg !14074

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !14075
  %cmp18 = icmp eq i32 %12, 9, !dbg !14076
  %13 = zext i1 %cmp18 to i64, !dbg !14075
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), !dbg !14075
  store i8* %cond20, i8** %retval, align 8, !dbg !14077
  br label %return, !dbg !14077

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14078
  ret i8* %14, !dbg !14078
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14079 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14082, metadata !DIExpression()), !dbg !14083
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14084, metadata !DIExpression()), !dbg !14085
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14086, metadata !DIExpression()), !dbg !14087
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14088
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14089
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14090
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !14091
  ret i8* %call, !dbg !14092
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !14093 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !800
  %e = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !55
  %buf = alloca i8*, align 8, !ctir !9
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14096, metadata !DIExpression()), !dbg !14097
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14098, metadata !DIExpression()), !dbg !14099
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !14100, metadata !DIExpression()), !dbg !14101
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14102, metadata !DIExpression()), !dbg !14103
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14104, metadata !DIExpression()), !dbg !14105
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14106
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14106
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14106

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14107
  br label %cond.end, !dbg !14106

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14106

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14106
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14105
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14108, metadata !DIExpression()), !dbg !14109
  %call = call i32* @__errno_location() #15, !dbg !14110
  %2 = load i32, i32* %call, align 4, !dbg !14110, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !14109
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14111, metadata !DIExpression()), !dbg !14112
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14113
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !14114, !ctir !801
  %4 = load i32, i32* %flags1, align 4, !dbg !14114, !ctir !7
  %5 = load i64*, i64** %size.addr, align 8, !dbg !14115
  %tobool2 = icmp ne i64* %5, null, !dbg !14115
  %6 = zext i1 %tobool2 to i64, !dbg !14115
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !14115
  %or = or i32 %4, %cond3, !dbg !14116
  store i32 %or, i32* %flags, align 4, !dbg !14112
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !14117, metadata !DIExpression()), !dbg !14118
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14119
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !14120
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14121
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !14122, !ctir !801
  %10 = load i32, i32* %style, align 8, !dbg !14122, !ctir !771
  %11 = load i32, i32* %flags, align 4, !dbg !14123
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14124
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !14125, !ctir !801
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14124, !ctir !802
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14126
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !14127, !ctir !801
  %14 = load i8*, i8** %left_quote, align 8, !dbg !14127, !ctir !116
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14128
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !14129, !ctir !801
  %16 = load i8*, i8** %right_quote, align 8, !dbg !14129, !ctir !116
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !14130
  %add = add i64 %call4, 1, !dbg !14131
  store i64 %add, i64* %bufsize, align 8, !dbg !14118
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14132, metadata !DIExpression()), !dbg !14133
  %17 = load i64, i64* %bufsize, align 8, !dbg !14134
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !14135
  store i8* %call5, i8** %buf, align 8, !dbg !14133
  %18 = load i8*, i8** %buf, align 8, !dbg !14136
  %19 = load i64, i64* %bufsize, align 8, !dbg !14137
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !14138
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !14139
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14140
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !14141, !ctir !801
  %23 = load i32, i32* %style6, align 8, !dbg !14141, !ctir !771
  %24 = load i32, i32* %flags, align 4, !dbg !14142
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14143
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !14144, !ctir !801
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !14143, !ctir !802
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14145
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !14146, !ctir !801
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !14146, !ctir !116
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14147
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !14148, !ctir !801
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !14148, !ctir !116
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !14149
  %30 = load i32, i32* %e, align 4, !dbg !14150
  %call12 = call i32* @__errno_location() #15, !dbg !14151
  store i32 %30, i32* %call12, align 4, !dbg !14152, !ctir !7
  %31 = load i64*, i64** %size.addr, align 8, !dbg !14153
  %tobool13 = icmp ne i64* %31, null, !dbg !14153
  br i1 %tobool13, label %if.then, label %if.end, !dbg !14155

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !14156
  %sub = sub i64 %32, 1, !dbg !14157
  %33 = load i64*, i64** %size.addr, align 8, !dbg !14158
  store i64 %sub, i64* %33, align 8, !dbg !14159, !ctir !55
  br label %if.end, !dbg !14160

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !14161
  ret i8* %34, !dbg !14162
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !14163 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !803
  %i = alloca i32, align 4, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14164, metadata !DIExpression()), !dbg !14165
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14166
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !14165
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14167, metadata !DIExpression()), !dbg !14168
  store i32 1, i32* %i, align 4, !dbg !14169
  br label %for.cond, !dbg !14171

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14172
  %2 = load i32, i32* @nslots, align 4, !dbg !14174
  %cmp = icmp slt i32 %1, %2, !dbg !14175
  br i1 %cmp, label %for.body, label %for.end, !dbg !14176

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14177
  %4 = load i32, i32* %i, align 4, !dbg !14178
  %idxprom = sext i32 %4 to i64, !dbg !14177
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !14177, !ctir !803
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !14179, !ctir !804
  %5 = load i8*, i8** %val, align 8, !dbg !14179, !ctir !9
  call void @free(i8* %5) #10, !dbg !14180
  br label %for.inc, !dbg !14180

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14181
  %inc = add nsw i32 %6, 1, !dbg !14181
  store i32 %inc, i32* %i, align 4, !dbg !14181
  br label %for.cond, !dbg !14182, !llvm.loop !14183

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14185
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !14185, !ctir !803
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !14187, !ctir !804
  %8 = load i8*, i8** %val2, align 8, !dbg !14187, !ctir !9
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14188
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14189

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14190
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !14190, !ctir !803
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !14192, !ctir !804
  %10 = load i8*, i8** %val5, align 8, !dbg !14192, !ctir !9
  call void @free(i8* %10) #10, !dbg !14193
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !14194, !ctir !55
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !14195, !ctir !9
  br label %if.end, !dbg !14196

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14197
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !14199
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14200

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14201
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !14201
  call void @free(i8* %13) #10, !dbg !14203
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !14204
  br label %if.end8, !dbg !14205

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !14208 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14211, metadata !DIExpression()), !dbg !14212
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14213, metadata !DIExpression()), !dbg !14214
  %0 = load i32, i32* %n.addr, align 4, !dbg !14215
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14216
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !14217
  ret i8* %call, !dbg !14218
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !14219 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %sv = alloca %struct.slotvec*, align 8, !ctir !803
  %preallocated = alloca i8, align 1, !ctir !142
  %nmax = alloca i32, align 4, !ctir !7
  %size = alloca i64, align 8, !ctir !55
  %val = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %qsize = alloca i64, align 8, !ctir !55
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14222, metadata !DIExpression()), !dbg !14223
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14224, metadata !DIExpression()), !dbg !14225
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14226, metadata !DIExpression()), !dbg !14227
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !14228, metadata !DIExpression()), !dbg !14229
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14230, metadata !DIExpression()), !dbg !14231
  %call = call i32* @__errno_location() #15, !dbg !14232
  %0 = load i32, i32* %call, align 4, !dbg !14232, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !14231
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14233, metadata !DIExpression()), !dbg !14234
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14235
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !14234
  %2 = load i32, i32* %n.addr, align 4, !dbg !14236
  %cmp = icmp slt i32 %2, 0, !dbg !14238
  br i1 %cmp, label %if.then, label %if.end, !dbg !14239

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14240
  unreachable, !dbg !14240

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !14241
  %4 = load i32, i32* %n.addr, align 4, !dbg !14243
  %cmp1 = icmp sle i32 %3, %4, !dbg !14244
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !14245

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !14246, metadata !DIExpression()), !dbg !14248
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14249
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !14250
  %frombool = zext i1 %cmp3 to i8, !dbg !14248
  store i8 %frombool, i8* %preallocated, align 1, !dbg !14248
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !14251, metadata !DIExpression()), !dbg !14252
  store i32 2147483646, i32* %nmax, align 4, !dbg !14252
  %6 = load i32, i32* %nmax, align 4, !dbg !14253
  %7 = load i32, i32* %n.addr, align 4, !dbg !14255
  %cmp4 = icmp slt i32 %6, %7, !dbg !14256
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14257

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #16, !dbg !14258
  unreachable, !dbg !14258

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !14259
  %tobool = trunc i8 %8 to i1, !dbg !14259
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14259

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !14259

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14260
  br label %cond.end, !dbg !14259

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !14259
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !14259
  %11 = load i32, i32* %n.addr, align 4, !dbg !14261
  %add = add nsw i32 %11, 1, !dbg !14262
  %conv = sext i32 %add to i64, !dbg !14263
  %mul = mul i64 %conv, 16, !dbg !14264
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !14265
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !14265
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !14266
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !14267
  %13 = load i8, i8* %preallocated, align 1, !dbg !14268
  %tobool8 = trunc i8 %13 to i1, !dbg !14268
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14270

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14271
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !14272
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !14272
  br label %if.end10, !dbg !14273

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14274
  %17 = load i32, i32* @nslots, align 4, !dbg !14275
  %idx.ext = sext i32 %17 to i64, !dbg !14276
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !14276, !ctir !804
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !14277
  %19 = load i32, i32* %n.addr, align 4, !dbg !14278
  %add11 = add nsw i32 %19, 1, !dbg !14279
  %20 = load i32, i32* @nslots, align 4, !dbg !14280
  %sub = sub nsw i32 %add11, %20, !dbg !14281
  %conv12 = sext i32 %sub to i64, !dbg !14282
  %mul13 = mul i64 %conv12, 16, !dbg !14283
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !14277
  %21 = load i32, i32* %n.addr, align 4, !dbg !14284
  %add14 = add nsw i32 %21, 1, !dbg !14285
  store i32 %add14, i32* @nslots, align 4, !dbg !14286
  br label %if.end15, !dbg !14287

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14288, metadata !DIExpression()), !dbg !14290
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14291
  %23 = load i32, i32* %n.addr, align 4, !dbg !14292
  %idxprom = sext i32 %23 to i64, !dbg !14291
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !14291, !ctir !803
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !14293, !ctir !804
  %24 = load i64, i64* %size16, align 8, !dbg !14293, !ctir !55
  store i64 %24, i64* %size, align 8, !dbg !14290
  call void @llvm.dbg.declare(metadata i8** %val, metadata !14294, metadata !DIExpression()), !dbg !14295
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14296
  %26 = load i32, i32* %n.addr, align 4, !dbg !14297
  %idxprom17 = sext i32 %26 to i64, !dbg !14296
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !14296, !ctir !803
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !14298, !ctir !804
  %27 = load i8*, i8** %val19, align 8, !dbg !14298, !ctir !9
  store i8* %27, i8** %val, align 8, !dbg !14295
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14299, metadata !DIExpression()), !dbg !14300
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14301
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !14302, !ctir !801
  %29 = load i32, i32* %flags20, align 4, !dbg !14302, !ctir !7
  %or = or i32 %29, 1, !dbg !14303
  store i32 %or, i32* %flags, align 4, !dbg !14300
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !14304, metadata !DIExpression()), !dbg !14305
  %30 = load i8*, i8** %val, align 8, !dbg !14306
  %31 = load i64, i64* %size, align 8, !dbg !14307
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !14308
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !14309
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14310
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !14311, !ctir !801
  %35 = load i32, i32* %style, align 8, !dbg !14311, !ctir !771
  %36 = load i32, i32* %flags, align 4, !dbg !14312
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14313
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !14314, !ctir !801
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14313, !ctir !802
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14315
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !14316, !ctir !801
  %39 = load i8*, i8** %left_quote, align 8, !dbg !14316, !ctir !116
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14317
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !14318, !ctir !801
  %41 = load i8*, i8** %right_quote, align 8, !dbg !14318, !ctir !116
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !14319
  store i64 %call21, i64* %qsize, align 8, !dbg !14305
  %42 = load i64, i64* %size, align 8, !dbg !14320
  %43 = load i64, i64* %qsize, align 8, !dbg !14322
  %cmp22 = icmp ule i64 %42, %43, !dbg !14323
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !14324

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !14325
  %add25 = add i64 %44, 1, !dbg !14327
  store i64 %add25, i64* %size, align 8, !dbg !14328
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14329
  %46 = load i32, i32* %n.addr, align 4, !dbg !14330
  %idxprom26 = sext i32 %46 to i64, !dbg !14329
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !14329, !ctir !803
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !14331, !ctir !804
  store i64 %add25, i64* %size28, align 8, !dbg !14332, !ctir !55
  %47 = load i8*, i8** %val, align 8, !dbg !14333
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14335
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14336

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !14337
  call void @free(i8* %48) #10, !dbg !14338
  br label %if.end32, !dbg !14338

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !14339
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !14340
  store i8* %call33, i8** %val, align 8, !dbg !14341
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14342
  %51 = load i32, i32* %n.addr, align 4, !dbg !14343
  %idxprom34 = sext i32 %51 to i64, !dbg !14342
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !14342, !ctir !803
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !14344, !ctir !804
  store i8* %call33, i8** %val36, align 8, !dbg !14345, !ctir !9
  %52 = load i8*, i8** %val, align 8, !dbg !14346
  %53 = load i64, i64* %size, align 8, !dbg !14347
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !14348
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !14349
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14350
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !14351, !ctir !801
  %57 = load i32, i32* %style37, align 8, !dbg !14351, !ctir !771
  %58 = load i32, i32* %flags, align 4, !dbg !14352
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14353
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !14354, !ctir !801
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !14353, !ctir !802
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14355
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !14356, !ctir !801
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !14356, !ctir !116
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14357
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !14358, !ctir !801
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !14358, !ctir !116
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !14359
  br label %if.end43, !dbg !14360

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !14361
  %call44 = call i32* @__errno_location() #15, !dbg !14362
  store i32 %64, i32* %call44, align 4, !dbg !14363, !ctir !7
  %65 = load i8*, i8** %val, align 8, !dbg !14364
  ret i8* %65, !dbg !14365
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14366 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14369, metadata !DIExpression()), !dbg !14370
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14371, metadata !DIExpression()), !dbg !14372
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14373, metadata !DIExpression()), !dbg !14374
  %0 = load i32, i32* %n.addr, align 4, !dbg !14375
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14376
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14377
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !14378
  ret i8* %call, !dbg !14379
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !14380 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14381, metadata !DIExpression()), !dbg !14382
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14383
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !14384
  ret i8* %call, !dbg !14385
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !14386 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14387, metadata !DIExpression()), !dbg !14388
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14389, metadata !DIExpression()), !dbg !14390
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14391
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14392
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !14393
  ret i8* %call, !dbg !14394
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !14395 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !801
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14398, metadata !DIExpression()), !dbg !14399
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14400, metadata !DIExpression()), !dbg !14401
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14402, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14404, metadata !DIExpression()), !dbg !14405
  %0 = load i32, i32* %s.addr, align 4, !dbg !14406
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14407
  %1 = load i32, i32* %n.addr, align 4, !dbg !14408
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14409
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !14410
  ret i8* %call, !dbg !14411
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !14412 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !14415, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !14417, metadata !DIExpression()), !dbg !14418
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !14418
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !14418
  %1 = load i32, i32* %style.addr, align 4, !dbg !14419
  %cmp = icmp eq i32 %1, 10, !dbg !14421
  br i1 %cmp, label %if.then, label %if.end, !dbg !14422

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14423
  unreachable, !dbg !14423

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !14424
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !14425, !ctir !790
  store i32 %2, i32* %style1, align 8, !dbg !14426, !ctir !771
  ret void, !dbg !14427
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14428 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !801
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14431, metadata !DIExpression()), !dbg !14432
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14433, metadata !DIExpression()), !dbg !14434
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14435, metadata !DIExpression()), !dbg !14436
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14437, metadata !DIExpression()), !dbg !14438
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14439, metadata !DIExpression()), !dbg !14440
  %0 = load i32, i32* %s.addr, align 4, !dbg !14441
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14442
  %1 = load i32, i32* %n.addr, align 4, !dbg !14443
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14444
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14445
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !14446
  ret i8* %call, !dbg !14447
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !14448 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14451, metadata !DIExpression()), !dbg !14452
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14453, metadata !DIExpression()), !dbg !14454
  %0 = load i32, i32* %s.addr, align 4, !dbg !14455
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14456
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !14457
  ret i8* %call, !dbg !14458
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14459 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14462, metadata !DIExpression()), !dbg !14463
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14464, metadata !DIExpression()), !dbg !14465
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14466, metadata !DIExpression()), !dbg !14467
  %0 = load i32, i32* %s.addr, align 4, !dbg !14468
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14469
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14470
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !14471
  ret i8* %call, !dbg !14472
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !14473 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !790
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14476, metadata !DIExpression()), !dbg !14477
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14478, metadata !DIExpression()), !dbg !14479
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14480, metadata !DIExpression()), !dbg !14481
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !14482, metadata !DIExpression()), !dbg !14483
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !14484
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !14484
  %1 = load i8, i8* %ch.addr, align 1, !dbg !14485
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !14486
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14487
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14488
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !14489
  ret i8* %call1, !dbg !14490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !14491 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14494, metadata !DIExpression()), !dbg !14495
  store i8 %ch, i8* %ch.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14496, metadata !DIExpression()), !dbg !14497
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14498
  %1 = load i8, i8* %ch.addr, align 1, !dbg !14499
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !14500
  ret i8* %call, !dbg !14501
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !14502 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14503, metadata !DIExpression()), !dbg !14504
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14505
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !14506
  ret i8* %call, !dbg !14507
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !14508 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14509, metadata !DIExpression()), !dbg !14510
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14511, metadata !DIExpression()), !dbg !14512
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14513
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14514
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !14515
  ret i8* %call, !dbg !14516
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !14517 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !790
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14518, metadata !DIExpression()), !dbg !14519
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14520, metadata !DIExpression()), !dbg !14521
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14522, metadata !DIExpression()), !dbg !14523
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !14524, metadata !DIExpression()), !dbg !14525
  %0 = load i32, i32* %s.addr, align 4, !dbg !14526
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !14527
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !14527
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !14527
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !14527
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !14528
  %3 = load i32, i32* %n.addr, align 4, !dbg !14529
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !14530
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !14531
  ret i8* %call1, !dbg !14532
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !14533 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14536, metadata !DIExpression()), !dbg !14537
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14538, metadata !DIExpression()), !dbg !14539
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14540, metadata !DIExpression()), !dbg !14541
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14542, metadata !DIExpression()), !dbg !14543
  %0 = load i32, i32* %n.addr, align 4, !dbg !14544
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !14545
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !14546
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !14547
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !14548
  ret i8* %call, !dbg !14549
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !14550 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !790
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14553, metadata !DIExpression()), !dbg !14554
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14555, metadata !DIExpression()), !dbg !14556
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14557, metadata !DIExpression()), !dbg !14558
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14559, metadata !DIExpression()), !dbg !14560
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14561, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14563, metadata !DIExpression()), !dbg !14564
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !14565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !14565
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !14566
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !14567
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !14568
  %3 = load i32, i32* %n.addr, align 4, !dbg !14569
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !14570
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !14571
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !14572
  ret i8* %call, !dbg !14573
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !14574 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14577, metadata !DIExpression()), !dbg !14578
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14579, metadata !DIExpression()), !dbg !14580
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14581, metadata !DIExpression()), !dbg !14582
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !14583
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !14584
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14585
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !14586
  ret i8* %call, !dbg !14587
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !14588 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14591, metadata !DIExpression()), !dbg !14592
  store i8* %right_quote, i8** %right_quote.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14593, metadata !DIExpression()), !dbg !14594
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14595, metadata !DIExpression()), !dbg !14596
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14597, metadata !DIExpression()), !dbg !14598
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !14599
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !14600
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14601
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14602
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !14603
  ret i8* %call, !dbg !14604
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14605 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14608, metadata !DIExpression()), !dbg !14609
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14610, metadata !DIExpression()), !dbg !14611
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14612, metadata !DIExpression()), !dbg !14613
  %0 = load i32, i32* %n.addr, align 4, !dbg !14614
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14615
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14616
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !14617
  ret i8* %call, !dbg !14618
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !14619 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14622, metadata !DIExpression()), !dbg !14623
  store i64 %argsize, i64* %argsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14624, metadata !DIExpression()), !dbg !14625
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14626
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14627
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !14628
  ret i8* %call, !dbg !14629
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !14630 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14633, metadata !DIExpression()), !dbg !14634
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14635, metadata !DIExpression()), !dbg !14636
  %0 = load i32, i32* %n.addr, align 4, !dbg !14637
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14638
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !14639
  ret i8* %call, !dbg !14640
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !14641 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14644, metadata !DIExpression()), !dbg !14645
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14646
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !14647
  ret i8* %call, !dbg !14648
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !14649 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !7
  %err = alloca i32, align 4, !ctir !7
  %src_len = alloca i64, align 8, !ctir !55
  %dst_len = alloca i64, align 8, !ctir !55
  %src_temp = alloca i8*, align 8, !ctir !9
  %dst_temp = alloca i8*, align 8, !ctir !9
  %src_slash = alloca i8, align 1, !ctir !142
  %dst_slash = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %src_st = alloca %struct.stat, align 8, !ctir !14653
  %dst_st = alloca %struct.stat, align 8, !ctir !14653
  %dst_found_nonexistent = alloca i8, align 1, !ctir !142
  store i32 %fd1, i32* %fd1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !14674, metadata !DIExpression()), !dbg !14675
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !14676, metadata !DIExpression()), !dbg !14677
  store i32 %fd2, i32* %fd2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !14678, metadata !DIExpression()), !dbg !14679
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !14680, metadata !DIExpression()), !dbg !14681
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14682, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !14684, metadata !DIExpression()), !dbg !14685
  store i32 -1, i32* %ret_val, align 4, !dbg !14685
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14686, metadata !DIExpression()), !dbg !14687
  store i32 22, i32* %err, align 4, !dbg !14687
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !14688
  %1 = load i8*, i8** %src.addr, align 8, !dbg !14689
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !14690
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !14691
  %4 = load i32, i32* %flags.addr, align 4, !dbg !14692
  %call = call i32 @renameat2(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #10, !dbg !14693
  store i32 %call, i32* %ret_val, align 4, !dbg !14694
  %call1 = call i32* @__errno_location() #15, !dbg !14695
  %5 = load i32, i32* %call1, align 4, !dbg !14695, !ctir !7
  store i32 %5, i32* %err, align 4, !dbg !14696
  %6 = load i32, i32* %ret_val, align 4, !dbg !14697
  %cmp = icmp slt i32 %6, 0, !dbg !14699
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !14700

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !14701
  %cmp2 = icmp eq i32 %7, 22, !dbg !14702
  br i1 %cmp2, label %if.end, label %lor.lhs.false, !dbg !14703

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !14704
  %cmp3 = icmp eq i32 %8, 38, !dbg !14705
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !14706

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !14707
  %cmp5 = icmp eq i32 %9, 95, !dbg !14708
  br i1 %cmp5, label %if.end, label %if.then, !dbg !14709

if.then:                                          ; preds = %lor.lhs.false4, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !14710
  store i32 %10, i32* %retval, align 4, !dbg !14711
  br label %return, !dbg !14711

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !14712, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !14715, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !14717, metadata !DIExpression()), !dbg !14718
  %11 = load i8*, i8** %src.addr, align 8, !dbg !14719
  store i8* %11, i8** %src_temp, align 8, !dbg !14718
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !14720, metadata !DIExpression()), !dbg !14721
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !14722
  store i8* %12, i8** %dst_temp, align 8, !dbg !14721
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !14723, metadata !DIExpression()), !dbg !14724
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !14725, metadata !DIExpression()), !dbg !14726
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !14727, metadata !DIExpression()), !dbg !14728
  store i32 20, i32* %rename_errno, align 4, !dbg !14728
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !14729, metadata !DIExpression()), !dbg !14730
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !14731, metadata !DIExpression()), !dbg !14732
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !14733, metadata !DIExpression()), !dbg !14734
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !14734
  %13 = load i32, i32* %flags.addr, align 4, !dbg !14735
  %cmp6 = icmp ne i32 %13, 0, !dbg !14737
  br i1 %cmp6, label %if.then7, label %if.end23, !dbg !14738

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !14739
  %and = and i32 %14, -2, !dbg !14742
  %tobool = icmp ne i32 %and, 0, !dbg !14742
  br i1 %tobool, label %if.then8, label %if.else, !dbg !14743

if.then8:                                         ; preds = %if.then7
  %call9 = call i32 @errno_fail(i32 95), !dbg !14744
  store i32 %call9, i32* %retval, align 4, !dbg !14745
  br label %return, !dbg !14745

if.else:                                          ; preds = %if.then7
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !14746
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !14749
  %call10 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !14750
  %cmp11 = icmp eq i32 %call10, 0, !dbg !14751
  br i1 %cmp11, label %if.then15, label %lor.lhs.false12, !dbg !14752

lor.lhs.false12:                                  ; preds = %if.else
  %call13 = call i32* @__errno_location() #15, !dbg !14753
  %17 = load i32, i32* %call13, align 4, !dbg !14753, !ctir !7
  %cmp14 = icmp eq i32 %17, 75, !dbg !14754
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !14755

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  %call16 = call i32 @errno_fail(i32 17), !dbg !14756
  store i32 %call16, i32* %retval, align 4, !dbg !14757
  br label %return, !dbg !14757

if.end17:                                         ; preds = %lor.lhs.false12
  %call18 = call i32* @__errno_location() #15, !dbg !14758
  %18 = load i32, i32* %call18, align 4, !dbg !14758, !ctir !7
  %cmp19 = icmp ne i32 %18, 2, !dbg !14760
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !14761

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !14762
  br label %return, !dbg !14762

if.end21:                                         ; preds = %if.end17
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !14763
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  br label %if.end23, !dbg !14764

if.end23:                                         ; preds = %if.end22, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !14765
  %call24 = call i64 @strlen(i8* %19) #14, !dbg !14766
  store i64 %call24, i64* %src_len, align 8, !dbg !14767
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !14768
  %call25 = call i64 @strlen(i8* %20) #14, !dbg !14769
  store i64 %call25, i64* %dst_len, align 8, !dbg !14770
  %21 = load i64, i64* %src_len, align 8, !dbg !14771
  %tobool26 = icmp ne i64 %21, 0, !dbg !14771
  br i1 %tobool26, label %lor.lhs.false27, label %if.then29, !dbg !14773

lor.lhs.false27:                                  ; preds = %if.end23
  %22 = load i64, i64* %dst_len, align 8, !dbg !14774
  %tobool28 = icmp ne i64 %22, 0, !dbg !14774
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !14775

if.then29:                                        ; preds = %lor.lhs.false27, %if.end23
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !14776
  %24 = load i8*, i8** %src.addr, align 8, !dbg !14777
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !14778
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !14779
  %call30 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #10, !dbg !14780
  store i32 %call30, i32* %retval, align 4, !dbg !14781
  br label %return, !dbg !14781

if.end31:                                         ; preds = %lor.lhs.false27
  %27 = load i8*, i8** %src.addr, align 8, !dbg !14782
  %28 = load i64, i64* %src_len, align 8, !dbg !14783
  %sub = sub i64 %28, 1, !dbg !14784
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !14782, !ctir !116
  %29 = load i8, i8* %arrayidx, align 1, !dbg !14782
  %conv = sext i8 %29 to i32, !dbg !14782
  %cmp32 = icmp eq i32 %conv, 47, !dbg !14785
  %frombool = zext i1 %cmp32 to i8, !dbg !14786
  store i8 %frombool, i8* %src_slash, align 1, !dbg !14786
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !14787
  %31 = load i64, i64* %dst_len, align 8, !dbg !14788
  %sub34 = sub i64 %31, 1, !dbg !14789
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %sub34, !dbg !14787, !ctir !116
  %32 = load i8, i8* %arrayidx35, align 1, !dbg !14787
  %conv36 = sext i8 %32 to i32, !dbg !14787
  %cmp37 = icmp eq i32 %conv36, 47, !dbg !14790
  %frombool39 = zext i1 %cmp37 to i8, !dbg !14791
  store i8 %frombool39, i8* %dst_slash, align 1, !dbg !14791
  %33 = load i8, i8* %src_slash, align 1, !dbg !14792
  %tobool40 = trunc i8 %33 to i1, !dbg !14792
  br i1 %tobool40, label %if.end45, label %land.lhs.true41, !dbg !14794

land.lhs.true41:                                  ; preds = %if.end31
  %34 = load i8, i8* %dst_slash, align 1, !dbg !14795
  %tobool42 = trunc i8 %34 to i1, !dbg !14795
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !14796

if.then43:                                        ; preds = %land.lhs.true41
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !14797
  %36 = load i8*, i8** %src.addr, align 8, !dbg !14798
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !14799
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !14800
  %call44 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #10, !dbg !14801
  store i32 %call44, i32* %retval, align 4, !dbg !14802
  br label %return, !dbg !14802

if.end45:                                         ; preds = %land.lhs.true41, %if.end31
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !14803
  %40 = load i8*, i8** %src.addr, align 8, !dbg !14805
  %call46 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !14806
  %tobool47 = icmp ne i32 %call46, 0, !dbg !14806
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !14807

if.then48:                                        ; preds = %if.end45
  store i32 -1, i32* %retval, align 4, !dbg !14808
  br label %return, !dbg !14808

if.end49:                                         ; preds = %if.end45
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !14809
  %tobool50 = trunc i8 %41 to i1, !dbg !14809
  br i1 %tobool50, label %if.then51, label %if.else58, !dbg !14811

if.then51:                                        ; preds = %if.end49
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !14812, !ctir !14653
  %42 = load i32, i32* %st_mode, align 8, !dbg !14812, !ctir !168
  %and52 = and i32 %42, 61440, !dbg !14812
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !14812
  br i1 %cmp53, label %if.end57, label %if.then55, !dbg !14815

if.then55:                                        ; preds = %if.then51
  %call56 = call i32 @errno_fail(i32 2), !dbg !14816
  store i32 %call56, i32* %retval, align 4, !dbg !14817
  br label %return, !dbg !14817

if.end57:                                         ; preds = %if.then51
  br label %if.end89, !dbg !14818

if.else58:                                        ; preds = %if.end49
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !14819
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !14821
  %call59 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !14822
  %tobool60 = icmp ne i32 %call59, 0, !dbg !14822
  br i1 %tobool60, label %if.then61, label %if.else72, !dbg !14823

if.then61:                                        ; preds = %if.else58
  %call62 = call i32* @__errno_location() #15, !dbg !14824
  %45 = load i32, i32* %call62, align 4, !dbg !14824, !ctir !7
  %cmp63 = icmp ne i32 %45, 2, !dbg !14827
  br i1 %cmp63, label %if.then70, label %lor.lhs.false65, !dbg !14828

lor.lhs.false65:                                  ; preds = %if.then61
  %st_mode66 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !14829, !ctir !14653
  %46 = load i32, i32* %st_mode66, align 8, !dbg !14829, !ctir !168
  %and67 = and i32 %46, 61440, !dbg !14829
  %cmp68 = icmp eq i32 %and67, 16384, !dbg !14829
  br i1 %cmp68, label %if.end71, label %if.then70, !dbg !14830

if.then70:                                        ; preds = %lor.lhs.false65, %if.then61
  store i32 -1, i32* %retval, align 4, !dbg !14831
  br label %return, !dbg !14831

if.end71:                                         ; preds = %lor.lhs.false65
  br label %if.end88, !dbg !14832

if.else72:                                        ; preds = %if.else58
  %st_mode73 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !14833, !ctir !14653
  %47 = load i32, i32* %st_mode73, align 8, !dbg !14833, !ctir !168
  %and74 = and i32 %47, 61440, !dbg !14833
  %cmp75 = icmp eq i32 %and74, 16384, !dbg !14833
  br i1 %cmp75, label %if.else79, label %if.then77, !dbg !14835

if.then77:                                        ; preds = %if.else72
  %call78 = call i32 @errno_fail(i32 20), !dbg !14836
  store i32 %call78, i32* %retval, align 4, !dbg !14837
  br label %return, !dbg !14837

if.else79:                                        ; preds = %if.else72
  %st_mode80 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !14838, !ctir !14653
  %48 = load i32, i32* %st_mode80, align 8, !dbg !14838, !ctir !168
  %and81 = and i32 %48, 61440, !dbg !14838
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !14838
  br i1 %cmp82, label %if.end86, label %if.then84, !dbg !14840

if.then84:                                        ; preds = %if.else79
  %call85 = call i32 @errno_fail(i32 21), !dbg !14841
  store i32 %call85, i32* %retval, align 4, !dbg !14842
  br label %return, !dbg !14842

if.end86:                                         ; preds = %if.else79
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end71
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end57
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !14843
  %50 = load i8*, i8** %src_temp, align 8, !dbg !14844
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !14845
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !14846
  %call90 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #10, !dbg !14847
  store i32 %call90, i32* %ret_val, align 4, !dbg !14848
  %call91 = call i32* @__errno_location() #15, !dbg !14849
  %53 = load i32, i32* %call91, align 4, !dbg !14849, !ctir !7
  store i32 %53, i32* %rename_errno, align 4, !dbg !14850
  br label %out, !dbg !14851

out:                                              ; preds = %if.end89
  call void @llvm.dbg.label(metadata !14852), !dbg !14853
  %54 = load i8*, i8** %src_temp, align 8, !dbg !14854
  %55 = load i8*, i8** %src.addr, align 8, !dbg !14856
  %cmp92 = icmp ne i8* %54, %55, !dbg !14857
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !14858

if.then94:                                        ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !14859
  call void @free(i8* %56) #10, !dbg !14860
  br label %if.end95, !dbg !14860

if.end95:                                         ; preds = %if.then94, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !14861
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !14863
  %cmp96 = icmp ne i8* %57, %58, !dbg !14864
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !14865

if.then98:                                        ; preds = %if.end95
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !14866
  call void @free(i8* %59) #10, !dbg !14867
  br label %if.end99, !dbg !14867

if.end99:                                         ; preds = %if.then98, %if.end95
  %60 = load i32, i32* %rename_errno, align 4, !dbg !14868
  %call100 = call i32* @__errno_location() #15, !dbg !14869
  store i32 %60, i32* %call100, align 4, !dbg !14870, !ctir !7
  %61 = load i32, i32* %ret_val, align 4, !dbg !14871
  store i32 %61, i32* %retval, align 4, !dbg !14872
  br label %return, !dbg !14872

return:                                           ; preds = %if.end99, %if.then84, %if.then77, %if.then70, %if.then55, %if.then48, %if.then43, %if.then29, %if.then20, %if.then15, %if.then8, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !14873
  ret i32 %62, !dbg !14873
}

; Function Attrs: nounwind
declare dso_local i32 @renameat2(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !14874 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !14877, metadata !DIExpression()), !dbg !14878
  %0 = load i32, i32* %e.addr, align 4, !dbg !14879
  %call = call i32* @__errno_location() #15, !dbg !14880
  store i32 %0, i32* %call, align 4, !dbg !14881, !ctir !7
  ret i32 -1, !dbg !14882
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.timespec* @get_root_dev_ino(%struct.timespec* %root_d_i) #4 !dbg !14883 {
entry:
  %retval = alloca %struct.timespec*, align 8
  %root_d_i.addr = alloca %struct.timespec*, align 8
  %statbuf = alloca %struct.stat, align 8, !ctir !14892
  store %struct.timespec* %root_d_i, %struct.timespec** %root_d_i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %root_d_i.addr, metadata !14913, metadata !DIExpression()), !dbg !14914
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !14915, metadata !DIExpression()), !dbg !14916
  %call = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.335, i64 0, i64 0), %struct.stat* %statbuf) #10, !dbg !14917
  %tobool = icmp ne i32 %call, 0, !dbg !14917
  br i1 %tobool, label %if.then, label %if.end, !dbg !14919

if.then:                                          ; preds = %entry
  store %struct.timespec* null, %struct.timespec** %retval, align 8, !dbg !14920
  br label %return, !dbg !14920

if.end:                                           ; preds = %entry
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 1, !dbg !14921, !ctir !14892
  %0 = load i64, i64* %st_ino, align 8, !dbg !14921, !ctir !260
  %1 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !14922
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %1, i32 0, i32 0, !dbg !14923, !ctir !14888
  store i64 %0, i64* %st_ino1, align 8, !dbg !14924, !ctir !259
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !14925, !ctir !14892
  %2 = load i64, i64* %st_dev, align 8, !dbg !14925, !ctir !263
  %3 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !14926
  %st_dev2 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i32 0, i32 1, !dbg !14927, !ctir !14888
  store i64 %2, i64* %st_dev2, align 8, !dbg !14928, !ctir !262
  %4 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !14929
  store %struct.timespec* %4, %struct.timespec** %retval, align 8, !dbg !14930
  br label %return, !dbg !14930

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.timespec*, %struct.timespec** %retval, align 8, !dbg !14931
  ret %struct.timespec* %5, !dbg !14931
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !14932 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !540
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !14934, metadata !DIExpression()), !dbg !14935
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14936, metadata !DIExpression()), !dbg !14937
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !14938, metadata !DIExpression()), !dbg !14939
  br label %for.cond, !dbg !14940

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !14941, metadata !DIExpression()), !dbg !14945
  %0 = load i32, i32* %fd.addr, align 4, !dbg !14946
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !14947
  %2 = load i64, i64* %count.addr, align 8, !dbg !14948
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !14949
  store i64 %call, i64* %result, align 8, !dbg !14945
  %3 = load i64, i64* %result, align 8, !dbg !14950
  %cmp = icmp sle i64 0, %3, !dbg !14952
  br i1 %cmp, label %if.then, label %if.else, !dbg !14953

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !14954
  store i64 %4, i64* %retval, align 8, !dbg !14955
  br label %return, !dbg !14955

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #15, !dbg !14956
  %5 = load i32, i32* %call1, align 4, !dbg !14956, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !14956
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !14958

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !14959, !llvm.loop !14960

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #15, !dbg !14963
  %6 = load i32, i32* %call5, align 4, !dbg !14963, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !14965
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !14966

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !14967
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !14968
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !14969

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !14970
  br label %if.end, !dbg !14971

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !14972
  store i64 %8, i64* %retval, align 8, !dbg !14973
  br label %return, !dbg !14973

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !14974, !llvm.loop !14960

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !14975
  ret i64 %9, !dbg !14975
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !14976 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !14980, metadata !DIExpression()), !dbg !14981
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !14982, metadata !DIExpression()), !dbg !14983
  %0 = load i8*, i8** %source.addr, align 8, !dbg !14984
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !14985
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !14986
  ret i1 %call, !dbg !14987
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !14988 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !116
  %dest_basename = alloca i8*, align 8, !ctir !116
  %source_baselen = alloca i64, align 8, !ctir !55
  %dest_baselen = alloca i64, align 8, !ctir !55
  %identical_basenames = alloca i8, align 1, !ctir !142
  %compare_dirs = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !14991
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !14991
  %source_dirname = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %dest_dirname = alloca i8*, align 8, !ctir !9
  store i32 %source_dfd, i32* %source_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15012, metadata !DIExpression()), !dbg !15013
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15014, metadata !DIExpression()), !dbg !15015
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15016, metadata !DIExpression()), !dbg !15017
  store i8* %dest, i8** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15018, metadata !DIExpression()), !dbg !15019
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15020, metadata !DIExpression()), !dbg !15021
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15022
  %call = call i8* @last_component(i8* %0) #14, !dbg !15023
  store i8* %call, i8** %source_basename, align 8, !dbg !15021
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15024, metadata !DIExpression()), !dbg !15025
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15026
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15027
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15025
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15028, metadata !DIExpression()), !dbg !15029
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15030
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15031
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15029
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15032, metadata !DIExpression()), !dbg !15033
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15034
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15035
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15033
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15036, metadata !DIExpression()), !dbg !15037
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15038
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15039
  %cmp = icmp eq i64 %4, %5, !dbg !15040
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15041

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15042
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15043
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15044
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15045
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15046
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15047
  %frombool = zext i1 %9 to i8, !dbg !15037
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15037
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15048, metadata !DIExpression()), !dbg !15049
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15050
  %tobool = trunc i8 %10 to i1, !dbg !15050
  %frombool6 = zext i1 %tobool to i8, !dbg !15049
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15049
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15051, metadata !DIExpression()), !dbg !15052
  store i8 0, i8* %same, align 1, !dbg !15052
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15053
  %tobool7 = trunc i8 %11 to i1, !dbg !15053
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !15055

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !15056, metadata !DIExpression()), !dbg !15058
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15059, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15061, metadata !DIExpression()), !dbg !15062
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15063
  %call8 = call i8* @dir_name(i8* %12), !dbg !15064
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15062
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15065, metadata !DIExpression()), !dbg !15066
  store i32 256, i32* %flags, align 4, !dbg !15066
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15067
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15069
  %15 = load i32, i32* %flags, align 4, !dbg !15070
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #10, !dbg !15071
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15072
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15073

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #15, !dbg !15074
  %16 = load i32, i32* %call12, align 4, !dbg !15074, !ctir !7
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15076
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %17), !dbg !15077
  br label %if.end, !dbg !15078

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15079
  call void @free(i8* %18) #10, !dbg !15080
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15081, metadata !DIExpression()), !dbg !15082
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15083
  %call13 = call i8* @dir_name(i8* %19), !dbg !15084
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15082
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15085
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15087
  %22 = load i32, i32* %flags, align 4, !dbg !15088
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #10, !dbg !15089
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15090
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15091

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #15, !dbg !15092
  %23 = load i32, i32* %call17, align 4, !dbg !15092, !ctir !7
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15094
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %24), !dbg !15095
  br label %if.end18, !dbg !15096

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15097, !ctir !14991
  %25 = load i64, i64* %st_ino, align 8, !dbg !15097, !ctir !260
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15097, !ctir !14991
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15097, !ctir !260
  %cmp20 = icmp eq i64 %25, %26, !dbg !15097
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15097

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15097, !ctir !14991
  %27 = load i64, i64* %st_dev, align 8, !dbg !15097, !ctir !263
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15097, !ctir !14991
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15097, !ctir !263
  %cmp23 = icmp eq i64 %27, %28, !dbg !15097
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15098
  %frombool25 = zext i1 %29 to i8, !dbg !15099
  store i8 %frombool25, i8* %same, align 1, !dbg !15099
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15100
  call void @free(i8* %30) #10, !dbg !15101
  br label %if.end26, !dbg !15102

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15103
  %tobool27 = trunc i8 %31 to i1, !dbg !15103
  ret i1 %tobool27, !dbg !15104
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !15105 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !9
  %allocated = alloca i64, align 8, !ctir !55
  %entries = alloca %struct.direntry_t*, align 8, !ctir !856
  %entries_allocated = alloca i64, align 8, !ctir !55
  %entries_used = alloca i64, align 8, !ctir !55
  %used = alloca i64, align 8, !ctir !55
  %readdir_errno = alloca i32, align 4, !ctir !7
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !864
  %dp = alloca %struct.dirent*, align 8, !ctir !870
  %entry2 = alloca i8*, align 8, !ctir !116
  %entry_size = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %n36 = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %dest = alloca i8*, align 8, !ctir !9
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !15108, metadata !DIExpression()), !dbg !15109
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15110, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15112, metadata !DIExpression()), !dbg !15113
  store i8* null, i8** %name_space, align 8, !dbg !15113
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !15114, metadata !DIExpression()), !dbg !15115
  store i64 0, i64* %allocated, align 8, !dbg !15115
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !15116, metadata !DIExpression()), !dbg !15117
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !15117
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !15118, metadata !DIExpression()), !dbg !15119
  store i64 0, i64* %entries_allocated, align 8, !dbg !15119
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !15120, metadata !DIExpression()), !dbg !15121
  store i64 0, i64* %entries_used, align 8, !dbg !15121
  call void @llvm.dbg.declare(metadata i64* %used, metadata !15122, metadata !DIExpression()), !dbg !15123
  store i64 0, i64* %used, align 8, !dbg !15123
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !15124, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !15126, metadata !DIExpression()), !dbg !15127
  %0 = load i32, i32* %option.addr, align 4, !dbg !15128
  %idxprom = zext i32 %0 to i64, !dbg !15129
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !15129, !ctir !868
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !15129
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !15127
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15130
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !15132
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15133

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15134
  br label %return, !dbg !15134

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !15135

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !15136, metadata !DIExpression()), !dbg !15140
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !15141, metadata !DIExpression()), !dbg !15142
  %call = call i32* @__errno_location() #15, !dbg !15143
  store i32 0, i32* %call, align 4, !dbg !15144, !ctir !7
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15145
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !15146
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !15147
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15148
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !15148
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !15150

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !15151

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15152
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !15153, !ctir !871
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !15152, !ctir !879
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !15154
  %6 = load i8*, i8** %entry2, align 8, !dbg !15155
  %7 = load i8*, i8** %entry2, align 8, !dbg !15157
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !15157, !ctir !116
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !15157
  %conv = sext i8 %8 to i32, !dbg !15157
  %cmp7 = icmp ne i32 %conv, 46, !dbg !15158
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15157

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !15157

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !15159
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !15159, !ctir !116
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !15159
  %conv10 = sext i8 %10 to i32, !dbg !15159
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !15160
  %11 = zext i1 %cmp11 to i64, !dbg !15159
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !15159
  br label %cond.end, !dbg !15157

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !15157
  %idxprom14 = sext i32 %cond13 to i64, !dbg !15155
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !15155, !ctir !116
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !15155
  %conv16 = sext i8 %12 to i32, !dbg !15155
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !15161
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !15162

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !15163, metadata !DIExpression()), !dbg !15165
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15166
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !15166, !ctir !871
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !15166, !ctir !879
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !15166
  %add = add i64 %call22, 1, !dbg !15167
  store i64 %add, i64* %entry_size, align 8, !dbg !15165
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15168
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !15168
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15170

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !15171
  %16 = load i64, i64* %entries_used, align 8, !dbg !15174
  %cmp25 = icmp eq i64 %15, %16, !dbg !15175
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !15176

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15177, metadata !DIExpression()), !dbg !15179
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !15180
  store i64 %17, i64* %n, align 8, !dbg !15179
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15181
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !15181
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !15182
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !15182
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !15183
  %21 = load i64, i64* %n, align 8, !dbg !15184
  store i64 %21, i64* %entries_allocated, align 8, !dbg !15185
  br label %if.end29, !dbg !15186

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !15187
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !15188
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15189
  %24 = load i64, i64* %entries_used, align 8, !dbg !15190
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !15189, !ctir !856
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !15191, !ctir !857
  store i8* %call30, i8** %name, align 8, !dbg !15192, !ctir !9
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15193
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !15194, !ctir !871
  %26 = load i64, i64* %d_ino, align 8, !dbg !15194, !ctir !260
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15195
  %28 = load i64, i64* %entries_used, align 8, !dbg !15196
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !15195, !ctir !856
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !15197, !ctir !857
  store i64 %26, i64* %ino, align 8, !dbg !15198, !ctir !863
  %29 = load i64, i64* %entries_used, align 8, !dbg !15199
  %inc = add i64 %29, 1, !dbg !15199
  store i64 %inc, i64* %entries_used, align 8, !dbg !15199
  br label %if.end44, !dbg !15200

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !15201
  %31 = load i64, i64* %used, align 8, !dbg !15204
  %sub = sub i64 %30, %31, !dbg !15205
  %32 = load i64, i64* %entry_size, align 8, !dbg !15206
  %cmp33 = icmp ule i64 %sub, %32, !dbg !15207
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !15208

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !15209, metadata !DIExpression()), !dbg !15211
  %33 = load i64, i64* %used, align 8, !dbg !15212
  %34 = load i64, i64* %entry_size, align 8, !dbg !15213
  %add37 = add i64 %33, %34, !dbg !15214
  store i64 %add37, i64* %n36, align 8, !dbg !15211
  %35 = load i64, i64* %n36, align 8, !dbg !15215
  %36 = load i64, i64* %used, align 8, !dbg !15217
  %cmp38 = icmp ult i64 %35, %36, !dbg !15218
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15219

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #16, !dbg !15220
  unreachable, !dbg !15220

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !15221
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !15222
  store i8* %call42, i8** %name_space, align 8, !dbg !15223
  %38 = load i64, i64* %n36, align 8, !dbg !15224
  store i64 %38, i64* %allocated, align 8, !dbg !15225
  br label %if.end43, !dbg !15226

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !15227
  %40 = load i64, i64* %used, align 8, !dbg !15228
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !15229, !ctir !10
  %41 = load i8*, i8** %entry2, align 8, !dbg !15230
  %42 = load i64, i64* %entry_size, align 8, !dbg !15231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !15232
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !15233
  %44 = load i64, i64* %used, align 8, !dbg !15234
  %add45 = add i64 %44, %43, !dbg !15234
  store i64 %add45, i64* %used, align 8, !dbg !15234
  br label %if.end46, !dbg !15235

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !15236, !llvm.loop !15237

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #15, !dbg !15240
  %45 = load i32, i32* %call47, align 4, !dbg !15240, !ctir !7
  store i32 %45, i32* %readdir_errno, align 4, !dbg !15241
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !15242
  %cmp48 = icmp ne i32 %46, 0, !dbg !15244
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !15245

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15246
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !15246
  call void @free(i8* %48) #10, !dbg !15248
  %49 = load i8*, i8** %name_space, align 8, !dbg !15249
  call void @free(i8* %49) #10, !dbg !15250
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !15251
  %call51 = call i32* @__errno_location() #15, !dbg !15252
  store i32 %50, i32* %call51, align 4, !dbg !15253, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15254
  br label %return, !dbg !15254

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15255
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !15255
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !15257

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15258, metadata !DIExpression()), !dbg !15260
  %52 = load i64, i64* %entries_used, align 8, !dbg !15261
  %tobool55 = icmp ne i64 %52, 0, !dbg !15261
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !15263

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15264
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !15264
  %55 = load i64, i64* %entries_used, align 8, !dbg !15265
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15266
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !15267
  br label %if.end57, !dbg !15267

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !15268
  %add58 = add i64 %57, 1, !dbg !15269
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !15270
  store i8* %call59, i8** %name_space, align 8, !dbg !15271
  store i64 0, i64* %used, align 8, !dbg !15272
  store i64 0, i64* %i, align 8, !dbg !15273
  br label %for.cond60, !dbg !15275

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !15276
  %59 = load i64, i64* %entries_used, align 8, !dbg !15278
  %cmp61 = icmp ult i64 %58, %59, !dbg !15279
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !15280

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !15281, metadata !DIExpression()), !dbg !15283
  %60 = load i8*, i8** %name_space, align 8, !dbg !15284
  %61 = load i64, i64* %used, align 8, !dbg !15285
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !15286, !ctir !10
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !15283
  %62 = load i8*, i8** %dest, align 8, !dbg !15287
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15288
  %64 = load i64, i64* %i, align 8, !dbg !15289
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !15288, !ctir !856
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !15290, !ctir !857
  %65 = load i8*, i8** %name65, align 8, !dbg !15290, !ctir !9
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #10, !dbg !15291
  %66 = load i8*, i8** %dest, align 8, !dbg !15292
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !15293
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !15293
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15293
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !15294
  %67 = load i64, i64* %used, align 8, !dbg !15295
  %add68 = add i64 %67, %add67, !dbg !15295
  store i64 %add68, i64* %used, align 8, !dbg !15295
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15296
  %69 = load i64, i64* %i, align 8, !dbg !15297
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !15296, !ctir !856
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !15298, !ctir !857
  %70 = load i8*, i8** %name70, align 8, !dbg !15298, !ctir !9
  call void @free(i8* %70) #10, !dbg !15299
  br label %for.inc, !dbg !15300

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !15301
  %inc71 = add i64 %71, 1, !dbg !15301
  store i64 %inc71, i64* %i, align 8, !dbg !15301
  br label %for.cond60, !dbg !15302, !llvm.loop !15303

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15305
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !15305
  call void @free(i8* %73) #10, !dbg !15306
  br label %if.end80, !dbg !15307

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !15308
  %75 = load i64, i64* %allocated, align 8, !dbg !15310
  %cmp74 = icmp eq i64 %74, %75, !dbg !15311
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !15312

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !15313
  %77 = load i64, i64* %used, align 8, !dbg !15314
  %add77 = add i64 %77, 1, !dbg !15315
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !15316
  store i8* %call78, i8** %name_space, align 8, !dbg !15317
  br label %if.end79, !dbg !15318

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !15319
  %79 = load i64, i64* %used, align 8, !dbg !15320
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !15319, !ctir !9
  store i8 0, i8* %arrayidx81, align 1, !dbg !15321
  %80 = load i8*, i8** %name_space, align 8, !dbg !15322
  store i8* %80, i8** %retval, align 8, !dbg !15323
  br label %return, !dbg !15323

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !15324
  ret i8* %81, !dbg !15324
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !15325 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !880
  %deb = alloca %struct.direntry_t*, align 8, !ctir !880
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15326, metadata !DIExpression()), !dbg !15327
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15328, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15330, metadata !DIExpression()), !dbg !15331
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15332
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15332
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15331
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15333, metadata !DIExpression()), !dbg !15334
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15335
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15335
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15334
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15336
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !15337, !ctir !881
  %5 = load i8*, i8** %name, align 8, !dbg !15337, !ctir !9
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15338
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !15339, !ctir !881
  %7 = load i8*, i8** %name1, align 8, !dbg !15339, !ctir !9
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !15340
  ret i32 %call, !dbg !15341
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !15342 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !880
  %deb = alloca %struct.direntry_t*, align 8, !ctir !880
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15343, metadata !DIExpression()), !dbg !15344
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15345, metadata !DIExpression()), !dbg !15346
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15347, metadata !DIExpression()), !dbg !15348
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15349
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15349
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15348
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15350, metadata !DIExpression()), !dbg !15351
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15352
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15352
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15351
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15353
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !15354, !ctir !881
  %5 = load i64, i64* %ino, align 8, !dbg !15354, !ctir !863
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15355
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !15356, !ctir !881
  %7 = load i64, i64* %ino1, align 8, !dbg !15356, !ctir !863
  %cmp = icmp ult i64 %5, %7, !dbg !15357
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15353

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15353

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15358
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !15359, !ctir !881
  %9 = load i64, i64* %ino2, align 8, !dbg !15359, !ctir !863
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15360
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !15361, !ctir !881
  %11 = load i64, i64* %ino3, align 8, !dbg !15361, !ctir !863
  %cmp4 = icmp ugt i64 %9, %11, !dbg !15362
  %conv = zext i1 %cmp4 to i32, !dbg !15362
  br label %cond.end, !dbg !15353

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !15353
  ret i32 %cond, !dbg !15363
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !15364 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !541
  %name_space = alloca i8*, align 8, !ctir !9
  %closedir_errno = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15367, metadata !DIExpression()), !dbg !15368
  store i32 %option, i32* %option.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15369, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !15371, metadata !DIExpression()), !dbg !15372
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !15373
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !15374
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !15372
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15375
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !15375
  br i1 %tobool, label %if.else, label %if.then, !dbg !15377

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15378
  br label %return, !dbg !15378

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15379, metadata !DIExpression()), !dbg !15381
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15382
  %3 = load i32, i32* %option.addr, align 4, !dbg !15383
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !15384
  store i8* %call1, i8** %name_space, align 8, !dbg !15381
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15385
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !15387
  %cmp = icmp ne i32 %call2, 0, !dbg !15388
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15389

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !15390, metadata !DIExpression()), !dbg !15392
  %call4 = call i32* @__errno_location() #15, !dbg !15393
  %5 = load i32, i32* %call4, align 4, !dbg !15393, !ctir !7
  store i32 %5, i32* %closedir_errno, align 4, !dbg !15392
  %6 = load i8*, i8** %name_space, align 8, !dbg !15394
  call void @free(i8* %6) #10, !dbg !15395
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !15396
  %call5 = call i32* @__errno_location() #15, !dbg !15397
  store i32 %7, i32* %call5, align 4, !dbg !15398, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15399
  br label %return, !dbg !15399

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !15400
  store i8* %8, i8** %retval, align 8, !dbg !15401
  br label %return, !dbg !15401

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !15402
  ret i8* %9, !dbg !15402
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !15403 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15409, metadata !DIExpression()), !dbg !15410
  %call = call i32* @__errno_location() #15, !dbg !15411
  store i32 95, i32* %call, align 4, !dbg !15412, !ctir !7
  ret i32 -1, !dbg !15413
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !15414 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15417, metadata !DIExpression()), !dbg !15418
  ret void, !dbg !15419
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !15420 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15421, metadata !DIExpression()), !dbg !15422
  %call = call i32* @__errno_location() #15, !dbg !15423
  store i32 95, i32* %call, align 4, !dbg !15424, !ctir !7
  ret i32 -1, !dbg !15425
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !15426 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15429, metadata !DIExpression()), !dbg !15430
  %call = call i32* @__errno_location() #15, !dbg !15431
  store i32 95, i32* %call, align 4, !dbg !15432, !ctir !7
  ret i32 -1, !dbg !15433
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !15434 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15437, metadata !DIExpression()), !dbg !15438
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !15439, metadata !DIExpression()), !dbg !15440
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15441, metadata !DIExpression()), !dbg !15442
  %call = call i32* @__errno_location() #15, !dbg !15443
  store i32 95, i32* %call, align 4, !dbg !15444, !ctir !7
  ret i32 -1, !dbg !15445
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !15446 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15449, metadata !DIExpression()), !dbg !15450
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15451, metadata !DIExpression()), !dbg !15452
  %call = call i32* @__errno_location() #15, !dbg !15453
  store i32 95, i32* %call, align 4, !dbg !15454, !ctir !7
  ret i32 -1, !dbg !15455
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !15456 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15457, metadata !DIExpression()), !dbg !15458
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  %call = call i32* @__errno_location() #15, !dbg !15461
  store i32 95, i32* %call, align 4, !dbg !15462, !ctir !7
  ret i32 -1, !dbg !15463
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !15464 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15467, metadata !DIExpression()), !dbg !15468
  store i8** %con, i8*** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15469, metadata !DIExpression()), !dbg !15470
  %call = call i32* @__errno_location() #15, !dbg !15471
  store i32 95, i32* %call, align 4, !dbg !15472, !ctir !7
  ret i32 -1, !dbg !15473
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !15474 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15477, metadata !DIExpression()), !dbg !15478
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15479, metadata !DIExpression()), !dbg !15480
  %call = call i32* @__errno_location() #15, !dbg !15481
  store i32 95, i32* %call, align 4, !dbg !15482, !ctir !7
  ret i32 -1, !dbg !15483
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !15484 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15485, metadata !DIExpression()), !dbg !15486
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15487, metadata !DIExpression()), !dbg !15488
  %call = call i32* @__errno_location() #15, !dbg !15489
  store i32 95, i32* %call, align 4, !dbg !15490, !ctir !7
  ret i32 -1, !dbg !15491
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !15492 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15495, metadata !DIExpression()), !dbg !15496
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15497, metadata !DIExpression()), !dbg !15498
  %call = call i32* @__errno_location() #15, !dbg !15499
  store i32 95, i32* %call, align 4, !dbg !15500, !ctir !7
  ret i32 -1, !dbg !15501
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !15502 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15503, metadata !DIExpression()), !dbg !15504
  %call = call i32* @__errno_location() #15, !dbg !15505
  store i32 95, i32* %call, align 4, !dbg !15506, !ctir !7
  ret i32 -1, !dbg !15507
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !15508 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15509, metadata !DIExpression()), !dbg !15510
  %call = call i32* @__errno_location() #15, !dbg !15511
  store i32 95, i32* %call, align 4, !dbg !15512, !ctir !7
  ret i32 -1, !dbg !15513
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !15514 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15515, metadata !DIExpression()), !dbg !15516
  %call = call i32* @__errno_location() #15, !dbg !15517
  store i32 95, i32* %call, align 4, !dbg !15518, !ctir !7
  ret i32 -1, !dbg !15519
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !15520 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !15524, metadata !DIExpression()), !dbg !15525
  store i8* %tcon, i8** %tcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !15526, metadata !DIExpression()), !dbg !15527
  store i16 %tclass, i16* %tclass.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !15528, metadata !DIExpression()), !dbg !15529
  store i8** %newcon, i8*** %newcon.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !15530, metadata !DIExpression()), !dbg !15531
  %call = call i32* @__errno_location() #15, !dbg !15532
  store i32 95, i32* %call, align 4, !dbg !15533, !ctir !7
  ret i32 -1, !dbg !15534
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !15535 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15538, metadata !DIExpression()), !dbg !15539
  %call = call i32* @__errno_location() #15, !dbg !15540
  store i32 95, i32* %call, align 4, !dbg !15541, !ctir !7
  ret i16 0, !dbg !15542
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !15543 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !15546, metadata !DIExpression()), !dbg !15547
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !15548, metadata !DIExpression()), !dbg !15549
  %call = call i32* @__errno_location() #15, !dbg !15550
  store i32 95, i32* %call, align 4, !dbg !15551, !ctir !7
  ret i32 -1, !dbg !15552
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !15553 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15580, metadata !DIExpression()), !dbg !15581
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15582
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !15582, !ctir !15558
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !15583, !ctir !15573
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15583, !ctir !363
  ret i64 %1, !dbg !15584
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !15585 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15586, metadata !DIExpression()), !dbg !15587
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15588
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !15588, !ctir !15558
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !15589, !ctir !15573
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15589, !ctir !363
  ret i64 %1, !dbg !15590
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !15591 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15592, metadata !DIExpression()), !dbg !15593
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15594
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !15594, !ctir !15558
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !15595, !ctir !15573
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15595, !ctir !363
  ret i64 %1, !dbg !15596
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !15597 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15598, metadata !DIExpression()), !dbg !15599
  ret i64 0, !dbg !15600
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !15601 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15604, metadata !DIExpression()), !dbg !15605
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15606
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !15606, !ctir !15558
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15606
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !15606
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15606
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15607
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15607
  ret { i64, i64 } %4, !dbg !15607
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !15608 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15609, metadata !DIExpression()), !dbg !15610
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15611
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !15611, !ctir !15558
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15611
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !15611
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15611
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15612
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15612
  ret { i64, i64 } %4, !dbg !15612
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !15613 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15614, metadata !DIExpression()), !dbg !15615
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15616
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !15616, !ctir !15558
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15616
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !15616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15616
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15617
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15617
  ret { i64, i64 } %4, !dbg !15617
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !15618 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15619, metadata !DIExpression()), !dbg !15620
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !15621, metadata !DIExpression()), !dbg !15622
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !15623, !ctir !15573
  store i64 -1, i64* %tv_sec, align 8, !dbg !15624, !ctir !361
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !15625, !ctir !15573
  store i64 -1, i64* %tv_nsec, align 8, !dbg !15626, !ctir !363
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15627
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !15627
  ret { i64, i64 } %1, !dbg !15627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !15628 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !15632, metadata !DIExpression()), !dbg !15633
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15634, metadata !DIExpression()), !dbg !15635
  %0 = load i32, i32* %result.addr, align 4, !dbg !15636
  ret i32 %0, !dbg !15637
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !15638 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15664, metadata !DIExpression()), !dbg !15665
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15666, metadata !DIExpression()), !dbg !15667
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15668, metadata !DIExpression()), !dbg !15669
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15670
  %1 = load i8*, i8** %name.addr, align 8, !dbg !15671
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15672
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #10, !dbg !15673
  ret i32 %call, !dbg !15674
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !15675 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15676, metadata !DIExpression()), !dbg !15677
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15678, metadata !DIExpression()), !dbg !15679
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15680, metadata !DIExpression()), !dbg !15681
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15682
  %1 = load i8*, i8** %name.addr, align 8, !dbg !15683
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15684
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #10, !dbg !15685
  ret i32 %call, !dbg !15686
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !15687 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !55
  %XXXXXX = alloca i8*, align 8, !ctir !9
  %count = alloca i32, align 4, !ctir !70
  %fd = alloca i32, align 4, !ctir !7
  %save_errno = alloca i32, align 4, !ctir !7
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !888
  %attempts = alloca i32, align 4, !ctir !70
  %i = alloca i64, align 8, !ctir !55
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15690, metadata !DIExpression()), !dbg !15691
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15692, metadata !DIExpression()), !dbg !15693
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !15694, metadata !DIExpression()), !dbg !15695
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !15696, metadata !DIExpression()), !dbg !15697
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !15698, metadata !DIExpression()), !dbg !15699
  call void @llvm.dbg.declare(metadata i64* %len, metadata !15700, metadata !DIExpression()), !dbg !15701
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !15702, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.declare(metadata i32* %count, metadata !15704, metadata !DIExpression()), !dbg !15705
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !15706, metadata !DIExpression()), !dbg !15707
  store i32 -1, i32* %fd, align 4, !dbg !15707
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !15708, metadata !DIExpression()), !dbg !15709
  %call = call i32* @__errno_location() #15, !dbg !15710
  %0 = load i32, i32* %call, align 4, !dbg !15710, !ctir !7
  store i32 %0, i32* %save_errno, align 4, !dbg !15709
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !15711, metadata !DIExpression()), !dbg !15712
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !15713, metadata !DIExpression()), !dbg !15714
  store i32 238328, i32* %attempts, align 4, !dbg !15714
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !15715
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !15716
  store i64 %call1, i64* %len, align 8, !dbg !15717
  %2 = load i64, i64* %len, align 8, !dbg !15718
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15720
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !15721
  %conv = sext i32 %4 to i64, !dbg !15721
  %add = add i64 %3, %conv, !dbg !15722
  %cmp = icmp ult i64 %2, %add, !dbg !15723
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15724

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !15725
  %6 = load i64, i64* %len, align 8, !dbg !15726
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15727
  %sub = sub i64 %6, %7, !dbg !15728
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !15729
  %conv3 = sext i32 %8 to i64, !dbg !15729
  %sub4 = sub i64 %sub, %conv3, !dbg !15730
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !15725, !ctir !9
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15731
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !15732
  br i1 %call5, label %if.end, label %if.then, !dbg !15733

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #15, !dbg !15734
  store i32 22, i32* %call6, align 4, !dbg !15734, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !15736
  br label %return, !dbg !15736

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !15737
  %11 = load i64, i64* %len, align 8, !dbg !15738
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15739
  %sub7 = sub i64 %11, %12, !dbg !15740
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !15741
  %conv8 = sext i32 %13 to i64, !dbg !15741
  %sub9 = sub i64 %sub7, %conv8, !dbg !15742
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !15737, !ctir !9
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !15743
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15744
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !15745
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !15746
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15747
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !15747
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !15749

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !15750
  br label %return, !dbg !15750

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !15751
  br label %for.cond, !dbg !15753

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !15754
  %17 = load i32, i32* %attempts, align 4, !dbg !15756
  %cmp14 = icmp ult i32 %16, %17, !dbg !15757
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !15758

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15759, metadata !DIExpression()), !dbg !15761
  store i64 0, i64* %i, align 8, !dbg !15762
  br label %for.cond16, !dbg !15764

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !15765
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15767
  %cmp17 = icmp ult i64 %18, %19, !dbg !15768
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !15769

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15770
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !15771
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !15772, !ctir !891
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !15772
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !15773
  %23 = load i64, i64* %i, align 8, !dbg !15774
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !15773, !ctir !9
  store i8 %21, i8* %arrayidx22, align 1, !dbg !15775
  br label %for.inc, !dbg !15773

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !15776
  %inc = add i64 %24, 1, !dbg !15776
  store i64 %inc, i64* %i, align 8, !dbg !15776
  br label %for.cond16, !dbg !15777, !llvm.loop !15778

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !15780
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !15781
  %27 = load i8*, i8** %args.addr, align 8, !dbg !15782
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !15780
  store i32 %call23, i32* %fd, align 4, !dbg !15783
  %28 = load i32, i32* %fd, align 4, !dbg !15784
  %cmp24 = icmp sge i32 %28, 0, !dbg !15786
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !15787

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !15788
  %call27 = call i32* @__errno_location() #15, !dbg !15788
  store i32 %29, i32* %call27, align 4, !dbg !15788, !ctir !7
  br label %done, !dbg !15790

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #15, !dbg !15791
  %30 = load i32, i32* %call28, align 4, !dbg !15791, !ctir !7
  %cmp29 = icmp ne i32 %30, 17, !dbg !15793
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15794

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !15795
  br label %done, !dbg !15797

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !15798

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !15799
  %inc35 = add i32 %31, 1, !dbg !15799
  store i32 %inc35, i32* %count, align 4, !dbg !15799
  br label %for.cond, !dbg !15800, !llvm.loop !15801

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15803
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !15804
  %call38 = call i32* @__errno_location() #15, !dbg !15805
  store i32 17, i32* %call38, align 4, !dbg !15805, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !15806
  br label %return, !dbg !15806

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !15807), !dbg !15808
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !15809, metadata !DIExpression()), !dbg !15811
  %call39 = call i32* @__errno_location() #15, !dbg !15812
  %33 = load i32, i32* %call39, align 4, !dbg !15812, !ctir !7
  store i32 %33, i32* %saved_errno, align 4, !dbg !15811
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !15813
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !15814
  %35 = load i32, i32* %saved_errno, align 4, !dbg !15815
  %call41 = call i32* @__errno_location() #15, !dbg !15815
  store i32 %35, i32* %call41, align 4, !dbg !15815, !ctir !7
  %36 = load i32, i32* %fd, align 4, !dbg !15816
  store i32 %36, i32* %retval, align 4, !dbg !15817
  br label %return, !dbg !15817

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !15818
  ret i32 %37, !dbg !15818
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #9 !dbg !15819 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !15822, metadata !DIExpression()), !dbg !15823
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !15824, metadata !DIExpression()), !dbg !15825
  %0 = load i64, i64* %len.addr, align 8, !dbg !15826
  %1 = load i8*, i8** %s.addr, align 8, !dbg !15827
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.357, i64 0, i64 0)) #14, !dbg !15828
  %cmp = icmp ule i64 %0, %call, !dbg !15829
  ret i1 %cmp, !dbg !15830
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !15831 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !892
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15834, metadata !DIExpression()), !dbg !15835
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15836, metadata !DIExpression()), !dbg !15837
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15838, metadata !DIExpression()), !dbg !15839
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !15840, metadata !DIExpression()), !dbg !15841
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !15842, metadata !DIExpression()), !dbg !15843
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !15844, metadata !DIExpression()), !dbg !15845
  %0 = load i32, i32* %kind.addr, align 4, !dbg !15846
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !15847

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15848
  br label %sw.epilog, !dbg !15850

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15851
  br label %sw.epilog, !dbg !15852

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15853
  br label %sw.epilog, !dbg !15854

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.359, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !15855
  unreachable, !dbg !15855

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !15858
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !15859
  %3 = bitcast i32* %flags.addr to i8*, !dbg !15860
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !15861
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !15862
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !15863
  ret i32 %call, !dbg !15864
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !15865 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !161
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15866, metadata !DIExpression()), !dbg !15867
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !15868, metadata !DIExpression()), !dbg !15869
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !15870, metadata !DIExpression()), !dbg !15871
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !15872
  %1 = bitcast i8* %0 to i32*, !dbg !15872
  store i32* %1, i32** %openflags, align 8, !dbg !15871
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !15873
  %3 = load i32*, i32** %openflags, align 8, !dbg !15874
  %4 = load i32, i32* %3, align 4, !dbg !15875, !ctir !7
  %and = and i32 %4, -4, !dbg !15876
  %or = or i32 %and, 2, !dbg !15877
  %or1 = or i32 %or, 64, !dbg !15878
  %or2 = or i32 %or1, 128, !dbg !15879
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !15880
  ret i32 %call, !dbg !15881
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !15882 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15883, metadata !DIExpression()), !dbg !15884
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !15885, metadata !DIExpression()), !dbg !15886
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15887
  %call = call i32 @mkdir(i8* %0, i32 448) #10, !dbg !15888
  ret i32 %call, !dbg !15889
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !15890 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !15891
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15912, metadata !DIExpression()), !dbg !15913
  store i8* %flags, i8** %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !15914, metadata !DIExpression()), !dbg !15915
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !15916, metadata !DIExpression()), !dbg !15917
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15918
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #10, !dbg !15918
  %cmp = icmp eq i32 %call, 0, !dbg !15920
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15921

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !15922
  %1 = load i32, i32* %call1, align 4, !dbg !15922, !ctir !7
  %cmp2 = icmp eq i32 %1, 75, !dbg !15923
  br i1 %cmp2, label %if.then, label %if.end, !dbg !15924

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #15, !dbg !15925
  store i32 17, i32* %call3, align 4, !dbg !15925, !ctir !7
  br label %if.end, !dbg !15925

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #15, !dbg !15926
  %2 = load i32, i32* %call4, align 4, !dbg !15926, !ctir !7
  %cmp5 = icmp eq i32 %2, 2, !dbg !15927
  %3 = zext i1 %cmp5 to i64, !dbg !15926
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !15926
  ret i32 %cond, !dbg !15928
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !15929 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15932, metadata !DIExpression()), !dbg !15933
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15934, metadata !DIExpression()), !dbg !15935
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15936, metadata !DIExpression()), !dbg !15937
  store i32 %kind, i32* %kind.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !15938, metadata !DIExpression()), !dbg !15939
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15940
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !15941
  %2 = load i32, i32* %flags.addr, align 4, !dbg !15942
  %3 = load i32, i32* %kind.addr, align 4, !dbg !15943
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !15944
  ret i32 %call, !dbg !15945
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !15946 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !15949, metadata !DIExpression()), !dbg !15950
  store i32 %suffixlen, i32* %suffixlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !15951, metadata !DIExpression()), !dbg !15952
  store i8* %args, i8** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !15953, metadata !DIExpression()), !dbg !15954
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !15955, metadata !DIExpression()), !dbg !15956
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !15957
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !15958
  %2 = load i8*, i8** %args.addr, align 8, !dbg !15959
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !15960
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !15961
  ret i32 %call, !dbg !15962
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !15963 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15965, metadata !DIExpression()), !dbg !15966
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15967
  %cmp = icmp sle i32 0, %0, !dbg !15969
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15970

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !15971
  %cmp1 = icmp sle i32 %1, 2, !dbg !15972
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15973

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !15974, metadata !DIExpression()), !dbg !15976
  %2 = load i32, i32* %fd.addr, align 4, !dbg !15977
  %call = call i32 @dup_safer(i32 %2), !dbg !15978
  store i32 %call, i32* %f, align 4, !dbg !15976
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15979, metadata !DIExpression()), !dbg !15980
  %call2 = call i32* @__errno_location() #15, !dbg !15981
  %3 = load i32, i32* %call2, align 4, !dbg !15981, !ctir !7
  store i32 %3, i32* %e, align 4, !dbg !15980
  %4 = load i32, i32* %fd.addr, align 4, !dbg !15982
  %call3 = call i32 @close(i32 %4), !dbg !15983
  %5 = load i32, i32* %e, align 4, !dbg !15984
  %call4 = call i32* @__errno_location() #15, !dbg !15985
  store i32 %5, i32* %call4, align 4, !dbg !15986, !ctir !7
  %6 = load i32, i32* %f, align 4, !dbg !15987
  store i32 %6, i32* %fd.addr, align 4, !dbg !15988
  br label %if.end, !dbg !15989

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !15990
  ret i32 %7, !dbg !15991
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !15992 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !15995, metadata !DIExpression()), !dbg !15996
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !15997, metadata !DIExpression()), !dbg !15998
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !15999, metadata !DIExpression()), !dbg !16000
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16001, metadata !DIExpression()), !dbg !16002
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !16003
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16004
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16005
  %3 = load i32, i32* %options.addr, align 4, !dbg !16006
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !16007
  ret i32 %call, !dbg !16008
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !903 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !933
  %src_s = alloca i64, align 8, !ctir !933
  %dst_ns = alloca i32, align 4, !ctir !7
  %src_ns = alloca i32, align 4, !ctir !7
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !935
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !936
  %res = alloca i32, align 4, !ctir !7
  %dst_a_s = alloca i64, align 8, !ctir !933
  %dst_c_s = alloca i64, align 8, !ctir !933
  %dst_m_s = alloca i64, align 8, !ctir !933
  %dst_a_ns = alloca i32, align 4, !ctir !7
  %dst_c_ns = alloca i32, align 4, !ctir !7
  %dst_m_ns = alloca i32, align 4, !ctir !7
  %odd_second = alloca i8, align 1, !ctir !142
  %a = alloca i32, align 4, !ctir !7
  %c = alloca i32, align 4, !ctir !7
  %m = alloca i32, align 4, !ctir !7
  %SR10 = alloca i32, align 4, !ctir !7
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !941
  %dst_status = alloca %struct.stat, align 8, !ctir !909
  %s = alloca i64, align 8, !ctir !933
  %stat_result = alloca i32, align 4, !ctir !7
  %old_res = alloca i32, align 4, !ctir !7
  %a168 = alloca i32, align 4, !ctir !7
  store i32 %dfd, i32* %dfd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !16009, metadata !DIExpression()), !dbg !16010
  store i8* %dst_name, i8** %dst_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16011, metadata !DIExpression()), !dbg !16012
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16013, metadata !DIExpression()), !dbg !16014
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16015, metadata !DIExpression()), !dbg !16016
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16017, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !16019, metadata !DIExpression()), !dbg !16020
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16021
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16022, !ctir !908
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !16022, !ctir !923
  %1 = load i64, i64* %tv_sec, align 8, !dbg !16022, !ctir !361
  store i64 %1, i64* %dst_s, align 8, !dbg !16020
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !16023, metadata !DIExpression()), !dbg !16024
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16025
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !16026, !ctir !908
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !16026, !ctir !923
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !16026, !ctir !361
  store i64 %3, i64* %src_s, align 8, !dbg !16024
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !16027, metadata !DIExpression()), !dbg !16028
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16029
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !16030
  %conv = trunc i64 %call to i32, !dbg !16030
  store i32 %conv, i32* %dst_ns, align 4, !dbg !16028
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !16031, metadata !DIExpression()), !dbg !16032
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16033
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !16034
  %conv4 = trunc i64 %call3 to i32, !dbg !16034
  store i32 %conv4, i32* %src_ns, align 4, !dbg !16032
  %6 = load i32, i32* %options.addr, align 4, !dbg !16035
  %and = and i32 %6, 1, !dbg !16037
  %tobool = icmp ne i32 %and, 0, !dbg !16037
  br i1 %tobool, label %if.then, label %if.end207, !dbg !16038

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !16039, metadata !DIExpression()), !dbg !16041
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !16041
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !16042, metadata !DIExpression()), !dbg !16043
  call void @llvm.dbg.declare(metadata i32* %res, metadata !16044, metadata !DIExpression()), !dbg !16045
  %7 = load i64, i64* %dst_s, align 8, !dbg !16046
  %8 = load i64, i64* %src_s, align 8, !dbg !16048
  %cmp = icmp eq i64 %7, %8, !dbg !16049
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16050

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !16051
  %10 = load i32, i32* %src_ns, align 4, !dbg !16052
  %cmp6 = icmp eq i32 %9, %10, !dbg !16053
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !16054

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !16055
  br label %return, !dbg !16055

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !16056
  %12 = load i64, i64* %src_s, align 8, !dbg !16058
  %sub = sub nsw i64 %12, 2, !dbg !16059
  %cmp9 = icmp sle i64 %11, %sub, !dbg !16060
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16061

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16062
  br label %return, !dbg !16062

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !16063
  %14 = load i64, i64* %dst_s, align 8, !dbg !16065
  %sub13 = sub nsw i64 %14, 2, !dbg !16066
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !16067
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !16068

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !16069
  br label %return, !dbg !16069

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16070
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !16070
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !16072

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !16073
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16074
  br label %if.end21, !dbg !16075

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16076
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !16076
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !16078

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16079
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !16079
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !16082

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #10, !dbg !16083
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !16083
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16085
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16086
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !16086
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !16088

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !16089

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16090
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !16091, !ctir !936
  store i32 2000000000, i32* %resolution, align 8, !dbg !16092, !ctir !7
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16093
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !16094, !ctir !936
  store i8 0, i8* %exact, align 4, !dbg !16095, !ctir !142
  br label %if.end30, !dbg !16096

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16097
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !16098, !ctir !908
  %23 = load i64, i64* %st_dev, align 8, !dbg !16098, !ctir !263
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16099
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !16100, !ctir !936
  store i64 %23, i64* %dev, align 8, !dbg !16101, !ctir !262
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16102
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16103
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !16103
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !16104
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !16104
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !16105
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16106
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !16106
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !16108

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !16109

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16110
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16112
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !16113
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !16114

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16115
  br label %if.end38, !dbg !16117

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !16118

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !16119

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !16120), !dbg !16122
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16123
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !16123
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !16125

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16126
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !16128, !ctir !908
  %34 = load i64, i64* %st_dev41, align 8, !dbg !16128, !ctir !263
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !16129, !ctir !936
  store i64 %34, i64* %dev42, align 8, !dbg !16130, !ctir !262
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16131
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !16132
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !16133
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !16133
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !16134
  br label %if.end44, !dbg !16135

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16136
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !16136
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !16138

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !16139
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16141
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !16142, !ctir !936
  store i32 2000000000, i32* %resolution47, align 8, !dbg !16143, !ctir !7
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16144
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !16145, !ctir !936
  store i8 0, i8* %exact48, align 4, !dbg !16146, !ctir !142
  br label %if.end49, !dbg !16147

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16148
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !16149, !ctir !936
  %42 = load i32, i32* %resolution51, align 8, !dbg !16149, !ctir !7
  store i32 %42, i32* %res, align 4, !dbg !16150
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16151
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !16153, !ctir !936
  %44 = load i8, i8* %exact52, align 4, !dbg !16153
  %tobool53 = trunc i8 %44 to i1, !dbg !16153, !ctir !142
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !16154

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !16155, metadata !DIExpression()), !dbg !16157
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16158
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !16159, !ctir !908
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !16159, !ctir !923
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !16159, !ctir !361
  store i64 %46, i64* %dst_a_s, align 8, !dbg !16157
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !16160, metadata !DIExpression()), !dbg !16161
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16162
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !16163, !ctir !908
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !16163, !ctir !923
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !16163, !ctir !361
  store i64 %48, i64* %dst_c_s, align 8, !dbg !16161
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !16164, metadata !DIExpression()), !dbg !16165
  %49 = load i64, i64* %dst_s, align 8, !dbg !16166
  store i64 %49, i64* %dst_m_s, align 8, !dbg !16165
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !16167, metadata !DIExpression()), !dbg !16168
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16169
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !16170
  %conv58 = trunc i64 %call57 to i32, !dbg !16170
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !16168
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !16171, metadata !DIExpression()), !dbg !16172
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16173
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !16174
  %conv60 = trunc i64 %call59 to i32, !dbg !16174
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !16172
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !16175, metadata !DIExpression()), !dbg !16176
  %52 = load i32, i32* %dst_ns, align 4, !dbg !16177
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !16176
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !16178, metadata !DIExpression()), !dbg !16180
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !16181
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !16182
  %or = or i64 %53, %54, !dbg !16183
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !16184
  %or61 = or i64 %or, %55, !dbg !16185
  %and62 = and i64 %or61, 1, !dbg !16186
  %tobool63 = icmp ne i64 %and62, 0, !dbg !16187
  %frombool = zext i1 %tobool63 to i8, !dbg !16180
  store i8 %frombool, i8* %odd_second, align 1, !dbg !16180
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16188, metadata !DIExpression()), !dbg !16191
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !16192
  store i32 %56, i32* %a, align 4, !dbg !16191
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16193, metadata !DIExpression()), !dbg !16194
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !16195
  store i32 %57, i32* %c, align 4, !dbg !16194
  call void @llvm.dbg.declare(metadata i32* %m, metadata !16196, metadata !DIExpression()), !dbg !16197
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !16198
  store i32 %58, i32* %m, align 4, !dbg !16197
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !16199, metadata !DIExpression()), !dbg !16200
  store i32 1, i32* %SR10, align 4, !dbg !16200
  %59 = load i32, i32* %SR10, align 4, !dbg !16201
  %mul = mul nsw i32 %59, 10, !dbg !16201
  store i32 %mul, i32* %SR10, align 4, !dbg !16201
  %60 = load i32, i32* %a, align 4, !dbg !16202
  %61 = load i32, i32* %SR10, align 4, !dbg !16204
  %rem = srem i32 %60, %61, !dbg !16205
  %62 = load i32, i32* %c, align 4, !dbg !16206
  %63 = load i32, i32* %SR10, align 4, !dbg !16207
  %rem64 = srem i32 %62, %63, !dbg !16208
  %or65 = or i32 %rem, %rem64, !dbg !16209
  %64 = load i32, i32* %m, align 4, !dbg !16210
  %65 = load i32, i32* %SR10, align 4, !dbg !16211
  %rem66 = srem i32 %64, %65, !dbg !16212
  %or67 = or i32 %or65, %rem66, !dbg !16213
  %cmp68 = icmp ne i32 %or67, 0, !dbg !16214
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !16215

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !16216
  br label %if.end96, !dbg !16217

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !16218
  store i32 %66, i32* %res, align 4, !dbg !16220
  %67 = load i32, i32* %SR10, align 4, !dbg !16221
  %68 = load i32, i32* %a, align 4, !dbg !16222
  %div = sdiv i32 %68, %67, !dbg !16222
  store i32 %div, i32* %a, align 4, !dbg !16222
  %69 = load i32, i32* %SR10, align 4, !dbg !16223
  %70 = load i32, i32* %c, align 4, !dbg !16224
  %div72 = sdiv i32 %70, %69, !dbg !16224
  store i32 %div72, i32* %c, align 4, !dbg !16224
  %71 = load i32, i32* %SR10, align 4, !dbg !16225
  %72 = load i32, i32* %m, align 4, !dbg !16226
  %div73 = sdiv i32 %72, %71, !dbg !16226
  store i32 %div73, i32* %m, align 4, !dbg !16226
  br label %for.cond, !dbg !16227

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !16228
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16230
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !16231, !ctir !936
  %75 = load i32, i32* %resolution74, align 8, !dbg !16231, !ctir !7
  %cmp75 = icmp slt i32 %73, %75, !dbg !16232
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !16233

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !16234
  %rem77 = srem i32 %76, 10, !dbg !16235
  %77 = load i32, i32* %c, align 4, !dbg !16236
  %rem78 = srem i32 %77, 10, !dbg !16237
  %or79 = or i32 %rem77, %rem78, !dbg !16238
  %78 = load i32, i32* %m, align 4, !dbg !16239
  %rem80 = srem i32 %78, 10, !dbg !16240
  %or81 = or i32 %or79, %rem80, !dbg !16241
  %cmp82 = icmp eq i32 %or81, 0, !dbg !16242
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !16243
  br i1 %79, label %for.body, label %for.end, !dbg !16244

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !16245
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !16247
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !16248

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !16249
  %tobool87 = trunc i8 %81 to i1, !dbg !16249
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !16252

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !16253
  %mul89 = mul nsw i32 %82, 2, !dbg !16253
  store i32 %mul89, i32* %res, align 4, !dbg !16253
  br label %if.end90, !dbg !16254

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !16255

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !16256

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !16257
  %mul92 = mul nsw i32 %83, 10, !dbg !16257
  store i32 %mul92, i32* %res, align 4, !dbg !16257
  %84 = load i32, i32* %a, align 4, !dbg !16258
  %div93 = sdiv i32 %84, 10, !dbg !16258
  store i32 %div93, i32* %a, align 4, !dbg !16258
  %85 = load i32, i32* %c, align 4, !dbg !16259
  %div94 = sdiv i32 %85, 10, !dbg !16259
  store i32 %div94, i32* %c, align 4, !dbg !16259
  %86 = load i32, i32* %m, align 4, !dbg !16260
  %div95 = sdiv i32 %86, 10, !dbg !16260
  store i32 %div95, i32* %m, align 4, !dbg !16260
  br label %for.cond, !dbg !16261, !llvm.loop !16262

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !16264
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16265
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !16266, !ctir !936
  store i32 %87, i32* %resolution97, align 8, !dbg !16267, !ctir !7
  %89 = load i32, i32* %res, align 4, !dbg !16268
  %cmp98 = icmp slt i32 1, %89, !dbg !16270
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !16271

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !16272, metadata !DIExpression()), !dbg !16274
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !16275, metadata !DIExpression()), !dbg !16276
  %90 = load i32, i32* %src_ns, align 4, !dbg !16277
  %rem101 = srem i32 %90, 1, !dbg !16278
  %91 = load i32, i32* %src_ns, align 4, !dbg !16279
  %sub102 = sub nsw i32 %91, %rem101, !dbg !16279
  store i32 %sub102, i32* %src_ns, align 4, !dbg !16279
  call void @llvm.dbg.declare(metadata i64* %s, metadata !16280, metadata !DIExpression()), !dbg !16282
  %92 = load i64, i64* %src_s, align 8, !dbg !16283
  %93 = load i32, i32* %res, align 4, !dbg !16284
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !16285
  %94 = zext i1 %cmp103 to i64, !dbg !16284
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !16284
  %neg = xor i32 %cond, -1, !dbg !16286
  %conv105 = sext i32 %neg to i64, !dbg !16286
  %and106 = and i64 %92, %conv105, !dbg !16287
  store i64 %and106, i64* %s, align 8, !dbg !16282
  %95 = load i64, i64* %src_s, align 8, !dbg !16288
  %96 = load i64, i64* %dst_s, align 8, !dbg !16290
  %cmp107 = icmp slt i64 %95, %96, !dbg !16291
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !16292

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !16293
  %98 = load i64, i64* %dst_s, align 8, !dbg !16294
  %cmp109 = icmp eq i64 %97, %98, !dbg !16295
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !16296

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !16297
  %100 = load i32, i32* %dst_ns, align 4, !dbg !16298
  %cmp112 = icmp sle i32 %99, %100, !dbg !16299
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !16300

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !16301
  br label %return, !dbg !16301

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !16302
  %102 = load i64, i64* %s, align 8, !dbg !16304
  %cmp116 = icmp slt i64 %101, %102, !dbg !16305
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !16306

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !16307
  %104 = load i64, i64* %s, align 8, !dbg !16308
  %cmp119 = icmp eq i64 %103, %104, !dbg !16309
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !16310

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !16311
  %106 = load i32, i32* %src_ns, align 4, !dbg !16312
  %107 = load i32, i32* %src_ns, align 4, !dbg !16313
  %108 = load i32, i32* %res, align 4, !dbg !16314
  %rem122 = srem i32 %107, %108, !dbg !16315
  %sub123 = sub nsw i32 %106, %rem122, !dbg !16316
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !16317
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !16318

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !16319
  br label %return, !dbg !16319

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !16320
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16321, !ctir !941
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !16322, !ctir !923
  store i64 %109, i64* %tv_sec128, align 16, !dbg !16323, !ctir !361
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !16324
  %conv129 = sext i32 %110 to i64, !dbg !16324
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16325, !ctir !941
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !16326, !ctir !923
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !16327, !ctir !363
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !16328
  %112 = load i32, i32* %res, align 4, !dbg !16329
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !16330
  %conv132 = zext i1 %cmp131 to i32, !dbg !16330
  %conv133 = sext i32 %conv132 to i64, !dbg !16331
  %or134 = or i64 %111, %conv133, !dbg !16332
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16333, !ctir !941
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !16334, !ctir !923
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !16335, !ctir !361
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !16336
  %114 = load i32, i32* %res, align 4, !dbg !16337
  %div137 = sdiv i32 %114, 9, !dbg !16338
  %add = add nsw i32 %113, %div137, !dbg !16339
  %conv138 = sext i32 %add to i64, !dbg !16336
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16340, !ctir !941
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !16341, !ctir !923
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !16342, !ctir !363
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !16343
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !16345
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16346, !ctir !941
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #10, !dbg !16347
  %tobool142 = icmp ne i32 %call141, 0, !dbg !16347
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !16348

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !16349
  br label %return, !dbg !16349

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !16350, metadata !DIExpression()), !dbg !16352
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !16353
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !16354
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #10, !dbg !16355
  store i32 %call145, i32* %stat_result, align 4, !dbg !16352
  %119 = load i32, i32* %stat_result, align 4, !dbg !16356
  %conv146 = sext i32 %119 to i64, !dbg !16356
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16358, !ctir !909
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !16358, !ctir !923
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !16358, !ctir !361
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !16359
  %xor = xor i64 %120, %121, !dbg !16360
  %or149 = or i64 %conv146, %xor, !dbg !16361
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16362
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !16363
  %conv151 = sext i32 %122 to i64, !dbg !16363
  %xor152 = xor i64 %call150, %conv151, !dbg !16364
  %or153 = or i64 %or149, %xor152, !dbg !16365
  %tobool154 = icmp ne i64 %or153, 0, !dbg !16365
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !16366

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !16367
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16369, !ctir !941
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !16370, !ctir !923
  store i64 %123, i64* %tv_sec157, align 16, !dbg !16371, !ctir !361
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !16372
  %conv158 = sext i32 %124 to i64, !dbg !16372
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16373, !ctir !941
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !16374, !ctir !923
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !16375, !ctir !363
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !16376
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !16377
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16378, !ctir !941
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #10, !dbg !16379
  br label %if.end163, !dbg !16380

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !16381
  %cmp164 = icmp ne i32 %127, 0, !dbg !16383
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !16384

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !16385
  br label %return, !dbg !16385

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !16386, metadata !DIExpression()), !dbg !16388
  %128 = load i32, i32* %res, align 4, !dbg !16389
  store i32 %128, i32* %old_res, align 4, !dbg !16388
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !16390, metadata !DIExpression()), !dbg !16391
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16392, !ctir !909
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !16392, !ctir !923
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !16392, !ctir !361
  %and171 = and i64 %129, 1, !dbg !16393
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !16394
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16395
  %add174 = add nsw i64 %mul172, %call173, !dbg !16396
  %conv175 = trunc i64 %add174 to i32, !dbg !16397
  store i32 %conv175, i32* %a168, align 4, !dbg !16391
  store i32 1, i32* %res, align 4, !dbg !16398
  %130 = load i32, i32* %res, align 4, !dbg !16399
  %131 = load i32, i32* %a168, align 4, !dbg !16401
  %div176 = sdiv i32 %131, %130, !dbg !16401
  store i32 %div176, i32* %a168, align 4, !dbg !16401
  br label %for.cond177, !dbg !16402

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !16403
  %rem178 = srem i32 %132, 10, !dbg !16405
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !16406
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !16407

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !16408
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !16411
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !16412

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !16413
  %mul185 = mul nsw i32 %134, 2, !dbg !16413
  store i32 %mul185, i32* %res, align 4, !dbg !16413
  br label %for.end194, !dbg !16415

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !16416
  %mul187 = mul nsw i32 %135, 10, !dbg !16416
  store i32 %mul187, i32* %res, align 4, !dbg !16416
  %136 = load i32, i32* %res, align 4, !dbg !16417
  %137 = load i32, i32* %old_res, align 4, !dbg !16419
  %cmp188 = icmp eq i32 %136, %137, !dbg !16420
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !16421

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !16422

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !16423

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !16424
  %div193 = sdiv i32 %138, 10, !dbg !16424
  store i32 %div193, i32* %a168, align 4, !dbg !16424
  br label %for.cond177, !dbg !16425, !llvm.loop !16426

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !16428

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !16429
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16430
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !16431, !ctir !936
  store i32 %139, i32* %resolution196, align 8, !dbg !16432, !ctir !7
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16433
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !16434, !ctir !936
  store i8 1, i8* %exact197, align 4, !dbg !16435, !ctir !142
  br label %if.end198, !dbg !16436

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !16437
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !16438
  %143 = zext i1 %cmp199 to i64, !dbg !16437
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !16437
  %neg202 = xor i32 %cond201, -1, !dbg !16439
  %conv203 = sext i32 %neg202 to i64, !dbg !16439
  %144 = load i64, i64* %src_s, align 8, !dbg !16440
  %and204 = and i64 %144, %conv203, !dbg !16440
  store i64 %and204, i64* %src_s, align 8, !dbg !16440
  %145 = load i32, i32* %src_ns, align 4, !dbg !16441
  %146 = load i32, i32* %res, align 4, !dbg !16442
  %rem205 = srem i32 %145, %146, !dbg !16443
  %147 = load i32, i32* %src_ns, align 4, !dbg !16444
  %sub206 = sub nsw i32 %147, %rem205, !dbg !16444
  store i32 %sub206, i32* %src_ns, align 4, !dbg !16444
  br label %if.end207, !dbg !16445

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !16446
  %149 = load i64, i64* %src_s, align 8, !dbg !16447
  %cmp208 = icmp slt i64 %148, %149, !dbg !16448
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !16446

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !16446

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !16449
  %151 = load i64, i64* %src_s, align 8, !dbg !16450
  %cmp210 = icmp sgt i64 %150, %151, !dbg !16451
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !16449

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !16449

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !16452
  %153 = load i32, i32* %src_ns, align 4, !dbg !16453
  %cmp214 = icmp slt i32 %152, %153, !dbg !16454
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !16452

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !16452

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !16455
  %155 = load i32, i32* %src_ns, align 4, !dbg !16456
  %cmp218 = icmp sgt i32 %154, %155, !dbg !16457
  %conv219 = zext i1 %cmp218 to i32, !dbg !16457
  br label %cond.end, !dbg !16452

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !16452
  br label %cond.end221, !dbg !16449

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !16449
  br label %cond.end223, !dbg !16446

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !16446
  store i32 %cond224, i32* %retval, align 4, !dbg !16458
  br label %return, !dbg !16458

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !16459
  ret i32 %156, !dbg !16459
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !16460 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !942
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16461, metadata !DIExpression()), !dbg !16462
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !16463, metadata !DIExpression()), !dbg !16464
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !16465, metadata !DIExpression()), !dbg !16466
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16467
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16467
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !16466
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !16468
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !16469, !ctir !943
  %3 = load i64, i64* %dev, align 8, !dbg !16469, !ctir !262
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !16470
  %rem = urem i64 %3, %4, !dbg !16471
  ret i64 %rem, !dbg !16472
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !16473 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !942
  %b = alloca %struct.fs_res*, align 8, !ctir !942
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16474, metadata !DIExpression()), !dbg !16475
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !16476, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !16478, metadata !DIExpression()), !dbg !16479
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16480
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16480
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !16479
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !16481, metadata !DIExpression()), !dbg !16482
  %2 = load i8*, i8** %y.addr, align 8, !dbg !16483
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !16483
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !16482
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !16484
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !16485, !ctir !943
  %5 = load i64, i64* %dev, align 8, !dbg !16485, !ctir !262
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !16486
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !16487, !ctir !943
  %7 = load i64, i64* %dev1, align 8, !dbg !16487, !ctir !262
  %cmp = icmp eq i64 %5, %7, !dbg !16488
  ret i1 %cmp, !dbg !16489
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !16490 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16496, metadata !DIExpression()), !dbg !16497
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16498, metadata !DIExpression()), !dbg !16499
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !16500, metadata !DIExpression()), !dbg !16501
  %0 = load i32, i32* %dir.addr, align 4, !dbg !16502
  %1 = load i8*, i8** %file.addr, align 8, !dbg !16503
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !16504
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #10, !dbg !16505
  ret i32 %call, !dbg !16506
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !16507 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !952
  %ts = alloca %struct.timespec*, align 8, !ctir !957
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !16508
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !958
  %t = alloca %struct.timespec*, align 8, !ctir !965
  %abig = alloca i8, align 1, !ctir !142
  %mbig = alloca i8, align 1, !ctir !142
  %adiff = alloca i64, align 8, !ctir !933
  %mdiff = alloca i64, align 8, !ctir !933
  %tt = alloca %struct.timespec*, align 8, !ctir !965
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !958
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16525, metadata !DIExpression()), !dbg !16526
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16527, metadata !DIExpression()), !dbg !16528
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16529, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !16531, metadata !DIExpression()), !dbg !16532
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !16533, metadata !DIExpression()), !dbg !16534
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16535
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !16535
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16535

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16536, !ctir !952
  br label %cond.end, !dbg !16535

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16535

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !16535
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !16534
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !16537, metadata !DIExpression()), !dbg !16538
  store i32 0, i32* %adjustment_needed, align 4, !dbg !16538
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16539, metadata !DIExpression()), !dbg !16540
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16541
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !16541
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16543

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16544, !ctir !952
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16546
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16546, !ctir !16494
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !16546
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !16546
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !16546
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !16547, !ctir !952
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16548
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !16548, !ctir !16494
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !16548
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !16548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !16548
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16549
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !16550
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !16551
  br label %if.end, !dbg !16552

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !16553
  %cmp = icmp slt i32 %9, 0, !dbg !16555
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !16556

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16557
  br label %return, !dbg !16557

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !16558
  %cmp7 = icmp slt i32 %10, 0, !dbg !16560
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !16561

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !16562
  %tobool8 = icmp ne i8* %11, null, !dbg !16562
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !16563

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !16564
  store i32 9, i32* %call10, align 4, !dbg !16566, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16567
  br label %return, !dbg !16567

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !16568
  %cmp12 = icmp sle i32 0, %12, !dbg !16570
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !16571

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16572, metadata !DIExpression()), !dbg !16574
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !16575
  %cmp14 = icmp eq i32 %13, 2, !dbg !16577
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !16578

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !16579
  %cmp16 = icmp slt i32 %14, 0, !dbg !16582
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !16583

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !16584
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #10, !dbg !16585
  %tobool19 = icmp ne i32 %call18, 0, !dbg !16585
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !16579

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !16586
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #10, !dbg !16587
  %tobool22 = icmp ne i32 %call21, 0, !dbg !16587
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !16583

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !16588
  br label %return, !dbg !16588

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16589
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !16589, !ctir !957
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !16591, !ctir !953
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !16591, !ctir !363
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !16592
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !16593

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16594
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !16594, !ctir !957
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !16595
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !16595
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !16595
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !16595
  store i64 %22, i64* %21, align 8, !dbg !16595
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !16595
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !16595
  store i64 %24, i64* %23, align 8, !dbg !16595
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !16595
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !16595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !16595
  br label %if.end38, !dbg !16594

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16596
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !16596, !ctir !957
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !16598, !ctir !953
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !16598, !ctir !363
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !16599
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !16600

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16601
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !16601, !ctir !957
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !16602
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !16602
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !16602
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !16602
  store i64 %32, i64* %31, align 8, !dbg !16602
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !16602
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !16602
  store i64 %34, i64* %33, align 8, !dbg !16602
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !16602
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !16602
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !16602
  br label %if.end37, !dbg !16601

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !16603
  %inc = add nsw i32 %37, 1, !dbg !16603
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !16603
  br label %if.end39, !dbg !16604

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !16605
  %cmp40 = icmp slt i32 %38, 0, !dbg !16607
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !16608

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !16609
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16611
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #10, !dbg !16612
  store i32 %call42, i32* %result, align 4, !dbg !16613
  %41 = load i32, i32* %result, align 4, !dbg !16614
  %cmp43 = icmp slt i32 0, %41, !dbg !16616
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !16617

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #15, !dbg !16618
  store i32 38, i32* %call45, align 4, !dbg !16619, !ctir !7
  br label %if.end46, !dbg !16618

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !16620
  %cmp47 = icmp eq i32 %42, 0, !dbg !16622
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !16623

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #15, !dbg !16624
  %43 = load i32, i32* %call48, align 4, !dbg !16624, !ctir !7
  %cmp49 = icmp ne i32 %43, 38, !dbg !16625
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !16626

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !16627
  %44 = load i32, i32* %result, align 4, !dbg !16629
  store i32 %44, i32* %retval, align 4, !dbg !16630
  br label %return, !dbg !16630

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !16631

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !16632
  %cmp53 = icmp sle i32 0, %45, !dbg !16634
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !16635

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !16636
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16638
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #10, !dbg !16639
  store i32 %call55, i32* %result, align 4, !dbg !16640
  %48 = load i32, i32* %result, align 4, !dbg !16641
  %cmp56 = icmp slt i32 0, %48, !dbg !16643
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !16644

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #15, !dbg !16645
  store i32 38, i32* %call58, align 4, !dbg !16646, !ctir !7
  br label %if.end59, !dbg !16645

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !16647
  %cmp60 = icmp eq i32 %49, 0, !dbg !16649
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !16650

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #15, !dbg !16651
  %50 = load i32, i32* %call62, align 4, !dbg !16651, !ctir !7
  %cmp63 = icmp ne i32 %50, 38, !dbg !16652
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !16653

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !16654
  %51 = load i32, i32* %result, align 4, !dbg !16656
  store i32 %51, i32* %retval, align 4, !dbg !16657
  br label %return, !dbg !16657

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !16658

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !16659

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !16660
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !16661
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !16662
  %tobool68 = icmp ne i32 %52, 0, !dbg !16662
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !16664

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !16665
  %cmp70 = icmp ne i32 %53, 3, !dbg !16668
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !16669

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !16670
  %cmp72 = icmp slt i32 %54, 0, !dbg !16671
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !16672

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !16673
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #10, !dbg !16674
  %tobool75 = icmp ne i32 %call74, 0, !dbg !16674
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !16670

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !16675
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #10, !dbg !16676
  %tobool78 = icmp ne i32 %call77, 0, !dbg !16676
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !16672

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !16677
  br label %return, !dbg !16677

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16678
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !16678
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !16680

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !16681
  br i1 %call83, label %if.then84, label %if.end85, !dbg !16682

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !16683
  br label %return, !dbg !16683

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !16684

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !16685, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !16688, metadata !DIExpression()), !dbg !16689
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16690
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !16690
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !16692

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16693
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !16693, !ctir !957
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !16695, !ctir !953
  %60 = load i64, i64* %tv_sec, align 8, !dbg !16695, !ctir !361
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !16696, !ctir !958
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !16697, !ctir !959
  store i64 %60, i64* %tv_sec91, align 16, !dbg !16698, !ctir !361
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16699
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !16699, !ctir !957
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !16700, !ctir !953
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !16700, !ctir !363
  %div = sdiv i64 %62, 1000, !dbg !16701
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !16702, !ctir !958
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !16703, !ctir !959
  store i64 %div, i64* %tv_usec, align 8, !dbg !16704, !ctir !964
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16705
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !16705, !ctir !957
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !16706, !ctir !953
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !16706, !ctir !361
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !16707, !ctir !958
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !16708, !ctir !959
  store i64 %64, i64* %tv_sec98, align 16, !dbg !16709, !ctir !361
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16710
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !16710, !ctir !957
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !16711, !ctir !953
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !16711, !ctir !363
  %div101 = sdiv i64 %66, 1000, !dbg !16712
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !16713, !ctir !958
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !16714, !ctir !959
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !16715, !ctir !964
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !16716, !ctir !958
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !16717
  br label %if.end106, !dbg !16718

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !16719
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !16720
  %cmp107 = icmp slt i32 %67, 0, !dbg !16722
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !16723

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !16724
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16726
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #10, !dbg !16727
  store i32 %call109, i32* %retval, align 4, !dbg !16728
  br label %return, !dbg !16728

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !16729
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16729
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #10, !dbg !16729
  %cmp112 = icmp eq i32 %call111, 0, !dbg !16732
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !16733

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16734
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !16734
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !16737

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !16738, metadata !DIExpression()), !dbg !16740
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16741
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !16741, !ctir !965
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !16742, !ctir !959
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !16742, !ctir !964
  %cmp118 = icmp sle i64 500000, %74, !dbg !16743
  %frombool = zext i1 %cmp118 to i8, !dbg !16740
  store i8 %frombool, i8* %abig, align 1, !dbg !16740
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !16744, metadata !DIExpression()), !dbg !16745
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16746
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !16746, !ctir !965
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !16747, !ctir !959
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !16747, !ctir !964
  %cmp121 = icmp sle i64 500000, %76, !dbg !16748
  %frombool122 = zext i1 %cmp121 to i8, !dbg !16745
  store i8 %frombool122, i8* %mbig, align 1, !dbg !16745
  %77 = load i8, i8* %abig, align 1, !dbg !16749
  %tobool123 = trunc i8 %77 to i1, !dbg !16749
  %conv = zext i1 %tobool123 to i32, !dbg !16749
  %78 = load i8, i8* %mbig, align 1, !dbg !16751
  %tobool124 = trunc i8 %78 to i1, !dbg !16751
  %conv125 = zext i1 %tobool124 to i32, !dbg !16751
  %or = or i32 %conv, %conv125, !dbg !16752
  %tobool126 = icmp ne i32 %or, 0, !dbg !16752
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !16753

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !16754
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #10, !dbg !16755
  %cmp129 = icmp eq i32 %call128, 0, !dbg !16756
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !16757

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !16758, metadata !DIExpression()), !dbg !16760
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !16761, !ctir !16508
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !16761, !ctir !953
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !16761, !ctir !361
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16762
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !16762, !ctir !965
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !16763, !ctir !959
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !16763, !ctir !361
  %sub = sub nsw i64 %80, %82, !dbg !16764
  store i64 %sub, i64* %adiff, align 8, !dbg !16760
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !16765, metadata !DIExpression()), !dbg !16766
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !16767, !ctir !16508
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !16767, !ctir !953
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !16767, !ctir !361
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16768
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !16768, !ctir !965
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !16769, !ctir !959
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !16769, !ctir !361
  %sub138 = sub nsw i64 %83, %85, !dbg !16770
  store i64 %sub138, i64* %mdiff, align 8, !dbg !16766
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !16771, metadata !DIExpression()), !dbg !16772
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !16772
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !16773, metadata !DIExpression()), !dbg !16774
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !16775, !ctir !958
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16776
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !16776, !ctir !965
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !16776
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !16776
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !16776
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !16777, !ctir !958
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16778
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !16778, !ctir !965
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !16778
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !16778
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !16778
  %92 = load i8, i8* %abig, align 1, !dbg !16779
  %tobool143 = trunc i8 %92 to i1, !dbg !16779
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !16781

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !16782
  %cmp146 = icmp eq i64 %93, 1, !dbg !16783
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !16784

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !16785
  %cmp150 = icmp eq i64 %call149, 0, !dbg !16786
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !16787

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !16788, !ctir !958
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !16790
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16791
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !16791, !ctir !965
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !16792, !ctir !959
  store i64 0, i64* %tv_usec155, align 8, !dbg !16793, !ctir !964
  br label %if.end156, !dbg !16794

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !16795
  %tobool157 = trunc i8 %95 to i1, !dbg !16795
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !16797

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !16798
  %cmp160 = icmp eq i64 %96, 1, !dbg !16799
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !16800

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !16801
  %cmp164 = icmp eq i64 %call163, 0, !dbg !16802
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !16803

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !16804, !ctir !958
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !16806
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16807
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !16807, !ctir !965
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !16808, !ctir !959
  store i64 0, i64* %tv_usec169, align 8, !dbg !16809, !ctir !964
  br label %if.end170, !dbg !16810

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16811
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !16811
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !16813

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !16814
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !16814
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #10, !dbg !16814
  br label %if.end174, !dbg !16814

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !16815

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !16816

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !16817
  br label %return, !dbg !16817

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !16818
  %tobool179 = icmp ne i8* %101, null, !dbg !16818
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !16820

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !16821
  br label %return, !dbg !16821

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !16823
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !16824
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #10, !dbg !16825
  store i32 %call182, i32* %retval, align 4, !dbg !16826
  br label %return, !dbg !16826

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !16827
  ret i32 %104, !dbg !16827
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !16828 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !7
  %utime_omit_count = alloca i32, align 4, !ctir !7
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16831, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16833, metadata !DIExpression()), !dbg !16834
  store i32 0, i32* %result, align 4, !dbg !16834
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !16835, metadata !DIExpression()), !dbg !16836
  store i32 0, i32* %utime_omit_count, align 4, !dbg !16836
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16837
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !16837, !ctir !957
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !16839, !ctir !953
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16839, !ctir !363
  %cmp = icmp ne i64 %1, 1073741823, !dbg !16840
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !16841

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16842
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16842, !ctir !957
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !16843, !ctir !953
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !16843, !ctir !363
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !16844
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !16845

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16846
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !16846, !ctir !957
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !16847, !ctir !953
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !16847, !ctir !363
  %cmp7 = icmp sle i64 0, %5, !dbg !16848
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !16849

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16850
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !16850, !ctir !957
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !16851, !ctir !953
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !16851, !ctir !363
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !16852
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !16853

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16854
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !16854, !ctir !957
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !16855, !ctir !953
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !16855, !ctir !363
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !16856
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !16857

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16858
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !16858, !ctir !957
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !16859, !ctir !953
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !16859, !ctir !363
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !16860
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !16861

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16862
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !16862, !ctir !957
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !16863, !ctir !953
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !16863, !ctir !363
  %cmp22 = icmp sle i64 0, %13, !dbg !16864
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !16865

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16866
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !16866, !ctir !957
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !16867, !ctir !953
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !16867, !ctir !363
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !16868
  br i1 %cmp26, label %if.end, label %if.then, !dbg !16869

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #15, !dbg !16870
  store i32 22, i32* %call, align 4, !dbg !16872, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16873
  br label %return, !dbg !16873

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16874
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !16874, !ctir !957
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !16876, !ctir !953
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !16876, !ctir !363
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !16877
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !16878

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16879
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !16879, !ctir !957
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !16880, !ctir !953
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !16880, !ctir !363
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !16881
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !16882

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16883
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !16883, !ctir !957
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !16885, !ctir !953
  store i64 0, i64* %tv_sec, align 8, !dbg !16886, !ctir !361
  store i32 1, i32* %result, align 4, !dbg !16887
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16888
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !16888, !ctir !957
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !16890, !ctir !953
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !16890, !ctir !363
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !16891
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !16892

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !16893
  %inc = add nsw i32 %23, 1, !dbg !16893
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !16893
  br label %if.end40, !dbg !16894

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !16895

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16896
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !16896, !ctir !957
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !16898, !ctir !953
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !16898, !ctir !363
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !16899
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !16900

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16901
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !16901, !ctir !957
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !16902, !ctir !953
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !16902, !ctir !363
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !16903
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !16904

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16905
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !16905, !ctir !957
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !16907, !ctir !953
  store i64 0, i64* %tv_sec51, align 8, !dbg !16908, !ctir !361
  store i32 1, i32* %result, align 4, !dbg !16909
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16910
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !16910, !ctir !957
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !16912, !ctir !953
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !16912, !ctir !363
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !16913
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !16914

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !16915
  %inc56 = add nsw i32 %31, 1, !dbg !16915
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !16915
  br label %if.end57, !dbg !16916

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !16917

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !16918
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !16919
  %cmp59 = icmp eq i32 %33, 1, !dbg !16920
  %conv = zext i1 %cmp59 to i32, !dbg !16920
  %add = add nsw i32 %32, %conv, !dbg !16921
  store i32 %add, i32* %retval, align 4, !dbg !16922
  br label %return, !dbg !16922

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !16923
  ret i32 %34, !dbg !16923
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !16924 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !957
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !16930, metadata !DIExpression()), !dbg !16931
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !16932, metadata !DIExpression()), !dbg !16933
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !16934, metadata !DIExpression()), !dbg !16935
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !16936
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !16937, !ctir !957
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !16935
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16938
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16938, !ctir !957
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !16940, !ctir !953
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !16940, !ctir !363
  %cmp = icmp eq i64 %3, 1073741822, !dbg !16941
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16942

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16943
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !16943, !ctir !957
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !16944, !ctir !953
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !16944, !ctir !363
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !16945
  br i1 %cmp3, label %if.then, label %if.end, !dbg !16946

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !16947
  br label %return, !dbg !16947

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16948
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !16948, !ctir !957
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !16950, !ctir !953
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !16950, !ctir !363
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !16951
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !16952

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16953
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !16953, !ctir !957
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !16954, !ctir !953
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !16954, !ctir !363
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !16955
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !16956

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !16957
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !16959, !ctir !957
  store i1 false, i1* %retval, align 1, !dbg !16960
  br label %return, !dbg !16960

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16961
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !16961, !ctir !957
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !16963, !ctir !953
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !16963, !ctir !363
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !16964
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !16965

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16966
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !16966, !ctir !957
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !16967
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !16968
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !16968
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !16968
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !16968
  store i64 %17, i64* %16, align 8, !dbg !16968
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !16968
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !16968
  store i64 %19, i64* %18, align 8, !dbg !16968
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !16968
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !16968
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !16968
  br label %if.end24, !dbg !16966

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16969
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !16969, !ctir !957
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !16971, !ctir !953
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !16971, !ctir !363
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !16972
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !16973

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16974
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !16974, !ctir !957
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !16975
  br label %if.end23, !dbg !16975

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16976
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !16976, !ctir !957
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !16978, !ctir !953
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !16978, !ctir !363
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !16979
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !16980

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16981
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !16981, !ctir !957
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !16982
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !16983
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !16983
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !16983
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !16983
  store i64 %31, i64* %30, align 8, !dbg !16983
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !16983
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !16983
  store i64 %33, i64* %32, align 8, !dbg !16983
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !16983
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !16983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !16983
  br label %if.end39, !dbg !16981

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16984
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !16984, !ctir !957
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !16986, !ctir !953
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !16986, !ctir !363
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !16987
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !16988

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !16989
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !16989, !ctir !957
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !16990
  br label %if.end38, !dbg !16990

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !16991
  br label %return, !dbg !16991

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !16992
  ret i1 %39, !dbg !16992
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !16993 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16996, metadata !DIExpression()), !dbg !16997
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16998, metadata !DIExpression()), !dbg !16999
  %0 = load i8*, i8** %file.addr, align 8, !dbg !17000
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17001
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !17002
  ret i32 %call, !dbg !17003
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17004 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !952
  %ts = alloca %struct.timespec*, align 8, !ctir !957
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !16508
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17005, metadata !DIExpression()), !dbg !17006
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17007, metadata !DIExpression()), !dbg !17008
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17009, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17011, metadata !DIExpression()), !dbg !17012
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17013
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17013
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17013

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17014, !ctir !952
  br label %cond.end, !dbg !17013

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17013

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17013
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17012
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17015, metadata !DIExpression()), !dbg !17016
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17016
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17017, metadata !DIExpression()), !dbg !17018
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17019
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17019
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17021

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17022, !ctir !952
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17024
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17024, !ctir !16494
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17024
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17024
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17025, !ctir !952
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17026
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17026, !ctir !16494
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17026
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17026
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17026
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17027
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17028
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17029
  br label %if.end, !dbg !17030

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17031
  %cmp = icmp slt i32 %9, 0, !dbg !17033
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17034

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17035
  br label %return, !dbg !17035

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !17036
  %cmp7 = icmp sle i32 0, %10, !dbg !17038
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !17039

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17040, metadata !DIExpression()), !dbg !17042
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !17043
  %cmp9 = icmp eq i32 %11, 2, !dbg !17045
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !17046

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !17047
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #10, !dbg !17050
  %tobool12 = icmp ne i32 %call11, 0, !dbg !17050
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !17051

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !17052
  br label %return, !dbg !17052

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17053
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17053, !ctir !957
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !17055, !ctir !953
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !17055, !ctir !363
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !17056
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !17057

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17058
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !17058, !ctir !957
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17059
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17059
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !17059
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !17059
  store i64 %18, i64* %17, align 8, !dbg !17059
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !17059
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !17059
  store i64 %20, i64* %19, align 8, !dbg !17059
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !17059
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !17059
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !17059
  br label %if.end28, !dbg !17058

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17060
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !17060, !ctir !957
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17062, !ctir !953
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !17062, !ctir !363
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !17063
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !17064

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17065
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17065, !ctir !957
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17066
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !17066
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !17066
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !17066
  store i64 %28, i64* %27, align 8, !dbg !17066
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !17066
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !17066
  store i64 %30, i64* %29, align 8, !dbg !17066
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !17066
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !17066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !17066
  br label %if.end27, !dbg !17065

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !17067
  %inc = add nsw i32 %33, 1, !dbg !17067
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17067
  br label %if.end29, !dbg !17068

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !17069
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17070
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #10, !dbg !17071
  store i32 %call30, i32* %result, align 4, !dbg !17072
  %36 = load i32, i32* %result, align 4, !dbg !17073
  %cmp31 = icmp slt i32 0, %36, !dbg !17075
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !17076

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #15, !dbg !17077
  store i32 38, i32* %call33, align 4, !dbg !17078, !ctir !7
  br label %if.end34, !dbg !17077

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !17079
  %cmp35 = icmp eq i32 %37, 0, !dbg !17081
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !17082

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #15, !dbg !17083
  %38 = load i32, i32* %call36, align 4, !dbg !17083, !ctir !7
  %cmp37 = icmp ne i32 %38, 38, !dbg !17084
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !17085

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17086
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !17088
  %39 = load i32, i32* %result, align 4, !dbg !17089
  store i32 %39, i32* %retval, align 4, !dbg !17090
  br label %return, !dbg !17090

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !17091

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17092
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !17093
  %tobool41 = icmp ne i32 %40, 0, !dbg !17093
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !17095

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !17096
  %cmp43 = icmp ne i32 %41, 3, !dbg !17099
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !17100

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !17101
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #10, !dbg !17102
  %tobool45 = icmp ne i32 %call44, 0, !dbg !17102
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !17103

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !17104
  br label %return, !dbg !17104

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17105
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !17105
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !17107

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17108
  br i1 %call50, label %if.then51, label %if.end52, !dbg !17109

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !17110
  br label %return, !dbg !17110

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !17111

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !17112
  %tobool54 = icmp ne i32 %44, 0, !dbg !17112
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !17114

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !17115
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #10, !dbg !17116
  %tobool57 = icmp ne i32 %call56, 0, !dbg !17116
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !17117

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !17118
  br label %return, !dbg !17118

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !17119, !ctir !16508
  %46 = load i32, i32* %st_mode, align 8, !dbg !17119, !ctir !168
  %and = and i32 %46, 61440, !dbg !17119
  %cmp60 = icmp eq i32 %and, 40960, !dbg !17119
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !17121

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !17122
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17123
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !17124
  store i32 %call62, i32* %retval, align 4, !dbg !17125
  br label %return, !dbg !17125

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #15, !dbg !17126
  store i32 38, i32* %call64, align 4, !dbg !17127, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17128
  br label %return, !dbg !17128

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !17129
  ret i32 %49, !dbg !17129
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror(i32 %status, i32 %errnum, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !17130 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !17141, metadata !DIExpression()), !dbg !17142
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !17143, metadata !DIExpression()), !dbg !17144
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !17145, metadata !DIExpression()), !dbg !17146
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17147, metadata !DIExpression()), !dbg !17148
  %0 = load i32, i32* %status.addr, align 4, !dbg !17149
  %1 = load i32, i32* %errnum.addr, align 4, !dbg !17150
  %2 = load i8*, i8** %format.addr, align 8, !dbg !17151
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17152
  call void @verror_at_line(i32 %0, i32 %1, i8* null, i32 0, i8* %2, %struct.__va_list_tag* %3), !dbg !17153
  ret void, !dbg !17154
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror_at_line(i32 %status, i32 %errnum, i8* %file, i32 %line_number, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !17155 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %line_number.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %message = alloca i8*, align 8, !ctir !9
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !17158, metadata !DIExpression()), !dbg !17159
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !17160, metadata !DIExpression()), !dbg !17161
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17162, metadata !DIExpression()), !dbg !17163
  store i32 %line_number, i32* %line_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line_number.addr, metadata !17164, metadata !DIExpression()), !dbg !17165
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !17166, metadata !DIExpression()), !dbg !17167
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17168, metadata !DIExpression()), !dbg !17169
  call void @llvm.dbg.declare(metadata i8** %message, metadata !17170, metadata !DIExpression()), !dbg !17171
  %0 = load i8*, i8** %format.addr, align 8, !dbg !17172
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17173
  %call = call i8* @xvasprintf(i8* %0, %struct.__va_list_tag* %1), !dbg !17174
  store i8* %call, i8** %message, align 8, !dbg !17171
  %2 = load i8*, i8** %message, align 8, !dbg !17175
  %tobool = icmp ne i8* %2, null, !dbg !17175
  br i1 %tobool, label %if.then, label %if.else3, !dbg !17177

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !17178
  %tobool1 = icmp ne i8* %3, null, !dbg !17178
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !17181

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %status.addr, align 4, !dbg !17182
  %5 = load i32, i32* %errnum.addr, align 4, !dbg !17183
  %6 = load i8*, i8** %file.addr, align 8, !dbg !17184
  %7 = load i32, i32* %line_number.addr, align 4, !dbg !17185
  %8 = load i8*, i8** %message, align 8, !dbg !17186
  call void (i32, i32, i8*, i32, i8*, ...) @error_at_line(i32 %4, i32 %5, i8* %6, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.372, i64 0, i64 0), i8* %8), !dbg !17187
  br label %if.end, !dbg !17187

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %status.addr, align 4, !dbg !17188
  %10 = load i32, i32* %errnum.addr, align 4, !dbg !17189
  %11 = load i8*, i8** %message, align 8, !dbg !17190
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.372, i64 0, i64 0), i8* %11), !dbg !17191
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !17192

if.else3:                                         ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !17193
  %12 = load i32, i32* %call4, align 4, !dbg !17193, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.373, i64 0, i64 0)) #10, !dbg !17195
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call5), !dbg !17196
  call void @abort() #13, !dbg !17197
  unreachable, !dbg !17197

if.end6:                                          ; preds = %if.end
  %13 = load i8*, i8** %message, align 8, !dbg !17198
  call void @free(i8* %13) #10, !dbg !17199
  ret void, !dbg !17200
}

declare dso_local void @error_at_line(i32, i32, i8*, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !17201 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17205, metadata !DIExpression()), !dbg !17206
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17207, metadata !DIExpression()), !dbg !17208
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17209, metadata !DIExpression()), !dbg !17210
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17211, metadata !DIExpression()), !dbg !17212
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17213, metadata !DIExpression()), !dbg !17214
  store i64 %n_authors, i64* %n_authors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !17215, metadata !DIExpression()), !dbg !17216
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !17217
  %tobool = icmp ne i8* %0, null, !dbg !17217
  br i1 %tobool, label %if.then, label %if.else, !dbg !17219

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17220
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !17221
  %3 = load i8*, i8** %package.addr, align 8, !dbg !17222
  %4 = load i8*, i8** %version.addr, align 8, !dbg !17223
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.374, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !17224
  br label %if.end, !dbg !17224

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17225
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17226
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17227
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.375, i64 0, i64 0), i8* %6, i8* %7), !dbg !17228
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17229
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.376, i64 0, i64 0)) #10, !dbg !17230
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !17231
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.3.377, i64 0, i64 0)) #10, !dbg !17232
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17232
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %9), !dbg !17232
  %10 = load i64, i64* %n_authors.addr, align 8, !dbg !17233
  switch i64 %10, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb6
    i64 2, label %sw.bb9
    i64 3, label %sw.bb14
    i64 4, label %sw.bb20
    i64 5, label %sw.bb27
    i64 6, label %sw.bb35
    i64 7, label %sw.bb44
    i64 8, label %sw.bb54
    i64 9, label %sw.bb65
  ], !dbg !17234

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !17235

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17237
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.378, i64 0, i64 0)) #10, !dbg !17238
  %12 = load i8**, i8*** %authors.addr, align 8, !dbg !17239
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !17239, !ctir !993
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !17239
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call7, i8* %13), !dbg !17240
  br label %sw.epilog, !dbg !17241

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17242
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.379, i64 0, i64 0)) #10, !dbg !17243
  %15 = load i8**, i8*** %authors.addr, align 8, !dbg !17244
  %arrayidx11 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !17244, !ctir !993
  %16 = load i8*, i8** %arrayidx11, align 8, !dbg !17244
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !17245
  %arrayidx12 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !17245, !ctir !993
  %18 = load i8*, i8** %arrayidx12, align 8, !dbg !17245
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %call10, i8* %16, i8* %18), !dbg !17246
  br label %sw.epilog, !dbg !17247

sw.bb14:                                          ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17248
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.380, i64 0, i64 0)) #10, !dbg !17249
  %20 = load i8**, i8*** %authors.addr, align 8, !dbg !17250
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 0, !dbg !17250, !ctir !993
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !17250
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !17251
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 1, !dbg !17251, !ctir !993
  %23 = load i8*, i8** %arrayidx17, align 8, !dbg !17251
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !17252
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !17252, !ctir !993
  %25 = load i8*, i8** %arrayidx18, align 8, !dbg !17252
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %call15, i8* %21, i8* %23, i8* %25), !dbg !17253
  br label %sw.epilog, !dbg !17254

sw.bb20:                                          ; preds = %if.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17255
  %call21 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.381, i64 0, i64 0)) #10, !dbg !17256
  %27 = load i8**, i8*** %authors.addr, align 8, !dbg !17257
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !17257, !ctir !993
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !17257
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !17258
  %arrayidx23 = getelementptr inbounds i8*, i8** %29, i64 1, !dbg !17258, !ctir !993
  %30 = load i8*, i8** %arrayidx23, align 8, !dbg !17258
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !17259
  %arrayidx24 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !17259, !ctir !993
  %32 = load i8*, i8** %arrayidx24, align 8, !dbg !17259
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !17260
  %arrayidx25 = getelementptr inbounds i8*, i8** %33, i64 3, !dbg !17260, !ctir !993
  %34 = load i8*, i8** %arrayidx25, align 8, !dbg !17260
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call21, i8* %28, i8* %30, i8* %32, i8* %34), !dbg !17261
  br label %sw.epilog, !dbg !17262

sw.bb27:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17263
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.382, i64 0, i64 0)) #10, !dbg !17264
  %36 = load i8**, i8*** %authors.addr, align 8, !dbg !17265
  %arrayidx29 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !17265, !ctir !993
  %37 = load i8*, i8** %arrayidx29, align 8, !dbg !17265
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !17266
  %arrayidx30 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !17266, !ctir !993
  %39 = load i8*, i8** %arrayidx30, align 8, !dbg !17266
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !17267
  %arrayidx31 = getelementptr inbounds i8*, i8** %40, i64 2, !dbg !17267, !ctir !993
  %41 = load i8*, i8** %arrayidx31, align 8, !dbg !17267
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !17268
  %arrayidx32 = getelementptr inbounds i8*, i8** %42, i64 3, !dbg !17268, !ctir !993
  %43 = load i8*, i8** %arrayidx32, align 8, !dbg !17268
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !17269
  %arrayidx33 = getelementptr inbounds i8*, i8** %44, i64 4, !dbg !17269, !ctir !993
  %45 = load i8*, i8** %arrayidx33, align 8, !dbg !17269
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %call28, i8* %37, i8* %39, i8* %41, i8* %43, i8* %45), !dbg !17270
  br label %sw.epilog, !dbg !17271

sw.bb35:                                          ; preds = %if.end
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17272
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.383, i64 0, i64 0)) #10, !dbg !17273
  %47 = load i8**, i8*** %authors.addr, align 8, !dbg !17274
  %arrayidx37 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !17274, !ctir !993
  %48 = load i8*, i8** %arrayidx37, align 8, !dbg !17274
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !17275
  %arrayidx38 = getelementptr inbounds i8*, i8** %49, i64 1, !dbg !17275, !ctir !993
  %50 = load i8*, i8** %arrayidx38, align 8, !dbg !17275
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !17276
  %arrayidx39 = getelementptr inbounds i8*, i8** %51, i64 2, !dbg !17276, !ctir !993
  %52 = load i8*, i8** %arrayidx39, align 8, !dbg !17276
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !17277
  %arrayidx40 = getelementptr inbounds i8*, i8** %53, i64 3, !dbg !17277, !ctir !993
  %54 = load i8*, i8** %arrayidx40, align 8, !dbg !17277
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !17278
  %arrayidx41 = getelementptr inbounds i8*, i8** %55, i64 4, !dbg !17278, !ctir !993
  %56 = load i8*, i8** %arrayidx41, align 8, !dbg !17278
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !17279
  %arrayidx42 = getelementptr inbounds i8*, i8** %57, i64 5, !dbg !17279, !ctir !993
  %58 = load i8*, i8** %arrayidx42, align 8, !dbg !17279
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %call36, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58), !dbg !17280
  br label %sw.epilog, !dbg !17281

sw.bb44:                                          ; preds = %if.end
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17282
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.384, i64 0, i64 0)) #10, !dbg !17283
  %60 = load i8**, i8*** %authors.addr, align 8, !dbg !17284
  %arrayidx46 = getelementptr inbounds i8*, i8** %60, i64 0, !dbg !17284, !ctir !993
  %61 = load i8*, i8** %arrayidx46, align 8, !dbg !17284
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !17285
  %arrayidx47 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !17285, !ctir !993
  %63 = load i8*, i8** %arrayidx47, align 8, !dbg !17285
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !17286
  %arrayidx48 = getelementptr inbounds i8*, i8** %64, i64 2, !dbg !17286, !ctir !993
  %65 = load i8*, i8** %arrayidx48, align 8, !dbg !17286
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !17287
  %arrayidx49 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !17287, !ctir !993
  %67 = load i8*, i8** %arrayidx49, align 8, !dbg !17287
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !17288
  %arrayidx50 = getelementptr inbounds i8*, i8** %68, i64 4, !dbg !17288, !ctir !993
  %69 = load i8*, i8** %arrayidx50, align 8, !dbg !17288
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !17289
  %arrayidx51 = getelementptr inbounds i8*, i8** %70, i64 5, !dbg !17289, !ctir !993
  %71 = load i8*, i8** %arrayidx51, align 8, !dbg !17289
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !17290
  %arrayidx52 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !17290, !ctir !993
  %73 = load i8*, i8** %arrayidx52, align 8, !dbg !17290
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %call45, i8* %61, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73), !dbg !17291
  br label %sw.epilog, !dbg !17292

sw.bb54:                                          ; preds = %if.end
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17293
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.385, i64 0, i64 0)) #10, !dbg !17294
  %75 = load i8**, i8*** %authors.addr, align 8, !dbg !17295
  %arrayidx56 = getelementptr inbounds i8*, i8** %75, i64 0, !dbg !17295, !ctir !993
  %76 = load i8*, i8** %arrayidx56, align 8, !dbg !17295
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !17296
  %arrayidx57 = getelementptr inbounds i8*, i8** %77, i64 1, !dbg !17296, !ctir !993
  %78 = load i8*, i8** %arrayidx57, align 8, !dbg !17296
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !17297
  %arrayidx58 = getelementptr inbounds i8*, i8** %79, i64 2, !dbg !17297, !ctir !993
  %80 = load i8*, i8** %arrayidx58, align 8, !dbg !17297
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !17298
  %arrayidx59 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !17298, !ctir !993
  %82 = load i8*, i8** %arrayidx59, align 8, !dbg !17298
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !17299
  %arrayidx60 = getelementptr inbounds i8*, i8** %83, i64 4, !dbg !17299, !ctir !993
  %84 = load i8*, i8** %arrayidx60, align 8, !dbg !17299
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !17300
  %arrayidx61 = getelementptr inbounds i8*, i8** %85, i64 5, !dbg !17300, !ctir !993
  %86 = load i8*, i8** %arrayidx61, align 8, !dbg !17300
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !17301
  %arrayidx62 = getelementptr inbounds i8*, i8** %87, i64 6, !dbg !17301, !ctir !993
  %88 = load i8*, i8** %arrayidx62, align 8, !dbg !17301
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !17302
  %arrayidx63 = getelementptr inbounds i8*, i8** %89, i64 7, !dbg !17302, !ctir !993
  %90 = load i8*, i8** %arrayidx63, align 8, !dbg !17302
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* %call55, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90), !dbg !17303
  br label %sw.epilog, !dbg !17304

sw.bb65:                                          ; preds = %if.end
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17305
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.386, i64 0, i64 0)) #10, !dbg !17306
  %92 = load i8**, i8*** %authors.addr, align 8, !dbg !17307
  %arrayidx67 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !17307, !ctir !993
  %93 = load i8*, i8** %arrayidx67, align 8, !dbg !17307
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !17308
  %arrayidx68 = getelementptr inbounds i8*, i8** %94, i64 1, !dbg !17308, !ctir !993
  %95 = load i8*, i8** %arrayidx68, align 8, !dbg !17308
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !17309
  %arrayidx69 = getelementptr inbounds i8*, i8** %96, i64 2, !dbg !17309, !ctir !993
  %97 = load i8*, i8** %arrayidx69, align 8, !dbg !17309
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !17310
  %arrayidx70 = getelementptr inbounds i8*, i8** %98, i64 3, !dbg !17310, !ctir !993
  %99 = load i8*, i8** %arrayidx70, align 8, !dbg !17310
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !17311
  %arrayidx71 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !17311, !ctir !993
  %101 = load i8*, i8** %arrayidx71, align 8, !dbg !17311
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !17312
  %arrayidx72 = getelementptr inbounds i8*, i8** %102, i64 5, !dbg !17312, !ctir !993
  %103 = load i8*, i8** %arrayidx72, align 8, !dbg !17312
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !17313
  %arrayidx73 = getelementptr inbounds i8*, i8** %104, i64 6, !dbg !17313, !ctir !993
  %105 = load i8*, i8** %arrayidx73, align 8, !dbg !17313
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !17314
  %arrayidx74 = getelementptr inbounds i8*, i8** %106, i64 7, !dbg !17314, !ctir !993
  %107 = load i8*, i8** %arrayidx74, align 8, !dbg !17314
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !17315
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 8, !dbg !17315, !ctir !993
  %109 = load i8*, i8** %arrayidx75, align 8, !dbg !17315
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %call66, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109), !dbg !17316
  br label %sw.epilog, !dbg !17317

sw.default:                                       ; preds = %if.end
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17318
  %call77 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.387, i64 0, i64 0)) #10, !dbg !17319
  %111 = load i8**, i8*** %authors.addr, align 8, !dbg !17320
  %arrayidx78 = getelementptr inbounds i8*, i8** %111, i64 0, !dbg !17320, !ctir !993
  %112 = load i8*, i8** %arrayidx78, align 8, !dbg !17320
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !17321
  %arrayidx79 = getelementptr inbounds i8*, i8** %113, i64 1, !dbg !17321, !ctir !993
  %114 = load i8*, i8** %arrayidx79, align 8, !dbg !17321
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !17322
  %arrayidx80 = getelementptr inbounds i8*, i8** %115, i64 2, !dbg !17322, !ctir !993
  %116 = load i8*, i8** %arrayidx80, align 8, !dbg !17322
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !17323
  %arrayidx81 = getelementptr inbounds i8*, i8** %117, i64 3, !dbg !17323, !ctir !993
  %118 = load i8*, i8** %arrayidx81, align 8, !dbg !17323
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !17324
  %arrayidx82 = getelementptr inbounds i8*, i8** %119, i64 4, !dbg !17324, !ctir !993
  %120 = load i8*, i8** %arrayidx82, align 8, !dbg !17324
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !17325
  %arrayidx83 = getelementptr inbounds i8*, i8** %121, i64 5, !dbg !17325, !ctir !993
  %122 = load i8*, i8** %arrayidx83, align 8, !dbg !17325
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !17326
  %arrayidx84 = getelementptr inbounds i8*, i8** %123, i64 6, !dbg !17326, !ctir !993
  %124 = load i8*, i8** %arrayidx84, align 8, !dbg !17326
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !17327
  %arrayidx85 = getelementptr inbounds i8*, i8** %125, i64 7, !dbg !17327, !ctir !993
  %126 = load i8*, i8** %arrayidx85, align 8, !dbg !17327
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !17328
  %arrayidx86 = getelementptr inbounds i8*, i8** %127, i64 8, !dbg !17328, !ctir !993
  %128 = load i8*, i8** %arrayidx86, align 8, !dbg !17328
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %call77, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128), !dbg !17329
  br label %sw.epilog, !dbg !17330

sw.epilog:                                        ; preds = %sw.default, %sw.bb65, %sw.bb54, %sw.bb44, %sw.bb35, %sw.bb27, %sw.bb20, %sw.bb14, %sw.bb9, %sw.bb6, %sw.bb
  ret void, !dbg !17331
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !17332 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17335, metadata !DIExpression()), !dbg !17336
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17337, metadata !DIExpression()), !dbg !17338
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17339, metadata !DIExpression()), !dbg !17340
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17341, metadata !DIExpression()), !dbg !17342
  store i8** %authors, i8*** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17343, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17345, metadata !DIExpression()), !dbg !17346
  store i64 0, i64* %n_authors, align 8, !dbg !17347
  br label %for.cond, !dbg !17349

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !17350
  %1 = load i64, i64* %n_authors, align 8, !dbg !17352
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !17350, !ctir !993
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !17350
  %tobool = icmp ne i8* %2, null, !dbg !17353
  br i1 %tobool, label %for.body, label %for.end, !dbg !17353

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17353

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !17354
  %inc = add i64 %3, 1, !dbg !17354
  store i64 %inc, i64* %n_authors, align 8, !dbg !17354
  br label %for.cond, !dbg !17355, !llvm.loop !17356

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17358
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !17359
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17360
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17361
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !17362
  %9 = load i64, i64* %n_authors, align 8, !dbg !17363
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !17364
  ret void, !dbg !17365
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !17366 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  %authtab = alloca [10 x i8*], align 16, !ctir !1409
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17370, metadata !DIExpression()), !dbg !17371
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17372, metadata !DIExpression()), !dbg !17373
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17374, metadata !DIExpression()), !dbg !17375
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17376, metadata !DIExpression()), !dbg !17377
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !17378, metadata !DIExpression()), !dbg !17379
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17380, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !17382, metadata !DIExpression()), !dbg !17383
  store i64 0, i64* %n_authors, align 8, !dbg !17384
  br label %for.cond, !dbg !17386

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !17387
  %cmp = icmp ult i64 %0, 10, !dbg !17389
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17390

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !17391
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !17391
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !17391
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17391
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17391

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !17391
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !17391
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17391
  %4 = bitcast i8* %3 to i8**, !dbg !17391
  %5 = add i32 %gp_offset, 8, !dbg !17391
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !17391
  br label %vaarg.end, !dbg !17391

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !17391
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17391
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !17391
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17391
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17391
  br label %vaarg.end, !dbg !17391

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !17391
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !17391
  %8 = load i64, i64* %n_authors, align 8, !dbg !17392
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !17393, !ctir !1409
  store i8* %7, i8** %arrayidx, align 8, !dbg !17394
  %cmp1 = icmp ne i8* %7, null, !dbg !17395
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !17396
  br i1 %9, label %for.body, label %for.end, !dbg !17397

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !17397

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !17398
  %inc = add i64 %10, 1, !dbg !17398
  store i64 %inc, i64* %n_authors, align 8, !dbg !17398
  br label %for.cond, !dbg !17399, !llvm.loop !17400

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17402
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !17403
  %13 = load i8*, i8** %package.addr, align 8, !dbg !17404
  %14 = load i8*, i8** %version.addr, align 8, !dbg !17405
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !17406, !ctir !1409
  %15 = load i64, i64* %n_authors, align 8, !dbg !17407
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !17408
  ret void, !dbg !17409
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !17410 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1410
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17413, metadata !DIExpression()), !dbg !17414
  store i8* %command_name, i8** %command_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17415, metadata !DIExpression()), !dbg !17416
  store i8* %package, i8** %package.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17417, metadata !DIExpression()), !dbg !17418
  store i8* %version, i8** %version.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17419, metadata !DIExpression()), !dbg !17420
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !17421, metadata !DIExpression()), !dbg !17422
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17423, !ctir !1410
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17423
  call void @llvm.va_start(i8* %arraydecay1), !dbg !17423
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17424
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !17425
  %2 = load i8*, i8** %package.addr, align 8, !dbg !17426
  %3 = load i8*, i8** %version.addr, align 8, !dbg !17427
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17428, !ctir !1410
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !17429
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17430, !ctir !1410
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17430
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17430
  ret void, !dbg !17431
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !17432 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.390, i64 0, i64 0)) #10, !dbg !17433
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.391, i64 0, i64 0)), !dbg !17434
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.392, i64 0, i64 0)) #10, !dbg !17435
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.393, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.394, i64 0, i64 0)), !dbg !17436
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.19.395, i64 0, i64 0)) #10, !dbg !17437
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !17437
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %0), !dbg !17437
  ret void, !dbg !17438
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !979 {
entry:
  %can = alloca i8, align 1, !ctir !142
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !17439
  %tobool = trunc i8 %0 to i1, !dbg !17439
  br i1 %tobool, label %if.end, label %if.then, !dbg !17441

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !17442, metadata !DIExpression()), !dbg !17444
  store i8 0, i8* %can, align 1, !dbg !17444
  %call = call i32 @geteuid() #10, !dbg !17445
  %cmp = icmp eq i32 %call, 0, !dbg !17446
  %frombool = zext i1 %cmp to i8, !dbg !17447
  store i8 %frombool, i8* %can, align 1, !dbg !17447
  %1 = load i8, i8* %can, align 1, !dbg !17448
  %tobool1 = trunc i8 %1 to i1, !dbg !17448
  %frombool2 = zext i1 %tobool1 to i8, !dbg !17449
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !17449
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !17450
  br label %if.end, !dbg !17451

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !17452
  %tobool3 = trunc i8 %2 to i1, !dbg !17452
  ret i1 %tobool3, !dbg !17453
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !17454 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17458, metadata !DIExpression()), !dbg !17459
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17460, metadata !DIExpression()), !dbg !17461
  %0 = load i64, i64* %s.addr, align 8, !dbg !17462
  %div = udiv i64 9223372036854775807, %0, !dbg !17462
  %1 = load i64, i64* %n.addr, align 8, !dbg !17462
  %cmp = icmp ult i64 %div, %1, !dbg !17462
  br i1 %cmp, label %if.then, label %if.end, !dbg !17464

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17465
  unreachable, !dbg !17465

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17466
  %3 = load i64, i64* %s.addr, align 8, !dbg !17467
  %mul = mul i64 %2, %3, !dbg !17468
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !17469
  ret i8* %call, !dbg !17470
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !17471 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17475, metadata !DIExpression()), !dbg !17476
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17477, metadata !DIExpression()), !dbg !17478
  %0 = load i64, i64* %n.addr, align 8, !dbg !17479
  %call = call noalias i8* @malloc(i64 %0) #10, !dbg !17480
  store i8* %call, i8** %p, align 8, !dbg !17478
  %1 = load i8*, i8** %p, align 8, !dbg !17481
  %tobool = icmp ne i8* %1, null, !dbg !17481
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17483

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17484
  %cmp = icmp ne i64 %2, 0, !dbg !17485
  br i1 %cmp, label %if.then, label %if.end, !dbg !17486

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #16, !dbg !17487
  unreachable, !dbg !17487

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !17488
  ret i8* %3, !dbg !17489
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !17490 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17493, metadata !DIExpression()), !dbg !17494
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17495, metadata !DIExpression()), !dbg !17496
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17497, metadata !DIExpression()), !dbg !17498
  %0 = load i64, i64* %s.addr, align 8, !dbg !17499
  %div = udiv i64 9223372036854775807, %0, !dbg !17499
  %1 = load i64, i64* %n.addr, align 8, !dbg !17499
  %cmp = icmp ult i64 %div, %1, !dbg !17499
  br i1 %cmp, label %if.then, label %if.end, !dbg !17501

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17502
  unreachable, !dbg !17502

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17503
  %3 = load i64, i64* %n.addr, align 8, !dbg !17504
  %4 = load i64, i64* %s.addr, align 8, !dbg !17505
  %mul = mul i64 %3, %4, !dbg !17506
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !17507
  ret i8* %call, !dbg !17508
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !17509 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17512, metadata !DIExpression()), !dbg !17513
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17514, metadata !DIExpression()), !dbg !17515
  %0 = load i64, i64* %n.addr, align 8, !dbg !17516
  %tobool = icmp ne i64 %0, 0, !dbg !17516
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17518

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17519
  %tobool1 = icmp ne i8* %1, null, !dbg !17519
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17520

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17521
  call void @free(i8* %2) #10, !dbg !17523
  store i8* null, i8** %retval, align 8, !dbg !17524
  br label %return, !dbg !17524

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !17525
  %4 = load i64, i64* %n.addr, align 8, !dbg !17526
  %call = call i8* @realloc(i8* %3, i64 %4) #10, !dbg !17527
  store i8* %call, i8** %p.addr, align 8, !dbg !17528
  %5 = load i8*, i8** %p.addr, align 8, !dbg !17529
  %tobool2 = icmp ne i8* %5, null, !dbg !17529
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !17531

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !17532
  %tobool4 = icmp ne i64 %6, 0, !dbg !17532
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17533

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #16, !dbg !17534
  unreachable, !dbg !17534

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !17535
  store i8* %7, i8** %retval, align 8, !dbg !17536
  br label %return, !dbg !17536

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !17537
  ret i8* %8, !dbg !17537
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !17538 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17541, metadata !DIExpression()), !dbg !17542
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17543, metadata !DIExpression()), !dbg !17544
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17545, metadata !DIExpression()), !dbg !17546
  call void @llvm.dbg.declare(metadata i64* %n, metadata !17547, metadata !DIExpression()), !dbg !17548
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !17549
  %1 = load i64, i64* %0, align 8, !dbg !17550, !ctir !55
  store i64 %1, i64* %n, align 8, !dbg !17548
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17551
  %tobool = icmp ne i8* %2, null, !dbg !17551
  br i1 %tobool, label %if.else, label %if.then, !dbg !17553

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !17554
  %tobool1 = icmp ne i64 %3, 0, !dbg !17554
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !17557

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !17558
  %div = udiv i64 128, %4, !dbg !17560
  store i64 %div, i64* %n, align 8, !dbg !17561
  %5 = load i64, i64* %n, align 8, !dbg !17562
  %tobool3 = icmp ne i64 %5, 0, !dbg !17563
  %lnot = xor i1 %tobool3, true, !dbg !17563
  %lnot.ext = zext i1 %lnot to i32, !dbg !17563
  %conv = sext i32 %lnot.ext to i64, !dbg !17563
  %6 = load i64, i64* %n, align 8, !dbg !17564
  %add = add i64 %6, %conv, !dbg !17564
  store i64 %add, i64* %n, align 8, !dbg !17564
  br label %if.end, !dbg !17565

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !17566
  %div4 = udiv i64 9223372036854775807, %7, !dbg !17566
  %8 = load i64, i64* %n, align 8, !dbg !17566
  %cmp = icmp ult i64 %div4, %8, !dbg !17566
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !17568

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !17569
  unreachable, !dbg !17569

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !17570

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !17571
  %div8 = udiv i64 6148914691236517204, %9, !dbg !17574
  %10 = load i64, i64* %n, align 8, !dbg !17575
  %cmp9 = icmp ule i64 %div8, %10, !dbg !17576
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17577

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #16, !dbg !17578
  unreachable, !dbg !17578

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !17579
  %div13 = udiv i64 %11, 2, !dbg !17580
  %add14 = add i64 %div13, 1, !dbg !17581
  %12 = load i64, i64* %n, align 8, !dbg !17582
  %add15 = add i64 %12, %add14, !dbg !17582
  store i64 %add15, i64* %n, align 8, !dbg !17582
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !17583
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !17584
  store i64 %13, i64* %14, align 8, !dbg !17585, !ctir !55
  %15 = load i8*, i8** %p.addr, align 8, !dbg !17586
  %16 = load i64, i64* %n, align 8, !dbg !17587
  %17 = load i64, i64* %s.addr, align 8, !dbg !17588
  %mul = mul i64 %16, %17, !dbg !17589
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !17590
  ret i8* %call, !dbg !17591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !17592 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17595, metadata !DIExpression()), !dbg !17596
  %0 = load i64, i64* %n.addr, align 8, !dbg !17597
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17597
  ret i8* %call, !dbg !17598
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !17599 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17602, metadata !DIExpression()), !dbg !17603
  store i64* %pn, i64** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17604, metadata !DIExpression()), !dbg !17605
  %0 = load i8*, i8** %p.addr, align 8, !dbg !17606
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !17607
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !17608
  ret i8* %call, !dbg !17609
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !17610 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17611, metadata !DIExpression()), !dbg !17612
  %0 = load i64, i64* %s.addr, align 8, !dbg !17613
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17614
  %1 = load i64, i64* %s.addr, align 8, !dbg !17615
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !17616
  ret i8* %call, !dbg !17617
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !17618 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17619, metadata !DIExpression()), !dbg !17620
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17621, metadata !DIExpression()), !dbg !17622
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17623, metadata !DIExpression()), !dbg !17624
  %0 = load i64, i64* %s.addr, align 8, !dbg !17625
  %div = udiv i64 9223372036854775807, %0, !dbg !17625
  %1 = load i64, i64* %n.addr, align 8, !dbg !17625
  %cmp = icmp ult i64 %div, %1, !dbg !17625
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17627

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17628
  %3 = load i64, i64* %s.addr, align 8, !dbg !17629
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #10, !dbg !17630
  store i8* %call, i8** %p, align 8, !dbg !17631
  %tobool = icmp ne i8* %call, null, !dbg !17631
  br i1 %tobool, label %if.end, label %if.then, !dbg !17632

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #16, !dbg !17633
  unreachable, !dbg !17633

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !17634
  ret i8* %4, !dbg !17635
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !17636 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17637, metadata !DIExpression()), !dbg !17638
  store i64 %s, i64* %s.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17639, metadata !DIExpression()), !dbg !17640
  %0 = load i64, i64* %s.addr, align 8, !dbg !17641
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17642
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17643
  %2 = load i64, i64* %s.addr, align 8, !dbg !17644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !17645
  ret i8* %call, !dbg !17646
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !17647 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !17648, metadata !DIExpression()), !dbg !17649
  %0 = load i8*, i8** %string.addr, align 8, !dbg !17650
  %1 = load i8*, i8** %string.addr, align 8, !dbg !17651
  %call = call i64 @strlen(i8* %1) #14, !dbg !17652
  %add = add i64 %call, 1, !dbg !17653
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !17654
  ret i8* %call1, !dbg !17655
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !17656 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !17658
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.416, i64 0, i64 0)) #10, !dbg !17659
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.417, i64 0, i64 0), i8* %call), !dbg !17660
  call void @abort() #13, !dbg !17661
  unreachable, !dbg !17661
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @xfts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !17662 {
entry:
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %fts = alloca %struct.FTS*, align 8, !ctir !1466
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !17671, metadata !DIExpression()), !dbg !17672
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17673, metadata !DIExpression()), !dbg !17674
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !17675, metadata !DIExpression()), !dbg !17676
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !17677, metadata !DIExpression()), !dbg !17678
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !17679
  %1 = load i32, i32* %options.addr, align 4, !dbg !17680
  %or = or i32 %1, 512, !dbg !17681
  %2 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !17682
  %call = call %struct.FTS* @rpl_fts_open(i8** %0, i32 %or, i32 (%struct._ftsent**, %struct._ftsent**)* %2), !dbg !17683
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !17678
  %3 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !17684
  %cmp = icmp eq %struct.FTS* %3, null, !dbg !17686
  br i1 %cmp, label %if.then, label %if.end4, !dbg !17687

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !17688
  %4 = load i32, i32* %call1, align 4, !dbg !17688, !ctir !7
  %cmp2 = icmp ne i32 %4, 22, !dbg !17688
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !17692

if.then3:                                         ; preds = %if.then
  br label %if.end, !dbg !17692

if.else:                                          ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.420, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.421, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i64 0, i64 0)) #13, !dbg !17688
  unreachable, !dbg !17688

if.end:                                           ; preds = %if.then3
  call void @xalloc_die() #16, !dbg !17693
  unreachable, !dbg !17693

if.end4:                                          ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !17694
  ret %struct.FTS* %5, !dbg !17695
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @cycle_warning_required(%struct.FTS* %fts, %struct._ftsent* %ent) #9 !dbg !17696 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !17700, metadata !DIExpression()), !dbg !17701
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !17702, metadata !DIExpression()), !dbg !17703
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17704
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !17704, !ctir !1551
  %1 = load i32, i32* %fts_options, align 8, !dbg !17704, !ctir !7
  %and = and i32 %1, 16, !dbg !17704
  %tobool = icmp ne i32 %and, 0, !dbg !17704
  br i1 %tobool, label %land.lhs.true, label %lor.rhs, !dbg !17705

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17706
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !17706, !ctir !1551
  %3 = load i32, i32* %fts_options1, align 8, !dbg !17706, !ctir !7
  %and2 = and i32 %3, 1, !dbg !17706
  %tobool3 = icmp ne i32 %and2, 0, !dbg !17706
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !17707

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17708
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !17708, !ctir !1551
  %5 = load i32, i32* %fts_options4, align 8, !dbg !17708, !ctir !7
  %and5 = and i32 %5, 16, !dbg !17708
  %tobool6 = icmp ne i32 %and5, 0, !dbg !17708
  br i1 %tobool6, label %land.lhs.true7, label %land.end, !dbg !17709

land.lhs.true7:                                   ; preds = %lor.rhs
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17710
  %fts_options8 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 10, !dbg !17710, !ctir !1551
  %7 = load i32, i32* %fts_options8, align 8, !dbg !17710, !ctir !7
  %and9 = and i32 %7, 1, !dbg !17710
  %tobool10 = icmp ne i32 %and9, 0, !dbg !17710
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !17711

land.rhs:                                         ; preds = %land.lhs.true7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !17712
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 12, !dbg !17713, !ctir !1552
  %9 = load i64, i64* %fts_level, align 8, !dbg !17713, !ctir !506
  %cmp = icmp ne i64 %9, 0, !dbg !17714
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true7, %lor.rhs
  %10 = phi i1 [ false, %land.lhs.true7 ], [ false, %lor.rhs ], [ %cmp, %land.rhs ], !dbg !17715
  br label %lor.end, !dbg !17707

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %11 = phi i1 [ true, %land.lhs.true ], [ %10, %land.end ]
  ret i1 %11, !dbg !17716
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xvasprintf(i8* %format, %struct.__va_list_tag* %args) #4 !dbg !17717 {
entry:
  %retval = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %argcount = alloca i64, align 8, !ctir !55
  %f = alloca i8*, align 8, !ctir !116
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !17722, metadata !DIExpression()), !dbg !17723
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17724, metadata !DIExpression()), !dbg !17725
  call void @llvm.dbg.declare(metadata i8** %result, metadata !17726, metadata !DIExpression()), !dbg !17727
  call void @llvm.dbg.declare(metadata i64* %argcount, metadata !17728, metadata !DIExpression()), !dbg !17730
  store i64 0, i64* %argcount, align 8, !dbg !17730
  call void @llvm.dbg.declare(metadata i8** %f, metadata !17731, metadata !DIExpression()), !dbg !17732
  %0 = load i8*, i8** %format.addr, align 8, !dbg !17733
  store i8* %0, i8** %f, align 8, !dbg !17735
  br label %for.cond, !dbg !17736

for.cond:                                         ; preds = %if.end11, %entry
  %1 = load i8*, i8** %f, align 8, !dbg !17737
  %2 = load i8, i8* %1, align 1, !dbg !17741, !ctir !117
  %conv = sext i8 %2 to i32, !dbg !17741
  %cmp = icmp eq i32 %conv, 0, !dbg !17742
  br i1 %cmp, label %if.then, label %if.end, !dbg !17743

if.then:                                          ; preds = %for.cond
  %3 = load i64, i64* %argcount, align 8, !dbg !17744
  %4 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17745
  %call = call i8* @xstrcat(i64 %3, %struct.__va_list_tag* %4), !dbg !17746
  store i8* %call, i8** %retval, align 8, !dbg !17747
  br label %return, !dbg !17747

if.end:                                           ; preds = %for.cond
  %5 = load i8*, i8** %f, align 8, !dbg !17748
  %6 = load i8, i8* %5, align 1, !dbg !17750, !ctir !117
  %conv2 = sext i8 %6 to i32, !dbg !17750
  %cmp3 = icmp ne i32 %conv2, 37, !dbg !17751
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !17752

if.then5:                                         ; preds = %if.end
  br label %for.end, !dbg !17753

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %f, align 8, !dbg !17754
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !17754, !ctir !117
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !17754
  %8 = load i8*, i8** %f, align 8, !dbg !17755
  %9 = load i8, i8* %8, align 1, !dbg !17757, !ctir !117
  %conv7 = sext i8 %9 to i32, !dbg !17757
  %cmp8 = icmp ne i32 %conv7, 115, !dbg !17758
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !17759

if.then10:                                        ; preds = %if.end6
  br label %for.end, !dbg !17760

if.end11:                                         ; preds = %if.end6
  %10 = load i8*, i8** %f, align 8, !dbg !17761
  %incdec.ptr12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !17761, !ctir !117
  store i8* %incdec.ptr12, i8** %f, align 8, !dbg !17761
  %11 = load i64, i64* %argcount, align 8, !dbg !17762
  %inc = add i64 %11, 1, !dbg !17762
  store i64 %inc, i64* %argcount, align 8, !dbg !17762
  br label %for.cond, !dbg !17763, !llvm.loop !17764

for.end:                                          ; preds = %if.then10, %if.then5
  %12 = load i8*, i8** %format.addr, align 8, !dbg !17767
  %13 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17769
  %call13 = call i32 @vasprintf(i8** %result, i8* %12, %struct.__va_list_tag* %13) #10, !dbg !17770
  %cmp14 = icmp slt i32 %call13, 0, !dbg !17771
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !17772

if.then16:                                        ; preds = %for.end
  %call17 = call i32* @__errno_location() #15, !dbg !17773
  %14 = load i32, i32* %call17, align 4, !dbg !17773, !ctir !7
  %cmp18 = icmp eq i32 %14, 12, !dbg !17776
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !17777

if.then20:                                        ; preds = %if.then16
  call void @xalloc_die() #16, !dbg !17778
  unreachable, !dbg !17778

if.end21:                                         ; preds = %if.then16
  store i8* null, i8** %retval, align 8, !dbg !17779
  br label %return, !dbg !17779

if.end22:                                         ; preds = %for.end
  %15 = load i8*, i8** %result, align 8, !dbg !17780
  store i8* %15, i8** %retval, align 8, !dbg !17781
  br label %return, !dbg !17781

return:                                           ; preds = %if.end22, %if.end21, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !17782
  ret i8* %16, !dbg !17782
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xstrcat(i64 %argcount, %struct.__va_list_tag* %args) #4 !dbg !17783 {
entry:
  %retval = alloca i8*, align 8
  %argcount.addr = alloca i64, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1557
  %totalsize = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !9
  %next = alloca i8*, align 8, !ctir !116
  %next12 = alloca i8*, align 8, !ctir !116
  %len = alloca i64, align 8, !ctir !55
  store i64 %argcount, i64* %argcount.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %argcount.addr, metadata !17786, metadata !DIExpression()), !dbg !17787
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17788, metadata !DIExpression()), !dbg !17789
  call void @llvm.dbg.declare(metadata i8** %result, metadata !17790, metadata !DIExpression()), !dbg !17791
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !17792, metadata !DIExpression()), !dbg !17793
  call void @llvm.dbg.declare(metadata i64* %totalsize, metadata !17794, metadata !DIExpression()), !dbg !17795
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17796, metadata !DIExpression()), !dbg !17797
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17798, metadata !DIExpression()), !dbg !17799
  store i64 0, i64* %totalsize, align 8, !dbg !17800
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !17801, !ctir !1557
  %0 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17801
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17801
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !17801
  call void @llvm.va_copy(i8* %1, i8* %2), !dbg !17801
  %3 = load i64, i64* %argcount.addr, align 8, !dbg !17802
  store i64 %3, i64* %i, align 8, !dbg !17804
  br label %for.cond, !dbg !17805

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !17806
  %cmp = icmp ugt i64 %4, 0, !dbg !17808
  br i1 %cmp, label %for.body, label %for.end, !dbg !17809

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %next, metadata !17810, metadata !DIExpression()), !dbg !17812
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !17813, !ctir !1557
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !17813
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !17813
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17813
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17813

vaarg.in_reg:                                     ; preds = %for.body
  %5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !17813
  %reg_save_area = load i8*, i8** %5, align 16, !dbg !17813
  %6 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17813
  %7 = bitcast i8* %6 to i8**, !dbg !17813
  %8 = add i32 %gp_offset, 8, !dbg !17813
  store i32 %8, i32* %gp_offset_p, align 16, !dbg !17813
  br label %vaarg.end, !dbg !17813

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !17813
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17813
  %9 = bitcast i8* %overflow_arg_area to i8**, !dbg !17813
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17813
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17813
  br label %vaarg.end, !dbg !17813

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %7, %vaarg.in_reg ], [ %9, %vaarg.in_mem ], !dbg !17813
  %10 = load i8*, i8** %vaarg.addr, align 8, !dbg !17813
  store i8* %10, i8** %next, align 8, !dbg !17812
  %11 = load i64, i64* %totalsize, align 8, !dbg !17814
  %12 = load i8*, i8** %next, align 8, !dbg !17815
  %call = call i64 @strlen(i8* %12) #14, !dbg !17816
  %call2 = call i64 @xsum(i64 %11, i64 %call) #14, !dbg !17817
  store i64 %call2, i64* %totalsize, align 8, !dbg !17818
  br label %for.inc, !dbg !17819

for.inc:                                          ; preds = %vaarg.end
  %13 = load i64, i64* %i, align 8, !dbg !17820
  %dec = add i64 %13, -1, !dbg !17820
  store i64 %dec, i64* %i, align 8, !dbg !17820
  br label %for.cond, !dbg !17821, !llvm.loop !17822

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !17824, !ctir !1557
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17824
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17824
  %14 = load i64, i64* %totalsize, align 8, !dbg !17825
  %cmp5 = icmp eq i64 %14, -1, !dbg !17827
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !17828

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i64, i64* %totalsize, align 8, !dbg !17829
  %cmp6 = icmp ugt i64 %15, 2147483647, !dbg !17830
  br i1 %cmp6, label %if.then, label %if.end, !dbg !17831

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %call7 = call i32* @__errno_location() #15, !dbg !17832
  store i32 75, i32* %call7, align 4, !dbg !17834, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !17835
  br label %return, !dbg !17835

if.end:                                           ; preds = %lor.lhs.false
  %16 = load i64, i64* %totalsize, align 8, !dbg !17836
  %add = add i64 %16, 1, !dbg !17836
  %call8 = call noalias i8* @xmalloc(i64 %add), !dbg !17836
  store i8* %call8, i8** %result, align 8, !dbg !17837
  %17 = load i8*, i8** %result, align 8, !dbg !17838
  store i8* %17, i8** %p, align 8, !dbg !17839
  %18 = load i64, i64* %argcount.addr, align 8, !dbg !17840
  store i64 %18, i64* %i, align 8, !dbg !17842
  br label %for.cond9, !dbg !17843

for.cond9:                                        ; preds = %for.inc25, %if.end
  %19 = load i64, i64* %i, align 8, !dbg !17844
  %cmp10 = icmp ugt i64 %19, 0, !dbg !17846
  br i1 %cmp10, label %for.body11, label %for.end27, !dbg !17847

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i8** %next12, metadata !17848, metadata !DIExpression()), !dbg !17850
  %20 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17851
  %gp_offset_p13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 0, !dbg !17851
  %gp_offset14 = load i32, i32* %gp_offset_p13, align 8, !dbg !17851
  %fits_in_gp15 = icmp ule i32 %gp_offset14, 40, !dbg !17851
  br i1 %fits_in_gp15, label %vaarg.in_reg16, label %vaarg.in_mem18, !dbg !17851

vaarg.in_reg16:                                   ; preds = %for.body11
  %21 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 3, !dbg !17851
  %reg_save_area17 = load i8*, i8** %21, align 8, !dbg !17851
  %22 = getelementptr i8, i8* %reg_save_area17, i32 %gp_offset14, !dbg !17851
  %23 = bitcast i8* %22 to i8**, !dbg !17851
  %24 = add i32 %gp_offset14, 8, !dbg !17851
  store i32 %24, i32* %gp_offset_p13, align 8, !dbg !17851
  br label %vaarg.end22, !dbg !17851

vaarg.in_mem18:                                   ; preds = %for.body11
  %overflow_arg_area_p19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 2, !dbg !17851
  %overflow_arg_area20 = load i8*, i8** %overflow_arg_area_p19, align 8, !dbg !17851
  %25 = bitcast i8* %overflow_arg_area20 to i8**, !dbg !17851
  %overflow_arg_area.next21 = getelementptr i8, i8* %overflow_arg_area20, i32 8, !dbg !17851
  store i8* %overflow_arg_area.next21, i8** %overflow_arg_area_p19, align 8, !dbg !17851
  br label %vaarg.end22, !dbg !17851

vaarg.end22:                                      ; preds = %vaarg.in_mem18, %vaarg.in_reg16
  %vaarg.addr23 = phi i8** [ %23, %vaarg.in_reg16 ], [ %25, %vaarg.in_mem18 ], !dbg !17851
  %26 = load i8*, i8** %vaarg.addr23, align 8, !dbg !17851
  store i8* %26, i8** %next12, align 8, !dbg !17850
  call void @llvm.dbg.declare(metadata i64* %len, metadata !17852, metadata !DIExpression()), !dbg !17853
  %27 = load i8*, i8** %next12, align 8, !dbg !17854
  %call24 = call i64 @strlen(i8* %27) #14, !dbg !17855
  store i64 %call24, i64* %len, align 8, !dbg !17853
  %28 = load i8*, i8** %p, align 8, !dbg !17856
  %29 = load i8*, i8** %next12, align 8, !dbg !17857
  %30 = load i64, i64* %len, align 8, !dbg !17858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !17859
  %31 = load i64, i64* %len, align 8, !dbg !17860
  %32 = load i8*, i8** %p, align 8, !dbg !17861
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !17861, !ctir !10
  store i8* %add.ptr, i8** %p, align 8, !dbg !17861
  br label %for.inc25, !dbg !17862

for.inc25:                                        ; preds = %vaarg.end22
  %33 = load i64, i64* %i, align 8, !dbg !17863
  %dec26 = add i64 %33, -1, !dbg !17863
  store i64 %dec26, i64* %i, align 8, !dbg !17863
  br label %for.cond9, !dbg !17864, !llvm.loop !17865

for.end27:                                        ; preds = %for.cond9
  %34 = load i8*, i8** %p, align 8, !dbg !17867
  store i8 0, i8* %34, align 1, !dbg !17868, !ctir !10
  %35 = load i8*, i8** %result, align 8, !dbg !17869
  store i8* %35, i8** %retval, align 8, !dbg !17870
  br label %return, !dbg !17870

return:                                           ; preds = %for.end27, %if.then
  %36 = load i8*, i8** %retval, align 8, !dbg !17871
  ret i8* %36, !dbg !17871
}

; Function Attrs: nounwind
declare dso_local i32 @vasprintf(i8**, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !17872 {
entry:
  %yes = alloca i8, align 1, !ctir !142
  %response = alloca i8*, align 8, !ctir !9
  %response_size = alloca i64, align 8, !ctir !55
  %response_len = alloca i64, align 8, !ctir !540
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !17874, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.declare(metadata i8** %response, metadata !17876, metadata !DIExpression()), !dbg !17877
  store i8* null, i8** %response, align 8, !dbg !17877
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !17878, metadata !DIExpression()), !dbg !17879
  store i64 0, i64* %response_size, align 8, !dbg !17879
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !17880, metadata !DIExpression()), !dbg !17881
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !17882
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !17883
  store i64 %call, i64* %response_len, align 8, !dbg !17881
  %1 = load i64, i64* %response_len, align 8, !dbg !17884
  %cmp = icmp sle i64 %1, 0, !dbg !17886
  br i1 %cmp, label %if.then, label %if.else, !dbg !17887

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !17888
  br label %if.end9, !dbg !17889

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !17890
  %3 = load i64, i64* %response_len, align 8, !dbg !17893
  %sub = sub nsw i64 %3, 1, !dbg !17894
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !17890, !ctir !9
  %4 = load i8, i8* %arrayidx, align 1, !dbg !17890
  %conv = sext i8 %4 to i32, !dbg !17890
  %cmp1 = icmp eq i32 %conv, 10, !dbg !17895
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !17896

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !17897
  %6 = load i64, i64* %response_len, align 8, !dbg !17898
  %sub4 = sub nsw i64 %6, 1, !dbg !17899
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !17897, !ctir !9
  store i8 0, i8* %arrayidx5, align 1, !dbg !17900
  br label %if.end, !dbg !17897

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !17901
  %call6 = call i32 @rpmatch(i8* %7) #10, !dbg !17902
  %cmp7 = icmp slt i32 0, %call6, !dbg !17903
  %frombool = zext i1 %cmp7 to i8, !dbg !17904
  store i8 %frombool, i8* %yes, align 1, !dbg !17904
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !17905
  call void @free(i8* %8) #10, !dbg !17906
  %9 = load i8, i8* %yes, align 1, !dbg !17907
  %tobool = trunc i8 %9 to i1, !dbg !17907
  ret i1 %tobool, !dbg !17908
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !17909 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17914, metadata !DIExpression()), !dbg !17915
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17916
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !17918
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17919

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17920
  %call = call i32 @__freading(%struct._IO_FILE* %1) #10, !dbg !17920
  %cmp1 = icmp ne i32 %call, 0, !dbg !17920
  br i1 %cmp1, label %if.end, label %if.then, !dbg !17921

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17922
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !17923
  store i32 %call2, i32* %retval, align 4, !dbg !17924
  br label %return, !dbg !17924

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17925
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !17926
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17927
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !17928
  store i32 %call3, i32* %retval, align 4, !dbg !17929
  br label %return, !dbg !17929

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !17930
  ret i32 %5, !dbg !17930
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !17931 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17934, metadata !DIExpression()), !dbg !17935
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17936
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !17938, !ctir !1607
  %1 = load i32, i32* %_flags, align 8, !dbg !17938, !ctir !7
  %and = and i32 %1, 256, !dbg !17939
  %tobool = icmp ne i32 %and, 0, !dbg !17939
  br i1 %tobool, label %if.then, label %if.end, !dbg !17940

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17941
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !17942
  br label %if.end, !dbg !17942

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17943
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #9 !dbg !17944 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17949, metadata !DIExpression()), !dbg !17950
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17951
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !17953, !ctir !1643
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !17953, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17954
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !17955, !ctir !1643
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !17955, !ctir !9
  %cmp = icmp ugt i8* %1, %3, !dbg !17956
  br i1 %cmp, label %if.then, label %if.end, !dbg !17957

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !17958
  br label %return, !dbg !17958

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17959
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !17960, !ctir !1643
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !17960, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17961
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !17962, !ctir !1643
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !17962, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !17963
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !17963
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17963
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17964
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !17965, !ctir !1643
  %9 = load i32, i32* %_flags, align 8, !dbg !17965, !ctir !7
  %and = and i32 %9, 256, !dbg !17966
  %tobool = icmp ne i32 %and, 0, !dbg !17966
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17964

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17967
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !17968, !ctir !1643
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !17968, !ctir !9
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17969
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !17970, !ctir !1643
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !17970, !ctir !9
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !17971
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !17971
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !17971
  br label %cond.end, !dbg !17964

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !17964

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !17964
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !17972
  store i64 %add, i64* %retval, align 8, !dbg !17973
  br label %return, !dbg !17973

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !17974
  ret i64 %14, !dbg !17974
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !17975 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !295
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17980, metadata !DIExpression()), !dbg !17981
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !17982, metadata !DIExpression()), !dbg !17983
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !17984, metadata !DIExpression()), !dbg !17985
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17986
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !17988, !ctir !1679
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !17988, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17989
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !17990, !ctir !1679
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !17990, !ctir !9
  %cmp = icmp eq i8* %1, %3, !dbg !17991
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !17992

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17993
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !17994, !ctir !1679
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !17994, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17995
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !17996, !ctir !1679
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !17996, !ctir !9
  %cmp1 = icmp eq i8* %5, %7, !dbg !17997
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !17998

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17999
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !18000, !ctir !1679
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !18000, !ctir !9
  %cmp3 = icmp eq i8* %9, null, !dbg !18001
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !18002

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !18003, metadata !DIExpression()), !dbg !18005
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18006
  %call = call i32 @fileno(%struct._IO_FILE* %10) #10, !dbg !18007
  %11 = load i64, i64* %offset.addr, align 8, !dbg !18008
  %12 = load i32, i32* %whence.addr, align 4, !dbg !18009
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #10, !dbg !18010
  store i64 %call4, i64* %pos, align 8, !dbg !18005
  %13 = load i64, i64* %pos, align 8, !dbg !18011
  %cmp5 = icmp eq i64 %13, -1, !dbg !18013
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !18014

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !18015
  br label %return, !dbg !18015

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18017
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !18018, !ctir !1679
  %15 = load i32, i32* %_flags, align 8, !dbg !18019, !ctir !7
  %and = and i32 %15, -17, !dbg !18019
  store i32 %and, i32* %_flags, align 8, !dbg !18019, !ctir !7
  %16 = load i64, i64* %pos, align 8, !dbg !18020
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18021
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !18022, !ctir !1679
  store i64 %16, i64* %_offset, align 8, !dbg !18023, !ctir !44
  store i32 0, i32* %retval, align 4, !dbg !18024
  br label %return, !dbg !18024

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18025
  %19 = load i64, i64* %offset.addr, align 8, !dbg !18026
  %20 = load i32, i32* %whence.addr, align 4, !dbg !18027
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !18028
  store i32 %call8, i32* %retval, align 4, !dbg !18029
  br label %return, !dbg !18029

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !18030
  ret i32 %21, !dbg !18030
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @rpl_fts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !18031 {
entry:
  %retval = alloca %struct.FTS*, align 8
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %sp = alloca %struct.FTS*, align 8, !ctir !1741
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %root = alloca %struct._ftsent*, align 8, !ctir !1819
  %nitems = alloca i64, align 8, !ctir !55
  %parent = alloca %struct._ftsent*, align 8, !ctir !1819
  %tmp = alloca %struct._ftsent*, align 8, !ctir !1819
  %defer_stat = alloca i8, align 1, !ctir !142
  %fd = alloca i32, align 4, !ctir !7
  %maxarglen = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %v = alloca i8*, align 8, !ctir !116
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18037, metadata !DIExpression()), !dbg !18038
  store i32 %options, i32* %options.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !18039, metadata !DIExpression()), !dbg !18040
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !18041, metadata !DIExpression()), !dbg !18042
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !18043, metadata !DIExpression()), !dbg !18044
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18045, metadata !DIExpression()), !dbg !18046
  call void @llvm.dbg.declare(metadata %struct._ftsent** %root, metadata !18047, metadata !DIExpression()), !dbg !18048
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !18049, metadata !DIExpression()), !dbg !18050
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !18051, metadata !DIExpression()), !dbg !18052
  store %struct._ftsent* null, %struct._ftsent** %parent, align 8, !dbg !18052
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !18053, metadata !DIExpression()), !dbg !18054
  store %struct._ftsent* null, %struct._ftsent** %tmp, align 8, !dbg !18054
  call void @llvm.dbg.declare(metadata i8* %defer_stat, metadata !18055, metadata !DIExpression()), !dbg !18056
  %0 = load i32, i32* %options.addr, align 4, !dbg !18057
  %and = and i32 %0, -4096, !dbg !18059
  %tobool = icmp ne i32 %and, 0, !dbg !18059
  br i1 %tobool, label %if.then, label %if.end, !dbg !18060

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #15, !dbg !18061
  store i32 22, i32* %call, align 4, !dbg !18061, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18063
  br label %return, !dbg !18063

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !18064
  %and1 = and i32 %1, 4, !dbg !18066
  %tobool2 = icmp ne i32 %and1, 0, !dbg !18066
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !18067

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %options.addr, align 4, !dbg !18068
  %and3 = and i32 %2, 512, !dbg !18069
  %tobool4 = icmp ne i32 %and3, 0, !dbg !18069
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !18070

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call i32* @__errno_location() #15, !dbg !18071
  store i32 22, i32* %call6, align 4, !dbg !18071, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18073
  br label %return, !dbg !18073

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %3 = load i32, i32* %options.addr, align 4, !dbg !18074
  %and8 = and i32 %3, 18, !dbg !18076
  %tobool9 = icmp ne i32 %and8, 0, !dbg !18076
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !18077

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #15, !dbg !18078
  store i32 22, i32* %call11, align 4, !dbg !18078, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18080
  br label %return, !dbg !18080

if.end12:                                         ; preds = %if.end7
  %call13 = call noalias i8* @malloc(i64 128) #10, !dbg !18081
  %4 = bitcast i8* %call13 to %struct.FTS*, !dbg !18081
  store %struct.FTS* %4, %struct.FTS** %sp, align 8, !dbg !18083
  %cmp = icmp eq %struct.FTS* %4, null, !dbg !18084
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !18085

if.then14:                                        ; preds = %if.end12
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18086
  br label %return, !dbg !18086

if.end15:                                         ; preds = %if.end12
  %5 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18087
  %6 = bitcast %struct.FTS* %5 to i8*, !dbg !18088
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 128, i1 false), !dbg !18088
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18089
  %8 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18090
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 9, !dbg !18091, !ctir !1742
  store i32 (%struct._ftsent**, %struct._ftsent**)* %7, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18092, !ctir !1756
  %9 = load i32, i32* %options.addr, align 4, !dbg !18093
  %10 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18094
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !18095, !ctir !1742
  store i32 %9, i32* %fts_options, align 8, !dbg !18096, !ctir !7
  %11 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18097
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !18097, !ctir !1742
  %12 = load i32, i32* %fts_options16, align 8, !dbg !18097, !ctir !7
  %and17 = and i32 %12, 2, !dbg !18097
  %tobool18 = icmp ne i32 %and17, 0, !dbg !18097
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !18099

if.then19:                                        ; preds = %if.end15
  %13 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18100
  %fts_options20 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 10, !dbg !18100, !ctir !1742
  %14 = load i32, i32* %fts_options20, align 8, !dbg !18100, !ctir !7
  %or = or i32 %14, 4, !dbg !18100
  store i32 %or, i32* %fts_options20, align 8, !dbg !18100, !ctir !7
  %15 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18102
  %fts_options21 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !18102, !ctir !1742
  %16 = load i32, i32* %fts_options21, align 8, !dbg !18102, !ctir !7
  %and22 = and i32 %16, -513, !dbg !18102
  store i32 %and22, i32* %fts_options21, align 8, !dbg !18102, !ctir !7
  br label %if.end23, !dbg !18103

if.end23:                                         ; preds = %if.then19, %if.end15
  %17 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18104
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18105, !ctir !1742
  store i32 -100, i32* %fts_cwd_fd, align 4, !dbg !18106, !ctir !7
  %18 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18107
  %fts_options24 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !18107, !ctir !1742
  %19 = load i32, i32* %fts_options24, align 8, !dbg !18107, !ctir !7
  %and25 = and i32 %19, 512, !dbg !18107
  %tobool26 = icmp ne i32 %and25, 0, !dbg !18107
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !18109

land.lhs.true27:                                  ; preds = %if.end23
  br i1 true, label %if.end34, label %if.then28, !dbg !18110

if.then28:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18111, metadata !DIExpression()), !dbg !18113
  %call29 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0), i32 0), !dbg !18114
  store i32 %call29, i32* %fd, align 4, !dbg !18113
  %20 = load i32, i32* %fd, align 4, !dbg !18115
  %cmp30 = icmp slt i32 %20, 0, !dbg !18117
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !18118

if.then31:                                        ; preds = %if.then28
  br label %if.end33, !dbg !18119

if.else:                                          ; preds = %if.then28
  %21 = load i32, i32* %fd, align 4, !dbg !18121
  %call32 = call i32 @close(i32 %21), !dbg !18123
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then31
  br label %if.end34, !dbg !18124

if.end34:                                         ; preds = %if.end33, %land.lhs.true27, %if.end23
  call void @llvm.dbg.declare(metadata i64* %maxarglen, metadata !18125, metadata !DIExpression()), !dbg !18127
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !18128
  %call35 = call i64 @fts_maxarglen(i8** %22), !dbg !18129
  store i64 %call35, i64* %maxarglen, align 8, !dbg !18127
  %23 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18130
  %24 = load i64, i64* %maxarglen, align 8, !dbg !18132
  %cmp36 = icmp ugt i64 %24, 4096, !dbg !18132
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !18132

cond.true:                                        ; preds = %if.end34
  %25 = load i64, i64* %maxarglen, align 8, !dbg !18132
  br label %cond.end, !dbg !18132

cond.false:                                       ; preds = %if.end34
  br label %cond.end, !dbg !18132

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %25, %cond.true ], [ 4096, %cond.false ], !dbg !18132
  %call37 = call zeroext i1 @fts_palloc(%struct.FTS* %23, i64 %cond), !dbg !18133
  br i1 %call37, label %if.end39, label %if.then38, !dbg !18134

if.then38:                                        ; preds = %cond.end
  br label %mem1, !dbg !18135

if.end39:                                         ; preds = %cond.end
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !18136
  %27 = load i8*, i8** %26, align 8, !dbg !18138, !ctir !1062
  %cmp40 = icmp ne i8* %27, null, !dbg !18139
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !18140

if.then41:                                        ; preds = %if.end39
  %28 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18141
  %call42 = call %struct._ftsent* @fts_alloc(%struct.FTS* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.435, i64 0, i64 0), i64 0), !dbg !18144
  store %struct._ftsent* %call42, %struct._ftsent** %parent, align 8, !dbg !18145
  %cmp43 = icmp eq %struct._ftsent* %call42, null, !dbg !18146
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !18147

if.then44:                                        ; preds = %if.then41
  br label %mem2, !dbg !18148

if.end45:                                         ; preds = %if.then41
  %29 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18149
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 12, !dbg !18150, !ctir !1725
  store i64 -1, i64* %fts_level, align 8, !dbg !18151, !ctir !506
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18152
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 14, !dbg !18153, !ctir !1725
  store i64 -1, i64* %fts_n_dirs_remaining, align 8, !dbg !18154, !ctir !1087
  br label %if.end46, !dbg !18155

if.end46:                                         ; preds = %if.end45, %if.end39
  %31 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18156
  %cmp47 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %31, null, !dbg !18157
  br i1 %cmp47, label %lor.end, label %lor.rhs, !dbg !18158

lor.rhs:                                          ; preds = %if.end46
  %32 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18159
  %fts_options48 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !18159, !ctir !1742
  %33 = load i32, i32* %fts_options48, align 8, !dbg !18159, !ctir !7
  %and49 = and i32 %33, 1024, !dbg !18159
  %tobool50 = icmp ne i32 %and49, 0, !dbg !18158
  br label %lor.end, !dbg !18158

lor.end:                                          ; preds = %lor.rhs, %if.end46
  %34 = phi i1 [ true, %if.end46 ], [ %tobool50, %lor.rhs ]
  %frombool = zext i1 %34 to i8, !dbg !18160
  store i8 %frombool, i8* %defer_stat, align 1, !dbg !18160
  store %struct._ftsent* null, %struct._ftsent** %root, align 8, !dbg !18161
  store i64 0, i64* %nitems, align 8, !dbg !18163
  br label %for.cond, !dbg !18164

for.cond:                                         ; preds = %for.inc, %lor.end
  %35 = load i8**, i8*** %argv.addr, align 8, !dbg !18165
  %36 = load i8*, i8** %35, align 8, !dbg !18167, !ctir !1062
  %cmp51 = icmp ne i8* %36, null, !dbg !18168
  br i1 %cmp51, label %for.body, label %for.end, !dbg !18169

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18170, metadata !DIExpression()), !dbg !18172
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !18173
  %38 = load i8*, i8** %37, align 8, !dbg !18174, !ctir !1062
  %call52 = call i64 @strlen(i8* %38) #14, !dbg !18175
  store i64 %call52, i64* %len, align 8, !dbg !18172
  %39 = load i32, i32* %options.addr, align 4, !dbg !18176
  %and53 = and i32 %39, 2048, !dbg !18178
  %tobool54 = icmp ne i32 %and53, 0, !dbg !18178
  br i1 %tobool54, label %if.end69, label %if.then55, !dbg !18179

if.then55:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %v, metadata !18180, metadata !DIExpression()), !dbg !18182
  %40 = load i8**, i8*** %argv.addr, align 8, !dbg !18183
  %41 = load i8*, i8** %40, align 8, !dbg !18184, !ctir !1062
  store i8* %41, i8** %v, align 8, !dbg !18182
  %42 = load i64, i64* %len, align 8, !dbg !18185
  %cmp56 = icmp ult i64 2, %42, !dbg !18187
  br i1 %cmp56, label %land.lhs.true57, label %if.end68, !dbg !18188

land.lhs.true57:                                  ; preds = %if.then55
  %43 = load i8*, i8** %v, align 8, !dbg !18189
  %44 = load i64, i64* %len, align 8, !dbg !18190
  %sub = sub i64 %44, 1, !dbg !18191
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 %sub, !dbg !18189, !ctir !116
  %45 = load i8, i8* %arrayidx, align 1, !dbg !18189
  %conv = sext i8 %45 to i32, !dbg !18189
  %cmp58 = icmp eq i32 %conv, 47, !dbg !18192
  br i1 %cmp58, label %if.then60, label %if.end68, !dbg !18193

if.then60:                                        ; preds = %land.lhs.true57
  br label %while.cond, !dbg !18194

while.cond:                                       ; preds = %while.body, %if.then60
  %46 = load i64, i64* %len, align 8, !dbg !18195
  %cmp61 = icmp ult i64 1, %46, !dbg !18196
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !18197

land.rhs:                                         ; preds = %while.cond
  %47 = load i8*, i8** %v, align 8, !dbg !18198
  %48 = load i64, i64* %len, align 8, !dbg !18199
  %sub63 = sub i64 %48, 2, !dbg !18200
  %arrayidx64 = getelementptr inbounds i8, i8* %47, i64 %sub63, !dbg !18198, !ctir !116
  %49 = load i8, i8* %arrayidx64, align 1, !dbg !18198
  %conv65 = sext i8 %49 to i32, !dbg !18198
  %cmp66 = icmp eq i32 %conv65, 47, !dbg !18201
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %50 = phi i1 [ false, %while.cond ], [ %cmp66, %land.rhs ], !dbg !18202
  br i1 %50, label %while.body, label %while.end, !dbg !18194

while.body:                                       ; preds = %land.end
  %51 = load i64, i64* %len, align 8, !dbg !18203
  %dec = add i64 %51, -1, !dbg !18203
  store i64 %dec, i64* %len, align 8, !dbg !18203
  br label %while.cond, !dbg !18194, !llvm.loop !18204

while.end:                                        ; preds = %land.end
  br label %if.end68, !dbg !18194

if.end68:                                         ; preds = %while.end, %land.lhs.true57, %if.then55
  br label %if.end69, !dbg !18206

if.end69:                                         ; preds = %if.end68, %for.body
  %52 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18207
  %53 = load i8**, i8*** %argv.addr, align 8, !dbg !18209
  %54 = load i8*, i8** %53, align 8, !dbg !18210, !ctir !1062
  %55 = load i64, i64* %len, align 8, !dbg !18211
  %call70 = call %struct._ftsent* @fts_alloc(%struct.FTS* %52, i8* %54, i64 %55), !dbg !18212
  store %struct._ftsent* %call70, %struct._ftsent** %p, align 8, !dbg !18213
  %cmp71 = icmp eq %struct._ftsent* %call70, null, !dbg !18214
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !18215

if.then73:                                        ; preds = %if.end69
  br label %mem3, !dbg !18216

if.end74:                                         ; preds = %if.end69
  %56 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18217
  %fts_level75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 12, !dbg !18218, !ctir !1725
  store i64 0, i64* %fts_level75, align 8, !dbg !18219, !ctir !506
  %57 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18220
  %58 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18221
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 1, !dbg !18222, !ctir !1725
  store %struct._ftsent* %57, %struct._ftsent** %fts_parent, align 8, !dbg !18223, !ctir !1729
  %59 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18224
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %59, i32 0, i32 19, !dbg !18225, !ctir !1725
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18224, !ctir !1115
  %60 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18226
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 6, !dbg !18227, !ctir !1725
  store i8* %arraydecay, i8** %fts_accpath, align 8, !dbg !18228, !ctir !9
  %61 = load i8, i8* %defer_stat, align 1, !dbg !18229
  %tobool76 = trunc i8 %61 to i1, !dbg !18229
  br i1 %tobool76, label %land.lhs.true78, label %if.else82, !dbg !18231

land.lhs.true78:                                  ; preds = %if.end74
  %62 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18232
  %cmp79 = icmp ne %struct._ftsent* %62, null, !dbg !18233
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !18234

if.then81:                                        ; preds = %land.lhs.true78
  %63 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18235
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 15, !dbg !18237, !ctir !1725
  store i16 11, i16* %fts_info, align 8, !dbg !18238, !ctir !33
  %64 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18239
  call void @fts_set_stat_required(%struct._ftsent* %64, i1 zeroext true), !dbg !18240
  br label %if.end85, !dbg !18241

if.else82:                                        ; preds = %land.lhs.true78, %if.end74
  %65 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18242
  %66 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18244
  %call83 = call zeroext i16 @fts_stat(%struct.FTS* %65, %struct._ftsent* %66, i1 zeroext false), !dbg !18245
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18246
  %fts_info84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %67, i32 0, i32 15, !dbg !18247, !ctir !1725
  store i16 %call83, i16* %fts_info84, align 8, !dbg !18248, !ctir !33
  br label %if.end85

if.end85:                                         ; preds = %if.else82, %if.then81
  %68 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18249
  %tobool86 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %68, null, !dbg !18249
  br i1 %tobool86, label %if.then87, label %if.else88, !dbg !18251

if.then87:                                        ; preds = %if.end85
  %69 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18252
  %70 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18254
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %70, i32 0, i32 2, !dbg !18255, !ctir !1725
  store %struct._ftsent* %69, %struct._ftsent** %fts_link, align 8, !dbg !18256, !ctir !1729
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18257
  store %struct._ftsent* %71, %struct._ftsent** %root, align 8, !dbg !18258
  br label %if.end96, !dbg !18259

if.else88:                                        ; preds = %if.end85
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18260
  %fts_link89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 2, !dbg !18262, !ctir !1725
  store %struct._ftsent* null, %struct._ftsent** %fts_link89, align 8, !dbg !18263, !ctir !1729
  %73 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18264
  %cmp90 = icmp eq %struct._ftsent* %73, null, !dbg !18266
  br i1 %cmp90, label %if.then92, label %if.else93, !dbg !18267

if.then92:                                        ; preds = %if.else88
  %74 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18268
  store %struct._ftsent* %74, %struct._ftsent** %root, align 8, !dbg !18269
  store %struct._ftsent* %74, %struct._ftsent** %tmp, align 8, !dbg !18270
  br label %if.end95, !dbg !18271

if.else93:                                        ; preds = %if.else88
  %75 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18272
  %76 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !18274
  %fts_link94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 2, !dbg !18275, !ctir !1725
  store %struct._ftsent* %75, %struct._ftsent** %fts_link94, align 8, !dbg !18276, !ctir !1729
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18277
  store %struct._ftsent* %77, %struct._ftsent** %tmp, align 8, !dbg !18278
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.then92
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then87
  br label %for.inc, !dbg !18279

for.inc:                                          ; preds = %if.end96
  %78 = load i8**, i8*** %argv.addr, align 8, !dbg !18280
  %incdec.ptr = getelementptr inbounds i8*, i8** %78, i32 1, !dbg !18280, !ctir !1062
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18280
  %79 = load i64, i64* %nitems, align 8, !dbg !18281
  %inc = add i64 %79, 1, !dbg !18281
  store i64 %inc, i64* %nitems, align 8, !dbg !18281
  br label %for.cond, !dbg !18282, !llvm.loop !18283

for.end:                                          ; preds = %for.cond
  %80 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18285
  %tobool97 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %80, null, !dbg !18285
  br i1 %tobool97, label %land.lhs.true98, label %if.end103, !dbg !18287

land.lhs.true98:                                  ; preds = %for.end
  %81 = load i64, i64* %nitems, align 8, !dbg !18288
  %cmp99 = icmp ugt i64 %81, 1, !dbg !18289
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !18290

if.then101:                                       ; preds = %land.lhs.true98
  %82 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18291
  %83 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18292
  %84 = load i64, i64* %nitems, align 8, !dbg !18293
  %call102 = call %struct._ftsent* @fts_sort(%struct.FTS* %82, %struct._ftsent* %83, i64 %84), !dbg !18294
  store %struct._ftsent* %call102, %struct._ftsent** %root, align 8, !dbg !18295
  br label %if.end103, !dbg !18296

if.end103:                                        ; preds = %if.then101, %land.lhs.true98, %for.end
  %85 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18297
  %call104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %85, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.435, i64 0, i64 0), i64 0), !dbg !18299
  %86 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18300
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 0, !dbg !18301, !ctir !1742
  store %struct._ftsent* %call104, %struct._ftsent** %fts_cur, align 8, !dbg !18302, !ctir !1729
  %cmp105 = icmp eq %struct._ftsent* %call104, null, !dbg !18303
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !18304

if.then107:                                       ; preds = %if.end103
  br label %mem3, !dbg !18305

if.end108:                                        ; preds = %if.end103
  %87 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18306
  %88 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18307
  %fts_cur109 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 0, !dbg !18308, !ctir !1742
  %89 = load %struct._ftsent*, %struct._ftsent** %fts_cur109, align 8, !dbg !18308, !ctir !1729
  %fts_link110 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 2, !dbg !18309, !ctir !1726
  store %struct._ftsent* %87, %struct._ftsent** %fts_link110, align 8, !dbg !18310, !ctir !1729
  %90 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18311
  %fts_cur111 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 0, !dbg !18312, !ctir !1742
  %91 = load %struct._ftsent*, %struct._ftsent** %fts_cur111, align 8, !dbg !18312, !ctir !1729
  %fts_info112 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !18313, !ctir !1726
  store i16 9, i16* %fts_info112, align 8, !dbg !18314, !ctir !33
  %92 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18315
  %fts_cur113 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 0, !dbg !18316, !ctir !1742
  %93 = load %struct._ftsent*, %struct._ftsent** %fts_cur113, align 8, !dbg !18316, !ctir !1729
  %fts_level114 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 12, !dbg !18317, !ctir !1726
  store i64 1, i64* %fts_level114, align 8, !dbg !18318, !ctir !506
  %94 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18319
  %call115 = call zeroext i1 @setup_dir(%struct.FTS* %94), !dbg !18321
  br i1 %call115, label %if.end117, label %if.then116, !dbg !18322

if.then116:                                       ; preds = %if.end108
  br label %mem3, !dbg !18323

if.end117:                                        ; preds = %if.end108
  %95 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18324
  %fts_options118 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 10, !dbg !18324, !ctir !1742
  %96 = load i32, i32* %fts_options118, align 8, !dbg !18324, !ctir !7
  %and119 = and i32 %96, 4, !dbg !18324
  %tobool120 = icmp ne i32 %and119, 0, !dbg !18324
  br i1 %tobool120, label %if.end132, label %land.lhs.true121, !dbg !18326

land.lhs.true121:                                 ; preds = %if.end117
  %97 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18327
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 10, !dbg !18327, !ctir !1742
  %98 = load i32, i32* %fts_options122, align 8, !dbg !18327, !ctir !7
  %and123 = and i32 %98, 512, !dbg !18327
  %tobool124 = icmp ne i32 %and123, 0, !dbg !18327
  br i1 %tobool124, label %if.end132, label %land.lhs.true125, !dbg !18328

land.lhs.true125:                                 ; preds = %land.lhs.true121
  %99 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18329
  %call126 = call i32 @diropen(%struct.FTS* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !18330
  %100 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18331
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 5, !dbg !18332, !ctir !1742
  store i32 %call126, i32* %fts_rfd, align 8, !dbg !18333, !ctir !7
  %cmp127 = icmp slt i32 %call126, 0, !dbg !18334
  br i1 %cmp127, label %if.then129, label %if.end132, !dbg !18335

if.then129:                                       ; preds = %land.lhs.true125
  %101 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18336
  %fts_options130 = getelementptr inbounds %struct.FTS, %struct.FTS* %101, i32 0, i32 10, !dbg !18336, !ctir !1742
  %102 = load i32, i32* %fts_options130, align 8, !dbg !18336, !ctir !7
  %or131 = or i32 %102, 4, !dbg !18336
  store i32 %or131, i32* %fts_options130, align 8, !dbg !18336, !ctir !7
  br label %if.end132, !dbg !18336

if.end132:                                        ; preds = %if.then129, %land.lhs.true125, %land.lhs.true121, %if.end117
  %103 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18337
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %103, i32 0, i32 13, !dbg !18338, !ctir !1742
  call void @i_ring_init(%struct.I_ring* %fts_fd_ring, i32 -1), !dbg !18339
  %104 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18340
  store %struct.FTS* %104, %struct.FTS** %retval, align 8, !dbg !18341
  br label %return, !dbg !18341

mem3:                                             ; preds = %if.then116, %if.then107, %if.then73
  call void @llvm.dbg.label(metadata !18342), !dbg !18343
  %105 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18344
  call void @fts_lfree(%struct._ftsent* %105), !dbg !18345
  %106 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18346
  %107 = bitcast %struct._ftsent* %106 to i8*, !dbg !18346
  call void @free(i8* %107) #10, !dbg !18347
  br label %mem2, !dbg !18347

mem2:                                             ; preds = %mem3, %if.then44
  call void @llvm.dbg.label(metadata !18348), !dbg !18349
  %108 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18350
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !18351, !ctir !1742
  %109 = load i8*, i8** %fts_path, align 8, !dbg !18351, !ctir !9
  call void @free(i8* %109) #10, !dbg !18352
  br label %mem1, !dbg !18352

mem1:                                             ; preds = %mem2, %if.then38
  call void @llvm.dbg.label(metadata !18353), !dbg !18354
  %110 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18355
  %111 = bitcast %struct.FTS* %110 to i8*, !dbg !18355
  call void @free(i8* %111) #10, !dbg !18356
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18357
  br label %return, !dbg !18357

return:                                           ; preds = %mem1, %if.end132, %if.then14, %if.then10, %if.then5, %if.then
  %112 = load %struct.FTS*, %struct.FTS** %retval, align 8, !dbg !18358
  ret %struct.FTS* %112, !dbg !18358
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @fts_maxarglen(i8** %argv) #4 !dbg !18359 {
entry:
  %argv.addr = alloca i8**, align 8
  %len = alloca i64, align 8, !ctir !55
  %max = alloca i64, align 8, !ctir !55
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18362, metadata !DIExpression()), !dbg !18363
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18364, metadata !DIExpression()), !dbg !18365
  call void @llvm.dbg.declare(metadata i64* %max, metadata !18366, metadata !DIExpression()), !dbg !18367
  store i64 0, i64* %max, align 8, !dbg !18368
  br label %for.cond, !dbg !18370

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !18371
  %1 = load i8*, i8** %0, align 8, !dbg !18373, !ctir !1062
  %tobool = icmp ne i8* %1, null, !dbg !18374
  br i1 %tobool, label %for.body, label %for.end, !dbg !18374

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !18375
  %3 = load i8*, i8** %2, align 8, !dbg !18377, !ctir !1062
  %call = call i64 @strlen(i8* %3) #14, !dbg !18378
  store i64 %call, i64* %len, align 8, !dbg !18379
  %4 = load i64, i64* %max, align 8, !dbg !18380
  %cmp = icmp ugt i64 %call, %4, !dbg !18381
  br i1 %cmp, label %if.then, label %if.end, !dbg !18382

if.then:                                          ; preds = %for.body
  %5 = load i64, i64* %len, align 8, !dbg !18383
  store i64 %5, i64* %max, align 8, !dbg !18384
  br label %if.end, !dbg !18385

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18380

for.inc:                                          ; preds = %if.end
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !18386
  %incdec.ptr = getelementptr inbounds i8*, i8** %6, i32 1, !dbg !18386, !ctir !1062
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18386
  br label %for.cond, !dbg !18387, !llvm.loop !18388

for.end:                                          ; preds = %for.cond
  %7 = load i64, i64* %max, align 8, !dbg !18390
  %add = add i64 %7, 1, !dbg !18391
  ret i64 %add, !dbg !18392
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS* %sp, i64 %more) #4 !dbg !18393 {
entry:
  %retval = alloca i1, align 1
  %sp.addr = alloca %struct.FTS*, align 8
  %more.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !9
  %new_len = alloca i64, align 8, !ctir !55
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18396, metadata !DIExpression()), !dbg !18397
  store i64 %more, i64* %more.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %more.addr, metadata !18398, metadata !DIExpression()), !dbg !18399
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18400, metadata !DIExpression()), !dbg !18401
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !18402, metadata !DIExpression()), !dbg !18403
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18404
  %fts_pathlen = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 7, !dbg !18405, !ctir !1742
  %1 = load i64, i64* %fts_pathlen, align 8, !dbg !18405, !ctir !55
  %2 = load i64, i64* %more.addr, align 8, !dbg !18406
  %add = add i64 %1, %2, !dbg !18407
  %add1 = add i64 %add, 256, !dbg !18408
  store i64 %add1, i64* %new_len, align 8, !dbg !18403
  %3 = load i64, i64* %new_len, align 8, !dbg !18409
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18411
  %fts_pathlen2 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 7, !dbg !18412, !ctir !1742
  %5 = load i64, i64* %fts_pathlen2, align 8, !dbg !18412, !ctir !55
  %cmp = icmp ult i64 %3, %5, !dbg !18413
  br i1 %cmp, label %if.then, label %if.end, !dbg !18414

if.then:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18415
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 4, !dbg !18417, !ctir !1742
  %7 = load i8*, i8** %fts_path, align 8, !dbg !18417, !ctir !9
  call void @free(i8* %7) #10, !dbg !18418
  %8 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18419
  %fts_path3 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 4, !dbg !18420, !ctir !1742
  store i8* null, i8** %fts_path3, align 8, !dbg !18421, !ctir !9
  %call = call i32* @__errno_location() #15, !dbg !18422
  store i32 36, i32* %call, align 4, !dbg !18422, !ctir !7
  store i1 false, i1* %retval, align 1, !dbg !18423
  br label %return, !dbg !18423

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %new_len, align 8, !dbg !18424
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18425
  %fts_pathlen4 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 7, !dbg !18426, !ctir !1742
  store i64 %9, i64* %fts_pathlen4, align 8, !dbg !18427, !ctir !55
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18428
  %fts_path5 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 4, !dbg !18429, !ctir !1742
  %12 = load i8*, i8** %fts_path5, align 8, !dbg !18429, !ctir !9
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18430
  %fts_pathlen6 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 7, !dbg !18431, !ctir !1742
  %14 = load i64, i64* %fts_pathlen6, align 8, !dbg !18431, !ctir !55
  %call7 = call i8* @realloc(i8* %12, i64 %14) #10, !dbg !18432
  store i8* %call7, i8** %p, align 8, !dbg !18433
  %15 = load i8*, i8** %p, align 8, !dbg !18434
  %cmp8 = icmp eq i8* %15, null, !dbg !18436
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !18437

if.then9:                                         ; preds = %if.end
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18438
  %fts_path10 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 4, !dbg !18440, !ctir !1742
  %17 = load i8*, i8** %fts_path10, align 8, !dbg !18440, !ctir !9
  call void @free(i8* %17) #10, !dbg !18441
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18442
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !18443, !ctir !1742
  store i8* null, i8** %fts_path11, align 8, !dbg !18444, !ctir !9
  store i1 false, i1* %retval, align 1, !dbg !18445
  br label %return, !dbg !18445

if.end12:                                         ; preds = %if.end
  %19 = load i8*, i8** %p, align 8, !dbg !18446
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18447
  %fts_path13 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !18448, !ctir !1742
  store i8* %19, i8** %fts_path13, align 8, !dbg !18449, !ctir !9
  store i1 true, i1* %retval, align 1, !dbg !18450
  br label %return, !dbg !18450

return:                                           ; preds = %if.end12, %if.then9, %if.then
  %21 = load i1, i1* %retval, align 1, !dbg !18451
  ret i1 %21, !dbg !18451
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS* %sp, i8* %name, i64 %namelen) #4 !dbg !18452 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i64, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %len = alloca i64, align 8, !ctir !55
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18455, metadata !DIExpression()), !dbg !18456
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18457, metadata !DIExpression()), !dbg !18458
  store i64 %namelen, i64* %namelen.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %namelen.addr, metadata !18459, metadata !DIExpression()), !dbg !18460
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18461, metadata !DIExpression()), !dbg !18462
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18463, metadata !DIExpression()), !dbg !18464
  %0 = load i64, i64* %namelen.addr, align 8, !dbg !18465
  %add = add i64 %0, 1, !dbg !18465
  %add1 = add i64 271, %add, !dbg !18465
  %and = and i64 %add1, -8, !dbg !18465
  store i64 %and, i64* %len, align 8, !dbg !18466
  %1 = load i64, i64* %len, align 8, !dbg !18467
  %call = call noalias i8* @malloc(i64 %1) #10, !dbg !18469
  %2 = bitcast i8* %call to %struct._ftsent*, !dbg !18469
  store %struct._ftsent* %2, %struct._ftsent** %p, align 8, !dbg !18470
  %cmp = icmp eq %struct._ftsent* %2, null, !dbg !18471
  br i1 %cmp, label %if.then, label %if.end, !dbg !18472

if.then:                                          ; preds = %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !18473
  br label %return, !dbg !18473

if.end:                                           ; preds = %entry
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18474
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 19, !dbg !18475, !ctir !1725
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18476, !ctir !1115
  %4 = load i8*, i8** %name.addr, align 8, !dbg !18477
  %5 = load i64, i64* %namelen.addr, align 8, !dbg !18478
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %4, i64 %5, i1 false), !dbg !18476
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18479
  %fts_name2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 19, !dbg !18480, !ctir !1725
  %7 = load i64, i64* %namelen.addr, align 8, !dbg !18481
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name2, i64 0, i64 %7, !dbg !18479, !ctir !1115
  store i8 0, i8* %arrayidx, align 1, !dbg !18482
  %8 = load i64, i64* %namelen.addr, align 8, !dbg !18483
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18484
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 13, !dbg !18485, !ctir !1725
  store i64 %8, i64* %fts_namelen, align 8, !dbg !18486, !ctir !55
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18487
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18488
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 11, !dbg !18489, !ctir !1725
  store %struct.FTS* %10, %struct.FTS** %fts_fts, align 8, !dbg !18490, !ctir !1741
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18491
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !18492, !ctir !1742
  %13 = load i8*, i8** %fts_path, align 8, !dbg !18492, !ctir !9
  %14 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18493
  %fts_path3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !18494, !ctir !1725
  store i8* %13, i8** %fts_path3, align 8, !dbg !18495, !ctir !9
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18496
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !18497, !ctir !1725
  store i32 0, i32* %fts_errno, align 8, !dbg !18498, !ctir !7
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18499
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 3, !dbg !18500, !ctir !1725
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp, align 8, !dbg !18501, !ctir !541
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18502
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 16, !dbg !18503, !ctir !1725
  store i16 0, i16* %fts_flags, align 2, !dbg !18504, !ctir !33
  %18 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18505
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 17, !dbg !18506, !ctir !1725
  store i16 3, i16* %fts_instr, align 4, !dbg !18507, !ctir !33
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18508
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 4, !dbg !18509, !ctir !1725
  store i64 0, i64* %fts_number, align 8, !dbg !18510, !ctir !31
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18511
  %fts_pointer = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 5, !dbg !18512, !ctir !1725
  store i8* null, i8** %fts_pointer, align 8, !dbg !18513, !ctir !53
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18514
  store %struct._ftsent* %21, %struct._ftsent** %retval, align 8, !dbg !18515
  br label %return, !dbg !18515

return:                                           ; preds = %if.end, %if.then
  %22 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18516
  ret %struct._ftsent* %22, !dbg !18516
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_set_stat_required(%struct._ftsent* %p, i1 zeroext %required) #4 !dbg !18517 {
entry:
  %p.addr = alloca %struct._ftsent*, align 8
  %required.addr = alloca i8, align 1
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18520, metadata !DIExpression()), !dbg !18521
  %frombool = zext i1 %required to i8
  store i8 %frombool, i8* %required.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %required.addr, metadata !18522, metadata !DIExpression()), !dbg !18523
  br label %do.body, !dbg !18524

do.body:                                          ; preds = %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18525
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !18525, !ctir !1725
  %1 = load i16, i16* %fts_info, align 8, !dbg !18525, !ctir !33
  %conv = zext i16 %1 to i32, !dbg !18525
  %cmp = icmp eq i32 %conv, 11, !dbg !18525
  br i1 %cmp, label %if.end, label %if.then, !dbg !18528

if.then:                                          ; preds = %do.body
  call void @abort() #13, !dbg !18525
  unreachable, !dbg !18525

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !18528

do.end:                                           ; preds = %if.end
  %2 = load i8, i8* %required.addr, align 1, !dbg !18529
  %tobool = trunc i8 %2 to i1, !dbg !18529
  %3 = zext i1 %tobool to i64, !dbg !18529
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !18529
  %conv3 = sext i32 %cond to i64, !dbg !18530
  %4 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18531
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !18532, !ctir !1725
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18533, !ctir !1796
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 8, !dbg !18533, !ctir !1797
  store i64 %conv3, i64* %st_size, align 8, !dbg !18534, !ctir !29
  ret void, !dbg !18535
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @fts_stat(%struct.FTS* %sp, %struct._ftsent* %p, i1 zeroext %follow) #4 !dbg !18536 {
entry:
  %retval = alloca i16, align 2
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %follow.addr = alloca i8, align 1
  %sbp = alloca %struct.stat*, align 8, !ctir !1852
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18539, metadata !DIExpression()), !dbg !18540
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18541, metadata !DIExpression()), !dbg !18542
  %frombool = zext i1 %follow to i8
  store i8 %frombool, i8* %follow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %follow.addr, metadata !18543, metadata !DIExpression()), !dbg !18544
  call void @llvm.dbg.declare(metadata %struct.stat** %sbp, metadata !18545, metadata !DIExpression()), !dbg !18546
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18547
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !18548, !ctir !1725
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18547, !ctir !1796
  store %struct.stat* %arraydecay, %struct.stat** %sbp, align 8, !dbg !18546
  %1 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18549
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 12, !dbg !18551, !ctir !1725
  %2 = load i64, i64* %fts_level, align 8, !dbg !18551, !ctir !506
  %cmp = icmp eq i64 %2, 0, !dbg !18552
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18553

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18554
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18554, !ctir !1742
  %4 = load i32, i32* %fts_options, align 8, !dbg !18554, !ctir !7
  %and = and i32 %4, 1, !dbg !18554
  %tobool = icmp ne i32 %and, 0, !dbg !18554
  br i1 %tobool, label %if.then, label %if.end, !dbg !18555

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %follow.addr, align 1, !dbg !18556
  br label %if.end, !dbg !18557

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18558
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !18558, !ctir !1742
  %6 = load i32, i32* %fts_options1, align 8, !dbg !18558, !ctir !7
  %and2 = and i32 %6, 2, !dbg !18558
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18558
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !18560

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i8, i8* %follow.addr, align 1, !dbg !18561
  %tobool4 = trunc i8 %7 to i1, !dbg !18561
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !18562

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18563
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !18566, !ctir !1725
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !18566, !ctir !9
  %10 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18567
  %call = call i32 @stat(i8* %9, %struct.stat* %10) #10, !dbg !18568
  %tobool6 = icmp ne i32 %call, 0, !dbg !18568
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !18569

if.then7:                                         ; preds = %if.then5
  %call8 = call i32* @__errno_location() #15, !dbg !18570
  %11 = load i32, i32* %call8, align 4, !dbg !18570, !ctir !7
  %cmp9 = icmp eq i32 %11, 2, !dbg !18573
  br i1 %cmp9, label %land.lhs.true10, label %if.end16, !dbg !18574

land.lhs.true10:                                  ; preds = %if.then7
  %12 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18575
  %fts_accpath11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 6, !dbg !18576, !ctir !1725
  %13 = load i8*, i8** %fts_accpath11, align 8, !dbg !18576, !ctir !9
  %14 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18577
  %call12 = call i32 @lstat(i8* %13, %struct.stat* %14) #10, !dbg !18578
  %cmp13 = icmp eq i32 %call12, 0, !dbg !18579
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !18580

if.then14:                                        ; preds = %land.lhs.true10
  %call15 = call i32* @__errno_location() #15, !dbg !18581
  store i32 0, i32* %call15, align 4, !dbg !18581, !ctir !7
  store i16 13, i16* %retval, align 2, !dbg !18583
  br label %return, !dbg !18583

if.end16:                                         ; preds = %land.lhs.true10, %if.then7
  %call17 = call i32* @__errno_location() #15, !dbg !18584
  %15 = load i32, i32* %call17, align 4, !dbg !18584, !ctir !7
  %16 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18585
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 8, !dbg !18586, !ctir !1725
  store i32 %15, i32* %fts_errno, align 8, !dbg !18587, !ctir !7
  br label %err, !dbg !18588

if.end18:                                         ; preds = %if.then5
  br label %if.end26, !dbg !18589

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18590
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18592, !ctir !1742
  %18 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18592, !ctir !7
  %19 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18593
  %fts_accpath19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 6, !dbg !18594, !ctir !1725
  %20 = load i8*, i8** %fts_accpath19, align 8, !dbg !18594, !ctir !9
  %21 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18595
  %call20 = call i32 @fstatat(i32 %18, i8* %20, %struct.stat* %21, i32 256) #10, !dbg !18596
  %tobool21 = icmp ne i32 %call20, 0, !dbg !18596
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !18597

if.then22:                                        ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !18598
  %22 = load i32, i32* %call23, align 4, !dbg !18598, !ctir !7
  %23 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18600
  %fts_errno24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 8, !dbg !18601, !ctir !1725
  store i32 %22, i32* %fts_errno24, align 8, !dbg !18602, !ctir !7
  br label %err, !dbg !18600

err:                                              ; preds = %if.then22, %if.end16
  call void @llvm.dbg.label(metadata !18603), !dbg !18604
  %24 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18605
  %25 = bitcast %struct.stat* %24 to i8*, !dbg !18606
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 144, i1 false), !dbg !18606
  store i16 10, i16* %retval, align 2, !dbg !18607
  br label %return, !dbg !18607

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end18
  %26 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18608
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !18608, !ctir !1797
  %27 = load i32, i32* %st_mode, align 8, !dbg !18608, !ctir !168
  %and27 = and i32 %27, 61440, !dbg !18608
  %cmp28 = icmp eq i32 %and27, 16384, !dbg !18608
  br i1 %cmp28, label %if.then29, label %if.end63, !dbg !18610

if.then29:                                        ; preds = %if.end26
  %28 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18611
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 2, !dbg !18613, !ctir !1797
  %29 = load i64, i64* %st_nlink, align 8, !dbg !18613, !ctir !336
  %cmp30 = icmp ult i64 %29, 2, !dbg !18614
  br i1 %cmp30, label %cond.true, label %lor.lhs.false31, !dbg !18615

lor.lhs.false31:                                  ; preds = %if.then29
  %30 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18616
  %fts_level32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 12, !dbg !18617, !ctir !1725
  %31 = load i64, i64* %fts_level32, align 8, !dbg !18617, !ctir !506
  %cmp33 = icmp sle i64 %31, 0, !dbg !18618
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !18619

cond.true:                                        ; preds = %lor.lhs.false31, %if.then29
  br label %cond.end, !dbg !18619

cond.false:                                       ; preds = %lor.lhs.false31
  %32 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18620
  %st_nlink34 = getelementptr inbounds %struct.stat, %struct.stat* %32, i32 0, i32 2, !dbg !18621, !ctir !1797
  %33 = load i64, i64* %st_nlink34, align 8, !dbg !18621, !ctir !336
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18622
  %fts_options35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !18622, !ctir !1742
  %35 = load i32, i32* %fts_options35, align 8, !dbg !18622, !ctir !7
  %and36 = and i32 %35, 32, !dbg !18622
  %tobool37 = icmp ne i32 %and36, 0, !dbg !18622
  %36 = zext i1 %tobool37 to i64, !dbg !18622
  %cond = select i1 %tobool37, i32 0, i32 2, !dbg !18622
  %conv = sext i32 %cond to i64, !dbg !18623
  %sub = sub i64 %33, %conv, !dbg !18624
  br label %cond.end, !dbg !18619

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond38 = phi i64 [ -1, %cond.true ], [ %sub, %cond.false ], !dbg !18619
  %37 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18625
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !18626, !ctir !1725
  store i64 %cond38, i64* %fts_n_dirs_remaining, align 8, !dbg !18627, !ctir !1087
  %38 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18628
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 19, !dbg !18628, !ctir !1725
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18628, !ctir !1115
  %39 = load i8, i8* %arrayidx, align 8, !dbg !18628
  %conv39 = sext i8 %39 to i32, !dbg !18628
  %cmp40 = icmp eq i32 %conv39, 46, !dbg !18628
  br i1 %cmp40, label %land.lhs.true42, label %if.end62, !dbg !18628

land.lhs.true42:                                  ; preds = %cond.end
  %40 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18628
  %fts_name43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 19, !dbg !18628, !ctir !1725
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name43, i64 0, i64 1, !dbg !18628, !ctir !1115
  %41 = load i8, i8* %arrayidx44, align 1, !dbg !18628
  %tobool45 = icmp ne i8 %41, 0, !dbg !18628
  br i1 %tobool45, label %lor.lhs.false46, label %if.then56, !dbg !18628

lor.lhs.false46:                                  ; preds = %land.lhs.true42
  %42 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18628
  %fts_name47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 19, !dbg !18628, !ctir !1725
  %arrayidx48 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name47, i64 0, i64 1, !dbg !18628, !ctir !1115
  %43 = load i8, i8* %arrayidx48, align 1, !dbg !18628
  %conv49 = sext i8 %43 to i32, !dbg !18628
  %cmp50 = icmp eq i32 %conv49, 46, !dbg !18628
  br i1 %cmp50, label %land.lhs.true52, label %if.end62, !dbg !18628

land.lhs.true52:                                  ; preds = %lor.lhs.false46
  %44 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18628
  %fts_name53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 19, !dbg !18628, !ctir !1725
  %arrayidx54 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name53, i64 0, i64 2, !dbg !18628, !ctir !1115
  %45 = load i8, i8* %arrayidx54, align 2, !dbg !18628
  %tobool55 = icmp ne i8 %45, 0, !dbg !18628
  br i1 %tobool55, label %if.end62, label %if.then56, !dbg !18630

if.then56:                                        ; preds = %land.lhs.true52, %land.lhs.true42
  %46 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18631
  %fts_level57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 12, !dbg !18633, !ctir !1725
  %47 = load i64, i64* %fts_level57, align 8, !dbg !18633, !ctir !506
  %cmp58 = icmp eq i64 %47, 0, !dbg !18634
  %48 = zext i1 %cmp58 to i64, !dbg !18631
  %cond60 = select i1 %cmp58, i32 1, i32 5, !dbg !18631
  %conv61 = trunc i32 %cond60 to i16, !dbg !18635
  store i16 %conv61, i16* %retval, align 2, !dbg !18636
  br label %return, !dbg !18636

if.end62:                                         ; preds = %land.lhs.true52, %lor.lhs.false46, %cond.end
  store i16 1, i16* %retval, align 2, !dbg !18637
  br label %return, !dbg !18637

if.end63:                                         ; preds = %if.end26
  %49 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18638
  %st_mode64 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 3, !dbg !18638, !ctir !1797
  %50 = load i32, i32* %st_mode64, align 8, !dbg !18638, !ctir !168
  %and65 = and i32 %50, 61440, !dbg !18638
  %cmp66 = icmp eq i32 %and65, 40960, !dbg !18638
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !18640

if.then68:                                        ; preds = %if.end63
  store i16 12, i16* %retval, align 2, !dbg !18641
  br label %return, !dbg !18641

if.end69:                                         ; preds = %if.end63
  %51 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18642
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %51, i32 0, i32 3, !dbg !18642, !ctir !1797
  %52 = load i32, i32* %st_mode70, align 8, !dbg !18642, !ctir !168
  %and71 = and i32 %52, 61440, !dbg !18642
  %cmp72 = icmp eq i32 %and71, 32768, !dbg !18642
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !18644

if.then74:                                        ; preds = %if.end69
  store i16 8, i16* %retval, align 2, !dbg !18645
  br label %return, !dbg !18645

if.end75:                                         ; preds = %if.end69
  store i16 3, i16* %retval, align 2, !dbg !18646
  br label %return, !dbg !18646

return:                                           ; preds = %if.end75, %if.then74, %if.then68, %if.end62, %if.then56, %err, %if.then14
  %53 = load i16, i16* %retval, align 2, !dbg !18647
  ret i16 %53, !dbg !18647
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS* %sp, %struct._ftsent* %head, i64 %nitems) #4 !dbg !18648 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %nitems.addr = alloca i64, align 8
  %ap = alloca %struct._ftsent**, align 8, !ctir !1853
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %dummy = alloca %struct._ftsent*, align 8, !ctir !1819
  %compare = alloca i32 (i8*, i8*)*, align 8, !ctir !865
  %a = alloca %struct._ftsent**, align 8, !ctir !1853
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18651, metadata !DIExpression()), !dbg !18652
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !18653, metadata !DIExpression()), !dbg !18654
  store i64 %nitems, i64* %nitems.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nitems.addr, metadata !18655, metadata !DIExpression()), !dbg !18656
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %ap, metadata !18657, metadata !DIExpression()), !dbg !18658
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18659, metadata !DIExpression()), !dbg !18660
  call void @llvm.dbg.declare(metadata %struct._ftsent** %dummy, metadata !18661, metadata !DIExpression()), !dbg !18662
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare, metadata !18663, metadata !DIExpression()), !dbg !18664
  %0 = ptrtoint %struct._ftsent** %dummy to i64, !dbg !18665
  %1 = bitcast %struct._ftsent** %dummy to i8*, !dbg !18666
  %2 = ptrtoint i8* %1 to i64, !dbg !18667
  %cmp = icmp eq i64 %0, %2, !dbg !18668
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18669

cond.true:                                        ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18670
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 9, !dbg !18671, !ctir !1742
  %4 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18671, !ctir !1756
  %5 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %4 to i32 (i8*, i8*)*, !dbg !18672
  br label %cond.end, !dbg !18669

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18669

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (i8*, i8*)* [ %5, %cond.true ], [ @fts_compar, %cond.false ], !dbg !18669
  store i32 (i8*, i8*)* %cond, i32 (i8*, i8*)** %compare, align 8, !dbg !18664
  %6 = load i64, i64* %nitems.addr, align 8, !dbg !18673
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18675
  %fts_nitems = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 8, !dbg !18676, !ctir !1742
  %8 = load i64, i64* %fts_nitems, align 8, !dbg !18676, !ctir !55
  %cmp1 = icmp ugt i64 %6, %8, !dbg !18677
  br i1 %cmp1, label %if.then, label %if.end11, !dbg !18678

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a, metadata !18679, metadata !DIExpression()), !dbg !18681
  %9 = load i64, i64* %nitems.addr, align 8, !dbg !18682
  %add = add i64 %9, 40, !dbg !18683
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18684
  %fts_nitems2 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 8, !dbg !18685, !ctir !1742
  store i64 %add, i64* %fts_nitems2, align 8, !dbg !18686, !ctir !55
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18687
  %fts_nitems3 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 8, !dbg !18689, !ctir !1742
  %12 = load i64, i64* %fts_nitems3, align 8, !dbg !18689, !ctir !55
  %cmp4 = icmp ult i64 2305843009213693951, %12, !dbg !18690
  br i1 %cmp4, label %if.then6, label %lor.lhs.false, !dbg !18691

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18692
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 2, !dbg !18693, !ctir !1742
  %14 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !18693, !ctir !1748
  %15 = bitcast %struct._ftsent** %14 to i8*, !dbg !18692
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18694
  %fts_nitems5 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 8, !dbg !18695, !ctir !1742
  %17 = load i64, i64* %fts_nitems5, align 8, !dbg !18695, !ctir !55
  %mul = mul i64 %17, 8, !dbg !18696
  %call = call i8* @realloc(i8* %15, i64 %mul) #10, !dbg !18697
  %18 = bitcast i8* %call to %struct._ftsent**, !dbg !18697
  store %struct._ftsent** %18, %struct._ftsent*** %a, align 8, !dbg !18698
  %tobool = icmp ne %struct._ftsent** %18, null, !dbg !18698
  br i1 %tobool, label %if.end, label %if.then6, !dbg !18699

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18700
  %fts_array7 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 2, !dbg !18702, !ctir !1742
  %20 = load %struct._ftsent**, %struct._ftsent*** %fts_array7, align 8, !dbg !18702, !ctir !1748
  %21 = bitcast %struct._ftsent** %20 to i8*, !dbg !18700
  call void @free(i8* %21) #10, !dbg !18703
  %22 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18704
  %fts_array8 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 2, !dbg !18705, !ctir !1742
  store %struct._ftsent** null, %struct._ftsent*** %fts_array8, align 8, !dbg !18706, !ctir !1748
  %23 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18707
  %fts_nitems9 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 8, !dbg !18708, !ctir !1742
  store i64 0, i64* %fts_nitems9, align 8, !dbg !18709, !ctir !55
  %24 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18710
  store %struct._ftsent* %24, %struct._ftsent** %retval, align 8, !dbg !18711
  br label %return, !dbg !18711

if.end:                                           ; preds = %lor.lhs.false
  %25 = load %struct._ftsent**, %struct._ftsent*** %a, align 8, !dbg !18712
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18713
  %fts_array10 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 2, !dbg !18714, !ctir !1742
  store %struct._ftsent** %25, %struct._ftsent*** %fts_array10, align 8, !dbg !18715, !ctir !1748
  br label %if.end11, !dbg !18716

if.end11:                                         ; preds = %if.end, %cond.end
  %27 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18717
  %fts_array12 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 2, !dbg !18719, !ctir !1742
  %28 = load %struct._ftsent**, %struct._ftsent*** %fts_array12, align 8, !dbg !18719, !ctir !1748
  store %struct._ftsent** %28, %struct._ftsent*** %ap, align 8, !dbg !18720
  %29 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18721
  store %struct._ftsent* %29, %struct._ftsent** %p, align 8, !dbg !18722
  br label %for.cond, !dbg !18723

for.cond:                                         ; preds = %for.inc, %if.end11
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18724
  %tobool13 = icmp ne %struct._ftsent* %30, null, !dbg !18726
  br i1 %tobool13, label %for.body, label %for.end, !dbg !18726

for.body:                                         ; preds = %for.cond
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18727
  %32 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18728
  %incdec.ptr = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %32, i32 1, !dbg !18728, !ctir !1819
  store %struct._ftsent** %incdec.ptr, %struct._ftsent*** %ap, align 8, !dbg !18728
  store %struct._ftsent* %31, %struct._ftsent** %32, align 8, !dbg !18729, !ctir !1819
  br label %for.inc, !dbg !18730

for.inc:                                          ; preds = %for.body
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18731
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 2, !dbg !18732, !ctir !1725
  %34 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18732, !ctir !1729
  store %struct._ftsent* %34, %struct._ftsent** %p, align 8, !dbg !18733
  br label %for.cond, !dbg !18734, !llvm.loop !18735

for.end:                                          ; preds = %for.cond
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18737
  %fts_array14 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 2, !dbg !18738, !ctir !1742
  %36 = load %struct._ftsent**, %struct._ftsent*** %fts_array14, align 8, !dbg !18738, !ctir !1748
  %37 = bitcast %struct._ftsent** %36 to i8*, !dbg !18739
  %38 = load i64, i64* %nitems.addr, align 8, !dbg !18740
  %39 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !18741
  call void @qsort(i8* %37, i64 %38, i64 8, i32 (i8*, i8*)* %39), !dbg !18742
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18743
  %fts_array15 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !18745, !ctir !1742
  %41 = load %struct._ftsent**, %struct._ftsent*** %fts_array15, align 8, !dbg !18745, !ctir !1748
  store %struct._ftsent** %41, %struct._ftsent*** %ap, align 8, !dbg !18746
  %42 = load %struct._ftsent*, %struct._ftsent** %41, align 8, !dbg !18747, !ctir !1819
  store %struct._ftsent* %42, %struct._ftsent** %head.addr, align 8, !dbg !18748
  br label %for.cond16, !dbg !18749

for.cond16:                                       ; preds = %for.inc21, %for.end
  %43 = load i64, i64* %nitems.addr, align 8, !dbg !18750
  %dec = add i64 %43, -1, !dbg !18750
  store i64 %dec, i64* %nitems.addr, align 8, !dbg !18750
  %tobool17 = icmp ne i64 %dec, 0, !dbg !18752
  br i1 %tobool17, label %for.body18, label %for.end23, !dbg !18752

for.body18:                                       ; preds = %for.cond16
  %44 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18753
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %44, i64 1, !dbg !18753, !ctir !1853
  %45 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !18753
  %46 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18754
  %arrayidx19 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %46, i64 0, !dbg !18754, !ctir !1853
  %47 = load %struct._ftsent*, %struct._ftsent** %arrayidx19, align 8, !dbg !18754
  %fts_link20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 2, !dbg !18755, !ctir !1725
  store %struct._ftsent* %45, %struct._ftsent** %fts_link20, align 8, !dbg !18756, !ctir !1729
  br label %for.inc21, !dbg !18754

for.inc21:                                        ; preds = %for.body18
  %48 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18757
  %incdec.ptr22 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %48, i32 1, !dbg !18757, !ctir !1819
  store %struct._ftsent** %incdec.ptr22, %struct._ftsent*** %ap, align 8, !dbg !18757
  br label %for.cond16, !dbg !18758, !llvm.loop !18759

for.end23:                                        ; preds = %for.cond16
  %49 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18761
  %arrayidx24 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %49, i64 0, !dbg !18761, !ctir !1853
  %50 = load %struct._ftsent*, %struct._ftsent** %arrayidx24, align 8, !dbg !18761
  %fts_link25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 2, !dbg !18762, !ctir !1725
  store %struct._ftsent* null, %struct._ftsent** %fts_link25, align 8, !dbg !18763, !ctir !1729
  %51 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18764
  store %struct._ftsent* %51, %struct._ftsent** %retval, align 8, !dbg !18765
  br label %return, !dbg !18765

return:                                           ; preds = %for.end23, %if.then6
  %52 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18766
  ret %struct._ftsent* %52, !dbg !18766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @setup_dir(%struct.FTS* %fts) #4 !dbg !18767 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !18770, metadata !DIExpression()), !dbg !18771
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18772
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18774, !ctir !1742
  %1 = load i32, i32* %fts_options, align 8, !dbg !18774, !ctir !7
  %and = and i32 %1, 258, !dbg !18775
  %tobool = icmp ne i32 %and, 0, !dbg !18775
  br i1 %tobool, label %if.then, label %if.else, !dbg !18776

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !18777
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18779
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !18780, !ctir !1742
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !18781
  store %struct.hash_table* %call, %struct.hash_table** %ht, align 8, !dbg !18782, !ctir !1765
  %3 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18783
  %fts_cycle1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 12, !dbg !18785, !ctir !1742
  %ht2 = bitcast %union.anon* %fts_cycle1 to %struct.hash_table**, !dbg !18786
  %4 = load %struct.hash_table*, %struct.hash_table** %ht2, align 8, !dbg !18786, !ctir !1765
  %tobool3 = icmp ne %struct.hash_table* %4, null, !dbg !18783
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !18787

if.then4:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !18788
  br label %return, !dbg !18788

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !18789

if.else:                                          ; preds = %entry
  %call5 = call noalias i8* @malloc(i64 32) #10, !dbg !18790
  %5 = bitcast i8* %call5 to %struct.cycle_check_state*, !dbg !18790
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18792
  %fts_cycle6 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !18793, !ctir !1742
  %state = bitcast %union.anon* %fts_cycle6 to %struct.cycle_check_state**, !dbg !18794
  store %struct.cycle_check_state* %5, %struct.cycle_check_state** %state, align 8, !dbg !18795, !ctir !1765
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18796
  %fts_cycle7 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !18798, !ctir !1742
  %state8 = bitcast %union.anon* %fts_cycle7 to %struct.cycle_check_state**, !dbg !18799
  %8 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state8, align 8, !dbg !18799, !ctir !1765
  %tobool9 = icmp ne %struct.cycle_check_state* %8, null, !dbg !18796
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !18800

if.then10:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !18801
  br label %return, !dbg !18801

if.end11:                                         ; preds = %if.else
  %9 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18802
  %fts_cycle12 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !18803, !ctir !1742
  %state13 = bitcast %union.anon* %fts_cycle12 to %struct.cycle_check_state**, !dbg !18804
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state13, align 8, !dbg !18804, !ctir !1765
  call void @cycle_check_init(%struct.cycle_check_state* %10), !dbg !18805
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %if.end
  store i1 true, i1* %retval, align 1, !dbg !18806
  br label %return, !dbg !18806

return:                                           ; preds = %if.end14, %if.then10, %if.then4
  %11 = load i1, i1* %retval, align 1, !dbg !18807
  ret i1 %11, !dbg !18807
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @diropen(%struct.FTS* %sp, i8* %dir) #4 !dbg !18808 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %dir.addr = alloca i8*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18812, metadata !DIExpression()), !dbg !18813
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !18814, metadata !DIExpression()), !dbg !18815
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !18816, metadata !DIExpression()), !dbg !18817
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18818
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18818, !ctir !1828
  %1 = load i32, i32* %fts_options, align 8, !dbg !18818, !ctir !7
  %and = and i32 %1, 16, !dbg !18818
  %tobool = icmp ne i32 %and, 0, !dbg !18818
  %2 = zext i1 %tobool to i64, !dbg !18818
  %cond = select i1 %tobool, i32 131072, i32 0, !dbg !18818
  %or = or i32 592128, %cond, !dbg !18819
  store i32 %or, i32* %open_flags, align 4, !dbg !18817
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18820, metadata !DIExpression()), !dbg !18821
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18822
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18822, !ctir !1828
  %4 = load i32, i32* %fts_options1, align 8, !dbg !18822, !ctir !7
  %and2 = and i32 %4, 512, !dbg !18822
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18822
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !18822

cond.true:                                        ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18823
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 6, !dbg !18824, !ctir !1828
  %6 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18824, !ctir !7
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !18825
  %8 = load i32, i32* %open_flags, align 4, !dbg !18826
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %6, i8* %7, i32 %8), !dbg !18827
  br label %cond.end, !dbg !18822

cond.false:                                       ; preds = %entry
  %9 = load i8*, i8** %dir.addr, align 8, !dbg !18828
  %10 = load i32, i32* %open_flags, align 4, !dbg !18829
  %call4 = call i32 (i8*, i32, ...) @open_safer(i8* %9, i32 %10), !dbg !18830
  br label %cond.end, !dbg !18822

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %call, %cond.true ], [ %call4, %cond.false ], !dbg !18822
  store i32 %cond5, i32* %fd, align 4, !dbg !18821
  %11 = load i32, i32* %fd, align 4, !dbg !18831
  ret i32 %11, !dbg !18832
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_lfree(%struct._ftsent* %head) #4 !dbg !18833 {
entry:
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !18836, metadata !DIExpression()), !dbg !18837
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18838, metadata !DIExpression()), !dbg !18839
  br label %while.cond, !dbg !18840

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18841
  store %struct._ftsent* %0, %struct._ftsent** %p, align 8, !dbg !18842
  %tobool = icmp ne %struct._ftsent* %0, null, !dbg !18840
  br i1 %tobool, label %while.body, label %while.end, !dbg !18840

while.body:                                       ; preds = %while.cond
  %1 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18843
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 2, !dbg !18845, !ctir !1725
  %2 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18845, !ctir !1729
  store %struct._ftsent* %2, %struct._ftsent** %head.addr, align 8, !dbg !18846
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18847
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 3, !dbg !18849, !ctir !1725
  %4 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !18849, !ctir !541
  %tobool1 = icmp ne %struct.__dirstream* %4, null, !dbg !18847
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18850

if.then:                                          ; preds = %while.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18851
  %fts_dirp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !18852, !ctir !1725
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp2, align 8, !dbg !18852, !ctir !541
  %call = call i32 @closedir(%struct.__dirstream* %6), !dbg !18853
  br label %if.end, !dbg !18853

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18854
  %8 = bitcast %struct._ftsent* %7 to i8*, !dbg !18854
  call void @free(i8* %8) #10, !dbg !18855
  br label %while.cond, !dbg !18840, !llvm.loop !18856

while.end:                                        ; preds = %while.cond
  ret void, !dbg !18858
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @AD_hash(i8* %x, i64 %table_size) #4 !dbg !18859 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !1820
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !18860, metadata !DIExpression()), !dbg !18861
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !18862, metadata !DIExpression()), !dbg !18863
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !18864, metadata !DIExpression()), !dbg !18865
  %0 = load i8*, i8** %x.addr, align 8, !dbg !18866
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !18866
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !18865
  %2 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18867
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %2, i32 0, i32 1, !dbg !18868, !ctir !1821
  %3 = load i64, i64* %ino, align 8, !dbg !18868, !ctir !259
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !18869
  %rem = urem i64 %3, %4, !dbg !18870
  ret i64 %rem, !dbg !18871
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @AD_compare(i8* %x, i8* %y) #4 !dbg !18872 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !1820
  %ay = alloca %struct.Active_dir*, align 8, !ctir !1820
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !18873, metadata !DIExpression()), !dbg !18874
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !18875, metadata !DIExpression()), !dbg !18876
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !18877, metadata !DIExpression()), !dbg !18878
  %0 = load i8*, i8** %x.addr, align 8, !dbg !18879
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !18879
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !18878
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ay, metadata !18880, metadata !DIExpression()), !dbg !18881
  %2 = load i8*, i8** %y.addr, align 8, !dbg !18882
  %3 = bitcast i8* %2 to %struct.Active_dir*, !dbg !18882
  store %struct.Active_dir* %3, %struct.Active_dir** %ay, align 8, !dbg !18881
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18883
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %4, i32 0, i32 1, !dbg !18884, !ctir !1821
  %5 = load i64, i64* %ino, align 8, !dbg !18884, !ctir !259
  %6 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !18885
  %ino1 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !18886, !ctir !1821
  %7 = load i64, i64* %ino1, align 8, !dbg !18886, !ctir !259
  %cmp = icmp eq i64 %5, %7, !dbg !18887
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18888

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18889
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 0, !dbg !18890, !ctir !1821
  %9 = load i64, i64* %dev, align 8, !dbg !18890, !ctir !262
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !18891
  %dev2 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 0, !dbg !18892, !ctir !1821
  %11 = load i64, i64* %dev2, align 8, !dbg !18892, !ctir !262
  %cmp3 = icmp eq i64 %9, %11, !dbg !18893
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !18894
  ret i1 %12, !dbg !18895
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compar(i8* %a, i8* %b) #4 !dbg !18896 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %pa = alloca %struct._ftsent**, align 8, !ctir !1722
  %pb = alloca %struct._ftsent**, align 8, !ctir !1722
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !18897, metadata !DIExpression()), !dbg !18898
  store i8* %b, i8** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !18899, metadata !DIExpression()), !dbg !18900
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pa, metadata !18901, metadata !DIExpression()), !dbg !18902
  %0 = load i8*, i8** %a.addr, align 8, !dbg !18903
  %1 = bitcast i8* %0 to %struct._ftsent**, !dbg !18904
  store %struct._ftsent** %1, %struct._ftsent*** %pa, align 8, !dbg !18902
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pb, metadata !18905, metadata !DIExpression()), !dbg !18906
  %2 = load i8*, i8** %b.addr, align 8, !dbg !18907
  %3 = bitcast i8* %2 to %struct._ftsent**, !dbg !18908
  store %struct._ftsent** %3, %struct._ftsent*** %pb, align 8, !dbg !18906
  %4 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !18909
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %4, i64 0, !dbg !18909, !ctir !1722
  %5 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !18909
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 11, !dbg !18910, !ctir !1724
  %6 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !18910, !ctir !1741
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 9, !dbg !18911, !ctir !1742
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18911, !ctir !1756
  %8 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !18912
  %9 = load %struct._ftsent**, %struct._ftsent*** %pb, align 8, !dbg !18913
  %call = call i32 %7(%struct._ftsent** %8, %struct._ftsent** %9), !dbg !18909
  ret i32 %call, !dbg !18914
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_close(%struct.FTS* %sp) #4 !dbg !18915 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %freep = alloca %struct._ftsent*, align 8, !ctir !1819
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %saved_errno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18918, metadata !DIExpression()), !dbg !18919
  call void @llvm.dbg.declare(metadata %struct._ftsent** %freep, metadata !18920, metadata !DIExpression()), !dbg !18921
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18922, metadata !DIExpression()), !dbg !18923
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !18924, metadata !DIExpression()), !dbg !18925
  store i32 0, i32* %saved_errno, align 4, !dbg !18925
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18926
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !18928, !ctir !1742
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !18928, !ctir !1729
  %tobool = icmp ne %struct._ftsent* %1, null, !dbg !18926
  br i1 %tobool, label %if.then, label %if.end, !dbg !18929

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18930
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !18933, !ctir !1742
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !18933, !ctir !1729
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !18934
  br label %for.cond, !dbg !18935

for.cond:                                         ; preds = %cond.end, %if.then
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18936
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 12, !dbg !18938, !ctir !1725
  %5 = load i64, i64* %fts_level, align 8, !dbg !18938, !ctir !506
  %cmp = icmp sge i64 %5, 0, !dbg !18939
  br i1 %cmp, label %for.body, label %for.end, !dbg !18940

for.body:                                         ; preds = %for.cond
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18941
  store %struct._ftsent* %6, %struct._ftsent** %freep, align 8, !dbg !18943
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18944
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 2, !dbg !18945, !ctir !1725
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18945, !ctir !1729
  %cmp2 = icmp ne %struct._ftsent* %8, null, !dbg !18946
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !18944

cond.true:                                        ; preds = %for.body
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18947
  %fts_link3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 2, !dbg !18948, !ctir !1725
  %10 = load %struct._ftsent*, %struct._ftsent** %fts_link3, align 8, !dbg !18948, !ctir !1729
  br label %cond.end, !dbg !18944

cond.false:                                       ; preds = %for.body
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18949
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 1, !dbg !18950, !ctir !1725
  %12 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !18950, !ctir !1729
  br label %cond.end, !dbg !18944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !18944
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !18951
  %13 = load %struct._ftsent*, %struct._ftsent** %freep, align 8, !dbg !18952
  %14 = bitcast %struct._ftsent* %13 to i8*, !dbg !18952
  call void @free(i8* %14) #10, !dbg !18953
  br label %for.cond, !dbg !18954, !llvm.loop !18955

for.end:                                          ; preds = %for.cond
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18957
  %16 = bitcast %struct._ftsent* %15 to i8*, !dbg !18957
  call void @free(i8* %16) #10, !dbg !18958
  br label %if.end, !dbg !18959

if.end:                                           ; preds = %for.end, %entry
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18960
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 1, !dbg !18962, !ctir !1742
  %18 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !18962, !ctir !1729
  %tobool4 = icmp ne %struct._ftsent* %18, null, !dbg !18960
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !18963

if.then5:                                         ; preds = %if.end
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18964
  %fts_child6 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 1, !dbg !18965, !ctir !1742
  %20 = load %struct._ftsent*, %struct._ftsent** %fts_child6, align 8, !dbg !18965, !ctir !1729
  call void @fts_lfree(%struct._ftsent* %20), !dbg !18966
  br label %if.end7, !dbg !18966

if.end7:                                          ; preds = %if.then5, %if.end
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18967
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 2, !dbg !18968, !ctir !1742
  %22 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !18968, !ctir !1748
  %23 = bitcast %struct._ftsent** %22 to i8*, !dbg !18967
  call void @free(i8* %23) #10, !dbg !18969
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18970
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 4, !dbg !18971, !ctir !1742
  %25 = load i8*, i8** %fts_path, align 8, !dbg !18971, !ctir !9
  call void @free(i8* %25) #10, !dbg !18972
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18973
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !18973, !ctir !1742
  %27 = load i32, i32* %fts_options, align 8, !dbg !18973, !ctir !7
  %and = and i32 %27, 512, !dbg !18973
  %tobool8 = icmp ne i32 %and, 0, !dbg !18973
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !18975

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18976
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 6, !dbg !18979, !ctir !1742
  %29 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18979, !ctir !7
  %cmp10 = icmp sle i32 0, %29, !dbg !18980
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !18981

if.then11:                                        ; preds = %if.then9
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18982
  %fts_cwd_fd12 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 6, !dbg !18984, !ctir !1742
  %31 = load i32, i32* %fts_cwd_fd12, align 4, !dbg !18984, !ctir !7
  %call = call i32 @close(i32 %31), !dbg !18985
  %tobool13 = icmp ne i32 %call, 0, !dbg !18985
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !18986

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !18987
  %32 = load i32, i32* %call15, align 4, !dbg !18987, !ctir !7
  store i32 %32, i32* %saved_errno, align 4, !dbg !18988
  br label %if.end16, !dbg !18989

if.end16:                                         ; preds = %if.then14, %if.then11
  br label %if.end17, !dbg !18990

if.end17:                                         ; preds = %if.end16, %if.then9
  br label %if.end37, !dbg !18991

if.else:                                          ; preds = %if.end7
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18992
  %fts_options18 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 10, !dbg !18992, !ctir !1742
  %34 = load i32, i32* %fts_options18, align 8, !dbg !18992, !ctir !7
  %and19 = and i32 %34, 4, !dbg !18992
  %tobool20 = icmp ne i32 %and19, 0, !dbg !18992
  br i1 %tobool20, label %if.end36, label %if.then21, !dbg !18994

if.then21:                                        ; preds = %if.else
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18995
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 5, !dbg !18998, !ctir !1742
  %36 = load i32, i32* %fts_rfd, align 8, !dbg !18998, !ctir !7
  %call22 = call i32 @fchdir(i32 %36) #10, !dbg !18999
  %tobool23 = icmp ne i32 %call22, 0, !dbg !18999
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !19000

if.then24:                                        ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !19001
  %37 = load i32, i32* %call25, align 4, !dbg !19001, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !19002
  br label %if.end26, !dbg !19003

if.end26:                                         ; preds = %if.then24, %if.then21
  %38 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19004
  %fts_rfd27 = getelementptr inbounds %struct.FTS, %struct.FTS* %38, i32 0, i32 5, !dbg !19006, !ctir !1742
  %39 = load i32, i32* %fts_rfd27, align 8, !dbg !19006, !ctir !7
  %call28 = call i32 @close(i32 %39), !dbg !19007
  %tobool29 = icmp ne i32 %call28, 0, !dbg !19007
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !19008

if.then30:                                        ; preds = %if.end26
  %40 = load i32, i32* %saved_errno, align 4, !dbg !19009
  %cmp31 = icmp eq i32 %40, 0, !dbg !19011
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !19012

if.then32:                                        ; preds = %if.then30
  %call33 = call i32* @__errno_location() #15, !dbg !19013
  %41 = load i32, i32* %call33, align 4, !dbg !19013, !ctir !7
  store i32 %41, i32* %saved_errno, align 4, !dbg !19014
  br label %if.end34, !dbg !19015

if.end34:                                         ; preds = %if.then32, %if.then30
  br label %if.end35, !dbg !19016

if.end35:                                         ; preds = %if.end34, %if.end26
  br label %if.end36, !dbg !19017

if.end36:                                         ; preds = %if.end35, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end17
  %42 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19018
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 13, !dbg !19019, !ctir !1742
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !19020
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19021
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 11, !dbg !19023, !ctir !1742
  %44 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !19023, !ctir !1136
  %tobool38 = icmp ne %struct.hash_table* %44, null, !dbg !19021
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !19024

if.then39:                                        ; preds = %if.end37
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19025
  %fts_leaf_optimization_works_ht40 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 11, !dbg !19026, !ctir !1742
  %46 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht40, align 8, !dbg !19026, !ctir !1136
  call void @hash_free(%struct.hash_table* %46), !dbg !19027
  br label %if.end41, !dbg !19027

if.end41:                                         ; preds = %if.then39, %if.end37
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19028
  call void @free_dir(%struct.FTS* %47), !dbg !19029
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19030
  %49 = bitcast %struct.FTS* %48 to i8*, !dbg !19030
  call void @free(i8* %49) #10, !dbg !19031
  %50 = load i32, i32* %saved_errno, align 4, !dbg !19032
  %tobool42 = icmp ne i32 %50, 0, !dbg !19032
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !19034

if.then43:                                        ; preds = %if.end41
  %51 = load i32, i32* %saved_errno, align 4, !dbg !19035
  %call44 = call i32* @__errno_location() #15, !dbg !19035
  store i32 %51, i32* %call44, align 4, !dbg !19035, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !19037
  br label %return, !dbg !19037

if.end45:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !19038
  br label %return, !dbg !19038

return:                                           ; preds = %if.end45, %if.then43
  %52 = load i32, i32* %retval, align 4, !dbg !19039
  ret i32 %52, !dbg !19039
}

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fd_ring_clear(%struct.I_ring* %fd_ring) #4 !dbg !19040 {
entry:
  %fd_ring.addr = alloca %struct.I_ring*, align 8
  %fd = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %fd_ring, %struct.I_ring** %fd_ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %fd_ring.addr, metadata !19044, metadata !DIExpression()), !dbg !19045
  br label %while.cond, !dbg !19046

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19047
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !19048
  %lnot = xor i1 %call, true, !dbg !19049
  br i1 %lnot, label %while.body, label %while.end, !dbg !19046

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19050, metadata !DIExpression()), !dbg !19052
  %1 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19053
  %call1 = call i32 @i_ring_pop(%struct.I_ring* %1), !dbg !19054
  store i32 %call1, i32* %fd, align 4, !dbg !19052
  %2 = load i32, i32* %fd, align 4, !dbg !19055
  %cmp = icmp sle i32 0, %2, !dbg !19057
  br i1 %cmp, label %if.then, label %if.end, !dbg !19058

if.then:                                          ; preds = %while.body
  %3 = load i32, i32* %fd, align 4, !dbg !19059
  %call2 = call i32 @close(i32 %3), !dbg !19060
  br label %if.end, !dbg !19060

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !19046, !llvm.loop !19061

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19063
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_dir(%struct.FTS* %sp) #4 !dbg !19064 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19067, metadata !DIExpression()), !dbg !19068
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19069
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19071, !ctir !1742
  %1 = load i32, i32* %fts_options, align 8, !dbg !19071, !ctir !7
  %and = and i32 %1, 258, !dbg !19072
  %tobool = icmp ne i32 %and, 0, !dbg !19072
  br i1 %tobool, label %if.then, label %if.else, !dbg !19073

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19074
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !19077, !ctir !1742
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19078
  %3 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !19078, !ctir !1765
  %tobool1 = icmp ne %struct.hash_table* %3, null, !dbg !19074
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !19079

if.then2:                                         ; preds = %if.then
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19080
  %fts_cycle3 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 12, !dbg !19081, !ctir !1742
  %ht4 = bitcast %union.anon* %fts_cycle3 to %struct.hash_table**, !dbg !19082
  %5 = load %struct.hash_table*, %struct.hash_table** %ht4, align 8, !dbg !19082, !ctir !1765
  call void @hash_free(%struct.hash_table* %5), !dbg !19083
  br label %if.end, !dbg !19083

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !19084

if.else:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19085
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !19086, !ctir !1742
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !19087
  %7 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !19087, !ctir !1765
  %8 = bitcast %struct.cycle_check_state* %7 to i8*, !dbg !19085
  call void @free(i8* %8) #10, !dbg !19088
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !19089
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_read(%struct.FTS* %sp) #4 !dbg !19090 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %tmp = alloca %struct._ftsent*, align 8, !ctir !1819
  %instr = alloca i16, align 2, !ctir !33
  %t = alloca i8*, align 8, !ctir !9
  %parent = alloca %struct._ftsent*, align 8, !ctir !1819
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19093, metadata !DIExpression()), !dbg !19094
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19095, metadata !DIExpression()), !dbg !19096
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !19097, metadata !DIExpression()), !dbg !19098
  call void @llvm.dbg.declare(metadata i16* %instr, metadata !19099, metadata !DIExpression()), !dbg !19100
  call void @llvm.dbg.declare(metadata i8** %t, metadata !19101, metadata !DIExpression()), !dbg !19102
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19103
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19105, !ctir !1742
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19105, !ctir !1729
  %cmp = icmp eq %struct._ftsent* %1, null, !dbg !19106
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19107

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19108
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !19108, !ctir !1742
  %3 = load i32, i32* %fts_options, align 8, !dbg !19108, !ctir !7
  %and = and i32 %3, 8192, !dbg !19108
  %tobool = icmp ne i32 %and, 0, !dbg !19108
  br i1 %tobool, label %if.then, label %if.end, !dbg !19109

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19110
  br label %return, !dbg !19110

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19111
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 0, !dbg !19112, !ctir !1742
  %5 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !19112, !ctir !1729
  store %struct._ftsent* %5, %struct._ftsent** %p, align 8, !dbg !19113
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19114
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !19115, !ctir !1725
  %7 = load i16, i16* %fts_instr, align 4, !dbg !19115, !ctir !33
  store i16 %7, i16* %instr, align 2, !dbg !19116
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19117
  %fts_instr2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 17, !dbg !19118, !ctir !1725
  store i16 3, i16* %fts_instr2, align 4, !dbg !19119, !ctir !33
  %9 = load i16, i16* %instr, align 2, !dbg !19120
  %conv = zext i16 %9 to i32, !dbg !19120
  %cmp3 = icmp eq i32 %conv, 1, !dbg !19122
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !19123

if.then5:                                         ; preds = %if.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19124
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19126
  %call = call zeroext i16 @fts_stat(%struct.FTS* %10, %struct._ftsent* %11, i1 zeroext false), !dbg !19127
  %12 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19128
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 15, !dbg !19129, !ctir !1725
  store i16 %call, i16* %fts_info, align 8, !dbg !19130, !ctir !33
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19131
  store %struct._ftsent* %13, %struct._ftsent** %retval, align 8, !dbg !19132
  br label %return, !dbg !19132

if.end6:                                          ; preds = %if.end
  %14 = load i16, i16* %instr, align 2, !dbg !19133
  %conv7 = zext i16 %14 to i32, !dbg !19133
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !19135
  br i1 %cmp8, label %land.lhs.true, label %if.end41, !dbg !19136

land.lhs.true:                                    ; preds = %if.end6
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19137
  %fts_info10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 15, !dbg !19138, !ctir !1725
  %16 = load i16, i16* %fts_info10, align 8, !dbg !19138, !ctir !33
  %conv11 = zext i16 %16 to i32, !dbg !19137
  %cmp12 = icmp eq i32 %conv11, 12, !dbg !19139
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14, !dbg !19140

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19141
  %fts_info15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 15, !dbg !19142, !ctir !1725
  %18 = load i16, i16* %fts_info15, align 8, !dbg !19142, !ctir !33
  %conv16 = zext i16 %18 to i32, !dbg !19141
  %cmp17 = icmp eq i32 %conv16, 13, !dbg !19143
  br i1 %cmp17, label %if.then19, label %if.end41, !dbg !19144

if.then19:                                        ; preds = %lor.lhs.false14, %land.lhs.true
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19145
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19147
  %call20 = call zeroext i16 @fts_stat(%struct.FTS* %19, %struct._ftsent* %20, i1 zeroext true), !dbg !19148
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19149
  %fts_info21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 15, !dbg !19150, !ctir !1725
  store i16 %call20, i16* %fts_info21, align 8, !dbg !19151, !ctir !33
  %22 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19152
  %fts_info22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 15, !dbg !19154, !ctir !1725
  %23 = load i16, i16* %fts_info22, align 8, !dbg !19154, !ctir !33
  %conv23 = zext i16 %23 to i32, !dbg !19152
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !19155
  br i1 %cmp24, label %land.lhs.true26, label %if.end40, !dbg !19156

land.lhs.true26:                                  ; preds = %if.then19
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19157
  %fts_options27 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !19157, !ctir !1742
  %25 = load i32, i32* %fts_options27, align 8, !dbg !19157, !ctir !7
  %and28 = and i32 %25, 4, !dbg !19157
  %tobool29 = icmp ne i32 %and28, 0, !dbg !19157
  br i1 %tobool29, label %if.end40, label %if.then30, !dbg !19158

if.then30:                                        ; preds = %land.lhs.true26
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19159
  %call31 = call i32 @diropen(%struct.FTS* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !19162
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19163
  %fts_symfd = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 9, !dbg !19164, !ctir !1725
  store i32 %call31, i32* %fts_symfd, align 4, !dbg !19165, !ctir !7
  %cmp32 = icmp slt i32 %call31, 0, !dbg !19166
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !19167

if.then34:                                        ; preds = %if.then30
  %call35 = call i32* @__errno_location() #15, !dbg !19168
  %28 = load i32, i32* %call35, align 4, !dbg !19168, !ctir !7
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19170
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 8, !dbg !19171, !ctir !1725
  store i32 %28, i32* %fts_errno, align 8, !dbg !19172, !ctir !7
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19173
  %fts_info36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 15, !dbg !19174, !ctir !1725
  store i16 7, i16* %fts_info36, align 8, !dbg !19175, !ctir !33
  br label %if.end39, !dbg !19176

if.else:                                          ; preds = %if.then30
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19177
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 16, !dbg !19178, !ctir !1725
  %32 = load i16, i16* %fts_flags, align 2, !dbg !19179, !ctir !33
  %conv37 = zext i16 %32 to i32, !dbg !19179
  %or = or i32 %conv37, 2, !dbg !19179
  %conv38 = trunc i32 %or to i16, !dbg !19179
  store i16 %conv38, i16* %fts_flags, align 2, !dbg !19179, !ctir !33
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then34
  br label %if.end40, !dbg !19180

if.end40:                                         ; preds = %if.end39, %land.lhs.true26, %if.then19
  br label %check_for_dir, !dbg !19181

if.end41:                                         ; preds = %lor.lhs.false14, %if.end6
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19182
  %fts_info42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 15, !dbg !19184, !ctir !1725
  %34 = load i16, i16* %fts_info42, align 8, !dbg !19184, !ctir !33
  %conv43 = zext i16 %34 to i32, !dbg !19182
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !19185
  br i1 %cmp44, label %if.then46, label %if.end132, !dbg !19186

if.then46:                                        ; preds = %if.end41
  %35 = load i16, i16* %instr, align 2, !dbg !19187
  %conv47 = zext i16 %35 to i32, !dbg !19187
  %cmp48 = icmp eq i32 %conv47, 4, !dbg !19190
  br i1 %cmp48, label %if.then57, label %lor.lhs.false50, !dbg !19191

lor.lhs.false50:                                  ; preds = %if.then46
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19192
  %fts_options51 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !19192, !ctir !1742
  %37 = load i32, i32* %fts_options51, align 8, !dbg !19192, !ctir !7
  %and52 = and i32 %37, 64, !dbg !19192
  %tobool53 = icmp ne i32 %and52, 0, !dbg !19192
  br i1 %tobool53, label %land.lhs.true54, label %if.end72, !dbg !19193

land.lhs.true54:                                  ; preds = %lor.lhs.false50
  %38 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19194
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 18, !dbg !19195, !ctir !1725
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19196, !ctir !1796
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !19196, !ctir !1797
  %39 = load i64, i64* %st_dev, align 8, !dbg !19196, !ctir !263
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19197
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 3, !dbg !19198, !ctir !1742
  %41 = load i64, i64* %fts_dev, align 8, !dbg !19198, !ctir !262
  %cmp55 = icmp ne i64 %39, %41, !dbg !19199
  br i1 %cmp55, label %if.then57, label %if.end72, !dbg !19200

if.then57:                                        ; preds = %land.lhs.true54, %if.then46
  %42 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19201
  %fts_flags58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !19204, !ctir !1725
  %43 = load i16, i16* %fts_flags58, align 2, !dbg !19204, !ctir !33
  %conv59 = zext i16 %43 to i32, !dbg !19201
  %and60 = and i32 %conv59, 2, !dbg !19205
  %tobool61 = icmp ne i32 %and60, 0, !dbg !19205
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !19206

if.then62:                                        ; preds = %if.then57
  %44 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19207
  %fts_symfd63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 9, !dbg !19208, !ctir !1725
  %45 = load i32, i32* %fts_symfd63, align 4, !dbg !19208, !ctir !7
  %call64 = call i32 @close(i32 %45), !dbg !19209
  br label %if.end65, !dbg !19210

if.end65:                                         ; preds = %if.then62, %if.then57
  %46 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19211
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %46, i32 0, i32 1, !dbg !19213, !ctir !1742
  %47 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !19213, !ctir !1729
  %tobool66 = icmp ne %struct._ftsent* %47, null, !dbg !19211
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !19214

if.then67:                                        ; preds = %if.end65
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19215
  %fts_child68 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 1, !dbg !19217, !ctir !1742
  %49 = load %struct._ftsent*, %struct._ftsent** %fts_child68, align 8, !dbg !19217, !ctir !1729
  call void @fts_lfree(%struct._ftsent* %49), !dbg !19218
  %50 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19219
  %fts_child69 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !19220, !ctir !1742
  store %struct._ftsent* null, %struct._ftsent** %fts_child69, align 8, !dbg !19221, !ctir !1729
  br label %if.end70, !dbg !19222

if.end70:                                         ; preds = %if.then67, %if.end65
  %51 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19223
  %fts_info71 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 15, !dbg !19224, !ctir !1725
  store i16 6, i16* %fts_info71, align 8, !dbg !19225, !ctir !33
  br label %do.body, !dbg !19226

do.body:                                          ; preds = %if.end70
  %52 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19227
  %53 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19227
  call void @leave_dir(%struct.FTS* %52, %struct._ftsent* %53), !dbg !19227
  br label %do.end, !dbg !19227

do.end:                                           ; preds = %do.body
  %54 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19229
  store %struct._ftsent* %54, %struct._ftsent** %retval, align 8, !dbg !19230
  br label %return, !dbg !19230

if.end72:                                         ; preds = %land.lhs.true54, %lor.lhs.false50
  %55 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19231
  %fts_child73 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 1, !dbg !19233, !ctir !1742
  %56 = load %struct._ftsent*, %struct._ftsent** %fts_child73, align 8, !dbg !19233, !ctir !1729
  %cmp74 = icmp ne %struct._ftsent* %56, null, !dbg !19234
  br i1 %cmp74, label %land.lhs.true76, label %if.end85, !dbg !19235

land.lhs.true76:                                  ; preds = %if.end72
  %57 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19236
  %fts_options77 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !19236, !ctir !1742
  %58 = load i32, i32* %fts_options77, align 8, !dbg !19236, !ctir !7
  %and78 = and i32 %58, 4096, !dbg !19236
  %tobool79 = icmp ne i32 %and78, 0, !dbg !19236
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !19237

if.then80:                                        ; preds = %land.lhs.true76
  %59 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19238
  %fts_options81 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !19238, !ctir !1742
  %60 = load i32, i32* %fts_options81, align 8, !dbg !19238, !ctir !7
  %and82 = and i32 %60, -4097, !dbg !19238
  store i32 %and82, i32* %fts_options81, align 8, !dbg !19238, !ctir !7
  %61 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19240
  %fts_child83 = getelementptr inbounds %struct.FTS, %struct.FTS* %61, i32 0, i32 1, !dbg !19241, !ctir !1742
  %62 = load %struct._ftsent*, %struct._ftsent** %fts_child83, align 8, !dbg !19241, !ctir !1729
  call void @fts_lfree(%struct._ftsent* %62), !dbg !19242
  %63 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19243
  %fts_child84 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 1, !dbg !19244, !ctir !1742
  store %struct._ftsent* null, %struct._ftsent** %fts_child84, align 8, !dbg !19245, !ctir !1729
  br label %if.end85, !dbg !19246

if.end85:                                         ; preds = %if.then80, %land.lhs.true76, %if.end72
  %64 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19247
  %fts_child86 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 1, !dbg !19249, !ctir !1742
  %65 = load %struct._ftsent*, %struct._ftsent** %fts_child86, align 8, !dbg !19249, !ctir !1729
  %cmp87 = icmp ne %struct._ftsent* %65, null, !dbg !19250
  br i1 %cmp87, label %if.then89, label %if.else105, !dbg !19251

if.then89:                                        ; preds = %if.end85
  %66 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19252
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19255
  %68 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19256
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 6, !dbg !19257, !ctir !1725
  %69 = load i8*, i8** %fts_accpath, align 8, !dbg !19257, !ctir !9
  %call90 = call i32 @fts_safe_changedir(%struct.FTS* %66, %struct._ftsent* %67, i32 -1, i8* %69), !dbg !19258
  %tobool91 = icmp ne i32 %call90, 0, !dbg !19258
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !19259

if.then92:                                        ; preds = %if.then89
  %call93 = call i32* @__errno_location() #15, !dbg !19260
  %70 = load i32, i32* %call93, align 4, !dbg !19260, !ctir !7
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19262
  %fts_errno94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %71, i32 0, i32 8, !dbg !19263, !ctir !1725
  store i32 %70, i32* %fts_errno94, align 8, !dbg !19264, !ctir !7
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19265
  %fts_flags95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 16, !dbg !19266, !ctir !1725
  %73 = load i16, i16* %fts_flags95, align 2, !dbg !19267, !ctir !33
  %conv96 = zext i16 %73 to i32, !dbg !19267
  %or97 = or i32 %conv96, 1, !dbg !19267
  %conv98 = trunc i32 %or97 to i16, !dbg !19267
  store i16 %conv98, i16* %fts_flags95, align 2, !dbg !19267, !ctir !33
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19268
  %fts_child99 = getelementptr inbounds %struct.FTS, %struct.FTS* %74, i32 0, i32 1, !dbg !19270, !ctir !1742
  %75 = load %struct._ftsent*, %struct._ftsent** %fts_child99, align 8, !dbg !19270, !ctir !1729
  store %struct._ftsent* %75, %struct._ftsent** %p, align 8, !dbg !19271
  br label %for.cond, !dbg !19272

for.cond:                                         ; preds = %for.inc, %if.then92
  %76 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19273
  %cmp100 = icmp ne %struct._ftsent* %76, null, !dbg !19275
  br i1 %cmp100, label %for.body, label %for.end, !dbg !19276

for.body:                                         ; preds = %for.cond
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19277
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %77, i32 0, i32 1, !dbg !19278, !ctir !1725
  %78 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19278, !ctir !1729
  %fts_accpath102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 6, !dbg !19279, !ctir !1726
  %79 = load i8*, i8** %fts_accpath102, align 8, !dbg !19279, !ctir !9
  %80 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19280
  %fts_accpath103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !19281, !ctir !1725
  store i8* %79, i8** %fts_accpath103, align 8, !dbg !19282, !ctir !9
  br label %for.inc, !dbg !19280

for.inc:                                          ; preds = %for.body
  %81 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19283
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 2, !dbg !19284, !ctir !1725
  %82 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19284, !ctir !1729
  store %struct._ftsent* %82, %struct._ftsent** %p, align 8, !dbg !19285
  br label %for.cond, !dbg !19286, !llvm.loop !19287

for.end:                                          ; preds = %for.cond
  br label %if.end104, !dbg !19289

if.end104:                                        ; preds = %for.end, %if.then89
  br label %if.end129, !dbg !19290

if.else105:                                       ; preds = %if.end85
  %83 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19291
  %call106 = call %struct._ftsent* @fts_build(%struct.FTS* %83, i32 3), !dbg !19293
  %84 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19294
  %fts_child107 = getelementptr inbounds %struct.FTS, %struct.FTS* %84, i32 0, i32 1, !dbg !19295, !ctir !1742
  store %struct._ftsent* %call106, %struct._ftsent** %fts_child107, align 8, !dbg !19296, !ctir !1729
  %cmp108 = icmp eq %struct._ftsent* %call106, null, !dbg !19297
  br i1 %cmp108, label %if.then110, label %if.end128, !dbg !19298

if.then110:                                       ; preds = %if.else105
  %85 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19299
  %fts_options111 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 10, !dbg !19299, !ctir !1742
  %86 = load i32, i32* %fts_options111, align 8, !dbg !19299, !ctir !7
  %and112 = and i32 %86, 8192, !dbg !19299
  %tobool113 = icmp ne i32 %and112, 0, !dbg !19299
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !19302

if.then114:                                       ; preds = %if.then110
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19303
  br label %return, !dbg !19303

if.end115:                                        ; preds = %if.then110
  %87 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19304
  %fts_errno116 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 8, !dbg !19306, !ctir !1725
  %88 = load i32, i32* %fts_errno116, align 8, !dbg !19306, !ctir !7
  %tobool117 = icmp ne i32 %88, 0, !dbg !19304
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !19307

land.lhs.true118:                                 ; preds = %if.end115
  %89 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19308
  %fts_info119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 15, !dbg !19309, !ctir !1725
  %90 = load i16, i16* %fts_info119, align 8, !dbg !19309, !ctir !33
  %conv120 = zext i16 %90 to i32, !dbg !19308
  %cmp121 = icmp ne i32 %conv120, 4, !dbg !19310
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !19311

if.then123:                                       ; preds = %land.lhs.true118
  %91 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19312
  %fts_info124 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !19313, !ctir !1725
  store i16 7, i16* %fts_info124, align 8, !dbg !19314, !ctir !33
  br label %if.end125, !dbg !19312

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end115
  br label %do.body126, !dbg !19315

do.body126:                                       ; preds = %if.end125
  %92 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19316
  %93 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19316
  call void @leave_dir(%struct.FTS* %92, %struct._ftsent* %93), !dbg !19316
  br label %do.end127, !dbg !19316

do.end127:                                        ; preds = %do.body126
  %94 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19318
  store %struct._ftsent* %94, %struct._ftsent** %retval, align 8, !dbg !19319
  br label %return, !dbg !19319

if.end128:                                        ; preds = %if.else105
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end104
  %95 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19320
  %fts_child130 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 1, !dbg !19321, !ctir !1742
  %96 = load %struct._ftsent*, %struct._ftsent** %fts_child130, align 8, !dbg !19321, !ctir !1729
  store %struct._ftsent* %96, %struct._ftsent** %p, align 8, !dbg !19322
  %97 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19323
  %fts_child131 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 1, !dbg !19324, !ctir !1742
  store %struct._ftsent* null, %struct._ftsent** %fts_child131, align 8, !dbg !19325, !ctir !1729
  br label %name, !dbg !19326

if.end132:                                        ; preds = %if.end41
  br label %next, !dbg !19327

next:                                             ; preds = %if.then173, %if.end132
  call void @llvm.dbg.label(metadata !19328), !dbg !19329
  %98 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19330
  store %struct._ftsent* %98, %struct._ftsent** %tmp, align 8, !dbg !19331
  %99 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19332
  %fts_link133 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 2, !dbg !19334, !ctir !1725
  %100 = load %struct._ftsent*, %struct._ftsent** %fts_link133, align 8, !dbg !19334, !ctir !1729
  %cmp134 = icmp eq %struct._ftsent* %100, null, !dbg !19335
  br i1 %cmp134, label %land.lhs.true136, label %if.end152, !dbg !19336

land.lhs.true136:                                 ; preds = %next
  %101 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19337
  %fts_parent137 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 1, !dbg !19338, !ctir !1725
  %102 = load %struct._ftsent*, %struct._ftsent** %fts_parent137, align 8, !dbg !19338, !ctir !1729
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 3, !dbg !19339, !ctir !1726
  %103 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19339, !ctir !541
  %tobool138 = icmp ne %struct.__dirstream* %103, null, !dbg !19337
  br i1 %tobool138, label %if.then139, label %if.end152, !dbg !19340

if.then139:                                       ; preds = %land.lhs.true136
  %104 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19341
  %fts_parent140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %104, i32 0, i32 1, !dbg !19343, !ctir !1725
  %105 = load %struct._ftsent*, %struct._ftsent** %fts_parent140, align 8, !dbg !19343, !ctir !1729
  store %struct._ftsent* %105, %struct._ftsent** %p, align 8, !dbg !19344
  %106 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19345
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19346
  %fts_cur141 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 0, !dbg !19347, !ctir !1742
  store %struct._ftsent* %106, %struct._ftsent** %fts_cur141, align 8, !dbg !19348, !ctir !1729
  %108 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19349
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !19350, !ctir !1742
  %109 = load i8*, i8** %fts_path, align 8, !dbg !19350, !ctir !9
  %110 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19351
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 10, !dbg !19352, !ctir !1725
  %111 = load i64, i64* %fts_pathlen, align 8, !dbg !19352, !ctir !55
  %arrayidx = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !19349, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !19353
  %112 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19354
  %call142 = call %struct._ftsent* @fts_build(%struct.FTS* %112, i32 3), !dbg !19356
  store %struct._ftsent* %call142, %struct._ftsent** %p, align 8, !dbg !19357
  %cmp143 = icmp eq %struct._ftsent* %call142, null, !dbg !19358
  br i1 %cmp143, label %if.then145, label %if.end151, !dbg !19359

if.then145:                                       ; preds = %if.then139
  %113 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19360
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %113, i32 0, i32 10, !dbg !19360, !ctir !1742
  %114 = load i32, i32* %fts_options146, align 8, !dbg !19360, !ctir !7
  %and147 = and i32 %114, 8192, !dbg !19360
  %tobool148 = icmp ne i32 %and147, 0, !dbg !19360
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !19363

if.then149:                                       ; preds = %if.then145
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19364
  br label %return, !dbg !19364

if.end150:                                        ; preds = %if.then145
  br label %cd_dot_dot, !dbg !19365

if.end151:                                        ; preds = %if.then139
  %115 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19366
  %116 = bitcast %struct._ftsent* %115 to i8*, !dbg !19366
  call void @free(i8* %116) #10, !dbg !19367
  br label %name, !dbg !19368

if.end152:                                        ; preds = %land.lhs.true136, %next
  %117 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19369
  %fts_link153 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %117, i32 0, i32 2, !dbg !19371, !ctir !1725
  %118 = load %struct._ftsent*, %struct._ftsent** %fts_link153, align 8, !dbg !19371, !ctir !1729
  store %struct._ftsent* %118, %struct._ftsent** %p, align 8, !dbg !19372
  %cmp154 = icmp ne %struct._ftsent* %118, null, !dbg !19373
  br i1 %cmp154, label %if.then156, label %if.end305, !dbg !19374

if.then156:                                       ; preds = %if.end152
  %119 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19375
  %120 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19377
  %fts_cur157 = getelementptr inbounds %struct.FTS, %struct.FTS* %120, i32 0, i32 0, !dbg !19378, !ctir !1742
  store %struct._ftsent* %119, %struct._ftsent** %fts_cur157, align 8, !dbg !19379, !ctir !1729
  %121 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19380
  %122 = bitcast %struct._ftsent* %121 to i8*, !dbg !19380
  call void @free(i8* %122) #10, !dbg !19381
  %123 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19382
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %123, i32 0, i32 12, !dbg !19384, !ctir !1725
  %124 = load i64, i64* %fts_level, align 8, !dbg !19384, !ctir !506
  %cmp158 = icmp eq i64 %124, 0, !dbg !19385
  br i1 %cmp158, label %if.then160, label %if.end168, !dbg !19386

if.then160:                                       ; preds = %if.then156
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19387
  %call161 = call i32 @restore_initial_cwd(%struct.FTS* %125), !dbg !19390
  %tobool162 = icmp ne i32 %call161, 0, !dbg !19390
  br i1 %tobool162, label %if.then163, label %if.end166, !dbg !19391

if.then163:                                       ; preds = %if.then160
  %126 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19392
  %fts_options164 = getelementptr inbounds %struct.FTS, %struct.FTS* %126, i32 0, i32 10, !dbg !19392, !ctir !1742
  %127 = load i32, i32* %fts_options164, align 8, !dbg !19392, !ctir !7
  %or165 = or i32 %127, 8192, !dbg !19392
  store i32 %or165, i32* %fts_options164, align 8, !dbg !19392, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19394
  br label %return, !dbg !19394

if.end166:                                        ; preds = %if.then160
  %128 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19395
  call void @free_dir(%struct.FTS* %128), !dbg !19396
  %129 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19397
  %130 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19398
  call void @fts_load(%struct.FTS* %129, %struct._ftsent* %130), !dbg !19399
  %131 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19400
  %call167 = call zeroext i1 @setup_dir(%struct.FTS* %131), !dbg !19401
  br label %check_for_dir, !dbg !19402

if.end168:                                        ; preds = %if.then156
  %132 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19403
  %fts_instr169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %132, i32 0, i32 17, !dbg !19405, !ctir !1725
  %133 = load i16, i16* %fts_instr169, align 4, !dbg !19405, !ctir !33
  %conv170 = zext i16 %133 to i32, !dbg !19403
  %cmp171 = icmp eq i32 %conv170, 4, !dbg !19406
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !19407

if.then173:                                       ; preds = %if.end168
  br label %next, !dbg !19408

if.end174:                                        ; preds = %if.end168
  %134 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19409
  %fts_instr175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %134, i32 0, i32 17, !dbg !19411, !ctir !1725
  %135 = load i16, i16* %fts_instr175, align 4, !dbg !19411, !ctir !33
  %conv176 = zext i16 %135 to i32, !dbg !19409
  %cmp177 = icmp eq i32 %conv176, 2, !dbg !19412
  br i1 %cmp177, label %if.then179, label %if.end207, !dbg !19413

if.then179:                                       ; preds = %if.end174
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19414
  %137 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19416
  %call180 = call zeroext i16 @fts_stat(%struct.FTS* %136, %struct._ftsent* %137, i1 zeroext true), !dbg !19417
  %138 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19418
  %fts_info181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 15, !dbg !19419, !ctir !1725
  store i16 %call180, i16* %fts_info181, align 8, !dbg !19420, !ctir !33
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19421
  %fts_info182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %139, i32 0, i32 15, !dbg !19423, !ctir !1725
  %140 = load i16, i16* %fts_info182, align 8, !dbg !19423, !ctir !33
  %conv183 = zext i16 %140 to i32, !dbg !19421
  %cmp184 = icmp eq i32 %conv183, 1, !dbg !19424
  br i1 %cmp184, label %land.lhs.true186, label %if.end205, !dbg !19425

land.lhs.true186:                                 ; preds = %if.then179
  %141 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19426
  %fts_options187 = getelementptr inbounds %struct.FTS, %struct.FTS* %141, i32 0, i32 10, !dbg !19426, !ctir !1742
  %142 = load i32, i32* %fts_options187, align 8, !dbg !19426, !ctir !7
  %and188 = and i32 %142, 4, !dbg !19426
  %tobool189 = icmp ne i32 %and188, 0, !dbg !19426
  br i1 %tobool189, label %if.end205, label %if.then190, !dbg !19427

if.then190:                                       ; preds = %land.lhs.true186
  %143 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19428
  %call191 = call i32 @diropen(%struct.FTS* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !19431
  %144 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19432
  %fts_symfd192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %144, i32 0, i32 9, !dbg !19433, !ctir !1725
  store i32 %call191, i32* %fts_symfd192, align 4, !dbg !19434, !ctir !7
  %cmp193 = icmp slt i32 %call191, 0, !dbg !19435
  br i1 %cmp193, label %if.then195, label %if.else199, !dbg !19436

if.then195:                                       ; preds = %if.then190
  %call196 = call i32* @__errno_location() #15, !dbg !19437
  %145 = load i32, i32* %call196, align 4, !dbg !19437, !ctir !7
  %146 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19439
  %fts_errno197 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 8, !dbg !19440, !ctir !1725
  store i32 %145, i32* %fts_errno197, align 8, !dbg !19441, !ctir !7
  %147 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19442
  %fts_info198 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %147, i32 0, i32 15, !dbg !19443, !ctir !1725
  store i16 7, i16* %fts_info198, align 8, !dbg !19444, !ctir !33
  br label %if.end204, !dbg !19445

if.else199:                                       ; preds = %if.then190
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19446
  %fts_flags200 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %148, i32 0, i32 16, !dbg !19447, !ctir !1725
  %149 = load i16, i16* %fts_flags200, align 2, !dbg !19448, !ctir !33
  %conv201 = zext i16 %149 to i32, !dbg !19448
  %or202 = or i32 %conv201, 2, !dbg !19448
  %conv203 = trunc i32 %or202 to i16, !dbg !19448
  store i16 %conv203, i16* %fts_flags200, align 2, !dbg !19448, !ctir !33
  br label %if.end204

if.end204:                                        ; preds = %if.else199, %if.then195
  br label %if.end205, !dbg !19449

if.end205:                                        ; preds = %if.end204, %land.lhs.true186, %if.then179
  %150 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19450
  %fts_instr206 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %150, i32 0, i32 17, !dbg !19451, !ctir !1725
  store i16 3, i16* %fts_instr206, align 4, !dbg !19452, !ctir !33
  br label %if.end207, !dbg !19453

if.end207:                                        ; preds = %if.end205, %if.end174
  br label %name, !dbg !19454

name:                                             ; preds = %if.end207, %if.end151, %if.end129
  call void @llvm.dbg.label(metadata !19455), !dbg !19456
  %151 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19457
  %fts_path208 = getelementptr inbounds %struct.FTS, %struct.FTS* %151, i32 0, i32 4, !dbg !19458, !ctir !1742
  %152 = load i8*, i8** %fts_path208, align 8, !dbg !19458, !ctir !9
  %153 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19459
  %fts_parent209 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 1, !dbg !19459, !ctir !1725
  %154 = load %struct._ftsent*, %struct._ftsent** %fts_parent209, align 8, !dbg !19459, !ctir !1729
  %fts_path210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 7, !dbg !19459, !ctir !1726
  %155 = load i8*, i8** %fts_path210, align 8, !dbg !19459, !ctir !9
  %156 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19459
  %fts_parent211 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %156, i32 0, i32 1, !dbg !19459, !ctir !1725
  %157 = load %struct._ftsent*, %struct._ftsent** %fts_parent211, align 8, !dbg !19459, !ctir !1729
  %fts_pathlen212 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %157, i32 0, i32 10, !dbg !19459, !ctir !1726
  %158 = load i64, i64* %fts_pathlen212, align 8, !dbg !19459, !ctir !55
  %sub = sub i64 %158, 1, !dbg !19459
  %arrayidx213 = getelementptr inbounds i8, i8* %155, i64 %sub, !dbg !19459, !ctir !9
  %159 = load i8, i8* %arrayidx213, align 1, !dbg !19459
  %conv214 = sext i8 %159 to i32, !dbg !19459
  %cmp215 = icmp eq i32 %conv214, 47, !dbg !19459
  br i1 %cmp215, label %cond.true, label %cond.false, !dbg !19459

cond.true:                                        ; preds = %name
  %160 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19459
  %fts_parent217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %160, i32 0, i32 1, !dbg !19459, !ctir !1725
  %161 = load %struct._ftsent*, %struct._ftsent** %fts_parent217, align 8, !dbg !19459, !ctir !1729
  %fts_pathlen218 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 10, !dbg !19459, !ctir !1726
  %162 = load i64, i64* %fts_pathlen218, align 8, !dbg !19459, !ctir !55
  %sub219 = sub i64 %162, 1, !dbg !19459
  br label %cond.end, !dbg !19459

cond.false:                                       ; preds = %name
  %163 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19459
  %fts_parent220 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %163, i32 0, i32 1, !dbg !19459, !ctir !1725
  %164 = load %struct._ftsent*, %struct._ftsent** %fts_parent220, align 8, !dbg !19459, !ctir !1729
  %fts_pathlen221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %164, i32 0, i32 10, !dbg !19459, !ctir !1726
  %165 = load i64, i64* %fts_pathlen221, align 8, !dbg !19459, !ctir !55
  br label %cond.end, !dbg !19459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub219, %cond.true ], [ %165, %cond.false ], !dbg !19459
  %add.ptr = getelementptr inbounds i8, i8* %152, i64 %cond, !dbg !19460, !ctir !10
  store i8* %add.ptr, i8** %t, align 8, !dbg !19461
  %166 = load i8*, i8** %t, align 8, !dbg !19462
  %incdec.ptr = getelementptr inbounds i8, i8* %166, i32 1, !dbg !19462, !ctir !10
  store i8* %incdec.ptr, i8** %t, align 8, !dbg !19462
  store i8 47, i8* %166, align 1, !dbg !19463, !ctir !10
  %167 = load i8*, i8** %t, align 8, !dbg !19464
  %168 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19465
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 19, !dbg !19466, !ctir !1725
  %arraydecay222 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !19467, !ctir !1115
  %169 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19468
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %169, i32 0, i32 13, !dbg !19469, !ctir !1725
  %170 = load i64, i64* %fts_namelen, align 8, !dbg !19469, !ctir !55
  %add = add i64 %170, 1, !dbg !19470
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %167, i8* align 8 %arraydecay222, i64 %add, i1 false), !dbg !19467
  br label %check_for_dir, !dbg !19467

check_for_dir:                                    ; preds = %cond.end, %if.end166, %if.end40
  call void @llvm.dbg.label(metadata !19471), !dbg !19472
  %171 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19473
  %172 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19474
  %fts_cur223 = getelementptr inbounds %struct.FTS, %struct.FTS* %172, i32 0, i32 0, !dbg !19475, !ctir !1742
  store %struct._ftsent* %171, %struct._ftsent** %fts_cur223, align 8, !dbg !19476, !ctir !1729
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19477
  %fts_info224 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %173, i32 0, i32 15, !dbg !19479, !ctir !1725
  %174 = load i16, i16* %fts_info224, align 8, !dbg !19479, !ctir !33
  %conv225 = zext i16 %174 to i32, !dbg !19477
  %cmp226 = icmp eq i32 %conv225, 11, !dbg !19480
  br i1 %cmp226, label %if.then228, label %if.end285, !dbg !19481

if.then228:                                       ; preds = %check_for_dir
  %175 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19482
  %fts_statp229 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %175, i32 0, i32 18, !dbg !19485, !ctir !1725
  %arraydecay230 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp229, i64 0, i64 0, !dbg !19486, !ctir !1796
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay230, i32 0, i32 8, !dbg !19486, !ctir !1797
  %176 = load i64, i64* %st_size, align 8, !dbg !19486, !ctir !29
  %cmp231 = icmp eq i64 %176, 2, !dbg !19487
  br i1 %cmp231, label %if.then233, label %if.else274, !dbg !19488

if.then233:                                       ; preds = %if.then228
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19489, metadata !DIExpression()), !dbg !19491
  %177 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19492
  %fts_parent234 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 1, !dbg !19493, !ctir !1725
  %178 = load %struct._ftsent*, %struct._ftsent** %fts_parent234, align 8, !dbg !19493, !ctir !1729
  store %struct._ftsent* %178, %struct._ftsent** %parent, align 8, !dbg !19491
  %179 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19494
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 14, !dbg !19496, !ctir !1725
  %180 = load i64, i64* %fts_n_dirs_remaining, align 8, !dbg !19496, !ctir !1087
  %cmp235 = icmp eq i64 %180, 0, !dbg !19497
  br i1 %cmp235, label %land.lhs.true237, label %if.else250, !dbg !19498

land.lhs.true237:                                 ; preds = %if.then233
  %181 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19499
  %fts_options238 = getelementptr inbounds %struct.FTS, %struct.FTS* %181, i32 0, i32 10, !dbg !19499, !ctir !1742
  %182 = load i32, i32* %fts_options238, align 8, !dbg !19499, !ctir !7
  %and239 = and i32 %182, 8, !dbg !19499
  %tobool240 = icmp ne i32 %and239, 0, !dbg !19499
  br i1 %tobool240, label %land.lhs.true241, label %if.else250, !dbg !19500

land.lhs.true241:                                 ; preds = %land.lhs.true237
  %183 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19501
  %fts_options242 = getelementptr inbounds %struct.FTS, %struct.FTS* %183, i32 0, i32 10, !dbg !19501, !ctir !1742
  %184 = load i32, i32* %fts_options242, align 8, !dbg !19501, !ctir !7
  %and243 = and i32 %184, 16, !dbg !19501
  %tobool244 = icmp ne i32 %and243, 0, !dbg !19501
  br i1 %tobool244, label %land.lhs.true245, label %if.else250, !dbg !19502

land.lhs.true245:                                 ; preds = %land.lhs.true241
  %185 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19503
  %186 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19504
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %186, i32 0, i32 6, !dbg !19505, !ctir !1742
  %187 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19505, !ctir !7
  %call246 = call i32 @leaf_optimization(%struct._ftsent* %185, i32 %187), !dbg !19506
  %cmp247 = icmp eq i32 %call246, 2, !dbg !19507
  br i1 %cmp247, label %if.then249, label %if.else250, !dbg !19508

if.then249:                                       ; preds = %land.lhs.true245
  br label %if.end273, !dbg !19509

if.else250:                                       ; preds = %land.lhs.true245, %land.lhs.true241, %land.lhs.true237, %if.then233
  %188 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19511
  %189 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19513
  %call251 = call zeroext i16 @fts_stat(%struct.FTS* %188, %struct._ftsent* %189, i1 zeroext false), !dbg !19514
  %190 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19515
  %fts_info252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %190, i32 0, i32 15, !dbg !19516, !ctir !1725
  store i16 %call251, i16* %fts_info252, align 8, !dbg !19517, !ctir !33
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19518
  %fts_statp253 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !19518, !ctir !1725
  %arraydecay254 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp253, i64 0, i64 0, !dbg !19518, !ctir !1796
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay254, i32 0, i32 3, !dbg !19518, !ctir !1797
  %192 = load i32, i32* %st_mode, align 8, !dbg !19518, !ctir !168
  %and255 = and i32 %192, 61440, !dbg !19518
  %cmp256 = icmp eq i32 %and255, 16384, !dbg !19518
  br i1 %cmp256, label %land.lhs.true258, label %if.end272, !dbg !19520

land.lhs.true258:                                 ; preds = %if.else250
  %193 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19521
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %193, i32 0, i32 12, !dbg !19522, !ctir !1725
  %194 = load i64, i64* %fts_level259, align 8, !dbg !19522, !ctir !506
  %cmp260 = icmp ne i64 %194, 0, !dbg !19523
  br i1 %cmp260, label %land.lhs.true262, label %if.end272, !dbg !19524

land.lhs.true262:                                 ; preds = %land.lhs.true258
  %195 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19525
  %fts_n_dirs_remaining263 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %195, i32 0, i32 14, !dbg !19526, !ctir !1725
  %196 = load i64, i64* %fts_n_dirs_remaining263, align 8, !dbg !19526, !ctir !1087
  %cmp264 = icmp ult i64 0, %196, !dbg !19527
  br i1 %cmp264, label %land.lhs.true266, label %if.end272, !dbg !19528

land.lhs.true266:                                 ; preds = %land.lhs.true262
  %197 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19529
  %fts_n_dirs_remaining267 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %197, i32 0, i32 14, !dbg !19530, !ctir !1725
  %198 = load i64, i64* %fts_n_dirs_remaining267, align 8, !dbg !19530, !ctir !1087
  %cmp268 = icmp ne i64 %198, -1, !dbg !19531
  br i1 %cmp268, label %if.then270, label %if.end272, !dbg !19532

if.then270:                                       ; preds = %land.lhs.true266
  %199 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19533
  %fts_n_dirs_remaining271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 14, !dbg !19534, !ctir !1725
  %200 = load i64, i64* %fts_n_dirs_remaining271, align 8, !dbg !19535, !ctir !1087
  %dec = add i64 %200, -1, !dbg !19535
  store i64 %dec, i64* %fts_n_dirs_remaining271, align 8, !dbg !19535, !ctir !1087
  br label %if.end272, !dbg !19533

if.end272:                                        ; preds = %if.then270, %land.lhs.true266, %land.lhs.true262, %land.lhs.true258, %if.else250
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then249
  br label %if.end284, !dbg !19536

if.else274:                                       ; preds = %if.then228
  br label %do.body275, !dbg !19537

do.body275:                                       ; preds = %if.else274
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19538
  %fts_statp276 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 18, !dbg !19538, !ctir !1725
  %arraydecay277 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp276, i64 0, i64 0, !dbg !19538, !ctir !1796
  %st_size278 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay277, i32 0, i32 8, !dbg !19538, !ctir !1797
  %202 = load i64, i64* %st_size278, align 8, !dbg !19538, !ctir !29
  %cmp279 = icmp eq i64 %202, 1, !dbg !19538
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !19541

if.then281:                                       ; preds = %do.body275
  call void @abort() #13, !dbg !19538
  unreachable, !dbg !19538

if.end282:                                        ; preds = %do.body275
  br label %do.end283, !dbg !19541

do.end283:                                        ; preds = %if.end282
  br label %if.end284

if.end284:                                        ; preds = %do.end283, %if.end273
  br label %if.end285, !dbg !19542

if.end285:                                        ; preds = %if.end284, %check_for_dir
  %203 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19543
  %fts_info286 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %203, i32 0, i32 15, !dbg !19545, !ctir !1725
  %204 = load i16, i16* %fts_info286, align 8, !dbg !19545, !ctir !33
  %conv287 = zext i16 %204 to i32, !dbg !19543
  %cmp288 = icmp eq i32 %conv287, 1, !dbg !19546
  br i1 %cmp288, label %if.then290, label %if.end304, !dbg !19547

if.then290:                                       ; preds = %if.end285
  %205 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19548
  %fts_level291 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %205, i32 0, i32 12, !dbg !19551, !ctir !1725
  %206 = load i64, i64* %fts_level291, align 8, !dbg !19551, !ctir !506
  %cmp292 = icmp eq i64 %206, 0, !dbg !19552
  br i1 %cmp292, label %if.then294, label %if.end299, !dbg !19553

if.then294:                                       ; preds = %if.then290
  %207 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19554
  %fts_statp295 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %207, i32 0, i32 18, !dbg !19555, !ctir !1725
  %arraydecay296 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp295, i64 0, i64 0, !dbg !19556, !ctir !1796
  %st_dev297 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay296, i32 0, i32 0, !dbg !19556, !ctir !1797
  %208 = load i64, i64* %st_dev297, align 8, !dbg !19556, !ctir !263
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19557
  %fts_dev298 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 3, !dbg !19558, !ctir !1742
  store i64 %208, i64* %fts_dev298, align 8, !dbg !19559, !ctir !262
  br label %if.end299, !dbg !19557

if.end299:                                        ; preds = %if.then294, %if.then290
  %210 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19560
  %211 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19562
  %call300 = call zeroext i1 @enter_dir(%struct.FTS* %210, %struct._ftsent* %211), !dbg !19563
  br i1 %call300, label %if.end303, label %if.then301, !dbg !19564

if.then301:                                       ; preds = %if.end299
  %call302 = call i32* @__errno_location() #15, !dbg !19565
  store i32 12, i32* %call302, align 4, !dbg !19565, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19567
  br label %return, !dbg !19567

if.end303:                                        ; preds = %if.end299
  br label %if.end304, !dbg !19568

if.end304:                                        ; preds = %if.end303, %if.end285
  %212 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19569
  store %struct._ftsent* %212, %struct._ftsent** %retval, align 8, !dbg !19570
  br label %return, !dbg !19570

if.end305:                                        ; preds = %if.end152
  br label %cd_dot_dot, !dbg !19571

cd_dot_dot:                                       ; preds = %if.end305, %if.end150
  call void @llvm.dbg.label(metadata !19572), !dbg !19573
  %213 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19574
  %fts_parent306 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 1, !dbg !19575, !ctir !1725
  %214 = load %struct._ftsent*, %struct._ftsent** %fts_parent306, align 8, !dbg !19575, !ctir !1729
  store %struct._ftsent* %214, %struct._ftsent** %p, align 8, !dbg !19576
  %215 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19577
  %216 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19578
  %fts_cur307 = getelementptr inbounds %struct.FTS, %struct.FTS* %216, i32 0, i32 0, !dbg !19579, !ctir !1742
  store %struct._ftsent* %215, %struct._ftsent** %fts_cur307, align 8, !dbg !19580, !ctir !1729
  %217 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19581
  %218 = bitcast %struct._ftsent* %217 to i8*, !dbg !19581
  call void @free(i8* %218) #10, !dbg !19582
  %219 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19583
  %fts_level308 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %219, i32 0, i32 12, !dbg !19585, !ctir !1725
  %220 = load i64, i64* %fts_level308, align 8, !dbg !19585, !ctir !506
  %cmp309 = icmp eq i64 %220, -1, !dbg !19586
  br i1 %cmp309, label %if.then311, label %if.end314, !dbg !19587

if.then311:                                       ; preds = %cd_dot_dot
  %221 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19588
  %222 = bitcast %struct._ftsent* %221 to i8*, !dbg !19588
  call void @free(i8* %222) #10, !dbg !19590
  %call312 = call i32* @__errno_location() #15, !dbg !19591
  store i32 0, i32* %call312, align 4, !dbg !19591, !ctir !7
  %223 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19592
  %fts_cur313 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 0, !dbg !19593, !ctir !1742
  store %struct._ftsent* null, %struct._ftsent** %fts_cur313, align 8, !dbg !19594, !ctir !1729
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19595
  br label %return, !dbg !19595

if.end314:                                        ; preds = %cd_dot_dot
  br label %do.body315, !dbg !19596

do.body315:                                       ; preds = %if.end314
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19597
  %fts_info316 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !19597, !ctir !1725
  %225 = load i16, i16* %fts_info316, align 8, !dbg !19597, !ctir !33
  %conv317 = zext i16 %225 to i32, !dbg !19597
  %cmp318 = icmp ne i32 %conv317, 11, !dbg !19597
  br i1 %cmp318, label %if.end321, label %if.then320, !dbg !19600

if.then320:                                       ; preds = %do.body315
  call void @abort() #13, !dbg !19597
  unreachable, !dbg !19597

if.end321:                                        ; preds = %do.body315
  br label %do.end322, !dbg !19600

do.end322:                                        ; preds = %if.end321
  %226 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19601
  %fts_path323 = getelementptr inbounds %struct.FTS, %struct.FTS* %226, i32 0, i32 4, !dbg !19602, !ctir !1742
  %227 = load i8*, i8** %fts_path323, align 8, !dbg !19602, !ctir !9
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19603
  %fts_pathlen324 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %228, i32 0, i32 10, !dbg !19604, !ctir !1725
  %229 = load i64, i64* %fts_pathlen324, align 8, !dbg !19604, !ctir !55
  %arrayidx325 = getelementptr inbounds i8, i8* %227, i64 %229, !dbg !19601, !ctir !9
  store i8 0, i8* %arrayidx325, align 1, !dbg !19605
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19606
  %fts_level326 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %230, i32 0, i32 12, !dbg !19608, !ctir !1725
  %231 = load i64, i64* %fts_level326, align 8, !dbg !19608, !ctir !506
  %cmp327 = icmp eq i64 %231, 0, !dbg !19609
  br i1 %cmp327, label %if.then329, label %if.else338, !dbg !19610

if.then329:                                       ; preds = %do.end322
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19611
  %call330 = call i32 @restore_initial_cwd(%struct.FTS* %232), !dbg !19614
  %tobool331 = icmp ne i32 %call330, 0, !dbg !19614
  br i1 %tobool331, label %if.then332, label %if.end337, !dbg !19615

if.then332:                                       ; preds = %if.then329
  %call333 = call i32* @__errno_location() #15, !dbg !19616
  %233 = load i32, i32* %call333, align 4, !dbg !19616, !ctir !7
  %234 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19618
  %fts_errno334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %234, i32 0, i32 8, !dbg !19619, !ctir !1725
  store i32 %233, i32* %fts_errno334, align 8, !dbg !19620, !ctir !7
  %235 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19621
  %fts_options335 = getelementptr inbounds %struct.FTS, %struct.FTS* %235, i32 0, i32 10, !dbg !19621, !ctir !1742
  %236 = load i32, i32* %fts_options335, align 8, !dbg !19621, !ctir !7
  %or336 = or i32 %236, 8192, !dbg !19621
  store i32 %or336, i32* %fts_options335, align 8, !dbg !19621, !ctir !7
  br label %if.end337, !dbg !19622

if.end337:                                        ; preds = %if.then332, %if.then329
  br label %if.end381, !dbg !19623

if.else338:                                       ; preds = %do.end322
  %237 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19624
  %fts_flags339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %237, i32 0, i32 16, !dbg !19626, !ctir !1725
  %238 = load i16, i16* %fts_flags339, align 2, !dbg !19626, !ctir !33
  %conv340 = zext i16 %238 to i32, !dbg !19624
  %and341 = and i32 %conv340, 2, !dbg !19627
  %tobool342 = icmp ne i32 %and341, 0, !dbg !19627
  br i1 %tobool342, label %if.then343, label %if.else365, !dbg !19628

if.then343:                                       ; preds = %if.else338
  %239 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19629
  %fts_options344 = getelementptr inbounds %struct.FTS, %struct.FTS* %239, i32 0, i32 10, !dbg !19629, !ctir !1742
  %240 = load i32, i32* %fts_options344, align 8, !dbg !19629, !ctir !7
  %and345 = and i32 %240, 4, !dbg !19629
  %tobool346 = icmp ne i32 %and345, 0, !dbg !19629
  br i1 %tobool346, label %if.end362, label %land.lhs.true347, !dbg !19629

land.lhs.true347:                                 ; preds = %if.then343
  %241 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19629
  %fts_options348 = getelementptr inbounds %struct.FTS, %struct.FTS* %241, i32 0, i32 10, !dbg !19629, !ctir !1742
  %242 = load i32, i32* %fts_options348, align 8, !dbg !19629, !ctir !7
  %and349 = and i32 %242, 512, !dbg !19629
  %tobool350 = icmp ne i32 %and349, 0, !dbg !19629
  br i1 %tobool350, label %cond.true351, label %cond.false353, !dbg !19632

cond.true351:                                     ; preds = %land.lhs.true347
  %243 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19629
  %244 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19629
  %fts_symfd352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %244, i32 0, i32 9, !dbg !19629, !ctir !1725
  %245 = load i32, i32* %fts_symfd352, align 4, !dbg !19629, !ctir !7
  call void @cwd_advance_fd(%struct.FTS* %243, i32 %245, i1 zeroext true), !dbg !19629
  br i1 false, label %if.then357, label %if.end362, !dbg !19629

cond.false353:                                    ; preds = %land.lhs.true347
  %246 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19629
  %fts_symfd354 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %246, i32 0, i32 9, !dbg !19629, !ctir !1725
  %247 = load i32, i32* %fts_symfd354, align 4, !dbg !19629, !ctir !7
  %call355 = call i32 @fchdir(i32 %247) #10, !dbg !19629
  %tobool356 = icmp ne i32 %call355, 0, !dbg !19629
  br i1 %tobool356, label %if.then357, label %if.end362, !dbg !19632

if.then357:                                       ; preds = %cond.false353, %cond.true351
  %call358 = call i32* @__errno_location() #15, !dbg !19633
  %248 = load i32, i32* %call358, align 4, !dbg !19633, !ctir !7
  %249 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19635
  %fts_errno359 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %249, i32 0, i32 8, !dbg !19636, !ctir !1725
  store i32 %248, i32* %fts_errno359, align 8, !dbg !19637, !ctir !7
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19638
  %fts_options360 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 10, !dbg !19638, !ctir !1742
  %251 = load i32, i32* %fts_options360, align 8, !dbg !19638, !ctir !7
  %or361 = or i32 %251, 8192, !dbg !19638
  store i32 %or361, i32* %fts_options360, align 8, !dbg !19638, !ctir !7
  br label %if.end362, !dbg !19639

if.end362:                                        ; preds = %if.then357, %cond.false353, %cond.true351, %if.then343
  %252 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19640
  %fts_symfd363 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %252, i32 0, i32 9, !dbg !19641, !ctir !1725
  %253 = load i32, i32* %fts_symfd363, align 4, !dbg !19641, !ctir !7
  %call364 = call i32 @close(i32 %253), !dbg !19642
  br label %if.end380, !dbg !19643

if.else365:                                       ; preds = %if.else338
  %254 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19644
  %fts_flags366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %254, i32 0, i32 16, !dbg !19646, !ctir !1725
  %255 = load i16, i16* %fts_flags366, align 2, !dbg !19646, !ctir !33
  %conv367 = zext i16 %255 to i32, !dbg !19644
  %and368 = and i32 %conv367, 1, !dbg !19647
  %tobool369 = icmp ne i32 %and368, 0, !dbg !19647
  br i1 %tobool369, label %if.end379, label %land.lhs.true370, !dbg !19648

land.lhs.true370:                                 ; preds = %if.else365
  %256 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19649
  %257 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19650
  %fts_parent371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %257, i32 0, i32 1, !dbg !19651, !ctir !1725
  %258 = load %struct._ftsent*, %struct._ftsent** %fts_parent371, align 8, !dbg !19651, !ctir !1729
  %call372 = call i32 @fts_safe_changedir(%struct.FTS* %256, %struct._ftsent* %258, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)), !dbg !19652
  %tobool373 = icmp ne i32 %call372, 0, !dbg !19652
  br i1 %tobool373, label %if.then374, label %if.end379, !dbg !19653

if.then374:                                       ; preds = %land.lhs.true370
  %call375 = call i32* @__errno_location() #15, !dbg !19654
  %259 = load i32, i32* %call375, align 4, !dbg !19654, !ctir !7
  %260 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19656
  %fts_errno376 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 8, !dbg !19657, !ctir !1725
  store i32 %259, i32* %fts_errno376, align 8, !dbg !19658, !ctir !7
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19659
  %fts_options377 = getelementptr inbounds %struct.FTS, %struct.FTS* %261, i32 0, i32 10, !dbg !19659, !ctir !1742
  %262 = load i32, i32* %fts_options377, align 8, !dbg !19659, !ctir !7
  %or378 = or i32 %262, 8192, !dbg !19659
  store i32 %or378, i32* %fts_options377, align 8, !dbg !19659, !ctir !7
  br label %if.end379, !dbg !19660

if.end379:                                        ; preds = %if.then374, %land.lhs.true370, %if.else365
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.end362
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.end337
  %263 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19661
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 15, !dbg !19663, !ctir !1725
  %264 = load i16, i16* %fts_info382, align 8, !dbg !19663, !ctir !33
  %conv383 = zext i16 %264 to i32, !dbg !19661
  %cmp384 = icmp ne i32 %conv383, 2, !dbg !19664
  br i1 %cmp384, label %if.then386, label %if.end399, !dbg !19665

if.then386:                                       ; preds = %if.end381
  %265 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19666
  %fts_errno387 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 8, !dbg !19668, !ctir !1725
  %266 = load i32, i32* %fts_errno387, align 8, !dbg !19668, !ctir !7
  %tobool388 = icmp ne i32 %266, 0, !dbg !19666
  %267 = zext i1 %tobool388 to i64, !dbg !19666
  %cond389 = select i1 %tobool388, i32 7, i32 6, !dbg !19666
  %conv390 = trunc i32 %cond389 to i16, !dbg !19666
  %268 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19669
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %268, i32 0, i32 15, !dbg !19670, !ctir !1725
  store i16 %conv390, i16* %fts_info391, align 8, !dbg !19671, !ctir !33
  %269 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19672
  %fts_errno392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %269, i32 0, i32 8, !dbg !19674, !ctir !1725
  %270 = load i32, i32* %fts_errno392, align 8, !dbg !19674, !ctir !7
  %cmp393 = icmp eq i32 %270, 0, !dbg !19675
  br i1 %cmp393, label %if.then395, label %if.end398, !dbg !19676

if.then395:                                       ; preds = %if.then386
  br label %do.body396, !dbg !19677

do.body396:                                       ; preds = %if.then395
  %271 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19678
  %272 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19678
  call void @leave_dir(%struct.FTS* %271, %struct._ftsent* %272), !dbg !19678
  br label %do.end397, !dbg !19678

do.end397:                                        ; preds = %do.body396
  br label %if.end398, !dbg !19678

if.end398:                                        ; preds = %do.end397, %if.then386
  br label %if.end399, !dbg !19680

if.end399:                                        ; preds = %if.end398, %if.end381
  %273 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19681
  %fts_options400 = getelementptr inbounds %struct.FTS, %struct.FTS* %273, i32 0, i32 10, !dbg !19681, !ctir !1742
  %274 = load i32, i32* %fts_options400, align 8, !dbg !19681, !ctir !7
  %and401 = and i32 %274, 8192, !dbg !19681
  %tobool402 = icmp ne i32 %and401, 0, !dbg !19681
  br i1 %tobool402, label %cond.true403, label %cond.false404, !dbg !19681

cond.true403:                                     ; preds = %if.end399
  br label %cond.end405, !dbg !19681

cond.false404:                                    ; preds = %if.end399
  %275 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19682
  br label %cond.end405, !dbg !19681

cond.end405:                                      ; preds = %cond.false404, %cond.true403
  %cond406 = phi %struct._ftsent* [ null, %cond.true403 ], [ %275, %cond.false404 ], !dbg !19681
  store %struct._ftsent* %cond406, %struct._ftsent** %retval, align 8, !dbg !19683
  br label %return, !dbg !19683

return:                                           ; preds = %cond.end405, %if.then311, %if.end304, %if.then301, %if.then163, %if.then149, %do.end127, %if.then114, %do.end, %if.then5, %if.then
  %276 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !19684
  ret %struct._ftsent* %276, !dbg !19684
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @leave_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !19685 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !1829
  %obj = alloca %struct.Active_dir, align 8, !ctir !1822
  %found = alloca i8*, align 8, !ctir !53
  %parent = alloca %struct._ftsent*, align 8, !ctir !1819
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !19688, metadata !DIExpression()), !dbg !19689
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !19690, metadata !DIExpression()), !dbg !19691
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !19692, metadata !DIExpression()), !dbg !19693
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !19694
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !19695, !ctir !1725
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19694, !ctir !1796
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !19693
  %1 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19696
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %1, i32 0, i32 10, !dbg !19698, !ctir !1742
  %2 = load i32, i32* %fts_options, align 8, !dbg !19698, !ctir !7
  %and = and i32 %2, 258, !dbg !19699
  %tobool = icmp ne i32 %and, 0, !dbg !19699
  br i1 %tobool, label %if.then, label %if.else, !dbg !19700

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %obj, metadata !19701, metadata !DIExpression()), !dbg !19703
  call void @llvm.dbg.declare(metadata i8** %found, metadata !19704, metadata !DIExpression()), !dbg !19705
  %3 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19706
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 0, !dbg !19707, !ctir !1830
  %4 = load i64, i64* %st_dev, align 8, !dbg !19707, !ctir !263
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 0, !dbg !19708, !ctir !1822
  store i64 %4, i64* %dev, align 8, !dbg !19709, !ctir !262
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19710
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !19711, !ctir !1830
  %6 = load i64, i64* %st_ino, align 8, !dbg !19711, !ctir !260
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 1, !dbg !19712, !ctir !1822
  store i64 %6, i64* %ino, align 8, !dbg !19713, !ctir !259
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19714
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !19715, !ctir !1742
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19716
  %8 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !19716, !ctir !1765
  %9 = bitcast %struct.Active_dir* %obj to i8*, !dbg !19717
  %call = call i8* @hash_delete(%struct.hash_table* %8, i8* %9), !dbg !19718
  store i8* %call, i8** %found, align 8, !dbg !19719
  %10 = load i8*, i8** %found, align 8, !dbg !19720
  %tobool1 = icmp ne i8* %10, null, !dbg !19720
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19722

if.then2:                                         ; preds = %if.then
  call void @abort() #13, !dbg !19723
  unreachable, !dbg !19723

if.end:                                           ; preds = %if.then
  %11 = load i8*, i8** %found, align 8, !dbg !19724
  call void @free(i8* %11) #10, !dbg !19725
  br label %if.end38, !dbg !19726

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19727, metadata !DIExpression()), !dbg !19729
  %12 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !19730
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 1, !dbg !19731, !ctir !1725
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19731, !ctir !1729
  store %struct._ftsent* %13, %struct._ftsent** %parent, align 8, !dbg !19729
  %14 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19732
  %cmp = icmp ne %struct._ftsent* %14, null, !dbg !19734
  br i1 %cmp, label %land.lhs.true, label %if.end37, !dbg !19735

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19736
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 12, !dbg !19737, !ctir !1725
  %16 = load i64, i64* %fts_level, align 8, !dbg !19737, !ctir !506
  %cmp3 = icmp sle i64 0, %16, !dbg !19738
  br i1 %cmp3, label %if.then4, label %if.end37, !dbg !19739

if.then4:                                         ; preds = %land.lhs.true
  br label %do.body, !dbg !19740

do.body:                                          ; preds = %if.then4
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19741
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 12, !dbg !19741, !ctir !1742
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !19741
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !19741, !ctir !1765
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 1, !dbg !19741, !ctir !1770
  %19 = load i64, i64* %chdir_counter, align 8, !dbg !19741, !ctir !486
  %cmp6 = icmp eq i64 %19, 0, !dbg !19741
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !19744

if.then7:                                         ; preds = %do.body
  call void @abort() #13, !dbg !19741
  unreachable, !dbg !19741

if.end8:                                          ; preds = %do.body
  %20 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19745
  %fts_cycle9 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 12, !dbg !19745, !ctir !1742
  %state10 = bitcast %union.anon* %fts_cycle9 to %struct.cycle_check_state**, !dbg !19745
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state10, align 8, !dbg !19745, !ctir !1765
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !19745, !ctir !1770
  %st_ino11 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !19745, !ctir !1774
  %22 = load i64, i64* %st_ino11, align 8, !dbg !19745, !ctir !259
  %23 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19745
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !19745, !ctir !1830
  %24 = load i64, i64* %st_ino12, align 8, !dbg !19745, !ctir !260
  %cmp13 = icmp eq i64 %22, %24, !dbg !19745
  br i1 %cmp13, label %land.lhs.true14, label %if.end36, !dbg !19745

land.lhs.true14:                                  ; preds = %if.end8
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19745
  %fts_cycle15 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 12, !dbg !19745, !ctir !1742
  %state16 = bitcast %union.anon* %fts_cycle15 to %struct.cycle_check_state**, !dbg !19745
  %26 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state16, align 8, !dbg !19745, !ctir !1765
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %26, i32 0, i32 0, !dbg !19745, !ctir !1770
  %st_dev18 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino17, i32 0, i32 1, !dbg !19745, !ctir !1774
  %27 = load i64, i64* %st_dev18, align 8, !dbg !19745, !ctir !262
  %28 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19745
  %st_dev19 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 0, !dbg !19745, !ctir !1830
  %29 = load i64, i64* %st_dev19, align 8, !dbg !19745, !ctir !263
  %cmp20 = icmp eq i64 %27, %29, !dbg !19745
  br i1 %cmp20, label %if.then21, label %if.end36, !dbg !19744

if.then21:                                        ; preds = %land.lhs.true14
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19747
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 18, !dbg !19747, !ctir !1725
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !19747, !ctir !1796
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !19747, !ctir !1797
  %31 = load i64, i64* %st_dev24, align 8, !dbg !19747, !ctir !263
  %32 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19747
  %fts_cycle25 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 12, !dbg !19747, !ctir !1742
  %state26 = bitcast %union.anon* %fts_cycle25 to %struct.cycle_check_state**, !dbg !19747
  %33 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state26, align 8, !dbg !19747, !ctir !1765
  %dev_ino27 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %33, i32 0, i32 0, !dbg !19747, !ctir !1770
  %st_dev28 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino27, i32 0, i32 1, !dbg !19747, !ctir !1774
  store i64 %31, i64* %st_dev28, align 8, !dbg !19747, !ctir !262
  %34 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19747
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !19747, !ctir !1725
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !19747, !ctir !1796
  %st_ino31 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 1, !dbg !19747, !ctir !1797
  %35 = load i64, i64* %st_ino31, align 8, !dbg !19747, !ctir !260
  %36 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19747
  %fts_cycle32 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 12, !dbg !19747, !ctir !1742
  %state33 = bitcast %union.anon* %fts_cycle32 to %struct.cycle_check_state**, !dbg !19747
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state33, align 8, !dbg !19747, !ctir !1765
  %dev_ino34 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 0, !dbg !19747, !ctir !1770
  %st_ino35 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino34, i32 0, i32 0, !dbg !19747, !ctir !1774
  store i64 %35, i64* %st_ino35, align 8, !dbg !19747, !ctir !259
  br label %if.end36, !dbg !19747

if.end36:                                         ; preds = %if.then21, %land.lhs.true14, %if.end8
  br label %do.end, !dbg !19744

do.end:                                           ; preds = %if.end36
  br label %if.end37, !dbg !19744

if.end37:                                         ; preds = %do.end, %land.lhs.true, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end
  ret void, !dbg !19749
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_safe_changedir(%struct.FTS* %sp, %struct._ftsent* %p, i32 %fd, i8* %dir) #4 !dbg !19750 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %is_dotdot = alloca i8, align 1, !ctir !142
  %newfd = alloca i32, align 4, !ctir !7
  %parent_fd = alloca i32, align 4, !ctir !7
  %sb = alloca %struct.stat, align 8, !ctir !1797
  %oerrno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19753, metadata !DIExpression()), !dbg !19754
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !19755, metadata !DIExpression()), !dbg !19756
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19757, metadata !DIExpression()), !dbg !19758
  store i8* %dir, i8** %dir.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !19759, metadata !DIExpression()), !dbg !19760
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19761, metadata !DIExpression()), !dbg !19762
  call void @llvm.dbg.declare(metadata i8* %is_dotdot, metadata !19763, metadata !DIExpression()), !dbg !19764
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !19765
  %tobool = icmp ne i8* %0, null, !dbg !19765
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19766

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !19767
  %call = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)) #14, !dbg !19767
  %cmp = icmp eq i32 %call, 0, !dbg !19767
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !19768
  %frombool = zext i1 %2 to i8, !dbg !19764
  store i8 %frombool, i8* %is_dotdot, align 1, !dbg !19764
  call void @llvm.dbg.declare(metadata i32* %newfd, metadata !19769, metadata !DIExpression()), !dbg !19770
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19771
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !19771, !ctir !1742
  %4 = load i32, i32* %fts_options, align 8, !dbg !19771, !ctir !7
  %and = and i32 %4, 4, !dbg !19771
  %tobool1 = icmp ne i32 %and, 0, !dbg !19771
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !19773

if.then:                                          ; preds = %land.end
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19774
  %fts_options2 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !19774, !ctir !1742
  %6 = load i32, i32* %fts_options2, align 8, !dbg !19774, !ctir !7
  %and3 = and i32 %6, 512, !dbg !19774
  %tobool4 = icmp ne i32 %and3, 0, !dbg !19774
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !19777

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %fd.addr, align 4, !dbg !19778
  %cmp5 = icmp sle i32 0, %7, !dbg !19779
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19780

if.then6:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %fd.addr, align 4, !dbg !19781
  %call7 = call i32 @close(i32 %8), !dbg !19782
  br label %if.end, !dbg !19782

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !19783
  br label %return, !dbg !19783

if.end8:                                          ; preds = %land.end
  %9 = load i32, i32* %fd.addr, align 4, !dbg !19784
  %cmp9 = icmp slt i32 %9, 0, !dbg !19786
  br i1 %cmp9, label %land.lhs.true10, label %if.end25, !dbg !19787

land.lhs.true10:                                  ; preds = %if.end8
  %10 = load i8, i8* %is_dotdot, align 1, !dbg !19788
  %tobool11 = trunc i8 %10 to i1, !dbg !19788
  br i1 %tobool11, label %land.lhs.true12, label %if.end25, !dbg !19789

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19790
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !19790, !ctir !1742
  %12 = load i32, i32* %fts_options13, align 8, !dbg !19790, !ctir !7
  %and14 = and i32 %12, 512, !dbg !19790
  %tobool15 = icmp ne i32 %and14, 0, !dbg !19790
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !19791

if.then16:                                        ; preds = %land.lhs.true12
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19792
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 13, !dbg !19795, !ctir !1742
  %call17 = call zeroext i1 @i_ring_empty(%struct.I_ring* %fts_fd_ring) #14, !dbg !19796
  br i1 %call17, label %if.end24, label %if.then18, !dbg !19797

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i32* %parent_fd, metadata !19798, metadata !DIExpression()), !dbg !19800
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19801
  %fts_fd_ring19 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !19802, !ctir !1742
  %call20 = call i32 @i_ring_pop(%struct.I_ring* %fts_fd_ring19), !dbg !19803
  store i32 %call20, i32* %parent_fd, align 4, !dbg !19804
  store i8 1, i8* %is_dotdot, align 1, !dbg !19805
  %15 = load i32, i32* %parent_fd, align 4, !dbg !19806
  %cmp21 = icmp sle i32 0, %15, !dbg !19808
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !19809

if.then22:                                        ; preds = %if.then18
  %16 = load i32, i32* %parent_fd, align 4, !dbg !19810
  store i32 %16, i32* %fd.addr, align 4, !dbg !19812
  store i8* null, i8** %dir.addr, align 8, !dbg !19813
  br label %if.end23, !dbg !19814

if.end23:                                         ; preds = %if.then22, %if.then18
  br label %if.end24, !dbg !19815

if.end24:                                         ; preds = %if.end23, %if.then16
  br label %if.end25, !dbg !19816

if.end25:                                         ; preds = %if.end24, %land.lhs.true12, %land.lhs.true10, %if.end8
  %17 = load i32, i32* %fd.addr, align 4, !dbg !19817
  store i32 %17, i32* %newfd, align 4, !dbg !19818
  %18 = load i32, i32* %fd.addr, align 4, !dbg !19819
  %cmp26 = icmp slt i32 %18, 0, !dbg !19821
  br i1 %cmp26, label %land.lhs.true27, label %if.end31, !dbg !19822

land.lhs.true27:                                  ; preds = %if.end25
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19823
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !19824
  %call28 = call i32 @diropen(%struct.FTS* %19, i8* %20), !dbg !19825
  store i32 %call28, i32* %newfd, align 4, !dbg !19826
  %cmp29 = icmp slt i32 %call28, 0, !dbg !19827
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !19828

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -1, i32* %retval, align 4, !dbg !19829
  br label %return, !dbg !19829

if.end31:                                         ; preds = %land.lhs.true27, %if.end25
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19830
  %fts_options32 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !19830, !ctir !1742
  %22 = load i32, i32* %fts_options32, align 8, !dbg !19830, !ctir !7
  %and33 = and i32 %22, 2, !dbg !19830
  %tobool34 = icmp ne i32 %and33, 0, !dbg !19830
  br i1 %tobool34, label %if.then39, label %lor.lhs.false, !dbg !19832

lor.lhs.false:                                    ; preds = %if.end31
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !19833
  %tobool35 = icmp ne i8* %23, null, !dbg !19833
  br i1 %tobool35, label %land.lhs.true36, label %if.end54, !dbg !19834

land.lhs.true36:                                  ; preds = %lor.lhs.false
  %24 = load i8*, i8** %dir.addr, align 8, !dbg !19835
  %call37 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)) #14, !dbg !19835
  %cmp38 = icmp eq i32 %call37, 0, !dbg !19835
  br i1 %cmp38, label %if.then39, label %if.end54, !dbg !19836

if.then39:                                        ; preds = %land.lhs.true36, %if.end31
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !19837, metadata !DIExpression()), !dbg !19839
  %25 = load i32, i32* %newfd, align 4, !dbg !19840
  %call40 = call i32 @fstat(i32 %25, %struct.stat* %sb) #10, !dbg !19842
  %tobool41 = icmp ne i32 %call40, 0, !dbg !19842
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !19843

if.then42:                                        ; preds = %if.then39
  store i32 -1, i32* %ret, align 4, !dbg !19844
  br label %bail, !dbg !19846

if.end43:                                         ; preds = %if.then39
  %26 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19847
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 18, !dbg !19849, !ctir !1725
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19850, !ctir !1796
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !19850, !ctir !1797
  %27 = load i64, i64* %st_dev, align 8, !dbg !19850, !ctir !263
  %st_dev44 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 0, !dbg !19851, !ctir !1797
  %28 = load i64, i64* %st_dev44, align 8, !dbg !19851, !ctir !263
  %cmp45 = icmp ne i64 %27, %28, !dbg !19852
  br i1 %cmp45, label %if.then51, label %lor.lhs.false46, !dbg !19853

lor.lhs.false46:                                  ; preds = %if.end43
  %29 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19854
  %fts_statp47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !19855, !ctir !1725
  %arraydecay48 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp47, i64 0, i64 0, !dbg !19856, !ctir !1796
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay48, i32 0, i32 1, !dbg !19856, !ctir !1797
  %30 = load i64, i64* %st_ino, align 8, !dbg !19856, !ctir !260
  %st_ino49 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !19857, !ctir !1797
  %31 = load i64, i64* %st_ino49, align 8, !dbg !19857, !ctir !260
  %cmp50 = icmp ne i64 %30, %31, !dbg !19858
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !19859

if.then51:                                        ; preds = %lor.lhs.false46, %if.end43
  %call52 = call i32* @__errno_location() #15, !dbg !19860
  store i32 2, i32* %call52, align 4, !dbg !19860, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !19862
  br label %bail, !dbg !19863

if.end53:                                         ; preds = %lor.lhs.false46
  br label %if.end54, !dbg !19864

if.end54:                                         ; preds = %if.end53, %land.lhs.true36, %lor.lhs.false
  %32 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19865
  %fts_options55 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !19865, !ctir !1742
  %33 = load i32, i32* %fts_options55, align 8, !dbg !19865, !ctir !7
  %and56 = and i32 %33, 512, !dbg !19865
  %tobool57 = icmp ne i32 %and56, 0, !dbg !19865
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !19867

if.then58:                                        ; preds = %if.end54
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19868
  %35 = load i32, i32* %newfd, align 4, !dbg !19870
  %36 = load i8, i8* %is_dotdot, align 1, !dbg !19871
  %tobool59 = trunc i8 %36 to i1, !dbg !19871
  %lnot = xor i1 %tobool59, true, !dbg !19872
  call void @cwd_advance_fd(%struct.FTS* %34, i32 %35, i1 zeroext %lnot), !dbg !19873
  store i32 0, i32* %retval, align 4, !dbg !19874
  br label %return, !dbg !19874

if.end60:                                         ; preds = %if.end54
  %37 = load i32, i32* %newfd, align 4, !dbg !19875
  %call61 = call i32 @fchdir(i32 %37) #10, !dbg !19876
  store i32 %call61, i32* %ret, align 4, !dbg !19877
  br label %bail, !dbg !19878

bail:                                             ; preds = %if.end60, %if.then51, %if.then42
  call void @llvm.dbg.label(metadata !19879), !dbg !19880
  %38 = load i32, i32* %fd.addr, align 4, !dbg !19881
  %cmp62 = icmp slt i32 %38, 0, !dbg !19883
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !19884

if.then63:                                        ; preds = %bail
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !19885, metadata !DIExpression()), !dbg !19887
  %call64 = call i32* @__errno_location() #15, !dbg !19888
  %39 = load i32, i32* %call64, align 4, !dbg !19888, !ctir !7
  store i32 %39, i32* %oerrno, align 4, !dbg !19887
  %40 = load i32, i32* %newfd, align 4, !dbg !19889
  %call65 = call i32 @close(i32 %40), !dbg !19890
  %41 = load i32, i32* %oerrno, align 4, !dbg !19891
  %call66 = call i32* @__errno_location() #15, !dbg !19891
  store i32 %41, i32* %call66, align 4, !dbg !19891, !ctir !7
  br label %if.end67, !dbg !19892

if.end67:                                         ; preds = %if.then63, %bail
  %42 = load i32, i32* %ret, align 4, !dbg !19893
  store i32 %42, i32* %retval, align 4, !dbg !19894
  br label %return, !dbg !19894

return:                                           ; preds = %if.end67, %if.then58, %if.then30, %if.end
  %43 = load i32, i32* %retval, align 4, !dbg !19895
  ret i32 %43, !dbg !19895
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS* %sp, i32 %type) #4 !dbg !19896 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %type.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %head = alloca %struct._ftsent*, align 8, !ctir !1819
  %nitems = alloca i64, align 8, !ctir !55
  %tail = alloca %struct._ftsent*, align 8, !ctir !1819
  %oldaddr = alloca i8*, align 8, !ctir !53
  %saved_errno = alloca i32, align 4, !ctir !7
  %descend = alloca i8, align 1, !ctir !142
  %doadjust = alloca i8, align 1, !ctir !142
  %level = alloca i64, align 8, !ctir !506
  %len = alloca i64, align 8, !ctir !55
  %maxlen = alloca i64, align 8, !ctir !55
  %new_len = alloca i64, align 8, !ctir !55
  %cp = alloca i8*, align 8, !ctir !9
  %dir_fd = alloca i32, align 4, !ctir !7
  %cur = alloca %struct._ftsent*, align 8, !ctir !1819
  %continue_readdir = alloca i8, align 1, !ctir !142
  %sort_by_inode = alloca i8, align 1, !ctir !142
  %max_entries = alloca i64, align 8, !ctir !55
  %dp = alloca %struct.__dirstream*, align 8, !ctir !541
  %d_namelen = alloca i64, align 8, !ctir !55
  %dp159 = alloca %struct.dirent*, align 8, !ctir !1844
  %skip_stat = alloca i8, align 1, !ctir !142
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19899, metadata !DIExpression()), !dbg !19900
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !19901, metadata !DIExpression()), !dbg !19902
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19903, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head, metadata !19905, metadata !DIExpression()), !dbg !19906
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !19907, metadata !DIExpression()), !dbg !19908
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tail, metadata !19909, metadata !DIExpression()), !dbg !19910
  call void @llvm.dbg.declare(metadata i8** %oldaddr, metadata !19911, metadata !DIExpression()), !dbg !19912
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19913, metadata !DIExpression()), !dbg !19914
  call void @llvm.dbg.declare(metadata i8* %descend, metadata !19915, metadata !DIExpression()), !dbg !19916
  call void @llvm.dbg.declare(metadata i8* %doadjust, metadata !19917, metadata !DIExpression()), !dbg !19918
  call void @llvm.dbg.declare(metadata i64* %level, metadata !19919, metadata !DIExpression()), !dbg !19920
  call void @llvm.dbg.declare(metadata i64* %len, metadata !19921, metadata !DIExpression()), !dbg !19922
  call void @llvm.dbg.declare(metadata i64* %maxlen, metadata !19923, metadata !DIExpression()), !dbg !19924
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !19925, metadata !DIExpression()), !dbg !19926
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !19927, metadata !DIExpression()), !dbg !19928
  call void @llvm.dbg.declare(metadata i32* %dir_fd, metadata !19929, metadata !DIExpression()), !dbg !19930
  call void @llvm.dbg.declare(metadata %struct._ftsent** %cur, metadata !19931, metadata !DIExpression()), !dbg !19932
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19933
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19934, !ctir !1742
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19934, !ctir !1729
  store %struct._ftsent* %1, %struct._ftsent** %cur, align 8, !dbg !19932
  call void @llvm.dbg.declare(metadata i8* %continue_readdir, metadata !19935, metadata !DIExpression()), !dbg !19936
  %2 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19937
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 3, !dbg !19938, !ctir !1725
  %3 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19938, !ctir !541
  %tobool = icmp ne %struct.__dirstream* %3, null, !dbg !19939
  %lnot = xor i1 %tobool, true, !dbg !19939
  %lnot1 = xor i1 %lnot, true, !dbg !19940
  %frombool = zext i1 %lnot1 to i8, !dbg !19936
  store i8 %frombool, i8* %continue_readdir, align 1, !dbg !19936
  call void @llvm.dbg.declare(metadata i8* %sort_by_inode, metadata !19941, metadata !DIExpression()), !dbg !19942
  store i8 0, i8* %sort_by_inode, align 1, !dbg !19942
  call void @llvm.dbg.declare(metadata i64* %max_entries, metadata !19943, metadata !DIExpression()), !dbg !19944
  %4 = load i8, i8* %continue_readdir, align 1, !dbg !19945
  %tobool2 = trunc i8 %4 to i1, !dbg !19945
  br i1 %tobool2, label %if.then, label %if.else, !dbg !19947

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !19948, metadata !DIExpression()), !dbg !19950
  %5 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19951
  %fts_dirp3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !19952, !ctir !1725
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp3, align 8, !dbg !19952, !ctir !541
  store %struct.__dirstream* %6, %struct.__dirstream** %dp, align 8, !dbg !19950
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19953
  %call = call i32 @dirfd(%struct.__dirstream* %7) #10, !dbg !19954
  store i32 %call, i32* %dir_fd, align 4, !dbg !19955
  %8 = load i32, i32* %dir_fd, align 4, !dbg !19956
  %cmp = icmp slt i32 %8, 0, !dbg !19958
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !19959

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !19960

do.body:                                          ; preds = %if.then4
  %9 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19962
  %fts_dirp5 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 3, !dbg !19962, !ctir !1725
  %10 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp5, align 8, !dbg !19962, !ctir !541
  %call6 = call i32 @closedir(%struct.__dirstream* %10), !dbg !19962
  %11 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19962
  %fts_dirp7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 3, !dbg !19962, !ctir !1725
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp7, align 8, !dbg !19962, !ctir !541
  br label %do.end, !dbg !19962

do.end:                                           ; preds = %do.body
  %12 = load i32, i32* %type.addr, align 4, !dbg !19964
  %cmp8 = icmp eq i32 %12, 3, !dbg !19966
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !19967

if.then9:                                         ; preds = %do.end
  %13 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19968
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 15, !dbg !19970, !ctir !1725
  store i16 4, i16* %fts_info, align 8, !dbg !19971, !ctir !33
  %call10 = call i32* @__errno_location() #15, !dbg !19972
  %14 = load i32, i32* %call10, align 4, !dbg !19972, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19973
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !19974, !ctir !1725
  store i32 %14, i32* %fts_errno, align 8, !dbg !19975, !ctir !7
  br label %if.end, !dbg !19976

if.end:                                           ; preds = %if.then9, %do.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19977
  br label %return, !dbg !19977

if.end11:                                         ; preds = %if.then
  br label %if.end58, !dbg !19978

if.else:                                          ; preds = %entry
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19979
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !19979, !ctir !1742
  %17 = load i32, i32* %fts_options, align 8, !dbg !19979, !ctir !7
  %and = and i32 %17, 4, !dbg !19979
  %tobool12 = icmp ne i32 %and, 0, !dbg !19979
  br i1 %tobool12, label %cond.false, label %land.lhs.true, !dbg !19979

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19979
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !19979, !ctir !1742
  %19 = load i32, i32* %fts_options13, align 8, !dbg !19979, !ctir !7
  %and14 = and i32 %19, 512, !dbg !19979
  %tobool15 = icmp ne i32 %and14, 0, !dbg !19979
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !19979

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19979
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 6, !dbg !19979, !ctir !1742
  %21 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19979, !ctir !7
  br label %cond.end, !dbg !19979

cond.false:                                       ; preds = %land.lhs.true, %if.else
  br label %cond.end, !dbg !19979

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ -100, %cond.false ], !dbg !19979
  %22 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19979
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 6, !dbg !19979, !ctir !1725
  %23 = load i8*, i8** %fts_accpath, align 8, !dbg !19979, !ctir !9
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19979
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !19979, !ctir !1742
  %25 = load i32, i32* %fts_options16, align 8, !dbg !19979, !ctir !7
  %and17 = and i32 %25, 16, !dbg !19979
  %tobool18 = icmp ne i32 %and17, 0, !dbg !19979
  br i1 %tobool18, label %land.rhs, label %land.end25, !dbg !19979

land.rhs:                                         ; preds = %cond.end
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19979
  %fts_options19 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !19979, !ctir !1742
  %27 = load i32, i32* %fts_options19, align 8, !dbg !19979, !ctir !7
  %and20 = and i32 %27, 1, !dbg !19979
  %tobool21 = icmp ne i32 %and20, 0, !dbg !19979
  br i1 %tobool21, label %land.rhs22, label %land.end, !dbg !19979

land.rhs22:                                       ; preds = %land.rhs
  %28 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19979
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !19979, !ctir !1725
  %29 = load i64, i64* %fts_level, align 8, !dbg !19979, !ctir !506
  %cmp23 = icmp eq i64 %29, 0, !dbg !19979
  br label %land.end

land.end:                                         ; preds = %land.rhs22, %land.rhs
  %30 = phi i1 [ false, %land.rhs ], [ %cmp23, %land.rhs22 ], !dbg !19982
  %lnot24 = xor i1 %30, true, !dbg !19979
  br label %land.end25

land.end25:                                       ; preds = %land.end, %cond.end
  %31 = phi i1 [ false, %cond.end ], [ %lnot24, %land.end ], !dbg !19982
  %32 = zext i1 %31 to i64, !dbg !19979
  %cond26 = select i1 %31, i32 131072, i32 0, !dbg !19979
  %call27 = call %struct.__dirstream* @opendirat(i32 %cond, i8* %23, i32 %cond26, i32* %dir_fd), !dbg !19979
  %33 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19983
  %fts_dirp28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 3, !dbg !19984, !ctir !1725
  store %struct.__dirstream* %call27, %struct.__dirstream** %fts_dirp28, align 8, !dbg !19985, !ctir !541
  %cmp29 = icmp eq %struct.__dirstream* %call27, null, !dbg !19986
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !19987

if.then30:                                        ; preds = %land.end25
  %34 = load i32, i32* %type.addr, align 4, !dbg !19988
  %cmp31 = icmp eq i32 %34, 3, !dbg !19991
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !19992

if.then32:                                        ; preds = %if.then30
  %35 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19993
  %fts_info33 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 15, !dbg !19995, !ctir !1725
  store i16 4, i16* %fts_info33, align 8, !dbg !19996, !ctir !33
  %call34 = call i32* @__errno_location() #15, !dbg !19997
  %36 = load i32, i32* %call34, align 4, !dbg !19997, !ctir !7
  %37 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19998
  %fts_errno35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 8, !dbg !19999, !ctir !1725
  store i32 %36, i32* %fts_errno35, align 8, !dbg !20000, !ctir !7
  br label %if.end36, !dbg !20001

if.end36:                                         ; preds = %if.then32, %if.then30
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20002
  br label %return, !dbg !20002

if.end37:                                         ; preds = %land.end25
  %38 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20003
  %fts_info38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 15, !dbg !20005, !ctir !1725
  %39 = load i16, i16* %fts_info38, align 8, !dbg !20005, !ctir !33
  %conv = zext i16 %39 to i32, !dbg !20003
  %cmp39 = icmp eq i32 %conv, 11, !dbg !20006
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !20007

if.then41:                                        ; preds = %if.end37
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20008
  %41 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20009
  %call42 = call zeroext i16 @fts_stat(%struct.FTS* %40, %struct._ftsent* %41, i1 zeroext false), !dbg !20010
  %42 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20011
  %fts_info43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 15, !dbg !20012, !ctir !1725
  store i16 %call42, i16* %fts_info43, align 8, !dbg !20013, !ctir !33
  br label %if.end57, !dbg !20011

if.else44:                                        ; preds = %if.end37
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20014
  %fts_options45 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 10, !dbg !20016, !ctir !1742
  %44 = load i32, i32* %fts_options45, align 8, !dbg !20016, !ctir !7
  %and46 = and i32 %44, 256, !dbg !20017
  %tobool47 = icmp ne i32 %and46, 0, !dbg !20017
  br i1 %tobool47, label %if.then48, label %if.end56, !dbg !20018

if.then48:                                        ; preds = %if.else44
  br label %do.body49, !dbg !20019

do.body49:                                        ; preds = %if.then48
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20021
  %46 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20021
  call void @leave_dir(%struct.FTS* %45, %struct._ftsent* %46), !dbg !20021
  br label %do.end50, !dbg !20021

do.end50:                                         ; preds = %do.body49
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20023
  %48 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20024
  %call51 = call zeroext i16 @fts_stat(%struct.FTS* %47, %struct._ftsent* %48, i1 zeroext false), !dbg !20025
  %49 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20026
  %50 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20028
  %call52 = call zeroext i1 @enter_dir(%struct.FTS* %49, %struct._ftsent* %50), !dbg !20029
  br i1 %call52, label %if.end55, label %if.then53, !dbg !20030

if.then53:                                        ; preds = %do.end50
  %call54 = call i32* @__errno_location() #15, !dbg !20031
  store i32 12, i32* %call54, align 4, !dbg !20031, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20033
  br label %return, !dbg !20033

if.end55:                                         ; preds = %do.end50
  br label %if.end56, !dbg !20034

if.end56:                                         ; preds = %if.end55, %if.else44
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end11
  %51 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20035
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 9, !dbg !20036, !ctir !1742
  %52 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !20036, !ctir !1756
  %tobool59 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %52, null, !dbg !20035
  %53 = zext i1 %tobool59 to i64, !dbg !20035
  %cond60 = select i1 %tobool59, i64 -1, i64 100000, !dbg !20035
  store i64 %cond60, i64* %max_entries, align 8, !dbg !20037
  %54 = load i8, i8* %continue_readdir, align 1, !dbg !20038
  %tobool61 = trunc i8 %54 to i1, !dbg !20038
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !20040

if.then62:                                        ; preds = %if.end58
  store i8 1, i8* %descend, align 1, !dbg !20041
  br label %if.end135, !dbg !20043

if.else63:                                        ; preds = %if.end58
  %55 = load i32, i32* %type.addr, align 4, !dbg !20044
  %cmp64 = icmp ne i32 %55, 2, !dbg !20046
  br i1 %cmp64, label %land.rhs66, label %land.end87, !dbg !20047

land.rhs66:                                       ; preds = %if.else63
  %56 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20048
  %fts_options67 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 10, !dbg !20048, !ctir !1742
  %57 = load i32, i32* %fts_options67, align 8, !dbg !20048, !ctir !7
  %and68 = and i32 %57, 8, !dbg !20048
  %tobool69 = icmp ne i32 %and68, 0, !dbg !20048
  br i1 %tobool69, label %land.lhs.true70, label %land.end85, !dbg !20049

land.lhs.true70:                                  ; preds = %land.rhs66
  %58 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20050
  %fts_options71 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !20050, !ctir !1742
  %59 = load i32, i32* %fts_options71, align 8, !dbg !20050, !ctir !7
  %and72 = and i32 %59, 16, !dbg !20050
  %tobool73 = icmp ne i32 %and72, 0, !dbg !20050
  br i1 %tobool73, label %land.lhs.true74, label %land.end85, !dbg !20051

land.lhs.true74:                                  ; preds = %land.lhs.true70
  %60 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20052
  %fts_options75 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 10, !dbg !20052, !ctir !1742
  %61 = load i32, i32* %fts_options75, align 8, !dbg !20052, !ctir !7
  %and76 = and i32 %61, 32, !dbg !20052
  %tobool77 = icmp ne i32 %and76, 0, !dbg !20052
  br i1 %tobool77, label %land.end85, label %land.lhs.true78, !dbg !20053

land.lhs.true78:                                  ; preds = %land.lhs.true74
  %62 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20054
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 18, !dbg !20055, !ctir !1725
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20056, !ctir !1796
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 2, !dbg !20056, !ctir !1797
  %63 = load i64, i64* %st_nlink, align 8, !dbg !20056, !ctir !336
  %cmp79 = icmp eq i64 %63, 2, !dbg !20057
  br i1 %cmp79, label %land.rhs81, label %land.end85, !dbg !20058

land.rhs81:                                       ; preds = %land.lhs.true78
  %64 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20059
  %65 = load i32, i32* %dir_fd, align 4, !dbg !20060
  %call82 = call i32 @leaf_optimization(%struct._ftsent* %64, i32 %65), !dbg !20061
  %cmp83 = icmp ne i32 %call82, 0, !dbg !20062
  br label %land.end85

land.end85:                                       ; preds = %land.rhs81, %land.lhs.true78, %land.lhs.true74, %land.lhs.true70, %land.rhs66
  %66 = phi i1 [ false, %land.lhs.true78 ], [ false, %land.lhs.true74 ], [ false, %land.lhs.true70 ], [ false, %land.rhs66 ], [ %cmp83, %land.rhs81 ], !dbg !20063
  %lnot86 = xor i1 %66, true, !dbg !20064
  br label %land.end87

land.end87:                                       ; preds = %land.end85, %if.else63
  %67 = phi i1 [ false, %if.else63 ], [ %lnot86, %land.end85 ], !dbg !20063
  %frombool88 = zext i1 %67 to i8, !dbg !20065
  store i8 %frombool88, i8* %descend, align 1, !dbg !20065
  %68 = load i8, i8* %descend, align 1, !dbg !20066
  %tobool89 = trunc i8 %68 to i1, !dbg !20066
  br i1 %tobool89, label %if.then93, label %lor.lhs.false, !dbg !20068

lor.lhs.false:                                    ; preds = %land.end87
  %69 = load i32, i32* %type.addr, align 4, !dbg !20069
  %cmp91 = icmp eq i32 %69, 3, !dbg !20070
  br i1 %cmp91, label %if.then93, label %if.end134, !dbg !20071

if.then93:                                        ; preds = %lor.lhs.false, %land.end87
  %70 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20072
  %fts_options94 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !20072, !ctir !1742
  %71 = load i32, i32* %fts_options94, align 8, !dbg !20072, !ctir !7
  %and95 = and i32 %71, 512, !dbg !20072
  %tobool96 = icmp ne i32 %and95, 0, !dbg !20072
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !20075

if.then97:                                        ; preds = %if.then93
  %72 = load i32, i32* %dir_fd, align 4, !dbg !20076
  %call98 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %72, i32 1030, i32 3), !dbg !20077
  store i32 %call98, i32* %dir_fd, align 4, !dbg !20078
  br label %if.end99, !dbg !20079

if.end99:                                         ; preds = %if.then97, %if.then93
  %73 = load i32, i32* %dir_fd, align 4, !dbg !20080
  %cmp100 = icmp slt i32 %73, 0, !dbg !20082
  br i1 %cmp100, label %if.then105, label %lor.lhs.false102, !dbg !20083

lor.lhs.false102:                                 ; preds = %if.end99
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20084
  %75 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20085
  %76 = load i32, i32* %dir_fd, align 4, !dbg !20086
  %call103 = call i32 @fts_safe_changedir(%struct.FTS* %74, %struct._ftsent* %75, i32 %76, i8* null), !dbg !20087
  %tobool104 = icmp ne i32 %call103, 0, !dbg !20087
  br i1 %tobool104, label %if.then105, label %if.else132, !dbg !20088

if.then105:                                       ; preds = %lor.lhs.false102, %if.end99
  %77 = load i8, i8* %descend, align 1, !dbg !20089
  %tobool106 = trunc i8 %77 to i1, !dbg !20089
  br i1 %tobool106, label %land.lhs.true108, label %if.end114, !dbg !20092

land.lhs.true108:                                 ; preds = %if.then105
  %78 = load i32, i32* %type.addr, align 4, !dbg !20093
  %cmp109 = icmp eq i32 %78, 3, !dbg !20094
  br i1 %cmp109, label %if.then111, label %if.end114, !dbg !20095

if.then111:                                       ; preds = %land.lhs.true108
  %call112 = call i32* @__errno_location() #15, !dbg !20096
  %79 = load i32, i32* %call112, align 4, !dbg !20096, !ctir !7
  %80 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20097
  %fts_errno113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 8, !dbg !20098, !ctir !1725
  store i32 %79, i32* %fts_errno113, align 8, !dbg !20099, !ctir !7
  br label %if.end114, !dbg !20097

if.end114:                                        ; preds = %if.then111, %land.lhs.true108, %if.then105
  %81 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20100
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 16, !dbg !20101, !ctir !1725
  %82 = load i16, i16* %fts_flags, align 2, !dbg !20102, !ctir !33
  %conv115 = zext i16 %82 to i32, !dbg !20102
  %or = or i32 %conv115, 1, !dbg !20102
  %conv116 = trunc i32 %or to i16, !dbg !20102
  store i16 %conv116, i16* %fts_flags, align 2, !dbg !20102, !ctir !33
  store i8 0, i8* %descend, align 1, !dbg !20103
  br label %do.body117, !dbg !20104

do.body117:                                       ; preds = %if.end114
  %83 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20105
  %fts_dirp118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 3, !dbg !20105, !ctir !1725
  %84 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp118, align 8, !dbg !20105, !ctir !541
  %call119 = call i32 @closedir(%struct.__dirstream* %84), !dbg !20105
  %85 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20105
  %fts_dirp120 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 3, !dbg !20105, !ctir !1725
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp120, align 8, !dbg !20105, !ctir !541
  br label %do.end121, !dbg !20105

do.end121:                                        ; preds = %do.body117
  %86 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20107
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 10, !dbg !20107, !ctir !1742
  %87 = load i32, i32* %fts_options122, align 8, !dbg !20107, !ctir !7
  %and123 = and i32 %87, 512, !dbg !20107
  %tobool124 = icmp ne i32 %and123, 0, !dbg !20107
  br i1 %tobool124, label %land.lhs.true125, label %if.end130, !dbg !20109

land.lhs.true125:                                 ; preds = %do.end121
  %88 = load i32, i32* %dir_fd, align 4, !dbg !20110
  %cmp126 = icmp sle i32 0, %88, !dbg !20111
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !20112

if.then128:                                       ; preds = %land.lhs.true125
  %89 = load i32, i32* %dir_fd, align 4, !dbg !20113
  %call129 = call i32 @close(i32 %89), !dbg !20114
  br label %if.end130, !dbg !20114

if.end130:                                        ; preds = %if.then128, %land.lhs.true125, %do.end121
  %90 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20115
  %fts_dirp131 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %90, i32 0, i32 3, !dbg !20116, !ctir !1725
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp131, align 8, !dbg !20117, !ctir !541
  br label %if.end133, !dbg !20118

if.else132:                                       ; preds = %lor.lhs.false102
  store i8 1, i8* %descend, align 1, !dbg !20119
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.end130
  br label %if.end134, !dbg !20120

if.end134:                                        ; preds = %if.end133, %lor.lhs.false
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then62
  %91 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20121
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 7, !dbg !20121, !ctir !1725
  %92 = load i8*, i8** %fts_path, align 8, !dbg !20121, !ctir !9
  %93 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20121
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 10, !dbg !20121, !ctir !1725
  %94 = load i64, i64* %fts_pathlen, align 8, !dbg !20121, !ctir !55
  %sub = sub i64 %94, 1, !dbg !20121
  %arrayidx = getelementptr inbounds i8, i8* %92, i64 %sub, !dbg !20121, !ctir !9
  %95 = load i8, i8* %arrayidx, align 1, !dbg !20121
  %conv136 = sext i8 %95 to i32, !dbg !20121
  %cmp137 = icmp eq i32 %conv136, 47, !dbg !20121
  br i1 %cmp137, label %cond.true139, label %cond.false142, !dbg !20121

cond.true139:                                     ; preds = %if.end135
  %96 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20121
  %fts_pathlen140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 10, !dbg !20121, !ctir !1725
  %97 = load i64, i64* %fts_pathlen140, align 8, !dbg !20121, !ctir !55
  %sub141 = sub i64 %97, 1, !dbg !20121
  br label %cond.end144, !dbg !20121

cond.false142:                                    ; preds = %if.end135
  %98 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20121
  %fts_pathlen143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 10, !dbg !20121, !ctir !1725
  %99 = load i64, i64* %fts_pathlen143, align 8, !dbg !20121, !ctir !55
  br label %cond.end144, !dbg !20121

cond.end144:                                      ; preds = %cond.false142, %cond.true139
  %cond145 = phi i64 [ %sub141, %cond.true139 ], [ %99, %cond.false142 ], !dbg !20121
  store i64 %cond145, i64* %len, align 8, !dbg !20122
  %100 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20123
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !20123, !ctir !1742
  %101 = load i32, i32* %fts_options146, align 8, !dbg !20123, !ctir !7
  %and147 = and i32 %101, 4, !dbg !20123
  %tobool148 = icmp ne i32 %and147, 0, !dbg !20123
  br i1 %tobool148, label %if.then149, label %if.else151, !dbg !20125

if.then149:                                       ; preds = %cond.end144
  %102 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20126
  %fts_path150 = getelementptr inbounds %struct.FTS, %struct.FTS* %102, i32 0, i32 4, !dbg !20128, !ctir !1742
  %103 = load i8*, i8** %fts_path150, align 8, !dbg !20128, !ctir !9
  %104 = load i64, i64* %len, align 8, !dbg !20129
  %add.ptr = getelementptr inbounds i8, i8* %103, i64 %104, !dbg !20130, !ctir !10
  store i8* %add.ptr, i8** %cp, align 8, !dbg !20131
  %105 = load i8*, i8** %cp, align 8, !dbg !20132
  %incdec.ptr = getelementptr inbounds i8, i8* %105, i32 1, !dbg !20132, !ctir !10
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20132
  store i8 47, i8* %105, align 1, !dbg !20133, !ctir !10
  br label %if.end152, !dbg !20134

if.else151:                                       ; preds = %cond.end144
  store i8* null, i8** %cp, align 8, !dbg !20135
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then149
  %106 = load i64, i64* %len, align 8, !dbg !20137
  %inc = add i64 %106, 1, !dbg !20137
  store i64 %inc, i64* %len, align 8, !dbg !20137
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20138
  %fts_pathlen153 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 7, !dbg !20139, !ctir !1742
  %108 = load i64, i64* %fts_pathlen153, align 8, !dbg !20139, !ctir !55
  %109 = load i64, i64* %len, align 8, !dbg !20140
  %sub154 = sub i64 %108, %109, !dbg !20141
  store i64 %sub154, i64* %maxlen, align 8, !dbg !20142
  %110 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20143
  %fts_level155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 12, !dbg !20144, !ctir !1725
  %111 = load i64, i64* %fts_level155, align 8, !dbg !20144, !ctir !506
  %add = add nsw i64 %111, 1, !dbg !20145
  store i64 %add, i64* %level, align 8, !dbg !20146
  store i8 0, i8* %doadjust, align 1, !dbg !20147
  store %struct._ftsent* null, %struct._ftsent** %head, align 8, !dbg !20148
  store %struct._ftsent* null, %struct._ftsent** %tail, align 8, !dbg !20149
  store i64 0, i64* %nitems, align 8, !dbg !20150
  br label %while.cond, !dbg !20151

while.cond:                                       ; preds = %if.end334, %if.then200, %if.end152
  %112 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20152
  %fts_dirp156 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 3, !dbg !20153, !ctir !1725
  %113 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp156, align 8, !dbg !20153, !ctir !541
  %tobool157 = icmp ne %struct.__dirstream* %113, null, !dbg !20151
  br i1 %tobool157, label %while.body, label %while.end, !dbg !20151

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %d_namelen, metadata !20154, metadata !DIExpression()), !dbg !20156
  %call158 = call i32* @__errno_location() #15, !dbg !20157
  store i32 0, i32* %call158, align 4, !dbg !20157, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp159, metadata !20158, metadata !DIExpression()), !dbg !20159
  %114 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20160
  %fts_dirp160 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 3, !dbg !20161, !ctir !1725
  %115 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp160, align 8, !dbg !20161, !ctir !541
  %call161 = call %struct.dirent* @readdir(%struct.__dirstream* %115), !dbg !20162
  store %struct.dirent* %call161, %struct.dirent** %dp159, align 8, !dbg !20159
  %116 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20163
  %cmp162 = icmp eq %struct.dirent* %116, null, !dbg !20165
  br i1 %cmp162, label %if.then164, label %if.end177, !dbg !20166

if.then164:                                       ; preds = %while.body
  %call165 = call i32* @__errno_location() #15, !dbg !20167
  %117 = load i32, i32* %call165, align 4, !dbg !20167, !ctir !7
  %tobool166 = icmp ne i32 %117, 0, !dbg !20167
  br i1 %tobool166, label %if.then167, label %if.end176, !dbg !20170

if.then167:                                       ; preds = %if.then164
  %call168 = call i32* @__errno_location() #15, !dbg !20171
  %118 = load i32, i32* %call168, align 4, !dbg !20171, !ctir !7
  %119 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20173
  %fts_errno169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 8, !dbg !20174, !ctir !1725
  store i32 %118, i32* %fts_errno169, align 8, !dbg !20175, !ctir !7
  %120 = load i8, i8* %continue_readdir, align 1, !dbg !20176
  %tobool170 = trunc i8 %120 to i1, !dbg !20176
  br i1 %tobool170, label %lor.end, label %lor.rhs, !dbg !20177

lor.rhs:                                          ; preds = %if.then167
  %121 = load i64, i64* %nitems, align 8, !dbg !20178
  %tobool172 = icmp ne i64 %121, 0, !dbg !20177
  br label %lor.end, !dbg !20177

lor.end:                                          ; preds = %lor.rhs, %if.then167
  %122 = phi i1 [ true, %if.then167 ], [ %tobool172, %lor.rhs ]
  %123 = zext i1 %122 to i64, !dbg !20179
  %cond173 = select i1 %122, i32 7, i32 4, !dbg !20179
  %conv174 = trunc i32 %cond173 to i16, !dbg !20179
  %124 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20180
  %fts_info175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %124, i32 0, i32 15, !dbg !20181, !ctir !1725
  store i16 %conv174, i16* %fts_info175, align 8, !dbg !20182, !ctir !33
  br label %if.end176, !dbg !20183

if.end176:                                        ; preds = %lor.end, %if.then164
  br label %while.end, !dbg !20184

if.end177:                                        ; preds = %while.body
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20185
  %fts_options178 = getelementptr inbounds %struct.FTS, %struct.FTS* %125, i32 0, i32 10, !dbg !20185, !ctir !1742
  %126 = load i32, i32* %fts_options178, align 8, !dbg !20185, !ctir !7
  %and179 = and i32 %126, 32, !dbg !20185
  %tobool180 = icmp ne i32 %and179, 0, !dbg !20185
  br i1 %tobool180, label %if.end201, label %land.lhs.true181, !dbg !20187

land.lhs.true181:                                 ; preds = %if.end177
  %127 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20188
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %127, i32 0, i32 4, !dbg !20188, !ctir !1845
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !20188, !ctir !503
  %128 = load i8, i8* %arrayidx182, align 1, !dbg !20188
  %conv183 = sext i8 %128 to i32, !dbg !20188
  %cmp184 = icmp eq i32 %conv183, 46, !dbg !20188
  br i1 %cmp184, label %land.lhs.true186, label %if.end201, !dbg !20188

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %129 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20188
  %d_name187 = getelementptr inbounds %struct.dirent, %struct.dirent* %129, i32 0, i32 4, !dbg !20188, !ctir !1845
  %arrayidx188 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name187, i64 0, i64 1, !dbg !20188, !ctir !503
  %130 = load i8, i8* %arrayidx188, align 1, !dbg !20188
  %tobool189 = icmp ne i8 %130, 0, !dbg !20188
  br i1 %tobool189, label %lor.lhs.false190, label %if.then200, !dbg !20188

lor.lhs.false190:                                 ; preds = %land.lhs.true186
  %131 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20188
  %d_name191 = getelementptr inbounds %struct.dirent, %struct.dirent* %131, i32 0, i32 4, !dbg !20188, !ctir !1845
  %arrayidx192 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name191, i64 0, i64 1, !dbg !20188, !ctir !503
  %132 = load i8, i8* %arrayidx192, align 1, !dbg !20188
  %conv193 = sext i8 %132 to i32, !dbg !20188
  %cmp194 = icmp eq i32 %conv193, 46, !dbg !20188
  br i1 %cmp194, label %land.lhs.true196, label %if.end201, !dbg !20188

land.lhs.true196:                                 ; preds = %lor.lhs.false190
  %133 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20188
  %d_name197 = getelementptr inbounds %struct.dirent, %struct.dirent* %133, i32 0, i32 4, !dbg !20188, !ctir !1845
  %arrayidx198 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name197, i64 0, i64 2, !dbg !20188, !ctir !503
  %134 = load i8, i8* %arrayidx198, align 1, !dbg !20188
  %tobool199 = icmp ne i8 %134, 0, !dbg !20188
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !20189

if.then200:                                       ; preds = %land.lhs.true196, %land.lhs.true186
  br label %while.cond, !dbg !20190, !llvm.loop !20191

if.end201:                                        ; preds = %land.lhs.true196, %lor.lhs.false190, %land.lhs.true181, %if.end177
  %135 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20193
  %d_name202 = getelementptr inbounds %struct.dirent, %struct.dirent* %135, i32 0, i32 4, !dbg !20193, !ctir !1845
  %arraydecay203 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name202, i64 0, i64 0, !dbg !20193, !ctir !503
  %call204 = call i64 @strlen(i8* %arraydecay203) #14, !dbg !20193
  store i64 %call204, i64* %d_namelen, align 8, !dbg !20194
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20195
  %137 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20196
  %d_name205 = getelementptr inbounds %struct.dirent, %struct.dirent* %137, i32 0, i32 4, !dbg !20197, !ctir !1845
  %arraydecay206 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name205, i64 0, i64 0, !dbg !20196, !ctir !503
  %138 = load i64, i64* %d_namelen, align 8, !dbg !20198
  %call207 = call %struct._ftsent* @fts_alloc(%struct.FTS* %136, i8* %arraydecay206, i64 %138), !dbg !20199
  store %struct._ftsent* %call207, %struct._ftsent** %p, align 8, !dbg !20200
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20201
  %tobool208 = icmp ne %struct._ftsent* %139, null, !dbg !20201
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !20203

if.then209:                                       ; preds = %if.end201
  br label %mem1, !dbg !20204

if.end210:                                        ; preds = %if.end201
  %140 = load i64, i64* %d_namelen, align 8, !dbg !20205
  %141 = load i64, i64* %maxlen, align 8, !dbg !20207
  %cmp211 = icmp uge i64 %140, %141, !dbg !20208
  br i1 %cmp211, label %if.then213, label %if.end244, !dbg !20209

if.then213:                                       ; preds = %if.end210
  %142 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20210
  %fts_path214 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 4, !dbg !20212, !ctir !1742
  %143 = load i8*, i8** %fts_path214, align 8, !dbg !20212, !ctir !9
  store i8* %143, i8** %oldaddr, align 8, !dbg !20213
  %144 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20214
  %145 = load i64, i64* %d_namelen, align 8, !dbg !20216
  %146 = load i64, i64* %len, align 8, !dbg !20217
  %add215 = add i64 %145, %146, !dbg !20218
  %add216 = add i64 %add215, 1, !dbg !20219
  %call217 = call zeroext i1 @fts_palloc(%struct.FTS* %144, i64 %add216), !dbg !20220
  br i1 %call217, label %if.end229, label %if.then218, !dbg !20221

if.then218:                                       ; preds = %if.then213
  br label %mem1, !dbg !20222

mem1:                                             ; preds = %if.then218, %if.then209
  call void @llvm.dbg.label(metadata !20223), !dbg !20225
  %call219 = call i32* @__errno_location() #15, !dbg !20226
  %147 = load i32, i32* %call219, align 4, !dbg !20226, !ctir !7
  store i32 %147, i32* %saved_errno, align 4, !dbg !20227
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20228
  %149 = bitcast %struct._ftsent* %148 to i8*, !dbg !20228
  call void @free(i8* %149) #10, !dbg !20229
  %150 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20230
  call void @fts_lfree(%struct._ftsent* %150), !dbg !20231
  br label %do.body220, !dbg !20232

do.body220:                                       ; preds = %mem1
  %151 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20233
  %fts_dirp221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %151, i32 0, i32 3, !dbg !20233, !ctir !1725
  %152 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp221, align 8, !dbg !20233, !ctir !541
  %call222 = call i32 @closedir(%struct.__dirstream* %152), !dbg !20233
  %153 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20233
  %fts_dirp223 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 3, !dbg !20233, !ctir !1725
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp223, align 8, !dbg !20233, !ctir !541
  br label %do.end224, !dbg !20233

do.end224:                                        ; preds = %do.body220
  %154 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20235
  %fts_info225 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 15, !dbg !20236, !ctir !1725
  store i16 7, i16* %fts_info225, align 8, !dbg !20237, !ctir !33
  %155 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20238
  %fts_options226 = getelementptr inbounds %struct.FTS, %struct.FTS* %155, i32 0, i32 10, !dbg !20238, !ctir !1742
  %156 = load i32, i32* %fts_options226, align 8, !dbg !20238, !ctir !7
  %or227 = or i32 %156, 8192, !dbg !20238
  store i32 %or227, i32* %fts_options226, align 8, !dbg !20238, !ctir !7
  %157 = load i32, i32* %saved_errno, align 4, !dbg !20239
  %call228 = call i32* @__errno_location() #15, !dbg !20239
  store i32 %157, i32* %call228, align 4, !dbg !20239, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20240
  br label %return, !dbg !20240

if.end229:                                        ; preds = %if.then213
  %158 = load i8*, i8** %oldaddr, align 8, !dbg !20241
  %159 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20243
  %fts_path230 = getelementptr inbounds %struct.FTS, %struct.FTS* %159, i32 0, i32 4, !dbg !20244, !ctir !1742
  %160 = load i8*, i8** %fts_path230, align 8, !dbg !20244, !ctir !9
  %cmp231 = icmp ne i8* %158, %160, !dbg !20245
  br i1 %cmp231, label %if.then233, label %if.end241, !dbg !20246

if.then233:                                       ; preds = %if.end229
  store i8 1, i8* %doadjust, align 1, !dbg !20247
  %161 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20249
  %fts_options234 = getelementptr inbounds %struct.FTS, %struct.FTS* %161, i32 0, i32 10, !dbg !20249, !ctir !1742
  %162 = load i32, i32* %fts_options234, align 8, !dbg !20249, !ctir !7
  %and235 = and i32 %162, 4, !dbg !20249
  %tobool236 = icmp ne i32 %and235, 0, !dbg !20249
  br i1 %tobool236, label %if.then237, label %if.end240, !dbg !20251

if.then237:                                       ; preds = %if.then233
  %163 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20252
  %fts_path238 = getelementptr inbounds %struct.FTS, %struct.FTS* %163, i32 0, i32 4, !dbg !20253, !ctir !1742
  %164 = load i8*, i8** %fts_path238, align 8, !dbg !20253, !ctir !9
  %165 = load i64, i64* %len, align 8, !dbg !20254
  %add.ptr239 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !20255, !ctir !10
  store i8* %add.ptr239, i8** %cp, align 8, !dbg !20256
  br label %if.end240, !dbg !20257

if.end240:                                        ; preds = %if.then237, %if.then233
  br label %if.end241, !dbg !20258

if.end241:                                        ; preds = %if.end240, %if.end229
  %166 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20259
  %fts_pathlen242 = getelementptr inbounds %struct.FTS, %struct.FTS* %166, i32 0, i32 7, !dbg !20260, !ctir !1742
  %167 = load i64, i64* %fts_pathlen242, align 8, !dbg !20260, !ctir !55
  %168 = load i64, i64* %len, align 8, !dbg !20261
  %sub243 = sub i64 %167, %168, !dbg !20262
  store i64 %sub243, i64* %maxlen, align 8, !dbg !20263
  br label %if.end244, !dbg !20264

if.end244:                                        ; preds = %if.end241, %if.end210
  %169 = load i64, i64* %len, align 8, !dbg !20265
  %170 = load i64, i64* %d_namelen, align 8, !dbg !20266
  %add245 = add i64 %169, %170, !dbg !20267
  store i64 %add245, i64* %new_len, align 8, !dbg !20268
  %171 = load i64, i64* %new_len, align 8, !dbg !20269
  %172 = load i64, i64* %len, align 8, !dbg !20271
  %cmp246 = icmp ult i64 %171, %172, !dbg !20272
  br i1 %cmp246, label %if.then248, label %if.end258, !dbg !20273

if.then248:                                       ; preds = %if.end244
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20274
  %174 = bitcast %struct._ftsent* %173 to i8*, !dbg !20274
  call void @free(i8* %174) #10, !dbg !20276
  %175 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20277
  call void @fts_lfree(%struct._ftsent* %175), !dbg !20278
  br label %do.body249, !dbg !20279

do.body249:                                       ; preds = %if.then248
  %176 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20280
  %fts_dirp250 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %176, i32 0, i32 3, !dbg !20280, !ctir !1725
  %177 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp250, align 8, !dbg !20280, !ctir !541
  %call251 = call i32 @closedir(%struct.__dirstream* %177), !dbg !20280
  %178 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20280
  %fts_dirp252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %178, i32 0, i32 3, !dbg !20280, !ctir !1725
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp252, align 8, !dbg !20280, !ctir !541
  br label %do.end253, !dbg !20280

do.end253:                                        ; preds = %do.body249
  %179 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20282
  %fts_info254 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 15, !dbg !20283, !ctir !1725
  store i16 7, i16* %fts_info254, align 8, !dbg !20284, !ctir !33
  %180 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20285
  %fts_options255 = getelementptr inbounds %struct.FTS, %struct.FTS* %180, i32 0, i32 10, !dbg !20285, !ctir !1742
  %181 = load i32, i32* %fts_options255, align 8, !dbg !20285, !ctir !7
  %or256 = or i32 %181, 8192, !dbg !20285
  store i32 %or256, i32* %fts_options255, align 8, !dbg !20285, !ctir !7
  %call257 = call i32* @__errno_location() #15, !dbg !20286
  store i32 36, i32* %call257, align 4, !dbg !20286, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20287
  br label %return, !dbg !20287

if.end258:                                        ; preds = %if.end244
  %182 = load i64, i64* %level, align 8, !dbg !20288
  %183 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20289
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %183, i32 0, i32 12, !dbg !20290, !ctir !1725
  store i64 %182, i64* %fts_level259, align 8, !dbg !20291, !ctir !506
  %184 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20292
  %fts_cur260 = getelementptr inbounds %struct.FTS, %struct.FTS* %184, i32 0, i32 0, !dbg !20293, !ctir !1742
  %185 = load %struct._ftsent*, %struct._ftsent** %fts_cur260, align 8, !dbg !20293, !ctir !1729
  %186 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20294
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %186, i32 0, i32 1, !dbg !20295, !ctir !1725
  store %struct._ftsent* %185, %struct._ftsent** %fts_parent, align 8, !dbg !20296, !ctir !1729
  %187 = load i64, i64* %new_len, align 8, !dbg !20297
  %188 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20298
  %fts_pathlen261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 10, !dbg !20299, !ctir !1725
  store i64 %187, i64* %fts_pathlen261, align 8, !dbg !20300, !ctir !55
  %189 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20301
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %189, i32 0, i32 0, !dbg !20301, !ctir !1845
  %190 = load i64, i64* %d_ino, align 8, !dbg !20301, !ctir !260
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20302
  %fts_statp262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !20303, !ctir !1725
  %arraydecay263 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp262, i64 0, i64 0, !dbg !20304, !ctir !1796
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay263, i32 0, i32 1, !dbg !20304, !ctir !1797
  store i64 %190, i64* %st_ino, align 8, !dbg !20305, !ctir !260
  %192 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20306
  %fts_options264 = getelementptr inbounds %struct.FTS, %struct.FTS* %192, i32 0, i32 10, !dbg !20306, !ctir !1742
  %193 = load i32, i32* %fts_options264, align 8, !dbg !20306, !ctir !7
  %and265 = and i32 %193, 4, !dbg !20306
  %tobool266 = icmp ne i32 %and265, 0, !dbg !20306
  br i1 %tobool266, label %if.then267, label %if.else272, !dbg !20308

if.then267:                                       ; preds = %if.end258
  %194 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20309
  %fts_path268 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %194, i32 0, i32 7, !dbg !20311, !ctir !1725
  %195 = load i8*, i8** %fts_path268, align 8, !dbg !20311, !ctir !9
  %196 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20312
  %fts_accpath269 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %196, i32 0, i32 6, !dbg !20313, !ctir !1725
  store i8* %195, i8** %fts_accpath269, align 8, !dbg !20314, !ctir !9
  %197 = load i8*, i8** %cp, align 8, !dbg !20315
  %198 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20316
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %198, i32 0, i32 19, !dbg !20317, !ctir !1725
  %arraydecay270 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20318, !ctir !1115
  %199 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20319
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 13, !dbg !20320, !ctir !1725
  %200 = load i64, i64* %fts_namelen, align 8, !dbg !20320, !ctir !55
  %add271 = add i64 %200, 1, !dbg !20321
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 8 %arraydecay270, i64 %add271, i1 false), !dbg !20318
  br label %if.end276, !dbg !20322

if.else272:                                       ; preds = %if.end258
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20323
  %fts_name273 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 19, !dbg !20324, !ctir !1725
  %arraydecay274 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name273, i64 0, i64 0, !dbg !20323, !ctir !1115
  %202 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20325
  %fts_accpath275 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %202, i32 0, i32 6, !dbg !20326, !ctir !1725
  store i8* %arraydecay274, i8** %fts_accpath275, align 8, !dbg !20327, !ctir !9
  br label %if.end276

if.end276:                                        ; preds = %if.else272, %if.then267
  %203 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20328
  %fts_compar277 = getelementptr inbounds %struct.FTS, %struct.FTS* %203, i32 0, i32 9, !dbg !20330, !ctir !1742
  %204 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar277, align 8, !dbg !20330, !ctir !1756
  %cmp278 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %204, null, !dbg !20331
  br i1 %cmp278, label %if.then284, label %lor.lhs.false280, !dbg !20332

lor.lhs.false280:                                 ; preds = %if.end276
  %205 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20333
  %fts_options281 = getelementptr inbounds %struct.FTS, %struct.FTS* %205, i32 0, i32 10, !dbg !20333, !ctir !1742
  %206 = load i32, i32* %fts_options281, align 8, !dbg !20333, !ctir !7
  %and282 = and i32 %206, 1024, !dbg !20333
  %tobool283 = icmp ne i32 %and282, 0, !dbg !20333
  br i1 %tobool283, label %if.then284, label %if.else311, !dbg !20334

if.then284:                                       ; preds = %lor.lhs.false280, %if.end276
  call void @llvm.dbg.declare(metadata i8* %skip_stat, metadata !20335, metadata !DIExpression()), !dbg !20337
  %207 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20338
  %fts_options285 = getelementptr inbounds %struct.FTS, %struct.FTS* %207, i32 0, i32 10, !dbg !20338, !ctir !1742
  %208 = load i32, i32* %fts_options285, align 8, !dbg !20338, !ctir !7
  %and286 = and i32 %208, 16, !dbg !20338
  %tobool287 = icmp ne i32 %and286, 0, !dbg !20338
  br i1 %tobool287, label %land.lhs.true288, label %land.end302, !dbg !20339

land.lhs.true288:                                 ; preds = %if.then284
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20340
  %fts_options289 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 10, !dbg !20340, !ctir !1742
  %210 = load i32, i32* %fts_options289, align 8, !dbg !20340, !ctir !7
  %and290 = and i32 %210, 8, !dbg !20340
  %tobool291 = icmp ne i32 %and290, 0, !dbg !20340
  br i1 %tobool291, label %land.lhs.true292, label %land.end302, !dbg !20341

land.lhs.true292:                                 ; preds = %land.lhs.true288
  %211 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20342
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %211, i32 0, i32 3, !dbg !20342, !ctir !1845
  %212 = load i8, i8* %d_type, align 2, !dbg !20342, !ctir !450
  %conv293 = zext i8 %212 to i32, !dbg !20342
  %cmp294 = icmp ne i32 %conv293, 0, !dbg !20342
  br i1 %cmp294, label %land.rhs296, label %land.end302, !dbg !20343

land.rhs296:                                      ; preds = %land.lhs.true292
  %213 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20344
  %d_type297 = getelementptr inbounds %struct.dirent, %struct.dirent* %213, i32 0, i32 3, !dbg !20344, !ctir !1845
  %214 = load i8, i8* %d_type297, align 2, !dbg !20344, !ctir !450
  %conv298 = zext i8 %214 to i32, !dbg !20344
  %cmp299 = icmp eq i32 %conv298, 4, !dbg !20344
  %lnot301 = xor i1 %cmp299, true, !dbg !20345
  br label %land.end302

land.end302:                                      ; preds = %land.rhs296, %land.lhs.true292, %land.lhs.true288, %if.then284
  %215 = phi i1 [ false, %land.lhs.true292 ], [ false, %land.lhs.true288 ], [ false, %if.then284 ], [ %lnot301, %land.rhs296 ], !dbg !20346
  %frombool303 = zext i1 %215 to i8, !dbg !20337
  store i8 %frombool303, i8* %skip_stat, align 1, !dbg !20337
  %216 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20347
  %fts_info304 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 15, !dbg !20348, !ctir !1725
  store i16 11, i16* %fts_info304, align 8, !dbg !20349, !ctir !33
  %217 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20350
  %fts_statp305 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %217, i32 0, i32 18, !dbg !20351, !ctir !1725
  %arraydecay306 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp305, i64 0, i64 0, !dbg !20350, !ctir !1796
  %218 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20352
  %d_type307 = getelementptr inbounds %struct.dirent, %struct.dirent* %218, i32 0, i32 3, !dbg !20352, !ctir !1845
  %219 = load i8, i8* %d_type307, align 2, !dbg !20352, !ctir !450
  %conv308 = zext i8 %219 to i32, !dbg !20352
  call void @set_stat_type(%struct.stat* %arraydecay306, i32 %conv308), !dbg !20353
  %220 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20354
  %221 = load i8, i8* %skip_stat, align 1, !dbg !20355
  %tobool309 = trunc i8 %221 to i1, !dbg !20355
  %lnot310 = xor i1 %tobool309, true, !dbg !20356
  call void @fts_set_stat_required(%struct._ftsent* %220, i1 zeroext %lnot310), !dbg !20357
  br label %if.end314, !dbg !20358

if.else311:                                       ; preds = %lor.lhs.false280
  %222 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20359
  %223 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20361
  %call312 = call zeroext i16 @fts_stat(%struct.FTS* %222, %struct._ftsent* %223, i1 zeroext false), !dbg !20362
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20363
  %fts_info313 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !20364, !ctir !1725
  store i16 %call312, i16* %fts_info313, align 8, !dbg !20365, !ctir !33
  br label %if.end314

if.end314:                                        ; preds = %if.else311, %land.end302
  %225 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20366
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %225, i32 0, i32 2, !dbg !20367, !ctir !1725
  store %struct._ftsent* null, %struct._ftsent** %fts_link, align 8, !dbg !20368, !ctir !1729
  %226 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20369
  %cmp315 = icmp eq %struct._ftsent* %226, null, !dbg !20371
  br i1 %cmp315, label %if.then317, label %if.else318, !dbg !20372

if.then317:                                       ; preds = %if.end314
  %227 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20373
  store %struct._ftsent* %227, %struct._ftsent** %tail, align 8, !dbg !20374
  store %struct._ftsent* %227, %struct._ftsent** %head, align 8, !dbg !20375
  br label %if.end320, !dbg !20376

if.else318:                                       ; preds = %if.end314
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20377
  %229 = load %struct._ftsent*, %struct._ftsent** %tail, align 8, !dbg !20379
  %fts_link319 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %229, i32 0, i32 2, !dbg !20380, !ctir !1725
  store %struct._ftsent* %228, %struct._ftsent** %fts_link319, align 8, !dbg !20381, !ctir !1729
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20382
  store %struct._ftsent* %230, %struct._ftsent** %tail, align 8, !dbg !20383
  br label %if.end320

if.end320:                                        ; preds = %if.else318, %if.then317
  %231 = load i64, i64* %nitems, align 8, !dbg !20384
  %cmp321 = icmp eq i64 %231, 10000, !dbg !20386
  br i1 %cmp321, label %land.lhs.true323, label %if.end329, !dbg !20387

land.lhs.true323:                                 ; preds = %if.end320
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20388
  %fts_compar324 = getelementptr inbounds %struct.FTS, %struct.FTS* %232, i32 0, i32 9, !dbg !20389, !ctir !1742
  %233 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar324, align 8, !dbg !20389, !ctir !1756
  %tobool325 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %233, null, !dbg !20388
  br i1 %tobool325, label %if.end329, label %if.then326, !dbg !20390

if.then326:                                       ; preds = %land.lhs.true323
  %234 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20391
  %235 = load i32, i32* %dir_fd, align 4, !dbg !20392
  %call327 = call zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %234, i32 %235), !dbg !20393
  %frombool328 = zext i1 %call327 to i8, !dbg !20394
  store i8 %frombool328, i8* %sort_by_inode, align 1, !dbg !20394
  br label %if.end329, !dbg !20395

if.end329:                                        ; preds = %if.then326, %land.lhs.true323, %if.end320
  %236 = load i64, i64* %nitems, align 8, !dbg !20396
  %inc330 = add i64 %236, 1, !dbg !20396
  store i64 %inc330, i64* %nitems, align 8, !dbg !20396
  %237 = load i64, i64* %max_entries, align 8, !dbg !20397
  %238 = load i64, i64* %nitems, align 8, !dbg !20399
  %cmp331 = icmp ule i64 %237, %238, !dbg !20400
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !20401

if.then333:                                       ; preds = %if.end329
  br label %break_without_closedir, !dbg !20402

if.end334:                                        ; preds = %if.end329
  br label %while.cond, !dbg !20151, !llvm.loop !20191

while.end:                                        ; preds = %if.end176, %while.cond
  %239 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20404
  %fts_dirp335 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %239, i32 0, i32 3, !dbg !20406, !ctir !1725
  %240 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp335, align 8, !dbg !20406, !ctir !541
  %tobool336 = icmp ne %struct.__dirstream* %240, null, !dbg !20404
  br i1 %tobool336, label %if.then337, label %if.end343, !dbg !20407

if.then337:                                       ; preds = %while.end
  br label %do.body338, !dbg !20408

do.body338:                                       ; preds = %if.then337
  %241 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20409
  %fts_dirp339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %241, i32 0, i32 3, !dbg !20409, !ctir !1725
  %242 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp339, align 8, !dbg !20409, !ctir !541
  %call340 = call i32 @closedir(%struct.__dirstream* %242), !dbg !20409
  %243 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20409
  %fts_dirp341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %243, i32 0, i32 3, !dbg !20409, !ctir !1725
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp341, align 8, !dbg !20409, !ctir !541
  br label %do.end342, !dbg !20409

do.end342:                                        ; preds = %do.body338
  br label %if.end343, !dbg !20409

if.end343:                                        ; preds = %do.end342, %while.end
  br label %break_without_closedir, !dbg !20406

break_without_closedir:                           ; preds = %if.end343, %if.then333
  call void @llvm.dbg.label(metadata !20411), !dbg !20412
  %244 = load i8, i8* %doadjust, align 1, !dbg !20413
  %tobool344 = trunc i8 %244 to i1, !dbg !20413
  br i1 %tobool344, label %if.then345, label %if.end346, !dbg !20415

if.then345:                                       ; preds = %break_without_closedir
  %245 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20416
  %246 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20417
  call void @fts_padjust(%struct.FTS* %245, %struct._ftsent* %246), !dbg !20418
  br label %if.end346, !dbg !20418

if.end346:                                        ; preds = %if.then345, %break_without_closedir
  %247 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20419
  %fts_options347 = getelementptr inbounds %struct.FTS, %struct.FTS* %247, i32 0, i32 10, !dbg !20419, !ctir !1742
  %248 = load i32, i32* %fts_options347, align 8, !dbg !20419, !ctir !7
  %and348 = and i32 %248, 4, !dbg !20419
  %tobool349 = icmp ne i32 %and348, 0, !dbg !20419
  br i1 %tobool349, label %if.then350, label %if.end360, !dbg !20421

if.then350:                                       ; preds = %if.end346
  %249 = load i64, i64* %len, align 8, !dbg !20422
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20425
  %fts_pathlen351 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 7, !dbg !20426, !ctir !1742
  %251 = load i64, i64* %fts_pathlen351, align 8, !dbg !20426, !ctir !55
  %cmp352 = icmp eq i64 %249, %251, !dbg !20427
  br i1 %cmp352, label %if.then357, label %lor.lhs.false354, !dbg !20428

lor.lhs.false354:                                 ; preds = %if.then350
  %252 = load i64, i64* %nitems, align 8, !dbg !20429
  %cmp355 = icmp eq i64 %252, 0, !dbg !20430
  br i1 %cmp355, label %if.then357, label %if.end359, !dbg !20431

if.then357:                                       ; preds = %lor.lhs.false354, %if.then350
  %253 = load i8*, i8** %cp, align 8, !dbg !20432
  %incdec.ptr358 = getelementptr inbounds i8, i8* %253, i32 -1, !dbg !20432, !ctir !10
  store i8* %incdec.ptr358, i8** %cp, align 8, !dbg !20432
  br label %if.end359, !dbg !20432

if.end359:                                        ; preds = %if.then357, %lor.lhs.false354
  %254 = load i8*, i8** %cp, align 8, !dbg !20433
  store i8 0, i8* %254, align 1, !dbg !20434, !ctir !10
  br label %if.end360, !dbg !20435

if.end360:                                        ; preds = %if.end359, %if.end346
  %255 = load i8, i8* %continue_readdir, align 1, !dbg !20436
  %tobool361 = trunc i8 %255 to i1, !dbg !20436
  br i1 %tobool361, label %if.end385, label %land.lhs.true362, !dbg !20438

land.lhs.true362:                                 ; preds = %if.end360
  %256 = load i8, i8* %descend, align 1, !dbg !20439
  %tobool363 = trunc i8 %256 to i1, !dbg !20439
  br i1 %tobool363, label %land.lhs.true365, label %if.end385, !dbg !20440

land.lhs.true365:                                 ; preds = %land.lhs.true362
  %257 = load i32, i32* %type.addr, align 4, !dbg !20441
  %cmp366 = icmp eq i32 %257, 1, !dbg !20442
  br i1 %cmp366, label %land.lhs.true370, label %lor.lhs.false368, !dbg !20443

lor.lhs.false368:                                 ; preds = %land.lhs.true365
  %258 = load i64, i64* %nitems, align 8, !dbg !20444
  %tobool369 = icmp ne i64 %258, 0, !dbg !20444
  br i1 %tobool369, label %if.end385, label %land.lhs.true370, !dbg !20445

land.lhs.true370:                                 ; preds = %lor.lhs.false368, %land.lhs.true365
  %259 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20446
  %fts_level371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %259, i32 0, i32 12, !dbg !20447, !ctir !1725
  %260 = load i64, i64* %fts_level371, align 8, !dbg !20447, !ctir !506
  %cmp372 = icmp eq i64 %260, 0, !dbg !20448
  br i1 %cmp372, label %cond.true374, label %cond.false377, !dbg !20449

cond.true374:                                     ; preds = %land.lhs.true370
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20450
  %call375 = call i32 @restore_initial_cwd(%struct.FTS* %261), !dbg !20451
  %tobool376 = icmp ne i32 %call375, 0, !dbg !20451
  br i1 %tobool376, label %if.then381, label %if.end385, !dbg !20446

cond.false377:                                    ; preds = %land.lhs.true370
  %262 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20452
  %263 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20453
  %fts_parent378 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 1, !dbg !20454, !ctir !1725
  %264 = load %struct._ftsent*, %struct._ftsent** %fts_parent378, align 8, !dbg !20454, !ctir !1729
  %call379 = call i32 @fts_safe_changedir(%struct.FTS* %262, %struct._ftsent* %264, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.440, i64 0, i64 0)), !dbg !20455
  %tobool380 = icmp ne i32 %call379, 0, !dbg !20455
  br i1 %tobool380, label %if.then381, label %if.end385, !dbg !20449

if.then381:                                       ; preds = %cond.false377, %cond.true374
  %265 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20456
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 15, !dbg !20458, !ctir !1725
  store i16 7, i16* %fts_info382, align 8, !dbg !20459, !ctir !33
  %266 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20460
  %fts_options383 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 10, !dbg !20460, !ctir !1742
  %267 = load i32, i32* %fts_options383, align 8, !dbg !20460, !ctir !7
  %or384 = or i32 %267, 8192, !dbg !20460
  store i32 %or384, i32* %fts_options383, align 8, !dbg !20460, !ctir !7
  %268 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20461
  call void @fts_lfree(%struct._ftsent* %268), !dbg !20462
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20463
  br label %return, !dbg !20463

if.end385:                                        ; preds = %cond.false377, %cond.true374, %lor.lhs.false368, %land.lhs.true362, %if.end360
  %269 = load i64, i64* %nitems, align 8, !dbg !20464
  %tobool386 = icmp ne i64 %269, 0, !dbg !20464
  br i1 %tobool386, label %if.end403, label %if.then387, !dbg !20466

if.then387:                                       ; preds = %if.end385
  %270 = load i32, i32* %type.addr, align 4, !dbg !20467
  %cmp388 = icmp eq i32 %270, 3, !dbg !20470
  br i1 %cmp388, label %land.lhs.true390, label %if.end402, !dbg !20471

land.lhs.true390:                                 ; preds = %if.then387
  %271 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20472
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %271, i32 0, i32 15, !dbg !20473, !ctir !1725
  %272 = load i16, i16* %fts_info391, align 8, !dbg !20473, !ctir !33
  %conv392 = zext i16 %272 to i32, !dbg !20472
  %cmp393 = icmp ne i32 %conv392, 4, !dbg !20474
  br i1 %cmp393, label %land.lhs.true395, label %if.end402, !dbg !20475

land.lhs.true395:                                 ; preds = %land.lhs.true390
  %273 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20476
  %fts_info396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %273, i32 0, i32 15, !dbg !20477, !ctir !1725
  %274 = load i16, i16* %fts_info396, align 8, !dbg !20477, !ctir !33
  %conv397 = zext i16 %274 to i32, !dbg !20476
  %cmp398 = icmp ne i32 %conv397, 7, !dbg !20478
  br i1 %cmp398, label %if.then400, label %if.end402, !dbg !20479

if.then400:                                       ; preds = %land.lhs.true395
  %275 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20480
  %fts_info401 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %275, i32 0, i32 15, !dbg !20481, !ctir !1725
  store i16 6, i16* %fts_info401, align 8, !dbg !20482, !ctir !33
  br label %if.end402, !dbg !20480

if.end402:                                        ; preds = %if.then400, %land.lhs.true395, %land.lhs.true390, %if.then387
  %276 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20483
  call void @fts_lfree(%struct._ftsent* %276), !dbg !20484
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20485
  br label %return, !dbg !20485

if.end403:                                        ; preds = %if.end385
  %277 = load i8, i8* %sort_by_inode, align 1, !dbg !20486
  %tobool404 = trunc i8 %277 to i1, !dbg !20486
  br i1 %tobool404, label %if.then405, label %if.end409, !dbg !20488

if.then405:                                       ; preds = %if.end403
  %278 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20489
  %fts_compar406 = getelementptr inbounds %struct.FTS, %struct.FTS* %278, i32 0, i32 9, !dbg !20491, !ctir !1742
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar406, align 8, !dbg !20492, !ctir !1756
  %279 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20493
  %280 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20494
  %281 = load i64, i64* %nitems, align 8, !dbg !20495
  %call407 = call %struct._ftsent* @fts_sort(%struct.FTS* %279, %struct._ftsent* %280, i64 %281), !dbg !20496
  store %struct._ftsent* %call407, %struct._ftsent** %head, align 8, !dbg !20497
  %282 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20498
  %fts_compar408 = getelementptr inbounds %struct.FTS, %struct.FTS* %282, i32 0, i32 9, !dbg !20499, !ctir !1742
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar408, align 8, !dbg !20500, !ctir !1756
  br label %if.end409, !dbg !20501

if.end409:                                        ; preds = %if.then405, %if.end403
  %283 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20502
  %fts_compar410 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 9, !dbg !20504, !ctir !1742
  %284 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar410, align 8, !dbg !20504, !ctir !1756
  %tobool411 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %284, null, !dbg !20502
  br i1 %tobool411, label %land.lhs.true412, label %if.end417, !dbg !20505

land.lhs.true412:                                 ; preds = %if.end409
  %285 = load i64, i64* %nitems, align 8, !dbg !20506
  %cmp413 = icmp ugt i64 %285, 1, !dbg !20507
  br i1 %cmp413, label %if.then415, label %if.end417, !dbg !20508

if.then415:                                       ; preds = %land.lhs.true412
  %286 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20509
  %287 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20510
  %288 = load i64, i64* %nitems, align 8, !dbg !20511
  %call416 = call %struct._ftsent* @fts_sort(%struct.FTS* %286, %struct._ftsent* %287, i64 %288), !dbg !20512
  store %struct._ftsent* %call416, %struct._ftsent** %head, align 8, !dbg !20513
  br label %if.end417, !dbg !20514

if.end417:                                        ; preds = %if.then415, %land.lhs.true412, %if.end409
  %289 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20515
  store %struct._ftsent* %289, %struct._ftsent** %retval, align 8, !dbg !20516
  br label %return, !dbg !20516

return:                                           ; preds = %if.end417, %if.end402, %if.then381, %do.end253, %do.end224, %if.then53, %if.end36, %if.end
  %290 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !20517
  ret %struct._ftsent* %290, !dbg !20517
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @restore_initial_cwd(%struct.FTS* %sp) #4 !dbg !20518 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fail = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20519, metadata !DIExpression()), !dbg !20520
  call void @llvm.dbg.declare(metadata i32* %fail, metadata !20521, metadata !DIExpression()), !dbg !20522
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20523
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20523, !ctir !1742
  %1 = load i32, i32* %fts_options, align 8, !dbg !20523, !ctir !7
  %and = and i32 %1, 4, !dbg !20523
  %tobool = icmp ne i32 %and, 0, !dbg !20523
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !20523

land.rhs:                                         ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20523
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !20523, !ctir !1742
  %3 = load i32, i32* %fts_options1, align 8, !dbg !20523, !ctir !7
  %and2 = and i32 %3, 512, !dbg !20523
  %tobool3 = icmp ne i32 %and2, 0, !dbg !20523
  br i1 %tobool3, label %cond.true, label %cond.false8, !dbg !20523

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20523
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20523
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !20523, !ctir !1742
  %6 = load i32, i32* %fts_options4, align 8, !dbg !20523, !ctir !7
  %and5 = and i32 %6, 512, !dbg !20523
  %tobool6 = icmp ne i32 %and5, 0, !dbg !20523
  br i1 %tobool6, label %cond.true7, label %cond.false, !dbg !20523

cond.true7:                                       ; preds = %cond.true
  br label %cond.end, !dbg !20523

cond.false:                                       ; preds = %cond.true
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20523
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 5, !dbg !20523, !ctir !1742
  %8 = load i32, i32* %fts_rfd, align 8, !dbg !20523, !ctir !7
  br label %cond.end, !dbg !20523

cond.end:                                         ; preds = %cond.false, %cond.true7
  %cond = phi i32 [ -100, %cond.true7 ], [ %8, %cond.false ], !dbg !20523
  call void @cwd_advance_fd(%struct.FTS* %4, i32 %cond, i1 zeroext true), !dbg !20523
  br label %cond.end17, !dbg !20523

cond.false8:                                      ; preds = %land.rhs
  %9 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20523
  %fts_options9 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !20523, !ctir !1742
  %10 = load i32, i32* %fts_options9, align 8, !dbg !20523, !ctir !7
  %and10 = and i32 %10, 512, !dbg !20523
  %tobool11 = icmp ne i32 %and10, 0, !dbg !20523
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !20523

cond.true12:                                      ; preds = %cond.false8
  br label %cond.end15, !dbg !20523

cond.false13:                                     ; preds = %cond.false8
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20523
  %fts_rfd14 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 5, !dbg !20523, !ctir !1742
  %12 = load i32, i32* %fts_rfd14, align 8, !dbg !20523, !ctir !7
  br label %cond.end15, !dbg !20523

cond.end15:                                       ; preds = %cond.false13, %cond.true12
  %cond16 = phi i32 [ -100, %cond.true12 ], [ %12, %cond.false13 ], !dbg !20523
  %call = call i32 @fchdir(i32 %cond16) #10, !dbg !20523
  br label %cond.end17, !dbg !20523

cond.end17:                                       ; preds = %cond.end15, %cond.end
  %cond18 = phi i32 [ 0, %cond.end ], [ %call, %cond.end15 ], !dbg !20523
  %tobool19 = icmp ne i32 %cond18, 0, !dbg !20523
  br label %land.end

land.end:                                         ; preds = %cond.end17, %entry
  %13 = phi i1 [ false, %entry ], [ %tobool19, %cond.end17 ], !dbg !20524
  %land.ext = zext i1 %13 to i32, !dbg !20523
  store i32 %land.ext, i32* %fail, align 4, !dbg !20522
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20525
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !20526, !ctir !1742
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !20527
  %15 = load i32, i32* %fail, align 4, !dbg !20528
  ret i32 %15, !dbg !20529
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_load(%struct.FTS* %sp, %struct._ftsent* %p) #4 !dbg !20530 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %len = alloca i64, align 8, !ctir !55
  %cp = alloca i8*, align 8, !ctir !9
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20531, metadata !DIExpression()), !dbg !20532
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20533, metadata !DIExpression()), !dbg !20534
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20535, metadata !DIExpression()), !dbg !20536
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !20537, metadata !DIExpression()), !dbg !20538
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20539
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 13, !dbg !20540, !ctir !1725
  %1 = load i64, i64* %fts_namelen, align 8, !dbg !20540, !ctir !55
  %2 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20541
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 10, !dbg !20542, !ctir !1725
  store i64 %1, i64* %fts_pathlen, align 8, !dbg !20543, !ctir !55
  store i64 %1, i64* %len, align 8, !dbg !20544
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20545
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 4, !dbg !20546, !ctir !1742
  %4 = load i8*, i8** %fts_path, align 8, !dbg !20546, !ctir !9
  %5 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20547
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 19, !dbg !20548, !ctir !1725
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20549, !ctir !1115
  %6 = load i64, i64* %len, align 8, !dbg !20550
  %add = add i64 %6, 1, !dbg !20551
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %4, i8* align 8 %arraydecay, i64 %add, i1 false), !dbg !20549
  %7 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20552
  %fts_name1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20554, !ctir !1725
  %arraydecay2 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name1, i64 0, i64 0, !dbg !20552, !ctir !1115
  %call = call i8* @strrchr(i8* %arraydecay2, i32 47) #14, !dbg !20555
  store i8* %call, i8** %cp, align 8, !dbg !20556
  %tobool = icmp ne i8* %call, null, !dbg !20556
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !20557

land.lhs.true:                                    ; preds = %entry
  %8 = load i8*, i8** %cp, align 8, !dbg !20558
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20559
  %fts_name3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 19, !dbg !20560, !ctir !1725
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name3, i64 0, i64 0, !dbg !20559, !ctir !1115
  %cmp = icmp ne i8* %8, %arraydecay4, !dbg !20561
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20562

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i8*, i8** %cp, align 8, !dbg !20563
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 1, !dbg !20563, !ctir !9
  %11 = load i8, i8* %arrayidx, align 1, !dbg !20563
  %conv = sext i8 %11 to i32, !dbg !20563
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20563
  br i1 %tobool5, label %if.then, label %if.end, !dbg !20564

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load i8*, i8** %cp, align 8, !dbg !20565
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !20565, !ctir !10
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20565
  %call6 = call i64 @strlen(i8* %incdec.ptr) #14, !dbg !20567
  store i64 %call6, i64* %len, align 8, !dbg !20568
  %13 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20569
  %fts_name7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 19, !dbg !20570, !ctir !1725
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name7, i64 0, i64 0, !dbg !20571, !ctir !1115
  %14 = load i8*, i8** %cp, align 8, !dbg !20572
  %15 = load i64, i64* %len, align 8, !dbg !20573
  %add9 = add i64 %15, 1, !dbg !20574
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %arraydecay8, i8* align 1 %14, i64 %add9, i1 false), !dbg !20571
  %16 = load i64, i64* %len, align 8, !dbg !20575
  %17 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20576
  %fts_namelen10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 13, !dbg !20577, !ctir !1725
  store i64 %16, i64* %fts_namelen10, align 8, !dbg !20578, !ctir !55
  br label %if.end, !dbg !20579

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20580
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !20581, !ctir !1742
  %19 = load i8*, i8** %fts_path11, align 8, !dbg !20581, !ctir !9
  %20 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20582
  %fts_path12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 7, !dbg !20583, !ctir !1725
  store i8* %19, i8** %fts_path12, align 8, !dbg !20584, !ctir !9
  %21 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20585
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20586, !ctir !1725
  store i8* %19, i8** %fts_accpath, align 8, !dbg !20587, !ctir !9
  ret void, !dbg !20588
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @leaf_optimization(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20589 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20592, metadata !DIExpression()), !dbg !20593
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20594, metadata !DIExpression()), !dbg !20595
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20596
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20597
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20598
  switch i64 %call, label %sw.default [
    i64 1382369651, label %sw.bb
    i64 1481003842, label %sw.bb
    i64 0, label %sw.bb1
    i64 1397113167, label %sw.bb2
    i64 4283649346, label %sw.bb3
    i64 26985, label %sw.bb4
    i64 40864, label %sw.bb5
  ], !dbg !20599

sw.bb:                                            ; preds = %entry, %entry
  store i32 2, i32* %retval, align 4, !dbg !20600
  br label %return, !dbg !20600

sw.bb1:                                           ; preds = %entry
  br label %sw.bb2, !dbg !20602

sw.bb2:                                           ; preds = %entry, %sw.bb1
  br label %sw.bb3, !dbg !20603

sw.bb3:                                           ; preds = %entry, %sw.bb2
  br label %sw.bb4, !dbg !20604

sw.bb4:                                           ; preds = %entry, %sw.bb3
  br label %sw.bb5, !dbg !20605

sw.bb5:                                           ; preds = %entry, %sw.bb4
  store i32 0, i32* %retval, align 4, !dbg !20606
  br label %return, !dbg !20606

sw.default:                                       ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !20607
  br label %return, !dbg !20607

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !20608
  ret i32 %2, !dbg !20608
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @enter_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !20609 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !1829
  %ad = alloca %struct.Active_dir*, align 8, !ctir !1843
  %ad_from_table = alloca %struct.Active_dir*, align 8, !ctir !1843
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !20612, metadata !DIExpression()), !dbg !20613
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !20614, metadata !DIExpression()), !dbg !20615
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20616
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20618, !ctir !1742
  %1 = load i32, i32* %fts_options, align 8, !dbg !20618, !ctir !7
  %and = and i32 %1, 258, !dbg !20619
  %tobool = icmp ne i32 %and, 0, !dbg !20619
  br i1 %tobool, label %if.then, label %if.else, !dbg !20620

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !20621, metadata !DIExpression()), !dbg !20623
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20624
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 18, !dbg !20625, !ctir !1725
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20624, !ctir !1796
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !20623
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad, metadata !20626, metadata !DIExpression()), !dbg !20627
  %call = call noalias i8* @malloc(i64 24) #10, !dbg !20628
  %3 = bitcast i8* %call to %struct.Active_dir*, !dbg !20628
  store %struct.Active_dir* %3, %struct.Active_dir** %ad, align 8, !dbg !20627
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad_from_table, metadata !20629, metadata !DIExpression()), !dbg !20630
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20631
  %tobool1 = icmp ne %struct.Active_dir* %4, null, !dbg !20631
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !20633

if.then2:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !20634
  br label %return, !dbg !20634

if.end:                                           ; preds = %if.then
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20635
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 0, !dbg !20636, !ctir !1830
  %6 = load i64, i64* %st_dev, align 8, !dbg !20636, !ctir !263
  %7 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20637
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %7, i32 0, i32 0, !dbg !20638, !ctir !1822
  store i64 %6, i64* %dev, align 8, !dbg !20639, !ctir !262
  %8 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20640
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !20641, !ctir !1830
  %9 = load i64, i64* %st_ino, align 8, !dbg !20641, !ctir !260
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20642
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 1, !dbg !20643, !ctir !1822
  store i64 %9, i64* %ino, align 8, !dbg !20644, !ctir !259
  %11 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20645
  %12 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20646
  %fts_ent = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %12, i32 0, i32 2, !dbg !20647, !ctir !1822
  store %struct._ftsent* %11, %struct._ftsent** %fts_ent, align 8, !dbg !20648, !ctir !1819
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20649
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 12, !dbg !20650, !ctir !1742
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !20651
  %14 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !20651, !ctir !1765
  %15 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20652
  %16 = bitcast %struct.Active_dir* %15 to i8*, !dbg !20652
  %call3 = call i8* @hash_insert(%struct.hash_table* %14, i8* %16), !dbg !20653
  %17 = bitcast i8* %call3 to %struct.Active_dir*, !dbg !20653
  store %struct.Active_dir* %17, %struct.Active_dir** %ad_from_table, align 8, !dbg !20654
  %18 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20655
  %19 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20657
  %cmp = icmp ne %struct.Active_dir* %18, %19, !dbg !20658
  br i1 %cmp, label %if.then4, label %if.end10, !dbg !20659

if.then4:                                         ; preds = %if.end
  %20 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20660
  %21 = bitcast %struct.Active_dir* %20 to i8*, !dbg !20660
  call void @free(i8* %21) #10, !dbg !20662
  %22 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20663
  %tobool5 = icmp ne %struct.Active_dir* %22, null, !dbg !20663
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !20665

if.then6:                                         ; preds = %if.then4
  store i1 false, i1* %retval, align 1, !dbg !20666
  br label %return, !dbg !20666

if.end7:                                          ; preds = %if.then4
  %23 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20667
  %fts_ent8 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %23, i32 0, i32 2, !dbg !20668, !ctir !1822
  %24 = load %struct._ftsent*, %struct._ftsent** %fts_ent8, align 8, !dbg !20668, !ctir !1819
  %25 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20669
  %fts_cycle9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 0, !dbg !20670, !ctir !1725
  store %struct._ftsent* %24, %struct._ftsent** %fts_cycle9, align 8, !dbg !20671, !ctir !1729
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20672
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 15, !dbg !20673, !ctir !1725
  store i16 2, i16* %fts_info, align 8, !dbg !20674, !ctir !33
  br label %if.end10, !dbg !20675

if.end10:                                         ; preds = %if.end7, %if.end
  br label %if.end19, !dbg !20676

if.else:                                          ; preds = %entry
  %27 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20677
  %fts_cycle11 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !20680, !ctir !1742
  %state = bitcast %union.anon* %fts_cycle11 to %struct.cycle_check_state**, !dbg !20681
  %28 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !20681, !ctir !1765
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20682
  %fts_statp12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !20683, !ctir !1725
  %arraydecay13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp12, i64 0, i64 0, !dbg !20682, !ctir !1796
  %call14 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %28, %struct.stat* %arraydecay13), !dbg !20684
  br i1 %call14, label %if.then15, label %if.end18, !dbg !20685

if.then15:                                        ; preds = %if.else
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20686
  %31 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20688
  %fts_cycle16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 0, !dbg !20689, !ctir !1725
  store %struct._ftsent* %30, %struct._ftsent** %fts_cycle16, align 8, !dbg !20690, !ctir !1729
  %32 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20691
  %fts_info17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 15, !dbg !20692, !ctir !1725
  store i16 2, i16* %fts_info17, align 8, !dbg !20693, !ctir !33
  br label %if.end18, !dbg !20694

if.end18:                                         ; preds = %if.then15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end10
  store i1 true, i1* %retval, align 1, !dbg !20695
  br label %return, !dbg !20695

return:                                           ; preds = %if.end19, %if.then6, %if.then2
  %33 = load i1, i1* %retval, align 1, !dbg !20696
  ret i1 %33, !dbg !20696
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cwd_advance_fd(%struct.FTS* %sp, i32 %fd, i1 zeroext %chdir_down_one) #4 !dbg !20697 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fd.addr = alloca i32, align 4
  %chdir_down_one.addr = alloca i8, align 1
  %old = alloca i32, align 4, !ctir !7
  %prev_fd_in_slot = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20700, metadata !DIExpression()), !dbg !20701
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20702, metadata !DIExpression()), !dbg !20703
  %frombool = zext i1 %chdir_down_one to i8
  store i8 %frombool, i8* %chdir_down_one.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %chdir_down_one.addr, metadata !20704, metadata !DIExpression()), !dbg !20705
  call void @llvm.dbg.declare(metadata i32* %old, metadata !20706, metadata !DIExpression()), !dbg !20707
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20708
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !20709, !ctir !1742
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !20709, !ctir !7
  store i32 %1, i32* %old, align 4, !dbg !20707
  br label %do.body, !dbg !20710

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %old, align 4, !dbg !20711
  %3 = load i32, i32* %fd.addr, align 4, !dbg !20711
  %cmp = icmp ne i32 %2, %3, !dbg !20711
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !20711

lor.lhs.false:                                    ; preds = %do.body
  %4 = load i32, i32* %old, align 4, !dbg !20711
  %cmp1 = icmp eq i32 %4, -100, !dbg !20711
  br i1 %cmp1, label %if.end, label %if.then, !dbg !20714

if.then:                                          ; preds = %lor.lhs.false
  call void @abort() #13, !dbg !20711
  unreachable, !dbg !20711

if.end:                                           ; preds = %lor.lhs.false, %do.body
  br label %do.end, !dbg !20714

do.end:                                           ; preds = %if.end
  %5 = load i8, i8* %chdir_down_one.addr, align 1, !dbg !20715
  %tobool = trunc i8 %5 to i1, !dbg !20715
  br i1 %tobool, label %if.then2, label %if.else, !dbg !20717

if.then2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %prev_fd_in_slot, metadata !20718, metadata !DIExpression()), !dbg !20720
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20721
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 13, !dbg !20722, !ctir !1742
  %7 = load i32, i32* %old, align 4, !dbg !20723
  %call = call i32 @i_ring_push(%struct.I_ring* %fts_fd_ring, i32 %7), !dbg !20724
  store i32 %call, i32* %prev_fd_in_slot, align 4, !dbg !20720
  %8 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !20725
  %cmp3 = icmp sle i32 0, %8, !dbg !20727
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !20728

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !20729
  %call5 = call i32 @close(i32 %9), !dbg !20730
  br label %if.end6, !dbg !20730

if.end6:                                          ; preds = %if.then4, %if.then2
  br label %if.end14, !dbg !20731

if.else:                                          ; preds = %do.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20732
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !20732, !ctir !1742
  %11 = load i32, i32* %fts_options, align 8, !dbg !20732, !ctir !7
  %and = and i32 %11, 4, !dbg !20732
  %tobool7 = icmp ne i32 %and, 0, !dbg !20732
  br i1 %tobool7, label %if.end13, label %if.then8, !dbg !20734

if.then8:                                         ; preds = %if.else
  %12 = load i32, i32* %old, align 4, !dbg !20735
  %cmp9 = icmp sle i32 0, %12, !dbg !20738
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !20739

if.then10:                                        ; preds = %if.then8
  %13 = load i32, i32* %old, align 4, !dbg !20740
  %call11 = call i32 @close(i32 %13), !dbg !20741
  br label %if.end12, !dbg !20741

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %if.end13, !dbg !20742

if.end13:                                         ; preds = %if.end12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end6
  %14 = load i32, i32* %fd.addr, align 4, !dbg !20743
  %15 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20744
  %fts_cwd_fd15 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 6, !dbg !20745, !ctir !1742
  store i32 %14, i32* %fts_cwd_fd15, align 4, !dbg !20746, !ctir !7
  ret void, !dbg !20747
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @filesystem_type(%struct._ftsent* %p, i32 %fd) #4 !dbg !20748 {
entry:
  %retval = alloca i64, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %sp = alloca %struct.FTS*, align 8, !ctir !1741
  %h = alloca %struct.hash_table*, align 8, !ctir !1831
  %ent = alloca %struct.timespec*, align 8, !ctir !1833
  %fs_buf = alloca %struct.statfs, align 8, !ctir !20751
  %tmp = alloca %struct.timespec, align 8, !ctir !1834
  %t2 = alloca %struct.timespec*, align 8, !ctir !1833
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20774, metadata !DIExpression()), !dbg !20775
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20776, metadata !DIExpression()), !dbg !20777
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !20778, metadata !DIExpression()), !dbg !20779
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20780
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 11, !dbg !20781, !ctir !1724
  %1 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !20781, !ctir !1741
  store %struct.FTS* %1, %struct.FTS** %sp, align 8, !dbg !20779
  call void @llvm.dbg.declare(metadata %struct.hash_table** %h, metadata !20782, metadata !DIExpression()), !dbg !20783
  %2 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20784
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 11, !dbg !20785, !ctir !1742
  %3 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !20785, !ctir !1136
  store %struct.hash_table* %3, %struct.hash_table** %h, align 8, !dbg !20783
  call void @llvm.dbg.declare(metadata %struct.timespec** %ent, metadata !20786, metadata !DIExpression()), !dbg !20787
  call void @llvm.dbg.declare(metadata %struct.statfs* %fs_buf, metadata !20788, metadata !DIExpression()), !dbg !20789
  %4 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20790
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !20790, !ctir !1742
  %5 = load i32, i32* %fts_options, align 8, !dbg !20790, !ctir !7
  %and = and i32 %5, 512, !dbg !20790
  %tobool = icmp ne i32 %and, 0, !dbg !20790
  br i1 %tobool, label %if.end, label %if.then, !dbg !20792

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !20793
  br label %return, !dbg !20793

if.end:                                           ; preds = %entry
  %6 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20794
  %tobool1 = icmp ne %struct.hash_table* %6, null, !dbg !20794
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !20796

if.then2:                                         ; preds = %if.end
  %call = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_type_hash, i1 (i8*, i8*)* @dev_type_compare, void (i8*)* @free), !dbg !20797
  %7 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20798
  %fts_leaf_optimization_works_ht3 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 11, !dbg !20799, !ctir !1742
  store %struct.hash_table* %call, %struct.hash_table** %fts_leaf_optimization_works_ht3, align 8, !dbg !20800, !ctir !1136
  store %struct.hash_table* %call, %struct.hash_table** %h, align 8, !dbg !20801
  br label %if.end4, !dbg !20802

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20803
  %tobool5 = icmp ne %struct.hash_table* %8, null, !dbg !20803
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !20805

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.timespec* %tmp, metadata !20806, metadata !DIExpression()), !dbg !20808
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20809
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 18, !dbg !20810, !ctir !1724
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20811, !ctir !1840
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !20811, !ctir !1830
  %10 = load i64, i64* %st_dev, align 8, !dbg !20811, !ctir !263
  %st_dev7 = getelementptr inbounds %struct.timespec, %struct.timespec* %tmp, i32 0, i32 0, !dbg !20812, !ctir !1834
  store i64 %10, i64* %st_dev7, align 8, !dbg !20813, !ctir !262
  %11 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20814
  %12 = bitcast %struct.timespec* %tmp to i8*, !dbg !20815
  %call8 = call i8* @hash_lookup(%struct.hash_table* %11, i8* %12), !dbg !20816
  %13 = bitcast i8* %call8 to %struct.timespec*, !dbg !20816
  store %struct.timespec* %13, %struct.timespec** %ent, align 8, !dbg !20817
  %14 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20818
  %tobool9 = icmp ne %struct.timespec* %14, null, !dbg !20818
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !20820

if.then10:                                        ; preds = %if.then6
  %15 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20821
  %f_type = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i32 0, i32 1, !dbg !20822, !ctir !1834
  %16 = load i64, i64* %f_type, align 8, !dbg !20822, !ctir !1838
  store i64 %16, i64* %retval, align 8, !dbg !20823
  br label %return, !dbg !20823

if.end11:                                         ; preds = %if.then6
  br label %if.end12, !dbg !20824

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load i32, i32* %fd.addr, align 4, !dbg !20825
  %cmp = icmp slt i32 %17, 0, !dbg !20827
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !20828

lor.lhs.false:                                    ; preds = %if.end12
  %18 = load i32, i32* %fd.addr, align 4, !dbg !20829
  %call13 = call i32 @fstatfs(i32 %18, %struct.statfs* %fs_buf) #10, !dbg !20830
  %cmp14 = icmp ne i32 %call13, 0, !dbg !20831
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !20832

if.then15:                                        ; preds = %lor.lhs.false, %if.end12
  store i64 0, i64* %retval, align 8, !dbg !20833
  br label %return, !dbg !20833

if.end16:                                         ; preds = %lor.lhs.false
  %19 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20834
  %tobool17 = icmp ne %struct.hash_table* %19, null, !dbg !20834
  br i1 %tobool17, label %if.then18, label %if.end36, !dbg !20836

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata %struct.timespec** %t2, metadata !20837, metadata !DIExpression()), !dbg !20839
  %call19 = call noalias i8* @malloc(i64 16) #10, !dbg !20840
  %20 = bitcast i8* %call19 to %struct.timespec*, !dbg !20840
  store %struct.timespec* %20, %struct.timespec** %t2, align 8, !dbg !20839
  %21 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20841
  %tobool20 = icmp ne %struct.timespec* %21, null, !dbg !20841
  br i1 %tobool20, label %if.then21, label %if.end35, !dbg !20843

if.then21:                                        ; preds = %if.then18
  %22 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20844
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 18, !dbg !20846, !ctir !1724
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !20847, !ctir !1840
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !20847, !ctir !1830
  %23 = load i64, i64* %st_dev24, align 8, !dbg !20847, !ctir !263
  %24 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20848
  %st_dev25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i32 0, i32 0, !dbg !20849, !ctir !1834
  store i64 %23, i64* %st_dev25, align 8, !dbg !20850, !ctir !262
  %f_type26 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !20851, !ctir !20751
  %25 = load i64, i64* %f_type26, align 8, !dbg !20851, !ctir !1839
  %26 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20852
  %f_type27 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i32 0, i32 1, !dbg !20853, !ctir !1834
  store i64 %25, i64* %f_type27, align 8, !dbg !20854, !ctir !1838
  %27 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20855
  %28 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20856
  %29 = bitcast %struct.timespec* %28 to i8*, !dbg !20856
  %call28 = call i8* @hash_insert(%struct.hash_table* %27, i8* %29), !dbg !20857
  %30 = bitcast i8* %call28 to %struct.timespec*, !dbg !20857
  store %struct.timespec* %30, %struct.timespec** %ent, align 8, !dbg !20858
  %31 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20859
  %tobool29 = icmp ne %struct.timespec* %31, null, !dbg !20859
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !20861

if.then30:                                        ; preds = %if.then21
  br label %do.body, !dbg !20862

do.body:                                          ; preds = %if.then30
  %32 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20863
  %33 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20863
  %cmp31 = icmp eq %struct.timespec* %32, %33, !dbg !20863
  br i1 %cmp31, label %if.end33, label %if.then32, !dbg !20866

if.then32:                                        ; preds = %do.body
  call void @abort() #13, !dbg !20863
  unreachable, !dbg !20863

if.end33:                                         ; preds = %do.body
  br label %do.end, !dbg !20866

do.end:                                           ; preds = %if.end33
  br label %if.end34, !dbg !20866

if.else:                                          ; preds = %if.then21
  %34 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20867
  %35 = bitcast %struct.timespec* %34 to i8*, !dbg !20867
  call void @free(i8* %35) #10, !dbg !20868
  br label %if.end34

if.end34:                                         ; preds = %if.else, %do.end
  br label %if.end35, !dbg !20869

if.end35:                                         ; preds = %if.end34, %if.then18
  br label %if.end36, !dbg !20870

if.end36:                                         ; preds = %if.end35, %if.end16
  %f_type37 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !20871, !ctir !20751
  %36 = load i64, i64* %f_type37, align 8, !dbg !20871, !ctir !1839
  store i64 %36, i64* %retval, align 8, !dbg !20872
  br label %return, !dbg !20872

return:                                           ; preds = %if.end36, %if.then15, %if.then10, %if.then
  %37 = load i64, i64* %retval, align 8, !dbg !20873
  ret i64 %37, !dbg !20873
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_type_hash(i8* %x, i64 %table_size) #4 !dbg !20874 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !1841
  %dev = alloca i64, align 8, !ctir !486
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20875, metadata !DIExpression()), !dbg !20876
  store i64 %table_size, i64* %table_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !20877, metadata !DIExpression()), !dbg !20878
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !20879, metadata !DIExpression()), !dbg !20880
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20881
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !20881
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !20880
  call void @llvm.dbg.declare(metadata i64* %dev, metadata !20882, metadata !DIExpression()), !dbg !20883
  %2 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !20884
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !20885, !ctir !1842
  %3 = load i64, i64* %st_dev, align 8, !dbg !20885, !ctir !262
  store i64 %3, i64* %dev, align 8, !dbg !20883
  %4 = load i64, i64* %dev, align 8, !dbg !20886
  %5 = load i64, i64* %table_size.addr, align 8, !dbg !20887
  %rem = urem i64 %4, %5, !dbg !20888
  ret i64 %rem, !dbg !20889
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_type_compare(i8* %x, i8* %y) #4 !dbg !20890 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !1841
  %ay = alloca %struct.timespec*, align 8, !ctir !1841
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20891, metadata !DIExpression()), !dbg !20892
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !20893, metadata !DIExpression()), !dbg !20894
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !20895, metadata !DIExpression()), !dbg !20896
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20897
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !20897
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !20896
  call void @llvm.dbg.declare(metadata %struct.timespec** %ay, metadata !20898, metadata !DIExpression()), !dbg !20899
  %2 = load i8*, i8** %y.addr, align 8, !dbg !20900
  %3 = bitcast i8* %2 to %struct.timespec*, !dbg !20900
  store %struct.timespec* %3, %struct.timespec** %ay, align 8, !dbg !20899
  %4 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !20901
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !20902, !ctir !1842
  %5 = load i64, i64* %st_dev, align 8, !dbg !20902, !ctir !262
  %6 = load %struct.timespec*, %struct.timespec** %ay, align 8, !dbg !20903
  %st_dev1 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 0, !dbg !20904, !ctir !1842
  %7 = load i64, i64* %st_dev1, align 8, !dbg !20904, !ctir !262
  %cmp = icmp eq i64 %5, %7, !dbg !20905
  ret i1 %cmp, !dbg !20906
}

; Function Attrs: nounwind
declare dso_local i32 @fstatfs(i32, %struct.statfs*) #2

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_stat_type(%struct.stat* %st, i32 %dtype) #4 !dbg !20907 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  %dtype.addr = alloca i32, align 4
  %type = alloca i32, align 4, !ctir !239
  store %struct.stat* %st, %struct.stat** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !20910, metadata !DIExpression()), !dbg !20911
  store i32 %dtype, i32* %dtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dtype.addr, metadata !20912, metadata !DIExpression()), !dbg !20913
  call void @llvm.dbg.declare(metadata i32* %type, metadata !20914, metadata !DIExpression()), !dbg !20915
  %0 = load i32, i32* %dtype.addr, align 4, !dbg !20916
  switch i32 %0, label %sw.default [
    i32 6, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 1, label %sw.bb3
    i32 10, label %sw.bb4
    i32 8, label %sw.bb5
    i32 12, label %sw.bb6
  ], !dbg !20917

sw.bb:                                            ; preds = %entry
  store i32 24576, i32* %type, align 4, !dbg !20918
  br label %sw.epilog, !dbg !20920

sw.bb1:                                           ; preds = %entry
  store i32 8192, i32* %type, align 4, !dbg !20921
  br label %sw.epilog, !dbg !20922

sw.bb2:                                           ; preds = %entry
  store i32 16384, i32* %type, align 4, !dbg !20923
  br label %sw.epilog, !dbg !20924

sw.bb3:                                           ; preds = %entry
  store i32 4096, i32* %type, align 4, !dbg !20925
  br label %sw.epilog, !dbg !20926

sw.bb4:                                           ; preds = %entry
  store i32 40960, i32* %type, align 4, !dbg !20927
  br label %sw.epilog, !dbg !20928

sw.bb5:                                           ; preds = %entry
  store i32 32768, i32* %type, align 4, !dbg !20929
  br label %sw.epilog, !dbg !20930

sw.bb6:                                           ; preds = %entry
  store i32 49152, i32* %type, align 4, !dbg !20931
  br label %sw.epilog, !dbg !20932

sw.default:                                       ; preds = %entry
  store i32 0, i32* %type, align 4, !dbg !20933
  br label %sw.epilog, !dbg !20934

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %type, align 4, !dbg !20935
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !20936
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3, !dbg !20937, !ctir !1797
  store i32 %1, i32* %st_mode, align 8, !dbg !20938, !ctir !168
  ret void, !dbg !20939
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20940 {
entry:
  %retval = alloca i1, align 1
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20943, metadata !DIExpression()), !dbg !20944
  store i32 %dir_fd, i32* %dir_fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20945, metadata !DIExpression()), !dbg !20946
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20947
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20948
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20949
  switch i64 %call, label %sw.default [
    i64 4283649346, label %sw.bb
    i64 26985, label %sw.bb
    i64 16914836, label %sw.bb
  ], !dbg !20950

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i1 false, i1* %retval, align 1, !dbg !20951
  br label %return, !dbg !20951

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !20953
  br label %return, !dbg !20953

return:                                           ; preds = %sw.default, %sw.bb
  %2 = load i1, i1* %retval, align 1, !dbg !20954
  ret i1 %2, !dbg !20954
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_padjust(%struct.FTS* %sp, %struct._ftsent* %head) #4 !dbg !20955 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %addr = alloca i8*, align 8, !ctir !9
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20956, metadata !DIExpression()), !dbg !20957
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !20958, metadata !DIExpression()), !dbg !20959
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !20960, metadata !DIExpression()), !dbg !20961
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !20962, metadata !DIExpression()), !dbg !20963
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20964
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 4, !dbg !20965, !ctir !1742
  %1 = load i8*, i8** %fts_path, align 8, !dbg !20965, !ctir !9
  store i8* %1, i8** %addr, align 8, !dbg !20963
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20966
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 1, !dbg !20968, !ctir !1742
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !20968, !ctir !1729
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !20969
  br label %for.cond, !dbg !20970

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20971
  %tobool = icmp ne %struct._ftsent* %4, null, !dbg !20973
  br i1 %tobool, label %for.body, label %for.end, !dbg !20973

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !20974

do.body:                                          ; preds = %for.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20975
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 6, !dbg !20975, !ctir !1725
  %6 = load i8*, i8** %fts_accpath, align 8, !dbg !20975, !ctir !9
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20975
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20975, !ctir !1725
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20975, !ctir !1115
  %cmp = icmp ne i8* %6, %arraydecay, !dbg !20975
  br i1 %cmp, label %if.then, label %if.end, !dbg !20978

if.then:                                          ; preds = %do.body
  %8 = load i8*, i8** %addr, align 8, !dbg !20979
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20979
  %fts_accpath1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 6, !dbg !20979, !ctir !1725
  %10 = load i8*, i8** %fts_accpath1, align 8, !dbg !20979, !ctir !9
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20979
  %fts_path2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 7, !dbg !20979, !ctir !1725
  %12 = load i8*, i8** %fts_path2, align 8, !dbg !20979, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !20979
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !20979
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20979
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %sub.ptr.sub, !dbg !20979, !ctir !10
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20979
  %fts_accpath3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 6, !dbg !20979, !ctir !1725
  store i8* %add.ptr, i8** %fts_accpath3, align 8, !dbg !20979, !ctir !9
  br label %if.end, !dbg !20979

if.end:                                           ; preds = %if.then, %do.body
  %14 = load i8*, i8** %addr, align 8, !dbg !20978
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20978
  %fts_path4 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 7, !dbg !20978, !ctir !1725
  store i8* %14, i8** %fts_path4, align 8, !dbg !20978, !ctir !9
  br label %do.end, !dbg !20978

do.end:                                           ; preds = %if.end
  br label %for.inc, !dbg !20978

for.inc:                                          ; preds = %do.end
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20981
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 2, !dbg !20982, !ctir !1725
  %17 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !20982, !ctir !1729
  store %struct._ftsent* %17, %struct._ftsent** %p, align 8, !dbg !20983
  br label %for.cond, !dbg !20984, !llvm.loop !20985

for.end:                                          ; preds = %for.cond
  %18 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !20987
  store %struct._ftsent* %18, %struct._ftsent** %p, align 8, !dbg !20989
  br label %for.cond5, !dbg !20990

for.cond5:                                        ; preds = %cond.end, %for.end
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20991
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !20993, !ctir !1725
  %20 = load i64, i64* %fts_level, align 8, !dbg !20993, !ctir !506
  %cmp6 = icmp sge i64 %20, 0, !dbg !20994
  br i1 %cmp6, label %for.body7, label %for.end27, !dbg !20995

for.body7:                                        ; preds = %for.cond5
  br label %do.body8, !dbg !20996

do.body8:                                         ; preds = %for.body7
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20998
  %fts_accpath9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20998, !ctir !1725
  %22 = load i8*, i8** %fts_accpath9, align 8, !dbg !20998, !ctir !9
  %23 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20998
  %fts_name10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 19, !dbg !20998, !ctir !1725
  %arraydecay11 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name10, i64 0, i64 0, !dbg !20998, !ctir !1115
  %cmp12 = icmp ne i8* %22, %arraydecay11, !dbg !20998
  br i1 %cmp12, label %if.then13, label %if.end21, !dbg !21001

if.then13:                                        ; preds = %do.body8
  %24 = load i8*, i8** %addr, align 8, !dbg !21002
  %25 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21002
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 6, !dbg !21002, !ctir !1725
  %26 = load i8*, i8** %fts_accpath14, align 8, !dbg !21002, !ctir !9
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21002
  %fts_path15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 7, !dbg !21002, !ctir !1725
  %28 = load i8*, i8** %fts_path15, align 8, !dbg !21002, !ctir !9
  %sub.ptr.lhs.cast16 = ptrtoint i8* %26 to i64, !dbg !21002
  %sub.ptr.rhs.cast17 = ptrtoint i8* %28 to i64, !dbg !21002
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !21002
  %add.ptr19 = getelementptr inbounds i8, i8* %24, i64 %sub.ptr.sub18, !dbg !21002, !ctir !10
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21002
  %fts_accpath20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 6, !dbg !21002, !ctir !1725
  store i8* %add.ptr19, i8** %fts_accpath20, align 8, !dbg !21002, !ctir !9
  br label %if.end21, !dbg !21002

if.end21:                                         ; preds = %if.then13, %do.body8
  %30 = load i8*, i8** %addr, align 8, !dbg !21001
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21001
  %fts_path22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 7, !dbg !21001, !ctir !1725
  store i8* %30, i8** %fts_path22, align 8, !dbg !21001, !ctir !9
  br label %do.end23, !dbg !21001

do.end23:                                         ; preds = %if.end21
  %32 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21004
  %fts_link24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 2, !dbg !21005, !ctir !1725
  %33 = load %struct._ftsent*, %struct._ftsent** %fts_link24, align 8, !dbg !21005, !ctir !1729
  %tobool25 = icmp ne %struct._ftsent* %33, null, !dbg !21004
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !21004

cond.true:                                        ; preds = %do.end23
  %34 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21006
  %fts_link26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !21007, !ctir !1725
  %35 = load %struct._ftsent*, %struct._ftsent** %fts_link26, align 8, !dbg !21007, !ctir !1729
  br label %cond.end, !dbg !21004

cond.false:                                       ; preds = %do.end23
  %36 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21008
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 1, !dbg !21009, !ctir !1725
  %37 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !21009, !ctir !1729
  br label %cond.end, !dbg !21004

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !21004
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !21010
  br label %for.cond5, !dbg !21011, !llvm.loop !21012

for.end27:                                        ; preds = %for.cond5
  ret void, !dbg !21014
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compare_ino(%struct._ftsent** %a, %struct._ftsent** %b) #4 !dbg !21015 {
entry:
  %a.addr = alloca %struct._ftsent**, align 8
  %b.addr = alloca %struct._ftsent**, align 8
  store %struct._ftsent** %a, %struct._ftsent*** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a.addr, metadata !21016, metadata !DIExpression()), !dbg !21017
  store %struct._ftsent** %b, %struct._ftsent*** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %b.addr, metadata !21018, metadata !DIExpression()), !dbg !21019
  %0 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21020
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %0, i64 0, !dbg !21020, !ctir !1759
  %1 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !21020
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 18, !dbg !21021, !ctir !1761
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !21022, !ctir !1840
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !21022, !ctir !1830
  %2 = load i64, i64* %st_ino, align 8, !dbg !21022, !ctir !260
  %3 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21023
  %arrayidx1 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %3, i64 0, !dbg !21023, !ctir !1759
  %4 = load %struct._ftsent*, %struct._ftsent** %arrayidx1, align 8, !dbg !21023
  %fts_statp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !21024, !ctir !1761
  %arraydecay3 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp2, i64 0, i64 0, !dbg !21025, !ctir !1840
  %st_ino4 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay3, i32 0, i32 1, !dbg !21025, !ctir !1830
  %5 = load i64, i64* %st_ino4, align 8, !dbg !21025, !ctir !260
  %cmp = icmp ult i64 %2, %5, !dbg !21026
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21020

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !21020

cond.false:                                       ; preds = %entry
  %6 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21027
  %arrayidx5 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %6, i64 0, !dbg !21027, !ctir !1759
  %7 = load %struct._ftsent*, %struct._ftsent** %arrayidx5, align 8, !dbg !21027
  %fts_statp6 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 18, !dbg !21028, !ctir !1761
  %arraydecay7 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp6, i64 0, i64 0, !dbg !21029, !ctir !1840
  %st_ino8 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay7, i32 0, i32 1, !dbg !21029, !ctir !1830
  %8 = load i64, i64* %st_ino8, align 8, !dbg !21029, !ctir !260
  %9 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21030
  %arrayidx9 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %9, i64 0, !dbg !21030, !ctir !1759
  %10 = load %struct._ftsent*, %struct._ftsent** %arrayidx9, align 8, !dbg !21030
  %fts_statp10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 18, !dbg !21031, !ctir !1761
  %arraydecay11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp10, i64 0, i64 0, !dbg !21032, !ctir !1840
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay11, i32 0, i32 1, !dbg !21032, !ctir !1830
  %11 = load i64, i64* %st_ino12, align 8, !dbg !21032, !ctir !260
  %cmp13 = icmp ult i64 %8, %11, !dbg !21033
  %12 = zext i1 %cmp13 to i64, !dbg !21027
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !21027
  br label %cond.end, !dbg !21020

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i32 [ -1, %cond.true ], [ %cond, %cond.false ], !dbg !21020
  ret i32 %cond14, !dbg !21034
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_set(%struct.FTS* %sp, %struct._ftsent* %p, i32 %instr) #4 !dbg !21035 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %instr.addr = alloca i32, align 4
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21038, metadata !DIExpression()), !dbg !21039
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21040, metadata !DIExpression()), !dbg !21041
  store i32 %instr, i32* %instr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21042, metadata !DIExpression()), !dbg !21043
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21044
  %cmp = icmp ne i32 %0, 0, !dbg !21046
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21047

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21048
  %cmp1 = icmp ne i32 %1, 1, !dbg !21049
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !21050

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %instr.addr, align 4, !dbg !21051
  %cmp3 = icmp ne i32 %2, 2, !dbg !21052
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !21053

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %3 = load i32, i32* %instr.addr, align 4, !dbg !21054
  %cmp5 = icmp ne i32 %3, 3, !dbg !21055
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !21056

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %4 = load i32, i32* %instr.addr, align 4, !dbg !21057
  %cmp7 = icmp ne i32 %4, 4, !dbg !21058
  br i1 %cmp7, label %if.then, label %if.end, !dbg !21059

if.then:                                          ; preds = %land.lhs.true6
  %call = call i32* @__errno_location() #15, !dbg !21060
  store i32 22, i32* %call, align 4, !dbg !21060, !ctir !7
  store i32 1, i32* %retval, align 4, !dbg !21062
  br label %return, !dbg !21062

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i32, i32* %instr.addr, align 4, !dbg !21063
  %conv = trunc i32 %5 to i16, !dbg !21063
  %6 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21064
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !21065, !ctir !1725
  store i16 %conv, i16* %fts_instr, align 4, !dbg !21066, !ctir !33
  store i32 0, i32* %retval, align 4, !dbg !21067
  br label %return, !dbg !21067

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !21068
  ret i32 %7, !dbg !21068
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_children(%struct.FTS* %sp, i32 %instr) #4 !dbg !21069 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %instr.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !1819
  %fd = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21070, metadata !DIExpression()), !dbg !21071
  store i32 %instr, i32* %instr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21072, metadata !DIExpression()), !dbg !21073
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !21074, metadata !DIExpression()), !dbg !21075
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21076, metadata !DIExpression()), !dbg !21077
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21078
  %cmp = icmp ne i32 %0, 0, !dbg !21080
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21081

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21082
  %cmp1 = icmp ne i32 %1, 4096, !dbg !21083
  br i1 %cmp1, label %if.then, label %if.end, !dbg !21084

if.then:                                          ; preds = %land.lhs.true
  %call = call i32* @__errno_location() #15, !dbg !21085
  store i32 22, i32* %call, align 4, !dbg !21085, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21087
  br label %return, !dbg !21087

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21088
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !21089, !ctir !1742
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !21089, !ctir !1729
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !21090
  %call2 = call i32* @__errno_location() #15, !dbg !21091
  store i32 0, i32* %call2, align 4, !dbg !21091, !ctir !7
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21092
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !21092, !ctir !1742
  %5 = load i32, i32* %fts_options, align 8, !dbg !21092, !ctir !7
  %and = and i32 %5, 8192, !dbg !21092
  %tobool = icmp ne i32 %and, 0, !dbg !21092
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !21094

if.then3:                                         ; preds = %if.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21095
  br label %return, !dbg !21095

if.end4:                                          ; preds = %if.end
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21096
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 15, !dbg !21098, !ctir !1725
  %7 = load i16, i16* %fts_info, align 8, !dbg !21098, !ctir !33
  %conv = zext i16 %7 to i32, !dbg !21096
  %cmp5 = icmp eq i32 %conv, 9, !dbg !21099
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !21100

if.then7:                                         ; preds = %if.end4
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21101
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !21102, !ctir !1725
  %9 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !21102, !ctir !1729
  store %struct._ftsent* %9, %struct._ftsent** %retval, align 8, !dbg !21103
  br label %return, !dbg !21103

if.end8:                                          ; preds = %if.end4
  %10 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21104
  %fts_info9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 15, !dbg !21106, !ctir !1725
  %11 = load i16, i16* %fts_info9, align 8, !dbg !21106, !ctir !33
  %conv10 = zext i16 %11 to i32, !dbg !21104
  %cmp11 = icmp ne i32 %conv10, 1, !dbg !21107
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !21108

if.then13:                                        ; preds = %if.end8
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21109
  br label %return, !dbg !21109

if.end14:                                         ; preds = %if.end8
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21110
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 1, !dbg !21112, !ctir !1742
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !21112, !ctir !1729
  %cmp15 = icmp ne %struct._ftsent* %13, null, !dbg !21113
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !21114

if.then17:                                        ; preds = %if.end14
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21115
  %fts_child18 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 1, !dbg !21116, !ctir !1742
  %15 = load %struct._ftsent*, %struct._ftsent** %fts_child18, align 8, !dbg !21116, !ctir !1729
  call void @fts_lfree(%struct._ftsent* %15), !dbg !21117
  br label %if.end19, !dbg !21117

if.end19:                                         ; preds = %if.then17, %if.end14
  %16 = load i32, i32* %instr.addr, align 4, !dbg !21118
  %cmp20 = icmp eq i32 %16, 4096, !dbg !21120
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !21121

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21122
  %fts_options23 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !21122, !ctir !1742
  %18 = load i32, i32* %fts_options23, align 8, !dbg !21122, !ctir !7
  %or = or i32 %18, 4096, !dbg !21122
  store i32 %or, i32* %fts_options23, align 8, !dbg !21122, !ctir !7
  store i32 2, i32* %instr.addr, align 4, !dbg !21124
  br label %if.end24, !dbg !21125

if.else:                                          ; preds = %if.end19
  store i32 1, i32* %instr.addr, align 4, !dbg !21126
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21127
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !21129, !ctir !1725
  %20 = load i64, i64* %fts_level, align 8, !dbg !21129, !ctir !506
  %cmp25 = icmp ne i64 %20, 0, !dbg !21130
  br i1 %cmp25, label %if.then34, label %lor.lhs.false, !dbg !21131

lor.lhs.false:                                    ; preds = %if.end24
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21132
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !21133, !ctir !1725
  %22 = load i8*, i8** %fts_accpath, align 8, !dbg !21133, !ctir !9
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 0, !dbg !21132, !ctir !9
  %23 = load i8, i8* %arrayidx, align 1, !dbg !21132
  %conv27 = sext i8 %23 to i32, !dbg !21132
  %cmp28 = icmp eq i32 %conv27, 47, !dbg !21134
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !21135

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21136
  %fts_options31 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !21136, !ctir !1742
  %25 = load i32, i32* %fts_options31, align 8, !dbg !21136, !ctir !7
  %and32 = and i32 %25, 4, !dbg !21136
  %tobool33 = icmp ne i32 %and32, 0, !dbg !21136
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !21137

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %if.end24
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21138
  %27 = load i32, i32* %instr.addr, align 4, !dbg !21139
  %call35 = call %struct._ftsent* @fts_build(%struct.FTS* %26, i32 %27), !dbg !21140
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21141
  %fts_child36 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 1, !dbg !21142, !ctir !1742
  store %struct._ftsent* %call35, %struct._ftsent** %fts_child36, align 8, !dbg !21143, !ctir !1729
  store %struct._ftsent* %call35, %struct._ftsent** %retval, align 8, !dbg !21144
  br label %return, !dbg !21144

if.end37:                                         ; preds = %lor.lhs.false30
  %29 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21145
  %call38 = call i32 @diropen(%struct.FTS* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.434, i64 0, i64 0)), !dbg !21147
  store i32 %call38, i32* %fd, align 4, !dbg !21148
  %cmp39 = icmp slt i32 %call38, 0, !dbg !21149
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !21150

if.then41:                                        ; preds = %if.end37
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21151
  %fts_child42 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 1, !dbg !21152, !ctir !1742
  store %struct._ftsent* null, %struct._ftsent** %fts_child42, align 8, !dbg !21153, !ctir !1729
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21154
  br label %return, !dbg !21154

if.end43:                                         ; preds = %if.end37
  %31 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21155
  %32 = load i32, i32* %instr.addr, align 4, !dbg !21156
  %call44 = call %struct._ftsent* @fts_build(%struct.FTS* %31, i32 %32), !dbg !21157
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21158
  %fts_child45 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 1, !dbg !21159, !ctir !1742
  store %struct._ftsent* %call44, %struct._ftsent** %fts_child45, align 8, !dbg !21160, !ctir !1729
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21161
  %fts_options46 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !21161, !ctir !1742
  %35 = load i32, i32* %fts_options46, align 8, !dbg !21161, !ctir !7
  %and47 = and i32 %35, 512, !dbg !21161
  %tobool48 = icmp ne i32 %and47, 0, !dbg !21161
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !21163

if.then49:                                        ; preds = %if.end43
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21164
  %37 = load i32, i32* %fd, align 4, !dbg !21166
  call void @cwd_advance_fd(%struct.FTS* %36, i32 %37, i1 zeroext true), !dbg !21167
  br label %if.end59, !dbg !21168

if.else50:                                        ; preds = %if.end43
  %38 = load i32, i32* %fd, align 4, !dbg !21169
  %call51 = call i32 @fchdir(i32 %38) #10, !dbg !21172
  %tobool52 = icmp ne i32 %call51, 0, !dbg !21172
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !21173

if.then53:                                        ; preds = %if.else50
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21174, metadata !DIExpression()), !dbg !21176
  %call54 = call i32* @__errno_location() #15, !dbg !21177
  %39 = load i32, i32* %call54, align 4, !dbg !21177, !ctir !7
  store i32 %39, i32* %saved_errno, align 4, !dbg !21176
  %40 = load i32, i32* %fd, align 4, !dbg !21178
  %call55 = call i32 @close(i32 %40), !dbg !21179
  %41 = load i32, i32* %saved_errno, align 4, !dbg !21180
  %call56 = call i32* @__errno_location() #15, !dbg !21180
  store i32 %41, i32* %call56, align 4, !dbg !21180, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21181
  br label %return, !dbg !21181

if.end57:                                         ; preds = %if.else50
  %42 = load i32, i32* %fd, align 4, !dbg !21182
  %call58 = call i32 @close(i32 %42), !dbg !21183
  br label %if.end59

if.end59:                                         ; preds = %if.end57, %if.then49
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21184
  %fts_child60 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 1, !dbg !21185, !ctir !1742
  %44 = load %struct._ftsent*, %struct._ftsent** %fts_child60, align 8, !dbg !21185, !ctir !1729
  store %struct._ftsent* %44, %struct._ftsent** %retval, align 8, !dbg !21186
  br label %return, !dbg !21186

return:                                           ; preds = %if.end59, %if.then53, %if.then41, %if.then34, %if.then13, %if.then7, %if.then3, %if.then
  %45 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !21187
  ret %struct._ftsent* %45, !dbg !21187
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #4 !dbg !21188 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !55
  %wc = alloca i32, align 4, !ctir !822
  %uc = alloca i8, align 1, !ctir !450
  store i32* %pwc, i32** %pwc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !21204, metadata !DIExpression()), !dbg !21205
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !21206, metadata !DIExpression()), !dbg !21207
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !21208, metadata !DIExpression()), !dbg !21209
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !21210, metadata !DIExpression()), !dbg !21211
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !21212, metadata !DIExpression()), !dbg !21213
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !21214, metadata !DIExpression()), !dbg !21215
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !21216
  %tobool = icmp ne i32* %0, null, !dbg !21216
  br i1 %tobool, label %if.end, label %if.then, !dbg !21218

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !21219
  br label %if.end, !dbg !21220

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !21221
  %2 = load i8*, i8** %s.addr, align 8, !dbg !21222
  %3 = load i64, i64* %n.addr, align 8, !dbg !21223
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !21224
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #10, !dbg !21225
  store i64 %call, i64* %ret, align 8, !dbg !21226
  %5 = load i64, i64* %ret, align 8, !dbg !21227
  %cmp = icmp ule i64 -2, %5, !dbg !21229
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !21230

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !21231
  %cmp1 = icmp ne i64 %6, 0, !dbg !21232
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !21233

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !21234
  br i1 %call3, label %if.end5, label %if.then4, !dbg !21235

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !21236, metadata !DIExpression()), !dbg !21238
  %7 = load i8*, i8** %s.addr, align 8, !dbg !21239
  %8 = load i8, i8* %7, align 1, !dbg !21240, !ctir !117
  store i8 %8, i8* %uc, align 1, !dbg !21238
  %9 = load i8, i8* %uc, align 1, !dbg !21241
  %conv = zext i8 %9 to i32, !dbg !21241
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !21242
  store i32 %conv, i32* %10, align 4, !dbg !21243, !ctir !822
  store i64 1, i64* %retval, align 8, !dbg !21244
  br label %return, !dbg !21244

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !21245
  store i64 %11, i64* %retval, align 8, !dbg !21246
  br label %return, !dbg !21246

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !21247
  ret i64 %12, !dbg !21247
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_access_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !21248 {
entry:
  %retval = alloca i32, align 4
  %acl.addr = alloca %struct.__acl_ext*, align 8
  %ace = alloca %struct.__acl_entry_ext*, align 8, !ctir !1860
  %got_one = alloca i32, align 4, !ctir !7
  %tag = alloca i32, align 4, !ctir !1864
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !21252, metadata !DIExpression()), !dbg !21253
  call void @llvm.dbg.declare(metadata %struct.__acl_entry_ext** %ace, metadata !21254, metadata !DIExpression()), !dbg !21255
  call void @llvm.dbg.declare(metadata i32* %got_one, metadata !21256, metadata !DIExpression()), !dbg !21257
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21258
  %call = call i32 @acl_get_entry(%struct.__acl_ext* %0, i32 0, %struct.__acl_entry_ext** %ace), !dbg !21260
  store i32 %call, i32* %got_one, align 4, !dbg !21261
  br label %for.cond, !dbg !21262

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %got_one, align 4, !dbg !21263
  %cmp = icmp sgt i32 %1, 0, !dbg !21265
  br i1 %cmp, label %for.body, label %for.end, !dbg !21266

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !21267, metadata !DIExpression()), !dbg !21269
  %2 = load %struct.__acl_entry_ext*, %struct.__acl_entry_ext** %ace, align 8, !dbg !21270
  %call1 = call i32 @acl_get_tag_type(%struct.__acl_entry_ext* %2, i32* %tag), !dbg !21272
  %cmp2 = icmp slt i32 %call1, 0, !dbg !21273
  br i1 %cmp2, label %if.then, label %if.end, !dbg !21274

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !21275
  br label %return, !dbg !21275

if.end:                                           ; preds = %for.body
  %3 = load i32, i32* %tag, align 4, !dbg !21276
  %cmp3 = icmp eq i32 %3, 1, !dbg !21278
  br i1 %cmp3, label %if.end8, label %lor.lhs.false, !dbg !21279

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %tag, align 4, !dbg !21280
  %cmp4 = icmp eq i32 %4, 4, !dbg !21281
  br i1 %cmp4, label %if.end8, label %lor.lhs.false5, !dbg !21282

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %tag, align 4, !dbg !21283
  %cmp6 = icmp eq i32 %5, 32, !dbg !21284
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !21285

if.then7:                                         ; preds = %lor.lhs.false5
  store i32 1, i32* %retval, align 4, !dbg !21286
  br label %return, !dbg !21286

if.end8:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  br label %for.inc, !dbg !21287

for.inc:                                          ; preds = %if.end8
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21288
  %call9 = call i32 @acl_get_entry(%struct.__acl_ext* %6, i32 1, %struct.__acl_entry_ext** %ace), !dbg !21289
  store i32 %call9, i32* %got_one, align 4, !dbg !21290
  br label %for.cond, !dbg !21291, !llvm.loop !21292

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %got_one, align 4, !dbg !21294
  store i32 %7, i32* %retval, align 4, !dbg !21295
  br label %return, !dbg !21295

return:                                           ; preds = %for.end, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !21296
  ret i32 %8, !dbg !21296
}

declare dso_local i32 @acl_get_entry(%struct.__acl_ext*, i32, %struct.__acl_entry_ext**) #3

declare dso_local i32 @acl_get_tag_type(%struct.__acl_entry_ext*, i32*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_default_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !21297 {
entry:
  %acl.addr = alloca %struct.__acl_ext*, align 8
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !21298, metadata !DIExpression()), !dbg !21299
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21300
  %call = call i32 @acl_entries(%struct.__acl_ext* %0), !dbg !21301
  %cmp = icmp sgt i32 %call, 0, !dbg !21302
  %conv = zext i1 %cmp to i32, !dbg !21302
  ret i32 %conv, !dbg !21303
}

declare dso_local i32 @acl_entries(%struct.__acl_ext*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !21304 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21314, metadata !DIExpression()), !dbg !21315
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21316
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 1, !dbg !21318, !ctir !21308
  %1 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !21318, !ctir !1865
  %tobool = icmp ne %struct.__acl_ext* %1, null, !dbg !21316
  br i1 %tobool, label %if.then, label %if.end, !dbg !21319

if.then:                                          ; preds = %entry
  %2 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21320
  %acl1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %2, i32 0, i32 1, !dbg !21321, !ctir !21308
  %3 = load %struct.__acl_ext*, %struct.__acl_ext** %acl1, align 8, !dbg !21321, !ctir !1865
  %4 = bitcast %struct.__acl_ext* %3 to i8*, !dbg !21320
  %call = call i32 @acl_free(i8* %4), !dbg !21322
  br label %if.end, !dbg !21322

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21323
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 2, !dbg !21325, !ctir !21308
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !21325, !ctir !1865
  %tobool2 = icmp ne %struct.__acl_ext* %6, null, !dbg !21323
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !21326

if.then3:                                         ; preds = %if.end
  %7 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21327
  %default_acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %7, i32 0, i32 2, !dbg !21328, !ctir !21308
  %8 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl4, align 8, !dbg !21328, !ctir !1865
  %9 = bitcast %struct.__acl_ext* %8 to i8*, !dbg !21327
  %call5 = call i32 @acl_free(i8* %9), !dbg !21329
  br label %if.end6, !dbg !21329

if.end6:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !21330
}

declare dso_local i32 @acl_free(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !21331 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21342, metadata !DIExpression()), !dbg !21343
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21344, metadata !DIExpression()), !dbg !21345
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21346, metadata !DIExpression()), !dbg !21347
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21348, metadata !DIExpression()), !dbg !21349
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21350
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !21351
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !21351
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21352
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21353
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !21354, !ctir !21336
  store i32 %2, i32* %mode1, align 8, !dbg !21355, !ctir !239
  %4 = load i32, i32* %desc.addr, align 4, !dbg !21356
  %cmp = icmp ne i32 %4, -1, !dbg !21358
  br i1 %cmp, label %if.then, label %if.else, !dbg !21359

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %desc.addr, align 4, !dbg !21360
  %call = call %struct.__acl_ext* @acl_get_fd(i32 %5), !dbg !21361
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21362
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !21363, !ctir !21336
  store %struct.__acl_ext* %call, %struct.__acl_ext** %acl, align 8, !dbg !21364, !ctir !1865
  br label %if.end, !dbg !21362

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %name.addr, align 8, !dbg !21365
  %call2 = call %struct.__acl_ext* @acl_get_file(i8* %7, i32 32768), !dbg !21366
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21367
  %acl3 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %8, i32 0, i32 1, !dbg !21368, !ctir !21336
  store %struct.__acl_ext* %call2, %struct.__acl_ext** %acl3, align 8, !dbg !21369, !ctir !1865
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21370
  %acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 1, !dbg !21372, !ctir !21336
  %10 = load %struct.__acl_ext*, %struct.__acl_ext** %acl4, align 8, !dbg !21372, !ctir !1865
  %cmp5 = icmp eq %struct.__acl_ext* %10, null, !dbg !21373
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !21374

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #15, !dbg !21375
  %11 = load i32, i32* %call7, align 4, !dbg !21375, !ctir !7
  %call8 = call zeroext i1 @acl_errno_valid(i32 %11) #15, !dbg !21376
  %12 = zext i1 %call8 to i64, !dbg !21376
  %cond = select i1 %call8, i32 -1, i32 0, !dbg !21376
  store i32 %cond, i32* %retval, align 4, !dbg !21377
  br label %return, !dbg !21377

if.end9:                                          ; preds = %if.end
  %13 = load i32, i32* %mode.addr, align 4, !dbg !21378
  %and = and i32 %13, 61440, !dbg !21378
  %cmp10 = icmp eq i32 %and, 16384, !dbg !21378
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !21380

if.then11:                                        ; preds = %if.end9
  %14 = load i8*, i8** %name.addr, align 8, !dbg !21381
  %call12 = call %struct.__acl_ext* @acl_get_file(i8* %14, i32 16384), !dbg !21383
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21384
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 2, !dbg !21385, !ctir !21336
  store %struct.__acl_ext* %call12, %struct.__acl_ext** %default_acl, align 8, !dbg !21386, !ctir !1865
  %16 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21387
  %default_acl13 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %16, i32 0, i32 2, !dbg !21389, !ctir !21336
  %17 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl13, align 8, !dbg !21389, !ctir !1865
  %cmp14 = icmp eq %struct.__acl_ext* %17, null, !dbg !21390
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !21391

if.then15:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !21392
  br label %return, !dbg !21392

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !21393

if.end17:                                         ; preds = %if.end16, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !21394
  br label %return, !dbg !21394

return:                                           ; preds = %if.end17, %if.then15, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !21395
  ret i32 %18, !dbg !21395
}

declare dso_local %struct.__acl_ext* @acl_get_fd(i32) #3

declare dso_local %struct.__acl_ext* @acl_get_file(i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !21396 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21398, metadata !DIExpression()), !dbg !21399
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21400, metadata !DIExpression()), !dbg !21401
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21402, metadata !DIExpression()), !dbg !21403
  %0 = load i32, i32* %desc.addr, align 4, !dbg !21404
  %cmp = icmp ne i32 %0, -1, !dbg !21406
  br i1 %cmp, label %if.then, label %if.else, !dbg !21407

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !21408
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21409
  %call = call i32 @fchmod(i32 %1, i32 %2) #10, !dbg !21410
  store i32 %call, i32* %retval, align 4, !dbg !21411
  br label %return, !dbg !21411

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21412
  %4 = load i32, i32* %mode.addr, align 4, !dbg !21413
  %call1 = call i32 @chmod(i8* %3, i32 %4) #10, !dbg !21414
  store i32 %call1, i32* %retval, align 4, !dbg !21415
  br label %return, !dbg !21415

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21416
  ret i32 %5, !dbg !21416
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !21417 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !142
  %early_chmod = alloca i8, align 1, !ctir !142
  %must_chmod = alloca i8, align 1, !ctir !142
  %ret = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  %saved_errno22 = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21427, metadata !DIExpression()), !dbg !21428
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21429, metadata !DIExpression()), !dbg !21430
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21431, metadata !DIExpression()), !dbg !21432
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !21433, metadata !DIExpression()), !dbg !21434
  store i8 0, i8* %acls_set, align 1, !dbg !21434
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !21435, metadata !DIExpression()), !dbg !21436
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !21437, metadata !DIExpression()), !dbg !21438
  store i8 0, i8* %must_chmod, align 1, !dbg !21438
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21439, metadata !DIExpression()), !dbg !21440
  store i32 0, i32* %ret, align 4, !dbg !21440
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21441
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 0, !dbg !21442, !ctir !21421
  %1 = load i32, i32* %mode, align 8, !dbg !21442, !ctir !239
  %and = and i32 %1, 3584, !dbg !21443
  %tobool = icmp ne i32 %and, 0, !dbg !21444
  %frombool = zext i1 %tobool to i8, !dbg !21445
  store i8 %frombool, i8* %early_chmod, align 1, !dbg !21445
  %2 = load i8, i8* %early_chmod, align 1, !dbg !21446
  %tobool1 = trunc i8 %2 to i1, !dbg !21446
  br i1 %tobool1, label %if.then, label %if.end4, !dbg !21448

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21449
  %4 = load i32, i32* %desc.addr, align 4, !dbg !21451
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21452
  %mode2 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 0, !dbg !21453, !ctir !21421
  %6 = load i32, i32* %mode2, align 8, !dbg !21453, !ctir !239
  %call = call i32 @chmod_or_fchmod(i8* %3, i32 %4, i32 %6), !dbg !21454
  store i32 %call, i32* %ret, align 4, !dbg !21455
  %7 = load i32, i32* %ret, align 4, !dbg !21456
  %cmp = icmp ne i32 %7, 0, !dbg !21458
  br i1 %cmp, label %if.then3, label %if.end, !dbg !21459

if.then3:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21460
  br label %return, !dbg !21460

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !21461

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21462
  %9 = load i8*, i8** %name.addr, align 8, !dbg !21463
  %10 = load i32, i32* %desc.addr, align 4, !dbg !21464
  %call5 = call i32 @set_acls(%struct.permission_context* %8, i8* %9, i32 %10, i32 0, i8* %must_chmod, i8* %acls_set), !dbg !21465
  store i32 %call5, i32* %ret, align 4, !dbg !21466
  %11 = load i8, i8* %acls_set, align 1, !dbg !21467
  %tobool6 = trunc i8 %11 to i1, !dbg !21467
  br i1 %tobool6, label %if.end18, label %if.then7, !dbg !21469

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21470, metadata !DIExpression()), !dbg !21472
  %12 = load i32, i32* %ret, align 4, !dbg !21473
  %tobool8 = icmp ne i32 %12, 0, !dbg !21473
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !21473

cond.true:                                        ; preds = %if.then7
  %call9 = call i32* @__errno_location() #15, !dbg !21474
  %13 = load i32, i32* %call9, align 4, !dbg !21474, !ctir !7
  br label %cond.end, !dbg !21473

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !21473

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 0, %cond.false ], !dbg !21473
  store i32 %cond, i32* %saved_errno, align 4, !dbg !21472
  %14 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21475
  %15 = load i8*, i8** %name.addr, align 8, !dbg !21476
  %16 = load i32, i32* %desc.addr, align 4, !dbg !21477
  %call10 = call i32 @set_acls(%struct.permission_context* %14, i8* %15, i32 %16, i32 1, i8* %must_chmod, i8* %acls_set), !dbg !21478
  store i32 %call10, i32* %ret, align 4, !dbg !21479
  %17 = load i8, i8* %acls_set, align 1, !dbg !21480
  %tobool11 = trunc i8 %17 to i1, !dbg !21480
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !21482

if.then12:                                        ; preds = %cond.end
  store i8 1, i8* %must_chmod, align 1, !dbg !21483
  br label %if.end13, !dbg !21484

if.end13:                                         ; preds = %if.then12, %cond.end
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21485
  %tobool14 = icmp ne i32 %18, 0, !dbg !21485
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !21487

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %saved_errno, align 4, !dbg !21488
  %call16 = call i32* @__errno_location() #15, !dbg !21490
  store i32 %19, i32* %call16, align 4, !dbg !21491, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !21492
  br label %if.end17, !dbg !21493

if.end17:                                         ; preds = %if.then15, %if.end13
  br label %if.end18, !dbg !21494

if.end18:                                         ; preds = %if.end17, %if.end4
  %20 = load i8, i8* %must_chmod, align 1, !dbg !21495
  %tobool19 = trunc i8 %20 to i1, !dbg !21495
  br i1 %tobool19, label %land.lhs.true, label %if.end35, !dbg !21497

land.lhs.true:                                    ; preds = %if.end18
  %21 = load i8, i8* %early_chmod, align 1, !dbg !21498
  %tobool20 = trunc i8 %21 to i1, !dbg !21498
  br i1 %tobool20, label %if.end35, label %if.then21, !dbg !21499

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno22, metadata !21500, metadata !DIExpression()), !dbg !21502
  %22 = load i32, i32* %ret, align 4, !dbg !21503
  %tobool23 = icmp ne i32 %22, 0, !dbg !21503
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !21503

cond.true24:                                      ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !21504
  %23 = load i32, i32* %call25, align 4, !dbg !21504, !ctir !7
  br label %cond.end27, !dbg !21503

cond.false26:                                     ; preds = %if.then21
  br label %cond.end27, !dbg !21503

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i32 [ %23, %cond.true24 ], [ 0, %cond.false26 ], !dbg !21503
  store i32 %cond28, i32* %saved_errno22, align 4, !dbg !21502
  %24 = load i8*, i8** %name.addr, align 8, !dbg !21505
  %25 = load i32, i32* %desc.addr, align 4, !dbg !21506
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21507
  %mode29 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 0, !dbg !21508, !ctir !21421
  %27 = load i32, i32* %mode29, align 8, !dbg !21508, !ctir !239
  %call30 = call i32 @chmod_or_fchmod(i8* %24, i32 %25, i32 %27), !dbg !21509
  store i32 %call30, i32* %ret, align 4, !dbg !21510
  %28 = load i32, i32* %saved_errno22, align 4, !dbg !21511
  %tobool31 = icmp ne i32 %28, 0, !dbg !21511
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !21513

if.then32:                                        ; preds = %cond.end27
  %29 = load i32, i32* %saved_errno22, align 4, !dbg !21514
  %call33 = call i32* @__errno_location() #15, !dbg !21516
  store i32 %29, i32* %call33, align 4, !dbg !21517, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !21518
  br label %if.end34, !dbg !21519

if.end34:                                         ; preds = %if.then32, %cond.end27
  br label %if.end35, !dbg !21520

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %if.end18
  %30 = load i32, i32* %ret, align 4, !dbg !21521
  store i32 %30, i32* %retval, align 4, !dbg !21522
  br label %return, !dbg !21522

return:                                           ; preds = %if.end35, %if.then3
  %31 = load i32, i32* %retval, align 4, !dbg !21523
  ret i32 %31, !dbg !21523
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_acls(%struct.permission_context* %ctx, i8* %name, i32 %desc, i32 %from_mode, i8* %must_chmod, i8* %acls_set) #4 !dbg !21524 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %from_mode.addr = alloca i32, align 4
  %must_chmod.addr = alloca i8*, align 8
  %acls_set.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21527, metadata !DIExpression()), !dbg !21528
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21529, metadata !DIExpression()), !dbg !21530
  store i32 %desc, i32* %desc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21531, metadata !DIExpression()), !dbg !21532
  store i32 %from_mode, i32* %from_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from_mode.addr, metadata !21533, metadata !DIExpression()), !dbg !21534
  store i8* %must_chmod, i8** %must_chmod.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %must_chmod.addr, metadata !21535, metadata !DIExpression()), !dbg !21536
  store i8* %acls_set, i8** %acls_set.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %acls_set.addr, metadata !21537, metadata !DIExpression()), !dbg !21538
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21539, metadata !DIExpression()), !dbg !21540
  store i32 0, i32* %ret, align 4, !dbg !21540
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21541
  %acls_not_supported = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 3, !dbg !21543, !ctir !21421
  %1 = load i8, i8* %acls_not_supported, align 8, !dbg !21543
  %tobool = trunc i8 %1 to i1, !dbg !21543, !ctir !142
  br i1 %tobool, label %if.end58, label %if.then, !dbg !21544

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !21545
  %cmp = icmp eq i32 %2, 0, !dbg !21548
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !21549

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* %from_mode.addr, align 4, !dbg !21550
  %tobool1 = icmp ne i32 %3, 0, !dbg !21550
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !21551

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21552
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %4, i32 0, i32 1, !dbg !21555, !ctir !21421
  %5 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !21555, !ctir !1865
  %tobool3 = icmp ne %struct.__acl_ext* %5, null, !dbg !21552
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !21556

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21557
  %acl5 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !21558, !ctir !21421
  %7 = load %struct.__acl_ext*, %struct.__acl_ext** %acl5, align 8, !dbg !21558, !ctir !1865
  %8 = bitcast %struct.__acl_ext* %7 to i8*, !dbg !21557
  %call = call i32 @acl_free(i8* %8), !dbg !21559
  br label %if.end, !dbg !21559

if.end:                                           ; preds = %if.then4, %if.then2
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21560
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 0, !dbg !21561, !ctir !21421
  %10 = load i32, i32* %mode, align 8, !dbg !21561, !ctir !239
  %call6 = call %struct.__acl_ext* @acl_from_mode(i32 %10), !dbg !21562
  %11 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21563
  %acl7 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %11, i32 0, i32 1, !dbg !21564, !ctir !21421
  store %struct.__acl_ext* %call6, %struct.__acl_ext** %acl7, align 8, !dbg !21565, !ctir !1865
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21566
  %acl8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 1, !dbg !21568, !ctir !21421
  %13 = load %struct.__acl_ext*, %struct.__acl_ext** %acl8, align 8, !dbg !21568, !ctir !1865
  %cmp9 = icmp eq %struct.__acl_ext* %13, null, !dbg !21569
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !21570

if.then10:                                        ; preds = %if.end
  store i32 -1, i32* %ret, align 4, !dbg !21571
  br label %if.end11, !dbg !21572

if.end11:                                         ; preds = %if.then10, %if.end
  br label %if.end12, !dbg !21573

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !21574
  %cmp13 = icmp eq i32 %14, 0, !dbg !21576
  br i1 %cmp13, label %land.lhs.true14, label %if.end57, !dbg !21577

land.lhs.true14:                                  ; preds = %if.end12
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21578
  %acl15 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 1, !dbg !21579, !ctir !21421
  %16 = load %struct.__acl_ext*, %struct.__acl_ext** %acl15, align 8, !dbg !21579, !ctir !1865
  %tobool16 = icmp ne %struct.__acl_ext* %16, null, !dbg !21578
  br i1 %tobool16, label %if.then17, label %if.end57, !dbg !21580

if.then17:                                        ; preds = %land.lhs.true14
  %17 = load i32, i32* %desc.addr, align 4, !dbg !21581
  %cmp18 = icmp ne i32 %17, -1, !dbg !21584
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !21585

if.then19:                                        ; preds = %if.then17
  %18 = load i32, i32* %desc.addr, align 4, !dbg !21586
  %19 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21587
  %acl20 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %19, i32 0, i32 1, !dbg !21588, !ctir !21421
  %20 = load %struct.__acl_ext*, %struct.__acl_ext** %acl20, align 8, !dbg !21588, !ctir !1865
  %call21 = call i32 @acl_set_fd(i32 %18, %struct.__acl_ext* %20), !dbg !21589
  store i32 %call21, i32* %ret, align 4, !dbg !21590
  br label %if.end24, !dbg !21591

if.else:                                          ; preds = %if.then17
  %21 = load i8*, i8** %name.addr, align 8, !dbg !21592
  %22 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21593
  %acl22 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %22, i32 0, i32 1, !dbg !21594, !ctir !21421
  %23 = load %struct.__acl_ext*, %struct.__acl_ext** %acl22, align 8, !dbg !21594, !ctir !1865
  %call23 = call i32 @acl_set_file(i8* %21, i32 32768, %struct.__acl_ext* %23), !dbg !21595
  store i32 %call23, i32* %ret, align 4, !dbg !21596
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !21597
  %cmp25 = icmp ne i32 %24, 0, !dbg !21599
  br i1 %cmp25, label %if.then26, label %if.else38, !dbg !21600

if.then26:                                        ; preds = %if.end24
  %call27 = call i32* @__errno_location() #15, !dbg !21601
  %25 = load i32, i32* %call27, align 4, !dbg !21601, !ctir !7
  %call28 = call zeroext i1 @acl_errno_valid(i32 %25) #15, !dbg !21604
  br i1 %call28, label %if.end37, label %if.then29, !dbg !21605

if.then29:                                        ; preds = %if.then26
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21606
  %acls_not_supported30 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 3, !dbg !21608, !ctir !21421
  store i8 1, i8* %acls_not_supported30, align 8, !dbg !21609, !ctir !142
  %27 = load i32, i32* %from_mode.addr, align 4, !dbg !21610
  %tobool31 = icmp ne i32 %27, 0, !dbg !21610
  br i1 %tobool31, label %if.then35, label %lor.lhs.false, !dbg !21612

lor.lhs.false:                                    ; preds = %if.then29
  %28 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21613
  %acl32 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %28, i32 0, i32 1, !dbg !21614, !ctir !21421
  %29 = load %struct.__acl_ext*, %struct.__acl_ext** %acl32, align 8, !dbg !21614, !ctir !1865
  %call33 = call i32 @acl_access_nontrivial(%struct.__acl_ext* %29), !dbg !21615
  %cmp34 = icmp eq i32 %call33, 0, !dbg !21616
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !21617

if.then35:                                        ; preds = %lor.lhs.false, %if.then29
  store i32 0, i32* %ret, align 4, !dbg !21618
  br label %if.end36, !dbg !21619

if.end36:                                         ; preds = %if.then35, %lor.lhs.false
  br label %if.end37, !dbg !21620

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end56, !dbg !21621

if.else38:                                        ; preds = %if.end24
  %30 = load i8*, i8** %acls_set.addr, align 8, !dbg !21622
  store i8 1, i8* %30, align 1, !dbg !21624, !ctir !142
  %31 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21625
  %mode39 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %31, i32 0, i32 0, !dbg !21625, !ctir !21421
  %32 = load i32, i32* %mode39, align 8, !dbg !21625, !ctir !239
  %and = and i32 %32, 61440, !dbg !21625
  %cmp40 = icmp eq i32 %and, 16384, !dbg !21625
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !21627

if.then41:                                        ; preds = %if.else38
  %33 = load i32, i32* %from_mode.addr, align 4, !dbg !21628
  %tobool42 = icmp ne i32 %33, 0, !dbg !21628
  br i1 %tobool42, label %if.else52, label %land.lhs.true43, !dbg !21631

land.lhs.true43:                                  ; preds = %if.then41
  %34 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21632
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %34, i32 0, i32 2, !dbg !21633, !ctir !21421
  %35 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !21633, !ctir !1865
  %tobool44 = icmp ne %struct.__acl_ext* %35, null, !dbg !21632
  br i1 %tobool44, label %land.lhs.true45, label %if.else52, !dbg !21634

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %36 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21635
  %default_acl46 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %36, i32 0, i32 2, !dbg !21636, !ctir !21421
  %37 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl46, align 8, !dbg !21636, !ctir !1865
  %call47 = call i32 @acl_default_nontrivial(%struct.__acl_ext* %37), !dbg !21637
  %tobool48 = icmp ne i32 %call47, 0, !dbg !21637
  br i1 %tobool48, label %if.then49, label %if.else52, !dbg !21638

if.then49:                                        ; preds = %land.lhs.true45
  %38 = load i8*, i8** %name.addr, align 8, !dbg !21639
  %39 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21640
  %default_acl50 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %39, i32 0, i32 2, !dbg !21641, !ctir !21421
  %40 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl50, align 8, !dbg !21641, !ctir !1865
  %call51 = call i32 @acl_set_file(i8* %38, i32 16384, %struct.__acl_ext* %40), !dbg !21642
  store i32 %call51, i32* %ret, align 4, !dbg !21643
  br label %if.end54, !dbg !21644

if.else52:                                        ; preds = %land.lhs.true45, %land.lhs.true43, %if.then41
  %41 = load i8*, i8** %name.addr, align 8, !dbg !21645
  %call53 = call i32 @acl_delete_def_file(i8* %41), !dbg !21646
  store i32 %call53, i32* %ret, align 4, !dbg !21647
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then49
  br label %if.end55, !dbg !21648

if.end55:                                         ; preds = %if.end54, %if.else38
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end37
  br label %if.end57, !dbg !21649

if.end57:                                         ; preds = %if.end56, %land.lhs.true14, %if.end12
  br label %if.end58, !dbg !21650

if.end58:                                         ; preds = %if.end57, %entry
  %42 = load i32, i32* %ret, align 4, !dbg !21651
  ret i32 %42, !dbg !21652
}

declare dso_local %struct.__acl_ext* @acl_from_mode(i32) #3

declare dso_local i32 @acl_set_fd(i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_set_file(i8*, i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_delete_def_file(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !21653 {
entry:
  call void @usage(i32 1), !dbg !21654
  ret void, !dbg !21655
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !21656 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %arglen = alloca i64, align 8, !ctir !55
  %matchind = alloca i64, align 8, !ctir !506
  %ambiguous = alloca i8, align 1, !ctir !142
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !21659, metadata !DIExpression()), !dbg !21660
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21661, metadata !DIExpression()), !dbg !21662
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21663, metadata !DIExpression()), !dbg !21664
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21665, metadata !DIExpression()), !dbg !21666
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21667, metadata !DIExpression()), !dbg !21668
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !21669, metadata !DIExpression()), !dbg !21670
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !21671, metadata !DIExpression()), !dbg !21672
  store i64 -1, i64* %matchind, align 8, !dbg !21672
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !21673, metadata !DIExpression()), !dbg !21674
  store i8 0, i8* %ambiguous, align 1, !dbg !21674
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !21675
  %call = call i64 @strlen(i8* %0) #14, !dbg !21676
  store i64 %call, i64* %arglen, align 8, !dbg !21677
  store i64 0, i64* %i, align 8, !dbg !21678
  br label %for.cond, !dbg !21680

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21681
  %2 = load i64, i64* %i, align 8, !dbg !21683
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !21681, !ctir !993
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !21681
  %tobool = icmp ne i8* %3, null, !dbg !21684
  br i1 %tobool, label %for.body, label %for.end, !dbg !21684

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !21685
  %5 = load i64, i64* %i, align 8, !dbg !21688
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !21685, !ctir !993
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !21685
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !21689
  %8 = load i64, i64* %arglen, align 8, !dbg !21690
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !21691
  %tobool3 = icmp ne i32 %call2, 0, !dbg !21691
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !21692

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !21693
  %10 = load i64, i64* %i, align 8, !dbg !21696
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !21693, !ctir !993
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !21693
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !21697
  %12 = load i64, i64* %arglen, align 8, !dbg !21698
  %cmp = icmp eq i64 %call5, %12, !dbg !21699
  br i1 %cmp, label %if.then6, label %if.else, !dbg !21700

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !21701
  store i64 %13, i64* %retval, align 8, !dbg !21702
  br label %return, !dbg !21702

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !21703
  %cmp7 = icmp eq i64 %14, -1, !dbg !21705
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !21706

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !21707
  store i64 %15, i64* %matchind, align 8, !dbg !21708
  br label %if.end16, !dbg !21709

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !21710
  %cmp10 = icmp eq i8* %16, null, !dbg !21713
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !21714

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !21715
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !21716
  %19 = load i64, i64* %matchind, align 8, !dbg !21717
  %mul = mul i64 %18, %19, !dbg !21718
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !21719, !ctir !117
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !21720
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !21721
  %22 = load i64, i64* %i, align 8, !dbg !21722
  %mul11 = mul i64 %21, %22, !dbg !21723
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !21724, !ctir !117
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !21725
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !21726
  %tobool14 = icmp ne i32 %call13, 0, !dbg !21726
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !21727

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !21728
  br label %if.end, !dbg !21730

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !21731

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !21732

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !21733
  %inc = add i64 %24, 1, !dbg !21733
  store i64 %inc, i64* %i, align 8, !dbg !21733
  br label %for.cond, !dbg !21734, !llvm.loop !21735

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !21737
  %tobool19 = trunc i8 %25 to i1, !dbg !21737
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !21739

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !21740
  br label %return, !dbg !21740

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !21741
  store i64 %26, i64* %retval, align 8, !dbg !21742
  br label %return, !dbg !21742

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !21743
  ret i64 %27, !dbg !21743
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !21744 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !116
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !21747, metadata !DIExpression()), !dbg !21748
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !21749, metadata !DIExpression()), !dbg !21750
  store i64 %problem, i64* %problem.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !21751, metadata !DIExpression()), !dbg !21752
  call void @llvm.dbg.declare(metadata i8** %format, metadata !21753, metadata !DIExpression()), !dbg !21754
  %0 = load i64, i64* %problem.addr, align 8, !dbg !21755
  %cmp = icmp eq i64 %0, -1, !dbg !21756
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21755

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.453, i64 0, i64 0)) #10, !dbg !21757
  br label %cond.end, !dbg !21755

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.454, i64 0, i64 0)) #10, !dbg !21758
  br label %cond.end, !dbg !21755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !21755
  store i8* %cond, i8** %format, align 8, !dbg !21754
  %1 = load i8*, i8** %format, align 8, !dbg !21759
  %2 = load i8*, i8** %value.addr, align 8, !dbg !21760
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !21761
  %3 = load i8*, i8** %context.addr, align 8, !dbg !21762
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !21763
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !21764
  ret void, !dbg !21765
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !21766 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %last_val = alloca i8*, align 8, !ctir !116
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21769, metadata !DIExpression()), !dbg !21770
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21771, metadata !DIExpression()), !dbg !21772
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21773, metadata !DIExpression()), !dbg !21774
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21775, metadata !DIExpression()), !dbg !21776
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !21777, metadata !DIExpression()), !dbg !21778
  store i8* null, i8** %last_val, align 8, !dbg !21778
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.455, i64 0, i64 0)) #10, !dbg !21779
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21779
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !21779
  store i64 0, i64* %i, align 8, !dbg !21780
  br label %for.cond, !dbg !21782

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21783
  %2 = load i64, i64* %i, align 8, !dbg !21785
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !21783, !ctir !993
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !21783
  %tobool = icmp ne i8* %3, null, !dbg !21786
  br i1 %tobool, label %for.body, label %for.end, !dbg !21786

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !21787
  %cmp = icmp eq i64 %4, 0, !dbg !21789
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21790

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !21791
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !21792
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !21793
  %8 = load i64, i64* %i, align 8, !dbg !21794
  %mul = mul i64 %7, %8, !dbg !21795
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !21796, !ctir !117
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !21797
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !21798
  %tobool3 = icmp ne i32 %call2, 0, !dbg !21798
  br i1 %tobool3, label %if.then, label %if.else, !dbg !21799

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21800
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !21802
  %12 = load i64, i64* %i, align 8, !dbg !21803
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !21802, !ctir !993
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !21802
  %call5 = call i8* @quote(i8* %13), !dbg !21804
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.456, i64 0, i64 0), i8* %call5), !dbg !21805
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !21806
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !21807
  %16 = load i64, i64* %i, align 8, !dbg !21808
  %mul7 = mul i64 %15, %16, !dbg !21809
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !21810, !ctir !117
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !21811
  br label %if.end, !dbg !21812

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21813
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !21815
  %19 = load i64, i64* %i, align 8, !dbg !21816
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !21815, !ctir !993
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !21815
  %call10 = call i8* @quote(i8* %20), !dbg !21817
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.457, i64 0, i64 0), i8* %call10), !dbg !21818
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !21819

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !21820
  %inc = add i64 %21, 1, !dbg !21820
  store i64 %inc, i64* %i, align 8, !dbg !21820
  br label %for.cond, !dbg !21821, !llvm.loop !21822

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21824
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !21824
  ret void, !dbg !21825
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !21826 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !506
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !21829, metadata !DIExpression()), !dbg !21830
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !21831, metadata !DIExpression()), !dbg !21832
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21833, metadata !DIExpression()), !dbg !21834
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21835, metadata !DIExpression()), !dbg !21836
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21837, metadata !DIExpression()), !dbg !21838
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !21839, metadata !DIExpression()), !dbg !21840
  call void @llvm.dbg.declare(metadata i64* %res, metadata !21841, metadata !DIExpression()), !dbg !21842
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !21843
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21844
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !21845
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !21846
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !21847
  store i64 %call, i64* %res, align 8, !dbg !21842
  %4 = load i64, i64* %res, align 8, !dbg !21848
  %cmp = icmp sge i64 %4, 0, !dbg !21850
  br i1 %cmp, label %if.then, label %if.end, !dbg !21851

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !21852
  store i64 %5, i64* %retval, align 8, !dbg !21853
  br label %return, !dbg !21853

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !21854
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !21855
  %8 = load i64, i64* %res, align 8, !dbg !21856
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !21857
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !21858
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !21859
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !21860
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !21861
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !21862
  call void %12(), !dbg !21863
  store i64 -1, i64* %retval, align 8, !dbg !21864
  br label %return, !dbg !21864

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !21865
  ret i64 %13, !dbg !21865
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !21866 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !21869, metadata !DIExpression()), !dbg !21870
  store i8** %arglist, i8*** %arglist.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21871, metadata !DIExpression()), !dbg !21872
  store i8* %vallist, i8** %vallist.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21873, metadata !DIExpression()), !dbg !21874
  store i64 %valsize, i64* %valsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21875, metadata !DIExpression()), !dbg !21876
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21877, metadata !DIExpression()), !dbg !21878
  store i64 0, i64* %i, align 8, !dbg !21879
  br label %for.cond, !dbg !21881

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !21882
  %1 = load i64, i64* %i, align 8, !dbg !21884
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !21882, !ctir !993
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !21882
  %tobool = icmp ne i8* %2, null, !dbg !21885
  br i1 %tobool, label %for.body, label %for.end, !dbg !21885

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !21886
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !21888
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !21889
  %6 = load i64, i64* %i, align 8, !dbg !21890
  %mul = mul i64 %5, %6, !dbg !21891
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !21892, !ctir !117
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !21893
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !21894
  %tobool1 = icmp ne i32 %call, 0, !dbg !21894
  br i1 %tobool1, label %if.end, label %if.then, !dbg !21895

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !21896
  %9 = load i64, i64* %i, align 8, !dbg !21897
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !21896, !ctir !993
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !21896
  store i8* %10, i8** %retval, align 8, !dbg !21898
  br label %return, !dbg !21898

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !21899

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !21900
  %inc = add i64 %11, 1, !dbg !21900
  store i64 %inc, i64* %i, align 8, !dbg !21900
  br label %for.cond, !dbg !21901, !llvm.loop !21902

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !21904
  br label %return, !dbg !21904

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !21905
  ret i8* %12, !dbg !21905
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !21906 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21910, metadata !DIExpression()), !dbg !21911
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21912, metadata !DIExpression()), !dbg !21913
  %0 = load i64, i64* %x.addr, align 8, !dbg !21914
  %1 = load i32, i32* %n.addr, align 4, !dbg !21915
  %sh_prom = zext i32 %1 to i64, !dbg !21916
  %shl = shl i64 %0, %sh_prom, !dbg !21916
  %2 = load i64, i64* %x.addr, align 8, !dbg !21917
  %3 = load i32, i32* %n.addr, align 4, !dbg !21918
  %sub = sub nsw i32 64, %3, !dbg !21919
  %sh_prom1 = zext i32 %sub to i64, !dbg !21920
  %shr = lshr i64 %2, %sh_prom1, !dbg !21920
  %or = or i64 %shl, %shr, !dbg !21921
  ret i64 %or, !dbg !21922
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !21923 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21924, metadata !DIExpression()), !dbg !21925
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21926, metadata !DIExpression()), !dbg !21927
  %0 = load i64, i64* %x.addr, align 8, !dbg !21928
  %1 = load i32, i32* %n.addr, align 4, !dbg !21929
  %sh_prom = zext i32 %1 to i64, !dbg !21930
  %shr = lshr i64 %0, %sh_prom, !dbg !21930
  %2 = load i64, i64* %x.addr, align 8, !dbg !21931
  %3 = load i32, i32* %n.addr, align 4, !dbg !21932
  %sub = sub nsw i32 64, %3, !dbg !21933
  %sh_prom1 = zext i32 %sub to i64, !dbg !21934
  %shl = shl i64 %2, %sh_prom1, !dbg !21934
  %or = or i64 %shr, %shl, !dbg !21935
  ret i64 %or, !dbg !21936
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !21937 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21940, metadata !DIExpression()), !dbg !21941
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21942, metadata !DIExpression()), !dbg !21943
  %0 = load i32, i32* %x.addr, align 4, !dbg !21944
  %1 = load i32, i32* %n.addr, align 4, !dbg !21945
  %shl = shl i32 %0, %1, !dbg !21946
  %2 = load i32, i32* %x.addr, align 4, !dbg !21947
  %3 = load i32, i32* %n.addr, align 4, !dbg !21948
  %sub = sub nsw i32 32, %3, !dbg !21949
  %shr = lshr i32 %2, %sub, !dbg !21950
  %or = or i32 %shl, %shr, !dbg !21951
  ret i32 %or, !dbg !21952
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !21953 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21954, metadata !DIExpression()), !dbg !21955
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21956, metadata !DIExpression()), !dbg !21957
  %0 = load i32, i32* %x.addr, align 4, !dbg !21958
  %1 = load i32, i32* %n.addr, align 4, !dbg !21959
  %shr = lshr i32 %0, %1, !dbg !21960
  %2 = load i32, i32* %x.addr, align 4, !dbg !21961
  %3 = load i32, i32* %n.addr, align 4, !dbg !21962
  %sub = sub nsw i32 32, %3, !dbg !21963
  %shl = shl i32 %2, %sub, !dbg !21964
  %or = or i32 %shr, %shl, !dbg !21965
  ret i32 %or, !dbg !21966
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !21967 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21970, metadata !DIExpression()), !dbg !21971
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21972, metadata !DIExpression()), !dbg !21973
  %0 = load i64, i64* %x.addr, align 8, !dbg !21974
  %1 = load i32, i32* %n.addr, align 4, !dbg !21975
  %sh_prom = zext i32 %1 to i64, !dbg !21976
  %shl = shl i64 %0, %sh_prom, !dbg !21976
  %2 = load i64, i64* %x.addr, align 8, !dbg !21977
  %3 = load i32, i32* %n.addr, align 4, !dbg !21978
  %conv = sext i32 %3 to i64, !dbg !21978
  %sub = sub i64 64, %conv, !dbg !21979
  %shr = lshr i64 %2, %sub, !dbg !21980
  %or = or i64 %shl, %shr, !dbg !21981
  ret i64 %or, !dbg !21982
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !21983 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21984, metadata !DIExpression()), !dbg !21985
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21986, metadata !DIExpression()), !dbg !21987
  %0 = load i64, i64* %x.addr, align 8, !dbg !21988
  %1 = load i32, i32* %n.addr, align 4, !dbg !21989
  %sh_prom = zext i32 %1 to i64, !dbg !21990
  %shr = lshr i64 %0, %sh_prom, !dbg !21990
  %2 = load i64, i64* %x.addr, align 8, !dbg !21991
  %3 = load i32, i32* %n.addr, align 4, !dbg !21992
  %conv = sext i32 %3 to i64, !dbg !21992
  %sub = sub i64 64, %conv, !dbg !21993
  %shl = shl i64 %2, %sub, !dbg !21994
  %or = or i64 %shr, %shl, !dbg !21995
  ret i64 %or, !dbg !21996
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !21997 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !22002, metadata !DIExpression()), !dbg !22003
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22004, metadata !DIExpression()), !dbg !22005
  %0 = load i16, i16* %x.addr, align 2, !dbg !22006
  %conv = zext i16 %0 to i32, !dbg !22006
  %1 = load i32, i32* %n.addr, align 4, !dbg !22007
  %shl = shl i32 %conv, %1, !dbg !22008
  %2 = load i16, i16* %x.addr, align 2, !dbg !22009
  %conv1 = zext i16 %2 to i32, !dbg !22009
  %3 = load i32, i32* %n.addr, align 4, !dbg !22010
  %sub = sub nsw i32 16, %3, !dbg !22011
  %shr = ashr i32 %conv1, %sub, !dbg !22012
  %or = or i32 %shl, %shr, !dbg !22013
  %and = and i32 %or, 65535, !dbg !22014
  %conv2 = trunc i32 %and to i16, !dbg !22015
  ret i16 %conv2, !dbg !22016
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !22017 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !22018, metadata !DIExpression()), !dbg !22019
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22020, metadata !DIExpression()), !dbg !22021
  %0 = load i16, i16* %x.addr, align 2, !dbg !22022
  %conv = zext i16 %0 to i32, !dbg !22022
  %1 = load i32, i32* %n.addr, align 4, !dbg !22023
  %shr = ashr i32 %conv, %1, !dbg !22024
  %2 = load i16, i16* %x.addr, align 2, !dbg !22025
  %conv1 = zext i16 %2 to i32, !dbg !22025
  %3 = load i32, i32* %n.addr, align 4, !dbg !22026
  %sub = sub nsw i32 16, %3, !dbg !22027
  %shl = shl i32 %conv1, %sub, !dbg !22028
  %or = or i32 %shr, %shl, !dbg !22029
  %and = and i32 %or, 65535, !dbg !22030
  %conv2 = trunc i32 %and to i16, !dbg !22031
  ret i16 %conv2, !dbg !22032
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !22033 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !22038, metadata !DIExpression()), !dbg !22039
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22040, metadata !DIExpression()), !dbg !22041
  %0 = load i8, i8* %x.addr, align 1, !dbg !22042
  %conv = zext i8 %0 to i32, !dbg !22042
  %1 = load i32, i32* %n.addr, align 4, !dbg !22043
  %shl = shl i32 %conv, %1, !dbg !22044
  %2 = load i8, i8* %x.addr, align 1, !dbg !22045
  %conv1 = zext i8 %2 to i32, !dbg !22045
  %3 = load i32, i32* %n.addr, align 4, !dbg !22046
  %sub = sub nsw i32 8, %3, !dbg !22047
  %shr = ashr i32 %conv1, %sub, !dbg !22048
  %or = or i32 %shl, %shr, !dbg !22049
  %and = and i32 %or, 255, !dbg !22050
  %conv2 = trunc i32 %and to i8, !dbg !22051
  ret i8 %conv2, !dbg !22052
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !22053 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !22054, metadata !DIExpression()), !dbg !22055
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22056, metadata !DIExpression()), !dbg !22057
  %0 = load i8, i8* %x.addr, align 1, !dbg !22058
  %conv = zext i8 %0 to i32, !dbg !22058
  %1 = load i32, i32* %n.addr, align 4, !dbg !22059
  %shr = ashr i32 %conv, %1, !dbg !22060
  %2 = load i8, i8* %x.addr, align 1, !dbg !22061
  %conv1 = zext i8 %2 to i32, !dbg !22061
  %3 = load i32, i32* %n.addr, align 4, !dbg !22062
  %sub = sub nsw i32 8, %3, !dbg !22063
  %shl = shl i32 %conv1, %sub, !dbg !22064
  %or = or i32 %shr, %shl, !dbg !22065
  %and = and i32 %or, 255, !dbg !22066
  %conv2 = trunc i32 %and to i8, !dbg !22067
  ret i8 %conv2, !dbg !22068
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !22069 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !448
  %p2 = alloca i8*, align 8, !ctir !448
  %c1 = alloca i8, align 1, !ctir !450
  %c2 = alloca i8, align 1, !ctir !450
  store i8* %s1, i8** %s1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !22071, metadata !DIExpression()), !dbg !22072
  store i8* %s2, i8** %s2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !22073, metadata !DIExpression()), !dbg !22074
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !22075, metadata !DIExpression()), !dbg !22076
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !22077
  store i8* %0, i8** %p1, align 8, !dbg !22076
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !22078, metadata !DIExpression()), !dbg !22079
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !22080
  store i8* %1, i8** %p2, align 8, !dbg !22079
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !22081, metadata !DIExpression()), !dbg !22082
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !22083, metadata !DIExpression()), !dbg !22084
  %2 = load i8*, i8** %p1, align 8, !dbg !22085
  %3 = load i8*, i8** %p2, align 8, !dbg !22087
  %cmp = icmp eq i8* %2, %3, !dbg !22088
  br i1 %cmp, label %if.then, label %if.end, !dbg !22089

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !22090
  br label %return, !dbg !22090

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !22091

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !22092
  %5 = load i8, i8* %4, align 1, !dbg !22094, !ctir !449
  %conv = zext i8 %5 to i32, !dbg !22094
  %call = call i32 @c_tolower(i32 %conv), !dbg !22095
  %conv1 = trunc i32 %call to i8, !dbg !22095
  store i8 %conv1, i8* %c1, align 1, !dbg !22096
  %6 = load i8*, i8** %p2, align 8, !dbg !22097
  %7 = load i8, i8* %6, align 1, !dbg !22098, !ctir !449
  %conv2 = zext i8 %7 to i32, !dbg !22098
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !22099
  %conv4 = trunc i32 %call3 to i8, !dbg !22099
  store i8 %conv4, i8* %c2, align 1, !dbg !22100
  %8 = load i8, i8* %c1, align 1, !dbg !22101
  %conv5 = zext i8 %8 to i32, !dbg !22101
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !22103
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !22104

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !22105

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !22106
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !22106, !ctir !449
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !22106
  %10 = load i8*, i8** %p2, align 8, !dbg !22107
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !22107, !ctir !449
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !22107
  br label %do.cond, !dbg !22108

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !22109
  %conv11 = zext i8 %11 to i32, !dbg !22109
  %12 = load i8, i8* %c2, align 1, !dbg !22110
  %conv12 = zext i8 %12 to i32, !dbg !22110
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !22111
  br i1 %cmp13, label %do.body, label %do.end, !dbg !22108, !llvm.loop !22112

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !22114
  %conv15 = zext i8 %13 to i32, !dbg !22114
  %14 = load i8, i8* %c2, align 1, !dbg !22116
  %conv16 = zext i8 %14 to i32, !dbg !22116
  %sub = sub nsw i32 %conv15, %conv16, !dbg !22117
  store i32 %sub, i32* %retval, align 4, !dbg !22118
  br label %return, !dbg !22118

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !22119
  ret i32 %15, !dbg !22119
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !22120 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !1882
  %prev_fail = alloca i8, align 1, !ctir !1882
  %fclose_fail = alloca i8, align 1, !ctir !1882
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !22158, metadata !DIExpression()), !dbg !22159
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !22160, metadata !DIExpression()), !dbg !22161
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22162
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #10, !dbg !22163
  %cmp = icmp ne i64 %call, 0, !dbg !22164
  %frombool = zext i1 %cmp to i8, !dbg !22161
  store i8 %frombool, i8* %some_pending, align 1, !dbg !22161
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !22165, metadata !DIExpression()), !dbg !22166
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22167
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #10, !dbg !22167
  %cmp2 = icmp ne i32 %call1, 0, !dbg !22168
  %frombool3 = zext i1 %cmp2 to i8, !dbg !22166
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !22166
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !22169, metadata !DIExpression()), !dbg !22170
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22171
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !22172
  %cmp5 = icmp ne i32 %call4, 0, !dbg !22173
  %frombool6 = zext i1 %cmp5 to i8, !dbg !22170
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !22170
  %3 = load i8, i8* %prev_fail, align 1, !dbg !22174
  %tobool = trunc i8 %3 to i1, !dbg !22174
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !22176

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !22177
  %tobool7 = trunc i8 %4 to i1, !dbg !22177
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !22178

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !22179
  %tobool8 = trunc i8 %5 to i1, !dbg !22179
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !22180

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !22181
  %6 = load i32, i32* %call10, align 4, !dbg !22181, !ctir !7
  %cmp11 = icmp ne i32 %6, 9, !dbg !22182
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !22183

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !22184
  %tobool12 = trunc i8 %7 to i1, !dbg !22184
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !22187

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !22188
  store i32 0, i32* %call14, align 4, !dbg !22189, !ctir !7
  br label %if.end, !dbg !22188

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !22190
  br label %return, !dbg !22190

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !22191
  br label %return, !dbg !22191

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !22192
  ret i32 %8, !dbg !22192
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cycle_check_init(%struct.cycle_check_state* %state) #4 !dbg !22193 {
entry:
  %state.addr = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !22207, metadata !DIExpression()), !dbg !22208
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22209
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 1, !dbg !22210, !ctir !22198
  store i64 0, i64* %chdir_counter, align 8, !dbg !22211, !ctir !486
  %1 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22212
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %1, i32 0, i32 2, !dbg !22213, !ctir !22198
  store i32 9827862, i32* %magic, align 8, !dbg !22214, !ctir !7
  ret void, !dbg !22215
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @cycle_check(%struct.cycle_check_state* %state, %struct.stat* %sb) #4 !dbg !22216 {
entry:
  %retval = alloca i1, align 1
  %state.addr = alloca %struct.cycle_check_state*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !22242, metadata !DIExpression()), !dbg !22243
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !22244, metadata !DIExpression()), !dbg !22245
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22246
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 2, !dbg !22246, !ctir !22198
  %1 = load i32, i32* %magic, align 8, !dbg !22246, !ctir !7
  %cmp = icmp eq i32 %1, 9827862, !dbg !22246
  br i1 %cmp, label %if.then, label %if.else, !dbg !22249

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !22249

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.470, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.471, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i64 0, i64 0)) #13, !dbg !22246
  unreachable, !dbg !22246

if.end:                                           ; preds = %if.then
  %2 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22250
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %2, i32 0, i32 1, !dbg !22252, !ctir !22198
  %3 = load i64, i64* %chdir_counter, align 8, !dbg !22252, !ctir !486
  %tobool = icmp ne i64 %3, 0, !dbg !22250
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !22253

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22254
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !22254, !ctir !22220
  %5 = load i64, i64* %st_ino, align 8, !dbg !22254, !ctir !260
  %6 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22254
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %6, i32 0, i32 0, !dbg !22254, !ctir !22198
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !22254, !ctir !22201
  %7 = load i64, i64* %st_ino1, align 8, !dbg !22254, !ctir !259
  %cmp2 = icmp eq i64 %5, %7, !dbg !22254
  br i1 %cmp2, label %land.lhs.true3, label %if.end8, !dbg !22254

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22254
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 0, !dbg !22254, !ctir !22220
  %9 = load i64, i64* %st_dev, align 8, !dbg !22254, !ctir !263
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22254
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %10, i32 0, i32 0, !dbg !22254, !ctir !22198
  %st_dev5 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino4, i32 0, i32 1, !dbg !22254, !ctir !22201
  %11 = load i64, i64* %st_dev5, align 8, !dbg !22254, !ctir !262
  %cmp6 = icmp eq i64 %9, %11, !dbg !22254
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !22255

if.then7:                                         ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !22256
  br label %return, !dbg !22256

if.end8:                                          ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  %12 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22257
  %chdir_counter9 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %12, i32 0, i32 1, !dbg !22259, !ctir !22198
  %13 = load i64, i64* %chdir_counter9, align 8, !dbg !22260, !ctir !486
  %inc = add i64 %13, 1, !dbg !22260
  store i64 %inc, i64* %chdir_counter9, align 8, !dbg !22260, !ctir !486
  %call = call zeroext i1 @is_zero_or_power_of_two(i64 %inc), !dbg !22261
  br i1 %call, label %if.then10, label %if.end21, !dbg !22262

if.then10:                                        ; preds = %if.end8
  %14 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22263
  %chdir_counter11 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %14, i32 0, i32 1, !dbg !22266, !ctir !22198
  %15 = load i64, i64* %chdir_counter11, align 8, !dbg !22266, !ctir !486
  %cmp12 = icmp eq i64 %15, 0, !dbg !22267
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !22268

if.then13:                                        ; preds = %if.then10
  store i1 true, i1* %retval, align 1, !dbg !22269
  br label %return, !dbg !22269

if.end14:                                         ; preds = %if.then10
  %16 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22270
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 0, !dbg !22271, !ctir !22220
  %17 = load i64, i64* %st_dev15, align 8, !dbg !22271, !ctir !263
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22272
  %dev_ino16 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 0, !dbg !22273, !ctir !22198
  %st_dev17 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino16, i32 0, i32 1, !dbg !22274, !ctir !22201
  store i64 %17, i64* %st_dev17, align 8, !dbg !22275, !ctir !262
  %19 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22276
  %st_ino18 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 1, !dbg !22277, !ctir !22220
  %20 = load i64, i64* %st_ino18, align 8, !dbg !22277, !ctir !260
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22278
  %dev_ino19 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !22279, !ctir !22198
  %st_ino20 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino19, i32 0, i32 0, !dbg !22280, !ctir !22201
  store i64 %20, i64* %st_ino20, align 8, !dbg !22281, !ctir !259
  br label %if.end21, !dbg !22282

if.end21:                                         ; preds = %if.end14, %if.end8
  store i1 false, i1* %retval, align 1, !dbg !22283
  br label %return, !dbg !22283

return:                                           ; preds = %if.end21, %if.then13, %if.then7
  %22 = load i1, i1* %retval, align 1, !dbg !22284
  ret i1 %22, !dbg !22284
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64 %i) #4 !dbg !22285 {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !22288, metadata !DIExpression()), !dbg !22289
  %0 = load i64, i64* %i.addr, align 8, !dbg !22290
  %1 = load i64, i64* %i.addr, align 8, !dbg !22291
  %sub = sub i64 %1, 1, !dbg !22292
  %and = and i64 %0, %sub, !dbg !22293
  %cmp = icmp eq i64 %and, 0, !dbg !22294
  ret i1 %cmp, !dbg !22295
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !22296 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !541
  %fd = alloca i32, align 4, !ctir !7
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !541
  %e = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22300, metadata !DIExpression()), !dbg !22301
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !22302, metadata !DIExpression()), !dbg !22303
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22304
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !22305
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !22303
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22306
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !22306
  br i1 %tobool, label %if.then, label %if.end17, !dbg !22308

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22309, metadata !DIExpression()), !dbg !22311
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22312
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #10, !dbg !22313
  store i32 %call1, i32* %fd, align 4, !dbg !22311
  %3 = load i32, i32* %fd, align 4, !dbg !22314
  %cmp = icmp sle i32 0, %3, !dbg !22316
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !22317

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !22318
  %cmp2 = icmp sle i32 %4, 2, !dbg !22319
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !22320

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !22321, metadata !DIExpression()), !dbg !22323
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22324, metadata !DIExpression()), !dbg !22325
  call void @llvm.dbg.declare(metadata i32* %f, metadata !22326, metadata !DIExpression()), !dbg !22327
  %5 = load i32, i32* %fd, align 4, !dbg !22328
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !22329
  store i32 %call4, i32* %f, align 4, !dbg !22327
  %6 = load i32, i32* %f, align 4, !dbg !22330
  %cmp5 = icmp slt i32 %6, 0, !dbg !22332
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !22333

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #15, !dbg !22334
  %7 = load i32, i32* %call7, align 4, !dbg !22334, !ctir !7
  store i32 %7, i32* %e, align 4, !dbg !22336
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !22337
  br label %if.end13, !dbg !22338

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !22339
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !22341
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !22342
  %call9 = call i32* @__errno_location() #15, !dbg !22343
  %9 = load i32, i32* %call9, align 4, !dbg !22343, !ctir !7
  store i32 %9, i32* %e, align 4, !dbg !22344
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !22345
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !22345
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !22347

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !22348
  %call12 = call i32 @close(i32 %11), !dbg !22349
  br label %if.end, !dbg !22349

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22350
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !22351
  %13 = load i32, i32* %e, align 4, !dbg !22352
  %call15 = call i32* @__errno_location() #15, !dbg !22353
  store i32 %13, i32* %call15, align 4, !dbg !22354, !ctir !7
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !22355
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !22356
  br label %if.end16, !dbg !22357

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !22358

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22359
  ret %struct.__dirstream* %15, !dbg !22360
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !22361 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !22370, metadata !DIExpression()), !dbg !22371
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !22372
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #10, !dbg !22373
  ret void, !dbg !22374
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !22375 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !22378, metadata !DIExpression()), !dbg !22379
  call void @gettime(%struct.timespec* %retval), !dbg !22380
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !22381
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !22381
  ret { i64, i64 } %1, !dbg !22381
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !22382 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !142
  %p = alloca i8*, align 8, !ctir !116
  store i32 %category, i32* %category.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !22384, metadata !DIExpression()), !dbg !22385
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !22386, metadata !DIExpression()), !dbg !22387
  store i8 1, i8* %hard, align 1, !dbg !22387
  call void @llvm.dbg.declare(metadata i8** %p, metadata !22388, metadata !DIExpression()), !dbg !22389
  %0 = load i32, i32* %category.addr, align 4, !dbg !22390
  %call = call i8* @setlocale(i32 %0, i8* null) #10, !dbg !22391
  store i8* %call, i8** %p, align 8, !dbg !22389
  %1 = load i8*, i8** %p, align 8, !dbg !22392
  %tobool = icmp ne i8* %1, null, !dbg !22392
  br i1 %tobool, label %if.then, label %if.end5, !dbg !22394

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !22395
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.478, i64 0, i64 0)) #14, !dbg !22400
  %cmp = icmp eq i32 %call1, 0, !dbg !22401
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !22402

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !22403
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.479, i64 0, i64 0)) #14, !dbg !22404
  %cmp3 = icmp eq i32 %call2, 0, !dbg !22405
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !22406

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !22407
  br label %if.end, !dbg !22408

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !22409

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !22410
  %tobool6 = trunc i8 %4 to i1, !dbg !22410
  ret i1 %tobool6, !dbg !22411
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !22412 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !116
  %h = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !22414, metadata !DIExpression()), !dbg !22415
  store i64 %tablesize, i64* %tablesize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !22416, metadata !DIExpression()), !dbg !22417
  call void @llvm.dbg.declare(metadata i8** %s, metadata !22418, metadata !DIExpression()), !dbg !22419
  call void @llvm.dbg.declare(metadata i64* %h, metadata !22420, metadata !DIExpression()), !dbg !22421
  store i64 0, i64* %h, align 8, !dbg !22421
  %0 = load i8*, i8** %x.addr, align 8, !dbg !22422
  store i8* %0, i8** %s, align 8, !dbg !22424
  br label %for.cond, !dbg !22425

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !22426
  %2 = load i8, i8* %1, align 1, !dbg !22428, !ctir !117
  %tobool = icmp ne i8 %2, 0, !dbg !22429
  br i1 %tobool, label %for.body, label %for.end, !dbg !22429

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !22430
  %4 = load i8, i8* %3, align 1, !dbg !22431, !ctir !117
  %conv = sext i8 %4 to i64, !dbg !22431
  %5 = load i64, i64* %h, align 8, !dbg !22432
  %shl = shl i64 %5, 9, !dbg !22433
  %6 = load i64, i64* %h, align 8, !dbg !22434
  %shr = lshr i64 %6, 55, !dbg !22435
  %or = or i64 %shl, %shr, !dbg !22436
  %add = add i64 %conv, %or, !dbg !22437
  store i64 %add, i64* %h, align 8, !dbg !22438
  br label %for.inc, !dbg !22439

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !22440
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !22440, !ctir !117
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !22440
  br label %for.cond, !dbg !22441, !llvm.loop !22442

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !22444
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !22445
  %rem = urem i64 %8, %9, !dbg !22446
  ret i64 %rem, !dbg !22447
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @i_ring_init(%struct.I_ring* %ir, i32 %default_val) #4 !dbg !22448 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %default_val.addr = alloca i32, align 4
  %i = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22453, metadata !DIExpression()), !dbg !22454
  store i32 %default_val, i32* %default_val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_val.addr, metadata !22455, metadata !DIExpression()), !dbg !22456
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22457, metadata !DIExpression()), !dbg !22458
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22459
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22460, !ctir !1903
  store i8 1, i8* %ir_empty, align 4, !dbg !22461, !ctir !142
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22462
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 2, !dbg !22463, !ctir !1903
  store i32 0, i32* %ir_front, align 4, !dbg !22464, !ctir !70
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22465
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 3, !dbg !22466, !ctir !1903
  store i32 0, i32* %ir_back, align 4, !dbg !22467, !ctir !70
  store i32 0, i32* %i, align 4, !dbg !22468
  br label %for.cond, !dbg !22470

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !22471
  %cmp = icmp slt i32 %3, 4, !dbg !22473
  br i1 %cmp, label %for.body, label %for.end, !dbg !22474

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %default_val.addr, align 4, !dbg !22475
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22476
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 0, !dbg !22477, !ctir !1903
  %6 = load i32, i32* %i, align 4, !dbg !22478
  %idxprom = sext i32 %6 to i64, !dbg !22476
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22476, !ctir !1151
  store i32 %4, i32* %arrayidx, align 4, !dbg !22479
  br label %for.inc, !dbg !22476

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !22480
  %inc = add nsw i32 %7, 1, !dbg !22480
  store i32 %inc, i32* %i, align 4, !dbg !22480
  br label %for.cond, !dbg !22481, !llvm.loop !22482

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %default_val.addr, align 4, !dbg !22484
  %9 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22485
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %9, i32 0, i32 1, !dbg !22486, !ctir !1903
  store i32 %8, i32* %ir_default_val, align 4, !dbg !22487, !ctir !7
  ret void, !dbg !22488
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @i_ring_empty(%struct.I_ring* %ir) #9 !dbg !22489 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22493, metadata !DIExpression()), !dbg !22494
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22495
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22496, !ctir !1911
  %1 = load i8, i8* %ir_empty, align 4, !dbg !22496
  %tobool = trunc i8 %1 to i1, !dbg !22496, !ctir !142
  ret i1 %tobool, !dbg !22497
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_push(%struct.I_ring* %ir, i32 %val) #4 !dbg !22498 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %val.addr = alloca i32, align 4
  %dest_idx = alloca i32, align 4, !ctir !70
  %old_val = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22501, metadata !DIExpression()), !dbg !22502
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22503, metadata !DIExpression()), !dbg !22504
  call void @llvm.dbg.declare(metadata i32* %dest_idx, metadata !22505, metadata !DIExpression()), !dbg !22506
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22507
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 2, !dbg !22508, !ctir !1903
  %1 = load i32, i32* %ir_front, align 4, !dbg !22508, !ctir !70
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22509
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 4, !dbg !22510, !ctir !1903
  %3 = load i8, i8* %ir_empty, align 4, !dbg !22510
  %tobool = trunc i8 %3 to i1, !dbg !22510, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !22511
  %lnot.ext = zext i1 %lnot to i32, !dbg !22511
  %add = add i32 %1, %lnot.ext, !dbg !22512
  %rem = urem i32 %add, 4, !dbg !22513
  store i32 %rem, i32* %dest_idx, align 4, !dbg !22506
  call void @llvm.dbg.declare(metadata i32* %old_val, metadata !22514, metadata !DIExpression()), !dbg !22515
  %4 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22516
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %4, i32 0, i32 0, !dbg !22517, !ctir !1903
  %5 = load i32, i32* %dest_idx, align 4, !dbg !22518
  %idxprom = zext i32 %5 to i64, !dbg !22516
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22516, !ctir !1151
  %6 = load i32, i32* %arrayidx, align 4, !dbg !22516
  store i32 %6, i32* %old_val, align 4, !dbg !22515
  %7 = load i32, i32* %val.addr, align 4, !dbg !22519
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22520
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !22521, !ctir !1903
  %9 = load i32, i32* %dest_idx, align 4, !dbg !22522
  %idxprom2 = zext i32 %9 to i64, !dbg !22520
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom2, !dbg !22520, !ctir !1151
  store i32 %7, i32* %arrayidx3, align 4, !dbg !22523
  %10 = load i32, i32* %dest_idx, align 4, !dbg !22524
  %11 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22525
  %ir_front4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %11, i32 0, i32 2, !dbg !22526, !ctir !1903
  store i32 %10, i32* %ir_front4, align 4, !dbg !22527, !ctir !70
  %12 = load i32, i32* %dest_idx, align 4, !dbg !22528
  %13 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22530
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %13, i32 0, i32 3, !dbg !22531, !ctir !1903
  %14 = load i32, i32* %ir_back, align 4, !dbg !22531, !ctir !70
  %cmp = icmp eq i32 %12, %14, !dbg !22532
  br i1 %cmp, label %if.then, label %if.end, !dbg !22533

if.then:                                          ; preds = %entry
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22534
  %ir_back5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 3, !dbg !22535, !ctir !1903
  %16 = load i32, i32* %ir_back5, align 4, !dbg !22535, !ctir !70
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22536
  %ir_empty6 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 4, !dbg !22537, !ctir !1903
  %18 = load i8, i8* %ir_empty6, align 4, !dbg !22537
  %tobool7 = trunc i8 %18 to i1, !dbg !22537, !ctir !142
  %lnot8 = xor i1 %tobool7, true, !dbg !22538
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !22538
  %add10 = add i32 %16, %lnot.ext9, !dbg !22539
  %rem11 = urem i32 %add10, 4, !dbg !22540
  %19 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22541
  %ir_back12 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 3, !dbg !22542, !ctir !1903
  store i32 %rem11, i32* %ir_back12, align 4, !dbg !22543, !ctir !70
  br label %if.end, !dbg !22541

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22544
  %ir_empty13 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %20, i32 0, i32 4, !dbg !22545, !ctir !1903
  store i8 0, i8* %ir_empty13, align 4, !dbg !22546, !ctir !142
  %21 = load i32, i32* %old_val, align 4, !dbg !22547
  ret i32 %21, !dbg !22548
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_pop(%struct.I_ring* %ir) #4 !dbg !22549 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %top_val = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22552, metadata !DIExpression()), !dbg !22553
  call void @llvm.dbg.declare(metadata i32* %top_val, metadata !22554, metadata !DIExpression()), !dbg !22555
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22556
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !22558
  br i1 %call, label %if.then, label %if.end, !dbg !22559

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !22560
  unreachable, !dbg !22560

if.end:                                           ; preds = %entry
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22561
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 0, !dbg !22562, !ctir !1903
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22563
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 2, !dbg !22564, !ctir !1903
  %3 = load i32, i32* %ir_front, align 4, !dbg !22564, !ctir !70
  %idxprom = zext i32 %3 to i64, !dbg !22561
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22561, !ctir !1151
  %4 = load i32, i32* %arrayidx, align 4, !dbg !22561
  store i32 %4, i32* %top_val, align 4, !dbg !22565
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22566
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 1, !dbg !22567, !ctir !1903
  %6 = load i32, i32* %ir_default_val, align 4, !dbg !22567, !ctir !7
  %7 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22568
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 0, !dbg !22569, !ctir !1903
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22570
  %ir_front2 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !22571, !ctir !1903
  %9 = load i32, i32* %ir_front2, align 4, !dbg !22571, !ctir !70
  %idxprom3 = zext i32 %9 to i64, !dbg !22568
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom3, !dbg !22568, !ctir !1151
  store i32 %6, i32* %arrayidx4, align 4, !dbg !22572
  %10 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22573
  %ir_front5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !22575, !ctir !1903
  %11 = load i32, i32* %ir_front5, align 4, !dbg !22575, !ctir !70
  %12 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22576
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %12, i32 0, i32 3, !dbg !22577, !ctir !1903
  %13 = load i32, i32* %ir_back, align 4, !dbg !22577, !ctir !70
  %cmp = icmp eq i32 %11, %13, !dbg !22578
  br i1 %cmp, label %if.then6, label %if.else, !dbg !22579

if.then6:                                         ; preds = %if.end
  %14 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22580
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %14, i32 0, i32 4, !dbg !22581, !ctir !1903
  store i8 1, i8* %ir_empty, align 4, !dbg !22582, !ctir !142
  br label %if.end9, !dbg !22580

if.else:                                          ; preds = %if.end
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22583
  %ir_front7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 2, !dbg !22584, !ctir !1903
  %16 = load i32, i32* %ir_front7, align 4, !dbg !22584, !ctir !70
  %add = add i32 %16, 4, !dbg !22585
  %sub = sub i32 %add, 1, !dbg !22586
  %rem = urem i32 %sub, 4, !dbg !22587
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22588
  %ir_front8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 2, !dbg !22589, !ctir !1903
  store i32 %rem, i32* %ir_front8, align 4, !dbg !22590, !ctir !70
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %18 = load i32, i32* %top_val, align 4, !dbg !22591
  ret i32 %18, !dbg !22592
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !22593 {
entry:
  %codeset = alloca i8*, align 8, !ctir !116
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !22596, metadata !DIExpression()), !dbg !22597
  %call = call i8* @nl_langinfo(i32 14) #10, !dbg !22598
  store i8* %call, i8** %codeset, align 8, !dbg !22599
  %0 = load i8*, i8** %codeset, align 8, !dbg !22600
  %cmp = icmp eq i8* %0, null, !dbg !22602
  br i1 %cmp, label %if.then, label %if.end, !dbg !22603

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.492, i64 0, i64 0), i8** %codeset, align 8, !dbg !22604
  br label %if.end, !dbg !22605

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !22606
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !22606, !ctir !116
  %2 = load i8, i8* %arrayidx, align 1, !dbg !22606
  %conv = sext i8 %2 to i32, !dbg !22606
  %cmp1 = icmp eq i32 %conv, 0, !dbg !22610
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !22611

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.493, i64 0, i64 0), i8** %codeset, align 8, !dbg !22612
  br label %if.end4, !dbg !22613

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !22614
  ret i8* %3, !dbg !22615
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !22616 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !239
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1918
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22620, metadata !DIExpression()), !dbg !22621
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !22622, metadata !DIExpression()), !dbg !22623
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !22624, metadata !DIExpression()), !dbg !22625
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !22626, metadata !DIExpression()), !dbg !22627
  store i32 0, i32* %mode, align 4, !dbg !22627
  %0 = load i32, i32* %flags.addr, align 4, !dbg !22628
  %and = and i32 %0, 64, !dbg !22630
  %tobool = icmp ne i32 %and, 0, !dbg !22630
  br i1 %tobool, label %if.then, label %if.end, !dbg !22631

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !22632, metadata !DIExpression()), !dbg !22634
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22635, !ctir !1918
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !22635
  call void @llvm.va_start(i8* %arraydecay1), !dbg !22635
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22636, !ctir !1918
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !22636
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !22636
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !22636
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !22636

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !22636
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !22636
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !22636
  %3 = bitcast i8* %2 to i32*, !dbg !22636
  %4 = add i32 %gp_offset, 8, !dbg !22636
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !22636
  br label %vaarg.end, !dbg !22636

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !22636
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !22636
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !22636
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !22636
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !22636
  br label %vaarg.end, !dbg !22636

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !22636
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !22636
  store i32 %6, i32* %mode, align 4, !dbg !22637
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22638, !ctir !1918
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !22638
  call void @llvm.va_end(i8* %arraydecay34), !dbg !22638
  br label %if.end, !dbg !22639

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !22640
  %8 = load i8*, i8** %file.addr, align 8, !dbg !22641
  %9 = load i32, i32* %flags.addr, align 4, !dbg !22642
  %10 = load i32, i32* %mode, align 4, !dbg !22643
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !22644
  %call5 = call i32 @fd_safer(i32 %call), !dbg !22645
  ret i32 %call5, !dbg !22646
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !22647 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !1930
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !22650, metadata !DIExpression()), !dbg !22651
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !22652, metadata !DIExpression()), !dbg !22653
  %call = call noalias i8* @xmalloc(i64 24), !dbg !22654
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !22654
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !22653
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !22655
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22656
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !22657, !ctir !1931
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !22658, !ctir !1935
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22659
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !22660, !ctir !1931
  store i64 0, i64* %randmax, align 8, !dbg !22661, !ctir !1939
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22662
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !22663, !ctir !1931
  store i64 0, i64* %randnum, align 8, !dbg !22664, !ctir !1939
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22665
  ret %struct.randint_source* %5, !dbg !22666
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !22667 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1935
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22670, metadata !DIExpression()), !dbg !22671
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22672, metadata !DIExpression()), !dbg !22673
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22674, metadata !DIExpression()), !dbg !22675
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22676
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22677
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !22678
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !22675
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22679
  %tobool = icmp ne %struct.randread_source* %2, null, !dbg !22679
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22679

cond.true:                                        ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22680
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %3), !dbg !22681
  br label %cond.end, !dbg !22679

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !22679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.randint_source* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !22679
  ret %struct.randint_source* %cond, !dbg !22682
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #9 !dbg !22683 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22688, metadata !DIExpression()), !dbg !22689
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22690
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22691, !ctir !22687
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22691, !ctir !1935
  ret %struct.randread_source* %1, !dbg !22692
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !22693 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !1935
  %randnum = alloca i64, align 8, !ctir !1939
  %randmax = alloca i64, align 8, !ctir !1939
  %choices = alloca i64, align 8, !ctir !1939
  %i = alloca i64, align 8, !ctir !55
  %rmax = alloca i64, align 8, !ctir !1939
  %buf = alloca [8 x i8], align 1, !ctir !1941
  %excess_choices = alloca i64, align 8, !ctir !1939
  %unusable_choices = alloca i64, align 8, !ctir !1939
  %last_usable_choice = alloca i64, align 8, !ctir !1939
  %reduced_randnum = alloca i64, align 8, !ctir !1939
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22696, metadata !DIExpression()), !dbg !22697
  store i64 %genmax, i64* %genmax.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !22698, metadata !DIExpression()), !dbg !22699
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22700, metadata !DIExpression()), !dbg !22701
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22702
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22703, !ctir !1931
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !22703, !ctir !1935
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !22701
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !22704, metadata !DIExpression()), !dbg !22705
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22706
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !22707, !ctir !1931
  %3 = load i64, i64* %randnum2, align 8, !dbg !22707, !ctir !1939
  store i64 %3, i64* %randnum, align 8, !dbg !22705
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !22708, metadata !DIExpression()), !dbg !22709
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22710
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !22711, !ctir !1931
  %5 = load i64, i64* %randmax3, align 8, !dbg !22711, !ctir !1939
  store i64 %5, i64* %randmax, align 8, !dbg !22709
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !22712, metadata !DIExpression()), !dbg !22713
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !22714
  %add = add i64 %6, 1, !dbg !22715
  store i64 %add, i64* %choices, align 8, !dbg !22713
  br label %while.body, !dbg !22716

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !22717
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !22720
  %cmp = icmp ult i64 %7, %8, !dbg !22721
  br i1 %cmp, label %if.then, label %if.end, !dbg !22722

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22723, metadata !DIExpression()), !dbg !22725
  store i64 0, i64* %i, align 8, !dbg !22725
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !22726, metadata !DIExpression()), !dbg !22727
  %9 = load i64, i64* %randmax, align 8, !dbg !22728
  store i64 %9, i64* %rmax, align 8, !dbg !22727
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !22729, metadata !DIExpression()), !dbg !22730
  br label %do.body, !dbg !22731

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !22732
  %call = call i64 @shift_left(i64 %10), !dbg !22734
  %add4 = add i64 %call, 255, !dbg !22735
  store i64 %add4, i64* %rmax, align 8, !dbg !22736
  %11 = load i64, i64* %i, align 8, !dbg !22737
  %inc = add i64 %11, 1, !dbg !22737
  store i64 %inc, i64* %i, align 8, !dbg !22737
  br label %do.cond, !dbg !22738

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !22739
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !22740
  %cmp5 = icmp ult i64 %12, %13, !dbg !22741
  br i1 %cmp5, label %do.body, label %do.end, !dbg !22738, !llvm.loop !22742

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22744
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !22745, !ctir !1941
  %15 = load i64, i64* %i, align 8, !dbg !22746
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !22747
  store i64 0, i64* %i, align 8, !dbg !22748
  br label %do.body6, !dbg !22749

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !22750
  %call7 = call i64 @shift_left(i64 %16), !dbg !22752
  %17 = load i64, i64* %i, align 8, !dbg !22753
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !22754, !ctir !1941
  %18 = load i8, i8* %arrayidx, align 1, !dbg !22754
  %conv = zext i8 %18 to i64, !dbg !22754
  %add8 = add i64 %call7, %conv, !dbg !22755
  store i64 %add8, i64* %randnum, align 8, !dbg !22756
  %19 = load i64, i64* %randmax, align 8, !dbg !22757
  %call9 = call i64 @shift_left(i64 %19), !dbg !22758
  %add10 = add i64 %call9, 255, !dbg !22759
  store i64 %add10, i64* %randmax, align 8, !dbg !22760
  %20 = load i64, i64* %i, align 8, !dbg !22761
  %inc11 = add i64 %20, 1, !dbg !22761
  store i64 %inc11, i64* %i, align 8, !dbg !22761
  br label %do.cond12, !dbg !22762

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !22763
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !22764
  %cmp13 = icmp ult i64 %21, %22, !dbg !22765
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !22762, !llvm.loop !22766

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !22768

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !22769
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !22771
  %cmp16 = icmp eq i64 %23, %24, !dbg !22772
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !22773

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22774
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !22776, !ctir !1931
  store i64 0, i64* %randmax19, align 8, !dbg !22777, !ctir !1939
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22778
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !22779, !ctir !1931
  store i64 0, i64* %randnum20, align 8, !dbg !22780, !ctir !1939
  %27 = load i64, i64* %randnum, align 8, !dbg !22781
  store i64 %27, i64* %retval, align 8, !dbg !22782
  br label %return, !dbg !22782

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !22783, metadata !DIExpression()), !dbg !22785
  %28 = load i64, i64* %randmax, align 8, !dbg !22786
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !22787
  %sub = sub i64 %28, %29, !dbg !22788
  store i64 %sub, i64* %excess_choices, align 8, !dbg !22785
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !22789, metadata !DIExpression()), !dbg !22790
  %30 = load i64, i64* %excess_choices, align 8, !dbg !22791
  %31 = load i64, i64* %choices, align 8, !dbg !22792
  %rem = urem i64 %30, %31, !dbg !22793
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !22790
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !22794, metadata !DIExpression()), !dbg !22795
  %32 = load i64, i64* %randmax, align 8, !dbg !22796
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !22797
  %sub21 = sub i64 %32, %33, !dbg !22798
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !22795
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !22799, metadata !DIExpression()), !dbg !22800
  %34 = load i64, i64* %randnum, align 8, !dbg !22801
  %35 = load i64, i64* %choices, align 8, !dbg !22802
  %rem22 = urem i64 %34, %35, !dbg !22803
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !22800
  %36 = load i64, i64* %randnum, align 8, !dbg !22804
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !22806
  %cmp23 = icmp ule i64 %36, %37, !dbg !22807
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !22808

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !22809
  %39 = load i64, i64* %choices, align 8, !dbg !22811
  %div = udiv i64 %38, %39, !dbg !22812
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22813
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !22814, !ctir !1931
  store i64 %div, i64* %randnum26, align 8, !dbg !22815, !ctir !1939
  %41 = load i64, i64* %excess_choices, align 8, !dbg !22816
  %42 = load i64, i64* %choices, align 8, !dbg !22817
  %div27 = udiv i64 %41, %42, !dbg !22818
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22819
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !22820, !ctir !1931
  store i64 %div27, i64* %randmax28, align 8, !dbg !22821, !ctir !1939
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !22822
  store i64 %44, i64* %retval, align 8, !dbg !22823
  br label %return, !dbg !22823

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !22824
  store i64 %45, i64* %randnum, align 8, !dbg !22825
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !22826
  %sub30 = sub i64 %46, 1, !dbg !22827
  store i64 %sub30, i64* %randmax, align 8, !dbg !22828
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !22716, !llvm.loop !22829

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !22831
  ret i64 %47, !dbg !22831
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !22832 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22835, metadata !DIExpression()), !dbg !22836
  %0 = load i64, i64* %x.addr, align 8, !dbg !22837
  %shl = shl i64 %0, 8, !dbg !22838
  ret i64 %shl, !dbg !22839
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !22840 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22843, metadata !DIExpression()), !dbg !22844
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22845
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !22845
  call void @explicit_bzero(i8* %1, i64 24) #10, !dbg !22846
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22847
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !22847
  call void @free(i8* %3) #10, !dbg !22848
  ret void, !dbg !22849
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !22850 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22853, metadata !DIExpression()), !dbg !22854
  call void @llvm.dbg.declare(metadata i32* %r, metadata !22855, metadata !DIExpression()), !dbg !22856
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22857
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22858, !ctir !1931
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22858, !ctir !1935
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !22859
  store i32 %call, i32* %r, align 4, !dbg !22856
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22860, metadata !DIExpression()), !dbg !22861
  %call1 = call i32* @__errno_location() #15, !dbg !22862
  %2 = load i32, i32* %call1, align 4, !dbg !22862, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !22861
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22863
  call void @randint_free(%struct.randint_source* %3), !dbg !22864
  %4 = load i32, i32* %e, align 4, !dbg !22865
  %call2 = call i32* @__errno_location() #15, !dbg !22866
  store i32 %4, i32* %call2, align 4, !dbg !22867, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !22868
  ret i32 %5, !dbg !22869
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !22870 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1945
  %s = alloca %struct.randread_source*, align 8, !ctir !1979
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22873, metadata !DIExpression()), !dbg !22874
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22875, metadata !DIExpression()), !dbg !22876
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22877
  %cmp = icmp eq i64 %0, 0, !dbg !22879
  br i1 %cmp, label %if.then, label %if.else, !dbg !22880

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !22881
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !22882
  br label %return, !dbg !22882

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !22883, metadata !DIExpression()), !dbg !22885
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !22885
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !22886, metadata !DIExpression()), !dbg !22887
  %1 = load i8*, i8** %name.addr, align 8, !dbg !22888
  %tobool = icmp ne i8* %1, null, !dbg !22888
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !22890

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !22891
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.504, i64 0, i64 0)), !dbg !22893
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !22894
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !22894
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !22895

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !22896
  br label %return, !dbg !22896

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !22897

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22898
  %4 = load i8*, i8** %name.addr, align 8, !dbg !22899
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !22900
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !22901
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22902
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !22902
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !22904

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22905
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22906
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !22907, !ctir !1980
  %c = bitcast %union.anon.147* %buf to [4096 x i8]*, !dbg !22908
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !22906, !ctir !1993
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22909
  %cmp9 = icmp ult i64 4096, %8, !dbg !22909
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !22909

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !22909

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22909
  br label %cond.end, !dbg !22909

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !22909
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #10, !dbg !22910
  br label %if.end19, !dbg !22910

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22911
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !22913, !ctir !1980
  %isaac = bitcast %union.anon.147* %buf12 to %struct.isaac*, !dbg !22914
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !22915, !ctir !1997
  store i64 0, i64* %buffered, align 8, !dbg !22916, !ctir !55
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22917
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !22918, !ctir !1980
  %isaac14 = bitcast %union.anon.147* %buf13 to %struct.isaac*, !dbg !22919
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !22920, !ctir !1997
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !22921, !ctir !2001
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !22917, !ctir !2005
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !22917
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22922
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !22923
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22924
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !22925, !ctir !1980
  %isaac17 = bitcast %union.anon.147* %buf16 to %struct.isaac*, !dbg !22926
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !22927, !ctir !1997
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !22928
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22929
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !22930
  br label %return, !dbg !22930

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !22931
  ret %struct.randread_source* %16, !dbg !22931
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !22932 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !1979
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !22935, metadata !DIExpression()), !dbg !22936
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !22937, metadata !DIExpression()), !dbg !22938
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !22939, metadata !DIExpression()), !dbg !22940
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !22941
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !22941
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !22940
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !22942
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22943
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !22944, !ctir !1980
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !22945, !ctir !1945
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22946
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !22947, !ctir !1980
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !22948, !ctir !1985
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !22949
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22950
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !22951, !ctir !1980
  store i8* %4, i8** %handler_arg2, align 8, !dbg !22952, !ctir !709
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22953
  ret %struct.randread_source* %6, !dbg !22954
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !22955 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %seeded = alloca i64, align 8, !ctir !540
  %fd = alloca i32, align 4, !ctir !7
  %v = alloca %struct.timespec, align 8, !ctir !22958
  %nbytes = alloca i64, align 8, !ctir !55
  %v19 = alloca i32, align 4, !ctir !2020
  %nbytes20 = alloca i64, align 8, !ctir !55
  %v34 = alloca i32, align 4, !ctir !2020
  %nbytes35 = alloca i64, align 8, !ctir !55
  %v49 = alloca i32, align 4, !ctir !451
  %nbytes50 = alloca i64, align 8, !ctir !55
  %v64 = alloca i32, align 4, !ctir !451
  %nbytes65 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !22962, metadata !DIExpression()), !dbg !22963
  store i64 %bufsize, i64* %bufsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !22964, metadata !DIExpression()), !dbg !22965
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22966, metadata !DIExpression()), !dbg !22967
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !22968, metadata !DIExpression()), !dbg !22969
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !22970
  store i8* %0, i8** %buf, align 8, !dbg !22969
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !22971, metadata !DIExpression()), !dbg !22972
  store i64 0, i64* %seeded, align 8, !dbg !22972
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22973, metadata !DIExpression()), !dbg !22974
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.505, i64 0, i64 0), i32 0), !dbg !22975
  store i32 %call, i32* %fd, align 4, !dbg !22974
  %1 = load i32, i32* %fd, align 4, !dbg !22976
  %cmp = icmp sle i32 0, %1, !dbg !22978
  br i1 %cmp, label %if.then, label %if.end6, !dbg !22979

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !22980
  %3 = load i8*, i8** %buf, align 8, !dbg !22982
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !22983
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22983
  %cmp1 = icmp ult i64 %4, %5, !dbg !22983
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !22983

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !22983
  br label %cond.end, !dbg !22983

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22983
  br label %cond.end, !dbg !22983

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !22983
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !22984
  store i64 %call2, i64* %seeded, align 8, !dbg !22985
  %8 = load i64, i64* %seeded, align 8, !dbg !22986
  %cmp3 = icmp slt i64 %8, 0, !dbg !22988
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !22989

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !22990
  br label %if.end, !dbg !22991

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !22992
  %call5 = call i32 @close(i32 %9), !dbg !22993
  br label %if.end6, !dbg !22994

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !22995
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !22995
  %cmp7 = icmp ult i64 %10, %11, !dbg !22995
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !22997

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !22998, metadata !DIExpression()), !dbg !23000
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !23001, metadata !DIExpression()), !dbg !23000
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !23000
  %13 = load i64, i64* %seeded, align 8, !dbg !23000
  %sub = sub i64 %12, %13, !dbg !23000
  %cmp9 = icmp ult i64 16, %sub, !dbg !23000
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !23000

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !23000

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !23000
  %15 = load i64, i64* %seeded, align 8, !dbg !23000
  %sub12 = sub i64 %14, %15, !dbg !23000
  br label %cond.end13, !dbg !23000

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !23000
  store i64 %cond14, i64* %nbytes, align 8, !dbg !23000
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #10, !dbg !23000
  %16 = load i8*, i8** %buf, align 8, !dbg !23000
  %17 = load i64, i64* %seeded, align 8, !dbg !23000
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !23000, !ctir !10
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !23000
  %19 = load i64, i64* %nbytes, align 8, !dbg !23000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !23000
  %20 = load i64, i64* %nbytes, align 8, !dbg !23000
  %21 = load i64, i64* %seeded, align 8, !dbg !23000
  %add = add i64 %21, %20, !dbg !23000
  store i64 %add, i64* %seeded, align 8, !dbg !23000
  br label %if.end16, !dbg !23000

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !23002
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !23002
  %cmp17 = icmp ult i64 %22, %23, !dbg !23002
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !23004

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !23005, metadata !DIExpression()), !dbg !23007
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !23008, metadata !DIExpression()), !dbg !23007
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !23007
  %25 = load i64, i64* %seeded, align 8, !dbg !23007
  %sub21 = sub i64 %24, %25, !dbg !23007
  %cmp22 = icmp ult i64 4, %sub21, !dbg !23007
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !23007

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !23007

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !23007
  %27 = load i64, i64* %seeded, align 8, !dbg !23007
  %sub25 = sub i64 %26, %27, !dbg !23007
  br label %cond.end26, !dbg !23007

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !23007
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !23007
  %call28 = call i32 @getpid() #10, !dbg !23007
  store i32 %call28, i32* %v19, align 4, !dbg !23007
  %28 = load i8*, i8** %buf, align 8, !dbg !23007
  %29 = load i64, i64* %seeded, align 8, !dbg !23007
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !23007, !ctir !10
  %30 = bitcast i32* %v19 to i8*, !dbg !23007
  %31 = load i64, i64* %nbytes20, align 8, !dbg !23007
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !23007
  %32 = load i64, i64* %nbytes20, align 8, !dbg !23007
  %33 = load i64, i64* %seeded, align 8, !dbg !23007
  %add30 = add i64 %33, %32, !dbg !23007
  store i64 %add30, i64* %seeded, align 8, !dbg !23007
  br label %if.end31, !dbg !23007

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !23009
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !23009
  %cmp32 = icmp ult i64 %34, %35, !dbg !23009
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !23011

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !23012, metadata !DIExpression()), !dbg !23014
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !23015, metadata !DIExpression()), !dbg !23014
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !23014
  %37 = load i64, i64* %seeded, align 8, !dbg !23014
  %sub36 = sub i64 %36, %37, !dbg !23014
  %cmp37 = icmp ult i64 4, %sub36, !dbg !23014
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !23014

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !23014

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !23014
  %39 = load i64, i64* %seeded, align 8, !dbg !23014
  %sub40 = sub i64 %38, %39, !dbg !23014
  br label %cond.end41, !dbg !23014

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !23014
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !23014
  %call43 = call i32 @getppid() #10, !dbg !23014
  store i32 %call43, i32* %v34, align 4, !dbg !23014
  %40 = load i8*, i8** %buf, align 8, !dbg !23014
  %41 = load i64, i64* %seeded, align 8, !dbg !23014
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !23014, !ctir !10
  %42 = bitcast i32* %v34 to i8*, !dbg !23014
  %43 = load i64, i64* %nbytes35, align 8, !dbg !23014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !23014
  %44 = load i64, i64* %nbytes35, align 8, !dbg !23014
  %45 = load i64, i64* %seeded, align 8, !dbg !23014
  %add45 = add i64 %45, %44, !dbg !23014
  store i64 %add45, i64* %seeded, align 8, !dbg !23014
  br label %if.end46, !dbg !23014

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !23016
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !23016
  %cmp47 = icmp ult i64 %46, %47, !dbg !23016
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !23018

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !23019, metadata !DIExpression()), !dbg !23021
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !23022, metadata !DIExpression()), !dbg !23021
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !23021
  %49 = load i64, i64* %seeded, align 8, !dbg !23021
  %sub51 = sub i64 %48, %49, !dbg !23021
  %cmp52 = icmp ult i64 4, %sub51, !dbg !23021
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !23021

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !23021

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !23021
  %51 = load i64, i64* %seeded, align 8, !dbg !23021
  %sub55 = sub i64 %50, %51, !dbg !23021
  br label %cond.end56, !dbg !23021

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !23021
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !23021
  %call58 = call i32 @getuid() #10, !dbg !23021
  store i32 %call58, i32* %v49, align 4, !dbg !23021
  %52 = load i8*, i8** %buf, align 8, !dbg !23021
  %53 = load i64, i64* %seeded, align 8, !dbg !23021
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !23021, !ctir !10
  %54 = bitcast i32* %v49 to i8*, !dbg !23021
  %55 = load i64, i64* %nbytes50, align 8, !dbg !23021
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !23021
  %56 = load i64, i64* %nbytes50, align 8, !dbg !23021
  %57 = load i64, i64* %seeded, align 8, !dbg !23021
  %add60 = add i64 %57, %56, !dbg !23021
  store i64 %add60, i64* %seeded, align 8, !dbg !23021
  br label %if.end61, !dbg !23021

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !23023
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !23023
  %cmp62 = icmp ult i64 %58, %59, !dbg !23023
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !23025

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !23026, metadata !DIExpression()), !dbg !23028
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !23029, metadata !DIExpression()), !dbg !23028
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !23028
  %61 = load i64, i64* %seeded, align 8, !dbg !23028
  %sub66 = sub i64 %60, %61, !dbg !23028
  %cmp67 = icmp ult i64 4, %sub66, !dbg !23028
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !23028

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !23028

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !23028
  %63 = load i64, i64* %seeded, align 8, !dbg !23028
  %sub70 = sub i64 %62, %63, !dbg !23028
  br label %cond.end71, !dbg !23028

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !23028
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !23028
  %call73 = call i32 @getgid() #10, !dbg !23028
  store i32 %call73, i32* %v64, align 4, !dbg !23028
  %64 = load i8*, i8** %buf, align 8, !dbg !23028
  %65 = load i64, i64* %seeded, align 8, !dbg !23028
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !23028, !ctir !10
  %66 = bitcast i32* %v64 to i8*, !dbg !23028
  %67 = load i64, i64* %nbytes65, align 8, !dbg !23028
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !23028
  %68 = load i64, i64* %nbytes65, align 8, !dbg !23028
  %69 = load i64, i64* %seeded, align 8, !dbg !23028
  %add75 = add i64 %69, %68, !dbg !23028
  store i64 %add75, i64* %seeded, align 8, !dbg !23028
  br label %if.end76, !dbg !23028

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !23030
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !23031 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !23032, metadata !DIExpression()), !dbg !23033
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !23034
  %tobool = icmp ne i8* %0, null, !dbg !23034
  br i1 %tobool, label %if.then, label %if.end, !dbg !23036

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !23037
  %call = call i32* @__errno_location() #15, !dbg !23038
  %2 = load i32, i32* %call, align 4, !dbg !23038, !ctir !7
  %call1 = call i32* @__errno_location() #15, !dbg !23039
  %3 = load i32, i32* %call1, align 4, !dbg !23039, !ctir !7
  %cmp = icmp eq i32 %3, 0, !dbg !23040
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23039

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.506, i64 0, i64 0)) #10, !dbg !23041
  br label %cond.end, !dbg !23039

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.507, i64 0, i64 0)) #10, !dbg !23042
  br label %cond.end, !dbg !23039

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !23039
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !23043
  %call4 = call i8* @quote(i8* %4), !dbg !23044
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !23045
  br label %if.end, !dbg !23045

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !23046
  unreachable, !dbg !23046
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !23047 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23050, metadata !DIExpression()), !dbg !23051
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !23052, metadata !DIExpression()), !dbg !23053
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !23054
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23055
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !23056, !ctir !1980
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !23057, !ctir !1985
  ret void, !dbg !23058
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !23059 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23062, metadata !DIExpression()), !dbg !23063
  store i8* %handler_arg, i8** %handler_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !23064, metadata !DIExpression()), !dbg !23065
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !23066
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23067
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !23068, !ctir !1980
  store i8* %0, i8** %handler_arg1, align 8, !dbg !23069, !ctir !709
  ret void, !dbg !23070
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !23071 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23074, metadata !DIExpression()), !dbg !23075
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23076, metadata !DIExpression()), !dbg !23077
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23078, metadata !DIExpression()), !dbg !23079
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23080
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !23082, !ctir !1980
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23082, !ctir !1945
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !23080
  br i1 %tobool, label %if.then, label %if.else, !dbg !23083

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23084
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !23085
  %4 = load i64, i64* %size.addr, align 8, !dbg !23086
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !23087
  br label %if.end, !dbg !23087

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23088
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !23089, !ctir !1980
  %isaac = bitcast %union.anon.147* %buf1 to %struct.isaac*, !dbg !23090
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !23091
  %7 = load i64, i64* %size.addr, align 8, !dbg !23092
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !23093
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !23094
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !23095 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %fread_errno = alloca i32, align 4, !ctir !7
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23099, metadata !DIExpression()), !dbg !23100
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !23101, metadata !DIExpression()), !dbg !23102
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23103, metadata !DIExpression()), !dbg !23104
  br label %while.body, !dbg !23105

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !23106, metadata !DIExpression()), !dbg !23108
  %0 = load i8*, i8** %p.addr, align 8, !dbg !23109
  %1 = load i64, i64* %size.addr, align 8, !dbg !23109
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23109
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !23109, !ctir !1980
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23109, !ctir !1945
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !23109
  store i64 %call, i64* %inbytes, align 8, !dbg !23108
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !23110, metadata !DIExpression()), !dbg !23111
  %call1 = call i32* @__errno_location() #15, !dbg !23112
  %4 = load i32, i32* %call1, align 4, !dbg !23112, !ctir !7
  store i32 %4, i32* %fread_errno, align 4, !dbg !23111
  %5 = load i64, i64* %inbytes, align 8, !dbg !23113
  %6 = load i8*, i8** %p.addr, align 8, !dbg !23114
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !23114, !ctir !450
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !23114
  %7 = load i64, i64* %inbytes, align 8, !dbg !23115
  %8 = load i64, i64* %size.addr, align 8, !dbg !23116
  %sub = sub i64 %8, %7, !dbg !23116
  store i64 %sub, i64* %size.addr, align 8, !dbg !23116
  %9 = load i64, i64* %size.addr, align 8, !dbg !23117
  %cmp = icmp eq i64 %9, 0, !dbg !23119
  br i1 %cmp, label %if.then, label %if.end, !dbg !23120

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !23121

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23122
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !23122, !ctir !1980
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !23122, !ctir !1945
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #10, !dbg !23122
  %tobool = icmp ne i32 %call3, 0, !dbg !23122
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !23122

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !23123
  br label %cond.end, !dbg !23122

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !23122

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !23122
  %call4 = call i32* @__errno_location() #15, !dbg !23124
  store i32 %cond, i32* %call4, align 4, !dbg !23125, !ctir !7
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23126
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !23127, !ctir !1980
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !23127, !ctir !1985
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23128
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !23129, !ctir !1980
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !23129, !ctir !709
  call void %14(i8* %16), !dbg !23126
  br label %while.body, !dbg !23105, !llvm.loop !23130

while.end:                                        ; preds = %if.then
  ret void, !dbg !23132
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !23133 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %char_p = alloca i8*, align 8, !ctir !9
  %wp = alloca i64*, align 8, !ctir !2022
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !23137, metadata !DIExpression()), !dbg !23138
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !23139, metadata !DIExpression()), !dbg !23140
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23141, metadata !DIExpression()), !dbg !23142
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !23143, metadata !DIExpression()), !dbg !23144
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23145
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !23146, !ctir !1997
  %1 = load i64, i64* %buffered, align 8, !dbg !23146, !ctir !55
  store i64 %1, i64* %inbytes, align 8, !dbg !23144
  br label %while.body, !dbg !23147

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !23148, metadata !DIExpression()), !dbg !23150
  %2 = load i8*, i8** %p.addr, align 8, !dbg !23151
  store i8* %2, i8** %char_p, align 8, !dbg !23150
  %3 = load i64, i64* %size.addr, align 8, !dbg !23152
  %4 = load i64, i64* %inbytes, align 8, !dbg !23154
  %cmp = icmp ule i64 %3, %4, !dbg !23155
  br i1 %cmp, label %if.then, label %if.end, !dbg !23156

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !23157
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23159
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !23160, !ctir !1997
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !23161
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !23159, !ctir !2017
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !23162, !ctir !450
  %7 = load i64, i64* %inbytes, align 8, !dbg !23163
  %idx.neg = sub i64 0, %7, !dbg !23164
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !23164, !ctir !450
  %8 = load i64, i64* %size.addr, align 8, !dbg !23165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !23166
  %9 = load i64, i64* %inbytes, align 8, !dbg !23167
  %10 = load i64, i64* %size.addr, align 8, !dbg !23168
  %sub = sub i64 %9, %10, !dbg !23169
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23170
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !23171, !ctir !1997
  store i64 %sub, i64* %buffered2, align 8, !dbg !23172, !ctir !55
  br label %return, !dbg !23173

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !23174
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23175
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !23176, !ctir !1997
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !23177
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !23175, !ctir !2017
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !23178, !ctir !450
  %14 = load i64, i64* %inbytes, align 8, !dbg !23179
  %idx.neg7 = sub i64 0, %14, !dbg !23180
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !23180, !ctir !450
  %15 = load i64, i64* %inbytes, align 8, !dbg !23181
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !23182
  %16 = load i8*, i8** %char_p, align 8, !dbg !23183
  %17 = load i64, i64* %inbytes, align 8, !dbg !23184
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !23185, !ctir !10
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !23186
  %18 = load i64, i64* %inbytes, align 8, !dbg !23187
  %19 = load i64, i64* %size.addr, align 8, !dbg !23188
  %sub10 = sub i64 %19, %18, !dbg !23188
  store i64 %sub10, i64* %size.addr, align 8, !dbg !23188
  %20 = load i8*, i8** %p.addr, align 8, !dbg !23189
  %21 = ptrtoint i8* %20 to i64, !dbg !23189
  %rem = urem i64 %21, 8, !dbg !23189
  %cmp11 = icmp eq i64 %rem, 0, !dbg !23189
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !23191

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !23192, metadata !DIExpression()), !dbg !23194
  %22 = load i8*, i8** %p.addr, align 8, !dbg !23195
  %23 = bitcast i8* %22 to i64*, !dbg !23195
  store i64* %23, i64** %wp, align 8, !dbg !23194
  br label %while.cond13, !dbg !23196

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !23197
  %cmp14 = icmp ule i64 2048, %24, !dbg !23198
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !23196

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23199
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !23201, !ctir !1997
  %26 = load i64*, i64** %wp, align 8, !dbg !23202
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !23203
  %27 = load i64*, i64** %wp, align 8, !dbg !23204
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !23204, !ctir !2006
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !23204
  %28 = load i64, i64* %size.addr, align 8, !dbg !23205
  %sub17 = sub i64 %28, 2048, !dbg !23205
  store i64 %sub17, i64* %size.addr, align 8, !dbg !23205
  %29 = load i64, i64* %size.addr, align 8, !dbg !23206
  %cmp18 = icmp eq i64 %29, 0, !dbg !23208
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !23209

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23210
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !23212, !ctir !1997
  store i64 0, i64* %buffered20, align 8, !dbg !23213, !ctir !55
  br label %return, !dbg !23214

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !23196, !llvm.loop !23215

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !23217
  %32 = bitcast i64* %31 to i8*, !dbg !23217
  store i8* %32, i8** %p.addr, align 8, !dbg !23218
  br label %if.end22, !dbg !23219

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23220
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !23221, !ctir !1997
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23222
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !23223, !ctir !1997
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !23224
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !23222, !ctir !2005
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !23225
  store i64 2048, i64* %inbytes, align 8, !dbg !23226
  br label %while.body, !dbg !23147, !llvm.loop !23227

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !23229
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !23230 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !1945
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23233, metadata !DIExpression()), !dbg !23234
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !23235, metadata !DIExpression()), !dbg !23236
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23237
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !23238, !ctir !1980
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !23238, !ctir !1945
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !23236
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23239
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !23239
  call void @explicit_bzero(i8* %3, i64 4152) #10, !dbg !23240
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23241
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !23241
  call void @free(i8* %5) #10, !dbg !23242
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23243
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !23243
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !23243

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23244
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !23245
  br label %cond.end, !dbg !23243

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !23243

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !23243
  ret i32 %cond, !dbg !23246
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !23247 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !2006
  %b = alloca i64, align 8, !ctir !2006
  %m = alloca i64*, align 8, !ctir !2022
  %r = alloca i64*, align 8, !ctir !2022
  %x = alloca i64, align 8, !ctir !2006
  %y = alloca i64, align 8, !ctir !2006
  %x18 = alloca i64, align 8, !ctir !2006
  %y19 = alloca i64, align 8, !ctir !2006
  %x40 = alloca i64, align 8, !ctir !2006
  %y41 = alloca i64, align 8, !ctir !2006
  %x61 = alloca i64, align 8, !ctir !2006
  %y62 = alloca i64, align 8, !ctir !2006
  %x88 = alloca i64, align 8, !ctir !2006
  %y89 = alloca i64, align 8, !ctir !2006
  %x110 = alloca i64, align 8, !ctir !2006
  %y111 = alloca i64, align 8, !ctir !2006
  %x132 = alloca i64, align 8, !ctir !2006
  %y133 = alloca i64, align 8, !ctir !2006
  %x153 = alloca i64, align 8, !ctir !2006
  %y154 = alloca i64, align 8, !ctir !2006
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !23258, metadata !DIExpression()), !dbg !23259
  store i64* %result, i64** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !23260, metadata !DIExpression()), !dbg !23261
  call void @llvm.dbg.declare(metadata i64* %a, metadata !23262, metadata !DIExpression()), !dbg !23263
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23264
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !23265, !ctir !23252
  %1 = load i64, i64* %a1, align 8, !dbg !23265, !ctir !2006
  store i64 %1, i64* %a, align 8, !dbg !23263
  call void @llvm.dbg.declare(metadata i64* %b, metadata !23266, metadata !DIExpression()), !dbg !23267
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23268
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !23269, !ctir !23252
  %3 = load i64, i64* %b2, align 8, !dbg !23269, !ctir !2006
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23270
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !23271, !ctir !23252
  %5 = load i64, i64* %c, align 8, !dbg !23272, !ctir !2006
  %inc = add i64 %5, 1, !dbg !23272
  store i64 %inc, i64* %c, align 8, !dbg !23272, !ctir !2006
  %add = add i64 %3, %inc, !dbg !23273
  store i64 %add, i64* %b, align 8, !dbg !23267
  call void @llvm.dbg.declare(metadata i64** %m, metadata !23274, metadata !DIExpression()), !dbg !23275
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23276
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !23277, !ctir !23252
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !23276, !ctir !2005
  store i64* %arraydecay, i64** %m, align 8, !dbg !23275
  call void @llvm.dbg.declare(metadata i64** %r, metadata !23278, metadata !DIExpression()), !dbg !23279
  %7 = load i64*, i64** %result.addr, align 8, !dbg !23280
  store i64* %7, i64** %r, align 8, !dbg !23279
  br label %do.body, !dbg !23281

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !23282, metadata !DIExpression()), !dbg !23285
  call void @llvm.dbg.declare(metadata i64* %y, metadata !23286, metadata !DIExpression()), !dbg !23285
  %8 = load i64, i64* %a, align 8, !dbg !23285
  %9 = load i64, i64* %a, align 8, !dbg !23285
  %shl = shl i64 %9, 21, !dbg !23285
  %xor = xor i64 %8, %shl, !dbg !23285
  %neg = xor i64 %xor, -1, !dbg !23285
  %xor4 = xor i64 0, %neg, !dbg !23285
  %10 = load i64*, i64** %m, align 8, !dbg !23285
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !23285, !ctir !2022
  %11 = load i64, i64* %arrayidx, align 8, !dbg !23285
  %add5 = add i64 %xor4, %11, !dbg !23285
  store i64 %add5, i64* %a, align 8, !dbg !23285
  %12 = load i64*, i64** %m, align 8, !dbg !23285
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !23285, !ctir !2022
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !23285
  store i64 %13, i64* %x, align 8, !dbg !23285
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23285
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !23285, !ctir !23252
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !23285, !ctir !2005
  %15 = load i64, i64* %x, align 8, !dbg !23285
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !23285
  %16 = load i64, i64* %a, align 8, !dbg !23285
  %add9 = add i64 %call, %16, !dbg !23285
  %17 = load i64, i64* %b, align 8, !dbg !23285
  %add10 = add i64 %add9, %17, !dbg !23285
  store i64 %add10, i64* %y, align 8, !dbg !23285
  %18 = load i64*, i64** %m, align 8, !dbg !23285
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !23285, !ctir !2022
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !23285
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23285
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !23285, !ctir !23252
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !23285, !ctir !2005
  %20 = load i64, i64* %y, align 8, !dbg !23285
  %shr = lshr i64 %20, 8, !dbg !23285
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !23285
  %21 = load i64, i64* %x, align 8, !dbg !23285
  %add15 = add i64 %call14, %21, !dbg !23285
  %call16 = call i64 @just(i64 %add15), !dbg !23285
  store i64 %call16, i64* %b, align 8, !dbg !23285
  %22 = load i64*, i64** %r, align 8, !dbg !23285
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !23285, !ctir !2022
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !23285
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !23287, metadata !DIExpression()), !dbg !23289
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !23290, metadata !DIExpression()), !dbg !23289
  %23 = load i64, i64* %a, align 8, !dbg !23289
  %24 = load i64, i64* %a, align 8, !dbg !23289
  %call20 = call i64 @just(i64 %24), !dbg !23289
  %shr21 = lshr i64 %call20, 5, !dbg !23289
  %xor22 = xor i64 %23, %shr21, !dbg !23289
  %xor23 = xor i64 0, %xor22, !dbg !23289
  %25 = load i64*, i64** %m, align 8, !dbg !23289
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !23289, !ctir !2022
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !23289
  %add25 = add i64 %xor23, %26, !dbg !23289
  store i64 %add25, i64* %a, align 8, !dbg !23289
  %27 = load i64*, i64** %m, align 8, !dbg !23289
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !23289, !ctir !2022
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !23289
  store i64 %28, i64* %x18, align 8, !dbg !23289
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23289
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !23289, !ctir !23252
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !23289, !ctir !2005
  %30 = load i64, i64* %x18, align 8, !dbg !23289
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !23289
  %31 = load i64, i64* %a, align 8, !dbg !23289
  %add30 = add i64 %call29, %31, !dbg !23289
  %32 = load i64, i64* %b, align 8, !dbg !23289
  %add31 = add i64 %add30, %32, !dbg !23289
  store i64 %add31, i64* %y19, align 8, !dbg !23289
  %33 = load i64*, i64** %m, align 8, !dbg !23289
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !23289, !ctir !2022
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !23289
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23289
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !23289, !ctir !23252
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !23289, !ctir !2005
  %35 = load i64, i64* %y19, align 8, !dbg !23289
  %shr35 = lshr i64 %35, 8, !dbg !23289
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !23289
  %36 = load i64, i64* %x18, align 8, !dbg !23289
  %add37 = add i64 %call36, %36, !dbg !23289
  %call38 = call i64 @just(i64 %add37), !dbg !23289
  store i64 %call38, i64* %b, align 8, !dbg !23289
  %37 = load i64*, i64** %r, align 8, !dbg !23289
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !23289, !ctir !2022
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !23289
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !23291, metadata !DIExpression()), !dbg !23293
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !23294, metadata !DIExpression()), !dbg !23293
  %38 = load i64, i64* %a, align 8, !dbg !23293
  %39 = load i64, i64* %a, align 8, !dbg !23293
  %shl42 = shl i64 %39, 12, !dbg !23293
  %xor43 = xor i64 %38, %shl42, !dbg !23293
  %xor44 = xor i64 0, %xor43, !dbg !23293
  %40 = load i64*, i64** %m, align 8, !dbg !23293
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !23293, !ctir !2022
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !23293
  %add46 = add i64 %xor44, %41, !dbg !23293
  store i64 %add46, i64* %a, align 8, !dbg !23293
  %42 = load i64*, i64** %m, align 8, !dbg !23293
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !23293, !ctir !2022
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !23293
  store i64 %43, i64* %x40, align 8, !dbg !23293
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23293
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !23293, !ctir !23252
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !23293, !ctir !2005
  %45 = load i64, i64* %x40, align 8, !dbg !23293
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !23293
  %46 = load i64, i64* %a, align 8, !dbg !23293
  %add51 = add i64 %call50, %46, !dbg !23293
  %47 = load i64, i64* %b, align 8, !dbg !23293
  %add52 = add i64 %add51, %47, !dbg !23293
  store i64 %add52, i64* %y41, align 8, !dbg !23293
  %48 = load i64*, i64** %m, align 8, !dbg !23293
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !23293, !ctir !2022
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !23293
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23293
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !23293, !ctir !23252
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !23293, !ctir !2005
  %50 = load i64, i64* %y41, align 8, !dbg !23293
  %shr56 = lshr i64 %50, 8, !dbg !23293
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !23293
  %51 = load i64, i64* %x40, align 8, !dbg !23293
  %add58 = add i64 %call57, %51, !dbg !23293
  %call59 = call i64 @just(i64 %add58), !dbg !23293
  store i64 %call59, i64* %b, align 8, !dbg !23293
  %52 = load i64*, i64** %r, align 8, !dbg !23293
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !23293, !ctir !2022
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !23293
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !23295, metadata !DIExpression()), !dbg !23297
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !23298, metadata !DIExpression()), !dbg !23297
  %53 = load i64, i64* %a, align 8, !dbg !23297
  %54 = load i64, i64* %a, align 8, !dbg !23297
  %call63 = call i64 @just(i64 %54), !dbg !23297
  %shr64 = lshr i64 %call63, 33, !dbg !23297
  %xor65 = xor i64 %53, %shr64, !dbg !23297
  %xor66 = xor i64 0, %xor65, !dbg !23297
  %55 = load i64*, i64** %m, align 8, !dbg !23297
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !23297, !ctir !2022
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !23297
  %add68 = add i64 %xor66, %56, !dbg !23297
  store i64 %add68, i64* %a, align 8, !dbg !23297
  %57 = load i64*, i64** %m, align 8, !dbg !23297
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !23297, !ctir !2022
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !23297
  store i64 %58, i64* %x61, align 8, !dbg !23297
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23297
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !23297, !ctir !23252
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !23297, !ctir !2005
  %60 = load i64, i64* %x61, align 8, !dbg !23297
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !23297
  %61 = load i64, i64* %a, align 8, !dbg !23297
  %add73 = add i64 %call72, %61, !dbg !23297
  %62 = load i64, i64* %b, align 8, !dbg !23297
  %add74 = add i64 %add73, %62, !dbg !23297
  store i64 %add74, i64* %y62, align 8, !dbg !23297
  %63 = load i64*, i64** %m, align 8, !dbg !23297
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !23297, !ctir !2022
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !23297
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23297
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !23297, !ctir !23252
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !23297, !ctir !2005
  %65 = load i64, i64* %y62, align 8, !dbg !23297
  %shr78 = lshr i64 %65, 8, !dbg !23297
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !23297
  %66 = load i64, i64* %x61, align 8, !dbg !23297
  %add80 = add i64 %call79, %66, !dbg !23297
  %call81 = call i64 @just(i64 %add80), !dbg !23297
  store i64 %call81, i64* %b, align 8, !dbg !23297
  %67 = load i64*, i64** %r, align 8, !dbg !23297
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !23297, !ctir !2022
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !23297
  %68 = load i64*, i64** %r, align 8, !dbg !23299
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !23299, !ctir !2006
  store i64* %add.ptr, i64** %r, align 8, !dbg !23299
  br label %do.cond, !dbg !23300

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !23301
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !23301, !ctir !2006
  store i64* %add.ptr83, i64** %m, align 8, !dbg !23301
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23302
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !23303, !ctir !23252
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !23302, !ctir !2005
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !23304, !ctir !2006
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !23305
  br i1 %cmp, label %do.body, label %do.end, !dbg !23300, !llvm.loop !23306

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !23308

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !23309, metadata !DIExpression()), !dbg !23312
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !23313, metadata !DIExpression()), !dbg !23312
  %71 = load i64, i64* %a, align 8, !dbg !23312
  %72 = load i64, i64* %a, align 8, !dbg !23312
  %shl90 = shl i64 %72, 21, !dbg !23312
  %xor91 = xor i64 %71, %shl90, !dbg !23312
  %neg92 = xor i64 %xor91, -1, !dbg !23312
  %xor93 = xor i64 0, %neg92, !dbg !23312
  %73 = load i64*, i64** %m, align 8, !dbg !23312
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !23312, !ctir !2022
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !23312
  %add95 = add i64 %xor93, %74, !dbg !23312
  store i64 %add95, i64* %a, align 8, !dbg !23312
  %75 = load i64*, i64** %m, align 8, !dbg !23312
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !23312, !ctir !2022
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !23312
  store i64 %76, i64* %x88, align 8, !dbg !23312
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23312
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !23312, !ctir !23252
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !23312, !ctir !2005
  %78 = load i64, i64* %x88, align 8, !dbg !23312
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !23312
  %79 = load i64, i64* %a, align 8, !dbg !23312
  %add100 = add i64 %call99, %79, !dbg !23312
  %80 = load i64, i64* %b, align 8, !dbg !23312
  %add101 = add i64 %add100, %80, !dbg !23312
  store i64 %add101, i64* %y89, align 8, !dbg !23312
  %81 = load i64*, i64** %m, align 8, !dbg !23312
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !23312, !ctir !2022
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !23312
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23312
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !23312, !ctir !23252
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !23312, !ctir !2005
  %83 = load i64, i64* %y89, align 8, !dbg !23312
  %shr105 = lshr i64 %83, 8, !dbg !23312
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !23312
  %84 = load i64, i64* %x88, align 8, !dbg !23312
  %add107 = add i64 %call106, %84, !dbg !23312
  %call108 = call i64 @just(i64 %add107), !dbg !23312
  store i64 %call108, i64* %b, align 8, !dbg !23312
  %85 = load i64*, i64** %r, align 8, !dbg !23312
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !23312, !ctir !2022
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !23312
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !23314, metadata !DIExpression()), !dbg !23316
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !23317, metadata !DIExpression()), !dbg !23316
  %86 = load i64, i64* %a, align 8, !dbg !23316
  %87 = load i64, i64* %a, align 8, !dbg !23316
  %call112 = call i64 @just(i64 %87), !dbg !23316
  %shr113 = lshr i64 %call112, 5, !dbg !23316
  %xor114 = xor i64 %86, %shr113, !dbg !23316
  %xor115 = xor i64 0, %xor114, !dbg !23316
  %88 = load i64*, i64** %m, align 8, !dbg !23316
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !23316, !ctir !2022
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !23316
  %add117 = add i64 %xor115, %89, !dbg !23316
  store i64 %add117, i64* %a, align 8, !dbg !23316
  %90 = load i64*, i64** %m, align 8, !dbg !23316
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !23316, !ctir !2022
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !23316
  store i64 %91, i64* %x110, align 8, !dbg !23316
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23316
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !23316, !ctir !23252
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !23316, !ctir !2005
  %93 = load i64, i64* %x110, align 8, !dbg !23316
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !23316
  %94 = load i64, i64* %a, align 8, !dbg !23316
  %add122 = add i64 %call121, %94, !dbg !23316
  %95 = load i64, i64* %b, align 8, !dbg !23316
  %add123 = add i64 %add122, %95, !dbg !23316
  store i64 %add123, i64* %y111, align 8, !dbg !23316
  %96 = load i64*, i64** %m, align 8, !dbg !23316
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !23316, !ctir !2022
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !23316
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23316
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !23316, !ctir !23252
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !23316, !ctir !2005
  %98 = load i64, i64* %y111, align 8, !dbg !23316
  %shr127 = lshr i64 %98, 8, !dbg !23316
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !23316
  %99 = load i64, i64* %x110, align 8, !dbg !23316
  %add129 = add i64 %call128, %99, !dbg !23316
  %call130 = call i64 @just(i64 %add129), !dbg !23316
  store i64 %call130, i64* %b, align 8, !dbg !23316
  %100 = load i64*, i64** %r, align 8, !dbg !23316
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !23316, !ctir !2022
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !23316
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !23318, metadata !DIExpression()), !dbg !23320
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !23321, metadata !DIExpression()), !dbg !23320
  %101 = load i64, i64* %a, align 8, !dbg !23320
  %102 = load i64, i64* %a, align 8, !dbg !23320
  %shl134 = shl i64 %102, 12, !dbg !23320
  %xor135 = xor i64 %101, %shl134, !dbg !23320
  %xor136 = xor i64 0, %xor135, !dbg !23320
  %103 = load i64*, i64** %m, align 8, !dbg !23320
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !23320, !ctir !2022
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !23320
  %add138 = add i64 %xor136, %104, !dbg !23320
  store i64 %add138, i64* %a, align 8, !dbg !23320
  %105 = load i64*, i64** %m, align 8, !dbg !23320
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !23320, !ctir !2022
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !23320
  store i64 %106, i64* %x132, align 8, !dbg !23320
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23320
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !23320, !ctir !23252
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !23320, !ctir !2005
  %108 = load i64, i64* %x132, align 8, !dbg !23320
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !23320
  %109 = load i64, i64* %a, align 8, !dbg !23320
  %add143 = add i64 %call142, %109, !dbg !23320
  %110 = load i64, i64* %b, align 8, !dbg !23320
  %add144 = add i64 %add143, %110, !dbg !23320
  store i64 %add144, i64* %y133, align 8, !dbg !23320
  %111 = load i64*, i64** %m, align 8, !dbg !23320
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !23320, !ctir !2022
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !23320
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23320
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !23320, !ctir !23252
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !23320, !ctir !2005
  %113 = load i64, i64* %y133, align 8, !dbg !23320
  %shr148 = lshr i64 %113, 8, !dbg !23320
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !23320
  %114 = load i64, i64* %x132, align 8, !dbg !23320
  %add150 = add i64 %call149, %114, !dbg !23320
  %call151 = call i64 @just(i64 %add150), !dbg !23320
  store i64 %call151, i64* %b, align 8, !dbg !23320
  %115 = load i64*, i64** %r, align 8, !dbg !23320
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !23320, !ctir !2022
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !23320
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !23322, metadata !DIExpression()), !dbg !23324
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !23325, metadata !DIExpression()), !dbg !23324
  %116 = load i64, i64* %a, align 8, !dbg !23324
  %117 = load i64, i64* %a, align 8, !dbg !23324
  %call155 = call i64 @just(i64 %117), !dbg !23324
  %shr156 = lshr i64 %call155, 33, !dbg !23324
  %xor157 = xor i64 %116, %shr156, !dbg !23324
  %xor158 = xor i64 0, %xor157, !dbg !23324
  %118 = load i64*, i64** %m, align 8, !dbg !23324
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !23324, !ctir !2022
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !23324
  %add160 = add i64 %xor158, %119, !dbg !23324
  store i64 %add160, i64* %a, align 8, !dbg !23324
  %120 = load i64*, i64** %m, align 8, !dbg !23324
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !23324, !ctir !2022
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !23324
  store i64 %121, i64* %x153, align 8, !dbg !23324
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23324
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !23324, !ctir !23252
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !23324, !ctir !2005
  %123 = load i64, i64* %x153, align 8, !dbg !23324
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !23324
  %124 = load i64, i64* %a, align 8, !dbg !23324
  %add165 = add i64 %call164, %124, !dbg !23324
  %125 = load i64, i64* %b, align 8, !dbg !23324
  %add166 = add i64 %add165, %125, !dbg !23324
  store i64 %add166, i64* %y154, align 8, !dbg !23324
  %126 = load i64*, i64** %m, align 8, !dbg !23324
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !23324, !ctir !2022
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !23324
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23324
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !23324, !ctir !23252
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !23324, !ctir !2005
  %128 = load i64, i64* %y154, align 8, !dbg !23324
  %shr170 = lshr i64 %128, 8, !dbg !23324
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !23324
  %129 = load i64, i64* %x153, align 8, !dbg !23324
  %add172 = add i64 %call171, %129, !dbg !23324
  %call173 = call i64 @just(i64 %add172), !dbg !23324
  store i64 %call173, i64* %b, align 8, !dbg !23324
  %130 = load i64*, i64** %r, align 8, !dbg !23324
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !23324, !ctir !2022
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !23324
  %131 = load i64*, i64** %r, align 8, !dbg !23326
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !23326, !ctir !2006
  store i64* %add.ptr175, i64** %r, align 8, !dbg !23326
  br label %do.cond176, !dbg !23327

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !23328
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !23328, !ctir !2006
  store i64* %add.ptr177, i64** %m, align 8, !dbg !23328
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23329
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !23330, !ctir !23252
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !23329, !ctir !2005
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !23331, !ctir !2006
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !23332
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !23327, !llvm.loop !23333

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !23335
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23336
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !23337, !ctir !23252
  store i64 %134, i64* %a183, align 8, !dbg !23338, !ctir !2006
  %136 = load i64, i64* %b, align 8, !dbg !23339
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23340
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !23341, !ctir !23252
  store i64 %136, i64* %b184, align 8, !dbg !23342, !ctir !2006
  ret void, !dbg !23343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !23344 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !709
  %base_p = alloca i8*, align 8, !ctir !116
  %word_p = alloca i8*, align 8, !ctir !709
  %p = alloca i64*, align 8, !ctir !2026
  store i64* %m, i64** %m.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !23347, metadata !DIExpression()), !dbg !23348
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !23349, metadata !DIExpression()), !dbg !23350
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !23351, metadata !DIExpression()), !dbg !23354
  %0 = load i64*, i64** %m.addr, align 8, !dbg !23355
  %1 = bitcast i64* %0 to i8*, !dbg !23355
  store i8* %1, i8** %void_m, align 8, !dbg !23354
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !23356, metadata !DIExpression()), !dbg !23357
  %2 = load i8*, i8** %void_m, align 8, !dbg !23358
  store i8* %2, i8** %base_p, align 8, !dbg !23357
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !23359, metadata !DIExpression()), !dbg !23360
  %3 = load i8*, i8** %base_p, align 8, !dbg !23361
  %4 = load i64, i64* %x.addr, align 8, !dbg !23362
  %and = and i64 %4, 2040, !dbg !23363
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !23364, !ctir !117
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !23360
  call void @llvm.dbg.declare(metadata i64** %p, metadata !23365, metadata !DIExpression()), !dbg !23366
  %5 = load i8*, i8** %word_p, align 8, !dbg !23367
  %6 = bitcast i8* %5 to i64*, !dbg !23367
  store i64* %6, i64** %p, align 8, !dbg !23366
  %7 = load i64*, i64** %p, align 8, !dbg !23368
  %8 = load i64, i64* %7, align 8, !dbg !23369, !ctir !2027
  ret i64 %8, !dbg !23370
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !23371 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !2006
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !23374, metadata !DIExpression()), !dbg !23375
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !23376, metadata !DIExpression()), !dbg !23377
  store i64 -1, i64* %desired_bits, align 8, !dbg !23377
  %0 = load i64, i64* %a.addr, align 8, !dbg !23378
  %1 = load i64, i64* %desired_bits, align 8, !dbg !23379
  %and = and i64 %0, %1, !dbg !23380
  ret i64 %and, !dbg !23381
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !23382 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !2006
  %b = alloca i64, align 8, !ctir !2006
  %c = alloca i64, align 8, !ctir !2006
  %d = alloca i64, align 8, !ctir !2006
  %e = alloca i64, align 8, !ctir !2006
  %f = alloca i64, align 8, !ctir !2006
  %g = alloca i64, align 8, !ctir !2006
  %h = alloca i64, align 8, !ctir !2006
  %i = alloca i32, align 4, !ctir !7
  %i99 = alloca i32, align 4, !ctir !7
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !23385, metadata !DIExpression()), !dbg !23386
  call void @llvm.dbg.declare(metadata i64* %a, metadata !23387, metadata !DIExpression()), !dbg !23388
  store i64 7240739780546808700, i64* %a, align 8, !dbg !23388
  call void @llvm.dbg.declare(metadata i64* %b, metadata !23389, metadata !DIExpression()), !dbg !23390
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !23390
  call void @llvm.dbg.declare(metadata i64* %c, metadata !23391, metadata !DIExpression()), !dbg !23392
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !23392
  call void @llvm.dbg.declare(metadata i64* %d, metadata !23393, metadata !DIExpression()), !dbg !23394
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !23394
  call void @llvm.dbg.declare(metadata i64* %e, metadata !23395, metadata !DIExpression()), !dbg !23396
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !23396
  call void @llvm.dbg.declare(metadata i64* %f, metadata !23397, metadata !DIExpression()), !dbg !23398
  store i64 5259722845879046933, i64* %f, align 8, !dbg !23398
  call void @llvm.dbg.declare(metadata i64* %g, metadata !23399, metadata !DIExpression()), !dbg !23400
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !23400
  call void @llvm.dbg.declare(metadata i64* %h, metadata !23401, metadata !DIExpression()), !dbg !23402
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !23402
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23403, metadata !DIExpression()), !dbg !23405
  store i32 0, i32* %i, align 4, !dbg !23406
  br label %for.cond, !dbg !23406

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !23408
  %cmp = icmp slt i32 %0, 256, !dbg !23408
  br i1 %cmp, label %for.body, label %for.end, !dbg !23406

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !23410, !ctir !23252
  %2 = load i32, i32* %i, align 4, !dbg !23410
  %idxprom = sext i32 %2 to i64, !dbg !23410
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !23410, !ctir !2005
  %3 = load i64, i64* %arrayidx, align 8, !dbg !23410
  %4 = load i64, i64* %a, align 8, !dbg !23410
  %add = add i64 %4, %3, !dbg !23410
  store i64 %add, i64* %a, align 8, !dbg !23410
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !23410, !ctir !23252
  %6 = load i32, i32* %i, align 4, !dbg !23410
  %add2 = add nsw i32 %6, 1, !dbg !23410
  %idxprom3 = sext i32 %add2 to i64, !dbg !23410
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !23410, !ctir !2005
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !23410
  %8 = load i64, i64* %b, align 8, !dbg !23410
  %add5 = add i64 %8, %7, !dbg !23410
  store i64 %add5, i64* %b, align 8, !dbg !23410
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !23410, !ctir !23252
  %10 = load i32, i32* %i, align 4, !dbg !23410
  %add7 = add nsw i32 %10, 2, !dbg !23410
  %idxprom8 = sext i32 %add7 to i64, !dbg !23410
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !23410, !ctir !2005
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !23410
  %12 = load i64, i64* %c, align 8, !dbg !23410
  %add10 = add i64 %12, %11, !dbg !23410
  store i64 %add10, i64* %c, align 8, !dbg !23410
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !23410, !ctir !23252
  %14 = load i32, i32* %i, align 4, !dbg !23410
  %add12 = add nsw i32 %14, 3, !dbg !23410
  %idxprom13 = sext i32 %add12 to i64, !dbg !23410
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !23410, !ctir !2005
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !23410
  %16 = load i64, i64* %d, align 8, !dbg !23410
  %add15 = add i64 %16, %15, !dbg !23410
  store i64 %add15, i64* %d, align 8, !dbg !23410
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !23410, !ctir !23252
  %18 = load i32, i32* %i, align 4, !dbg !23410
  %add17 = add nsw i32 %18, 4, !dbg !23410
  %idxprom18 = sext i32 %add17 to i64, !dbg !23410
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !23410, !ctir !2005
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !23410
  %20 = load i64, i64* %e, align 8, !dbg !23410
  %add20 = add i64 %20, %19, !dbg !23410
  store i64 %add20, i64* %e, align 8, !dbg !23410
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !23410, !ctir !23252
  %22 = load i32, i32* %i, align 4, !dbg !23410
  %add22 = add nsw i32 %22, 5, !dbg !23410
  %idxprom23 = sext i32 %add22 to i64, !dbg !23410
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !23410, !ctir !2005
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !23410
  %24 = load i64, i64* %f, align 8, !dbg !23410
  %add25 = add i64 %24, %23, !dbg !23410
  store i64 %add25, i64* %f, align 8, !dbg !23410
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !23410, !ctir !23252
  %26 = load i32, i32* %i, align 4, !dbg !23410
  %add27 = add nsw i32 %26, 6, !dbg !23410
  %idxprom28 = sext i32 %add27 to i64, !dbg !23410
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !23410, !ctir !2005
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !23410
  %28 = load i64, i64* %g, align 8, !dbg !23410
  %add30 = add i64 %28, %27, !dbg !23410
  store i64 %add30, i64* %g, align 8, !dbg !23410
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !23410, !ctir !23252
  %30 = load i32, i32* %i, align 4, !dbg !23410
  %add32 = add nsw i32 %30, 7, !dbg !23410
  %idxprom33 = sext i32 %add32 to i64, !dbg !23410
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !23410, !ctir !2005
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !23410
  %32 = load i64, i64* %h, align 8, !dbg !23410
  %add35 = add i64 %32, %31, !dbg !23410
  store i64 %add35, i64* %h, align 8, !dbg !23410
  %33 = load i64, i64* %e, align 8, !dbg !23412
  %34 = load i64, i64* %a, align 8, !dbg !23412
  %sub = sub i64 %34, %33, !dbg !23412
  store i64 %sub, i64* %a, align 8, !dbg !23412
  %35 = load i64, i64* %h, align 8, !dbg !23412
  %call = call i64 @just(i64 %35), !dbg !23412
  %shr = lshr i64 %call, 9, !dbg !23412
  %36 = load i64, i64* %f, align 8, !dbg !23412
  %xor = xor i64 %36, %shr, !dbg !23412
  store i64 %xor, i64* %f, align 8, !dbg !23412
  %37 = load i64, i64* %a, align 8, !dbg !23412
  %38 = load i64, i64* %h, align 8, !dbg !23412
  %add36 = add i64 %38, %37, !dbg !23412
  store i64 %add36, i64* %h, align 8, !dbg !23412
  %39 = load i64, i64* %f, align 8, !dbg !23412
  %40 = load i64, i64* %b, align 8, !dbg !23412
  %sub37 = sub i64 %40, %39, !dbg !23412
  store i64 %sub37, i64* %b, align 8, !dbg !23412
  %41 = load i64, i64* %a, align 8, !dbg !23412
  %shl = shl i64 %41, 9, !dbg !23412
  %42 = load i64, i64* %g, align 8, !dbg !23412
  %xor38 = xor i64 %42, %shl, !dbg !23412
  store i64 %xor38, i64* %g, align 8, !dbg !23412
  %43 = load i64, i64* %b, align 8, !dbg !23412
  %44 = load i64, i64* %a, align 8, !dbg !23412
  %add39 = add i64 %44, %43, !dbg !23412
  store i64 %add39, i64* %a, align 8, !dbg !23412
  %45 = load i64, i64* %g, align 8, !dbg !23412
  %46 = load i64, i64* %c, align 8, !dbg !23412
  %sub40 = sub i64 %46, %45, !dbg !23412
  store i64 %sub40, i64* %c, align 8, !dbg !23412
  %47 = load i64, i64* %b, align 8, !dbg !23412
  %call41 = call i64 @just(i64 %47), !dbg !23412
  %shr42 = lshr i64 %call41, 23, !dbg !23412
  %48 = load i64, i64* %h, align 8, !dbg !23412
  %xor43 = xor i64 %48, %shr42, !dbg !23412
  store i64 %xor43, i64* %h, align 8, !dbg !23412
  %49 = load i64, i64* %c, align 8, !dbg !23412
  %50 = load i64, i64* %b, align 8, !dbg !23412
  %add44 = add i64 %50, %49, !dbg !23412
  store i64 %add44, i64* %b, align 8, !dbg !23412
  %51 = load i64, i64* %h, align 8, !dbg !23412
  %52 = load i64, i64* %d, align 8, !dbg !23412
  %sub45 = sub i64 %52, %51, !dbg !23412
  store i64 %sub45, i64* %d, align 8, !dbg !23412
  %53 = load i64, i64* %c, align 8, !dbg !23412
  %shl46 = shl i64 %53, 15, !dbg !23412
  %54 = load i64, i64* %a, align 8, !dbg !23412
  %xor47 = xor i64 %54, %shl46, !dbg !23412
  store i64 %xor47, i64* %a, align 8, !dbg !23412
  %55 = load i64, i64* %d, align 8, !dbg !23412
  %56 = load i64, i64* %c, align 8, !dbg !23412
  %add48 = add i64 %56, %55, !dbg !23412
  store i64 %add48, i64* %c, align 8, !dbg !23412
  %57 = load i64, i64* %a, align 8, !dbg !23412
  %58 = load i64, i64* %e, align 8, !dbg !23412
  %sub49 = sub i64 %58, %57, !dbg !23412
  store i64 %sub49, i64* %e, align 8, !dbg !23412
  %59 = load i64, i64* %d, align 8, !dbg !23412
  %call50 = call i64 @just(i64 %59), !dbg !23412
  %shr51 = lshr i64 %call50, 14, !dbg !23412
  %60 = load i64, i64* %b, align 8, !dbg !23412
  %xor52 = xor i64 %60, %shr51, !dbg !23412
  store i64 %xor52, i64* %b, align 8, !dbg !23412
  %61 = load i64, i64* %e, align 8, !dbg !23412
  %62 = load i64, i64* %d, align 8, !dbg !23412
  %add53 = add i64 %62, %61, !dbg !23412
  store i64 %add53, i64* %d, align 8, !dbg !23412
  %63 = load i64, i64* %b, align 8, !dbg !23412
  %64 = load i64, i64* %f, align 8, !dbg !23412
  %sub54 = sub i64 %64, %63, !dbg !23412
  store i64 %sub54, i64* %f, align 8, !dbg !23412
  %65 = load i64, i64* %e, align 8, !dbg !23412
  %shl55 = shl i64 %65, 20, !dbg !23412
  %66 = load i64, i64* %c, align 8, !dbg !23412
  %xor56 = xor i64 %66, %shl55, !dbg !23412
  store i64 %xor56, i64* %c, align 8, !dbg !23412
  %67 = load i64, i64* %f, align 8, !dbg !23412
  %68 = load i64, i64* %e, align 8, !dbg !23412
  %add57 = add i64 %68, %67, !dbg !23412
  store i64 %add57, i64* %e, align 8, !dbg !23412
  %69 = load i64, i64* %c, align 8, !dbg !23412
  %70 = load i64, i64* %g, align 8, !dbg !23412
  %sub58 = sub i64 %70, %69, !dbg !23412
  store i64 %sub58, i64* %g, align 8, !dbg !23412
  %71 = load i64, i64* %f, align 8, !dbg !23412
  %call59 = call i64 @just(i64 %71), !dbg !23412
  %shr60 = lshr i64 %call59, 17, !dbg !23412
  %72 = load i64, i64* %d, align 8, !dbg !23412
  %xor61 = xor i64 %72, %shr60, !dbg !23412
  store i64 %xor61, i64* %d, align 8, !dbg !23412
  %73 = load i64, i64* %g, align 8, !dbg !23412
  %74 = load i64, i64* %f, align 8, !dbg !23412
  %add62 = add i64 %74, %73, !dbg !23412
  store i64 %add62, i64* %f, align 8, !dbg !23412
  %75 = load i64, i64* %d, align 8, !dbg !23412
  %76 = load i64, i64* %h, align 8, !dbg !23412
  %sub63 = sub i64 %76, %75, !dbg !23412
  store i64 %sub63, i64* %h, align 8, !dbg !23412
  %77 = load i64, i64* %g, align 8, !dbg !23412
  %shl64 = shl i64 %77, 14, !dbg !23412
  %78 = load i64, i64* %e, align 8, !dbg !23412
  %xor65 = xor i64 %78, %shl64, !dbg !23412
  store i64 %xor65, i64* %e, align 8, !dbg !23412
  %79 = load i64, i64* %h, align 8, !dbg !23412
  %80 = load i64, i64* %g, align 8, !dbg !23412
  %add66 = add i64 %80, %79, !dbg !23412
  store i64 %add66, i64* %g, align 8, !dbg !23412
  %81 = load i64, i64* %a, align 8, !dbg !23410
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !23410, !ctir !23252
  %83 = load i32, i32* %i, align 4, !dbg !23410
  %idxprom68 = sext i32 %83 to i64, !dbg !23410
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !23410, !ctir !2005
  store i64 %81, i64* %arrayidx69, align 8, !dbg !23410
  %84 = load i64, i64* %b, align 8, !dbg !23410
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !23410, !ctir !23252
  %86 = load i32, i32* %i, align 4, !dbg !23410
  %add71 = add nsw i32 %86, 1, !dbg !23410
  %idxprom72 = sext i32 %add71 to i64, !dbg !23410
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !23410, !ctir !2005
  store i64 %84, i64* %arrayidx73, align 8, !dbg !23410
  %87 = load i64, i64* %c, align 8, !dbg !23410
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !23410, !ctir !23252
  %89 = load i32, i32* %i, align 4, !dbg !23410
  %add75 = add nsw i32 %89, 2, !dbg !23410
  %idxprom76 = sext i32 %add75 to i64, !dbg !23410
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !23410, !ctir !2005
  store i64 %87, i64* %arrayidx77, align 8, !dbg !23410
  %90 = load i64, i64* %d, align 8, !dbg !23410
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !23410, !ctir !23252
  %92 = load i32, i32* %i, align 4, !dbg !23410
  %add79 = add nsw i32 %92, 3, !dbg !23410
  %idxprom80 = sext i32 %add79 to i64, !dbg !23410
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !23410, !ctir !2005
  store i64 %90, i64* %arrayidx81, align 8, !dbg !23410
  %93 = load i64, i64* %e, align 8, !dbg !23410
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !23410, !ctir !23252
  %95 = load i32, i32* %i, align 4, !dbg !23410
  %add83 = add nsw i32 %95, 4, !dbg !23410
  %idxprom84 = sext i32 %add83 to i64, !dbg !23410
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !23410, !ctir !2005
  store i64 %93, i64* %arrayidx85, align 8, !dbg !23410
  %96 = load i64, i64* %f, align 8, !dbg !23410
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !23410, !ctir !23252
  %98 = load i32, i32* %i, align 4, !dbg !23410
  %add87 = add nsw i32 %98, 5, !dbg !23410
  %idxprom88 = sext i32 %add87 to i64, !dbg !23410
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !23410, !ctir !2005
  store i64 %96, i64* %arrayidx89, align 8, !dbg !23410
  %99 = load i64, i64* %g, align 8, !dbg !23410
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !23410, !ctir !23252
  %101 = load i32, i32* %i, align 4, !dbg !23410
  %add91 = add nsw i32 %101, 6, !dbg !23410
  %idxprom92 = sext i32 %add91 to i64, !dbg !23410
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !23410, !ctir !2005
  store i64 %99, i64* %arrayidx93, align 8, !dbg !23410
  %102 = load i64, i64* %h, align 8, !dbg !23410
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23410
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !23410, !ctir !23252
  %104 = load i32, i32* %i, align 4, !dbg !23410
  %add95 = add nsw i32 %104, 7, !dbg !23410
  %idxprom96 = sext i32 %add95 to i64, !dbg !23410
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !23410, !ctir !2005
  store i64 %102, i64* %arrayidx97, align 8, !dbg !23410
  br label %for.inc, !dbg !23410

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !23408
  %add98 = add nsw i32 %105, 8, !dbg !23408
  store i32 %add98, i32* %i, align 4, !dbg !23408
  br label %for.cond, !dbg !23408, !llvm.loop !23414

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !23415, metadata !DIExpression()), !dbg !23417
  store i32 0, i32* %i99, align 4, !dbg !23418
  br label %for.cond100, !dbg !23418

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !23420
  %cmp101 = icmp slt i32 %106, 256, !dbg !23420
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !23418

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !23422, !ctir !23252
  %108 = load i32, i32* %i99, align 4, !dbg !23422
  %idxprom104 = sext i32 %108 to i64, !dbg !23422
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !23422, !ctir !2005
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !23422
  %110 = load i64, i64* %a, align 8, !dbg !23422
  %add106 = add i64 %110, %109, !dbg !23422
  store i64 %add106, i64* %a, align 8, !dbg !23422
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !23422, !ctir !23252
  %112 = load i32, i32* %i99, align 4, !dbg !23422
  %add108 = add nsw i32 %112, 1, !dbg !23422
  %idxprom109 = sext i32 %add108 to i64, !dbg !23422
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !23422, !ctir !2005
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !23422
  %114 = load i64, i64* %b, align 8, !dbg !23422
  %add111 = add i64 %114, %113, !dbg !23422
  store i64 %add111, i64* %b, align 8, !dbg !23422
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !23422, !ctir !23252
  %116 = load i32, i32* %i99, align 4, !dbg !23422
  %add113 = add nsw i32 %116, 2, !dbg !23422
  %idxprom114 = sext i32 %add113 to i64, !dbg !23422
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !23422, !ctir !2005
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !23422
  %118 = load i64, i64* %c, align 8, !dbg !23422
  %add116 = add i64 %118, %117, !dbg !23422
  store i64 %add116, i64* %c, align 8, !dbg !23422
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !23422, !ctir !23252
  %120 = load i32, i32* %i99, align 4, !dbg !23422
  %add118 = add nsw i32 %120, 3, !dbg !23422
  %idxprom119 = sext i32 %add118 to i64, !dbg !23422
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !23422, !ctir !2005
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !23422
  %122 = load i64, i64* %d, align 8, !dbg !23422
  %add121 = add i64 %122, %121, !dbg !23422
  store i64 %add121, i64* %d, align 8, !dbg !23422
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !23422, !ctir !23252
  %124 = load i32, i32* %i99, align 4, !dbg !23422
  %add123 = add nsw i32 %124, 4, !dbg !23422
  %idxprom124 = sext i32 %add123 to i64, !dbg !23422
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !23422, !ctir !2005
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !23422
  %126 = load i64, i64* %e, align 8, !dbg !23422
  %add126 = add i64 %126, %125, !dbg !23422
  store i64 %add126, i64* %e, align 8, !dbg !23422
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !23422, !ctir !23252
  %128 = load i32, i32* %i99, align 4, !dbg !23422
  %add128 = add nsw i32 %128, 5, !dbg !23422
  %idxprom129 = sext i32 %add128 to i64, !dbg !23422
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !23422, !ctir !2005
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !23422
  %130 = load i64, i64* %f, align 8, !dbg !23422
  %add131 = add i64 %130, %129, !dbg !23422
  store i64 %add131, i64* %f, align 8, !dbg !23422
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !23422, !ctir !23252
  %132 = load i32, i32* %i99, align 4, !dbg !23422
  %add133 = add nsw i32 %132, 6, !dbg !23422
  %idxprom134 = sext i32 %add133 to i64, !dbg !23422
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !23422, !ctir !2005
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !23422
  %134 = load i64, i64* %g, align 8, !dbg !23422
  %add136 = add i64 %134, %133, !dbg !23422
  store i64 %add136, i64* %g, align 8, !dbg !23422
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !23422, !ctir !23252
  %136 = load i32, i32* %i99, align 4, !dbg !23422
  %add138 = add nsw i32 %136, 7, !dbg !23422
  %idxprom139 = sext i32 %add138 to i64, !dbg !23422
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !23422, !ctir !2005
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !23422
  %138 = load i64, i64* %h, align 8, !dbg !23422
  %add141 = add i64 %138, %137, !dbg !23422
  store i64 %add141, i64* %h, align 8, !dbg !23422
  %139 = load i64, i64* %e, align 8, !dbg !23424
  %140 = load i64, i64* %a, align 8, !dbg !23424
  %sub142 = sub i64 %140, %139, !dbg !23424
  store i64 %sub142, i64* %a, align 8, !dbg !23424
  %141 = load i64, i64* %h, align 8, !dbg !23424
  %call143 = call i64 @just(i64 %141), !dbg !23424
  %shr144 = lshr i64 %call143, 9, !dbg !23424
  %142 = load i64, i64* %f, align 8, !dbg !23424
  %xor145 = xor i64 %142, %shr144, !dbg !23424
  store i64 %xor145, i64* %f, align 8, !dbg !23424
  %143 = load i64, i64* %a, align 8, !dbg !23424
  %144 = load i64, i64* %h, align 8, !dbg !23424
  %add146 = add i64 %144, %143, !dbg !23424
  store i64 %add146, i64* %h, align 8, !dbg !23424
  %145 = load i64, i64* %f, align 8, !dbg !23424
  %146 = load i64, i64* %b, align 8, !dbg !23424
  %sub147 = sub i64 %146, %145, !dbg !23424
  store i64 %sub147, i64* %b, align 8, !dbg !23424
  %147 = load i64, i64* %a, align 8, !dbg !23424
  %shl148 = shl i64 %147, 9, !dbg !23424
  %148 = load i64, i64* %g, align 8, !dbg !23424
  %xor149 = xor i64 %148, %shl148, !dbg !23424
  store i64 %xor149, i64* %g, align 8, !dbg !23424
  %149 = load i64, i64* %b, align 8, !dbg !23424
  %150 = load i64, i64* %a, align 8, !dbg !23424
  %add150 = add i64 %150, %149, !dbg !23424
  store i64 %add150, i64* %a, align 8, !dbg !23424
  %151 = load i64, i64* %g, align 8, !dbg !23424
  %152 = load i64, i64* %c, align 8, !dbg !23424
  %sub151 = sub i64 %152, %151, !dbg !23424
  store i64 %sub151, i64* %c, align 8, !dbg !23424
  %153 = load i64, i64* %b, align 8, !dbg !23424
  %call152 = call i64 @just(i64 %153), !dbg !23424
  %shr153 = lshr i64 %call152, 23, !dbg !23424
  %154 = load i64, i64* %h, align 8, !dbg !23424
  %xor154 = xor i64 %154, %shr153, !dbg !23424
  store i64 %xor154, i64* %h, align 8, !dbg !23424
  %155 = load i64, i64* %c, align 8, !dbg !23424
  %156 = load i64, i64* %b, align 8, !dbg !23424
  %add155 = add i64 %156, %155, !dbg !23424
  store i64 %add155, i64* %b, align 8, !dbg !23424
  %157 = load i64, i64* %h, align 8, !dbg !23424
  %158 = load i64, i64* %d, align 8, !dbg !23424
  %sub156 = sub i64 %158, %157, !dbg !23424
  store i64 %sub156, i64* %d, align 8, !dbg !23424
  %159 = load i64, i64* %c, align 8, !dbg !23424
  %shl157 = shl i64 %159, 15, !dbg !23424
  %160 = load i64, i64* %a, align 8, !dbg !23424
  %xor158 = xor i64 %160, %shl157, !dbg !23424
  store i64 %xor158, i64* %a, align 8, !dbg !23424
  %161 = load i64, i64* %d, align 8, !dbg !23424
  %162 = load i64, i64* %c, align 8, !dbg !23424
  %add159 = add i64 %162, %161, !dbg !23424
  store i64 %add159, i64* %c, align 8, !dbg !23424
  %163 = load i64, i64* %a, align 8, !dbg !23424
  %164 = load i64, i64* %e, align 8, !dbg !23424
  %sub160 = sub i64 %164, %163, !dbg !23424
  store i64 %sub160, i64* %e, align 8, !dbg !23424
  %165 = load i64, i64* %d, align 8, !dbg !23424
  %call161 = call i64 @just(i64 %165), !dbg !23424
  %shr162 = lshr i64 %call161, 14, !dbg !23424
  %166 = load i64, i64* %b, align 8, !dbg !23424
  %xor163 = xor i64 %166, %shr162, !dbg !23424
  store i64 %xor163, i64* %b, align 8, !dbg !23424
  %167 = load i64, i64* %e, align 8, !dbg !23424
  %168 = load i64, i64* %d, align 8, !dbg !23424
  %add164 = add i64 %168, %167, !dbg !23424
  store i64 %add164, i64* %d, align 8, !dbg !23424
  %169 = load i64, i64* %b, align 8, !dbg !23424
  %170 = load i64, i64* %f, align 8, !dbg !23424
  %sub165 = sub i64 %170, %169, !dbg !23424
  store i64 %sub165, i64* %f, align 8, !dbg !23424
  %171 = load i64, i64* %e, align 8, !dbg !23424
  %shl166 = shl i64 %171, 20, !dbg !23424
  %172 = load i64, i64* %c, align 8, !dbg !23424
  %xor167 = xor i64 %172, %shl166, !dbg !23424
  store i64 %xor167, i64* %c, align 8, !dbg !23424
  %173 = load i64, i64* %f, align 8, !dbg !23424
  %174 = load i64, i64* %e, align 8, !dbg !23424
  %add168 = add i64 %174, %173, !dbg !23424
  store i64 %add168, i64* %e, align 8, !dbg !23424
  %175 = load i64, i64* %c, align 8, !dbg !23424
  %176 = load i64, i64* %g, align 8, !dbg !23424
  %sub169 = sub i64 %176, %175, !dbg !23424
  store i64 %sub169, i64* %g, align 8, !dbg !23424
  %177 = load i64, i64* %f, align 8, !dbg !23424
  %call170 = call i64 @just(i64 %177), !dbg !23424
  %shr171 = lshr i64 %call170, 17, !dbg !23424
  %178 = load i64, i64* %d, align 8, !dbg !23424
  %xor172 = xor i64 %178, %shr171, !dbg !23424
  store i64 %xor172, i64* %d, align 8, !dbg !23424
  %179 = load i64, i64* %g, align 8, !dbg !23424
  %180 = load i64, i64* %f, align 8, !dbg !23424
  %add173 = add i64 %180, %179, !dbg !23424
  store i64 %add173, i64* %f, align 8, !dbg !23424
  %181 = load i64, i64* %d, align 8, !dbg !23424
  %182 = load i64, i64* %h, align 8, !dbg !23424
  %sub174 = sub i64 %182, %181, !dbg !23424
  store i64 %sub174, i64* %h, align 8, !dbg !23424
  %183 = load i64, i64* %g, align 8, !dbg !23424
  %shl175 = shl i64 %183, 14, !dbg !23424
  %184 = load i64, i64* %e, align 8, !dbg !23424
  %xor176 = xor i64 %184, %shl175, !dbg !23424
  store i64 %xor176, i64* %e, align 8, !dbg !23424
  %185 = load i64, i64* %h, align 8, !dbg !23424
  %186 = load i64, i64* %g, align 8, !dbg !23424
  %add177 = add i64 %186, %185, !dbg !23424
  store i64 %add177, i64* %g, align 8, !dbg !23424
  %187 = load i64, i64* %a, align 8, !dbg !23422
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !23422, !ctir !23252
  %189 = load i32, i32* %i99, align 4, !dbg !23422
  %idxprom179 = sext i32 %189 to i64, !dbg !23422
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !23422, !ctir !2005
  store i64 %187, i64* %arrayidx180, align 8, !dbg !23422
  %190 = load i64, i64* %b, align 8, !dbg !23422
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !23422, !ctir !23252
  %192 = load i32, i32* %i99, align 4, !dbg !23422
  %add182 = add nsw i32 %192, 1, !dbg !23422
  %idxprom183 = sext i32 %add182 to i64, !dbg !23422
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !23422, !ctir !2005
  store i64 %190, i64* %arrayidx184, align 8, !dbg !23422
  %193 = load i64, i64* %c, align 8, !dbg !23422
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !23422, !ctir !23252
  %195 = load i32, i32* %i99, align 4, !dbg !23422
  %add186 = add nsw i32 %195, 2, !dbg !23422
  %idxprom187 = sext i32 %add186 to i64, !dbg !23422
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !23422, !ctir !2005
  store i64 %193, i64* %arrayidx188, align 8, !dbg !23422
  %196 = load i64, i64* %d, align 8, !dbg !23422
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !23422, !ctir !23252
  %198 = load i32, i32* %i99, align 4, !dbg !23422
  %add190 = add nsw i32 %198, 3, !dbg !23422
  %idxprom191 = sext i32 %add190 to i64, !dbg !23422
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !23422, !ctir !2005
  store i64 %196, i64* %arrayidx192, align 8, !dbg !23422
  %199 = load i64, i64* %e, align 8, !dbg !23422
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !23422, !ctir !23252
  %201 = load i32, i32* %i99, align 4, !dbg !23422
  %add194 = add nsw i32 %201, 4, !dbg !23422
  %idxprom195 = sext i32 %add194 to i64, !dbg !23422
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !23422, !ctir !2005
  store i64 %199, i64* %arrayidx196, align 8, !dbg !23422
  %202 = load i64, i64* %f, align 8, !dbg !23422
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !23422, !ctir !23252
  %204 = load i32, i32* %i99, align 4, !dbg !23422
  %add198 = add nsw i32 %204, 5, !dbg !23422
  %idxprom199 = sext i32 %add198 to i64, !dbg !23422
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !23422, !ctir !2005
  store i64 %202, i64* %arrayidx200, align 8, !dbg !23422
  %205 = load i64, i64* %g, align 8, !dbg !23422
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !23422, !ctir !23252
  %207 = load i32, i32* %i99, align 4, !dbg !23422
  %add202 = add nsw i32 %207, 6, !dbg !23422
  %idxprom203 = sext i32 %add202 to i64, !dbg !23422
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !23422, !ctir !2005
  store i64 %205, i64* %arrayidx204, align 8, !dbg !23422
  %208 = load i64, i64* %h, align 8, !dbg !23422
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23422
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !23422, !ctir !23252
  %210 = load i32, i32* %i99, align 4, !dbg !23422
  %add206 = add nsw i32 %210, 7, !dbg !23422
  %idxprom207 = sext i32 %add206 to i64, !dbg !23422
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !23422, !ctir !2005
  store i64 %208, i64* %arrayidx208, align 8, !dbg !23422
  br label %for.inc209, !dbg !23422

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !23420
  %add210 = add nsw i32 %211, 8, !dbg !23420
  store i32 %add210, i32* %i99, align 4, !dbg !23420
  br label %for.cond100, !dbg !23420, !llvm.loop !23426

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23427
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !23428, !ctir !23252
  store i64 0, i64* %c212, align 8, !dbg !23429, !ctir !2006
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23430
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !23431, !ctir !23252
  store i64 0, i64* %b213, align 8, !dbg !23432, !ctir !2006
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23433
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !23434, !ctir !23252
  store i64 0, i64* %a214, align 8, !dbg !23435, !ctir !2006
  ret void, !dbg !23436
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !23437 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23439, metadata !DIExpression()), !dbg !23440
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23441
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !23442
  ret i32 %call, !dbg !23443
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum(i64 %size1, i64 %size2) #9 !dbg !23444 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %sum = alloca i64, align 8, !ctir !55
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23448, metadata !DIExpression()), !dbg !23449
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23450, metadata !DIExpression()), !dbg !23451
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !23452, metadata !DIExpression()), !dbg !23453
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23454
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23455
  %add = add i64 %0, %1, !dbg !23456
  store i64 %add, i64* %sum, align 8, !dbg !23453
  %2 = load i64, i64* %sum, align 8, !dbg !23457
  %3 = load i64, i64* %size1.addr, align 8, !dbg !23458
  %cmp = icmp uge i64 %2, %3, !dbg !23459
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23457

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %sum, align 8, !dbg !23460
  br label %cond.end, !dbg !23457

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !23457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !23457
  ret i64 %cond, !dbg !23461
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) #9 !dbg !23462 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23463, metadata !DIExpression()), !dbg !23464
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23465, metadata !DIExpression()), !dbg !23466
  store i64 %size3, i64* %size3.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !23467, metadata !DIExpression()), !dbg !23468
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23469
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23470
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !23471
  %2 = load i64, i64* %size3.addr, align 8, !dbg !23472
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !23473
  ret i64 %call1, !dbg !23474
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) #9 !dbg !23475 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  %size4.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23478, metadata !DIExpression()), !dbg !23479
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23480, metadata !DIExpression()), !dbg !23481
  store i64 %size3, i64* %size3.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !23482, metadata !DIExpression()), !dbg !23483
  store i64 %size4, i64* %size4.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size4.addr, metadata !23484, metadata !DIExpression()), !dbg !23485
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23486
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23487
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !23488
  %2 = load i64, i64* %size3.addr, align 8, !dbg !23489
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !23490
  %3 = load i64, i64* %size4.addr, align 8, !dbg !23491
  %call2 = call i64 @xsum(i64 %call1, i64 %3) #14, !dbg !23492
  ret i64 %call2, !dbg !23493
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xmax(i64 %size1, i64 %size2) #9 !dbg !23494 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23495, metadata !DIExpression()), !dbg !23496
  store i64 %size2, i64* %size2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23497, metadata !DIExpression()), !dbg !23498
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23499
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23500
  %cmp = icmp uge i64 %0, %1, !dbg !23501
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23499

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %size1.addr, align 8, !dbg !23502
  br label %cond.end, !dbg !23499

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %size2.addr, align 8, !dbg !23503
  br label %cond.end, !dbg !23499

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !23499
  ret i64 %cond, !dbg !23504
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !23505 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !23543, metadata !DIExpression()), !dbg !23544
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23545, metadata !DIExpression()), !dbg !23546
  store i32 0, i32* %saved_errno, align 4, !dbg !23546
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23547, metadata !DIExpression()), !dbg !23548
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23549, metadata !DIExpression()), !dbg !23550
  store i32 0, i32* %result, align 4, !dbg !23550
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23551
  %call = call i32 @fileno(%struct._IO_FILE* %0) #10, !dbg !23552
  store i32 %call, i32* %fd, align 4, !dbg !23553
  %1 = load i32, i32* %fd, align 4, !dbg !23554
  %cmp = icmp slt i32 %1, 0, !dbg !23556
  br i1 %cmp, label %if.then, label %if.end, !dbg !23557

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23558
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !23559
  store i32 %call1, i32* %retval, align 4, !dbg !23560
  br label %return, !dbg !23560

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23561
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #10, !dbg !23561
  %cmp3 = icmp ne i32 %call2, 0, !dbg !23561
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !23563

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23564
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #10, !dbg !23565
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #10, !dbg !23566
  %cmp6 = icmp ne i64 %call5, -1, !dbg !23567
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !23568

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23569
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !23570
  %tobool = icmp ne i32 %call7, 0, !dbg !23570
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !23571

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #15, !dbg !23572
  %6 = load i32, i32* %call9, align 4, !dbg !23572, !ctir !7
  store i32 %6, i32* %saved_errno, align 4, !dbg !23573
  br label %if.end10, !dbg !23574

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23575
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !23576
  store i32 %call11, i32* %result, align 4, !dbg !23577
  %8 = load i32, i32* %saved_errno, align 4, !dbg !23578
  %cmp12 = icmp ne i32 %8, 0, !dbg !23580
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !23581

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !23582
  %call14 = call i32* @__errno_location() #15, !dbg !23584
  store i32 %9, i32* %call14, align 4, !dbg !23585, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !23586
  br label %if.end15, !dbg !23587

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !23588
  store i32 %10, i32* %retval, align 4, !dbg !23589
  br label %return, !dbg !23589

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !23590
  ret i32 %11, !dbg !23590
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !23591 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1039
  %result = alloca i32, align 4, !ctir !7
  %target = alloca i32, align 4, !ctir !7
  %target4 = alloca i32, align 4, !ctir !7
  %x = alloca i32, align 4, !ctir !7
  %p = alloca i8*, align 8, !ctir !53
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23594, metadata !DIExpression()), !dbg !23595
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !23596, metadata !DIExpression()), !dbg !23597
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !23598, metadata !DIExpression()), !dbg !23599
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23600, metadata !DIExpression()), !dbg !23601
  store i32 -1, i32* %result, align 4, !dbg !23601
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23602, !ctir !1039
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !23602
  call void @llvm.va_start(i8* %arraydecay1), !dbg !23602
  %0 = load i32, i32* %action.addr, align 4, !dbg !23603
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !23604

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !23605, metadata !DIExpression()), !dbg !23608
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23609, !ctir !1039
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !23609
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !23609
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !23609
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !23609

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !23609
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !23609
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !23609
  %3 = bitcast i8* %2 to i32*, !dbg !23609
  %4 = add i32 %gp_offset, 8, !dbg !23609
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !23609
  br label %vaarg.end, !dbg !23609

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !23609
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !23609
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !23609
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !23609
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !23609
  br label %vaarg.end, !dbg !23609

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !23609
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !23609
  store i32 %6, i32* %target, align 4, !dbg !23608
  %7 = load i32, i32* %fd.addr, align 4, !dbg !23610
  %8 = load i32, i32* %target, align 4, !dbg !23611
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !23612
  store i32 %call, i32* %result, align 4, !dbg !23613
  br label %sw.epilog48, !dbg !23614

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !23615, metadata !DIExpression()), !dbg !23617
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23618, !ctir !1039
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !23618
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !23618
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !23618
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !23618

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !23618
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !23618
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !23618
  %11 = bitcast i8* %10 to i32*, !dbg !23618
  %12 = add i32 %gp_offset7, 8, !dbg !23618
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !23618
  br label %vaarg.end15, !dbg !23618

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !23618
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !23618
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !23618
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !23618
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !23618
  br label %vaarg.end15, !dbg !23618

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !23618
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !23618
  store i32 %14, i32* %target4, align 4, !dbg !23617
  %15 = load i32, i32* %fd.addr, align 4, !dbg !23619
  %16 = load i32, i32* %target4, align 4, !dbg !23620
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !23621
  store i32 %call17, i32* %result, align 4, !dbg !23622
  br label %sw.epilog48, !dbg !23623

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !23624
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 1034, label %sw.bb18
    i32 11, label %sw.bb18
    i32 1033, label %sw.bb20
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !23626

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !23627
  %19 = load i32, i32* %action.addr, align 4, !dbg !23629
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !23630
  store i32 %call19, i32* %result, align 4, !dbg !23631
  br label %sw.epilog, !dbg !23632

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !23633, metadata !DIExpression()), !dbg !23635
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23636, !ctir !1039
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !23636
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !23636
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !23636
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !23636

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !23636
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !23636
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !23636
  %22 = bitcast i8* %21 to i32*, !dbg !23636
  %23 = add i32 %gp_offset23, 8, !dbg !23636
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !23636
  br label %vaarg.end31, !dbg !23636

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !23636
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !23636
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !23636
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !23636
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !23636
  br label %vaarg.end31, !dbg !23636

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !23636
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !23636
  store i32 %25, i32* %x, align 4, !dbg !23635
  %26 = load i32, i32* %fd.addr, align 4, !dbg !23637
  %27 = load i32, i32* %action.addr, align 4, !dbg !23638
  %28 = load i32, i32* %x, align 4, !dbg !23639
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !23640
  store i32 %call33, i32* %result, align 4, !dbg !23641
  br label %sw.epilog, !dbg !23642

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !23643, metadata !DIExpression()), !dbg !23645
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23646, !ctir !1039
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !23646
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !23646
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !23646
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !23646

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !23646
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !23646
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !23646
  %31 = bitcast i8* %30 to i8**, !dbg !23646
  %32 = add i32 %gp_offset37, 8, !dbg !23646
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !23646
  br label %vaarg.end45, !dbg !23646

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !23646
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !23646
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !23646
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !23646
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !23646
  br label %vaarg.end45, !dbg !23646

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !23646
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !23646
  store i8* %34, i8** %p, align 8, !dbg !23645
  %35 = load i32, i32* %fd.addr, align 4, !dbg !23647
  %36 = load i32, i32* %action.addr, align 4, !dbg !23648
  %37 = load i8*, i8** %p, align 8, !dbg !23649
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !23650
  store i32 %call47, i32* %result, align 4, !dbg !23651
  br label %sw.epilog, !dbg !23652

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !23653

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23654, !ctir !1039
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !23654
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !23654
  %38 = load i32, i32* %result, align 4, !dbg !23655
  ret i32 %38, !dbg !23656
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !23657 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23658, metadata !DIExpression()), !dbg !23659
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23660, metadata !DIExpression()), !dbg !23661
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23662, metadata !DIExpression()), !dbg !23663
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23664
  %1 = load i32, i32* %target.addr, align 4, !dbg !23665
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !23666
  store i32 %call, i32* %result, align 4, !dbg !23667
  %2 = load i32, i32* %result, align 4, !dbg !23668
  ret i32 %2, !dbg !23669
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1032 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23670, metadata !DIExpression()), !dbg !23671
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23672, metadata !DIExpression()), !dbg !23673
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23674, metadata !DIExpression()), !dbg !23675
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23676
  %cmp = icmp sle i32 0, %0, !dbg !23678
  br i1 %cmp, label %if.then, label %if.else9, !dbg !23679

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !23680
  %2 = load i32, i32* %target.addr, align 4, !dbg !23682
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !23683
  store i32 %call, i32* %result, align 4, !dbg !23684
  %3 = load i32, i32* %result, align 4, !dbg !23685
  %cmp1 = icmp sle i32 0, %3, !dbg !23687
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !23688

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !23689
  %4 = load i32, i32* %call2, align 4, !dbg !23689, !ctir !7
  %cmp3 = icmp ne i32 %4, 22, !dbg !23690
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !23691

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23692
  br label %if.end8, !dbg !23694

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !23695
  %6 = load i32, i32* %target.addr, align 4, !dbg !23697
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !23698
  store i32 %call5, i32* %result, align 4, !dbg !23699
  %7 = load i32, i32* %result, align 4, !dbg !23700
  %cmp6 = icmp sge i32 %7, 0, !dbg !23702
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !23703

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23704
  br label %if.end, !dbg !23705

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !23706

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !23707
  %9 = load i32, i32* %target.addr, align 4, !dbg !23708
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !23709
  store i32 %call10, i32* %result, align 4, !dbg !23710
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !23711
  %cmp12 = icmp sle i32 0, %10, !dbg !23713
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !23714

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23715
  %cmp13 = icmp eq i32 %11, -1, !dbg !23716
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !23717

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !23718, metadata !DIExpression()), !dbg !23720
  %12 = load i32, i32* %result, align 4, !dbg !23721
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !23722
  store i32 %call15, i32* %flags, align 4, !dbg !23720
  %13 = load i32, i32* %flags, align 4, !dbg !23723
  %cmp16 = icmp slt i32 %13, 0, !dbg !23725
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !23726

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !23727
  %15 = load i32, i32* %flags, align 4, !dbg !23728
  %or = or i32 %15, 1, !dbg !23729
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !23730
  %cmp19 = icmp eq i32 %call18, -1, !dbg !23731
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !23732

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23733, metadata !DIExpression()), !dbg !23735
  %call21 = call i32* @__errno_location() #15, !dbg !23736
  %16 = load i32, i32* %call21, align 4, !dbg !23736, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !23735
  %17 = load i32, i32* %result, align 4, !dbg !23737
  %call22 = call i32 @close(i32 %17), !dbg !23738
  %18 = load i32, i32* %saved_errno, align 4, !dbg !23739
  %call23 = call i32* @__errno_location() #15, !dbg !23740
  store i32 %18, i32* %call23, align 4, !dbg !23741, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !23742
  br label %if.end24, !dbg !23743

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !23744

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !23745
  ret i32 %19, !dbg !23746
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #11 !dbg !23747 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !23749, metadata !DIExpression()), !dbg !23750
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !23751
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !23752

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23753
  br label %return, !dbg !23753

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23755
  br label %return, !dbg !23755

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23756
  br label %return, !dbg !23756

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23757
  br label %return, !dbg !23757

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !23758
  br label %return, !dbg !23758

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23759
  ret i1 %1, !dbg !23759
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !23760 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23762, metadata !DIExpression()), !dbg !23763
  %0 = load i32, i32* %c.addr, align 4, !dbg !23764
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23765

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23766
  br label %return, !dbg !23766

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23768
  br label %return, !dbg !23768

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23769
  ret i1 %1, !dbg !23769
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !23770 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23771, metadata !DIExpression()), !dbg !23772
  %0 = load i32, i32* %c.addr, align 4, !dbg !23773
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23774

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23775
  br label %return, !dbg !23775

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23777
  br label %return, !dbg !23777

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23778
  ret i1 %1, !dbg !23778
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !23779 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23780, metadata !DIExpression()), !dbg !23781
  %0 = load i32, i32* %c.addr, align 4, !dbg !23782
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23783

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23784
  br label %return, !dbg !23784

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23786
  br label %return, !dbg !23786

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23787
  ret i1 %1, !dbg !23787
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !23788 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23789, metadata !DIExpression()), !dbg !23790
  %0 = load i32, i32* %c.addr, align 4, !dbg !23791
  %cmp = icmp eq i32 %0, 32, !dbg !23792
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !23793

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23794
  %cmp1 = icmp eq i32 %1, 9, !dbg !23795
  br label %lor.end, !dbg !23793

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !23796
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !23797 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23798, metadata !DIExpression()), !dbg !23799
  %0 = load i32, i32* %c.addr, align 4, !dbg !23800
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !23801

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23802
  br label %return, !dbg !23802

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23804
  br label %return, !dbg !23804

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23805
  ret i1 %1, !dbg !23805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !23806 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23807, metadata !DIExpression()), !dbg !23808
  %0 = load i32, i32* %c.addr, align 4, !dbg !23809
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !23810

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23811
  br label %return, !dbg !23811

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23813
  br label %return, !dbg !23813

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23814
  ret i1 %1, !dbg !23814
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !23815 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23816, metadata !DIExpression()), !dbg !23817
  %0 = load i32, i32* %c.addr, align 4, !dbg !23818
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23819

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23820
  br label %return, !dbg !23820

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23822
  br label %return, !dbg !23822

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23823
  ret i1 %1, !dbg !23823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !23824 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23825, metadata !DIExpression()), !dbg !23826
  %0 = load i32, i32* %c.addr, align 4, !dbg !23827
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23828

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23829
  br label %return, !dbg !23829

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23831
  br label %return, !dbg !23831

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23832
  ret i1 %1, !dbg !23832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !23833 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23834, metadata !DIExpression()), !dbg !23835
  %0 = load i32, i32* %c.addr, align 4, !dbg !23836
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23837

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23838
  br label %return, !dbg !23838

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23840
  br label %return, !dbg !23840

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23841
  ret i1 %1, !dbg !23841
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !23842 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23843, metadata !DIExpression()), !dbg !23844
  %0 = load i32, i32* %c.addr, align 4, !dbg !23845
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !23846

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23847
  br label %return, !dbg !23847

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23849
  br label %return, !dbg !23849

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23850
  ret i1 %1, !dbg !23850
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !23851 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23852, metadata !DIExpression()), !dbg !23853
  %0 = load i32, i32* %c.addr, align 4, !dbg !23854
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !23855

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23856
  br label %return, !dbg !23856

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23858
  br label %return, !dbg !23858

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23859
  ret i1 %1, !dbg !23859
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !23860 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23861, metadata !DIExpression()), !dbg !23862
  %0 = load i32, i32* %c.addr, align 4, !dbg !23863
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23864

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23865
  br label %return, !dbg !23865

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23867
  br label %return, !dbg !23867

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23868
  ret i1 %1, !dbg !23868
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !23869 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23870, metadata !DIExpression()), !dbg !23871
  %0 = load i32, i32* %c.addr, align 4, !dbg !23872
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !23873

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23874
  br label %return, !dbg !23874

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23876
  br label %return, !dbg !23876

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23877
  ret i1 %1, !dbg !23877
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !23878 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23879, metadata !DIExpression()), !dbg !23880
  %0 = load i32, i32* %c.addr, align 4, !dbg !23881
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23882

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23883
  %sub = sub nsw i32 %1, 65, !dbg !23885
  %add = add nsw i32 %sub, 97, !dbg !23886
  store i32 %add, i32* %retval, align 4, !dbg !23887
  br label %return, !dbg !23887

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23888
  store i32 %2, i32* %retval, align 4, !dbg !23889
  br label %return, !dbg !23889

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23890
  ret i32 %3, !dbg !23890
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !23891 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23892, metadata !DIExpression()), !dbg !23893
  %0 = load i32, i32* %c.addr, align 4, !dbg !23894
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23895

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23896
  %sub = sub nsw i32 %1, 97, !dbg !23898
  %add = add nsw i32 %sub, 65, !dbg !23899
  store i32 %add, i32* %retval, align 4, !dbg !23900
  br label %return, !dbg !23900

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23901
  store i32 %2, i32* %retval, align 4, !dbg !23902
  br label %return, !dbg !23902

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23903
  ret i32 %3, !dbg !23903
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !23904 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2041
  %fd = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  %e15 = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !23908, metadata !DIExpression()), !dbg !23909
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !23910, metadata !DIExpression()), !dbg !23911
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !23912, metadata !DIExpression()), !dbg !23913
  %0 = load i8*, i8** %file.addr, align 8, !dbg !23914
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !23915
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !23916
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !23913
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23917
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !23917
  br i1 %tobool, label %if.then, label %if.end21, !dbg !23919

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23920, metadata !DIExpression()), !dbg !23922
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23923
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #10, !dbg !23924
  store i32 %call1, i32* %fd, align 4, !dbg !23922
  %4 = load i32, i32* %fd, align 4, !dbg !23925
  %cmp = icmp sle i32 0, %4, !dbg !23927
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !23928

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !23929
  %cmp2 = icmp sle i32 %5, 2, !dbg !23930
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !23931

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !23932, metadata !DIExpression()), !dbg !23934
  %6 = load i32, i32* %fd, align 4, !dbg !23935
  %call4 = call i32 @dup_safer(i32 %6), !dbg !23936
  store i32 %call4, i32* %f, align 4, !dbg !23934
  %7 = load i32, i32* %f, align 4, !dbg !23937
  %cmp5 = icmp slt i32 %7, 0, !dbg !23939
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !23940

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !23941, metadata !DIExpression()), !dbg !23943
  %call7 = call i32* @__errno_location() #15, !dbg !23944
  %8 = load i32, i32* %call7, align 4, !dbg !23944, !ctir !7
  store i32 %8, i32* %e, align 4, !dbg !23943
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23945
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !23946
  %10 = load i32, i32* %e, align 4, !dbg !23947
  %call9 = call i32* @__errno_location() #15, !dbg !23948
  store i32 %10, i32* %call9, align 4, !dbg !23949, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !23950
  br label %return, !dbg !23950

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23951
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !23953
  %cmp11 = icmp ne i32 %call10, 0, !dbg !23954
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !23955

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !23956
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !23957
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #10, !dbg !23958
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !23959
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !23959
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !23960

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !23961, metadata !DIExpression()), !dbg !23963
  %call16 = call i32* @__errno_location() #15, !dbg !23964
  %14 = load i32, i32* %call16, align 4, !dbg !23964, !ctir !7
  store i32 %14, i32* %e15, align 4, !dbg !23963
  %15 = load i32, i32* %f, align 4, !dbg !23965
  %call17 = call i32 @close(i32 %15), !dbg !23966
  %16 = load i32, i32* %e15, align 4, !dbg !23967
  %call18 = call i32* @__errno_location() #15, !dbg !23968
  store i32 %16, i32* %call18, align 4, !dbg !23969, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !23970
  br label %return, !dbg !23970

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !23971

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !23972

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23973
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !23974
  br label %return, !dbg !23974

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !23975
  ret %struct._IO_FILE* %18, !dbg !23975
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind readnone }
attributes #16 = { noreturn }

!llvm.dbg.cu = !{!65, !1049, !291, !483, !1226, !500, !1276, !523, !1278, !1281, !1284, !529, !1287, !560, !1289, !579, !622, !1292, !1295, !1298, !1301, !665, !1304, !1316, !1328, !1338, !1341, !1344, !1347, !1350, !672, !1353, !1364, !1367, !727, !1369, !1372, !768, !1375, !1378, !1381, !1384, !845, !1387, !1389, !1392, !885, !1394, !930, !949, !1396, !1399, !972, !983, !1457, !1460, !1463, !1554, !1567, !1604, !1640, !1676, !1712, !1854, !1857, !1868, !1871, !990, !1874, !1876, !1879, !1883, !1889, !1892, !1894, !1897, !1900, !1912, !1915, !1927, !1942, !2023, !2028, !2030, !2032, !1036, !2034, !2036, !2038}
!llvm.ident = !{}
!llvm.module.flags = !{!2076, !2077, !2078, !2079}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3)
!2 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!3 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!5 = !{!6, !8, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !48, !51, !52, !54, !58, !59}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3, file: !4, line: 51, baseType: !7, size: 32)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4, line: 36, flags: DIFlagFwdDecl)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3, file: !4, line: 70, baseType: !25, size: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 152, baseType: !31)
!30 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4, line: 43, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 153, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4, line: 37, flags: DIFlagFwdDecl)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4, line: 38, flags: DIFlagFwdDecl)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3, file: !4, line: 93, baseType: !25, size: 64, offset: 1344)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar/software")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 20)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "long_options", scope: !65, file: !66, line: 56, type: !153, isLocal: true, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, retainedTypes: !112, globals: !268, nameTableKind: None)
!66 = !DIFile(filename: "src/mv.c", directory: "/home/mbarbar/software/coreutils-8.31")
!67 = !{!68, !76, !83, !89, !95, !100, !106}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !69, line: 30, baseType: !70, size: 32, elements: !71)
!69 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mbarbar/software/coreutils-8.31")
!70 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!71 = !{!72, !73, !74, !75}
!72 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !77, line: 69, baseType: !70, size: 32, elements: !78)
!77 = !DIFile(filename: "src/copy.h", directory: "/home/mbarbar/software/coreutils-8.31")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !77, line: 60, baseType: !70, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !77, line: 26, baseType: !70, size: 32, elements: !90)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !77, line: 47, baseType: !70, size: 32, elements: !96)
!96 = !{!97, !98, !99}
!97 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rm_interactive", file: !101, line: 23, baseType: !70, size: 32, elements: !102)
!101 = !DIFile(filename: "src/remove.h", directory: "/home/mbarbar/software/coreutils-8.31")
!102 = !{!103, !104, !105}
!103 = !DIEnumerator(name: "RMI_ALWAYS", value: 3, isUnsigned: true)
!104 = !DIEnumerator(name: "RMI_SOMETIMES", value: 4, isUnsigned: true)
!105 = !DIEnumerator(name: "RMI_NEVER", value: 5, isUnsigned: true)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RM_status", file: !101, line: 78, baseType: !70, size: 32, elements: !107)
!107 = !{!108, !109, !110, !111}
!108 = !DIEnumerator(name: "RM_OK", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "RM_USER_DECLINED", value: 3, isUnsigned: true)
!110 = !DIEnumerator(name: "RM_ERROR", value: 4, isUnsigned: true)
!111 = !DIEnumerator(name: "RM_NONEMPTY_DIR", value: 5, isUnsigned: true)
!112 = !{!9, !53, !0, !113, !116, !118, !121, !124, !127, !130, !133, !136, !139, !7, !142, !143, !37, !144, !147, !150, !153, !165, !60, !168, !169, !172, !173, !176, !179, !182, !185, !188, !191, !194, !197, !200, !203, !206, !209, !222, !223, !224, !227, !230, !233, !236, !239, !241, !245, !248, !251, !254, !264, !267}
!113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 312, elements: !114)
!114 = !{!115}
!115 = !DISubrange(count: 39)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1016, elements: !119)
!119 = !{!120}
!120 = !DISubrange(count: 127)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 448, elements: !122)
!122 = !{!123}
!123 = !DISubrange(count: 56)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 3344, elements: !125)
!125 = !{!126}
!126 = !DISubrange(count: 418)
!127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1472, elements: !128)
!128 = !{!129}
!129 = !DISubrange(count: 184)
!130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 4216, elements: !131)
!131 = !{!132}
!132 = !DISubrange(count: 527)
!133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 360, elements: !134)
!134 = !{!135}
!135 = !DISubrange(count: 45)
!136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 432, elements: !137)
!137 = !{!138}
!138 = !DISubrange(count: 54)
!139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 24, elements: !140)
!140 = !{!141}
!141 = !DISubrange(count: 3)
!142 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 80, elements: !145)
!145 = !{!146}
!146 = !DISubrange(count: 10)
!147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 192, elements: !148)
!148 = !{!149}
!149 = !DISubrange(count: 24)
!150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 104, elements: !151)
!151 = !{!152}
!152 = !DISubrange(count: 13)
!153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !154, size: 3584, elements: !163)
!154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !155)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !156, line: 50, size: 256, elements: !157)
!156 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!157 = !{!158, !159, !160, !162}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !156, line: 52, baseType: !116, size: 64)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !155, file: !156, line: 55, baseType: !7, size: 32, offset: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !155, file: !156, line: 56, baseType: !161, size: 64, offset: 128)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !155, file: !156, line: 57, baseType: !7, size: 32, offset: 192)
!163 = !{!164}
!164 = !DISubrange(count: 14)
!165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 304, elements: !166)
!166 = !{!167}
!167 = !DISubrange(count: 38)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !30, line: 150, baseType: !70)
!169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 232, elements: !170)
!170 = !{!171}
!171 = !DISubrange(count: 29)
!172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 112, elements: !163)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 96, elements: !174)
!174 = !{!175}
!175 = !DISubrange(count: 12)
!176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 128, elements: !177)
!177 = !{!178}
!178 = !DISubrange(count: 16)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 168, elements: !180)
!180 = !{!181}
!181 = !DISubrange(count: 21)
!182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 336, elements: !183)
!183 = !{!184}
!184 = !DISubrange(count: 42)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 560, elements: !186)
!186 = !{!187}
!187 = !DISubrange(count: 70)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 136, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 17)
!191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 72, elements: !192)
!192 = !{!193}
!193 = !DISubrange(count: 9)
!194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 184, elements: !195)
!195 = !{!196}
!196 = !DISubrange(count: 23)
!197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 456, elements: !198)
!198 = !{!199}
!199 = !DISubrange(count: 57)
!200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 600, elements: !201)
!201 = !{!202}
!202 = !DISubrange(count: 75)
!203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1768, elements: !204)
!204 = !{!205}
!205 = !DISubrange(count: 221)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1776, elements: !207)
!207 = !{!208}
!208 = !DISubrange(count: 222)
!209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 896, elements: !220)
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !211)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !213, file: !212, line: 633, size: 128, elements: !217)
!212 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/software/coreutils-8.31")
!213 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !212, file: !212, line: 631, type: !214, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!214 = !DISubroutineType(types: !215)
!215 = !{null, !116}
!216 = !{}
!217 = !{!218, !219}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !211, file: !212, line: 633, baseType: !116, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !211, file: !212, line: 633, baseType: !116, size: 64, offset: 64)
!220 = !{!221}
!221 = !DISubrange(count: 7)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 184, elements: !195)
!224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 320, elements: !225)
!225 = !{!226}
!226 = !DISubrange(count: 40)
!227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32, elements: !228)
!228 = !{!229}
!229 = !DISubrange(count: 4)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 568, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 71)
!233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 216, elements: !234)
!234 = !{!235}
!235 = !DISubrange(count: 27)
!236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 408, elements: !237)
!237 = !{!238}
!238 = !DISubrange(count: 51)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !240, line: 69, baseType: !168)
!240 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !243, line: 69, baseType: !244)
!243 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/software/coreutils-8.31")
!244 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !243, line: 67, flags: DIFlagFwdDecl)
!245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 128, elements: !246)
!246 = !{!247}
!247 = !DISubrange(count: 2)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 176, elements: !249)
!249 = !{!250}
!250 = !DISubrange(count: 22)
!251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 552, elements: !252)
!252 = !{!253}
!253 = !DISubrange(count: 69)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !256, line: 7, size: 128, elements: !257)
!256 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mbarbar/software/coreutils-8.31")
!257 = !{!258, !261}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !255, file: !256, line: 9, baseType: !259, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !240, line: 47, baseType: !260)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !30, line: 148, baseType: !57)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !255, file: !256, line: 10, baseType: !262, size: 64, offset: 64)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !240, line: 59, baseType: !263)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !30, line: 145, baseType: !57)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 248, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 31)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 16, elements: !246)
!268 = !{!269, !63, !271}
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "remove_trailing_slashes", scope: !65, file: !66, line: 54, type: !142, isLocal: true, isDefinition: true)
!271 = !DIGlobalVariableExpression(var: !272, expr: !DIExpression())
!272 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !273, file: !66, line: 96, type: !255, isLocal: true, isDefinition: true)
!273 = distinct !DISubprogram(name: "rm_option_init", scope: !66, file: !66, line: 75, type: !274, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!274 = !DISubroutineType(types: !275)
!275 = !{null, !276}
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !101, line: 32, size: 256, elements: !278)
!278 = !{!279, !280, !281, !282, !283, !284, !285, !286, !287, !288}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !277, file: !101, line: 35, baseType: !142, size: 8)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !277, file: !101, line: 38, baseType: !100, size: 32, offset: 32)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !277, file: !101, line: 47, baseType: !142, size: 8, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !277, file: !101, line: 50, baseType: !142, size: 8, offset: 72)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !277, file: !101, line: 53, baseType: !142, size: 8, offset: 80)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !277, file: !101, line: 57, baseType: !254, size: 64, offset: 128)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !277, file: !101, line: 61, baseType: !142, size: 8, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !277, file: !101, line: 64, baseType: !142, size: 8, offset: 200)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !277, file: !101, line: 67, baseType: !142, size: 8, offset: 208)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !277, file: !101, line: 75, baseType: !142, size: 8, offset: 216)
!289 = !DIGlobalVariableExpression(var: !290, expr: !DIExpression())
!290 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !291, file: !292, line: 147, type: !116, isLocal: true, isDefinition: true)
!291 = distinct !DICompileUnit(language: DW_LANG_C99, file: !292, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !293, retainedTypes: !294, globals: !464, nameTableKind: None)
!292 = !DIFile(filename: "src/copy.c", directory: "/home/mbarbar/software/coreutils-8.31")
!293 = !{!68, !76, !83, !89, !95}
!294 = !{!239, !53, !70, !9, !57, !55, !295, !142, !7, !297, !300, !236, !303, !241, !147, !306, !309, !116, !312, !315, !165, !318, !321, !168, !224, !248, !324, !327, !263, !260, !330, !333, !188, !336, !173, !337, !133, !136, !191, !368, !179, !369, !372, !375, !259, !262, !233, !117, !267, !381, !384, !29, !169, !264, !346, !348, !387, !390, !60, !391, !393, !150, !396, !399, !433, !10, !172, !176, !121, !353, !355, !436, !443, !446, !448, !450, !449, !451, !452, !453}
!295 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !296, line: 63, baseType: !29)
!296 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 400, elements: !298)
!298 = !{!299}
!299 = !DISubrange(count: 50)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 296, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 37)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 328, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 41)
!306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 88, elements: !307)
!307 = !{!308}
!308 = !DISubrange(count: 11)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 728, elements: !310)
!310 = !{!311}
!311 = !DISubrange(count: 91)
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 376, elements: !313)
!313 = !{!314}
!314 = !DISubrange(count: 47)
!315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 288, elements: !316)
!316 = !{!317}
!317 = !DISubrange(count: 36)
!318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 584, elements: !319)
!319 = !{!320}
!320 = !DISubrange(count: 73)
!321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 120, elements: !322)
!322 = !{!323}
!323 = !DISubrange(count: 15)
!324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 392, elements: !325)
!325 = !{!326}
!326 = !DISubrange(count: 49)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 224, elements: !328)
!328 = !{!329}
!329 = !DISubrange(count: 28)
!330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 416, elements: !331)
!331 = !{!332}
!332 = !DISubrange(count: 52)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 344, elements: !334)
!334 = !{!335}
!335 = !DISubrange(count: 43)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !30, line: 151, baseType: !57)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !340)
!339 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!340 = !{!341, !342, !343, !344, !345, !347, !349, !350, !351, !352, !354, !356, !364, !365, !366}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !338, file: !339, line: 48, baseType: !263, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !338, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !338, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !338, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !338, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !30, line: 146, baseType: !70)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !338, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !30, line: 147, baseType: !70)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !338, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !338, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !338, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !338, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !30, line: 174, baseType: !31)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !338, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !30, line: 179, baseType: !31)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !338, file: !339, line: 91, baseType: !357, size: 128, offset: 576)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !359)
!358 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!359 = !{!360, !362}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !357, file: !358, line: 11, baseType: !361, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !30, line: 160, baseType: !31)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !357, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !30, line: 196, baseType: !31)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !338, file: !339, line: 92, baseType: !357, size: 128, offset: 704)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !338, file: !339, line: 93, baseType: !357, size: 128, offset: 832)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !338, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !363, size: 192, elements: !140)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 376, elements: !313)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 480, elements: !370)
!370 = !{!371}
!371 = !DISubrange(count: 60)
!372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 64, elements: !373)
!373 = !{!374}
!374 = !DISubrange(count: 8)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !292, line: 125, size: 192, elements: !377)
!377 = !{!378, !379, !380}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !376, file: !292, line: 127, baseType: !375, size: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !376, file: !292, line: 128, baseType: !259, size: 64, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !376, file: !292, line: 129, baseType: !262, size: 64, offset: 128)
!381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 504, elements: !382)
!382 = !{!383}
!383 = !DISubrange(count: 63)
!384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 240, elements: !385)
!385 = !{!386}
!386 = !DISubrange(count: 30)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 200, elements: !388)
!388 = !{!389}
!389 = !DISubrange(count: 25)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !357, size: 256, elements: !246)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !338)
!393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 264, elements: !394)
!394 = !{!395}
!395 = !DISubrange(count: 33)
!396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 648, elements: !397)
!397 = !{!398}
!398 = !DISubrange(count: 81)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !401)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !402)
!402 = !{!403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !401, file: !4, line: 51, baseType: !7, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !401, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !401, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !401, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !401, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !401, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !401, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !401, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !401, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !401, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !401, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !401, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !401, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !401, file: !4, line: 70, baseType: !417, size: 64, offset: 832)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !401, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !401, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !401, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !401, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !401, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !401, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !401, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !401, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !401, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !401, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !401, file: !4, line: 93, baseType: !417, size: 64, offset: 1344)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !401, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !401, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !401, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !401, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 152, elements: !434)
!434 = !{!435}
!435 = !DISubrange(count: 19)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !438, line: 23, size: 192, elements: !439)
!438 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mbarbar/software/coreutils-8.31")
!439 = !{!440, !441, !442}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !437, file: !438, line: 26, baseType: !295, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !437, file: !438, line: 29, baseType: !295, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !437, file: !438, line: 32, baseType: !70, size: 32, offset: 128)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !444)
!444 = !{!445}
!445 = !DISubrange(count: 1024)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !296, line: 77, baseType: !447)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !30, line: 193, baseType: !31)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!450 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !240, line: 79, baseType: !346)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !240, line: 64, baseType: !348)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !296, line: 52, baseType: !454)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !455, line: 32, baseType: !456)
!455 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar/software")
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !292, line: 623, baseType: !457)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 192, elements: !38)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !292, line: 623, size: 192, elements: !459)
!459 = !{!460, !461, !462, !463}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !458, file: !292, line: 623, baseType: !70, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !458, file: !292, line: 623, baseType: !70, size: 32, offset: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !458, file: !292, line: 623, baseType: !53, size: 64, offset: 64)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !458, file: !292, line: 623, baseType: !53, size: 64, offset: 128)
!464 = !{!465, !289, !470, !472, !477, !479}
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "mask", scope: !467, file: !292, line: 3051, type: !239, isLocal: true, isDefinition: true)
!467 = distinct !DISubprogram(name: "cached_umask", scope: !292, file: !292, line: 3049, type: !468, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!468 = !DISubroutineType(types: !469)
!469 = !{!239}
!470 = !DIGlobalVariableExpression(var: !471, expr: !DIExpression())
!471 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !291, file: !292, line: 148, type: !116, isLocal: true, isDefinition: true)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "zeros", scope: !474, file: !292, line: 351, type: !9, isLocal: true, isDefinition: true)
!474 = distinct !DISubprogram(name: "write_zeros", scope: !292, file: !292, line: 349, type: !475, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!475 = !DISubroutineType(types: !476)
!476 = !{!142, !7, !295}
!477 = !DIGlobalVariableExpression(var: !478, expr: !DIExpression())
!478 = distinct !DIGlobalVariable(name: "nz", scope: !474, file: !292, line: 352, type: !55, isLocal: true, isDefinition: true)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "fallback", scope: !474, file: !292, line: 359, type: !443, isLocal: true, isDefinition: true)
!481 = !DIGlobalVariableExpression(var: !482, expr: !DIExpression())
!482 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !483, file: !484, line: 45, type: !241, isLocal: true, isDefinition: true)
!483 = distinct !DICompileUnit(language: DW_LANG_C99, file: !484, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !485, globals: !497, nameTableKind: None)
!484 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!485 = !{!53, !9, !486, !489, !259, !262, !241, !495}
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !487, line: 102, baseType: !488)
!487 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !30, line: 73, baseType: !57)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !484, line: 33, size: 192, elements: !491)
!491 = !{!492, !493, !494}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !490, file: !484, line: 35, baseType: !259, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !490, file: !484, line: 36, baseType: !262, size: 64, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !484, line: 40, baseType: !9, size: 64, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !490)
!497 = !{!481}
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !500, file: !501, line: 38, type: !507, isLocal: true, isDefinition: true)
!500 = distinct !DICompileUnit(language: DW_LANG_C99, file: !501, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !502, globals: !520, nameTableKind: None)
!501 = !DIFile(filename: "src/force-link.c", directory: "/home/mbarbar/software/coreutils-8.31")
!502 = !{!7, !503, !9, !506, !55, !507, !508, !116, !515}
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2048, elements: !504)
!504 = !{!505}
!505 = !DISubrange(count: 256)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !31)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 72, elements: !192)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !501, line: 71, size: 192, elements: !510)
!510 = !{!511, !512, !513, !514}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !509, file: !501, line: 73, baseType: !7, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !509, file: !501, line: 74, baseType: !116, size: 64, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !509, file: !501, line: 75, baseType: !7, size: 32, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !509, file: !501, line: 76, baseType: !7, size: 32, offset: 160)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !501, line: 131, size: 128, elements: !517)
!517 = !{!518, !519}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !516, file: !501, line: 133, baseType: !116, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !516, file: !501, line: 134, baseType: !7, size: 32, offset: 64)
!520 = !{!498}
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "Version", scope: !523, file: !524, line: 2, type: !116, isLocal: false, isDefinition: true)
!523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !524, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !525, globals: !526, nameTableKind: None)
!524 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/software/coreutils-8.31")
!525 = !{!116}
!526 = !{!521}
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !529, file: !533, line: 82, type: !116, isLocal: false, isDefinition: true)
!529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !530, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !531, retainedTypes: !539, globals: !557, nameTableKind: None)
!530 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!531 = !{!68, !532}
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !533, line: 172, baseType: !70, size: 32, elements: !534)
!533 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!534 = !{!535, !536, !537, !538}
!535 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!536 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!537 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!538 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!539 = !{!53, !70, !55, !116, !179, !117, !267, !506, !540, !9, !541, !7, !10, !545, !554, !142, !503, !31}
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !240, line: 108, baseType: !447)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !543, line: 127, baseType: !544)
!543 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !543, line: 127, flags: DIFlagFwdDecl)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !547, line: 22, size: 2240, elements: !548)
!547 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!548 = !{!549, !550, !551, !552, !553}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !546, file: !547, line: 25, baseType: !260, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !546, file: !547, line: 26, baseType: !29, size: 64, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !546, file: !547, line: 31, baseType: !33, size: 16, offset: 128)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !546, file: !547, line: 32, baseType: !450, size: 8, offset: 144)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !546, file: !547, line: 33, baseType: !503, size: 2048, offset: 152)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 40, elements: !555)
!555 = !{!556}
!556 = !DISubrange(count: 5)
!557 = !{!527}
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "backup_args", scope: !560, file: !576, line: 42, type: !566, isLocal: true, isDefinition: true)
!560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !561, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !562, retainedTypes: !563, globals: !573, nameTableKind: None)
!561 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!562 = !{!68}
!563 = !{!116, !9, !117, !564, !566, !568, !188, !176}
!564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 256, elements: !373)
!565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 576, elements: !192)
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !569, line: 55, baseType: !570)
!569 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/software/coreutils-8.31")
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{null}
!573 = !{!574, !558}
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "backup_types", scope: !560, file: !576, line: 53, type: !564, isLocal: true, isDefinition: true)
!576 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "file_name", scope: !579, file: !619, line: 37, type: !116, isLocal: true, isDefinition: true)
!579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !580, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !581, globals: !618, nameTableKind: None)
!580 = !DIFile(filename: "./lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!581 = !{!116, !142, !582, !433, !7, !616, !139, !617}
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !584)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !585)
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !584, file: !4, line: 51, baseType: !7, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !584, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !584, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !584, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !584, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !584, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !584, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !584, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !584, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !584, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !584, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !584, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !584, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !584, file: !4, line: 70, baseType: !600, size: 64, offset: 832)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !584, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !584, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !584, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !584, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !584, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !584, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !584, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !584, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !584, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !584, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !584, file: !4, line: 93, baseType: !600, size: 64, offset: 1344)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !584, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !584, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !584, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !584, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 56, elements: !220)
!617 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!618 = !{!577}
!619 = !DIFile(filename: "lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "file_name", scope: !622, file: !662, line: 46, type: !116, isLocal: true, isDefinition: true)
!622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !623, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !624, globals: !659, nameTableKind: None)
!623 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!624 = !{!116, !142, !625, !7, !173, !616, !139, !617}
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !627)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !628)
!628 = !{!629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !627, file: !4, line: 51, baseType: !7, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !627, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !627, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !627, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !627, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !627, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !627, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !627, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !627, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !627, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !627, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !627, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !627, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !627, file: !4, line: 70, baseType: !643, size: 64, offset: 832)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !627, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !627, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !627, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !627, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !627, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !627, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !627, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !627, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !627, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !627, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !627, file: !4, line: 93, baseType: !643, size: 64, offset: 1344)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !627, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !627, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !627, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !627, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!659 = !{!620, !660}
!660 = !DIGlobalVariableExpression(var: !661, expr: !DIExpression())
!661 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !622, file: !662, line: 56, type: !142, isLocal: true, isDefinition: true)
!662 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "exit_failure", scope: !665, file: !669, line: 24, type: !617, isLocal: false, isDefinition: true)
!665 = distinct !DICompileUnit(language: DW_LANG_C99, file: !666, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !667, globals: !668, nameTableKind: None)
!666 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!667 = !{!617}
!668 = !{!663}
!669 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "default_tuning", scope: !672, file: !678, line: 130, type: !694, isLocal: true, isDefinition: true)
!672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !673, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !674, globals: !724, nameTableKind: None)
!673 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!674 = !{!57, !53, !55, !675, !687, !681, !147, !393, !712, !722, !450, !117, !694, !723, !676, !693, !705, !717, !709, !699, !142, !7}
!675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !243, line: 69, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !678, line: 52, size: 640, elements: !679)
!678 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!679 = !{!680, !686, !689, !690, !691, !692, !704, !711, !716, !721}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !677, file: !678, line: 57, baseType: !681, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !678, line: 46, size: 128, elements: !683)
!683 = !{!684, !685}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !682, file: !678, line: 48, baseType: !53, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !682, file: !678, line: 49, baseType: !681, size: 64, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !677, file: !678, line: 58, baseType: !687, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !682)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !677, file: !678, line: 59, baseType: !55, size: 64, offset: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !677, file: !678, line: 60, baseType: !55, size: 64, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !677, file: !678, line: 61, baseType: !55, size: 64, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !677, file: !678, line: 64, baseType: !693, size: 64, offset: 320)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !243, line: 65, baseType: !696)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !243, line: 53, size: 160, elements: !697)
!697 = !{!698, !700, !701, !702, !703}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !696, file: !243, line: 58, baseType: !699, size: 32)
!699 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !696, file: !243, line: 59, baseType: !699, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !696, file: !243, line: 60, baseType: !699, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !696, file: !243, line: 61, baseType: !699, size: 32, offset: 96)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !696, file: !243, line: 62, baseType: !142, size: 8, offset: 128)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !677, file: !678, line: 71, baseType: !705, size: 64, offset: 384)
!705 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !243, line: 48, baseType: !706)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!55, !709, !55}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !677, file: !678, line: 72, baseType: !712, size: 64, offset: 448)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !243, line: 49, baseType: !713)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!142, !709, !709}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !677, file: !678, line: 73, baseType: !717, size: 64, offset: 512)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !243, line: 50, baseType: !718)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !53}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !677, file: !678, line: 76, baseType: !681, size: 64, offset: 576)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!724 = !{!670}
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "program_name", scope: !727, file: !765, line: 33, type: !116, isLocal: false, isDefinition: true)
!727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !728, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !729, globals: !764, nameTableKind: None)
!728 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!729 = !{!53, !9, !116, !121, !730, !117, !372, !227}
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !732)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !733)
!733 = !{!734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !732, file: !4, line: 51, baseType: !7, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !732, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !732, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !732, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !732, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !732, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !732, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !732, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !732, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !732, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !732, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !732, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !732, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !732, file: !4, line: 70, baseType: !748, size: 64, offset: 832)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !732, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !732, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !732, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !732, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !732, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !732, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !732, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !732, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !732, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !732, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !732, file: !4, line: 93, baseType: !748, size: 64, offset: 1344)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !732, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !732, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !732, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !732, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!764 = !{!725}
!765 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !768, file: !791, line: 85, type: !786, isLocal: false, isDefinition: true)
!768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !769, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !770, retainedTypes: !785, globals: !828, nameTableKind: None)
!769 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!770 = !{!771}
!771 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !772, line: 32, baseType: !70, size: 32, elements: !773)
!772 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/software/coreutils-8.31")
!773 = !{!774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784}
!774 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!775 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!776 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!777 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!778 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!779 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!780 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!781 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!782 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!783 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!784 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!785 = !{!7, !33, !55, !786, !787, !789, !450, !799, !796, !70, !116, !800, !802, !9, !803, !503, !142, !267, !117, !808, !810, !822, !823, !825, !227, !372, !139}
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 704, elements: !307)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 320, elements: !145)
!788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !771)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !791, line: 65, size: 448, elements: !792)
!791 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!792 = !{!793, !794, !795, !797, !798}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !790, file: !791, line: 68, baseType: !771, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !790, file: !791, line: 71, baseType: !7, size: 32, offset: 32)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !790, file: !791, line: 75, baseType: !796, size: 256, offset: 64)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 256, elements: !373)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !790, file: !791, line: 78, baseType: !116, size: 64, offset: 320)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !790, file: !791, line: 81, baseType: !116, size: 64, offset: 384)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !791, line: 834, size: 128, elements: !805)
!805 = !{!806, !807}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !804, file: !791, line: 836, baseType: !55, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !804, file: !791, line: 837, baseType: !9, size: 64, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !811, line: 6, baseType: !812)
!811 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !813, line: 21, baseType: !814)
!813 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !813, line: 13, size: 64, elements: !815)
!815 = !{!816, !817}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !814, file: !813, line: 15, baseType: !7, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !814, file: !813, line: 20, baseType: !818, size: 32, offset: 32)
!818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !814, file: !813, line: 16, size: 32, elements: !819)
!819 = !{!820, !821}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !818, file: !813, line: 18, baseType: !70, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !818, file: !813, line: 19, baseType: !227, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !56, line: 74, baseType: !7)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 48, elements: !826)
!826 = !{!827}
!827 = !DISubrange(count: 6)
!828 = !{!766, !829, !831, !833, !835, !837, !839, !841}
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !768, file: !791, line: 101, type: !787, isLocal: false, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !768, file: !791, line: 1052, type: !790, isLocal: false, isDefinition: true)
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !768, file: !791, line: 116, type: !790, isLocal: true, isDefinition: true)
!835 = !DIGlobalVariableExpression(var: !836, expr: !DIExpression())
!836 = distinct !DIGlobalVariable(name: "slot0", scope: !768, file: !791, line: 842, type: !503, isLocal: true, isDefinition: true)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "slotvec", scope: !768, file: !791, line: 845, type: !803, isLocal: true, isDefinition: true)
!839 = !DIGlobalVariableExpression(var: !840, expr: !DIExpression())
!840 = distinct !DIGlobalVariable(name: "nslots", scope: !768, file: !791, line: 843, type: !7, isLocal: true, isDefinition: true)
!841 = !DIGlobalVariableExpression(var: !842, expr: !DIExpression())
!842 = distinct !DIGlobalVariable(name: "slotvec0", scope: !768, file: !791, line: 844, type: !804, isLocal: true, isDefinition: true)
!843 = !DIGlobalVariableExpression(var: !844, expr: !DIExpression())
!844 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !845, file: !858, line: 74, type: !868, isLocal: true, isDefinition: true)
!845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !846, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !847, retainedTypes: !855, globals: !882, nameTableKind: None)
!846 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!847 = !{!848}
!848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !849, line: 26, baseType: !70, size: 32, elements: !850)
!849 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mbarbar/software/coreutils-8.31")
!850 = !{!851, !852, !853, !854}
!851 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!852 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!853 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!854 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!855 = !{!53, !9, !55, !856, !7, !864, !868, !870, !116, !879, !857, !260, !863, !10, !541, !880, !881}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !858, line: 46, baseType: !859)
!858 = !DIFile(filename: "lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !858, line: 40, size: 128, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !859, file: !858, line: 42, baseType: !9, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !859, file: !858, line: 44, baseType: !863, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !543, line: 34, baseType: !260)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !858, line: 72, baseType: !865)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!7, !709, !709}
!868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !869, size: 192, elements: !140)
!869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !547, line: 22, size: 2240, elements: !873)
!873 = !{!874, !875, !876, !877, !878}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !872, file: !547, line: 25, baseType: !260, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !872, file: !547, line: 26, baseType: !29, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !872, file: !547, line: 31, baseType: !33, size: 16, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !872, file: !547, line: 32, baseType: !450, size: 8, offset: 144)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !872, file: !547, line: 33, baseType: !503, size: 2048, offset: 152)
!879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!882 = !{!843}
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "letters", scope: !885, file: !900, line: 184, type: !891, isLocal: true, isDefinition: true)
!885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !886, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !887, globals: !899, nameTableKind: None)
!886 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!887 = !{!55, !9, !70, !7, !888, !891, !892, !895, !321, !898, !267, !161}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !890, line: 33, flags: DIFlagFwdDecl)
!890 = !DIFile(filename: "./lib/randint.h", directory: "/home/mbarbar/software/coreutils-8.31")
!891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 504, elements: !382)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!7, !9, !53}
!895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 280, elements: !896)
!896 = !{!897}
!897 = !DISubrange(count: 35)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 416, elements: !331)
!899 = !{!883}
!900 = !DIFile(filename: "lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "ht", scope: !903, file: !904, line: 163, type: !241, isLocal: true, isDefinition: true)
!903 = distinct !DISubprogram(name: "utimecmpat", scope: !904, file: !904, line: 132, type: !905, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !930, retainedNodes: !216)
!904 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!905 = !DISubroutineType(types: !906)
!906 = !{!7, !7, !116, !907, !907, !7}
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !910)
!910 = !{!911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !927, !928, !929}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !909, file: !339, line: 48, baseType: !263, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !909, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !909, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !909, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !909, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !909, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !909, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !909, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !909, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !909, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !909, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !909, file: !339, line: 91, baseType: !923, size: 128, offset: 576)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !924)
!924 = !{!925, !926}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !923, file: !358, line: 11, baseType: !361, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !923, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !909, file: !339, line: 92, baseType: !923, size: 128, offset: 704)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !909, file: !339, line: 93, baseType: !923, size: 128, offset: 832)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !909, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !931, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !932, globals: !944, nameTableKind: None)
!931 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!932 = !{!933, !361, !7, !935, !142, !263, !262, !941, !363, !942}
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !934, line: 7, baseType: !361)
!934 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !904, line: 66, size: 128, elements: !937)
!937 = !{!938, !939, !940}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !936, file: !904, line: 69, baseType: !262, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !936, file: !904, line: 76, baseType: !7, size: 32, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !936, file: !904, line: 80, baseType: !142, size: 8, offset: 96)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 256, elements: !246)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !936)
!944 = !{!901, !945}
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !903, file: !904, line: 166, type: !935, isLocal: true, isDefinition: true)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !949, file: !969, line: 75, type: !7, isLocal: true, isDefinition: true)
!949 = distinct !DICompileUnit(language: DW_LANG_C99, file: !950, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !951, globals: !966, nameTableKind: None)
!950 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!951 = !{!952, !957, !7, !363, !958, !965, !361, !964, !142, !933, !168}
!952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !953, size: 256, elements: !246)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !954)
!954 = !{!955, !956}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !953, file: !358, line: 11, baseType: !361, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !953, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !959, size: 256, elements: !246)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !960, line: 8, size: 128, elements: !961)
!960 = !DIFile(filename: "/usr/include/bits/types/struct_timeval.h", directory: "")
!961 = !{!962, !963}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !959, file: !960, line: 10, baseType: !361, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !959, file: !960, line: 11, baseType: !964, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !30, line: 162, baseType: !31)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!966 = !{!947, !967}
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !949, file: !969, line: 76, type: !7, isLocal: true, isDefinition: true)
!969 = !DIFile(filename: "lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!970 = !DIGlobalVariableExpression(var: !971, expr: !DIExpression())
!971 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !972, file: !976, line: 26, type: !312, isLocal: false, isDefinition: true)
!972 = distinct !DICompileUnit(language: DW_LANG_C99, file: !973, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !974, globals: !975, nameTableKind: None)
!973 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!974 = !{!312}
!975 = !{!970}
!976 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "initialized", scope: !979, file: !980, line: 34, type: !142, isLocal: true, isDefinition: true)
!979 = distinct !DISubprogram(name: "can_write_any_file", scope: !980, file: !980, line: 32, type: !981, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !983, retainedNodes: !216)
!980 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!981 = !DISubroutineType(types: !982)
!982 = !{!142}
!983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !984, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !982, globals: !985, nameTableKind: None)
!984 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!985 = !{!977, !986}
!986 = !DIGlobalVariableExpression(var: !987, expr: !DIExpression())
!987 = distinct !DIGlobalVariable(name: "can_write", scope: !979, file: !980, line: 35, type: !142, isLocal: true, isDefinition: true)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !990, file: !1029, line: 69, type: !568, isLocal: false, isDefinition: true)
!990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !991, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !992, globals: !1028, nameTableKind: None)
!991 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!992 = !{!53, !568, !55, !506, !142, !993, !117, !116, !233, !169, !179, !994, !372, !554}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !996, file: !4, line: 51, baseType: !7, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !996, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !996, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !996, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !996, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !996, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !996, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !996, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !996, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !996, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !996, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !996, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !996, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !996, file: !4, line: 70, baseType: !1012, size: 64, offset: 832)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !996, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !996, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !996, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !996, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !996, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !996, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !996, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !996, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !996, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !996, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !996, file: !4, line: 93, baseType: !1012, size: 64, offset: 1344)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !996, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !996, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !996, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !996, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1028 = !{!988}
!1029 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1030 = !DIGlobalVariableExpression(var: !1031, expr: !DIExpression())
!1031 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1032, file: !1033, line: 506, type: !7, isLocal: true, isDefinition: true)
!1032 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1033, file: !1033, line: 487, type: !1034, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1036, retainedNodes: !216)
!1033 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!7, !7, !7}
!1036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1037, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1038, globals: !1048, nameTableKind: None)
!1037 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1038 = !{!1039, !7, !53}
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !455, line: 14, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1037, line: 207, baseType: !1041)
!1041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1042, size: 192, elements: !38)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1037, line: 207, size: 192, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1042, file: !1037, line: 207, baseType: !70, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1042, file: !1037, line: 207, baseType: !70, size: 32, offset: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1042, file: !1037, line: 207, baseType: !53, size: 64, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1042, file: !1037, line: 207, baseType: !53, size: 64, offset: 128)
!1048 = !{!1030}
!1049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1050, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1051, retainedTypes: !1061, nameTableKind: None)
!1050 = !DIFile(filename: "src/remove.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1051 = !{!106, !100, !1052, !1057}
!1052 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ternary", file: !1050, line: 35, baseType: !70, size: 32, elements: !1053)
!1053 = !{!1054, !1055, !1056}
!1054 = !DIEnumerator(name: "T_UNKNOWN", value: 2, isUnsigned: true)
!1055 = !DIEnumerator(name: "T_NO", value: 3, isUnsigned: true)
!1056 = !DIEnumerator(name: "T_YES", value: 4, isUnsigned: true)
!1057 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Prompt_action", file: !1050, line: 46, baseType: !70, size: 32, elements: !1058)
!1058 = !{!1059, !1060}
!1059 = !DIEnumerator(name: "PA_DESCEND_INTO_DIR", value: 2, isUnsigned: true)
!1060 = !DIEnumerator(name: "PA_REMOVE_DIR", value: 3, isUnsigned: true)
!1061 = !{!53, !7, !1062, !142, !1063, !1156, !176, !188, !150, !1158, !1157, !33, !1064, !9, !506, !236, !267, !139, !1159, !1092, !260, !259, !263, !262, !133, !1164, !324, !264, !1167, !300, !1170, !1171, !179, !121, !248, !541, !1174, !879, !1069, !31, !116, !10, !1183, !1184, !1185, !168, !1186, !1220, !1223, !895, !433, !29, !173}
!1062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1065, line: 197, baseType: !1066)
!1065 = !DIFile(filename: "./lib/fts_.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1065, line: 80, size: 1024, elements: !1067)
!1067 = !{!1068, !1118, !1119, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1134, !1135, !1138, !1145}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1066, file: !1065, line: 81, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1065, line: 199, size: 2112, elements: !1071)
!1071 = !{!1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1088, !1089, !1090, !1091, !1114}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1070, file: !1065, line: 200, baseType: !1069, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1070, file: !1065, line: 201, baseType: !1069, size: 64, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1070, file: !1065, line: 202, baseType: !1069, size: 64, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1070, file: !1065, line: 203, baseType: !541, size: 64, offset: 192)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1070, file: !1065, line: 206, baseType: !31, size: 64, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1070, file: !1065, line: 207, baseType: !53, size: 64, offset: 320)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1070, file: !1065, line: 208, baseType: !9, size: 64, offset: 384)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1070, file: !1065, line: 209, baseType: !9, size: 64, offset: 448)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1070, file: !1065, line: 210, baseType: !7, size: 32, offset: 512)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1070, file: !1065, line: 211, baseType: !7, size: 32, offset: 544)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1070, file: !1065, line: 212, baseType: !55, size: 64, offset: 576)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1070, file: !1065, line: 214, baseType: !1063, size: 64, offset: 640)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1070, file: !1065, line: 218, baseType: !506, size: 64, offset: 704)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1070, file: !1065, line: 220, baseType: !55, size: 64, offset: 768)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1070, file: !1065, line: 225, baseType: !1087, size: 64, offset: 832)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !240, line: 74, baseType: !336)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1070, file: !1065, line: 241, baseType: !33, size: 16, offset: 896)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1070, file: !1065, line: 245, baseType: !33, size: 16, offset: 912)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1070, file: !1065, line: 251, baseType: !33, size: 16, offset: 928)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1070, file: !1065, line: 253, baseType: !1092, size: 1152, offset: 960)
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 1152, elements: !38)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !1094)
!1094 = !{!1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1111, !1112, !1113}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1093, file: !339, line: 48, baseType: !263, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1093, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1093, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1093, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1093, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1093, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1093, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1093, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1093, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1093, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1093, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1093, file: !339, line: 91, baseType: !1107, size: 128, offset: 576)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !1108)
!1108 = !{!1109, !1110}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1107, file: !358, line: 11, baseType: !361, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1107, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1093, file: !339, line: 92, baseType: !1107, size: 128, offset: 704)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1093, file: !339, line: 93, baseType: !1107, size: 128, offset: 832)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1093, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1070, file: !1065, line: 254, baseType: !1115, offset: 2112)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, elements: !1116)
!1116 = !{!1117}
!1117 = !DISubrange(count: -1)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1066, file: !1065, line: 82, baseType: !1069, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1066, file: !1065, line: 83, baseType: !1120, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1066, file: !1065, line: 84, baseType: !262, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1066, file: !1065, line: 85, baseType: !9, size: 64, offset: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1066, file: !1065, line: 86, baseType: !7, size: 32, offset: 320)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1066, file: !1065, line: 87, baseType: !7, size: 32, offset: 352)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1066, file: !1065, line: 89, baseType: !55, size: 64, offset: 384)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1066, file: !1065, line: 90, baseType: !55, size: 64, offset: 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1066, file: !1065, line: 91, baseType: !1128, size: 64, offset: 512)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!7, !1131, !1131}
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1066, file: !1065, line: 160, baseType: !7, size: 32, offset: 576)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1066, file: !1065, line: 169, baseType: !1136, size: 64, offset: 640)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1065, line: 169, flags: DIFlagFwdDecl)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1066, file: !1065, line: 191, baseType: !1139, size: 64, offset: 704)
!1139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1066, file: !1065, line: 171, size: 64, elements: !1140)
!1140 = !{!1141, !1142}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1139, file: !1065, line: 184, baseType: !1136, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1139, file: !1065, line: 190, baseType: !1143, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1065, line: 190, flags: DIFlagFwdDecl)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1066, file: !1065, line: 196, baseType: !1146, size: 256, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1147, line: 39, baseType: !1148)
!1147 = !DIFile(filename: "./lib/i-ring.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1147, line: 31, size: 256, elements: !1149)
!1149 = !{!1150, !1152, !1153, !1154, !1155}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1148, file: !1147, line: 33, baseType: !1151, size: 128)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !228)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1148, file: !1147, line: 34, baseType: !7, size: 32, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1148, file: !1147, line: 35, baseType: !70, size: 32, offset: 160)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1148, file: !1147, line: 36, baseType: !70, size: 32, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1148, file: !1147, line: 37, baseType: !142, size: 8, offset: 224)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1065, line: 255, baseType: !1070)
!1158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 480, elements: !370)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !256, line: 7, size: 128, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1160, file: !256, line: 9, baseType: !259, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1160, file: !256, line: 10, baseType: !262, size: 64, offset: 64)
!1164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 464, elements: !1165)
!1165 = !{!1166}
!1166 = !DISubrange(count: 58)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 368, elements: !1168)
!1168 = !{!1169}
!1169 = !DISubrange(count: 46)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ternary", file: !1050, line: 41, baseType: !1052)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1488, elements: !1172)
!1172 = !{!1173}
!1173 = !DISubrange(count: 186)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !547, line: 22, size: 2240, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1176, file: !547, line: 25, baseType: !260, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1176, file: !547, line: 26, baseType: !29, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1176, file: !547, line: 31, baseType: !33, size: 16, offset: 128)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1176, file: !547, line: 32, baseType: !450, size: 8, offset: 144)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1176, file: !547, line: 33, baseType: !503, size: 2048, offset: 152)
!1183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1064)
!1184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1157)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1188)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1188, file: !4, line: 51, baseType: !7, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1188, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1188, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1188, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1188, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1188, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1188, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1188, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1188, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1188, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1188, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1188, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1188, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1188, file: !4, line: 70, baseType: !1204, size: 64, offset: 832)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1188, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1188, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1188, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1188, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1188, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1188, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1188, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1188, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1188, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1188, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1188, file: !4, line: 93, baseType: !1204, size: 64, offset: 1344)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1188, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1188, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1188, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1188, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 384, elements: !1221)
!1221 = !{!1222}
!1222 = !DISubrange(count: 48)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 256, elements: !1224)
!1224 = !{!1225}
!1225 = !DISubrange(count: 32)
!1226 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1227, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1228, nameTableKind: None)
!1227 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1228 = !{!1229, !7, !55, !1230, !142, !70, !1236, !1265, !1252, !1241, !1246, !1266, !1269, !1272, !1273}
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !240, line: 85, baseType: !29)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !438, line: 23, size: 192, elements: !1232)
!1232 = !{!1233, !1234, !1235}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1231, file: !438, line: 26, baseType: !1229, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1231, file: !438, line: 29, baseType: !1229, size: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1231, file: !438, line: 32, baseType: !70, size: 32, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1238, line: 35, size: 256, elements: !1239)
!1238 = !DIFile(filename: "src/fiemap.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1239 = !{!1240, !1244, !1245, !1248, !1249, !1250, !1251}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1237, file: !1238, line: 38, baseType: !1241, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1242, line: 27, baseType: !1243)
!1242 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!1243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !30, line: 45, baseType: !57)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1237, file: !1238, line: 41, baseType: !1241, size: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1237, file: !1238, line: 44, baseType: !1246, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1242, line: 26, baseType: !1247)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !30, line: 42, baseType: !70)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1237, file: !1238, line: 47, baseType: !1246, size: 32, offset: 160)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1237, file: !1238, line: 50, baseType: !1246, size: 32, offset: 192)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1237, file: !1238, line: 52, baseType: !1246, size: 32, offset: 224)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1237, file: !1238, line: 59, baseType: !1252, offset: 256)
!1252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1253, elements: !1263)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1238, line: 14, size: 448, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1260, !1261}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1253, file: !1238, line: 18, baseType: !1241, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1253, file: !1238, line: 22, baseType: !1241, size: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1253, file: !1238, line: 25, baseType: !1241, size: 64, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1253, file: !1238, line: 27, baseType: !1259, size: 128, offset: 192)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1241, size: 128, elements: !246)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1253, file: !1238, line: 30, baseType: !1246, size: 32, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1253, file: !1238, line: 32, baseType: !1262, size: 96, offset: 352)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1246, size: 96, elements: !140)
!1263 = !{!1264}
!1264 = !DISubrange(count: 0)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 440, elements: !1267)
!1267 = !{!1268}
!1268 = !DISubrange(count: 55)
!1269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 144, elements: !1270)
!1270 = !{!1271}
!1271 = !DISubrange(count: 18)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 360, elements: !134)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 512, elements: !1274)
!1274 = !{!1275}
!1275 = !DISubrange(count: 64)
!1276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1277, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!1277 = !DIFile(filename: "src/selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1279, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1280, nameTableKind: None)
!1279 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1280 = !{!7, !139, !384}
!1281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1282, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1283, nameTableKind: None)
!1282 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1283 = !{!7, !233}
!1284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1285, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1286, nameTableKind: None)
!1285 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1286 = !{!53, !55, !540, !9, !7}
!1287 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1288, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !562, nameTableKind: None)
!1288 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1289 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1290, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1291, nameTableKind: None)
!1290 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1291 = !{!55}
!1292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1293, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1294, nameTableKind: None)
!1293 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1294 = !{!9}
!1295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1296, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1297, nameTableKind: None)
!1296 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1297 = !{!55, !116, !142, !9}
!1298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1299, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1300, nameTableKind: None)
!1299 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1300 = !{!9, !116, !117, !142, !55}
!1301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1302, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1303, nameTableKind: None)
!1302 = !DIFile(filename: "./lib/stripslash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1303 = !{!9, !142, !10}
!1304 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1305, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1306, nameTableKind: None)
!1305 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1306 = !{!1307}
!1307 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1308, line: 45, baseType: !70, size: 32, elements: !1309)
!1308 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1309 = !{!1310, !1311, !1312, !1313, !1314, !1315}
!1310 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1311 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1312 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1313 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1314 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1315 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1316 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1317, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1318, nameTableKind: None)
!1317 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1318 = !{!239, !1319}
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !455, line: 14, baseType: !1320)
!1320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1317, line: 35, baseType: !1321)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1322, size: 192, elements: !38)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1317, line: 35, size: 192, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1322, file: !1317, line: 35, baseType: !70, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1322, file: !1317, line: 35, baseType: !70, size: 32, offset: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1322, file: !1317, line: 35, baseType: !53, size: 64, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1322, file: !1317, line: 35, baseType: !53, size: 64, offset: 128)
!1328 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1329, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1330, nameTableKind: None)
!1329 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1330 = !{!53, !9, !1331, !260, !259, !263, !262}
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1333, line: 9, size: 192, elements: !1334)
!1333 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1334 = !{!1335, !1336, !1337}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1332, file: !1333, line: 11, baseType: !9, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1332, file: !1333, line: 12, baseType: !259, size: 64, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1332, file: !1333, line: 13, baseType: !262, size: 64, offset: 128)
!1338 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1339, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1340, nameTableKind: None)
!1339 = !DIFile(filename: "./lib/file-type.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1340 = !{!168, !29, !433, !150, !144, !172, !179, !223, !554, !616, !306}
!1341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1342, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1343, nameTableKind: None)
!1342 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1343 = !{!9, !168}
!1344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1345, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1346, nameTableKind: None)
!1345 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1346 = !{!53, !9}
!1347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1348, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1349, nameTableKind: None)
!1348 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1349 = !{!53, !116, !55, !10, !117, !9}
!1350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1351, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1352, nameTableKind: None)
!1351 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1352 = !{!116, !55, !7, !117}
!1353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1354, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1355, nameTableKind: None)
!1354 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1355 = !{!1356, !55, !9, !259, !262, !1363}
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1333, line: 9, size: 192, elements: !1359)
!1359 = !{!1360, !1361, !1362}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1358, file: !1333, line: 11, baseType: !9, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1358, file: !1333, line: 12, baseType: !259, size: 64, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1358, file: !1333, line: 13, baseType: !262, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1365, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1366, nameTableKind: None)
!1365 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1366 = !{!7, !541}
!1367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1368, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!1368 = !DIFile(filename: "./lib/priv-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1370, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1371, nameTableKind: None)
!1370 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1371 = !{!7}
!1372 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1373, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1374, nameTableKind: None)
!1373 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1374 = !{!7, !239}
!1375 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1376, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1377, nameTableKind: None)
!1376 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1377 = !{!9, !7, !55, !142, !116, !168}
!1378 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1379, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1380, nameTableKind: None)
!1379 = !DIFile(filename: "./lib/root-dev-ino.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1380 = !{!267, !260, !259, !263, !262}
!1381 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1382, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1383, nameTableKind: None)
!1382 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1383 = !{!540, !7}
!1384 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1385, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1386, nameTableKind: None)
!1385 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1386 = !{!116, !55, !142, !9, !7, !139, !260, !263}
!1387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1388, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1371, nameTableKind: None)
!1388 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1389 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1390, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1391, nameTableKind: None)
!1390 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1391 = !{!363, !361}
!1392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1393, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!1393 = !DIFile(filename: "./lib/statat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1394 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1395, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1371, nameTableKind: None)
!1395 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1396 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1397, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1398, nameTableKind: None)
!1397 = !DIFile(filename: "./lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1398 = !{!9, !139, !7, !1223}
!1399 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1400, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1401, nameTableKind: None)
!1400 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1401 = !{!53, !173, !616, !1402, !227, !1403, !176, !993, !223, !327, !1223, !315, !224, !1406, !1220, !330, !369, !55, !1409, !1410, !179, !248, !60, !172, !1420, !1423}
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, elements: !1116)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1632, elements: !1404)
!1404 = !{!1405}
!1405 = !DISubrange(count: 204)
!1406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 352, elements: !1407)
!1407 = !{!1408}
!1408 = !DISubrange(count: 44)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 640, elements: !145)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !296, line: 52, baseType: !1411)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !455, line: 32, baseType: !1412)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1400, line: 231, baseType: !1413)
!1413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1414, size: 192, elements: !38)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1400, line: 189, size: 192, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1414, file: !1400, line: 189, baseType: !70, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1414, file: !1400, line: 189, baseType: !70, size: 32, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1414, file: !1400, line: 189, baseType: !53, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1414, file: !1400, line: 189, baseType: !53, size: 64, offset: 128)
!1420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 520, elements: !1421)
!1421 = !{!1422}
!1422 = !DISubrange(count: 65)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1426)
!1426 = !{!1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1425, file: !4, line: 51, baseType: !7, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1425, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1425, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1425, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1425, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1425, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1425, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1425, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1425, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1425, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1425, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1425, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1425, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1425, file: !4, line: 70, baseType: !1441, size: 64, offset: 832)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1425, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1425, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1425, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1425, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1425, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1425, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1425, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1425, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1425, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1425, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1425, file: !4, line: 93, baseType: !1441, size: 64, offset: 1344)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1425, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1425, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1425, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1425, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1457 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1458, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1459, nameTableKind: None)
!1458 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1459 = !{!55, !9, !53}
!1460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1461, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1462, nameTableKind: None)
!1461 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1462 = !{!617, !139, !188}
!1463 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1464, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1465, nameTableKind: None)
!1464 = !DIFile(filename: "./lib/xfts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1465 = !{!53, !1466, !7, !176, !306, !1548, !1551, !1552, !506}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1065, line: 197, baseType: !1468)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1065, line: 80, size: 1024, elements: !1469)
!1469 = !{!1470, !1516, !1517, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1532, !1533, !1534, !1539}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1468, file: !1065, line: 81, baseType: !1471, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1065, line: 199, size: 2112, elements: !1473)
!1473 = !{!1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1515}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1472, file: !1065, line: 200, baseType: !1471, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1472, file: !1065, line: 201, baseType: !1471, size: 64, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1472, file: !1065, line: 202, baseType: !1471, size: 64, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1472, file: !1065, line: 203, baseType: !541, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1472, file: !1065, line: 206, baseType: !31, size: 64, offset: 256)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1472, file: !1065, line: 207, baseType: !53, size: 64, offset: 320)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1472, file: !1065, line: 208, baseType: !9, size: 64, offset: 384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1472, file: !1065, line: 209, baseType: !9, size: 64, offset: 448)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1472, file: !1065, line: 210, baseType: !7, size: 32, offset: 512)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1472, file: !1065, line: 211, baseType: !7, size: 32, offset: 544)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1472, file: !1065, line: 212, baseType: !55, size: 64, offset: 576)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1472, file: !1065, line: 214, baseType: !1466, size: 64, offset: 640)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1472, file: !1065, line: 218, baseType: !506, size: 64, offset: 704)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1472, file: !1065, line: 220, baseType: !55, size: 64, offset: 768)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1472, file: !1065, line: 225, baseType: !1087, size: 64, offset: 832)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1472, file: !1065, line: 241, baseType: !33, size: 16, offset: 896)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1472, file: !1065, line: 245, baseType: !33, size: 16, offset: 912)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1472, file: !1065, line: 251, baseType: !33, size: 16, offset: 928)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1472, file: !1065, line: 253, baseType: !1493, size: 1152, offset: 960)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 1152, elements: !38)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1512, !1513, !1514}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1494, file: !339, line: 48, baseType: !263, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1494, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1494, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1494, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1494, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1494, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1494, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1494, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1494, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1494, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1494, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1494, file: !339, line: 91, baseType: !1508, size: 128, offset: 576)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1508, file: !358, line: 11, baseType: !361, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1508, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1494, file: !339, line: 92, baseType: !1508, size: 128, offset: 704)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1494, file: !339, line: 93, baseType: !1508, size: 128, offset: 832)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1494, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1472, file: !1065, line: 254, baseType: !1115, offset: 2112)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1468, file: !1065, line: 82, baseType: !1471, size: 64, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1468, file: !1065, line: 83, baseType: !1518, size: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1468, file: !1065, line: 84, baseType: !262, size: 64, offset: 192)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1468, file: !1065, line: 85, baseType: !9, size: 64, offset: 256)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1468, file: !1065, line: 86, baseType: !7, size: 32, offset: 320)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1468, file: !1065, line: 87, baseType: !7, size: 32, offset: 352)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1468, file: !1065, line: 89, baseType: !55, size: 64, offset: 384)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1468, file: !1065, line: 90, baseType: !55, size: 64, offset: 448)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1468, file: !1065, line: 91, baseType: !1526, size: 64, offset: 512)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!7, !1529, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1472)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1468, file: !1065, line: 160, baseType: !7, size: 32, offset: 576)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1468, file: !1065, line: 169, baseType: !1136, size: 64, offset: 640)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1468, file: !1065, line: 191, baseType: !1535, size: 64, offset: 704)
!1535 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1468, file: !1065, line: 171, size: 64, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1535, file: !1065, line: 184, baseType: !1136, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1535, file: !1065, line: 190, baseType: !1143, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1468, file: !1065, line: 196, baseType: !1540, size: 256, offset: 768)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1147, line: 39, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1147, line: 31, size: 256, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1547}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1541, file: !1147, line: 33, baseType: !1151, size: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1541, file: !1147, line: 34, baseType: !7, size: 32, offset: 128)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1541, file: !1147, line: 35, baseType: !70, size: 32, offset: 160)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1541, file: !1147, line: 36, baseType: !70, size: 32, offset: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1541, file: !1147, line: 37, baseType: !142, size: 8, offset: 224)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 624, elements: !1549)
!1549 = !{!1550}
!1550 = !DISubrange(count: 78)
!1551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1467)
!1552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1553)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1065, line: 255, baseType: !1472)
!1554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1555, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1556, nameTableKind: None)
!1555 = !DIFile(filename: "./lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1556 = !{!9, !55, !116, !117, !7, !1557, !10}
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !296, line: 52, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !455, line: 32, baseType: !1559)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1555, line: 36, baseType: !1560)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1561, size: 192, elements: !38)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1555, size: 192, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1561, file: !1555, baseType: !70, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1561, file: !1555, baseType: !70, size: 32, offset: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1561, file: !1555, baseType: !53, size: 64, offset: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1561, file: !1555, baseType: !53, size: 64, offset: 128)
!1567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1568, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1569, nameTableKind: None)
!1568 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1569 = !{!142, !9, !55, !540, !1570}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1572, file: !4, line: 51, baseType: !7, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1572, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1572, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1572, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1572, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1572, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1572, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1572, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1572, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1572, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1572, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1572, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1572, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1572, file: !4, line: 70, baseType: !1588, size: 64, offset: 832)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1572, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1572, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1572, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1572, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1572, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1572, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1572, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1572, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1572, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1572, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1572, file: !4, line: 93, baseType: !1588, size: 64, offset: 1344)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1572, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1572, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1572, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1572, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1605, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1606, nameTableKind: None)
!1605 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1606 = !{!53, !1607, !7}
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1608, file: !4, line: 51, baseType: !7, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1608, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1608, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1608, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1608, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1608, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1608, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1608, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1608, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1608, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1608, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1608, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1608, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1608, file: !4, line: 70, baseType: !1624, size: 64, offset: 832)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1608, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1608, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1608, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1608, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1608, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1608, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1608, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1608, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1608, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1608, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1608, file: !4, line: 93, baseType: !1624, size: 64, offset: 1344)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1608, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1608, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1608, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1608, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1640 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1641, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1642, nameTableKind: None)
!1641 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1642 = !{!1643, !9, !7}
!1643 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1644)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1645)
!1645 = !{!1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1644, file: !4, line: 51, baseType: !7, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1644, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1644, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1644, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1644, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1644, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1644, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1644, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1644, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1644, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1644, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1644, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1644, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1644, file: !4, line: 70, baseType: !1660, size: 64, offset: 832)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1644, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1644, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1644, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1644, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1644, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1644, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1644, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1644, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1644, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1644, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1644, file: !4, line: 93, baseType: !1660, size: 64, offset: 1344)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1644, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1644, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1644, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1644, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1676 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1677, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1678, nameTableKind: None)
!1677 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1678 = !{!53, !1679, !9, !295, !7, !44}
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1680, file: !4, line: 51, baseType: !7, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1680, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1680, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1680, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1680, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1680, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1680, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1680, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1680, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1680, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1680, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1680, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1680, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1680, file: !4, line: 70, baseType: !1696, size: 64, offset: 832)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1680, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1680, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1680, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1680, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1680, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1680, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1680, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1680, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1680, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1680, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1680, file: !4, line: 93, baseType: !1696, size: 64, offset: 1344)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1680, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1680, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1680, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1680, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1712 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1713, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1714, retainedTypes: !1721, nameTableKind: None)
!1713 = !DIFile(filename: "./lib/fts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1714 = !{!1715}
!1715 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "leaf_optimization", file: !1716, line: 643, baseType: !70, size: 32, elements: !1717)
!1716 = !DIFile(filename: "lib/fts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1717 = !{!1718, !1719, !1720}
!1718 = !DIEnumerator(name: "NO_LEAF_OPTIMIZATION", value: 0, isUnsigned: true)
!1719 = !DIEnumerator(name: "OK_LEAF_OPTIMIZATION", value: 1, isUnsigned: true)
!1720 = !DIEnumerator(name: "NOSTAT_LEAF_OPTIMIZATION", value: 2, isUnsigned: true)
!1721 = !{!53, !1087, !486, !9, !31, !865, !1722, !1741, !1819, !55, !142, !7, !1742, !1756, !267, !1062, !37, !1725, !506, !116, !1729, !1115, !33, !1748, !1136, !1796, !263, !262, !541, !10, !29, !168, !139, !1765, !1820, !259, !1828, !1829, !260, !1724, !1831, !1833, !1840, !1838, !1839, !1841, !1843, !336, !1844, !503, !450, !239, !1759, !1852, !1853}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1065, line: 255, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1065, line: 199, size: 2112, elements: !1727)
!1727 = !{!1728, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1818}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1726, file: !1065, line: 200, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1726, file: !1065, line: 201, baseType: !1729, size: 64, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1726, file: !1065, line: 202, baseType: !1729, size: 64, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1726, file: !1065, line: 203, baseType: !541, size: 64, offset: 192)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1726, file: !1065, line: 206, baseType: !31, size: 64, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1726, file: !1065, line: 207, baseType: !53, size: 64, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1726, file: !1065, line: 208, baseType: !9, size: 64, offset: 384)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1726, file: !1065, line: 209, baseType: !9, size: 64, offset: 448)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1726, file: !1065, line: 210, baseType: !7, size: 32, offset: 512)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1726, file: !1065, line: 211, baseType: !7, size: 32, offset: 544)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1726, file: !1065, line: 212, baseType: !55, size: 64, offset: 576)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1726, file: !1065, line: 214, baseType: !1741, size: 64, offset: 640)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1065, line: 197, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1065, line: 80, size: 1024, elements: !1744)
!1744 = !{!1745, !1746, !1747, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1762, !1763, !1764, !1780}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1743, file: !1065, line: 81, baseType: !1729, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1743, file: !1065, line: 82, baseType: !1729, size: 64, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1743, file: !1065, line: 83, baseType: !1748, size: 64, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1743, file: !1065, line: 84, baseType: !262, size: 64, offset: 192)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1743, file: !1065, line: 85, baseType: !9, size: 64, offset: 256)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1743, file: !1065, line: 86, baseType: !7, size: 32, offset: 320)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1743, file: !1065, line: 87, baseType: !7, size: 32, offset: 352)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1743, file: !1065, line: 89, baseType: !55, size: 64, offset: 384)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1743, file: !1065, line: 90, baseType: !55, size: 64, offset: 448)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1743, file: !1065, line: 91, baseType: !1756, size: 64, offset: 512)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!7, !1759, !1759}
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1726)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1743, file: !1065, line: 160, baseType: !7, size: 32, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1743, file: !1065, line: 169, baseType: !1136, size: 64, offset: 640)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1743, file: !1065, line: 191, baseType: !1765, size: 64, offset: 704)
!1765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1743, file: !1065, line: 171, size: 64, elements: !1766)
!1766 = !{!1767, !1768}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1765, file: !1065, line: 184, baseType: !1136, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1765, file: !1065, line: 190, baseType: !1769, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1771, line: 28, size: 256, elements: !1772)
!1771 = !DIFile(filename: "./lib/cycle-check.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1772 = !{!1773, !1778, !1779}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !1770, file: !1771, line: 30, baseType: !1774, size: 128)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !256, line: 7, size: 128, elements: !1775)
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1774, file: !256, line: 9, baseType: !259, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1774, file: !256, line: 10, baseType: !262, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !1770, file: !1771, line: 31, baseType: !486, size: 64, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1770, file: !1771, line: 32, baseType: !7, size: 32, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1743, file: !1065, line: 196, baseType: !1781, size: 256, offset: 768)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1147, line: 39, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1147, line: 31, size: 256, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1782, file: !1147, line: 33, baseType: !1151, size: 128)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1782, file: !1147, line: 34, baseType: !7, size: 32, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1782, file: !1147, line: 35, baseType: !70, size: 32, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1782, file: !1147, line: 36, baseType: !70, size: 32, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1782, file: !1147, line: 37, baseType: !142, size: 8, offset: 224)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1726, file: !1065, line: 218, baseType: !506, size: 64, offset: 704)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1726, file: !1065, line: 220, baseType: !55, size: 64, offset: 768)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1726, file: !1065, line: 225, baseType: !1087, size: 64, offset: 832)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1726, file: !1065, line: 241, baseType: !33, size: 16, offset: 896)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1726, file: !1065, line: 245, baseType: !33, size: 16, offset: 912)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1726, file: !1065, line: 251, baseType: !33, size: 16, offset: 928)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1726, file: !1065, line: 253, baseType: !1796, size: 1152, offset: 960)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1797, size: 1152, elements: !38)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1815, !1816, !1817}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1797, file: !339, line: 48, baseType: !263, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1797, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1797, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1797, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1797, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1797, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1797, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1797, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1797, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1797, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1797, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1797, file: !339, line: 91, baseType: !1811, size: 128, offset: 576)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !1812)
!1812 = !{!1813, !1814}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1811, file: !358, line: 11, baseType: !361, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1811, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1797, file: !339, line: 92, baseType: !1811, size: 128, offset: 704)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1797, file: !339, line: 93, baseType: !1811, size: 128, offset: 832)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1797, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1726, file: !1065, line: 254, baseType: !1115, offset: 2112)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !1823, line: 24, size: 192, elements: !1824)
!1823 = !DIFile(filename: "./lib/fts-cycle.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1824 = !{!1825, !1826, !1827}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1822, file: !1823, line: 26, baseType: !262, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1822, file: !1823, line: 27, baseType: !259, size: 64, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !1822, file: !1823, line: 28, baseType: !1819, size: 64, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1742)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1797)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !243, line: 69, baseType: !1137)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_type", file: !1716, line: 677, size: 128, elements: !1835)
!1835 = !{!1836, !1837}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1834, file: !1716, line: 679, baseType: !262, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !1834, file: !1716, line: 680, baseType: !1838, size: 64, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsword", file: !1716, line: 671, baseType: !1839)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !30, line: 191, baseType: !31)
!1840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1796)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1834)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !547, line: 22, size: 2240, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1845, file: !547, line: 25, baseType: !260, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1845, file: !547, line: 26, baseType: !29, size: 64, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1845, file: !547, line: 31, baseType: !33, size: 16, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1845, file: !547, line: 32, baseType: !450, size: 8, offset: 144)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1845, file: !547, line: 33, baseType: !503, size: 2048, offset: 152)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1854 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1855, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1856, nameTableKind: None)
!1855 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1856 = !{!55, !822, !450, !117}
!1857 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1858, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1859, nameTableKind: None)
!1858 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1859 = !{!1860, !7, !1864, !1865}
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_entry_t", file: !1861, line: 41, baseType: !1862)
!1861 = !DIFile(filename: "/usr/include/sys/acl.h", directory: "")
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_entry_ext", file: !1861, line: 33, flags: DIFlagFwdDecl)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_tag_t", file: !1861, line: 37, baseType: !7)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_t", file: !1861, line: 40, baseType: !1866)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_ext", file: !1861, line: 32, flags: DIFlagFwdDecl)
!1868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1869, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1870, nameTableKind: None)
!1869 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1870 = !{!53, !239, !1865, !7}
!1871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1872, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1873, nameTableKind: None)
!1872 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1873 = !{!53, !142, !7, !239, !1865}
!1874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1875, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!1875 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1876 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1877, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1878, nameTableKind: None)
!1877 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1878 = !{!448, !450, !449}
!1879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1880, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1881, nameTableKind: None)
!1880 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1881 = !{!1882, !7}
!1882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!1883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1884, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1885, nameTableKind: None)
!1884 = !DIFile(filename: "./lib/cycle-check.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1885 = !{!486, !7, !147, !1269, !1886, !260, !259, !263, !262}
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 536, elements: !1887)
!1887 = !{!1888}
!1888 = !DISubrange(count: 67)
!1889 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1890, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1891, nameTableKind: None)
!1890 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1891 = !{!541, !7}
!1892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1893, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!1893 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1895, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1896, nameTableKind: None)
!1895 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1896 = !{!142, !116, !267, !825}
!1897 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1898, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1899, nameTableKind: None)
!1898 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1899 = !{!116, !55, !117}
!1900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1901, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1902, nameTableKind: None)
!1901 = !DIFile(filename: "./lib/i-ring.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1902 = !{!7, !1903, !142, !70, !1151, !1911}
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1147, line: 39, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1147, line: 31, size: 256, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909, !1910}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1904, file: !1147, line: 33, baseType: !1151, size: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1904, file: !1147, line: 34, baseType: !7, size: 32, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1904, file: !1147, line: 35, baseType: !70, size: 32, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1904, file: !1147, line: 36, baseType: !70, size: 32, offset: 192)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1904, file: !1147, line: 37, baseType: !142, size: 8, offset: 224)
!1911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1913, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1914, nameTableKind: None)
!1913 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1914 = !{!53, !116, !37, !825}
!1915 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1916, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1917, nameTableKind: None)
!1916 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1917 = !{!239, !1918}
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !455, line: 14, baseType: !1919)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1916, line: 35, baseType: !1920)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1921, size: 192, elements: !38)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1916, line: 35, size: 192, elements: !1922)
!1922 = !{!1923, !1924, !1925, !1926}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1921, file: !1916, line: 35, baseType: !70, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1921, file: !1916, line: 35, baseType: !70, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1921, file: !1916, line: 35, baseType: !53, size: 64, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1921, file: !1916, line: 35, baseType: !53, size: 64, offset: 128)
!1927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1928, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1929, nameTableKind: None)
!1928 = !DIFile(filename: "./lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1929 = !{!1930, !1935, !1939, !55, !1941, !7}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1932, line: 54, size: 192, elements: !1933)
!1932 = !DIFile(filename: "lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1933 = !{!1934, !1938, !1940}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1931, file: !1932, line: 57, baseType: !1935, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1937, line: 25, flags: DIFlagFwdDecl)
!1937 = !DIFile(filename: "./lib/randread.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !1931, file: !1932, line: 64, baseType: !1939, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !890, line: 30, baseType: !486)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !1931, file: !1932, line: 65, baseType: !1939, size: 64, offset: 128)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 64, elements: !373)
!1942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1943, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1944, nameTableKind: None)
!1943 = !DIFile(filename: "./lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1944 = !{!55, !1945, !1979, !139, !1993, !2005, !1985, !709, !617, !7, !176, !321, !9, !540, !150, !10, !2020, !451, !450, !2017, !2022, !2006}
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1947, file: !4, line: 51, baseType: !7, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1947, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1947, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1947, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1947, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1947, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1947, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1947, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1947, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1947, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1947, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1947, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1947, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1947, file: !4, line: 70, baseType: !1963, size: 64, offset: 832)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1947, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1947, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1947, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1947, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1947, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1947, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1947, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1947, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1947, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1947, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1947, file: !4, line: 93, baseType: !1963, size: 64, offset: 1344)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1947, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1947, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1947, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1947, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !1981, line: 79, size: 33216, elements: !1982)
!1981 = !DIFile(filename: "lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1982 = !{!1983, !1984, !1988, !1989}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1980, file: !1981, line: 83, baseType: !1945, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1980, file: !1981, line: 90, baseType: !1985, size: 64, offset: 64)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DISubroutineType(types: !1987)
!1987 = !{null, !709}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !1980, file: !1981, line: 91, baseType: !709, size: 64, offset: 128)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1980, file: !1981, line: 117, baseType: !1990, size: 33024, offset: 192)
!1990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1980, file: !1981, line: 96, size: 33024, elements: !1991)
!1991 = !{!1992, !1996}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !1990, file: !1981, line: 99, baseType: !1993, size: 32768)
!1993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32768, elements: !1994)
!1994 = !{!1995}
!1995 = !DISubrange(count: 4096)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !1990, file: !1981, line: 116, baseType: !1997, size: 33024)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !1981, line: 102, size: 33024, elements: !1998)
!1998 = !{!1999, !2000, !2012}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !1997, file: !1981, line: 105, baseType: !55, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1997, file: !1981, line: 108, baseType: !2001, size: 16576, offset: 64)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2002, line: 56, size: 16576, elements: !2003)
!2002 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2003 = !{!2004, !2009, !2010, !2011}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2001, file: !2002, line: 58, baseType: !2005, size: 16384)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2006, size: 16384, elements: !504)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2002, line: 44, baseType: !2007)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !487, line: 52, baseType: !2008)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !30, line: 59, baseType: !1243)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2001, file: !2002, line: 59, baseType: !2006, size: 64, offset: 16384)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2001, file: !2002, line: 59, baseType: !2006, size: 64, offset: 16448)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2001, file: !2002, line: 59, baseType: !2006, size: 64, offset: 16512)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1997, file: !1981, line: 115, baseType: !2013, size: 16384, offset: 16640)
!2013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1997, file: !1981, line: 111, size: 16384, elements: !2014)
!2014 = !{!2015, !2016}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2013, file: !1981, line: 113, baseType: !2005, size: 16384)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2013, file: !1981, line: 114, baseType: !2017, size: 16384)
!2017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 16384, elements: !2018)
!2018 = !{!2019}
!2019 = !DISubrange(count: 2048)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !240, line: 97, baseType: !2021)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !30, line: 154, baseType: !7)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2023 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2024, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !2025, nameTableKind: None)
!2024 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2025 = !{!2006, !2022, !2005, !7, !709, !116, !117, !2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2006)
!2028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2029, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!2029 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2030 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2031, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1291, nameTableKind: None)
!2031 = !DIFile(filename: "./lib/xsize.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2032 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2033, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !1371, nameTableKind: None)
!2033 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2034 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2035, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!2035 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2037, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, nameTableKind: None)
!2037 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2039, producer: "clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !216, retainedTypes: !2040, nameTableKind: None)
!2039 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2040 = !{!2041, !7}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2043, file: !4, line: 51, baseType: !7, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2043, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2043, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2043, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2043, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2043, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2043, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2043, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2043, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2043, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2043, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2043, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2043, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2043, file: !4, line: 70, baseType: !2059, size: 64, offset: 832)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2043, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2043, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2043, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2043, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2043, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2043, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2043, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2043, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2043, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2043, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2043, file: !4, line: 93, baseType: !2059, size: 64, offset: 1344)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2043, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2043, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2043, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2043, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2075 = !{!"clang version 9.0.0 (https://github.com/mbarbar/tir-clang d012922f3e8c9bc45ccedab14991e1215aab9113)"}
!2076 = !{i32 2, !"ctir", i32 1}
!2077 = !{i32 2, !"Dwarf Version", i32 4}
!2078 = !{i32 2, !"Debug Info Version", i32 3}
!2079 = !{i32 1, !"wchar_size", i32 4}
!2080 = distinct !DISubprogram(name: "usage", scope: !66, file: !66, line: 286, type: !2081, scopeLine: 287, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !7}
!2083 = !DILocalVariable(name: "status", arg: 1, scope: !2080, file: !66, line: 286, type: !7)
!2084 = !DILocation(line: 286, column: 12, scope: !2080)
!2085 = !DILocation(line: 288, column: 7, scope: !2086)
!2086 = distinct !DILexicalBlock(scope: !2080, file: !66, line: 288, column: 7)
!2087 = !DILocation(line: 288, column: 14, scope: !2086)
!2088 = !DILocation(line: 288, column: 7, scope: !2080)
!2089 = !DILocation(line: 289, column: 5, scope: !2086)
!2090 = !DILocation(line: 289, column: 5, scope: !2091)
!2091 = distinct !DILexicalBlock(scope: !2086, file: !66, line: 289, column: 5)
!2092 = !DILocation(line: 292, column: 15, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2086, file: !66, line: 291, column: 5)
!2094 = !DILocation(line: 297, column: 15, scope: !2093)
!2095 = !DILocation(line: 297, column: 29, scope: !2093)
!2096 = !DILocation(line: 297, column: 43, scope: !2093)
!2097 = !DILocation(line: 292, column: 7, scope: !2093)
!2098 = !DILocation(line: 298, column: 7, scope: !2093)
!2099 = !DILocation(line: 302, column: 7, scope: !2093)
!2100 = !DILocation(line: 304, column: 7, scope: !2093)
!2101 = !DILocation(line: 313, column: 7, scope: !2093)
!2102 = !DILocation(line: 318, column: 7, scope: !2093)
!2103 = !DILocation(line: 328, column: 7, scope: !2093)
!2104 = !DILocation(line: 329, column: 7, scope: !2093)
!2105 = !DILocation(line: 330, column: 7, scope: !2093)
!2106 = !DILocation(line: 331, column: 7, scope: !2093)
!2107 = !DILocation(line: 333, column: 9, scope: !2080)
!2108 = !DILocation(line: 333, column: 3, scope: !2080)
!2109 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !212, file: !212, line: 585, type: !571, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2110 = !DILocation(line: 587, column: 3, scope: !2109)
!2111 = !DILocation(line: 590, column: 1, scope: !2109)
!2112 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !212, file: !212, line: 613, type: !571, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2113 = !DILocation(line: 615, column: 3, scope: !2112)
!2114 = !DILocation(line: 622, column: 3, scope: !2112)
!2115 = !DILocation(line: 628, column: 1, scope: !2112)
!2116 = !DILocalVariable(name: "program", arg: 1, scope: !213, file: !212, line: 631, type: !116)
!2117 = !DILocation(line: 631, column: 34, scope: !213)
!2118 = !DILocalVariable(name: "infomap", scope: !213, file: !212, line: 633, type: !209)
!2119 = !DILocation(line: 633, column: 67, scope: !213)
!2120 = !DILocalVariable(name: "node", scope: !213, file: !212, line: 643, type: !116)
!2121 = !DILocation(line: 643, column: 15, scope: !213)
!2122 = !DILocation(line: 643, column: 22, scope: !213)
!2123 = !DILocalVariable(name: "map_prog", scope: !213, file: !212, line: 644, type: !222)
!2124 = !DILocation(line: 644, column: 25, scope: !213)
!2125 = !DILocation(line: 644, column: 36, scope: !213)
!2126 = !DILocation(line: 646, column: 3, scope: !213)
!2127 = !DILocation(line: 646, column: 10, scope: !213)
!2128 = !DILocation(line: 646, column: 20, scope: !213)
!2129 = !DILocation(line: 646, column: 28, scope: !213)
!2130 = !DILocation(line: 646, column: 33, scope: !213)
!2131 = !DILocation(line: 646, column: 31, scope: !213)
!2132 = !DILocation(line: 0, scope: !213)
!2133 = !DILocation(line: 647, column: 13, scope: !213)
!2134 = distinct !{!2134, !2126, !2133}
!2135 = !DILocation(line: 649, column: 7, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !213, file: !212, line: 649, column: 7)
!2137 = !DILocation(line: 649, column: 17, scope: !2136)
!2138 = !DILocation(line: 649, column: 7, scope: !213)
!2139 = !DILocation(line: 650, column: 12, scope: !2136)
!2140 = !DILocation(line: 650, column: 22, scope: !2136)
!2141 = !DILocation(line: 650, column: 10, scope: !2136)
!2142 = !DILocation(line: 650, column: 5, scope: !2136)
!2143 = !DILocation(line: 652, column: 11, scope: !213)
!2144 = !DILocation(line: 652, column: 3, scope: !213)
!2145 = !DILocalVariable(name: "lc_messages", scope: !213, file: !212, line: 656, type: !116)
!2146 = !DILocation(line: 656, column: 15, scope: !213)
!2147 = !DILocation(line: 656, column: 29, scope: !213)
!2148 = !DILocation(line: 657, column: 7, scope: !2149)
!2149 = distinct !DILexicalBlock(scope: !213, file: !212, line: 657, column: 7)
!2150 = !DILocation(line: 657, column: 19, scope: !2149)
!2151 = !DILocation(line: 657, column: 22, scope: !2149)
!2152 = !DILocation(line: 657, column: 7, scope: !213)
!2153 = !DILocation(line: 663, column: 7, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2149, file: !212, line: 658, column: 5)
!2155 = !DILocation(line: 665, column: 5, scope: !2154)
!2156 = !DILocation(line: 666, column: 11, scope: !213)
!2157 = !DILocation(line: 667, column: 24, scope: !213)
!2158 = !DILocation(line: 666, column: 3, scope: !213)
!2159 = !DILocation(line: 668, column: 11, scope: !213)
!2160 = !DILocation(line: 669, column: 11, scope: !213)
!2161 = !DILocation(line: 669, column: 17, scope: !213)
!2162 = !DILocation(line: 669, column: 25, scope: !213)
!2163 = !DILocation(line: 669, column: 22, scope: !213)
!2164 = !DILocation(line: 668, column: 3, scope: !213)
!2165 = !DILocation(line: 670, column: 1, scope: !213)
!2166 = distinct !DISubprogram(name: "main", scope: !66, file: !66, line: 337, type: !2167, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!7, !7, !143}
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !2170)
!2170 = !{!2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !2169, file: !77, line: 100, baseType: !68, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !2169, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !2169, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !2169, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2169, file: !77, line: 115, baseType: !239, size: 32, offset: 128)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !2169, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !2169, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !2169, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !2169, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !2169, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !2169, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !2169, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !2169, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !2169, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !2169, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !2169, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !2169, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !2169, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !2169, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !2169, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !2169, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !2169, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !2169, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !2169, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !2169, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !2169, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !2169, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !2169, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !2169, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !2169, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !2169, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !2169, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !2169, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !2169, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !2169, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !2169, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !2169, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !2169, file: !77, line: 273, baseType: !241, size: 64, offset: 512)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !2169, file: !77, line: 276, baseType: !241, size: 64, offset: 576)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2228, !2229, !2230}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2210, file: !339, line: 48, baseType: !263, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2210, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2210, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2210, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2210, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2210, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2210, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2210, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2210, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2210, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2210, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2210, file: !339, line: 91, baseType: !2224, size: 128, offset: 576)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !2225)
!2225 = !{!2226, !2227}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2224, file: !358, line: 11, baseType: !361, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2224, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2210, file: !339, line: 92, baseType: !2224, size: 128, offset: 704)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2210, file: !339, line: 93, baseType: !2224, size: 128, offset: 832)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2210, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!2231 = !DILocalVariable(name: "argc", arg: 1, scope: !2166, file: !66, line: 337, type: !7)
!2232 = !DILocation(line: 337, column: 11, scope: !2166)
!2233 = !DILocalVariable(name: "argv", arg: 2, scope: !2166, file: !66, line: 337, type: !143)
!2234 = !DILocation(line: 337, column: 24, scope: !2166)
!2235 = !DILocalVariable(name: "c", scope: !2166, file: !66, line: 339, type: !7)
!2236 = !DILocation(line: 339, column: 7, scope: !2166)
!2237 = !DILocalVariable(name: "ok", scope: !2166, file: !66, line: 340, type: !142)
!2238 = !DILocation(line: 340, column: 8, scope: !2166)
!2239 = !DILocalVariable(name: "make_backups", scope: !2166, file: !66, line: 341, type: !142)
!2240 = !DILocation(line: 341, column: 8, scope: !2166)
!2241 = !DILocalVariable(name: "backup_suffix", scope: !2166, file: !66, line: 342, type: !116)
!2242 = !DILocation(line: 342, column: 15, scope: !2166)
!2243 = !DILocalVariable(name: "version_control_string", scope: !2166, file: !66, line: 343, type: !9)
!2244 = !DILocation(line: 343, column: 9, scope: !2166)
!2245 = !DILocalVariable(name: "x", scope: !2166, file: !66, line: 344, type: !2169)
!2246 = !DILocation(line: 344, column: 21, scope: !2166)
!2247 = !DILocalVariable(name: "target_directory", scope: !2166, file: !66, line: 345, type: !9)
!2248 = !DILocation(line: 345, column: 9, scope: !2166)
!2249 = !DILocalVariable(name: "no_target_directory", scope: !2166, file: !66, line: 346, type: !142)
!2250 = !DILocation(line: 346, column: 8, scope: !2166)
!2251 = !DILocalVariable(name: "n_files", scope: !2166, file: !66, line: 347, type: !7)
!2252 = !DILocation(line: 347, column: 7, scope: !2166)
!2253 = !DILocalVariable(name: "file", scope: !2166, file: !66, line: 348, type: !143)
!2254 = !DILocation(line: 348, column: 10, scope: !2166)
!2255 = !DILocalVariable(name: "selinux_enabled", scope: !2166, file: !66, line: 349, type: !142)
!2256 = !DILocation(line: 349, column: 8, scope: !2166)
!2257 = !DILocation(line: 352, column: 21, scope: !2166)
!2258 = !DILocation(line: 352, column: 3, scope: !2166)
!2259 = !DILocation(line: 353, column: 3, scope: !2166)
!2260 = !DILocation(line: 354, column: 3, scope: !2166)
!2261 = !DILocation(line: 355, column: 3, scope: !2166)
!2262 = !DILocation(line: 357, column: 3, scope: !2166)
!2263 = !DILocation(line: 359, column: 3, scope: !2166)
!2264 = !DILocation(line: 362, column: 3, scope: !2166)
!2265 = !DILocation(line: 364, column: 3, scope: !2166)
!2266 = !DILocation(line: 364, column: 28, scope: !2166)
!2267 = !DILocation(line: 364, column: 34, scope: !2166)
!2268 = !DILocation(line: 364, column: 15, scope: !2166)
!2269 = !DILocation(line: 364, column: 13, scope: !2166)
!2270 = !DILocation(line: 365, column: 10, scope: !2166)
!2271 = !DILocation(line: 367, column: 15, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2166, file: !66, line: 366, column: 5)
!2273 = !DILocation(line: 367, column: 7, scope: !2272)
!2274 = !DILocation(line: 370, column: 24, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2272, file: !66, line: 368, column: 9)
!2276 = !DILocation(line: 371, column: 15, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2275, file: !66, line: 371, column: 15)
!2278 = !DILocation(line: 371, column: 15, scope: !2275)
!2279 = !DILocation(line: 372, column: 38, scope: !2277)
!2280 = !DILocation(line: 372, column: 36, scope: !2277)
!2281 = !DILocation(line: 372, column: 13, scope: !2277)
!2282 = !DILocation(line: 373, column: 11, scope: !2275)
!2283 = !DILocation(line: 375, column: 13, scope: !2275)
!2284 = !DILocation(line: 375, column: 25, scope: !2275)
!2285 = !DILocation(line: 376, column: 11, scope: !2275)
!2286 = !DILocation(line: 378, column: 13, scope: !2275)
!2287 = !DILocation(line: 378, column: 25, scope: !2275)
!2288 = !DILocation(line: 379, column: 11, scope: !2275)
!2289 = !DILocation(line: 381, column: 13, scope: !2275)
!2290 = !DILocation(line: 381, column: 25, scope: !2275)
!2291 = !DILocation(line: 382, column: 11, scope: !2275)
!2292 = !DILocation(line: 384, column: 35, scope: !2275)
!2293 = !DILocation(line: 385, column: 11, scope: !2275)
!2294 = !DILocation(line: 387, column: 15, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2275, file: !66, line: 387, column: 15)
!2296 = !DILocation(line: 387, column: 15, scope: !2275)
!2297 = !DILocation(line: 388, column: 13, scope: !2295)
!2298 = !DILocalVariable(name: "st", scope: !2299, file: !66, line: 391, type: !2210)
!2299 = distinct !DILexicalBlock(scope: !2295, file: !66, line: 390, column: 13)
!2300 = !DILocation(line: 391, column: 27, scope: !2299)
!2301 = !DILocation(line: 392, column: 25, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2299, file: !66, line: 392, column: 19)
!2303 = !DILocation(line: 392, column: 19, scope: !2302)
!2304 = !DILocation(line: 392, column: 38, scope: !2302)
!2305 = !DILocation(line: 392, column: 19, scope: !2299)
!2306 = !DILocation(line: 393, column: 17, scope: !2302)
!2307 = !DILocation(line: 395, column: 21, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2299, file: !66, line: 395, column: 19)
!2309 = !DILocation(line: 395, column: 19, scope: !2299)
!2310 = !DILocation(line: 396, column: 17, scope: !2308)
!2311 = !DILocation(line: 399, column: 30, scope: !2275)
!2312 = !DILocation(line: 399, column: 28, scope: !2275)
!2313 = !DILocation(line: 400, column: 11, scope: !2275)
!2314 = !DILocation(line: 402, column: 31, scope: !2275)
!2315 = !DILocation(line: 403, column: 11, scope: !2275)
!2316 = !DILocation(line: 405, column: 13, scope: !2275)
!2317 = !DILocation(line: 405, column: 20, scope: !2275)
!2318 = !DILocation(line: 406, column: 11, scope: !2275)
!2319 = !DILocation(line: 408, column: 13, scope: !2275)
!2320 = !DILocation(line: 408, column: 21, scope: !2275)
!2321 = !DILocation(line: 409, column: 11, scope: !2275)
!2322 = !DILocation(line: 411, column: 24, scope: !2275)
!2323 = !DILocation(line: 412, column: 27, scope: !2275)
!2324 = !DILocation(line: 412, column: 25, scope: !2275)
!2325 = !DILocation(line: 413, column: 11, scope: !2275)
!2326 = !DILocation(line: 417, column: 15, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2275, file: !66, line: 417, column: 15)
!2328 = !DILocation(line: 417, column: 15, scope: !2275)
!2329 = !DILocation(line: 419, column: 17, scope: !2330)
!2330 = distinct !DILexicalBlock(scope: !2327, file: !66, line: 418, column: 13)
!2331 = !DILocation(line: 419, column: 43, scope: !2330)
!2332 = !DILocation(line: 420, column: 17, scope: !2330)
!2333 = !DILocation(line: 420, column: 38, scope: !2330)
!2334 = !DILocation(line: 421, column: 13, scope: !2330)
!2335 = !DILocation(line: 422, column: 11, scope: !2275)
!2336 = !DILocation(line: 423, column: 9, scope: !2275)
!2337 = !DILocation(line: 424, column: 9, scope: !2275)
!2338 = !DILocation(line: 426, column: 11, scope: !2275)
!2339 = distinct !{!2339, !2265, !2340}
!2340 = !DILocation(line: 428, column: 5, scope: !2166)
!2341 = !DILocation(line: 430, column: 13, scope: !2166)
!2342 = !DILocation(line: 430, column: 20, scope: !2166)
!2343 = !DILocation(line: 430, column: 18, scope: !2166)
!2344 = !DILocation(line: 430, column: 11, scope: !2166)
!2345 = !DILocation(line: 431, column: 10, scope: !2166)
!2346 = !DILocation(line: 431, column: 17, scope: !2166)
!2347 = !DILocation(line: 431, column: 15, scope: !2166)
!2348 = !DILocation(line: 431, column: 8, scope: !2166)
!2349 = !DILocation(line: 433, column: 7, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2166, file: !66, line: 433, column: 7)
!2351 = !DILocation(line: 433, column: 19, scope: !2350)
!2352 = !DILocation(line: 433, column: 18, scope: !2350)
!2353 = !DILocation(line: 433, column: 15, scope: !2350)
!2354 = !DILocation(line: 433, column: 7, scope: !2166)
!2355 = !DILocation(line: 435, column: 11, scope: !2356)
!2356 = distinct !DILexicalBlock(scope: !2357, file: !66, line: 435, column: 11)
!2357 = distinct !DILexicalBlock(scope: !2350, file: !66, line: 434, column: 5)
!2358 = !DILocation(line: 435, column: 19, scope: !2356)
!2359 = !DILocation(line: 435, column: 11, scope: !2357)
!2360 = !DILocation(line: 436, column: 22, scope: !2356)
!2361 = !DILocation(line: 436, column: 9, scope: !2356)
!2362 = !DILocation(line: 438, column: 22, scope: !2356)
!2363 = !DILocation(line: 439, column: 16, scope: !2356)
!2364 = !DILocation(line: 438, column: 9, scope: !2356)
!2365 = !DILocation(line: 440, column: 7, scope: !2357)
!2366 = !DILocation(line: 443, column: 7, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2166, file: !66, line: 443, column: 7)
!2368 = !DILocation(line: 443, column: 7, scope: !2166)
!2369 = !DILocation(line: 445, column: 11, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2371, file: !66, line: 445, column: 11)
!2371 = distinct !DILexicalBlock(scope: !2367, file: !66, line: 444, column: 5)
!2372 = !DILocation(line: 445, column: 11, scope: !2371)
!2373 = !DILocation(line: 446, column: 9, scope: !2370)
!2374 = !DILocation(line: 449, column: 15, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2371, file: !66, line: 449, column: 11)
!2376 = !DILocation(line: 449, column: 13, scope: !2375)
!2377 = !DILocation(line: 449, column: 11, scope: !2371)
!2378 = !DILocation(line: 451, column: 24, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2375, file: !66, line: 450, column: 9)
!2380 = !DILocation(line: 451, column: 47, scope: !2379)
!2381 = !DILocation(line: 451, column: 11, scope: !2379)
!2382 = !DILocation(line: 452, column: 11, scope: !2379)
!2383 = !DILocation(line: 454, column: 5, scope: !2371)
!2384 = !DILocation(line: 455, column: 13, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2367, file: !66, line: 455, column: 12)
!2386 = !DILocation(line: 455, column: 12, scope: !2367)
!2387 = !DILocation(line: 457, column: 7, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2389, file: !66, line: 457, column: 7)
!2389 = distinct !DILexicalBlock(scope: !2390, file: !66, line: 457, column: 7)
!2390 = distinct !DILexicalBlock(scope: !2385, file: !66, line: 456, column: 5)
!2391 = !DILocation(line: 457, column: 7, scope: !2389)
!2392 = !DILocation(line: 458, column: 11, scope: !2393)
!2393 = distinct !DILexicalBlock(scope: !2390, file: !66, line: 458, column: 11)
!2394 = !DILocation(line: 458, column: 19, scope: !2393)
!2395 = !DILocation(line: 458, column: 11, scope: !2390)
!2396 = !DILocation(line: 459, column: 48, scope: !2393)
!2397 = !DILocation(line: 459, column: 67, scope: !2393)
!2398 = !DILocation(line: 459, column: 27, scope: !2393)
!2399 = !DILocation(line: 461, column: 29, scope: !2393)
!2400 = !DILocation(line: 459, column: 11, scope: !2393)
!2401 = !DILocation(line: 459, column: 24, scope: !2393)
!2402 = !DILocation(line: 459, column: 9, scope: !2393)
!2403 = !DILocation(line: 462, column: 13, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2390, file: !66, line: 462, column: 11)
!2405 = !DILocation(line: 462, column: 26, scope: !2404)
!2406 = !DILocation(line: 462, column: 31, scope: !2404)
!2407 = !DILocation(line: 462, column: 60, scope: !2404)
!2408 = !DILocation(line: 462, column: 65, scope: !2404)
!2409 = !DILocation(line: 462, column: 73, scope: !2404)
!2410 = !DILocation(line: 462, column: 34, scope: !2404)
!2411 = !DILocation(line: 462, column: 11, scope: !2390)
!2412 = !DILocation(line: 464, column: 13, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2404, file: !66, line: 463, column: 9)
!2414 = !DILocation(line: 464, column: 26, scope: !2413)
!2415 = !DILocation(line: 465, column: 30, scope: !2413)
!2416 = !DILocation(line: 465, column: 35, scope: !2413)
!2417 = !DILocation(line: 465, column: 28, scope: !2413)
!2418 = !DILocation(line: 466, column: 9, scope: !2413)
!2419 = !DILocation(line: 467, column: 20, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2404, file: !66, line: 467, column: 16)
!2421 = !DILocation(line: 467, column: 18, scope: !2420)
!2422 = !DILocation(line: 467, column: 16, scope: !2404)
!2423 = !DILocation(line: 468, column: 9, scope: !2420)
!2424 = !DILocation(line: 470, column: 5, scope: !2390)
!2425 = !DILocation(line: 472, column: 9, scope: !2426)
!2426 = distinct !DILexicalBlock(scope: !2166, file: !66, line: 472, column: 7)
!2427 = !DILocation(line: 472, column: 21, scope: !2426)
!2428 = !DILocation(line: 472, column: 7, scope: !2166)
!2429 = !DILocation(line: 473, column: 7, scope: !2426)
!2430 = !DILocation(line: 473, column: 14, scope: !2426)
!2431 = !DILocation(line: 473, column: 5, scope: !2426)
!2432 = !DILocation(line: 475, column: 7, scope: !2433)
!2433 = distinct !DILexicalBlock(scope: !2166, file: !66, line: 475, column: 7)
!2434 = !DILocation(line: 475, column: 20, scope: !2433)
!2435 = !DILocation(line: 475, column: 25, scope: !2433)
!2436 = !DILocation(line: 475, column: 37, scope: !2433)
!2437 = !DILocation(line: 475, column: 7, scope: !2166)
!2438 = !DILocation(line: 478, column: 14, scope: !2439)
!2439 = distinct !DILexicalBlock(scope: !2433, file: !66, line: 476, column: 5)
!2440 = !DILocation(line: 477, column: 7, scope: !2439)
!2441 = !DILocation(line: 479, column: 7, scope: !2439)
!2442 = !DILocation(line: 482, column: 20, scope: !2166)
!2443 = !DILocation(line: 483, column: 36, scope: !2166)
!2444 = !DILocation(line: 484, column: 36, scope: !2166)
!2445 = !DILocation(line: 483, column: 22, scope: !2166)
!2446 = !DILocation(line: 482, column: 5, scope: !2166)
!2447 = !DILocation(line: 482, column: 17, scope: !2166)
!2448 = !DILocation(line: 486, column: 29, scope: !2166)
!2449 = !DILocation(line: 486, column: 3, scope: !2166)
!2450 = !DILocation(line: 488, column: 3, scope: !2166)
!2451 = !DILocation(line: 490, column: 7, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2166, file: !66, line: 490, column: 7)
!2453 = !DILocation(line: 490, column: 7, scope: !2166)
!2454 = !DILocation(line: 495, column: 16, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !66, line: 495, column: 11)
!2456 = distinct !DILexicalBlock(scope: !2452, file: !66, line: 491, column: 5)
!2457 = !DILocation(line: 495, column: 13, scope: !2455)
!2458 = !DILocation(line: 495, column: 11, scope: !2456)
!2459 = !DILocation(line: 496, column: 9, scope: !2455)
!2460 = !DILocation(line: 498, column: 10, scope: !2456)
!2461 = !DILocalVariable(name: "i", scope: !2462, file: !66, line: 499, type: !7)
!2462 = distinct !DILexicalBlock(scope: !2456, file: !66, line: 499, column: 7)
!2463 = !DILocation(line: 499, column: 16, scope: !2462)
!2464 = !DILocation(line: 499, column: 12, scope: !2462)
!2465 = !DILocation(line: 499, column: 23, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2462, file: !66, line: 499, column: 7)
!2467 = !DILocation(line: 499, column: 27, scope: !2466)
!2468 = !DILocation(line: 499, column: 25, scope: !2466)
!2469 = !DILocation(line: 499, column: 7, scope: !2462)
!2470 = !DILocation(line: 501, column: 25, scope: !2471)
!2471 = distinct !DILexicalBlock(scope: !2466, file: !66, line: 500, column: 9)
!2472 = !DILocation(line: 501, column: 27, scope: !2471)
!2473 = !DILocation(line: 501, column: 34, scope: !2471)
!2474 = !DILocation(line: 501, column: 31, scope: !2471)
!2475 = !DILocation(line: 501, column: 13, scope: !2471)
!2476 = !DILocation(line: 501, column: 23, scope: !2471)
!2477 = !DILocation(line: 502, column: 27, scope: !2471)
!2478 = !DILocation(line: 502, column: 32, scope: !2471)
!2479 = !DILocation(line: 502, column: 36, scope: !2471)
!2480 = !DILocation(line: 502, column: 17, scope: !2471)
!2481 = !DILocation(line: 502, column: 14, scope: !2471)
!2482 = !DILocation(line: 503, column: 9, scope: !2471)
!2483 = !DILocation(line: 499, column: 36, scope: !2466)
!2484 = !DILocation(line: 499, column: 7, scope: !2466)
!2485 = distinct !{!2485, !2469, !2486}
!2486 = !DILocation(line: 503, column: 9, scope: !2462)
!2487 = !DILocation(line: 504, column: 5, scope: !2456)
!2488 = !DILocation(line: 507, column: 9, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2452, file: !66, line: 506, column: 5)
!2490 = !DILocation(line: 507, column: 19, scope: !2489)
!2491 = !DILocation(line: 508, column: 22, scope: !2489)
!2492 = !DILocation(line: 508, column: 31, scope: !2489)
!2493 = !DILocation(line: 508, column: 12, scope: !2489)
!2494 = !DILocation(line: 508, column: 10, scope: !2489)
!2495 = !DILocation(line: 511, column: 10, scope: !2166)
!2496 = !DILocation(line: 511, column: 3, scope: !2166)
!2497 = distinct !DISubprogram(name: "cp_option_init", scope: !66, file: !66, line: 107, type: !2498, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !2500}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2501 = !DILocalVariable(name: "x", arg: 1, scope: !2497, file: !66, line: 107, type: !2500)
!2502 = !DILocation(line: 107, column: 36, scope: !2497)
!2503 = !DILocalVariable(name: "selinux_enabled", scope: !2497, file: !66, line: 109, type: !142)
!2504 = !DILocation(line: 109, column: 8, scope: !2497)
!2505 = !DILocation(line: 111, column: 23, scope: !2497)
!2506 = !DILocation(line: 111, column: 3, scope: !2497)
!2507 = !DILocation(line: 112, column: 3, scope: !2497)
!2508 = !DILocation(line: 112, column: 6, scope: !2497)
!2509 = !DILocation(line: 112, column: 22, scope: !2497)
!2510 = !DILocation(line: 113, column: 3, scope: !2497)
!2511 = !DILocation(line: 113, column: 6, scope: !2497)
!2512 = !DILocation(line: 113, column: 19, scope: !2497)
!2513 = !DILocation(line: 114, column: 3, scope: !2497)
!2514 = !DILocation(line: 114, column: 6, scope: !2497)
!2515 = !DILocation(line: 114, column: 18, scope: !2497)
!2516 = !DILocation(line: 115, column: 3, scope: !2497)
!2517 = !DILocation(line: 115, column: 6, scope: !2497)
!2518 = !DILocation(line: 115, column: 33, scope: !2497)
!2519 = !DILocation(line: 116, column: 3, scope: !2497)
!2520 = !DILocation(line: 116, column: 6, scope: !2497)
!2521 = !DILocation(line: 116, column: 36, scope: !2497)
!2522 = !DILocation(line: 117, column: 3, scope: !2497)
!2523 = !DILocation(line: 117, column: 6, scope: !2497)
!2524 = !DILocation(line: 117, column: 16, scope: !2497)
!2525 = !DILocation(line: 118, column: 3, scope: !2497)
!2526 = !DILocation(line: 118, column: 6, scope: !2497)
!2527 = !DILocation(line: 118, column: 18, scope: !2497)
!2528 = !DILocation(line: 119, column: 3, scope: !2497)
!2529 = !DILocation(line: 119, column: 6, scope: !2497)
!2530 = !DILocation(line: 119, column: 16, scope: !2497)
!2531 = !DILocation(line: 120, column: 3, scope: !2497)
!2532 = !DILocation(line: 120, column: 6, scope: !2497)
!2533 = !DILocation(line: 120, column: 19, scope: !2497)
!2534 = !DILocation(line: 121, column: 3, scope: !2497)
!2535 = !DILocation(line: 121, column: 6, scope: !2497)
!2536 = !DILocation(line: 121, column: 22, scope: !2497)
!2537 = !DILocation(line: 122, column: 3, scope: !2497)
!2538 = !DILocation(line: 122, column: 6, scope: !2497)
!2539 = !DILocation(line: 122, column: 25, scope: !2497)
!2540 = !DILocation(line: 123, column: 3, scope: !2497)
!2541 = !DILocation(line: 123, column: 6, scope: !2497)
!2542 = !DILocation(line: 123, column: 21, scope: !2497)
!2543 = !DILocation(line: 124, column: 3, scope: !2497)
!2544 = !DILocation(line: 124, column: 6, scope: !2497)
!2545 = !DILocation(line: 124, column: 20, scope: !2497)
!2546 = !DILocation(line: 125, column: 3, scope: !2497)
!2547 = !DILocation(line: 125, column: 6, scope: !2497)
!2548 = !DILocation(line: 125, column: 26, scope: !2497)
!2549 = !DILocation(line: 126, column: 3, scope: !2497)
!2550 = !DILocation(line: 126, column: 6, scope: !2497)
!2551 = !DILocation(line: 126, column: 31, scope: !2497)
!2552 = !DILocation(line: 127, column: 34, scope: !2497)
!2553 = !DILocation(line: 127, column: 3, scope: !2497)
!2554 = !DILocation(line: 127, column: 6, scope: !2497)
!2555 = !DILocation(line: 127, column: 32, scope: !2497)
!2556 = !DILocation(line: 128, column: 3, scope: !2497)
!2557 = !DILocation(line: 128, column: 6, scope: !2497)
!2558 = !DILocation(line: 128, column: 27, scope: !2497)
!2559 = !DILocation(line: 129, column: 3, scope: !2497)
!2560 = !DILocation(line: 129, column: 6, scope: !2497)
!2561 = !DILocation(line: 129, column: 25, scope: !2497)
!2562 = !DILocation(line: 130, column: 3, scope: !2497)
!2563 = !DILocation(line: 130, column: 6, scope: !2497)
!2564 = !DILocation(line: 130, column: 25, scope: !2497)
!2565 = !DILocation(line: 131, column: 3, scope: !2497)
!2566 = !DILocation(line: 131, column: 6, scope: !2497)
!2567 = !DILocation(line: 131, column: 23, scope: !2497)
!2568 = !DILocation(line: 132, column: 3, scope: !2497)
!2569 = !DILocation(line: 132, column: 6, scope: !2497)
!2570 = !DILocation(line: 132, column: 31, scope: !2497)
!2571 = !DILocation(line: 133, column: 3, scope: !2497)
!2572 = !DILocation(line: 133, column: 6, scope: !2497)
!2573 = !DILocation(line: 133, column: 21, scope: !2497)
!2574 = !DILocation(line: 134, column: 3, scope: !2497)
!2575 = !DILocation(line: 134, column: 6, scope: !2497)
!2576 = !DILocation(line: 134, column: 29, scope: !2497)
!2577 = !DILocation(line: 135, column: 3, scope: !2497)
!2578 = !DILocation(line: 135, column: 6, scope: !2497)
!2579 = !DILocation(line: 135, column: 16, scope: !2497)
!2580 = !DILocation(line: 136, column: 3, scope: !2497)
!2581 = !DILocation(line: 136, column: 6, scope: !2497)
!2582 = !DILocation(line: 136, column: 18, scope: !2497)
!2583 = !DILocation(line: 137, column: 3, scope: !2497)
!2584 = !DILocation(line: 137, column: 6, scope: !2497)
!2585 = !DILocation(line: 137, column: 20, scope: !2497)
!2586 = !DILocation(line: 138, column: 3, scope: !2497)
!2587 = !DILocation(line: 138, column: 6, scope: !2497)
!2588 = !DILocation(line: 138, column: 15, scope: !2497)
!2589 = !DILocation(line: 139, column: 3, scope: !2497)
!2590 = !DILocation(line: 139, column: 6, scope: !2497)
!2591 = !DILocation(line: 139, column: 11, scope: !2497)
!2592 = !DILocation(line: 140, column: 18, scope: !2497)
!2593 = !DILocation(line: 140, column: 3, scope: !2497)
!2594 = !DILocation(line: 140, column: 6, scope: !2497)
!2595 = !DILocation(line: 140, column: 16, scope: !2497)
!2596 = !DILocation(line: 142, column: 3, scope: !2497)
!2597 = !DILocation(line: 142, column: 6, scope: !2497)
!2598 = !DILocation(line: 142, column: 33, scope: !2497)
!2599 = !DILocation(line: 143, column: 3, scope: !2497)
!2600 = !DILocation(line: 143, column: 6, scope: !2497)
!2601 = !DILocation(line: 143, column: 13, scope: !2497)
!2602 = !DILocation(line: 144, column: 3, scope: !2497)
!2603 = !DILocation(line: 144, column: 6, scope: !2497)
!2604 = !DILocation(line: 144, column: 14, scope: !2497)
!2605 = !DILocation(line: 145, column: 3, scope: !2497)
!2606 = !DILocation(line: 145, column: 6, scope: !2497)
!2607 = !DILocation(line: 145, column: 16, scope: !2497)
!2608 = !DILocation(line: 146, column: 3, scope: !2497)
!2609 = !DILocation(line: 146, column: 6, scope: !2497)
!2610 = !DILocation(line: 146, column: 15, scope: !2497)
!2611 = !DILocation(line: 147, column: 1, scope: !2497)
!2612 = distinct !DISubprogram(name: "target_directory_operand", scope: !66, file: !66, line: 154, type: !2613, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!142, !116}
!2615 = !DILocalVariable(name: "file", arg: 1, scope: !2612, file: !66, line: 154, type: !116)
!2616 = !DILocation(line: 154, column: 39, scope: !2612)
!2617 = !DILocalVariable(name: "st", scope: !2612, file: !66, line: 156, type: !2210)
!2618 = !DILocation(line: 156, column: 15, scope: !2612)
!2619 = !DILocalVariable(name: "err", scope: !2612, file: !66, line: 157, type: !7)
!2620 = !DILocation(line: 157, column: 7, scope: !2612)
!2621 = !DILocation(line: 157, column: 20, scope: !2612)
!2622 = !DILocation(line: 157, column: 14, scope: !2612)
!2623 = !DILocation(line: 157, column: 31, scope: !2612)
!2624 = !DILocation(line: 157, column: 42, scope: !2612)
!2625 = !DILocalVariable(name: "is_a_dir", scope: !2612, file: !66, line: 158, type: !142)
!2626 = !DILocation(line: 158, column: 8, scope: !2612)
!2627 = !DILocation(line: 158, column: 20, scope: !2612)
!2628 = !DILocation(line: 158, column: 24, scope: !2612)
!2629 = !DILocation(line: 158, column: 27, scope: !2612)
!2630 = !DILocation(line: 0, scope: !2612)
!2631 = !DILocation(line: 159, column: 7, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2612, file: !66, line: 159, column: 7)
!2633 = !DILocation(line: 159, column: 11, scope: !2632)
!2634 = !DILocation(line: 159, column: 14, scope: !2632)
!2635 = !DILocation(line: 159, column: 18, scope: !2632)
!2636 = !DILocation(line: 159, column: 7, scope: !2612)
!2637 = !DILocation(line: 160, column: 5, scope: !2632)
!2638 = !DILocation(line: 161, column: 10, scope: !2612)
!2639 = !DILocation(line: 161, column: 3, scope: !2612)
!2640 = distinct !DISubprogram(name: "movefile", scope: !66, file: !66, line: 253, type: !2641, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!142, !9, !9, !142, !2643}
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2169)
!2645 = !DILocalVariable(name: "source", arg: 1, scope: !2640, file: !66, line: 253, type: !9)
!2646 = !DILocation(line: 253, column: 17, scope: !2640)
!2647 = !DILocalVariable(name: "dest", arg: 2, scope: !2640, file: !66, line: 253, type: !9)
!2648 = !DILocation(line: 253, column: 31, scope: !2640)
!2649 = !DILocalVariable(name: "dest_is_dir", arg: 3, scope: !2640, file: !66, line: 253, type: !142)
!2650 = !DILocation(line: 253, column: 42, scope: !2640)
!2651 = !DILocalVariable(name: "x", arg: 4, scope: !2640, file: !66, line: 254, type: !2643)
!2652 = !DILocation(line: 254, column: 36, scope: !2640)
!2653 = !DILocalVariable(name: "ok", scope: !2640, file: !66, line: 256, type: !142)
!2654 = !DILocation(line: 256, column: 8, scope: !2640)
!2655 = !DILocation(line: 265, column: 7, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2640, file: !66, line: 265, column: 7)
!2657 = !DILocation(line: 265, column: 7, scope: !2640)
!2658 = !DILocation(line: 266, column: 29, scope: !2656)
!2659 = !DILocation(line: 266, column: 5, scope: !2656)
!2660 = !DILocation(line: 268, column: 7, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2640, file: !66, line: 268, column: 7)
!2662 = !DILocation(line: 268, column: 7, scope: !2640)
!2663 = !DILocalVariable(name: "src_basename", scope: !2664, file: !66, line: 271, type: !116)
!2664 = distinct !DILexicalBlock(scope: !2661, file: !66, line: 269, column: 5)
!2665 = !DILocation(line: 271, column: 19, scope: !2664)
!2666 = !DILocation(line: 271, column: 50, scope: !2664)
!2667 = !DILocation(line: 271, column: 34, scope: !2664)
!2668 = !DILocalVariable(name: "new_dest", scope: !2664, file: !66, line: 272, type: !9)
!2669 = !DILocation(line: 272, column: 13, scope: !2664)
!2670 = !DILocation(line: 272, column: 42, scope: !2664)
!2671 = !DILocation(line: 272, column: 48, scope: !2664)
!2672 = !DILocation(line: 272, column: 24, scope: !2664)
!2673 = !DILocation(line: 273, column: 31, scope: !2664)
!2674 = !DILocation(line: 273, column: 7, scope: !2664)
!2675 = !DILocation(line: 274, column: 21, scope: !2664)
!2676 = !DILocation(line: 274, column: 29, scope: !2664)
!2677 = !DILocation(line: 274, column: 39, scope: !2664)
!2678 = !DILocation(line: 274, column: 12, scope: !2664)
!2679 = !DILocation(line: 274, column: 10, scope: !2664)
!2680 = !DILocation(line: 275, column: 13, scope: !2664)
!2681 = !DILocation(line: 275, column: 7, scope: !2664)
!2682 = !DILocation(line: 276, column: 5, scope: !2664)
!2683 = !DILocation(line: 279, column: 21, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2661, file: !66, line: 278, column: 5)
!2685 = !DILocation(line: 279, column: 29, scope: !2684)
!2686 = !DILocation(line: 279, column: 35, scope: !2684)
!2687 = !DILocation(line: 279, column: 12, scope: !2684)
!2688 = !DILocation(line: 279, column: 10, scope: !2684)
!2689 = !DILocation(line: 282, column: 10, scope: !2640)
!2690 = !DILocation(line: 282, column: 3, scope: !2640)
!2691 = distinct !DISubprogram(name: "do_move", scope: !66, file: !66, line: 169, type: !2692, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !216)
!2692 = !DISubroutineType(types: !2693)
!2693 = !{!142, !116, !116, !2643}
!2694 = !DILocalVariable(name: "source", arg: 1, scope: !2691, file: !66, line: 169, type: !116)
!2695 = !DILocation(line: 169, column: 22, scope: !2691)
!2696 = !DILocalVariable(name: "dest", arg: 2, scope: !2691, file: !66, line: 169, type: !116)
!2697 = !DILocation(line: 169, column: 42, scope: !2691)
!2698 = !DILocalVariable(name: "x", arg: 3, scope: !2691, file: !66, line: 169, type: !2643)
!2699 = !DILocation(line: 169, column: 73, scope: !2691)
!2700 = !DILocalVariable(name: "copy_into_self", scope: !2691, file: !66, line: 171, type: !142)
!2701 = !DILocation(line: 171, column: 8, scope: !2691)
!2702 = !DILocalVariable(name: "rename_succeeded", scope: !2691, file: !66, line: 172, type: !142)
!2703 = !DILocation(line: 172, column: 8, scope: !2691)
!2704 = !DILocalVariable(name: "ok", scope: !2691, file: !66, line: 173, type: !142)
!2705 = !DILocation(line: 173, column: 8, scope: !2691)
!2706 = !DILocation(line: 173, column: 19, scope: !2691)
!2707 = !DILocation(line: 173, column: 27, scope: !2691)
!2708 = !DILocation(line: 173, column: 40, scope: !2691)
!2709 = !DILocation(line: 173, column: 13, scope: !2691)
!2710 = !DILocation(line: 175, column: 7, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2691, file: !66, line: 175, column: 7)
!2712 = !DILocation(line: 175, column: 7, scope: !2691)
!2713 = !DILocalVariable(name: "dir_to_remove", scope: !2714, file: !66, line: 177, type: !116)
!2714 = distinct !DILexicalBlock(scope: !2711, file: !66, line: 176, column: 5)
!2715 = !DILocation(line: 177, column: 19, scope: !2714)
!2716 = !DILocation(line: 178, column: 11, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2714, file: !66, line: 178, column: 11)
!2718 = !DILocation(line: 178, column: 11, scope: !2714)
!2719 = !DILocation(line: 191, column: 25, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2717, file: !66, line: 179, column: 9)
!2721 = !DILocation(line: 192, column: 14, scope: !2720)
!2722 = !DILocation(line: 193, column: 9, scope: !2720)
!2723 = !DILocation(line: 194, column: 16, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2717, file: !66, line: 194, column: 16)
!2725 = !DILocation(line: 194, column: 16, scope: !2717)
!2726 = !DILocation(line: 198, column: 25, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2724, file: !66, line: 195, column: 9)
!2728 = !DILocation(line: 199, column: 9, scope: !2727)
!2729 = !DILocation(line: 224, column: 27, scope: !2730)
!2730 = distinct !DILexicalBlock(scope: !2724, file: !66, line: 201, column: 9)
!2731 = !DILocation(line: 224, column: 25, scope: !2730)
!2732 = !DILocation(line: 227, column: 11, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2714, file: !66, line: 227, column: 11)
!2734 = !DILocation(line: 227, column: 25, scope: !2733)
!2735 = !DILocation(line: 227, column: 11, scope: !2714)
!2736 = !DILocalVariable(name: "rm_options", scope: !2737, file: !66, line: 229, type: !277)
!2737 = distinct !DILexicalBlock(scope: !2733, file: !66, line: 228, column: 9)
!2738 = !DILocation(line: 229, column: 29, scope: !2737)
!2739 = !DILocalVariable(name: "status", scope: !2737, file: !66, line: 230, type: !106)
!2740 = !DILocation(line: 230, column: 26, scope: !2737)
!2741 = !DILocalVariable(name: "dir", scope: !2737, file: !66, line: 231, type: !245)
!2742 = !DILocation(line: 231, column: 23, scope: !2737)
!2743 = !DILocation(line: 233, column: 11, scope: !2737)
!2744 = !DILocation(line: 234, column: 32, scope: !2737)
!2745 = !DILocation(line: 234, column: 35, scope: !2737)
!2746 = !DILocation(line: 234, column: 22, scope: !2737)
!2747 = !DILocation(line: 234, column: 30, scope: !2737)
!2748 = !DILocation(line: 235, column: 20, scope: !2737)
!2749 = !DILocation(line: 235, column: 11, scope: !2737)
!2750 = !DILocation(line: 235, column: 18, scope: !2737)
!2751 = !DILocation(line: 236, column: 11, scope: !2737)
!2752 = !DILocation(line: 236, column: 18, scope: !2737)
!2753 = !DILocation(line: 238, column: 32, scope: !2737)
!2754 = !DILocation(line: 238, column: 24, scope: !2737)
!2755 = !DILocation(line: 238, column: 20, scope: !2737)
!2756 = !DILocation(line: 238, column: 18, scope: !2737)
!2757 = !DILocation(line: 239, column: 11, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2759, file: !66, line: 239, column: 11)
!2759 = distinct !DILexicalBlock(scope: !2737, file: !66, line: 239, column: 11)
!2760 = !DILocation(line: 239, column: 11, scope: !2759)
!2761 = !DILocation(line: 240, column: 15, scope: !2762)
!2762 = distinct !DILexicalBlock(scope: !2737, file: !66, line: 240, column: 15)
!2763 = !DILocation(line: 240, column: 22, scope: !2762)
!2764 = !DILocation(line: 240, column: 15, scope: !2737)
!2765 = !DILocation(line: 241, column: 16, scope: !2762)
!2766 = !DILocation(line: 241, column: 13, scope: !2762)
!2767 = !DILocation(line: 242, column: 9, scope: !2737)
!2768 = !DILocation(line: 243, column: 5, scope: !2714)
!2769 = !DILocation(line: 245, column: 10, scope: !2691)
!2770 = !DILocation(line: 245, column: 3, scope: !2691)
!2771 = !DILocalVariable(name: "x", arg: 1, scope: !273, file: !66, line: 75, type: !276)
!2772 = !DILocation(line: 75, column: 36, scope: !273)
!2773 = !DILocation(line: 77, column: 3, scope: !273)
!2774 = !DILocation(line: 77, column: 6, scope: !273)
!2775 = !DILocation(line: 77, column: 27, scope: !273)
!2776 = !DILocation(line: 78, column: 3, scope: !273)
!2777 = !DILocation(line: 78, column: 6, scope: !273)
!2778 = !DILocation(line: 78, column: 31, scope: !273)
!2779 = !DILocation(line: 79, column: 3, scope: !273)
!2780 = !DILocation(line: 79, column: 6, scope: !273)
!2781 = !DILocation(line: 79, column: 16, scope: !273)
!2782 = !DILocation(line: 80, column: 3, scope: !273)
!2783 = !DILocation(line: 80, column: 6, scope: !273)
!2784 = !DILocation(line: 80, column: 22, scope: !273)
!2785 = !DILocation(line: 84, column: 3, scope: !273)
!2786 = !DILocation(line: 84, column: 6, scope: !273)
!2787 = !DILocation(line: 84, column: 18, scope: !273)
!2788 = !DILocation(line: 85, column: 3, scope: !273)
!2789 = !DILocation(line: 85, column: 6, scope: !273)
!2790 = !DILocation(line: 85, column: 16, scope: !273)
!2791 = !DILocation(line: 87, column: 3, scope: !273)
!2792 = !DILocation(line: 87, column: 6, scope: !273)
!2793 = !DILocation(line: 87, column: 14, scope: !273)
!2794 = !DILocation(line: 93, column: 3, scope: !273)
!2795 = !DILocation(line: 93, column: 6, scope: !273)
!2796 = !DILocation(line: 93, column: 26, scope: !273)
!2797 = !DILocation(line: 97, column: 23, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !273, file: !66, line: 95, column: 3)
!2799 = !DILocation(line: 97, column: 5, scope: !2798)
!2800 = !DILocation(line: 97, column: 8, scope: !2798)
!2801 = !DILocation(line: 97, column: 21, scope: !2798)
!2802 = !DILocation(line: 98, column: 9, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2798, file: !66, line: 98, column: 9)
!2804 = !DILocation(line: 98, column: 12, scope: !2803)
!2805 = !DILocation(line: 98, column: 25, scope: !2803)
!2806 = !DILocation(line: 98, column: 9, scope: !2798)
!2807 = !DILocation(line: 99, column: 7, scope: !2803)
!2808 = !DILocation(line: 103, column: 3, scope: !273)
!2809 = !DILocation(line: 103, column: 6, scope: !273)
!2810 = !DILocation(line: 103, column: 24, scope: !273)
!2811 = !DILocation(line: 104, column: 1, scope: !273)
!2812 = distinct !DISubprogram(name: "rm", scope: !1050, file: !1050, line: 577, type: !2813, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!106, !2815, !2816}
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !101, line: 32, size: 256, elements: !2819)
!2819 = !{!2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !2818, file: !101, line: 35, baseType: !142, size: 8)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !2818, file: !101, line: 38, baseType: !100, size: 32, offset: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !2818, file: !101, line: 47, baseType: !142, size: 8, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !2818, file: !101, line: 50, baseType: !142, size: 8, offset: 72)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !2818, file: !101, line: 53, baseType: !142, size: 8, offset: 80)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !2818, file: !101, line: 57, baseType: !1159, size: 64, offset: 128)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !2818, file: !101, line: 61, baseType: !142, size: 8, offset: 192)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !2818, file: !101, line: 64, baseType: !142, size: 8, offset: 200)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !2818, file: !101, line: 67, baseType: !142, size: 8, offset: 208)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !2818, file: !101, line: 75, baseType: !142, size: 8, offset: 216)
!2830 = !DILocalVariable(name: "file", arg: 1, scope: !2812, file: !1050, line: 577, type: !2815)
!2831 = !DILocation(line: 577, column: 18, scope: !2812)
!2832 = !DILocalVariable(name: "x", arg: 2, scope: !2812, file: !1050, line: 577, type: !2816)
!2833 = !DILocation(line: 577, column: 49, scope: !2812)
!2834 = !DILocalVariable(name: "rm_status", scope: !2812, file: !1050, line: 579, type: !106)
!2835 = !DILocation(line: 579, column: 18, scope: !2812)
!2836 = !DILocation(line: 581, column: 8, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2812, file: !1050, line: 581, column: 7)
!2838 = !DILocation(line: 581, column: 7, scope: !2837)
!2839 = !DILocation(line: 581, column: 7, scope: !2812)
!2840 = !DILocalVariable(name: "bit_flags", scope: !2841, file: !1050, line: 583, type: !7)
!2841 = distinct !DILexicalBlock(scope: !2837, file: !1050, line: 582, column: 5)
!2842 = !DILocation(line: 583, column: 11, scope: !2841)
!2843 = !DILocation(line: 587, column: 11, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2841, file: !1050, line: 587, column: 11)
!2845 = !DILocation(line: 587, column: 14, scope: !2844)
!2846 = !DILocation(line: 587, column: 11, scope: !2841)
!2847 = !DILocation(line: 588, column: 19, scope: !2844)
!2848 = !DILocation(line: 588, column: 9, scope: !2844)
!2849 = !DILocalVariable(name: "fts", scope: !2841, file: !1050, line: 590, type: !1063)
!2850 = !DILocation(line: 590, column: 12, scope: !2841)
!2851 = !DILocation(line: 590, column: 29, scope: !2841)
!2852 = !DILocation(line: 590, column: 35, scope: !2841)
!2853 = !DILocation(line: 590, column: 18, scope: !2841)
!2854 = !DILocation(line: 592, column: 7, scope: !2841)
!2855 = !DILocalVariable(name: "ent", scope: !2856, file: !1050, line: 594, type: !1156)
!2856 = distinct !DILexicalBlock(scope: !2841, file: !1050, line: 593, column: 9)
!2857 = !DILocation(line: 594, column: 19, scope: !2856)
!2858 = !DILocation(line: 596, column: 27, scope: !2856)
!2859 = !DILocation(line: 596, column: 17, scope: !2856)
!2860 = !DILocation(line: 596, column: 15, scope: !2856)
!2861 = !DILocation(line: 597, column: 15, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2856, file: !1050, line: 597, column: 15)
!2863 = !DILocation(line: 597, column: 19, scope: !2862)
!2864 = !DILocation(line: 597, column: 15, scope: !2856)
!2865 = !DILocation(line: 599, column: 19, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2867, file: !1050, line: 599, column: 19)
!2867 = distinct !DILexicalBlock(scope: !2862, file: !1050, line: 598, column: 13)
!2868 = !DILocation(line: 599, column: 25, scope: !2866)
!2869 = !DILocation(line: 599, column: 19, scope: !2867)
!2870 = !DILocation(line: 601, column: 29, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2866, file: !1050, line: 600, column: 17)
!2872 = !DILocation(line: 601, column: 36, scope: !2871)
!2873 = !DILocation(line: 601, column: 19, scope: !2871)
!2874 = !DILocation(line: 602, column: 29, scope: !2871)
!2875 = !DILocation(line: 603, column: 17, scope: !2871)
!2876 = !DILocation(line: 604, column: 15, scope: !2867)
!2877 = !DILocalVariable(name: "s", scope: !2856, file: !1050, line: 607, type: !106)
!2878 = !DILocation(line: 607, column: 26, scope: !2856)
!2879 = !DILocation(line: 607, column: 38, scope: !2856)
!2880 = !DILocation(line: 607, column: 43, scope: !2856)
!2881 = !DILocation(line: 607, column: 48, scope: !2856)
!2882 = !DILocation(line: 607, column: 30, scope: !2856)
!2883 = !DILocation(line: 609, column: 11, scope: !2884)
!2884 = distinct !DILexicalBlock(scope: !2885, file: !1050, line: 609, column: 11)
!2885 = distinct !DILexicalBlock(scope: !2856, file: !1050, line: 609, column: 11)
!2886 = !DILocation(line: 609, column: 11, scope: !2885)
!2887 = !DILocation(line: 610, column: 11, scope: !2856)
!2888 = !DILocation(line: 610, column: 11, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2890, file: !1050, line: 610, column: 11)
!2890 = distinct !DILexicalBlock(scope: !2856, file: !1050, line: 610, column: 11)
!2891 = !DILocation(line: 610, column: 11, scope: !2890)
!2892 = distinct !{!2892, !2854, !2893}
!2893 = !DILocation(line: 611, column: 9, scope: !2841)
!2894 = !DILocation(line: 613, column: 22, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2841, file: !1050, line: 613, column: 11)
!2896 = !DILocation(line: 613, column: 11, scope: !2895)
!2897 = !DILocation(line: 613, column: 27, scope: !2895)
!2898 = !DILocation(line: 613, column: 11, scope: !2841)
!2899 = !DILocation(line: 615, column: 21, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2895, file: !1050, line: 614, column: 9)
!2901 = !DILocation(line: 615, column: 28, scope: !2900)
!2902 = !DILocation(line: 615, column: 11, scope: !2900)
!2903 = !DILocation(line: 616, column: 21, scope: !2900)
!2904 = !DILocation(line: 617, column: 9, scope: !2900)
!2905 = !DILocation(line: 618, column: 5, scope: !2841)
!2906 = !DILocation(line: 620, column: 10, scope: !2812)
!2907 = !DILocation(line: 620, column: 3, scope: !2812)
!2908 = distinct !DISubprogram(name: "rm_fts", scope: !1050, file: !1050, line: 418, type: !2909, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!2909 = !DISubroutineType(types: !2910)
!2910 = !{!106, !1063, !1156, !2816}
!2911 = !DILocalVariable(name: "fts", arg: 1, scope: !2908, file: !1050, line: 418, type: !1063)
!2912 = !DILocation(line: 418, column: 14, scope: !2908)
!2913 = !DILocalVariable(name: "ent", arg: 2, scope: !2908, file: !1050, line: 418, type: !1156)
!2914 = !DILocation(line: 418, column: 27, scope: !2908)
!2915 = !DILocalVariable(name: "x", arg: 3, scope: !2908, file: !1050, line: 418, type: !2816)
!2916 = !DILocation(line: 418, column: 57, scope: !2908)
!2917 = !DILocation(line: 420, column: 11, scope: !2908)
!2918 = !DILocation(line: 420, column: 16, scope: !2908)
!2919 = !DILocation(line: 420, column: 3, scope: !2908)
!2920 = !DILocation(line: 423, column: 13, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !1050, line: 423, column: 11)
!2922 = distinct !DILexicalBlock(scope: !2908, file: !1050, line: 421, column: 5)
!2923 = !DILocation(line: 423, column: 16, scope: !2921)
!2924 = !DILocation(line: 424, column: 11, scope: !2921)
!2925 = !DILocation(line: 424, column: 16, scope: !2921)
!2926 = !DILocation(line: 424, column: 19, scope: !2921)
!2927 = !DILocation(line: 425, column: 16, scope: !2921)
!2928 = !DILocation(line: 425, column: 33, scope: !2921)
!2929 = !DILocation(line: 425, column: 38, scope: !2921)
!2930 = !DILocation(line: 425, column: 50, scope: !2921)
!2931 = !DILocation(line: 425, column: 55, scope: !2921)
!2932 = !DILocation(line: 425, column: 19, scope: !2921)
!2933 = !DILocation(line: 423, column: 11, scope: !2922)
!2934 = !DILocalVariable(name: "err", scope: !2935, file: !1050, line: 431, type: !7)
!2935 = distinct !DILexicalBlock(scope: !2921, file: !1050, line: 426, column: 9)
!2936 = !DILocation(line: 431, column: 15, scope: !2935)
!2937 = !DILocation(line: 431, column: 21, scope: !2935)
!2938 = !DILocation(line: 431, column: 24, scope: !2935)
!2939 = !DILocation(line: 432, column: 21, scope: !2935)
!2940 = !DILocation(line: 432, column: 26, scope: !2935)
!2941 = !DILocation(line: 432, column: 49, scope: !2935)
!2942 = !DILocation(line: 432, column: 11, scope: !2935)
!2943 = !DILocation(line: 433, column: 31, scope: !2935)
!2944 = !DILocation(line: 433, column: 11, scope: !2935)
!2945 = !DILocation(line: 434, column: 26, scope: !2935)
!2946 = !DILocation(line: 434, column: 31, scope: !2935)
!2947 = !DILocation(line: 434, column: 11, scope: !2935)
!2948 = !DILocation(line: 435, column: 11, scope: !2935)
!2949 = !DILocation(line: 439, column: 11, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2922, file: !1050, line: 439, column: 11)
!2951 = !DILocation(line: 439, column: 16, scope: !2950)
!2952 = !DILocation(line: 439, column: 26, scope: !2950)
!2953 = !DILocation(line: 439, column: 11, scope: !2922)
!2954 = !DILocation(line: 444, column: 46, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2956, file: !1050, line: 444, column: 15)
!2956 = distinct !DILexicalBlock(scope: !2950, file: !1050, line: 440, column: 9)
!2957 = !DILocation(line: 444, column: 51, scope: !2955)
!2958 = !DILocation(line: 444, column: 30, scope: !2955)
!2959 = !DILocation(line: 444, column: 15, scope: !2955)
!2960 = !DILocation(line: 444, column: 15, scope: !2956)
!2961 = !DILocation(line: 447, column: 22, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2955, file: !1050, line: 445, column: 13)
!2963 = !DILocation(line: 448, column: 22, scope: !2962)
!2964 = !DILocation(line: 448, column: 42, scope: !2962)
!2965 = !DILocation(line: 449, column: 22, scope: !2962)
!2966 = !DILocation(line: 446, column: 15, scope: !2962)
!2967 = !DILocation(line: 450, column: 30, scope: !2962)
!2968 = !DILocation(line: 450, column: 35, scope: !2962)
!2969 = !DILocation(line: 450, column: 15, scope: !2962)
!2970 = !DILocation(line: 451, column: 15, scope: !2962)
!2971 = !DILocation(line: 457, column: 15, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2956, file: !1050, line: 457, column: 15)
!2973 = !DILocation(line: 457, column: 15, scope: !2956)
!2974 = !DILocation(line: 459, column: 15, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2972, file: !1050, line: 458, column: 13)
!2976 = !DILocation(line: 459, column: 15, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2978, file: !1050, line: 459, column: 15)
!2978 = distinct !DILexicalBlock(scope: !2975, file: !1050, line: 459, column: 15)
!2979 = !DILocation(line: 459, column: 15, scope: !2978)
!2980 = !DILocation(line: 460, column: 30, scope: !2975)
!2981 = !DILocation(line: 460, column: 35, scope: !2975)
!2982 = !DILocation(line: 460, column: 15, scope: !2975)
!2983 = !DILocation(line: 461, column: 15, scope: !2975)
!2984 = !DILocation(line: 467, column: 15, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2956, file: !1050, line: 467, column: 15)
!2986 = !DILocation(line: 467, column: 18, scope: !2985)
!2987 = !DILocation(line: 467, column: 15, scope: !2956)
!2988 = !DILocalVariable(name: "failed", scope: !2989, file: !1050, line: 469, type: !142)
!2989 = distinct !DILexicalBlock(scope: !2985, file: !1050, line: 468, column: 13)
!2990 = !DILocation(line: 469, column: 20, scope: !2989)
!2991 = !DILocalVariable(name: "parent", scope: !2989, file: !1050, line: 470, type: !9)
!2992 = !DILocation(line: 470, column: 21, scope: !2989)
!2993 = !DILocation(line: 470, column: 48, scope: !2989)
!2994 = !DILocation(line: 470, column: 53, scope: !2989)
!2995 = !DILocation(line: 470, column: 30, scope: !2989)
!2996 = !DILocalVariable(name: "statbuf", scope: !2989, file: !1050, line: 471, type: !1093)
!2997 = !DILocation(line: 471, column: 27, scope: !2989)
!2998 = !DILocation(line: 473, column: 20, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2989, file: !1050, line: 473, column: 19)
!3000 = !DILocation(line: 473, column: 27, scope: !2999)
!3001 = !DILocation(line: 473, column: 37, scope: !2999)
!3002 = !DILocation(line: 473, column: 30, scope: !2999)
!3003 = !DILocation(line: 473, column: 19, scope: !2989)
!3004 = !DILocation(line: 476, column: 26, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2999, file: !1050, line: 474, column: 17)
!3006 = !DILocation(line: 477, column: 26, scope: !3005)
!3007 = !DILocation(line: 478, column: 26, scope: !3005)
!3008 = !DILocation(line: 475, column: 19, scope: !3005)
!3009 = !DILocation(line: 479, column: 26, scope: !3005)
!3010 = !DILocation(line: 480, column: 17, scope: !3005)
!3011 = !DILocation(line: 482, column: 21, scope: !2989)
!3012 = !DILocation(line: 482, column: 15, scope: !2989)
!3013 = !DILocation(line: 484, column: 19, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2989, file: !1050, line: 484, column: 19)
!3015 = !DILocation(line: 484, column: 26, scope: !3014)
!3016 = !DILocation(line: 484, column: 29, scope: !3014)
!3017 = !DILocation(line: 484, column: 34, scope: !3014)
!3018 = !DILocation(line: 484, column: 53, scope: !3014)
!3019 = !DILocation(line: 484, column: 42, scope: !3014)
!3020 = !DILocation(line: 484, column: 19, scope: !2989)
!3021 = !DILocation(line: 486, column: 25, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !1050, line: 486, column: 23)
!3023 = distinct !DILexicalBlock(scope: !3014, file: !1050, line: 485, column: 17)
!3024 = !DILocation(line: 486, column: 23, scope: !3023)
!3025 = !DILocation(line: 489, column: 30, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3022, file: !1050, line: 487, column: 21)
!3027 = !DILocation(line: 490, column: 30, scope: !3026)
!3028 = !DILocation(line: 488, column: 23, scope: !3026)
!3029 = !DILocation(line: 491, column: 36, scope: !3026)
!3030 = !DILocation(line: 491, column: 23, scope: !3026)
!3031 = !DILocation(line: 492, column: 21, scope: !3026)
!3032 = !DILocation(line: 493, column: 34, scope: !3023)
!3033 = !DILocation(line: 493, column: 39, scope: !3023)
!3034 = !DILocation(line: 493, column: 19, scope: !3023)
!3035 = !DILocation(line: 494, column: 19, scope: !3023)
!3036 = !DILocation(line: 496, column: 13, scope: !2989)
!3037 = !DILocation(line: 497, column: 9, scope: !2956)
!3038 = !DILocalVariable(name: "is_empty_directory", scope: !3039, file: !1050, line: 500, type: !1170)
!3039 = distinct !DILexicalBlock(scope: !2922, file: !1050, line: 499, column: 7)
!3040 = !DILocation(line: 500, column: 17, scope: !3039)
!3041 = !DILocalVariable(name: "s", scope: !3039, file: !1050, line: 501, type: !106)
!3042 = !DILocation(line: 501, column: 24, scope: !3039)
!3043 = !DILocation(line: 501, column: 36, scope: !3039)
!3044 = !DILocation(line: 501, column: 41, scope: !3039)
!3045 = !DILocation(line: 501, column: 63, scope: !3039)
!3046 = !DILocation(line: 501, column: 28, scope: !3039)
!3047 = !DILocation(line: 504, column: 13, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3039, file: !1050, line: 504, column: 13)
!3049 = !DILocation(line: 504, column: 15, scope: !3048)
!3050 = !DILocation(line: 504, column: 24, scope: !3048)
!3051 = !DILocation(line: 504, column: 27, scope: !3048)
!3052 = !DILocation(line: 504, column: 46, scope: !3048)
!3053 = !DILocation(line: 504, column: 13, scope: !3039)
!3054 = !DILocation(line: 508, column: 25, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3048, file: !1050, line: 505, column: 11)
!3056 = !DILocation(line: 508, column: 30, scope: !3055)
!3057 = !DILocation(line: 508, column: 35, scope: !3055)
!3058 = !DILocation(line: 508, column: 17, scope: !3055)
!3059 = !DILocation(line: 508, column: 15, scope: !3055)
!3060 = !DILocation(line: 509, column: 28, scope: !3055)
!3061 = !DILocation(line: 509, column: 33, scope: !3055)
!3062 = !DILocation(line: 509, column: 13, scope: !3055)
!3063 = !DILocation(line: 510, column: 11, scope: !3055)
!3064 = !DILocation(line: 512, column: 13, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3039, file: !1050, line: 512, column: 13)
!3066 = !DILocation(line: 512, column: 15, scope: !3065)
!3067 = !DILocation(line: 512, column: 13, scope: !3039)
!3068 = !DILocation(line: 514, column: 33, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3065, file: !1050, line: 513, column: 11)
!3070 = !DILocation(line: 514, column: 13, scope: !3069)
!3071 = !DILocation(line: 515, column: 28, scope: !3069)
!3072 = !DILocation(line: 515, column: 33, scope: !3069)
!3073 = !DILocation(line: 515, column: 13, scope: !3069)
!3074 = !DILocation(line: 516, column: 11, scope: !3069)
!3075 = !DILocation(line: 518, column: 16, scope: !3039)
!3076 = !DILocation(line: 518, column: 9, scope: !3039)
!3077 = !DILocation(line: 533, column: 13, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !1050, line: 533, column: 13)
!3079 = distinct !DILexicalBlock(scope: !2922, file: !1050, line: 529, column: 7)
!3080 = !DILocation(line: 533, column: 18, scope: !3078)
!3081 = !DILocation(line: 533, column: 27, scope: !3078)
!3082 = !DILocation(line: 534, column: 13, scope: !3078)
!3083 = !DILocation(line: 534, column: 16, scope: !3078)
!3084 = !DILocation(line: 534, column: 19, scope: !3078)
!3085 = !DILocation(line: 535, column: 13, scope: !3078)
!3086 = !DILocation(line: 535, column: 32, scope: !3078)
!3087 = !DILocation(line: 535, column: 37, scope: !3078)
!3088 = !DILocation(line: 535, column: 30, scope: !3078)
!3089 = !DILocation(line: 536, column: 13, scope: !3078)
!3090 = !DILocation(line: 536, column: 16, scope: !3078)
!3091 = !DILocation(line: 536, column: 21, scope: !3078)
!3092 = !DILocation(line: 536, column: 32, scope: !3078)
!3093 = !DILocation(line: 536, column: 42, scope: !3078)
!3094 = !DILocation(line: 536, column: 47, scope: !3078)
!3095 = !DILocation(line: 536, column: 39, scope: !3078)
!3096 = !DILocation(line: 533, column: 13, scope: !3079)
!3097 = !DILocation(line: 538, column: 33, scope: !3098)
!3098 = distinct !DILexicalBlock(scope: !3078, file: !1050, line: 537, column: 11)
!3099 = !DILocation(line: 538, column: 13, scope: !3098)
!3100 = !DILocation(line: 539, column: 26, scope: !3098)
!3101 = !DILocation(line: 540, column: 20, scope: !3098)
!3102 = !DILocation(line: 539, column: 13, scope: !3098)
!3103 = !DILocation(line: 541, column: 13, scope: !3098)
!3104 = !DILocalVariable(name: "is_dir", scope: !3079, file: !1050, line: 544, type: !142)
!3105 = !DILocation(line: 544, column: 14, scope: !3079)
!3106 = !DILocation(line: 544, column: 23, scope: !3079)
!3107 = !DILocation(line: 544, column: 28, scope: !3079)
!3108 = !DILocation(line: 544, column: 37, scope: !3079)
!3109 = !DILocation(line: 544, column: 47, scope: !3079)
!3110 = !DILocation(line: 544, column: 50, scope: !3079)
!3111 = !DILocation(line: 544, column: 55, scope: !3079)
!3112 = !DILocation(line: 544, column: 64, scope: !3079)
!3113 = !DILocalVariable(name: "s", scope: !3079, file: !1050, line: 545, type: !106)
!3114 = !DILocation(line: 545, column: 24, scope: !3079)
!3115 = !DILocation(line: 545, column: 36, scope: !3079)
!3116 = !DILocation(line: 545, column: 41, scope: !3079)
!3117 = !DILocation(line: 545, column: 46, scope: !3079)
!3118 = !DILocation(line: 545, column: 54, scope: !3079)
!3119 = !DILocation(line: 545, column: 28, scope: !3079)
!3120 = !DILocation(line: 546, column: 13, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3079, file: !1050, line: 546, column: 13)
!3122 = !DILocation(line: 546, column: 15, scope: !3121)
!3123 = !DILocation(line: 546, column: 13, scope: !3079)
!3124 = !DILocation(line: 547, column: 18, scope: !3121)
!3125 = !DILocation(line: 547, column: 11, scope: !3121)
!3126 = !DILocation(line: 548, column: 24, scope: !3079)
!3127 = !DILocation(line: 548, column: 29, scope: !3079)
!3128 = !DILocation(line: 548, column: 34, scope: !3079)
!3129 = !DILocation(line: 548, column: 37, scope: !3079)
!3130 = !DILocation(line: 548, column: 16, scope: !3079)
!3131 = !DILocation(line: 548, column: 9, scope: !3079)
!3132 = !DILocation(line: 552, column: 7, scope: !2922)
!3133 = !DILocation(line: 552, column: 7, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !2922, file: !1050, line: 552, column: 7)
!3135 = !DILocation(line: 553, column: 22, scope: !2922)
!3136 = !DILocation(line: 553, column: 27, scope: !2922)
!3137 = !DILocation(line: 553, column: 7, scope: !2922)
!3138 = !DILocation(line: 554, column: 7, scope: !2922)
!3139 = !DILocation(line: 559, column: 17, scope: !2922)
!3140 = !DILocation(line: 559, column: 22, scope: !2922)
!3141 = !DILocation(line: 559, column: 33, scope: !2922)
!3142 = !DILocation(line: 560, column: 14, scope: !2922)
!3143 = !DILocation(line: 559, column: 7, scope: !2922)
!3144 = !DILocation(line: 561, column: 22, scope: !2922)
!3145 = !DILocation(line: 561, column: 27, scope: !2922)
!3146 = !DILocation(line: 561, column: 7, scope: !2922)
!3147 = !DILocation(line: 562, column: 7, scope: !2922)
!3148 = !DILocation(line: 565, column: 20, scope: !2922)
!3149 = !DILocation(line: 567, column: 14, scope: !2922)
!3150 = !DILocation(line: 567, column: 19, scope: !2922)
!3151 = !DILocation(line: 568, column: 14, scope: !2922)
!3152 = !DILocation(line: 565, column: 7, scope: !2922)
!3153 = !DILocation(line: 570, column: 7, scope: !2922)
!3154 = !DILocation(line: 572, column: 1, scope: !2908)
!3155 = distinct !DISubprogram(name: "is_empty_dir", scope: !212, file: !212, line: 290, type: !3156, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!142, !7, !116}
!3158 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !3155, file: !212, line: 290, type: !7)
!3159 = !DILocation(line: 290, column: 19, scope: !3155)
!3160 = !DILocalVariable(name: "dir", arg: 2, scope: !3155, file: !212, line: 290, type: !116)
!3161 = !DILocation(line: 290, column: 39, scope: !3155)
!3162 = !DILocalVariable(name: "dirp", scope: !3155, file: !212, line: 292, type: !541)
!3163 = !DILocation(line: 292, column: 8, scope: !3155)
!3164 = !DILocalVariable(name: "dp", scope: !3155, file: !212, line: 293, type: !1174)
!3165 = !DILocation(line: 293, column: 24, scope: !3155)
!3166 = !DILocalVariable(name: "saved_errno", scope: !3155, file: !212, line: 294, type: !7)
!3167 = !DILocation(line: 294, column: 7, scope: !3155)
!3168 = !DILocalVariable(name: "fd", scope: !3155, file: !212, line: 295, type: !7)
!3169 = !DILocation(line: 295, column: 7, scope: !3155)
!3170 = !DILocation(line: 295, column: 20, scope: !3155)
!3171 = !DILocation(line: 295, column: 28, scope: !3155)
!3172 = !DILocation(line: 295, column: 12, scope: !3155)
!3173 = !DILocation(line: 299, column: 7, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3155, file: !212, line: 299, column: 7)
!3175 = !DILocation(line: 299, column: 10, scope: !3174)
!3176 = !DILocation(line: 299, column: 7, scope: !3155)
!3177 = !DILocation(line: 300, column: 5, scope: !3174)
!3178 = !DILocation(line: 302, column: 21, scope: !3155)
!3179 = !DILocation(line: 302, column: 10, scope: !3155)
!3180 = !DILocation(line: 302, column: 8, scope: !3155)
!3181 = !DILocation(line: 303, column: 7, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3155, file: !212, line: 303, column: 7)
!3183 = !DILocation(line: 303, column: 12, scope: !3182)
!3184 = !DILocation(line: 303, column: 7, scope: !3155)
!3185 = !DILocation(line: 305, column: 14, scope: !3186)
!3186 = distinct !DILexicalBlock(scope: !3182, file: !212, line: 304, column: 5)
!3187 = !DILocation(line: 305, column: 7, scope: !3186)
!3188 = !DILocation(line: 306, column: 7, scope: !3186)
!3189 = !DILocation(line: 309, column: 3, scope: !3155)
!3190 = !DILocation(line: 309, column: 9, scope: !3155)
!3191 = !DILocation(line: 310, column: 41, scope: !3155)
!3192 = !DILocation(line: 310, column: 8, scope: !3155)
!3193 = !DILocation(line: 310, column: 6, scope: !3155)
!3194 = !DILocation(line: 311, column: 17, scope: !3155)
!3195 = !DILocation(line: 311, column: 15, scope: !3155)
!3196 = !DILocation(line: 312, column: 13, scope: !3155)
!3197 = !DILocation(line: 312, column: 3, scope: !3155)
!3198 = !DILocation(line: 313, column: 7, scope: !3199)
!3199 = distinct !DILexicalBlock(scope: !3155, file: !212, line: 313, column: 7)
!3200 = !DILocation(line: 313, column: 10, scope: !3199)
!3201 = !DILocation(line: 313, column: 7, scope: !3155)
!3202 = !DILocation(line: 314, column: 5, scope: !3199)
!3203 = !DILocation(line: 315, column: 10, scope: !3155)
!3204 = !DILocation(line: 315, column: 22, scope: !3155)
!3205 = !DILocation(line: 315, column: 3, scope: !3155)
!3206 = !DILocation(line: 316, column: 1, scope: !3155)
!3207 = distinct !DISubprogram(name: "mark_ancestor_dirs", scope: !1050, file: !1050, line: 352, type: !3208, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{null, !1156}
!3210 = !DILocalVariable(name: "ent", arg: 1, scope: !3207, file: !1050, line: 352, type: !1156)
!3211 = !DILocation(line: 352, column: 29, scope: !3207)
!3212 = !DILocalVariable(name: "p", scope: !3207, file: !1050, line: 354, type: !1156)
!3213 = !DILocation(line: 354, column: 11, scope: !3207)
!3214 = !DILocation(line: 355, column: 12, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3207, file: !1050, line: 355, column: 3)
!3216 = !DILocation(line: 355, column: 17, scope: !3215)
!3217 = !DILocation(line: 355, column: 10, scope: !3215)
!3218 = !DILocation(line: 355, column: 8, scope: !3215)
!3219 = !DILocation(line: 355, column: 46, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !3215, file: !1050, line: 355, column: 3)
!3221 = !DILocation(line: 355, column: 49, scope: !3220)
!3222 = !DILocation(line: 355, column: 43, scope: !3220)
!3223 = !DILocation(line: 355, column: 3, scope: !3215)
!3224 = !DILocation(line: 357, column: 11, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3226, file: !1050, line: 357, column: 11)
!3226 = distinct !DILexicalBlock(scope: !3220, file: !1050, line: 356, column: 5)
!3227 = !DILocation(line: 357, column: 14, scope: !3225)
!3228 = !DILocation(line: 357, column: 11, scope: !3226)
!3229 = !DILocation(line: 358, column: 9, scope: !3225)
!3230 = !DILocation(line: 359, column: 7, scope: !3226)
!3231 = !DILocation(line: 359, column: 10, scope: !3226)
!3232 = !DILocation(line: 359, column: 21, scope: !3226)
!3233 = !DILocation(line: 360, column: 5, scope: !3226)
!3234 = !DILocation(line: 355, column: 64, scope: !3220)
!3235 = !DILocation(line: 355, column: 67, scope: !3220)
!3236 = !DILocation(line: 355, column: 62, scope: !3220)
!3237 = !DILocation(line: 355, column: 3, scope: !3220)
!3238 = distinct !{!3238, !3223, !3239}
!3239 = !DILocation(line: 360, column: 5, scope: !3215)
!3240 = !DILocation(line: 361, column: 1, scope: !3207)
!3241 = distinct !DISubprogram(name: "fts_skip_tree", scope: !1050, file: !1050, line: 341, type: !3242, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{null, !1063, !1156}
!3244 = !DILocalVariable(name: "fts", arg: 1, scope: !3241, file: !1050, line: 341, type: !1063)
!3245 = !DILocation(line: 341, column: 21, scope: !3241)
!3246 = !DILocalVariable(name: "ent", arg: 2, scope: !3241, file: !1050, line: 341, type: !1156)
!3247 = !DILocation(line: 341, column: 34, scope: !3241)
!3248 = !DILocation(line: 343, column: 12, scope: !3241)
!3249 = !DILocation(line: 343, column: 17, scope: !3241)
!3250 = !DILocation(line: 343, column: 3, scope: !3241)
!3251 = !DILocalVariable(name: "__x", scope: !3252, file: !1050, line: 345, type: !1156)
!3252 = distinct !DILexicalBlock(scope: !3241, file: !1050, line: 345, column: 3)
!3253 = !DILocation(line: 345, column: 3, scope: !3252)
!3254 = !DILocation(line: 346, column: 1, scope: !3241)
!3255 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !212, file: !212, line: 265, type: !2613, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3256 = !DILocalVariable(name: "file_name", arg: 1, scope: !3255, file: !212, line: 265, type: !116)
!3257 = !DILocation(line: 265, column: 28, scope: !3255)
!3258 = !DILocation(line: 267, column: 7, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3255, file: !212, line: 267, column: 7)
!3260 = !DILocation(line: 267, column: 20, scope: !3259)
!3261 = !DILocation(line: 267, column: 7, scope: !3255)
!3262 = !DILocalVariable(name: "sep", scope: !3263, file: !212, line: 269, type: !10)
!3263 = distinct !DILexicalBlock(scope: !3259, file: !212, line: 268, column: 5)
!3264 = !DILocation(line: 269, column: 12, scope: !3263)
!3265 = !DILocation(line: 269, column: 18, scope: !3263)
!3266 = !DILocation(line: 269, column: 29, scope: !3263)
!3267 = !DILocation(line: 269, column: 42, scope: !3263)
!3268 = !DILocation(line: 269, column: 50, scope: !3263)
!3269 = !DILocation(line: 270, column: 17, scope: !3263)
!3270 = !DILocation(line: 270, column: 21, scope: !3263)
!3271 = !DILocation(line: 270, column: 24, scope: !3263)
!3272 = !DILocation(line: 270, column: 7, scope: !3263)
!3273 = !DILocation(line: 273, column: 5, scope: !3259)
!3274 = !DILocation(line: 274, column: 1, scope: !3255)
!3275 = distinct !DISubprogram(name: "prompt", scope: !1050, file: !1050, line: 176, type: !3276, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!106, !3278, !3279, !142, !2816, !1057, !3280}
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!3281 = !DILocalVariable(name: "fts", arg: 1, scope: !3275, file: !1050, line: 176, type: !3278)
!3282 = !DILocation(line: 176, column: 20, scope: !3275)
!3283 = !DILocalVariable(name: "ent", arg: 2, scope: !3275, file: !1050, line: 176, type: !3279)
!3284 = !DILocation(line: 176, column: 39, scope: !3275)
!3285 = !DILocalVariable(name: "is_dir", arg: 3, scope: !3275, file: !1050, line: 176, type: !142)
!3286 = !DILocation(line: 176, column: 49, scope: !3275)
!3287 = !DILocalVariable(name: "x", arg: 4, scope: !3275, file: !1050, line: 177, type: !2816)
!3288 = !DILocation(line: 177, column: 34, scope: !3275)
!3289 = !DILocalVariable(name: "mode", arg: 5, scope: !3275, file: !1050, line: 177, type: !1057)
!3290 = !DILocation(line: 177, column: 56, scope: !3275)
!3291 = !DILocalVariable(name: "is_empty_p", arg: 6, scope: !3275, file: !1050, line: 178, type: !3280)
!3292 = !DILocation(line: 178, column: 18, scope: !3275)
!3293 = !DILocalVariable(name: "fd_cwd", scope: !3275, file: !1050, line: 180, type: !7)
!3294 = !DILocation(line: 180, column: 7, scope: !3275)
!3295 = !DILocation(line: 180, column: 16, scope: !3275)
!3296 = !DILocation(line: 180, column: 21, scope: !3275)
!3297 = !DILocalVariable(name: "full_name", scope: !3275, file: !1050, line: 181, type: !116)
!3298 = !DILocation(line: 181, column: 15, scope: !3275)
!3299 = !DILocation(line: 181, column: 27, scope: !3275)
!3300 = !DILocation(line: 181, column: 32, scope: !3275)
!3301 = !DILocalVariable(name: "filename", scope: !3275, file: !1050, line: 182, type: !116)
!3302 = !DILocation(line: 182, column: 15, scope: !3275)
!3303 = !DILocation(line: 182, column: 26, scope: !3275)
!3304 = !DILocation(line: 182, column: 31, scope: !3275)
!3305 = !DILocation(line: 183, column: 7, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3275, file: !1050, line: 183, column: 7)
!3307 = !DILocation(line: 183, column: 7, scope: !3275)
!3308 = !DILocation(line: 184, column: 6, scope: !3306)
!3309 = !DILocation(line: 184, column: 17, scope: !3306)
!3310 = !DILocation(line: 184, column: 5, scope: !3306)
!3311 = !DILocalVariable(name: "st", scope: !3275, file: !1050, line: 186, type: !1093)
!3312 = !DILocation(line: 186, column: 15, scope: !3275)
!3313 = !DILocalVariable(name: "sbuf", scope: !3275, file: !1050, line: 187, type: !1185)
!3314 = !DILocation(line: 187, column: 16, scope: !3275)
!3315 = !DILocation(line: 188, column: 20, scope: !3275)
!3316 = !DILocation(line: 188, column: 3, scope: !3275)
!3317 = !DILocalVariable(name: "dirent_type", scope: !3275, file: !1050, line: 190, type: !7)
!3318 = !DILocation(line: 190, column: 7, scope: !3275)
!3319 = !DILocation(line: 190, column: 21, scope: !3275)
!3320 = !DILocalVariable(name: "write_protected", scope: !3275, file: !1050, line: 191, type: !7)
!3321 = !DILocation(line: 191, column: 7, scope: !3275)
!3322 = !DILocalVariable(name: "is_empty", scope: !3275, file: !1050, line: 193, type: !142)
!3323 = !DILocation(line: 193, column: 8, scope: !3275)
!3324 = !DILocation(line: 194, column: 7, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3275, file: !1050, line: 194, column: 7)
!3326 = !DILocation(line: 194, column: 7, scope: !3275)
!3327 = !DILocation(line: 196, column: 32, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3325, file: !1050, line: 195, column: 5)
!3329 = !DILocation(line: 196, column: 40, scope: !3328)
!3330 = !DILocation(line: 196, column: 18, scope: !3328)
!3331 = !DILocation(line: 196, column: 16, scope: !3328)
!3332 = !DILocation(line: 197, column: 21, scope: !3328)
!3333 = !DILocation(line: 197, column: 8, scope: !3328)
!3334 = !DILocation(line: 197, column: 19, scope: !3328)
!3335 = !DILocation(line: 198, column: 5, scope: !3328)
!3336 = !DILocation(line: 203, column: 7, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3275, file: !1050, line: 203, column: 7)
!3338 = !DILocation(line: 203, column: 12, scope: !3337)
!3339 = !DILocation(line: 203, column: 7, scope: !3275)
!3340 = !DILocation(line: 204, column: 5, scope: !3337)
!3341 = !DILocation(line: 206, column: 7, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3275, file: !1050, line: 206, column: 7)
!3343 = !DILocation(line: 206, column: 10, scope: !3342)
!3344 = !DILocation(line: 206, column: 22, scope: !3342)
!3345 = !DILocation(line: 206, column: 7, scope: !3275)
!3346 = !DILocation(line: 207, column: 5, scope: !3342)
!3347 = !DILocalVariable(name: "wp_errno", scope: !3275, file: !1050, line: 209, type: !7)
!3348 = !DILocation(line: 209, column: 7, scope: !3275)
!3349 = !DILocation(line: 210, column: 8, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3275, file: !1050, line: 210, column: 7)
!3351 = !DILocation(line: 210, column: 11, scope: !3350)
!3352 = !DILocation(line: 211, column: 7, scope: !3350)
!3353 = !DILocation(line: 211, column: 12, scope: !3350)
!3354 = !DILocation(line: 211, column: 15, scope: !3350)
!3355 = !DILocation(line: 211, column: 27, scope: !3350)
!3356 = !DILocation(line: 211, column: 42, scope: !3350)
!3357 = !DILocation(line: 211, column: 45, scope: !3350)
!3358 = !DILocation(line: 211, column: 48, scope: !3350)
!3359 = !DILocation(line: 212, column: 7, scope: !3350)
!3360 = !DILocation(line: 212, column: 10, scope: !3350)
!3361 = !DILocation(line: 212, column: 22, scope: !3350)
!3362 = !DILocation(line: 210, column: 7, scope: !3275)
!3363 = !DILocation(line: 214, column: 54, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3350, file: !1050, line: 213, column: 5)
!3365 = !DILocation(line: 214, column: 62, scope: !3364)
!3366 = !DILocation(line: 214, column: 72, scope: !3364)
!3367 = !DILocation(line: 214, column: 25, scope: !3364)
!3368 = !DILocation(line: 214, column: 23, scope: !3364)
!3369 = !DILocation(line: 215, column: 18, scope: !3364)
!3370 = !DILocation(line: 215, column: 16, scope: !3364)
!3371 = !DILocation(line: 216, column: 5, scope: !3364)
!3372 = !DILocation(line: 218, column: 7, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3275, file: !1050, line: 218, column: 7)
!3374 = !DILocation(line: 218, column: 23, scope: !3373)
!3375 = !DILocation(line: 218, column: 26, scope: !3373)
!3376 = !DILocation(line: 218, column: 29, scope: !3373)
!3377 = !DILocation(line: 218, column: 41, scope: !3373)
!3378 = !DILocation(line: 218, column: 7, scope: !3275)
!3379 = !DILocation(line: 220, column: 16, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !1050, line: 220, column: 11)
!3381 = distinct !DILexicalBlock(scope: !3373, file: !1050, line: 219, column: 5)
!3382 = !DILocation(line: 220, column: 13, scope: !3380)
!3383 = !DILocation(line: 220, column: 32, scope: !3380)
!3384 = !DILocation(line: 220, column: 35, scope: !3380)
!3385 = !DILocation(line: 220, column: 47, scope: !3380)
!3386 = !DILocation(line: 220, column: 11, scope: !3381)
!3387 = !DILocation(line: 222, column: 30, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !1050, line: 222, column: 15)
!3389 = distinct !DILexicalBlock(scope: !3380, file: !1050, line: 221, column: 9)
!3390 = !DILocation(line: 222, column: 38, scope: !3388)
!3391 = !DILocation(line: 222, column: 48, scope: !3388)
!3392 = !DILocation(line: 222, column: 15, scope: !3388)
!3393 = !DILocation(line: 222, column: 75, scope: !3388)
!3394 = !DILocation(line: 222, column: 15, scope: !3389)
!3395 = !DILocation(line: 224, column: 19, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !1050, line: 224, column: 19)
!3397 = distinct !DILexicalBlock(scope: !3388, file: !1050, line: 223, column: 13)
!3398 = !DILocation(line: 224, column: 19, scope: !3397)
!3399 = !DILocation(line: 225, column: 29, scope: !3396)
!3400 = !DILocation(line: 225, column: 17, scope: !3396)
!3401 = !DILocation(line: 226, column: 24, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3396, file: !1050, line: 226, column: 24)
!3403 = !DILocation(line: 226, column: 24, scope: !3396)
!3404 = !DILocation(line: 227, column: 29, scope: !3402)
!3405 = !DILocation(line: 227, column: 17, scope: !3402)
!3406 = !DILocation(line: 229, column: 13, scope: !3397)
!3407 = !DILocation(line: 233, column: 31, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3388, file: !1050, line: 231, column: 13)
!3409 = !DILocation(line: 234, column: 26, scope: !3408)
!3410 = !DILocation(line: 234, column: 24, scope: !3408)
!3411 = !DILocation(line: 236, column: 9, scope: !3389)
!3412 = !DILocation(line: 238, column: 16, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3381, file: !1050, line: 238, column: 11)
!3414 = !DILocation(line: 238, column: 13, scope: !3413)
!3415 = !DILocation(line: 238, column: 11, scope: !3381)
!3416 = !DILocation(line: 239, column: 17, scope: !3413)
!3417 = !DILocation(line: 239, column: 9, scope: !3413)
!3418 = !DILocation(line: 243, column: 17, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !1050, line: 243, column: 17)
!3420 = distinct !DILexicalBlock(scope: !3413, file: !1050, line: 240, column: 11)
!3421 = !DILocation(line: 243, column: 20, scope: !3419)
!3422 = !DILocation(line: 243, column: 32, scope: !3419)
!3423 = !DILocation(line: 243, column: 17, scope: !3420)
!3424 = !DILocation(line: 244, column: 15, scope: !3419)
!3425 = !DILocation(line: 245, column: 13, scope: !3420)
!3426 = !DILocation(line: 251, column: 21, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3420, file: !1050, line: 251, column: 18)
!3428 = !DILocation(line: 251, column: 24, scope: !3427)
!3429 = !DILocation(line: 251, column: 34, scope: !3427)
!3430 = !DILocation(line: 251, column: 38, scope: !3427)
!3431 = !DILocation(line: 251, column: 41, scope: !3427)
!3432 = !DILocation(line: 251, column: 66, scope: !3427)
!3433 = !DILocation(line: 251, column: 69, scope: !3427)
!3434 = !DILocation(line: 251, column: 18, scope: !3420)
!3435 = !DILocation(line: 253, column: 33, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3427, file: !1050, line: 252, column: 15)
!3437 = !DILocation(line: 254, column: 26, scope: !3436)
!3438 = !DILocation(line: 255, column: 15, scope: !3436)
!3439 = !DILocation(line: 256, column: 13, scope: !3420)
!3440 = !DILocation(line: 257, column: 11, scope: !3420)
!3441 = !DILocalVariable(name: "quoted_name", scope: !3381, file: !1050, line: 259, type: !116)
!3442 = !DILocation(line: 259, column: 19, scope: !3381)
!3443 = !DILocation(line: 259, column: 33, scope: !3381)
!3444 = !DILocation(line: 261, column: 11, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3381, file: !1050, line: 261, column: 11)
!3446 = !DILocation(line: 261, column: 27, scope: !3445)
!3447 = !DILocation(line: 261, column: 11, scope: !3381)
!3448 = !DILocation(line: 263, column: 21, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3445, file: !1050, line: 262, column: 9)
!3450 = !DILocation(line: 263, column: 31, scope: !3449)
!3451 = !DILocation(line: 263, column: 54, scope: !3449)
!3452 = !DILocation(line: 263, column: 11, scope: !3449)
!3453 = !DILocation(line: 264, column: 11, scope: !3449)
!3454 = !DILocation(line: 268, column: 11, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3381, file: !1050, line: 268, column: 11)
!3456 = !DILocation(line: 268, column: 23, scope: !3455)
!3457 = !DILocation(line: 269, column: 11, scope: !3455)
!3458 = !DILocation(line: 269, column: 14, scope: !3455)
!3459 = !DILocation(line: 269, column: 19, scope: !3455)
!3460 = !DILocation(line: 270, column: 11, scope: !3455)
!3461 = !DILocation(line: 270, column: 15, scope: !3455)
!3462 = !DILocation(line: 268, column: 11, scope: !3381)
!3463 = !DILocation(line: 271, column: 18, scope: !3455)
!3464 = !DILocation(line: 272, column: 19, scope: !3455)
!3465 = !DILocation(line: 273, column: 21, scope: !3455)
!3466 = !DILocation(line: 274, column: 21, scope: !3455)
!3467 = !DILocation(line: 275, column: 18, scope: !3455)
!3468 = !DILocation(line: 275, column: 32, scope: !3455)
!3469 = !DILocation(line: 271, column: 9, scope: !3455)
!3470 = !DILocation(line: 278, column: 30, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !1050, line: 278, column: 15)
!3472 = distinct !DILexicalBlock(scope: !3455, file: !1050, line: 277, column: 9)
!3473 = !DILocation(line: 278, column: 38, scope: !3471)
!3474 = !DILocation(line: 278, column: 48, scope: !3471)
!3475 = !DILocation(line: 278, column: 15, scope: !3471)
!3476 = !DILocation(line: 278, column: 75, scope: !3471)
!3477 = !DILocation(line: 278, column: 15, scope: !3472)
!3478 = !DILocation(line: 280, column: 25, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3471, file: !1050, line: 279, column: 13)
!3480 = !DILocation(line: 280, column: 32, scope: !3479)
!3481 = !DILocation(line: 280, column: 55, scope: !3479)
!3482 = !DILocation(line: 280, column: 15, scope: !3479)
!3483 = !DILocation(line: 281, column: 15, scope: !3479)
!3484 = !DILocation(line: 284, column: 20, scope: !3472)
!3485 = !DILocation(line: 285, column: 21, scope: !3472)
!3486 = !DILocation(line: 291, column: 23, scope: !3472)
!3487 = !DILocation(line: 292, column: 23, scope: !3472)
!3488 = !DILocation(line: 293, column: 20, scope: !3472)
!3489 = !DILocation(line: 293, column: 45, scope: !3472)
!3490 = !DILocation(line: 293, column: 34, scope: !3472)
!3491 = !DILocation(line: 293, column: 52, scope: !3472)
!3492 = !DILocation(line: 284, column: 11, scope: !3472)
!3493 = !DILocation(line: 296, column: 12, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3381, file: !1050, line: 296, column: 11)
!3495 = !DILocation(line: 296, column: 11, scope: !3381)
!3496 = !DILocation(line: 297, column: 9, scope: !3494)
!3497 = !DILocation(line: 298, column: 5, scope: !3381)
!3498 = !DILocation(line: 299, column: 3, scope: !3275)
!3499 = !DILocation(line: 300, column: 1, scope: !3275)
!3500 = distinct !DISubprogram(name: "excise", scope: !1050, file: !1050, line: 367, type: !3501, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!106, !1063, !1156, !2816, !142}
!3503 = !DILocalVariable(name: "fts", arg: 1, scope: !3500, file: !1050, line: 367, type: !1063)
!3504 = !DILocation(line: 367, column: 14, scope: !3500)
!3505 = !DILocalVariable(name: "ent", arg: 2, scope: !3500, file: !1050, line: 367, type: !1156)
!3506 = !DILocation(line: 367, column: 27, scope: !3500)
!3507 = !DILocalVariable(name: "x", arg: 3, scope: !3500, file: !1050, line: 367, type: !2816)
!3508 = !DILocation(line: 367, column: 57, scope: !3500)
!3509 = !DILocalVariable(name: "is_dir", arg: 4, scope: !3500, file: !1050, line: 367, type: !142)
!3510 = !DILocation(line: 367, column: 65, scope: !3500)
!3511 = !DILocalVariable(name: "flag", scope: !3500, file: !1050, line: 369, type: !7)
!3512 = !DILocation(line: 369, column: 7, scope: !3500)
!3513 = !DILocation(line: 369, column: 14, scope: !3500)
!3514 = !DILocation(line: 370, column: 17, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3500, file: !1050, line: 370, column: 7)
!3516 = !DILocation(line: 370, column: 22, scope: !3515)
!3517 = !DILocation(line: 370, column: 34, scope: !3515)
!3518 = !DILocation(line: 370, column: 39, scope: !3515)
!3519 = !DILocation(line: 370, column: 52, scope: !3515)
!3520 = !DILocation(line: 370, column: 7, scope: !3515)
!3521 = !DILocation(line: 370, column: 58, scope: !3515)
!3522 = !DILocation(line: 370, column: 7, scope: !3500)
!3523 = !DILocation(line: 372, column: 11, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3525, file: !1050, line: 372, column: 11)
!3525 = distinct !DILexicalBlock(scope: !3515, file: !1050, line: 371, column: 5)
!3526 = !DILocation(line: 372, column: 14, scope: !3524)
!3527 = !DILocation(line: 372, column: 11, scope: !3525)
!3528 = !DILocation(line: 374, column: 20, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3524, file: !1050, line: 373, column: 9)
!3530 = !DILocation(line: 375, column: 22, scope: !3529)
!3531 = !DILocation(line: 376, column: 22, scope: !3529)
!3532 = !DILocation(line: 376, column: 42, scope: !3529)
!3533 = !DILocation(line: 374, column: 11, scope: !3529)
!3534 = !DILocation(line: 377, column: 9, scope: !3529)
!3535 = !DILocation(line: 378, column: 7, scope: !3525)
!3536 = !DILocation(line: 385, column: 7, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3500, file: !1050, line: 385, column: 7)
!3538 = !DILocation(line: 385, column: 13, scope: !3537)
!3539 = !DILocation(line: 385, column: 7, scope: !3500)
!3540 = !DILocalVariable(name: "st", scope: !3541, file: !1050, line: 387, type: !1093)
!3541 = distinct !DILexicalBlock(scope: !3537, file: !1050, line: 386, column: 5)
!3542 = !DILocation(line: 387, column: 19, scope: !3541)
!3543 = !DILocation(line: 388, column: 24, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3541, file: !1050, line: 388, column: 12)
!3545 = !DILocation(line: 388, column: 29, scope: !3544)
!3546 = !DILocation(line: 388, column: 41, scope: !3544)
!3547 = !DILocation(line: 388, column: 46, scope: !3544)
!3548 = !DILocation(line: 388, column: 15, scope: !3544)
!3549 = !DILocation(line: 389, column: 24, scope: !3544)
!3550 = !DILocation(line: 389, column: 27, scope: !3544)
!3551 = !DILocation(line: 389, column: 33, scope: !3544)
!3552 = !DILocation(line: 388, column: 12, scope: !3541)
!3553 = !DILocation(line: 390, column: 9, scope: !3544)
!3554 = !DILocation(line: 390, column: 15, scope: !3544)
!3555 = !DILocation(line: 391, column: 5, scope: !3541)
!3556 = !DILocation(line: 393, column: 26, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3500, file: !1050, line: 393, column: 7)
!3558 = !DILocation(line: 393, column: 29, scope: !3557)
!3559 = !DILocation(line: 393, column: 7, scope: !3557)
!3560 = !DILocation(line: 393, column: 7, scope: !3500)
!3561 = !DILocation(line: 394, column: 5, scope: !3557)
!3562 = !DILocation(line: 401, column: 7, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3500, file: !1050, line: 401, column: 7)
!3564 = !DILocation(line: 401, column: 12, scope: !3563)
!3565 = !DILocation(line: 401, column: 21, scope: !3563)
!3566 = !DILocation(line: 402, column: 7, scope: !3563)
!3567 = !DILocation(line: 402, column: 11, scope: !3563)
!3568 = !DILocation(line: 402, column: 17, scope: !3563)
!3569 = !DILocation(line: 402, column: 30, scope: !3563)
!3570 = !DILocation(line: 402, column: 33, scope: !3563)
!3571 = !DILocation(line: 402, column: 39, scope: !3563)
!3572 = !DILocation(line: 402, column: 49, scope: !3563)
!3573 = !DILocation(line: 402, column: 52, scope: !3563)
!3574 = !DILocation(line: 402, column: 58, scope: !3563)
!3575 = !DILocation(line: 403, column: 11, scope: !3563)
!3576 = !DILocation(line: 403, column: 14, scope: !3563)
!3577 = !DILocation(line: 403, column: 20, scope: !3563)
!3578 = !DILocation(line: 404, column: 7, scope: !3563)
!3579 = !DILocation(line: 404, column: 11, scope: !3563)
!3580 = !DILocation(line: 404, column: 16, scope: !3563)
!3581 = !DILocation(line: 404, column: 26, scope: !3563)
!3582 = !DILocation(line: 404, column: 35, scope: !3563)
!3583 = !DILocation(line: 404, column: 38, scope: !3563)
!3584 = !DILocation(line: 404, column: 43, scope: !3563)
!3585 = !DILocation(line: 404, column: 53, scope: !3563)
!3586 = !DILocation(line: 401, column: 7, scope: !3500)
!3587 = !DILocation(line: 405, column: 13, scope: !3563)
!3588 = !DILocation(line: 405, column: 18, scope: !3563)
!3589 = !DILocation(line: 405, column: 5, scope: !3563)
!3590 = !DILocation(line: 405, column: 11, scope: !3563)
!3591 = !DILocation(line: 406, column: 13, scope: !3500)
!3592 = !DILocation(line: 406, column: 20, scope: !3500)
!3593 = !DILocation(line: 406, column: 43, scope: !3500)
!3594 = !DILocation(line: 406, column: 3, scope: !3500)
!3595 = !DILocation(line: 407, column: 23, scope: !3500)
!3596 = !DILocation(line: 407, column: 3, scope: !3500)
!3597 = !DILocation(line: 408, column: 3, scope: !3500)
!3598 = !DILocation(line: 409, column: 1, scope: !3500)
!3599 = distinct !DISubprogram(name: "ignorable_missing", scope: !1050, file: !1050, line: 334, type: !3600, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!142, !2816, !7}
!3602 = !DILocalVariable(name: "x", arg: 1, scope: !3599, file: !1050, line: 334, type: !2816)
!3603 = !DILocation(line: 334, column: 45, scope: !3599)
!3604 = !DILocalVariable(name: "errnum", arg: 2, scope: !3599, file: !1050, line: 334, type: !7)
!3605 = !DILocation(line: 334, column: 52, scope: !3599)
!3606 = !DILocation(line: 336, column: 10, scope: !3599)
!3607 = !DILocation(line: 336, column: 13, scope: !3599)
!3608 = !DILocation(line: 336, column: 34, scope: !3599)
!3609 = !DILocation(line: 336, column: 61, scope: !3599)
!3610 = !DILocation(line: 336, column: 37, scope: !3599)
!3611 = !DILocation(line: 0, scope: !3599)
!3612 = !DILocation(line: 336, column: 3, scope: !3599)
!3613 = distinct !DISubprogram(name: "nonexistent_file_errno", scope: !1050, file: !1050, line: 306, type: !3614, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!142, !7}
!3616 = !DILocalVariable(name: "errnum", arg: 1, scope: !3613, file: !1050, line: 306, type: !7)
!3617 = !DILocation(line: 306, column: 29, scope: !3613)
!3618 = !DILocation(line: 320, column: 11, scope: !3613)
!3619 = !DILocation(line: 320, column: 3, scope: !3613)
!3620 = !DILocation(line: 326, column: 7, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3613, file: !1050, line: 321, column: 5)
!3622 = !DILocation(line: 328, column: 7, scope: !3621)
!3623 = !DILocation(line: 330, column: 1, scope: !3613)
!3624 = distinct !DISubprogram(name: "cache_stat_init", scope: !1050, file: !1050, line: 85, type: !3625, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!1185, !1185}
!3627 = !DILocalVariable(name: "st", arg: 1, scope: !3624, file: !1050, line: 85, type: !1185)
!3628 = !DILocation(line: 85, column: 31, scope: !3624)
!3629 = !DILocation(line: 87, column: 3, scope: !3624)
!3630 = !DILocation(line: 87, column: 7, scope: !3624)
!3631 = !DILocation(line: 87, column: 15, scope: !3624)
!3632 = !DILocation(line: 88, column: 10, scope: !3624)
!3633 = !DILocation(line: 88, column: 3, scope: !3624)
!3634 = distinct !DISubprogram(name: "write_protected_non_symlink", scope: !1050, file: !1050, line: 96, type: !3635, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3635 = !DISubroutineType(types: !3636)
!3636 = !{!7, !7, !116, !1185}
!3637 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !3634, file: !1050, line: 96, type: !7)
!3638 = !DILocation(line: 96, column: 34, scope: !3634)
!3639 = !DILocalVariable(name: "file", arg: 2, scope: !3634, file: !1050, line: 97, type: !116)
!3640 = !DILocation(line: 97, column: 42, scope: !3634)
!3641 = !DILocalVariable(name: "buf", arg: 3, scope: !3634, file: !1050, line: 98, type: !1185)
!3642 = !DILocation(line: 98, column: 43, scope: !3634)
!3643 = !DILocation(line: 100, column: 7, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3634, file: !1050, line: 100, column: 7)
!3645 = !DILocation(line: 100, column: 7, scope: !3634)
!3646 = !DILocation(line: 101, column: 5, scope: !3644)
!3647 = !DILocation(line: 102, column: 22, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3634, file: !1050, line: 102, column: 7)
!3649 = !DILocation(line: 102, column: 30, scope: !3648)
!3650 = !DILocation(line: 102, column: 36, scope: !3648)
!3651 = !DILocation(line: 102, column: 7, scope: !3648)
!3652 = !DILocation(line: 102, column: 62, scope: !3648)
!3653 = !DILocation(line: 102, column: 7, scope: !3634)
!3654 = !DILocation(line: 103, column: 5, scope: !3648)
!3655 = !DILocation(line: 104, column: 7, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3634, file: !1050, line: 104, column: 7)
!3657 = !DILocation(line: 104, column: 7, scope: !3634)
!3658 = !DILocation(line: 105, column: 5, scope: !3656)
!3659 = !DILocation(line: 155, column: 20, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !1050, line: 155, column: 9)
!3661 = distinct !DILexicalBlock(scope: !3634, file: !1050, line: 154, column: 3)
!3662 = !DILocation(line: 155, column: 28, scope: !3660)
!3663 = !DILocation(line: 155, column: 9, scope: !3660)
!3664 = !DILocation(line: 155, column: 52, scope: !3660)
!3665 = !DILocation(line: 155, column: 9, scope: !3661)
!3666 = !DILocation(line: 156, column: 7, scope: !3660)
!3667 = !DILocation(line: 158, column: 12, scope: !3661)
!3668 = !DILocation(line: 158, column: 18, scope: !3661)
!3669 = !DILocation(line: 158, column: 5, scope: !3661)
!3670 = !DILocation(line: 160, column: 1, scope: !3634)
!3671 = distinct !DISubprogram(name: "cache_fstatat", scope: !1050, file: !1050, line: 70, type: !3672, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!7, !7, !116, !1185, !7}
!3674 = !DILocalVariable(name: "fd", arg: 1, scope: !3671, file: !1050, line: 70, type: !7)
!3675 = !DILocation(line: 70, column: 20, scope: !3671)
!3676 = !DILocalVariable(name: "file", arg: 2, scope: !3671, file: !1050, line: 70, type: !116)
!3677 = !DILocation(line: 70, column: 36, scope: !3671)
!3678 = !DILocalVariable(name: "st", arg: 3, scope: !3671, file: !1050, line: 70, type: !1185)
!3679 = !DILocation(line: 70, column: 55, scope: !3671)
!3680 = !DILocalVariable(name: "flag", arg: 4, scope: !3671, file: !1050, line: 70, type: !7)
!3681 = !DILocation(line: 70, column: 63, scope: !3671)
!3682 = !DILocation(line: 72, column: 7, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3671, file: !1050, line: 72, column: 7)
!3684 = !DILocation(line: 72, column: 11, scope: !3683)
!3685 = !DILocation(line: 72, column: 19, scope: !3683)
!3686 = !DILocation(line: 72, column: 25, scope: !3683)
!3687 = !DILocation(line: 72, column: 37, scope: !3683)
!3688 = !DILocation(line: 72, column: 41, scope: !3683)
!3689 = !DILocation(line: 72, column: 47, scope: !3683)
!3690 = !DILocation(line: 72, column: 51, scope: !3683)
!3691 = !DILocation(line: 72, column: 28, scope: !3683)
!3692 = !DILocation(line: 72, column: 57, scope: !3683)
!3693 = !DILocation(line: 72, column: 7, scope: !3671)
!3694 = !DILocation(line: 74, column: 7, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3683, file: !1050, line: 73, column: 5)
!3696 = !DILocation(line: 74, column: 11, scope: !3695)
!3697 = !DILocation(line: 74, column: 19, scope: !3695)
!3698 = !DILocation(line: 75, column: 20, scope: !3695)
!3699 = !DILocation(line: 75, column: 7, scope: !3695)
!3700 = !DILocation(line: 75, column: 11, scope: !3695)
!3701 = !DILocation(line: 75, column: 18, scope: !3695)
!3702 = !DILocation(line: 76, column: 5, scope: !3695)
!3703 = !DILocation(line: 77, column: 12, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3671, file: !1050, line: 77, column: 7)
!3705 = !DILocation(line: 77, column: 16, scope: !3704)
!3706 = !DILocation(line: 77, column: 9, scope: !3704)
!3707 = !DILocation(line: 77, column: 7, scope: !3671)
!3708 = !DILocation(line: 78, column: 5, scope: !3704)
!3709 = !DILocation(line: 79, column: 17, scope: !3671)
!3710 = !DILocation(line: 79, column: 21, scope: !3671)
!3711 = !DILocation(line: 79, column: 11, scope: !3671)
!3712 = !DILocation(line: 79, column: 3, scope: !3671)
!3713 = !DILocation(line: 79, column: 9, scope: !3671)
!3714 = !DILocation(line: 80, column: 3, scope: !3671)
!3715 = !DILocation(line: 81, column: 1, scope: !3671)
!3716 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !212, file: !212, line: 278, type: !3717, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1049, retainedNodes: !216)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!1174, !541}
!3719 = !DILocalVariable(name: "dirp", arg: 1, scope: !3716, file: !212, line: 278, type: !541)
!3720 = !DILocation(line: 278, column: 39, scope: !3716)
!3721 = !DILocation(line: 280, column: 3, scope: !3716)
!3722 = !DILocalVariable(name: "dp", scope: !3723, file: !212, line: 282, type: !1174)
!3723 = distinct !DILexicalBlock(scope: !3716, file: !212, line: 281, column: 5)
!3724 = !DILocation(line: 282, column: 28, scope: !3723)
!3725 = !DILocation(line: 282, column: 42, scope: !3723)
!3726 = !DILocation(line: 282, column: 33, scope: !3723)
!3727 = !DILocation(line: 283, column: 11, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3723, file: !212, line: 283, column: 11)
!3729 = !DILocation(line: 283, column: 14, scope: !3728)
!3730 = !DILocation(line: 283, column: 22, scope: !3728)
!3731 = !DILocation(line: 283, column: 42, scope: !3728)
!3732 = !DILocation(line: 283, column: 46, scope: !3728)
!3733 = !DILocation(line: 283, column: 27, scope: !3728)
!3734 = !DILocation(line: 283, column: 11, scope: !3723)
!3735 = !DILocation(line: 284, column: 16, scope: !3728)
!3736 = !DILocation(line: 284, column: 9, scope: !3728)
!3737 = distinct !{!3737, !3721, !3738}
!3738 = !DILocation(line: 285, column: 5, scope: !3716)
!3739 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !292, file: !292, line: 893, type: !3740, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!142, !116, !116, !239, !142, !3742}
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3744)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !3745)
!3745 = !{!3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !3744, file: !77, line: 100, baseType: !68, size: 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !3744, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !3744, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !3744, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3744, file: !77, line: 115, baseType: !239, size: 32, offset: 128)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !3744, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !3744, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !3744, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !3744, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !3744, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !3744, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !3744, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !3744, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !3744, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !3744, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !3744, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !3744, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !3744, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !3744, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !3744, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !3744, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !3744, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !3744, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !3744, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !3744, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !3744, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !3744, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !3744, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !3744, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !3744, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !3744, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !3744, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !3744, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !3744, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !3744, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !3744, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !3744, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !3744, file: !77, line: 273, baseType: !241, size: 64, offset: 512)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !3744, file: !77, line: 276, baseType: !241, size: 64, offset: 576)
!3785 = !DILocalVariable(name: "src_name", arg: 1, scope: !3739, file: !292, line: 893, type: !116)
!3786 = !DILocation(line: 893, column: 39, scope: !3739)
!3787 = !DILocalVariable(name: "dst_name", arg: 2, scope: !3739, file: !292, line: 893, type: !116)
!3788 = !DILocation(line: 893, column: 61, scope: !3739)
!3789 = !DILocalVariable(name: "mode", arg: 3, scope: !3739, file: !292, line: 894, type: !239)
!3790 = !DILocation(line: 894, column: 34, scope: !3739)
!3791 = !DILocalVariable(name: "new_dst", arg: 4, scope: !3739, file: !292, line: 894, type: !142)
!3792 = !DILocation(line: 894, column: 45, scope: !3739)
!3793 = !DILocalVariable(name: "x", arg: 5, scope: !3739, file: !292, line: 894, type: !3742)
!3794 = !DILocation(line: 894, column: 79, scope: !3739)
!3795 = !DILocation(line: 896, column: 7, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3739, file: !292, line: 896, column: 7)
!3797 = !DILocation(line: 896, column: 10, scope: !3796)
!3798 = !DILocation(line: 896, column: 7, scope: !3739)
!3799 = !DILocalVariable(name: "all_errors", scope: !3800, file: !292, line: 899, type: !142)
!3800 = distinct !DILexicalBlock(scope: !3796, file: !292, line: 897, column: 5)
!3801 = !DILocation(line: 899, column: 12, scope: !3800)
!3802 = !DILocation(line: 899, column: 26, scope: !3800)
!3803 = !DILocation(line: 899, column: 29, scope: !3800)
!3804 = !DILocation(line: 899, column: 48, scope: !3800)
!3805 = !DILocation(line: 899, column: 51, scope: !3800)
!3806 = !DILocation(line: 899, column: 54, scope: !3800)
!3807 = !DILocalVariable(name: "some_errors", scope: !3800, file: !292, line: 900, type: !142)
!3808 = !DILocation(line: 900, column: 12, scope: !3800)
!3809 = !DILocation(line: 900, column: 27, scope: !3800)
!3810 = !DILocation(line: 900, column: 38, scope: !3800)
!3811 = !DILocation(line: 900, column: 42, scope: !3800)
!3812 = !DILocation(line: 900, column: 45, scope: !3800)
!3813 = !DILocation(line: 900, column: 41, scope: !3800)
!3814 = !DILocation(line: 0, scope: !3800)
!3815 = !DILocalVariable(name: "con", scope: !3800, file: !292, line: 901, type: !9)
!3816 = !DILocation(line: 901, column: 13, scope: !3800)
!3817 = !DILocation(line: 903, column: 29, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3800, file: !292, line: 903, column: 11)
!3819 = !DILocation(line: 903, column: 16, scope: !3818)
!3820 = !DILocation(line: 903, column: 13, scope: !3818)
!3821 = !DILocation(line: 903, column: 11, scope: !3800)
!3822 = !DILocation(line: 905, column: 31, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !292, line: 905, column: 15)
!3824 = distinct !DILexicalBlock(scope: !3818, file: !292, line: 904, column: 9)
!3825 = !DILocation(line: 905, column: 15, scope: !3823)
!3826 = !DILocation(line: 905, column: 36, scope: !3823)
!3827 = !DILocation(line: 905, column: 15, scope: !3824)
!3828 = !DILocation(line: 907, column: 19, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !292, line: 907, column: 19)
!3830 = distinct !DILexicalBlock(scope: !3823, file: !292, line: 906, column: 13)
!3831 = !DILocation(line: 907, column: 30, scope: !3829)
!3832 = !DILocation(line: 907, column: 34, scope: !3829)
!3833 = !DILocation(line: 907, column: 46, scope: !3829)
!3834 = !DILocation(line: 907, column: 69, scope: !3829)
!3835 = !DILocation(line: 907, column: 50, scope: !3829)
!3836 = !DILocation(line: 907, column: 19, scope: !3830)
!3837 = !DILocation(line: 908, column: 27, scope: !3829)
!3838 = !DILocation(line: 909, column: 24, scope: !3829)
!3839 = !DILocation(line: 910, column: 31, scope: !3829)
!3840 = !DILocation(line: 910, column: 24, scope: !3829)
!3841 = !DILocation(line: 908, column: 17, scope: !3829)
!3842 = !DILocation(line: 911, column: 19, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3830, file: !292, line: 911, column: 19)
!3844 = !DILocation(line: 911, column: 22, scope: !3843)
!3845 = !DILocation(line: 911, column: 19, scope: !3830)
!3846 = !DILocation(line: 913, column: 28, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3843, file: !292, line: 912, column: 17)
!3848 = !DILocation(line: 913, column: 19, scope: !3847)
!3849 = !DILocation(line: 914, column: 19, scope: !3847)
!3850 = !DILocation(line: 916, column: 13, scope: !3830)
!3851 = !DILocation(line: 917, column: 20, scope: !3824)
!3852 = !DILocation(line: 917, column: 11, scope: !3824)
!3853 = !DILocation(line: 918, column: 9, scope: !3824)
!3854 = !DILocation(line: 921, column: 15, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !292, line: 921, column: 15)
!3856 = distinct !DILexicalBlock(scope: !3818, file: !292, line: 920, column: 9)
!3857 = !DILocation(line: 921, column: 26, scope: !3855)
!3858 = !DILocation(line: 921, column: 30, scope: !3855)
!3859 = !DILocation(line: 921, column: 42, scope: !3855)
!3860 = !DILocation(line: 921, column: 65, scope: !3855)
!3861 = !DILocation(line: 921, column: 46, scope: !3855)
!3862 = !DILocation(line: 921, column: 15, scope: !3856)
!3863 = !DILocation(line: 923, column: 25, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3855, file: !292, line: 922, column: 13)
!3865 = !DILocation(line: 924, column: 22, scope: !3864)
!3866 = !DILocation(line: 925, column: 22, scope: !3864)
!3867 = !DILocation(line: 923, column: 15, scope: !3864)
!3868 = !DILocation(line: 926, column: 13, scope: !3864)
!3869 = !DILocation(line: 927, column: 15, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3856, file: !292, line: 927, column: 15)
!3871 = !DILocation(line: 927, column: 18, scope: !3870)
!3872 = !DILocation(line: 927, column: 15, scope: !3856)
!3873 = !DILocation(line: 928, column: 13, scope: !3870)
!3874 = !DILocation(line: 930, column: 5, scope: !3800)
!3875 = !DILocation(line: 931, column: 12, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3796, file: !292, line: 931, column: 12)
!3877 = !DILocation(line: 931, column: 15, scope: !3876)
!3878 = !DILocation(line: 931, column: 12, scope: !3796)
!3879 = !DILocation(line: 935, column: 11, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3881, file: !292, line: 935, column: 11)
!3881 = distinct !DILexicalBlock(scope: !3876, file: !292, line: 932, column: 5)
!3882 = !DILocation(line: 935, column: 19, scope: !3880)
!3883 = !DILocation(line: 935, column: 34, scope: !3880)
!3884 = !DILocation(line: 935, column: 44, scope: !3880)
!3885 = !DILocation(line: 935, column: 22, scope: !3880)
!3886 = !DILocation(line: 935, column: 50, scope: !3880)
!3887 = !DILocation(line: 936, column: 11, scope: !3880)
!3888 = !DILocation(line: 936, column: 35, scope: !3880)
!3889 = !DILocation(line: 936, column: 16, scope: !3880)
!3890 = !DILocation(line: 935, column: 11, scope: !3881)
!3891 = !DILocation(line: 938, column: 21, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3880, file: !292, line: 937, column: 9)
!3893 = !DILocation(line: 939, column: 18, scope: !3892)
!3894 = !DILocation(line: 940, column: 18, scope: !3892)
!3895 = !DILocation(line: 938, column: 11, scope: !3892)
!3896 = !DILocation(line: 941, column: 9, scope: !3892)
!3897 = !DILocation(line: 942, column: 5, scope: !3881)
!3898 = !DILocation(line: 944, column: 3, scope: !3739)
!3899 = !DILocation(line: 945, column: 1, scope: !3739)
!3900 = distinct !DISubprogram(name: "errno_unsupported", scope: !292, file: !292, line: 596, type: !3614, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!3901 = !DILocalVariable(name: "err", arg: 1, scope: !3900, file: !292, line: 596, type: !7)
!3902 = !DILocation(line: 596, column: 24, scope: !3900)
!3903 = !DILocation(line: 598, column: 10, scope: !3900)
!3904 = !DILocation(line: 598, column: 14, scope: !3900)
!3905 = !DILocation(line: 598, column: 25, scope: !3900)
!3906 = !DILocation(line: 598, column: 28, scope: !3900)
!3907 = !DILocation(line: 598, column: 32, scope: !3900)
!3908 = !DILocation(line: 598, column: 3, scope: !3900)
!3909 = distinct !DISubprogram(name: "defaultcon", scope: !3910, file: !3910, line: 44, type: !3911, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!3910 = !DIFile(filename: "src/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!7, !116, !239}
!3913 = !DILocalVariable(name: "path", arg: 1, scope: !3909, file: !3910, line: 44, type: !116)
!3914 = !DILocation(line: 44, column: 25, scope: !3909)
!3915 = !DILocalVariable(name: "mode", arg: 2, scope: !3909, file: !3910, line: 44, type: !239)
!3916 = !DILocation(line: 44, column: 38, scope: !3909)
!3917 = !DILocation(line: 45, column: 3, scope: !3909)
!3918 = !DILocation(line: 45, column: 9, scope: !3909)
!3919 = !DILocation(line: 45, column: 20, scope: !3909)
!3920 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3910, file: !3910, line: 25, type: !3614, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!3921 = !DILocalVariable(name: "err", arg: 1, scope: !3920, file: !3910, line: 25, type: !7)
!3922 = !DILocation(line: 25, column: 24, scope: !3920)
!3923 = !DILocation(line: 27, column: 10, scope: !3920)
!3924 = !DILocation(line: 27, column: 14, scope: !3920)
!3925 = !DILocation(line: 27, column: 25, scope: !3920)
!3926 = !DILocation(line: 27, column: 28, scope: !3920)
!3927 = !DILocation(line: 27, column: 32, scope: !3920)
!3928 = !DILocation(line: 27, column: 3, scope: !3920)
!3929 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !292, file: !292, line: 955, type: !3930, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{!142, !116, !142, !142, !3742}
!3932 = !DILocalVariable(name: "dst_name", arg: 1, scope: !3929, file: !292, line: 955, type: !116)
!3933 = !DILocation(line: 955, column: 36, scope: !3929)
!3934 = !DILocalVariable(name: "process_local", arg: 2, scope: !3929, file: !292, line: 955, type: !142)
!3935 = !DILocation(line: 955, column: 51, scope: !3929)
!3936 = !DILocalVariable(name: "recurse", arg: 3, scope: !3929, file: !292, line: 956, type: !142)
!3937 = !DILocation(line: 956, column: 29, scope: !3929)
!3938 = !DILocalVariable(name: "x", arg: 4, scope: !3929, file: !292, line: 956, type: !3742)
!3939 = !DILocation(line: 956, column: 63, scope: !3929)
!3940 = !DILocalVariable(name: "all_errors", scope: !3929, file: !292, line: 958, type: !142)
!3941 = !DILocation(line: 958, column: 8, scope: !3929)
!3942 = !DILocation(line: 958, column: 23, scope: !3929)
!3943 = !DILocation(line: 958, column: 26, scope: !3929)
!3944 = !DILocation(line: 959, column: 22, scope: !3929)
!3945 = !DILocation(line: 959, column: 25, scope: !3929)
!3946 = !DILocation(line: 959, column: 28, scope: !3929)
!3947 = !DILocalVariable(name: "some_errors", scope: !3929, file: !292, line: 960, type: !142)
!3948 = !DILocation(line: 960, column: 8, scope: !3929)
!3949 = !DILocation(line: 960, column: 23, scope: !3929)
!3950 = !DILocation(line: 960, column: 34, scope: !3929)
!3951 = !DILocation(line: 960, column: 38, scope: !3929)
!3952 = !DILocation(line: 960, column: 41, scope: !3929)
!3953 = !DILocation(line: 960, column: 37, scope: !3929)
!3954 = !DILocation(line: 0, scope: !3929)
!3955 = !DILocation(line: 962, column: 21, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3929, file: !292, line: 962, column: 7)
!3957 = !DILocation(line: 962, column: 31, scope: !3956)
!3958 = !DILocation(line: 962, column: 40, scope: !3956)
!3959 = !DILocation(line: 962, column: 9, scope: !3956)
!3960 = !DILocation(line: 962, column: 7, scope: !3929)
!3961 = !DILocation(line: 964, column: 11, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !292, line: 964, column: 11)
!3963 = distinct !DILexicalBlock(scope: !3956, file: !292, line: 963, column: 5)
!3964 = !DILocation(line: 964, column: 22, scope: !3962)
!3965 = !DILocation(line: 964, column: 26, scope: !3962)
!3966 = !DILocation(line: 964, column: 38, scope: !3962)
!3967 = !DILocation(line: 964, column: 61, scope: !3962)
!3968 = !DILocation(line: 964, column: 42, scope: !3962)
!3969 = !DILocation(line: 964, column: 11, scope: !3963)
!3970 = !DILocation(line: 965, column: 19, scope: !3962)
!3971 = !DILocation(line: 965, column: 26, scope: !3962)
!3972 = !DILocation(line: 966, column: 16, scope: !3962)
!3973 = !DILocation(line: 965, column: 9, scope: !3962)
!3974 = !DILocation(line: 967, column: 7, scope: !3963)
!3975 = !DILocation(line: 970, column: 3, scope: !3929)
!3976 = !DILocation(line: 971, column: 1, scope: !3929)
!3977 = distinct !DISubprogram(name: "restorecon", scope: !3910, file: !3910, line: 40, type: !3978, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!142, !116, !142, !142}
!3980 = !DILocalVariable(name: "path", arg: 1, scope: !3977, file: !3910, line: 40, type: !116)
!3981 = !DILocation(line: 40, column: 25, scope: !3977)
!3982 = !DILocalVariable(name: "recurse", arg: 2, scope: !3977, file: !3910, line: 40, type: !142)
!3983 = !DILocation(line: 40, column: 36, scope: !3977)
!3984 = !DILocalVariable(name: "preserve", arg: 3, scope: !3977, file: !3910, line: 40, type: !142)
!3985 = !DILocation(line: 40, column: 50, scope: !3977)
!3986 = !DILocation(line: 41, column: 3, scope: !3977)
!3987 = !DILocation(line: 41, column: 9, scope: !3977)
!3988 = !DILocation(line: 41, column: 20, scope: !3977)
!3989 = distinct !DISubprogram(name: "dest_info_init", scope: !292, file: !292, line: 1703, type: !3990, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{null, !3992}
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3993 = !DILocalVariable(name: "x", arg: 1, scope: !3989, file: !292, line: 1703, type: !3992)
!3994 = !DILocation(line: 1703, column: 36, scope: !3989)
!3995 = !DILocation(line: 1706, column: 7, scope: !3989)
!3996 = !DILocation(line: 1705, column: 3, scope: !3989)
!3997 = !DILocation(line: 1705, column: 6, scope: !3989)
!3998 = !DILocation(line: 1706, column: 5, scope: !3989)
!3999 = !DILocation(line: 1711, column: 1, scope: !3989)
!4000 = distinct !DISubprogram(name: "src_info_init", scope: !292, file: !292, line: 1716, type: !3990, scopeLine: 1717, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!4001 = !DILocalVariable(name: "x", arg: 1, scope: !4000, file: !292, line: 1716, type: !3992)
!4002 = !DILocation(line: 1716, column: 35, scope: !4000)
!4003 = !DILocation(line: 1728, column: 7, scope: !4000)
!4004 = !DILocation(line: 1727, column: 3, scope: !4000)
!4005 = !DILocation(line: 1727, column: 6, scope: !4000)
!4006 = !DILocation(line: 1728, column: 5, scope: !4000)
!4007 = !DILocation(line: 1733, column: 1, scope: !4000)
!4008 = distinct !DISubprogram(name: "copy", scope: !292, file: !292, line: 2971, type: !4009, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!142, !116, !116, !142, !3742, !4011, !4011}
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!4012 = !DILocalVariable(name: "src_name", arg: 1, scope: !4008, file: !292, line: 2971, type: !116)
!4013 = !DILocation(line: 2971, column: 19, scope: !4008)
!4014 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4008, file: !292, line: 2971, type: !116)
!4015 = !DILocation(line: 2971, column: 41, scope: !4008)
!4016 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4008, file: !292, line: 2972, type: !142)
!4017 = !DILocation(line: 2972, column: 12, scope: !4008)
!4018 = !DILocalVariable(name: "options", arg: 4, scope: !4008, file: !292, line: 2972, type: !3742)
!4019 = !DILocation(line: 2972, column: 54, scope: !4008)
!4020 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4008, file: !292, line: 2973, type: !4011)
!4021 = !DILocation(line: 2973, column: 13, scope: !4008)
!4022 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4008, file: !292, line: 2973, type: !4011)
!4023 = !DILocation(line: 2973, column: 35, scope: !4008)
!4024 = !DILocation(line: 2975, column: 3, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4026, file: !292, line: 2975, column: 3)
!4026 = distinct !DILexicalBlock(scope: !4008, file: !292, line: 2975, column: 3)
!4027 = !DILocation(line: 2975, column: 3, scope: !4026)
!4028 = !DILocation(line: 2984, column: 24, scope: !4008)
!4029 = !DILocation(line: 2984, column: 22, scope: !4008)
!4030 = !DILocation(line: 2985, column: 24, scope: !4008)
!4031 = !DILocation(line: 2985, column: 22, scope: !4008)
!4032 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4008, file: !292, line: 2987, type: !142)
!4033 = !DILocation(line: 2987, column: 8, scope: !4008)
!4034 = !DILocation(line: 2988, column: 25, scope: !4008)
!4035 = !DILocation(line: 2988, column: 35, scope: !4008)
!4036 = !DILocation(line: 2988, column: 45, scope: !4008)
!4037 = !DILocation(line: 2989, column: 25, scope: !4008)
!4038 = !DILocation(line: 2991, column: 25, scope: !4008)
!4039 = !DILocation(line: 2991, column: 41, scope: !4008)
!4040 = !DILocation(line: 2988, column: 10, scope: !4008)
!4041 = !DILocation(line: 2988, column: 3, scope: !4008)
!4042 = distinct !DISubprogram(name: "valid_options", scope: !292, file: !292, line: 2948, type: !4043, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!142, !3742}
!4045 = !DILocalVariable(name: "co", arg: 1, scope: !4042, file: !292, line: 2948, type: !3742)
!4046 = !DILocation(line: 2948, column: 41, scope: !4042)
!4047 = !DILocation(line: 2950, column: 3, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4049, file: !292, line: 2950, column: 3)
!4049 = distinct !DILexicalBlock(scope: !4042, file: !292, line: 2950, column: 3)
!4050 = !DILocation(line: 2950, column: 3, scope: !4049)
!4051 = !DILocation(line: 2951, column: 3, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !292, line: 2951, column: 3)
!4053 = distinct !DILexicalBlock(scope: !4042, file: !292, line: 2951, column: 3)
!4054 = !DILocation(line: 2951, column: 3, scope: !4053)
!4055 = !DILocation(line: 2952, column: 3, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4057, file: !292, line: 2952, column: 3)
!4057 = distinct !DILexicalBlock(scope: !4042, file: !292, line: 2952, column: 3)
!4058 = !DILocation(line: 2952, column: 3, scope: !4057)
!4059 = !DILocation(line: 2953, column: 3, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !4061, file: !292, line: 2953, column: 3)
!4061 = distinct !DILexicalBlock(scope: !4042, file: !292, line: 2953, column: 3)
!4062 = !DILocation(line: 2953, column: 3, scope: !4061)
!4063 = !DILocation(line: 2954, column: 3, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !292, line: 2954, column: 3)
!4065 = distinct !DILexicalBlock(scope: !4042, file: !292, line: 2954, column: 3)
!4066 = !DILocation(line: 2954, column: 3, scope: !4065)
!4067 = !DILocation(line: 2955, column: 3, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !292, line: 2955, column: 3)
!4069 = distinct !DILexicalBlock(scope: !4042, file: !292, line: 2955, column: 3)
!4070 = !DILocation(line: 2955, column: 3, scope: !4069)
!4071 = !DILocation(line: 2958, column: 3, scope: !4042)
!4072 = distinct !DISubprogram(name: "copy_internal", scope: !292, file: !292, line: 1846, type: !4073, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!142, !116, !116, !142, !391, !375, !3742, !142, !4011, !4011, !4011}
!4075 = !DILocalVariable(name: "src_name", arg: 1, scope: !4072, file: !292, line: 1846, type: !116)
!4076 = !DILocation(line: 1846, column: 28, scope: !4072)
!4077 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4072, file: !292, line: 1846, type: !116)
!4078 = !DILocation(line: 1846, column: 50, scope: !4072)
!4079 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4072, file: !292, line: 1847, type: !142)
!4080 = !DILocation(line: 1847, column: 21, scope: !4072)
!4081 = !DILocalVariable(name: "parent", arg: 4, scope: !4072, file: !292, line: 1848, type: !391)
!4082 = !DILocation(line: 1848, column: 35, scope: !4072)
!4083 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4072, file: !292, line: 1849, type: !375)
!4084 = !DILocation(line: 1849, column: 33, scope: !4072)
!4085 = !DILocalVariable(name: "x", arg: 6, scope: !4072, file: !292, line: 1850, type: !3742)
!4086 = !DILocation(line: 1850, column: 41, scope: !4072)
!4087 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4072, file: !292, line: 1851, type: !142)
!4088 = !DILocation(line: 1851, column: 21, scope: !4072)
!4089 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4072, file: !292, line: 1852, type: !4011)
!4090 = !DILocation(line: 1852, column: 22, scope: !4072)
!4091 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4072, file: !292, line: 1853, type: !4011)
!4092 = !DILocation(line: 1853, column: 22, scope: !4072)
!4093 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4072, file: !292, line: 1854, type: !4011)
!4094 = !DILocation(line: 1854, column: 22, scope: !4072)
!4095 = !DILocalVariable(name: "src_sb", scope: !4072, file: !292, line: 1856, type: !338)
!4096 = !DILocation(line: 1856, column: 15, scope: !4072)
!4097 = !DILocalVariable(name: "dst_sb", scope: !4072, file: !292, line: 1857, type: !338)
!4098 = !DILocation(line: 1857, column: 15, scope: !4072)
!4099 = !DILocalVariable(name: "src_mode", scope: !4072, file: !292, line: 1858, type: !239)
!4100 = !DILocation(line: 1858, column: 10, scope: !4072)
!4101 = !DILocalVariable(name: "dst_mode", scope: !4072, file: !292, line: 1859, type: !239)
!4102 = !DILocation(line: 1859, column: 10, scope: !4072)
!4103 = !DILocalVariable(name: "dst_mode_bits", scope: !4072, file: !292, line: 1860, type: !239)
!4104 = !DILocation(line: 1860, column: 10, scope: !4072)
!4105 = !DILocalVariable(name: "omitted_permissions", scope: !4072, file: !292, line: 1861, type: !239)
!4106 = !DILocation(line: 1861, column: 10, scope: !4072)
!4107 = !DILocalVariable(name: "restore_dst_mode", scope: !4072, file: !292, line: 1862, type: !142)
!4108 = !DILocation(line: 1862, column: 8, scope: !4072)
!4109 = !DILocalVariable(name: "earlier_file", scope: !4072, file: !292, line: 1863, type: !9)
!4110 = !DILocation(line: 1863, column: 9, scope: !4072)
!4111 = !DILocalVariable(name: "dst_backup", scope: !4072, file: !292, line: 1864, type: !9)
!4112 = !DILocation(line: 1864, column: 9, scope: !4072)
!4113 = !DILocalVariable(name: "delayed_ok", scope: !4072, file: !292, line: 1865, type: !142)
!4114 = !DILocation(line: 1865, column: 8, scope: !4072)
!4115 = !DILocalVariable(name: "copied_as_regular", scope: !4072, file: !292, line: 1866, type: !142)
!4116 = !DILocation(line: 1866, column: 8, scope: !4072)
!4117 = !DILocalVariable(name: "dest_is_symlink", scope: !4072, file: !292, line: 1867, type: !142)
!4118 = !DILocation(line: 1867, column: 8, scope: !4072)
!4119 = !DILocalVariable(name: "have_dst_lstat", scope: !4072, file: !292, line: 1868, type: !142)
!4120 = !DILocation(line: 1868, column: 8, scope: !4072)
!4121 = !DILocation(line: 1870, column: 4, scope: !4072)
!4122 = !DILocation(line: 1870, column: 19, scope: !4072)
!4123 = !DILocalVariable(name: "rename_errno", scope: !4072, file: !292, line: 1872, type: !7)
!4124 = !DILocation(line: 1872, column: 7, scope: !4072)
!4125 = !DILocation(line: 1872, column: 22, scope: !4072)
!4126 = !DILocation(line: 1872, column: 25, scope: !4072)
!4127 = !DILocation(line: 1873, column: 7, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 1873, column: 7)
!4129 = !DILocation(line: 1873, column: 10, scope: !4128)
!4130 = !DILocation(line: 1873, column: 7, scope: !4072)
!4131 = !DILocation(line: 1875, column: 11, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !292, line: 1875, column: 11)
!4133 = distinct !DILexicalBlock(scope: !4128, file: !292, line: 1874, column: 5)
!4134 = !DILocation(line: 1875, column: 24, scope: !4132)
!4135 = !DILocation(line: 1875, column: 11, scope: !4133)
!4136 = !DILocation(line: 1876, column: 46, scope: !4132)
!4137 = !DILocation(line: 1876, column: 66, scope: !4132)
!4138 = !DILocation(line: 1876, column: 25, scope: !4132)
!4139 = !DILocation(line: 1878, column: 27, scope: !4132)
!4140 = !DILocation(line: 1876, column: 22, scope: !4132)
!4141 = !DILocation(line: 1876, column: 9, scope: !4132)
!4142 = !DILocation(line: 1879, column: 17, scope: !4133)
!4143 = !DILocation(line: 1879, column: 30, scope: !4133)
!4144 = !DILocation(line: 1879, column: 15, scope: !4133)
!4145 = !DILocation(line: 1880, column: 11, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4133, file: !292, line: 1880, column: 11)
!4147 = !DILocation(line: 1880, column: 11, scope: !4133)
!4148 = !DILocation(line: 1881, column: 29, scope: !4146)
!4149 = !DILocation(line: 1881, column: 10, scope: !4146)
!4150 = !DILocation(line: 1881, column: 27, scope: !4146)
!4151 = !DILocation(line: 1881, column: 9, scope: !4146)
!4152 = !DILocation(line: 1882, column: 5, scope: !4133)
!4153 = !DILocation(line: 1884, column: 7, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 1884, column: 7)
!4155 = !DILocation(line: 1884, column: 20, scope: !4154)
!4156 = !DILocation(line: 1884, column: 7, scope: !4072)
!4157 = !DILocation(line: 1885, column: 10, scope: !4154)
!4158 = !DILocation(line: 1885, column: 13, scope: !4154)
!4159 = !DILocation(line: 1886, column: 9, scope: !4154)
!4160 = !DILocation(line: 1886, column: 22, scope: !4154)
!4161 = !DILocation(line: 1886, column: 32, scope: !4154)
!4162 = !DILocation(line: 1886, column: 35, scope: !4154)
!4163 = !DILocation(line: 1886, column: 38, scope: !4154)
!4164 = !DILocation(line: 1886, column: 50, scope: !4154)
!4165 = !DILocalVariable(name: "name", scope: !4166, file: !292, line: 1888, type: !116)
!4166 = distinct !DILexicalBlock(scope: !4154, file: !292, line: 1887, column: 5)
!4167 = !DILocation(line: 1888, column: 19, scope: !4166)
!4168 = !DILocation(line: 1888, column: 26, scope: !4166)
!4169 = !DILocation(line: 1888, column: 39, scope: !4166)
!4170 = !DILocation(line: 1888, column: 46, scope: !4166)
!4171 = !DILocation(line: 1888, column: 57, scope: !4166)
!4172 = !DILocation(line: 1889, column: 11, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4166, file: !292, line: 1889, column: 11)
!4174 = !DILocation(line: 1889, column: 36, scope: !4173)
!4175 = !DILocation(line: 1889, column: 11, scope: !4166)
!4176 = !DILocation(line: 1891, column: 21, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4173, file: !292, line: 1890, column: 9)
!4178 = !DILocation(line: 1891, column: 28, scope: !4177)
!4179 = !DILocation(line: 1891, column: 49, scope: !4177)
!4180 = !DILocation(line: 1891, column: 11, scope: !4177)
!4181 = !DILocation(line: 1892, column: 11, scope: !4177)
!4182 = !DILocation(line: 1895, column: 25, scope: !4166)
!4183 = !DILocation(line: 1895, column: 16, scope: !4166)
!4184 = !DILocation(line: 1897, column: 11, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4166, file: !292, line: 1897, column: 11)
!4186 = !DILocation(line: 1897, column: 30, scope: !4185)
!4187 = !DILocation(line: 1897, column: 34, scope: !4185)
!4188 = !DILocation(line: 1897, column: 37, scope: !4185)
!4189 = !DILocation(line: 1897, column: 11, scope: !4166)
!4190 = !DILocation(line: 1899, column: 26, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4185, file: !292, line: 1898, column: 9)
!4192 = !DILocation(line: 1899, column: 29, scope: !4191)
!4193 = !DILocation(line: 1899, column: 24, scope: !4191)
!4194 = !DILocation(line: 1900, column: 20, scope: !4191)
!4195 = !DILocation(line: 1901, column: 20, scope: !4191)
!4196 = !DILocation(line: 1902, column: 18, scope: !4191)
!4197 = !DILocation(line: 1899, column: 11, scope: !4191)
!4198 = !DILocation(line: 1903, column: 11, scope: !4191)
!4199 = !DILocation(line: 1905, column: 5, scope: !4166)
!4200 = !DILocation(line: 1918, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 1918, column: 7)
!4202 = !DILocation(line: 1918, column: 24, scope: !4201)
!4203 = !DILocation(line: 1918, column: 27, scope: !4201)
!4204 = !DILocation(line: 1918, column: 30, scope: !4201)
!4205 = !DILocation(line: 1918, column: 7, scope: !4072)
!4206 = !DILocation(line: 1920, column: 14, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !4208, file: !292, line: 1920, column: 12)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !292, line: 1919, column: 5)
!4209 = !DILocation(line: 1921, column: 12, scope: !4207)
!4210 = !DILocation(line: 1921, column: 15, scope: !4207)
!4211 = !DILocation(line: 1921, column: 18, scope: !4207)
!4212 = !DILocation(line: 1921, column: 30, scope: !4207)
!4213 = !DILocation(line: 1922, column: 12, scope: !4207)
!4214 = !DILocation(line: 1922, column: 26, scope: !4207)
!4215 = !DILocation(line: 1922, column: 29, scope: !4207)
!4216 = !DILocation(line: 1922, column: 39, scope: !4207)
!4217 = !DILocation(line: 1922, column: 15, scope: !4207)
!4218 = !DILocation(line: 1920, column: 12, scope: !4208)
!4219 = !DILocation(line: 1924, column: 24, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4207, file: !292, line: 1923, column: 9)
!4221 = !DILocation(line: 1925, column: 18, scope: !4220)
!4222 = !DILocation(line: 1924, column: 11, scope: !4220)
!4223 = !DILocation(line: 1926, column: 11, scope: !4220)
!4224 = !DILocation(line: 1929, column: 20, scope: !4208)
!4225 = !DILocation(line: 1929, column: 23, scope: !4208)
!4226 = !DILocation(line: 1929, column: 33, scope: !4208)
!4227 = !DILocation(line: 1929, column: 7, scope: !4208)
!4228 = !DILocation(line: 1930, column: 5, scope: !4208)
!4229 = !DILocalVariable(name: "dereference", scope: !4072, file: !292, line: 1932, type: !142)
!4230 = !DILocation(line: 1932, column: 8, scope: !4072)
!4231 = !DILocation(line: 1932, column: 42, scope: !4072)
!4232 = !DILocation(line: 1932, column: 45, scope: !4072)
!4233 = !DILocation(line: 1932, column: 22, scope: !4072)
!4234 = !DILocation(line: 1934, column: 8, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 1934, column: 7)
!4236 = !DILocation(line: 1934, column: 7, scope: !4072)
!4237 = !DILocation(line: 1936, column: 14, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4239, file: !292, line: 1936, column: 11)
!4239 = distinct !DILexicalBlock(scope: !4235, file: !292, line: 1935, column: 5)
!4240 = !DILocation(line: 1936, column: 27, scope: !4238)
!4241 = !DILocation(line: 1936, column: 37, scope: !4238)
!4242 = !DILocation(line: 1936, column: 40, scope: !4238)
!4243 = !DILocation(line: 1936, column: 43, scope: !4238)
!4244 = !DILocation(line: 1936, column: 55, scope: !4238)
!4245 = !DILocation(line: 1936, column: 11, scope: !4239)
!4246 = !DILocalVariable(name: "use_lstat", scope: !4247, file: !292, line: 1944, type: !142)
!4247 = distinct !DILexicalBlock(scope: !4238, file: !292, line: 1937, column: 9)
!4248 = !DILocation(line: 1944, column: 16, scope: !4247)
!4249 = !DILocation(line: 1945, column: 19, scope: !4247)
!4250 = !DILocation(line: 1946, column: 17, scope: !4247)
!4251 = !DILocation(line: 1946, column: 23, scope: !4247)
!4252 = !DILocation(line: 1946, column: 26, scope: !4247)
!4253 = !DILocation(line: 1947, column: 21, scope: !4247)
!4254 = !DILocation(line: 1947, column: 24, scope: !4247)
!4255 = !DILocation(line: 1947, column: 43, scope: !4247)
!4256 = !DILocation(line: 1947, column: 46, scope: !4247)
!4257 = !DILocation(line: 1948, column: 16, scope: !4247)
!4258 = !DILocation(line: 1948, column: 19, scope: !4247)
!4259 = !DILocation(line: 1948, column: 22, scope: !4247)
!4260 = !DILocation(line: 1948, column: 32, scope: !4247)
!4261 = !DILocation(line: 1948, column: 35, scope: !4247)
!4262 = !DILocation(line: 1948, column: 38, scope: !4247)
!4263 = !DILocation(line: 1948, column: 52, scope: !4247)
!4264 = !DILocation(line: 1948, column: 55, scope: !4247)
!4265 = !DILocation(line: 1948, column: 58, scope: !4247)
!4266 = !DILocation(line: 1949, column: 16, scope: !4247)
!4267 = !DILocation(line: 1949, column: 19, scope: !4247)
!4268 = !DILocation(line: 1949, column: 22, scope: !4247)
!4269 = !DILocation(line: 1949, column: 34, scope: !4247)
!4270 = !DILocation(line: 1950, column: 16, scope: !4247)
!4271 = !DILocation(line: 1950, column: 19, scope: !4247)
!4272 = !DILocation(line: 1950, column: 22, scope: !4247)
!4273 = !DILocalVariable(name: "fstatat_flags", scope: !4247, file: !292, line: 1951, type: !7)
!4274 = !DILocation(line: 1951, column: 15, scope: !4247)
!4275 = !DILocation(line: 1951, column: 31, scope: !4247)
!4276 = !DILocation(line: 1952, column: 34, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4247, file: !292, line: 1952, column: 15)
!4278 = !DILocation(line: 1952, column: 53, scope: !4277)
!4279 = !DILocation(line: 1952, column: 15, scope: !4277)
!4280 = !DILocation(line: 1952, column: 68, scope: !4277)
!4281 = !DILocation(line: 1952, column: 15, scope: !4247)
!4282 = !DILocation(line: 1954, column: 32, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4277, file: !292, line: 1953, column: 13)
!4284 = !DILocation(line: 1954, column: 30, scope: !4283)
!4285 = !DILocation(line: 1955, column: 28, scope: !4283)
!4286 = !DILocation(line: 1956, column: 13, scope: !4283)
!4287 = !DILocation(line: 1959, column: 19, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !292, line: 1959, column: 19)
!4289 = distinct !DILexicalBlock(scope: !4277, file: !292, line: 1958, column: 13)
!4290 = !DILocation(line: 1959, column: 25, scope: !4288)
!4291 = !DILocation(line: 1959, column: 34, scope: !4288)
!4292 = !DILocation(line: 1959, column: 37, scope: !4288)
!4293 = !DILocation(line: 1959, column: 40, scope: !4288)
!4294 = !DILocation(line: 1959, column: 19, scope: !4289)
!4295 = !DILocation(line: 1961, column: 24, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4288, file: !292, line: 1961, column: 24)
!4297 = !DILocation(line: 1961, column: 30, scope: !4296)
!4298 = !DILocation(line: 1961, column: 24, scope: !4288)
!4299 = !DILocation(line: 1963, column: 29, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4296, file: !292, line: 1962, column: 17)
!4301 = !DILocation(line: 1963, column: 36, scope: !4300)
!4302 = !DILocation(line: 1963, column: 57, scope: !4300)
!4303 = !DILocation(line: 1963, column: 19, scope: !4300)
!4304 = !DILocation(line: 1964, column: 19, scope: !4300)
!4305 = !DILocation(line: 1967, column: 25, scope: !4296)
!4306 = !DILocation(line: 1969, column: 9, scope: !4247)
!4307 = !DILocation(line: 1971, column: 11, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4239, file: !292, line: 1971, column: 11)
!4309 = !DILocation(line: 1971, column: 24, scope: !4308)
!4310 = !DILocation(line: 1971, column: 11, scope: !4239)
!4311 = !DILocalVariable(name: "return_now", scope: !4312, file: !292, line: 1973, type: !142)
!4312 = distinct !DILexicalBlock(scope: !4308, file: !292, line: 1972, column: 9)
!4313 = !DILocation(line: 1973, column: 16, scope: !4312)
!4314 = !DILocation(line: 1975, column: 15, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 1975, column: 15)
!4316 = !DILocation(line: 1975, column: 18, scope: !4315)
!4317 = !DILocation(line: 1975, column: 30, scope: !4315)
!4318 = !DILocation(line: 1976, column: 15, scope: !4315)
!4319 = !DILocation(line: 1976, column: 34, scope: !4315)
!4320 = !DILocation(line: 1976, column: 53, scope: !4315)
!4321 = !DILocation(line: 1977, column: 34, scope: !4315)
!4322 = !DILocation(line: 1976, column: 20, scope: !4315)
!4323 = !DILocation(line: 1975, column: 15, scope: !4312)
!4324 = !DILocation(line: 1979, column: 28, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4315, file: !292, line: 1978, column: 13)
!4326 = !DILocation(line: 1980, column: 22, scope: !4325)
!4327 = !DILocation(line: 1980, column: 47, scope: !4325)
!4328 = !DILocation(line: 1979, column: 15, scope: !4325)
!4329 = !DILocation(line: 1981, column: 15, scope: !4325)
!4330 = !DILocation(line: 1984, column: 15, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 1984, column: 15)
!4332 = !DILocation(line: 1984, column: 18, scope: !4331)
!4333 = !DILocation(line: 1984, column: 25, scope: !4331)
!4334 = !DILocation(line: 1984, column: 29, scope: !4331)
!4335 = !DILocation(line: 1984, column: 15, scope: !4312)
!4336 = !DILocalVariable(name: "options", scope: !4337, file: !292, line: 1990, type: !7)
!4337 = distinct !DILexicalBlock(scope: !4331, file: !292, line: 1985, column: 13)
!4338 = !DILocation(line: 1990, column: 19, scope: !4337)
!4339 = !DILocation(line: 1990, column: 31, scope: !4337)
!4340 = !DILocation(line: 1990, column: 34, scope: !4337)
!4341 = !DILocation(line: 1991, column: 31, scope: !4337)
!4342 = !DILocation(line: 1991, column: 37, scope: !4337)
!4343 = !DILocation(line: 1991, column: 40, scope: !4337)
!4344 = !DILocation(line: 1992, column: 37, scope: !4337)
!4345 = !DILocation(line: 1992, column: 47, scope: !4337)
!4346 = !DILocation(line: 1992, column: 64, scope: !4337)
!4347 = !DILocation(line: 1992, column: 54, scope: !4337)
!4348 = !DILocation(line: 0, scope: !4337)
!4349 = !DILocation(line: 1991, column: 34, scope: !4337)
!4350 = !DILocation(line: 1990, column: 30, scope: !4337)
!4351 = !DILocation(line: 1996, column: 34, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4337, file: !292, line: 1996, column: 19)
!4353 = !DILocation(line: 1996, column: 62, scope: !4352)
!4354 = !DILocation(line: 1996, column: 24, scope: !4352)
!4355 = !DILocation(line: 1996, column: 21, scope: !4352)
!4356 = !DILocation(line: 1996, column: 19, scope: !4337)
!4357 = !DILocation(line: 2002, column: 23, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4359, file: !292, line: 2002, column: 23)
!4359 = distinct !DILexicalBlock(scope: !4352, file: !292, line: 1997, column: 17)
!4360 = !DILocation(line: 2002, column: 23, scope: !4359)
!4361 = !DILocation(line: 2003, column: 22, scope: !4358)
!4362 = !DILocation(line: 2003, column: 39, scope: !4358)
!4363 = !DILocation(line: 2003, column: 21, scope: !4358)
!4364 = !DILocation(line: 2010, column: 51, scope: !4359)
!4365 = !DILocation(line: 2010, column: 68, scope: !4359)
!4366 = !DILocation(line: 2011, column: 58, scope: !4359)
!4367 = !DILocation(line: 2010, column: 34, scope: !4359)
!4368 = !DILocation(line: 2010, column: 32, scope: !4359)
!4369 = !DILocation(line: 2012, column: 23, scope: !4370)
!4370 = distinct !DILexicalBlock(scope: !4359, file: !292, line: 2012, column: 23)
!4371 = !DILocation(line: 2012, column: 23, scope: !4359)
!4372 = !DILocation(line: 2016, column: 47, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !292, line: 2016, column: 27)
!4374 = distinct !DILexicalBlock(scope: !4370, file: !292, line: 2013, column: 21)
!4375 = !DILocation(line: 2016, column: 61, scope: !4373)
!4376 = !DILocation(line: 2017, column: 47, scope: !4373)
!4377 = !DILocation(line: 2017, column: 50, scope: !4373)
!4378 = !DILocation(line: 2017, column: 59, scope: !4373)
!4379 = !DILocation(line: 2016, column: 29, scope: !4373)
!4380 = !DILocation(line: 2016, column: 27, scope: !4374)
!4381 = !DILocation(line: 2019, column: 27, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4373, file: !292, line: 2018, column: 25)
!4383 = !DILocation(line: 2021, column: 21, scope: !4374)
!4384 = !DILocation(line: 2023, column: 19, scope: !4359)
!4385 = !DILocation(line: 2025, column: 13, scope: !4337)
!4386 = !DILocation(line: 2034, column: 15, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 2034, column: 15)
!4388 = !DILocation(line: 2034, column: 18, scope: !4387)
!4389 = !DILocation(line: 2034, column: 15, scope: !4312)
!4390 = !DILocation(line: 2036, column: 33, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !292, line: 2036, column: 19)
!4392 = distinct !DILexicalBlock(scope: !4387, file: !292, line: 2035, column: 13)
!4393 = !DILocation(line: 2036, column: 36, scope: !4391)
!4394 = !DILocation(line: 2036, column: 19, scope: !4391)
!4395 = !DILocation(line: 2036, column: 19, scope: !4392)
!4396 = !DILocation(line: 2040, column: 23, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4398, file: !292, line: 2040, column: 23)
!4398 = distinct !DILexicalBlock(scope: !4391, file: !292, line: 2037, column: 17)
!4399 = !DILocation(line: 2040, column: 23, scope: !4398)
!4400 = !DILocation(line: 2041, column: 22, scope: !4397)
!4401 = !DILocation(line: 2041, column: 39, scope: !4397)
!4402 = !DILocation(line: 2041, column: 21, scope: !4397)
!4403 = !DILocation(line: 2042, column: 19, scope: !4398)
!4404 = !DILocation(line: 2044, column: 13, scope: !4392)
!4405 = !DILocation(line: 2047, column: 21, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4407, file: !292, line: 2047, column: 19)
!4407 = distinct !DILexicalBlock(scope: !4387, file: !292, line: 2046, column: 13)
!4408 = !DILocation(line: 2048, column: 19, scope: !4406)
!4409 = !DILocation(line: 2048, column: 23, scope: !4406)
!4410 = !DILocation(line: 2048, column: 26, scope: !4406)
!4411 = !DILocation(line: 2048, column: 38, scope: !4406)
!4412 = !DILocation(line: 2049, column: 23, scope: !4406)
!4413 = !DILocation(line: 2049, column: 27, scope: !4406)
!4414 = !DILocation(line: 2049, column: 30, scope: !4406)
!4415 = !DILocation(line: 2049, column: 42, scope: !4406)
!4416 = !DILocation(line: 2050, column: 27, scope: !4406)
!4417 = !DILocation(line: 2050, column: 46, scope: !4406)
!4418 = !DILocation(line: 2050, column: 49, scope: !4406)
!4419 = !DILocation(line: 2050, column: 32, scope: !4406)
!4420 = !DILocation(line: 2047, column: 19, scope: !4407)
!4421 = !DILocation(line: 2051, column: 17, scope: !4406)
!4422 = !DILocation(line: 2054, column: 15, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 2054, column: 15)
!4424 = !DILocation(line: 2054, column: 15, scope: !4312)
!4425 = !DILocation(line: 2055, column: 13, scope: !4423)
!4426 = !DILocation(line: 2057, column: 16, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 2057, column: 15)
!4428 = !DILocation(line: 2057, column: 15, scope: !4312)
!4429 = !DILocation(line: 2059, column: 19, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !292, line: 2059, column: 19)
!4431 = distinct !DILexicalBlock(scope: !4427, file: !292, line: 2058, column: 13)
!4432 = !DILocation(line: 2059, column: 19, scope: !4431)
!4433 = !DILocation(line: 2061, column: 23, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !292, line: 2061, column: 23)
!4435 = distinct !DILexicalBlock(scope: !4430, file: !292, line: 2060, column: 17)
!4436 = !DILocation(line: 2061, column: 26, scope: !4434)
!4437 = !DILocation(line: 2061, column: 36, scope: !4434)
!4438 = !DILocation(line: 2061, column: 39, scope: !4434)
!4439 = !DILocation(line: 2061, column: 42, scope: !4434)
!4440 = !DILocation(line: 2061, column: 54, scope: !4434)
!4441 = !DILocation(line: 2061, column: 23, scope: !4435)
!4442 = !DILocation(line: 2065, column: 21, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4434, file: !292, line: 2062, column: 21)
!4444 = !DILocation(line: 2069, column: 24, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4434, file: !292, line: 2067, column: 21)
!4446 = !DILocation(line: 2070, column: 30, scope: !4445)
!4447 = !DILocation(line: 2070, column: 55, scope: !4445)
!4448 = !DILocation(line: 2068, column: 23, scope: !4445)
!4449 = !DILocation(line: 2071, column: 23, scope: !4445)
!4450 = !DILocation(line: 2073, column: 17, scope: !4435)
!4451 = !DILocation(line: 2082, column: 19, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4431, file: !292, line: 2082, column: 19)
!4453 = !DILocation(line: 2083, column: 19, scope: !4452)
!4454 = !DILocation(line: 2083, column: 22, scope: !4452)
!4455 = !DILocation(line: 2083, column: 25, scope: !4452)
!4456 = !DILocation(line: 2083, column: 37, scope: !4452)
!4457 = !DILocation(line: 2084, column: 19, scope: !4452)
!4458 = !DILocation(line: 2084, column: 33, scope: !4452)
!4459 = !DILocation(line: 2084, column: 36, scope: !4452)
!4460 = !DILocation(line: 2084, column: 47, scope: !4452)
!4461 = !DILocation(line: 2084, column: 22, scope: !4452)
!4462 = !DILocation(line: 2082, column: 19, scope: !4431)
!4463 = !DILocation(line: 2087, column: 26, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4452, file: !292, line: 2085, column: 17)
!4465 = !DILocation(line: 2088, column: 26, scope: !4464)
!4466 = !DILocation(line: 2088, column: 51, scope: !4464)
!4467 = !DILocation(line: 2086, column: 19, scope: !4464)
!4468 = !DILocation(line: 2089, column: 19, scope: !4464)
!4469 = !DILocation(line: 2091, column: 13, scope: !4431)
!4470 = !DILocation(line: 2093, column: 16, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 2093, column: 15)
!4472 = !DILocation(line: 2093, column: 15, scope: !4312)
!4473 = !DILocation(line: 2095, column: 19, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !292, line: 2095, column: 19)
!4475 = distinct !DILexicalBlock(scope: !4471, file: !292, line: 2094, column: 13)
!4476 = !DILocation(line: 2095, column: 19, scope: !4475)
!4477 = !DILocation(line: 2097, column: 23, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !292, line: 2097, column: 23)
!4479 = distinct !DILexicalBlock(scope: !4474, file: !292, line: 2096, column: 17)
!4480 = !DILocation(line: 2097, column: 26, scope: !4478)
!4481 = !DILocation(line: 2097, column: 36, scope: !4478)
!4482 = !DILocation(line: 2097, column: 39, scope: !4478)
!4483 = !DILocation(line: 2097, column: 42, scope: !4478)
!4484 = !DILocation(line: 2097, column: 54, scope: !4478)
!4485 = !DILocation(line: 2097, column: 23, scope: !4479)
!4486 = !DILocation(line: 2101, column: 21, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4478, file: !292, line: 2098, column: 21)
!4488 = !DILocation(line: 2105, column: 26, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4478, file: !292, line: 2103, column: 21)
!4490 = !DILocation(line: 2106, column: 30, scope: !4489)
!4491 = !DILocation(line: 2104, column: 23, scope: !4489)
!4492 = !DILocation(line: 2107, column: 23, scope: !4489)
!4493 = !DILocation(line: 2109, column: 17, scope: !4479)
!4494 = !DILocation(line: 2110, column: 13, scope: !4475)
!4495 = !DILocation(line: 2112, column: 15, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 2112, column: 15)
!4497 = !DILocation(line: 2112, column: 18, scope: !4496)
!4498 = !DILocation(line: 2112, column: 15, scope: !4312)
!4499 = !DILocation(line: 2115, column: 19, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !292, line: 2115, column: 19)
!4501 = distinct !DILexicalBlock(scope: !4496, file: !292, line: 2113, column: 13)
!4502 = !DILocation(line: 2115, column: 44, scope: !4500)
!4503 = !DILocation(line: 2115, column: 48, scope: !4500)
!4504 = !DILocation(line: 2116, column: 19, scope: !4500)
!4505 = !DILocation(line: 2116, column: 22, scope: !4500)
!4506 = !DILocation(line: 2116, column: 25, scope: !4500)
!4507 = !DILocation(line: 2116, column: 37, scope: !4500)
!4508 = !DILocation(line: 2115, column: 19, scope: !4501)
!4509 = !DILocation(line: 2119, column: 24, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4500, file: !292, line: 2117, column: 17)
!4511 = !DILocation(line: 2120, column: 26, scope: !4510)
!4512 = !DILocation(line: 2120, column: 50, scope: !4510)
!4513 = !DILocation(line: 2118, column: 19, scope: !4510)
!4514 = !DILocation(line: 2121, column: 19, scope: !4510)
!4515 = !DILocation(line: 2123, column: 13, scope: !4501)
!4516 = !DILocalVariable(name: "srcbase", scope: !4312, file: !292, line: 2125, type: !116)
!4517 = !DILocation(line: 2125, column: 23, scope: !4312)
!4518 = !DILocation(line: 2126, column: 15, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4312, file: !292, line: 2126, column: 15)
!4520 = !DILocation(line: 2126, column: 18, scope: !4519)
!4521 = !DILocation(line: 2126, column: 30, scope: !4519)
!4522 = !DILocation(line: 2129, column: 15, scope: !4519)
!4523 = !DILocation(line: 2129, column: 61, scope: !4519)
!4524 = !DILocation(line: 2129, column: 45, scope: !4519)
!4525 = !DILocation(line: 2129, column: 43, scope: !4519)
!4526 = !DILocation(line: 2129, column: 20, scope: !4519)
!4527 = !DILocation(line: 2135, column: 15, scope: !4519)
!4528 = !DILocation(line: 2135, column: 19, scope: !4519)
!4529 = !DILocation(line: 2135, column: 22, scope: !4519)
!4530 = !DILocation(line: 2135, column: 32, scope: !4519)
!4531 = !DILocation(line: 2135, column: 37, scope: !4519)
!4532 = !DILocation(line: 2126, column: 15, scope: !4312)
!4533 = !DILocation(line: 2141, column: 19, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !292, line: 2141, column: 19)
!4535 = distinct !DILexicalBlock(scope: !4519, file: !292, line: 2136, column: 13)
!4536 = !DILocation(line: 2141, column: 22, scope: !4534)
!4537 = !DILocation(line: 2141, column: 34, scope: !4534)
!4538 = !DILocation(line: 2142, column: 19, scope: !4534)
!4539 = !DILocation(line: 2142, column: 44, scope: !4534)
!4540 = !DILocation(line: 2142, column: 62, scope: !4534)
!4541 = !DILocation(line: 2142, column: 22, scope: !4534)
!4542 = !DILocation(line: 2141, column: 19, scope: !4535)
!4543 = !DILocalVariable(name: "fmt", scope: !4544, file: !292, line: 2144, type: !116)
!4544 = distinct !DILexicalBlock(scope: !4534, file: !292, line: 2143, column: 17)
!4545 = !DILocation(line: 2144, column: 31, scope: !4544)
!4546 = !DILocation(line: 2145, column: 26, scope: !4544)
!4547 = !DILocation(line: 2145, column: 29, scope: !4544)
!4548 = !DILocation(line: 2146, column: 20, scope: !4544)
!4549 = !DILocation(line: 2147, column: 20, scope: !4544)
!4550 = !DILocation(line: 2145, column: 23, scope: !4544)
!4551 = !DILocation(line: 2148, column: 32, scope: !4544)
!4552 = !DILocation(line: 2149, column: 26, scope: !4544)
!4553 = !DILocation(line: 2150, column: 26, scope: !4544)
!4554 = !DILocation(line: 2148, column: 19, scope: !4544)
!4555 = !DILocation(line: 2151, column: 19, scope: !4544)
!4556 = !DILocalVariable(name: "tmp_backup", scope: !4535, file: !292, line: 2154, type: !9)
!4557 = !DILocation(line: 2154, column: 21, scope: !4535)
!4558 = !DILocation(line: 2154, column: 64, scope: !4535)
!4559 = !DILocation(line: 2155, column: 54, scope: !4535)
!4560 = !DILocation(line: 2155, column: 57, scope: !4535)
!4561 = !DILocation(line: 2154, column: 34, scope: !4535)
!4562 = !DILocation(line: 2162, column: 19, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4535, file: !292, line: 2162, column: 19)
!4564 = !DILocation(line: 2162, column: 19, scope: !4535)
!4565 = !DILocation(line: 2164, column: 19, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !292, line: 2163, column: 17)
!4567 = !DILocalVariable(name: "__old", scope: !4568, file: !292, line: 2164, type: !116)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !292, line: 2164, column: 19)
!4569 = distinct !DILexicalBlock(scope: !4566, file: !292, line: 2164, column: 19)
!4570 = !DILocation(line: 2164, column: 19, scope: !4568)
!4571 = !DILocalVariable(name: "__len", scope: !4568, file: !292, line: 2164, type: !55)
!4572 = !DILocalVariable(name: "__new", scope: !4568, file: !292, line: 2164, type: !9)
!4573 = !DILocation(line: 2164, column: 19, scope: !4569)
!4574 = !DILocation(line: 2165, column: 25, scope: !4566)
!4575 = !DILocation(line: 2165, column: 19, scope: !4566)
!4576 = !DILocation(line: 2166, column: 17, scope: !4566)
!4577 = !DILocation(line: 2167, column: 24, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4563, file: !292, line: 2167, column: 24)
!4579 = !DILocation(line: 2167, column: 30, scope: !4578)
!4580 = !DILocation(line: 2167, column: 24, scope: !4563)
!4581 = !DILocation(line: 2169, column: 29, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4578, file: !292, line: 2168, column: 17)
!4583 = !DILocation(line: 2169, column: 36, scope: !4582)
!4584 = !DILocation(line: 2169, column: 59, scope: !4582)
!4585 = !DILocation(line: 2169, column: 19, scope: !4582)
!4586 = !DILocation(line: 2170, column: 19, scope: !4582)
!4587 = !DILocation(line: 2172, column: 23, scope: !4535)
!4588 = !DILocation(line: 2173, column: 13, scope: !4535)
!4589 = !DILocation(line: 2174, column: 22, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4519, file: !292, line: 2174, column: 20)
!4591 = !DILocation(line: 2176, column: 20, scope: !4590)
!4592 = !DILocation(line: 2176, column: 25, scope: !4590)
!4593 = !DILocation(line: 2176, column: 28, scope: !4590)
!4594 = !DILocation(line: 2177, column: 20, scope: !4590)
!4595 = !DILocation(line: 2177, column: 24, scope: !4590)
!4596 = !DILocation(line: 2177, column: 27, scope: !4590)
!4597 = !DILocation(line: 2178, column: 24, scope: !4590)
!4598 = !DILocation(line: 2178, column: 28, scope: !4590)
!4599 = !DILocation(line: 2178, column: 31, scope: !4590)
!4600 = !DILocation(line: 2178, column: 46, scope: !4590)
!4601 = !DILocation(line: 2178, column: 60, scope: !4590)
!4602 = !DILocation(line: 2178, column: 51, scope: !4590)
!4603 = !DILocation(line: 2179, column: 24, scope: !4590)
!4604 = !DILocation(line: 2179, column: 28, scope: !4590)
!4605 = !DILocation(line: 2179, column: 31, scope: !4590)
!4606 = !DILocation(line: 2179, column: 43, scope: !4590)
!4607 = !DILocation(line: 2180, column: 28, scope: !4590)
!4608 = !DILocation(line: 2180, column: 33, scope: !4590)
!4609 = !DILocation(line: 2174, column: 20, scope: !4519)
!4610 = !DILocation(line: 2183, column: 27, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4612, file: !292, line: 2183, column: 19)
!4612 = distinct !DILexicalBlock(scope: !4590, file: !292, line: 2182, column: 13)
!4613 = !DILocation(line: 2183, column: 19, scope: !4611)
!4614 = !DILocation(line: 2183, column: 37, scope: !4611)
!4615 = !DILocation(line: 2183, column: 42, scope: !4611)
!4616 = !DILocation(line: 2183, column: 45, scope: !4611)
!4617 = !DILocation(line: 2183, column: 51, scope: !4611)
!4618 = !DILocation(line: 2183, column: 19, scope: !4612)
!4619 = !DILocation(line: 2185, column: 29, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4611, file: !292, line: 2184, column: 17)
!4621 = !DILocation(line: 2185, column: 36, scope: !4620)
!4622 = !DILocation(line: 2185, column: 59, scope: !4620)
!4623 = !DILocation(line: 2185, column: 19, scope: !4620)
!4624 = !DILocation(line: 2186, column: 19, scope: !4620)
!4625 = !DILocation(line: 2188, column: 23, scope: !4612)
!4626 = !DILocation(line: 2189, column: 19, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4612, file: !292, line: 2189, column: 19)
!4628 = !DILocation(line: 2189, column: 22, scope: !4627)
!4629 = !DILocation(line: 2189, column: 19, scope: !4612)
!4630 = !DILocation(line: 2190, column: 25, scope: !4627)
!4631 = !DILocation(line: 2190, column: 44, scope: !4627)
!4632 = !DILocation(line: 2190, column: 17, scope: !4627)
!4633 = !DILocation(line: 2191, column: 13, scope: !4612)
!4634 = !DILocation(line: 2192, column: 9, scope: !4312)
!4635 = !DILocation(line: 2193, column: 5, scope: !4239)
!4636 = !DILocation(line: 2197, column: 7, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2197, column: 7)
!4638 = !DILocation(line: 2198, column: 7, scope: !4637)
!4639 = !DILocation(line: 2198, column: 10, scope: !4637)
!4640 = !DILocation(line: 2198, column: 13, scope: !4637)
!4641 = !DILocation(line: 2199, column: 7, scope: !4637)
!4642 = !DILocation(line: 2199, column: 12, scope: !4637)
!4643 = !DILocation(line: 2199, column: 15, scope: !4637)
!4644 = !DILocation(line: 2200, column: 7, scope: !4637)
!4645 = !DILocation(line: 2200, column: 10, scope: !4637)
!4646 = !DILocation(line: 2200, column: 13, scope: !4637)
!4647 = !DILocation(line: 2200, column: 25, scope: !4637)
!4648 = !DILocation(line: 2197, column: 7, scope: !4072)
!4649 = !DILocalVariable(name: "lstat_ok", scope: !4650, file: !292, line: 2202, type: !142)
!4650 = distinct !DILexicalBlock(scope: !4637, file: !292, line: 2201, column: 5)
!4651 = !DILocation(line: 2202, column: 12, scope: !4650)
!4652 = !DILocalVariable(name: "tmp_buf", scope: !4650, file: !292, line: 2203, type: !338)
!4653 = !DILocation(line: 2203, column: 19, scope: !4650)
!4654 = !DILocalVariable(name: "dst_lstat_sb", scope: !4650, file: !292, line: 2204, type: !337)
!4655 = !DILocation(line: 2204, column: 20, scope: !4650)
!4656 = !DILocation(line: 2208, column: 11, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4650, file: !292, line: 2208, column: 11)
!4658 = !DILocation(line: 2208, column: 11, scope: !4650)
!4659 = !DILocation(line: 2209, column: 22, scope: !4657)
!4660 = !DILocation(line: 2209, column: 9, scope: !4657)
!4661 = !DILocation(line: 2212, column: 22, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !292, line: 2212, column: 15)
!4663 = distinct !DILexicalBlock(scope: !4657, file: !292, line: 2211, column: 9)
!4664 = !DILocation(line: 2212, column: 15, scope: !4662)
!4665 = !DILocation(line: 2212, column: 42, scope: !4662)
!4666 = !DILocation(line: 2212, column: 15, scope: !4663)
!4667 = !DILocation(line: 2213, column: 26, scope: !4662)
!4668 = !DILocation(line: 2213, column: 13, scope: !4662)
!4669 = !DILocation(line: 2215, column: 22, scope: !4662)
!4670 = !DILocation(line: 2219, column: 11, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4650, file: !292, line: 2219, column: 11)
!4672 = !DILocation(line: 2220, column: 11, scope: !4671)
!4673 = !DILocation(line: 2220, column: 14, scope: !4671)
!4674 = !DILocation(line: 2221, column: 11, scope: !4671)
!4675 = !DILocation(line: 2221, column: 25, scope: !4671)
!4676 = !DILocation(line: 2221, column: 28, scope: !4671)
!4677 = !DILocation(line: 2221, column: 39, scope: !4671)
!4678 = !DILocation(line: 2221, column: 49, scope: !4671)
!4679 = !DILocation(line: 2221, column: 14, scope: !4671)
!4680 = !DILocation(line: 2219, column: 11, scope: !4650)
!4681 = !DILocation(line: 2224, column: 18, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4671, file: !292, line: 2222, column: 9)
!4683 = !DILocation(line: 2225, column: 18, scope: !4682)
!4684 = !DILocation(line: 2225, column: 43, scope: !4682)
!4685 = !DILocation(line: 2223, column: 11, scope: !4682)
!4686 = !DILocation(line: 2226, column: 11, scope: !4682)
!4687 = !DILocation(line: 2228, column: 5, scope: !4650)
!4688 = !DILocation(line: 2234, column: 7, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2234, column: 7)
!4690 = !DILocation(line: 2234, column: 10, scope: !4689)
!4691 = !DILocation(line: 2234, column: 18, scope: !4689)
!4692 = !DILocation(line: 2234, column: 22, scope: !4689)
!4693 = !DILocation(line: 2234, column: 25, scope: !4689)
!4694 = !DILocation(line: 2234, column: 35, scope: !4689)
!4695 = !DILocation(line: 2234, column: 39, scope: !4689)
!4696 = !DILocation(line: 2234, column: 7, scope: !4072)
!4697 = !DILocation(line: 2235, column: 19, scope: !4689)
!4698 = !DILocation(line: 2235, column: 29, scope: !4689)
!4699 = !DILocation(line: 2235, column: 39, scope: !4689)
!4700 = !DILocation(line: 2235, column: 5, scope: !4689)
!4701 = !DILocation(line: 2267, column: 7, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2267, column: 7)
!4703 = !DILocation(line: 2267, column: 20, scope: !4702)
!4704 = !DILocation(line: 2267, column: 7, scope: !4072)
!4705 = !DILocation(line: 2268, column: 18, scope: !4702)
!4706 = !DILocation(line: 2268, column: 5, scope: !4702)
!4707 = !DILocation(line: 2269, column: 12, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4702, file: !292, line: 2269, column: 12)
!4709 = !DILocation(line: 2269, column: 15, scope: !4708)
!4710 = !DILocation(line: 2269, column: 25, scope: !4708)
!4711 = !DILocation(line: 2269, column: 28, scope: !4708)
!4712 = !DILocation(line: 2269, column: 12, scope: !4702)
!4713 = !DILocation(line: 2271, column: 11, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !292, line: 2271, column: 11)
!4715 = distinct !DILexicalBlock(scope: !4708, file: !292, line: 2270, column: 5)
!4716 = !DILocation(line: 2271, column: 11, scope: !4715)
!4717 = !DILocation(line: 2272, column: 41, scope: !4714)
!4718 = !DILocation(line: 2272, column: 58, scope: !4714)
!4719 = !DILocation(line: 2272, column: 73, scope: !4714)
!4720 = !DILocation(line: 2272, column: 24, scope: !4714)
!4721 = !DILocation(line: 2272, column: 22, scope: !4714)
!4722 = !DILocation(line: 2272, column: 9, scope: !4714)
!4723 = !DILocation(line: 2274, column: 51, scope: !4714)
!4724 = !DILocation(line: 2274, column: 66, scope: !4714)
!4725 = !DILocation(line: 2274, column: 24, scope: !4714)
!4726 = !DILocation(line: 2274, column: 22, scope: !4714)
!4727 = !DILocation(line: 2275, column: 5, scope: !4715)
!4728 = !DILocation(line: 2276, column: 12, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4708, file: !292, line: 2276, column: 12)
!4730 = !DILocation(line: 2276, column: 15, scope: !4729)
!4731 = !DILocation(line: 2276, column: 25, scope: !4729)
!4732 = !DILocation(line: 2276, column: 35, scope: !4729)
!4733 = !DILocation(line: 2276, column: 44, scope: !4729)
!4734 = !DILocation(line: 2276, column: 12, scope: !4708)
!4735 = !DILocation(line: 2278, column: 49, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4729, file: !292, line: 2277, column: 5)
!4737 = !DILocation(line: 2278, column: 64, scope: !4736)
!4738 = !DILocation(line: 2278, column: 22, scope: !4736)
!4739 = !DILocation(line: 2278, column: 20, scope: !4736)
!4740 = !DILocation(line: 2279, column: 5, scope: !4736)
!4741 = !DILocation(line: 2280, column: 12, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4729, file: !292, line: 2280, column: 12)
!4743 = !DILocation(line: 2280, column: 15, scope: !4742)
!4744 = !DILocation(line: 2281, column: 12, scope: !4742)
!4745 = !DILocation(line: 2281, column: 16, scope: !4742)
!4746 = !DILocation(line: 2281, column: 19, scope: !4742)
!4747 = !DILocation(line: 2282, column: 12, scope: !4742)
!4748 = !DILocation(line: 2282, column: 27, scope: !4742)
!4749 = !DILocation(line: 2282, column: 18, scope: !4742)
!4750 = !DILocation(line: 2283, column: 16, scope: !4742)
!4751 = !DILocation(line: 2283, column: 20, scope: !4742)
!4752 = !DILocation(line: 2284, column: 20, scope: !4742)
!4753 = !DILocation(line: 2284, column: 23, scope: !4742)
!4754 = !DILocation(line: 2284, column: 26, scope: !4742)
!4755 = !DILocation(line: 2284, column: 38, scope: !4742)
!4756 = !DILocation(line: 2285, column: 16, scope: !4742)
!4757 = !DILocation(line: 2285, column: 19, scope: !4742)
!4758 = !DILocation(line: 2285, column: 22, scope: !4742)
!4759 = !DILocation(line: 2285, column: 34, scope: !4742)
!4760 = !DILocation(line: 2280, column: 12, scope: !4729)
!4761 = !DILocation(line: 2287, column: 39, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4742, file: !292, line: 2286, column: 5)
!4763 = !DILocation(line: 2287, column: 56, scope: !4762)
!4764 = !DILocation(line: 2287, column: 71, scope: !4762)
!4765 = !DILocation(line: 2287, column: 22, scope: !4762)
!4766 = !DILocation(line: 2287, column: 20, scope: !4762)
!4767 = !DILocation(line: 2288, column: 5, scope: !4762)
!4768 = !DILocation(line: 2293, column: 7, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2293, column: 7)
!4770 = !DILocation(line: 2293, column: 7, scope: !4072)
!4771 = !DILocation(line: 2298, column: 11, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4773, file: !292, line: 2298, column: 11)
!4773 = distinct !DILexicalBlock(scope: !4769, file: !292, line: 2294, column: 5)
!4774 = !DILocation(line: 2298, column: 11, scope: !4773)
!4775 = !DILocation(line: 2302, column: 26, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4777, file: !292, line: 2302, column: 15)
!4777 = distinct !DILexicalBlock(scope: !4772, file: !292, line: 2299, column: 9)
!4778 = !DILocation(line: 2302, column: 36, scope: !4776)
!4779 = !DILocation(line: 2302, column: 15, scope: !4776)
!4780 = !DILocation(line: 2302, column: 15, scope: !4777)
!4781 = !DILocation(line: 2304, column: 28, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4776, file: !292, line: 2303, column: 13)
!4783 = !DILocation(line: 2305, column: 22, scope: !4782)
!4784 = !DILocation(line: 2306, column: 22, scope: !4782)
!4785 = !DILocation(line: 2304, column: 15, scope: !4782)
!4786 = !DILocation(line: 2307, column: 16, scope: !4782)
!4787 = !DILocation(line: 2307, column: 31, scope: !4782)
!4788 = !DILocation(line: 2308, column: 15, scope: !4782)
!4789 = !DILocation(line: 2310, column: 31, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4776, file: !292, line: 2310, column: 20)
!4791 = !DILocation(line: 2310, column: 41, scope: !4790)
!4792 = !DILocation(line: 2310, column: 20, scope: !4790)
!4793 = !DILocation(line: 2310, column: 20, scope: !4776)
!4794 = !DILocation(line: 2312, column: 28, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4790, file: !292, line: 2311, column: 13)
!4796 = !DILocation(line: 2314, column: 22, scope: !4795)
!4797 = !DILocation(line: 2312, column: 15, scope: !4795)
!4798 = !DILocation(line: 2319, column: 19, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4795, file: !292, line: 2319, column: 19)
!4800 = !DILocation(line: 2319, column: 22, scope: !4799)
!4801 = !DILocation(line: 2319, column: 32, scope: !4799)
!4802 = !DILocation(line: 2319, column: 35, scope: !4799)
!4803 = !DILocation(line: 2319, column: 19, scope: !4795)
!4804 = !DILocation(line: 2320, column: 18, scope: !4799)
!4805 = !DILocation(line: 2320, column: 35, scope: !4799)
!4806 = !DILocation(line: 2320, column: 17, scope: !4799)
!4807 = !DILocation(line: 2323, column: 15, scope: !4795)
!4808 = !DILocation(line: 2325, column: 20, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4790, file: !292, line: 2325, column: 20)
!4810 = !DILocation(line: 2325, column: 23, scope: !4809)
!4811 = !DILocation(line: 2325, column: 35, scope: !4809)
!4812 = !DILocation(line: 2326, column: 20, scope: !4809)
!4813 = !DILocation(line: 2326, column: 24, scope: !4809)
!4814 = !DILocation(line: 2327, column: 24, scope: !4809)
!4815 = !DILocation(line: 2327, column: 27, scope: !4809)
!4816 = !DILocation(line: 2327, column: 30, scope: !4809)
!4817 = !DILocation(line: 2327, column: 42, scope: !4809)
!4818 = !DILocation(line: 2325, column: 20, scope: !4790)
!4819 = !DILocation(line: 2335, column: 13, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4809, file: !292, line: 2328, column: 13)
!4821 = !DILocation(line: 2338, column: 28, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4809, file: !292, line: 2337, column: 13)
!4823 = !DILocation(line: 2339, column: 22, scope: !4822)
!4824 = !DILocation(line: 2339, column: 47, scope: !4822)
!4825 = !DILocation(line: 2338, column: 15, scope: !4822)
!4826 = !DILocation(line: 2340, column: 15, scope: !4822)
!4827 = !DILocation(line: 2342, column: 9, scope: !4777)
!4828 = !DILocation(line: 2345, column: 35, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !292, line: 2345, column: 15)
!4830 = distinct !DILexicalBlock(scope: !4772, file: !292, line: 2344, column: 9)
!4831 = !DILocation(line: 2345, column: 49, scope: !4829)
!4832 = !DILocation(line: 2345, column: 65, scope: !4829)
!4833 = !DILocation(line: 2345, column: 68, scope: !4829)
!4834 = !DILocation(line: 2346, column: 35, scope: !4829)
!4835 = !DILocation(line: 2345, column: 17, scope: !4829)
!4836 = !DILocation(line: 2345, column: 15, scope: !4830)
!4837 = !DILocation(line: 2347, column: 13, scope: !4829)
!4838 = !DILocation(line: 2349, column: 11, scope: !4830)
!4839 = !DILocation(line: 2351, column: 5, scope: !4773)
!4840 = !DILocation(line: 2353, column: 7, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2353, column: 7)
!4842 = !DILocation(line: 2353, column: 10, scope: !4841)
!4843 = !DILocation(line: 2353, column: 7, scope: !4072)
!4844 = !DILocation(line: 2355, column: 11, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !292, line: 2355, column: 11)
!4846 = distinct !DILexicalBlock(scope: !4841, file: !292, line: 2354, column: 5)
!4847 = !DILocation(line: 2355, column: 24, scope: !4845)
!4848 = !DILocation(line: 2355, column: 11, scope: !4846)
!4849 = !DILocation(line: 2356, column: 32, scope: !4845)
!4850 = !DILocation(line: 2356, column: 42, scope: !4845)
!4851 = !DILocation(line: 2356, column: 24, scope: !4845)
!4852 = !DILocation(line: 2356, column: 52, scope: !4845)
!4853 = !DILocation(line: 2356, column: 63, scope: !4845)
!4854 = !DILocation(line: 2356, column: 22, scope: !4845)
!4855 = !DILocation(line: 2356, column: 9, scope: !4845)
!4856 = !DILocation(line: 2358, column: 11, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4846, file: !292, line: 2358, column: 11)
!4858 = !DILocation(line: 2358, column: 24, scope: !4857)
!4859 = !DILocation(line: 2358, column: 11, scope: !4846)
!4860 = !DILocation(line: 2360, column: 15, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4862, file: !292, line: 2360, column: 15)
!4862 = distinct !DILexicalBlock(scope: !4857, file: !292, line: 2359, column: 9)
!4863 = !DILocation(line: 2360, column: 18, scope: !4861)
!4864 = !DILocation(line: 2360, column: 15, scope: !4862)
!4865 = !DILocation(line: 2362, column: 23, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4861, file: !292, line: 2361, column: 13)
!4867 = !DILocation(line: 2362, column: 15, scope: !4866)
!4868 = !DILocation(line: 2363, column: 29, scope: !4866)
!4869 = !DILocation(line: 2363, column: 39, scope: !4866)
!4870 = !DILocation(line: 2363, column: 49, scope: !4866)
!4871 = !DILocation(line: 2363, column: 15, scope: !4866)
!4872 = !DILocation(line: 2364, column: 13, scope: !4866)
!4873 = !DILocation(line: 2366, column: 15, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4862, file: !292, line: 2366, column: 15)
!4875 = !DILocation(line: 2366, column: 18, scope: !4874)
!4876 = !DILocation(line: 2366, column: 15, scope: !4862)
!4877 = !DILocation(line: 2369, column: 45, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4874, file: !292, line: 2367, column: 13)
!4879 = !DILocation(line: 2369, column: 68, scope: !4878)
!4880 = !DILocation(line: 2369, column: 22, scope: !4878)
!4881 = !DILocation(line: 2370, column: 13, scope: !4878)
!4882 = !DILocation(line: 2372, column: 15, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4862, file: !292, line: 2372, column: 15)
!4884 = !DILocation(line: 2372, column: 15, scope: !4862)
!4885 = !DILocation(line: 2373, column: 14, scope: !4883)
!4886 = !DILocation(line: 2373, column: 31, scope: !4883)
!4887 = !DILocation(line: 2373, column: 13, scope: !4883)
!4888 = !DILocation(line: 2375, column: 15, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4862, file: !292, line: 2375, column: 15)
!4890 = !DILocation(line: 2375, column: 32, scope: !4889)
!4891 = !DILocation(line: 2375, column: 36, scope: !4889)
!4892 = !DILocation(line: 2375, column: 39, scope: !4889)
!4893 = !DILocation(line: 2375, column: 15, scope: !4862)
!4894 = !DILocation(line: 2384, column: 28, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4889, file: !292, line: 2376, column: 13)
!4896 = !DILocation(line: 2384, column: 31, scope: !4895)
!4897 = !DILocation(line: 2384, column: 42, scope: !4895)
!4898 = !DILocation(line: 2384, column: 15, scope: !4895)
!4899 = !DILocation(line: 2385, column: 13, scope: !4895)
!4900 = !DILocation(line: 2387, column: 11, scope: !4862)
!4901 = !DILocation(line: 2395, column: 11, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4846, file: !292, line: 2395, column: 11)
!4903 = !DILocation(line: 2395, column: 24, scope: !4902)
!4904 = !DILocation(line: 2395, column: 11, scope: !4846)
!4905 = !DILocation(line: 2400, column: 24, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4902, file: !292, line: 2396, column: 9)
!4907 = !DILocation(line: 2401, column: 18, scope: !4906)
!4908 = !DILocation(line: 2402, column: 18, scope: !4906)
!4909 = !DILocation(line: 2400, column: 11, scope: !4906)
!4910 = !DILocation(line: 2408, column: 12, scope: !4906)
!4911 = !DILocation(line: 2408, column: 27, scope: !4906)
!4912 = !DILocation(line: 2412, column: 11, scope: !4906)
!4913 = !DILocation(line: 2430, column: 11, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4846, file: !292, line: 2430, column: 11)
!4915 = !DILocation(line: 2430, column: 24, scope: !4914)
!4916 = !DILocation(line: 2430, column: 11, scope: !4846)
!4917 = !DILocation(line: 2442, column: 21, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4914, file: !292, line: 2431, column: 9)
!4919 = !DILocation(line: 2443, column: 18, scope: !4918)
!4920 = !DILocation(line: 2444, column: 18, scope: !4918)
!4921 = !DILocation(line: 2444, column: 43, scope: !4918)
!4922 = !DILocation(line: 2442, column: 11, scope: !4918)
!4923 = !DILocation(line: 2445, column: 34, scope: !4918)
!4924 = !DILocation(line: 2445, column: 49, scope: !4918)
!4925 = !DILocation(line: 2445, column: 11, scope: !4918)
!4926 = !DILocation(line: 2446, column: 11, scope: !4918)
!4927 = !DILocation(line: 2455, column: 12, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4846, file: !292, line: 2455, column: 11)
!4929 = !DILocation(line: 2455, column: 40, scope: !4928)
!4930 = !DILocation(line: 2455, column: 33, scope: !4928)
!4931 = !DILocation(line: 2455, column: 60, scope: !4928)
!4932 = !DILocation(line: 2455, column: 52, scope: !4928)
!4933 = !DILocation(line: 2455, column: 71, scope: !4928)
!4934 = !DILocation(line: 2456, column: 11, scope: !4928)
!4935 = !DILocation(line: 2456, column: 14, scope: !4928)
!4936 = !DILocation(line: 2456, column: 20, scope: !4928)
!4937 = !DILocation(line: 2455, column: 11, scope: !4846)
!4938 = !DILocation(line: 2458, column: 21, scope: !4939)
!4939 = distinct !DILexicalBlock(scope: !4928, file: !292, line: 2457, column: 9)
!4940 = !DILocation(line: 2459, column: 14, scope: !4939)
!4941 = !DILocation(line: 2460, column: 18, scope: !4939)
!4942 = !DILocation(line: 2460, column: 43, scope: !4939)
!4943 = !DILocation(line: 2458, column: 11, scope: !4939)
!4944 = !DILocation(line: 2461, column: 34, scope: !4939)
!4945 = !DILocation(line: 2461, column: 49, scope: !4939)
!4946 = !DILocation(line: 2461, column: 11, scope: !4939)
!4947 = !DILocation(line: 2462, column: 11, scope: !4939)
!4948 = !DILocation(line: 2465, column: 11, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4846, file: !292, line: 2465, column: 11)
!4950 = !DILocation(line: 2465, column: 14, scope: !4949)
!4951 = !DILocation(line: 2465, column: 22, scope: !4949)
!4952 = !DILocation(line: 2465, column: 26, scope: !4949)
!4953 = !DILocation(line: 2465, column: 11, scope: !4846)
!4954 = !DILocation(line: 2467, column: 19, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4949, file: !292, line: 2466, column: 9)
!4956 = !DILocation(line: 2467, column: 11, scope: !4955)
!4957 = !DILocation(line: 2468, column: 25, scope: !4955)
!4958 = !DILocation(line: 2468, column: 35, scope: !4955)
!4959 = !DILocation(line: 2468, column: 45, scope: !4955)
!4960 = !DILocation(line: 2468, column: 11, scope: !4955)
!4961 = !DILocation(line: 2469, column: 9, scope: !4955)
!4962 = !DILocation(line: 2470, column: 15, scope: !4846)
!4963 = !DILocation(line: 2471, column: 5, scope: !4846)
!4964 = !DILocation(line: 2477, column: 20, scope: !4072)
!4965 = !DILocation(line: 2477, column: 23, scope: !4072)
!4966 = !DILocation(line: 2477, column: 34, scope: !4072)
!4967 = !DILocation(line: 2477, column: 37, scope: !4072)
!4968 = !DILocation(line: 2477, column: 44, scope: !4072)
!4969 = !DILocation(line: 2477, column: 54, scope: !4072)
!4970 = !DILocation(line: 2477, column: 17, scope: !4072)
!4971 = !DILocation(line: 2479, column: 6, scope: !4072)
!4972 = !DILocation(line: 2480, column: 9, scope: !4072)
!4973 = !DILocation(line: 2480, column: 12, scope: !4072)
!4974 = !DILocation(line: 2481, column: 11, scope: !4072)
!4975 = !DILocation(line: 2480, column: 6, scope: !4072)
!4976 = !DILocation(line: 2478, column: 23, scope: !4072)
!4977 = !DILocation(line: 2484, column: 14, scope: !4072)
!4978 = !DILocation(line: 2490, column: 35, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2490, column: 7)
!4980 = !DILocation(line: 2490, column: 45, scope: !4979)
!4981 = !DILocation(line: 2490, column: 55, scope: !4979)
!4982 = !DILocation(line: 2490, column: 65, scope: !4979)
!4983 = !DILocation(line: 2490, column: 74, scope: !4979)
!4984 = !DILocation(line: 2490, column: 9, scope: !4979)
!4985 = !DILocation(line: 2490, column: 7, scope: !4072)
!4986 = !DILocation(line: 2491, column: 5, scope: !4979)
!4987 = !DILocation(line: 2493, column: 7, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2493, column: 7)
!4989 = !DILocation(line: 2493, column: 7, scope: !4072)
!4990 = !DILocalVariable(name: "dir", scope: !4991, file: !292, line: 2495, type: !375)
!4991 = distinct !DILexicalBlock(scope: !4988, file: !292, line: 2494, column: 5)
!4992 = !DILocation(line: 2495, column: 24, scope: !4991)
!4993 = !DILocation(line: 2502, column: 33, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4991, file: !292, line: 2502, column: 11)
!4995 = !DILocation(line: 2502, column: 11, scope: !4994)
!4996 = !DILocation(line: 2502, column: 11, scope: !4991)
!4997 = !DILocation(line: 2504, column: 24, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4994, file: !292, line: 2503, column: 9)
!4999 = !DILocation(line: 2505, column: 18, scope: !4998)
!5000 = !DILocation(line: 2504, column: 11, scope: !4998)
!5001 = !DILocation(line: 2506, column: 11, scope: !4998)
!5002 = !DILocation(line: 2511, column: 13, scope: !4991)
!5003 = !DILocation(line: 2511, column: 11, scope: !4991)
!5004 = !DILocation(line: 2512, column: 21, scope: !4991)
!5005 = !DILocation(line: 2512, column: 7, scope: !4991)
!5006 = !DILocation(line: 2512, column: 12, scope: !4991)
!5007 = !DILocation(line: 2512, column: 19, scope: !4991)
!5008 = !DILocation(line: 2513, column: 25, scope: !4991)
!5009 = !DILocation(line: 2513, column: 7, scope: !4991)
!5010 = !DILocation(line: 2513, column: 12, scope: !4991)
!5011 = !DILocation(line: 2513, column: 16, scope: !4991)
!5012 = !DILocation(line: 2514, column: 25, scope: !4991)
!5013 = !DILocation(line: 2514, column: 7, scope: !4991)
!5014 = !DILocation(line: 2514, column: 12, scope: !4991)
!5015 = !DILocation(line: 2514, column: 16, scope: !4991)
!5016 = !DILocation(line: 2516, column: 11, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4991, file: !292, line: 2516, column: 11)
!5018 = !DILocation(line: 2516, column: 19, scope: !5017)
!5019 = !DILocation(line: 2516, column: 23, scope: !5017)
!5020 = !DILocation(line: 2516, column: 11, scope: !4991)
!5021 = !DILocation(line: 2522, column: 22, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !292, line: 2522, column: 15)
!5023 = distinct !DILexicalBlock(scope: !5017, file: !292, line: 2517, column: 9)
!5024 = !DILocation(line: 2522, column: 32, scope: !5022)
!5025 = !DILocation(line: 2522, column: 49, scope: !5022)
!5026 = !DILocation(line: 2522, column: 48, scope: !5022)
!5027 = !DILocation(line: 2522, column: 46, scope: !5022)
!5028 = !DILocation(line: 2522, column: 15, scope: !5022)
!5029 = !DILocation(line: 2522, column: 70, scope: !5022)
!5030 = !DILocation(line: 2522, column: 15, scope: !5023)
!5031 = !DILocation(line: 2524, column: 25, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5022, file: !292, line: 2523, column: 13)
!5033 = !DILocation(line: 2524, column: 32, scope: !5032)
!5034 = !DILocation(line: 2525, column: 22, scope: !5032)
!5035 = !DILocation(line: 2524, column: 15, scope: !5032)
!5036 = !DILocation(line: 2526, column: 15, scope: !5032)
!5037 = !DILocation(line: 2533, column: 22, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5023, file: !292, line: 2533, column: 15)
!5039 = !DILocation(line: 2533, column: 15, scope: !5038)
!5040 = !DILocation(line: 2533, column: 41, scope: !5038)
!5041 = !DILocation(line: 2533, column: 15, scope: !5023)
!5042 = !DILocation(line: 2535, column: 25, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5038, file: !292, line: 2534, column: 13)
!5044 = !DILocation(line: 2535, column: 32, scope: !5043)
!5045 = !DILocation(line: 2535, column: 53, scope: !5043)
!5046 = !DILocation(line: 2535, column: 15, scope: !5043)
!5047 = !DILocation(line: 2536, column: 15, scope: !5043)
!5048 = !DILocation(line: 2538, column: 28, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5038, file: !292, line: 2538, column: 20)
!5050 = !DILocation(line: 2538, column: 36, scope: !5049)
!5051 = !DILocation(line: 2538, column: 47, scope: !5049)
!5052 = !DILocation(line: 2538, column: 20, scope: !5038)
!5053 = !DILocation(line: 2542, column: 33, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5049, file: !292, line: 2539, column: 13)
!5055 = !DILocation(line: 2542, column: 24, scope: !5054)
!5056 = !DILocation(line: 2543, column: 32, scope: !5054)
!5057 = !DILocation(line: 2545, column: 27, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5054, file: !292, line: 2545, column: 19)
!5059 = !DILocation(line: 2545, column: 37, scope: !5058)
!5060 = !DILocation(line: 2545, column: 46, scope: !5058)
!5061 = !DILocation(line: 2545, column: 19, scope: !5058)
!5062 = !DILocation(line: 2545, column: 57, scope: !5058)
!5063 = !DILocation(line: 2545, column: 19, scope: !5054)
!5064 = !DILocation(line: 2547, column: 29, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5058, file: !292, line: 2546, column: 17)
!5066 = !DILocation(line: 2547, column: 36, scope: !5065)
!5067 = !DILocation(line: 2548, column: 26, scope: !5065)
!5068 = !DILocation(line: 2547, column: 19, scope: !5065)
!5069 = !DILocation(line: 2549, column: 19, scope: !5065)
!5070 = !DILocation(line: 2551, column: 13, scope: !5054)
!5071 = !DILocation(line: 2557, column: 17, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5023, file: !292, line: 2557, column: 15)
!5073 = !DILocation(line: 2557, column: 16, scope: !5072)
!5074 = !DILocation(line: 2557, column: 15, scope: !5023)
!5075 = !DILocation(line: 2559, column: 32, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5072, file: !292, line: 2558, column: 13)
!5077 = !DILocation(line: 2559, column: 49, scope: !5076)
!5078 = !DILocation(line: 2559, column: 64, scope: !5076)
!5079 = !DILocation(line: 2559, column: 15, scope: !5076)
!5080 = !DILocation(line: 2560, column: 16, scope: !5076)
!5081 = !DILocation(line: 2560, column: 55, scope: !5076)
!5082 = !DILocation(line: 2561, column: 13, scope: !5076)
!5083 = !DILocation(line: 2563, column: 15, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5023, file: !292, line: 2563, column: 15)
!5085 = !DILocation(line: 2563, column: 18, scope: !5084)
!5086 = !DILocation(line: 2563, column: 15, scope: !5023)
!5087 = !DILocation(line: 2565, column: 19, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5089, file: !292, line: 2565, column: 19)
!5089 = distinct !DILexicalBlock(scope: !5084, file: !292, line: 2564, column: 13)
!5090 = !DILocation(line: 2565, column: 22, scope: !5088)
!5091 = !DILocation(line: 2565, column: 19, scope: !5089)
!5092 = !DILocation(line: 2566, column: 25, scope: !5088)
!5093 = !DILocation(line: 2566, column: 54, scope: !5088)
!5094 = !DILocation(line: 2566, column: 17, scope: !5088)
!5095 = !DILocation(line: 2568, column: 31, scope: !5088)
!5096 = !DILocation(line: 2568, column: 41, scope: !5088)
!5097 = !DILocation(line: 2568, column: 17, scope: !5088)
!5098 = !DILocation(line: 2569, column: 13, scope: !5089)
!5099 = !DILocation(line: 2570, column: 9, scope: !5023)
!5100 = !DILocation(line: 2573, column: 31, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5017, file: !292, line: 2572, column: 9)
!5102 = !DILocation(line: 2578, column: 15, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5101, file: !292, line: 2578, column: 15)
!5104 = !DILocation(line: 2578, column: 18, scope: !5103)
!5105 = !DILocation(line: 2578, column: 39, scope: !5103)
!5106 = !DILocation(line: 2578, column: 42, scope: !5103)
!5107 = !DILocation(line: 2578, column: 45, scope: !5103)
!5108 = !DILocation(line: 2578, column: 15, scope: !5101)
!5109 = !DILocation(line: 2579, column: 42, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5103, file: !292, line: 2579, column: 17)
!5111 = !DILocation(line: 2579, column: 52, scope: !5110)
!5112 = !DILocation(line: 2579, column: 55, scope: !5110)
!5113 = !DILocation(line: 2580, column: 49, scope: !5110)
!5114 = !DILocation(line: 2579, column: 19, scope: !5110)
!5115 = !DILocation(line: 2579, column: 17, scope: !5103)
!5116 = !DILocation(line: 2582, column: 21, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5118, file: !292, line: 2582, column: 21)
!5118 = distinct !DILexicalBlock(scope: !5110, file: !292, line: 2581, column: 15)
!5119 = !DILocation(line: 2582, column: 24, scope: !5117)
!5120 = !DILocation(line: 2582, column: 21, scope: !5118)
!5121 = !DILocation(line: 2583, column: 19, scope: !5117)
!5122 = !DILocation(line: 2584, column: 15, scope: !5118)
!5123 = !DILocation(line: 2580, column: 50, scope: !5110)
!5124 = !DILocation(line: 2588, column: 11, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !4991, file: !292, line: 2588, column: 11)
!5126 = !DILocation(line: 2588, column: 14, scope: !5125)
!5127 = !DILocation(line: 2588, column: 30, scope: !5125)
!5128 = !DILocation(line: 2588, column: 33, scope: !5125)
!5129 = !DILocation(line: 2588, column: 40, scope: !5125)
!5130 = !DILocation(line: 2588, column: 43, scope: !5125)
!5131 = !DILocation(line: 2588, column: 51, scope: !5125)
!5132 = !DILocation(line: 2588, column: 68, scope: !5125)
!5133 = !DILocation(line: 2588, column: 58, scope: !5125)
!5134 = !DILocation(line: 2588, column: 11, scope: !4991)
!5135 = !DILocation(line: 2592, column: 9, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5125, file: !292, line: 2589, column: 9)
!5137 = !DILocation(line: 2599, column: 34, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5125, file: !292, line: 2594, column: 9)
!5139 = !DILocation(line: 2599, column: 44, scope: !5138)
!5140 = !DILocation(line: 2599, column: 54, scope: !5138)
!5141 = !DILocation(line: 2599, column: 72, scope: !5138)
!5142 = !DILocation(line: 2599, column: 77, scope: !5138)
!5143 = !DILocation(line: 2600, column: 34, scope: !5138)
!5144 = !DILocation(line: 2601, column: 34, scope: !5138)
!5145 = !DILocation(line: 2599, column: 24, scope: !5138)
!5146 = !DILocation(line: 2599, column: 22, scope: !5138)
!5147 = !DILocation(line: 2603, column: 5, scope: !4991)
!5148 = !DILocation(line: 2604, column: 12, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !4988, file: !292, line: 2604, column: 12)
!5150 = !DILocation(line: 2604, column: 15, scope: !5149)
!5151 = !DILocation(line: 2604, column: 12, scope: !4988)
!5152 = !DILocation(line: 2606, column: 23, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5149, file: !292, line: 2605, column: 5)
!5154 = !DILocation(line: 2607, column: 12, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5153, file: !292, line: 2607, column: 11)
!5156 = !DILocation(line: 2607, column: 11, scope: !5155)
!5157 = !DILocation(line: 2607, column: 21, scope: !5155)
!5158 = !DILocation(line: 2607, column: 11, scope: !5153)
!5159 = !DILocalVariable(name: "dot_sb", scope: !5160, file: !292, line: 2610, type: !338)
!5160 = distinct !DILexicalBlock(scope: !5155, file: !292, line: 2608, column: 9)
!5161 = !DILocation(line: 2610, column: 23, scope: !5160)
!5162 = !DILocalVariable(name: "dst_parent_sb", scope: !5160, file: !292, line: 2611, type: !338)
!5163 = !DILocation(line: 2611, column: 23, scope: !5160)
!5164 = !DILocalVariable(name: "dst_parent", scope: !5160, file: !292, line: 2612, type: !9)
!5165 = !DILocation(line: 2612, column: 17, scope: !5160)
!5166 = !DILocalVariable(name: "in_current_dir", scope: !5160, file: !292, line: 2613, type: !142)
!5167 = !DILocation(line: 2613, column: 16, scope: !5160)
!5168 = !DILocation(line: 2615, column: 34, scope: !5160)
!5169 = !DILocation(line: 2615, column: 24, scope: !5160)
!5170 = !DILocation(line: 2615, column: 22, scope: !5160)
!5171 = !DILocation(line: 2617, column: 29, scope: !5160)
!5172 = !DILocation(line: 2621, column: 29, scope: !5160)
!5173 = !DILocation(line: 2621, column: 32, scope: !5160)
!5174 = !DILocation(line: 2621, column: 52, scope: !5160)
!5175 = !DILocation(line: 2622, column: 29, scope: !5160)
!5176 = !DILocation(line: 2622, column: 38, scope: !5160)
!5177 = !DILocation(line: 2622, column: 32, scope: !5160)
!5178 = !DILocation(line: 2622, column: 66, scope: !5160)
!5179 = !DILocation(line: 2623, column: 29, scope: !5160)
!5180 = !DILocation(line: 2623, column: 32, scope: !5160)
!5181 = !DILocation(line: 0, scope: !5160)
!5182 = !DILocation(line: 2617, column: 26, scope: !5160)
!5183 = !DILocation(line: 2624, column: 17, scope: !5160)
!5184 = !DILocation(line: 2624, column: 11, scope: !5160)
!5185 = !DILocation(line: 2626, column: 17, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5160, file: !292, line: 2626, column: 15)
!5187 = !DILocation(line: 2626, column: 15, scope: !5160)
!5188 = !DILocation(line: 2629, column: 12, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5186, file: !292, line: 2627, column: 13)
!5190 = !DILocation(line: 2630, column: 22, scope: !5189)
!5191 = !DILocation(line: 2628, column: 15, scope: !5189)
!5192 = !DILocation(line: 2631, column: 15, scope: !5189)
!5193 = !DILocation(line: 2633, column: 9, scope: !5160)
!5194 = !DILocalVariable(name: "err", scope: !5153, file: !292, line: 2635, type: !7)
!5195 = !DILocation(line: 2635, column: 11, scope: !5153)
!5196 = !DILocation(line: 2635, column: 34, scope: !5153)
!5197 = !DILocation(line: 2635, column: 54, scope: !5153)
!5198 = !DILocation(line: 2636, column: 34, scope: !5153)
!5199 = !DILocation(line: 2636, column: 37, scope: !5153)
!5200 = !DILocation(line: 2635, column: 17, scope: !5153)
!5201 = !DILocation(line: 2637, column: 15, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5153, file: !292, line: 2637, column: 11)
!5203 = !DILocation(line: 2637, column: 13, scope: !5202)
!5204 = !DILocation(line: 2637, column: 11, scope: !5153)
!5205 = !DILocation(line: 2639, column: 21, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5202, file: !292, line: 2638, column: 9)
!5207 = !DILocation(line: 2639, column: 26, scope: !5206)
!5208 = !DILocation(line: 2640, column: 18, scope: !5206)
!5209 = !DILocation(line: 2640, column: 43, scope: !5206)
!5210 = !DILocation(line: 2639, column: 11, scope: !5206)
!5211 = !DILocation(line: 2641, column: 11, scope: !5206)
!5212 = !DILocation(line: 2643, column: 5, scope: !5153)
!5213 = !DILocation(line: 2658, column: 12, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5149, file: !292, line: 2658, column: 12)
!5215 = !DILocation(line: 2658, column: 15, scope: !5214)
!5216 = !DILocation(line: 2658, column: 12, scope: !5149)
!5217 = !DILocalVariable(name: "replace", scope: !5218, file: !292, line: 2662, type: !142)
!5218 = distinct !DILexicalBlock(scope: !5214, file: !292, line: 2661, column: 5)
!5219 = !DILocation(line: 2662, column: 12, scope: !5218)
!5220 = !DILocation(line: 2662, column: 23, scope: !5218)
!5221 = !DILocation(line: 2662, column: 26, scope: !5218)
!5222 = !DILocation(line: 2663, column: 23, scope: !5218)
!5223 = !DILocation(line: 2663, column: 26, scope: !5218)
!5224 = !DILocation(line: 2663, column: 29, scope: !5218)
!5225 = !DILocation(line: 2663, column: 41, scope: !5218)
!5226 = !DILocation(line: 2664, column: 31, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5218, file: !292, line: 2664, column: 11)
!5228 = !DILocation(line: 2664, column: 41, scope: !5227)
!5229 = !DILocation(line: 2664, column: 51, scope: !5227)
!5230 = !DILocation(line: 2664, column: 67, scope: !5227)
!5231 = !DILocation(line: 2664, column: 13, scope: !5227)
!5232 = !DILocation(line: 2664, column: 11, scope: !5218)
!5233 = !DILocation(line: 2665, column: 9, scope: !5227)
!5234 = !DILocation(line: 2666, column: 5, scope: !5218)
!5235 = !DILocation(line: 2667, column: 12, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5214, file: !292, line: 2667, column: 12)
!5237 = !DILocation(line: 2668, column: 12, scope: !5236)
!5238 = !DILocation(line: 2668, column: 16, scope: !5236)
!5239 = !DILocation(line: 2668, column: 19, scope: !5236)
!5240 = !DILocation(line: 2668, column: 35, scope: !5236)
!5241 = !DILocation(line: 2668, column: 39, scope: !5236)
!5242 = !DILocation(line: 2667, column: 12, scope: !5214)
!5243 = !DILocation(line: 2670, column: 25, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5236, file: !292, line: 2669, column: 5)
!5245 = !DILocation(line: 2680, column: 23, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5244, file: !292, line: 2680, column: 11)
!5247 = !DILocation(line: 2680, column: 33, scope: !5246)
!5248 = !DILocation(line: 2680, column: 43, scope: !5246)
!5249 = !DILocation(line: 2680, column: 46, scope: !5246)
!5250 = !DILocation(line: 2680, column: 60, scope: !5246)
!5251 = !DILocation(line: 2681, column: 23, scope: !5246)
!5252 = !DILocation(line: 2680, column: 13, scope: !5246)
!5253 = !DILocation(line: 2680, column: 11, scope: !5244)
!5254 = !DILocation(line: 2682, column: 9, scope: !5246)
!5255 = !DILocation(line: 2683, column: 5, scope: !5244)
!5256 = !DILocation(line: 2684, column: 12, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5236, file: !292, line: 2684, column: 12)
!5258 = !DILocation(line: 2684, column: 12, scope: !5236)
!5259 = !DILocation(line: 2690, column: 18, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !292, line: 2690, column: 11)
!5261 = distinct !DILexicalBlock(scope: !5257, file: !292, line: 2685, column: 5)
!5262 = !DILocation(line: 2690, column: 28, scope: !5260)
!5263 = !DILocation(line: 2690, column: 40, scope: !5260)
!5264 = !DILocation(line: 2690, column: 39, scope: !5260)
!5265 = !DILocation(line: 2690, column: 37, scope: !5260)
!5266 = !DILocation(line: 2690, column: 11, scope: !5260)
!5267 = !DILocation(line: 2690, column: 64, scope: !5260)
!5268 = !DILocation(line: 2690, column: 11, scope: !5261)
!5269 = !DILocation(line: 2691, column: 21, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5260, file: !292, line: 2691, column: 13)
!5271 = !DILocation(line: 2691, column: 31, scope: !5270)
!5272 = !DILocation(line: 2691, column: 40, scope: !5270)
!5273 = !DILocation(line: 2691, column: 54, scope: !5270)
!5274 = !DILocation(line: 2691, column: 53, scope: !5270)
!5275 = !DILocation(line: 2691, column: 51, scope: !5270)
!5276 = !DILocation(line: 2691, column: 13, scope: !5270)
!5277 = !DILocation(line: 2691, column: 75, scope: !5270)
!5278 = !DILocation(line: 2691, column: 13, scope: !5260)
!5279 = !DILocation(line: 2693, column: 23, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5270, file: !292, line: 2692, column: 11)
!5281 = !DILocation(line: 2693, column: 30, scope: !5280)
!5282 = !DILocation(line: 2693, column: 58, scope: !5280)
!5283 = !DILocation(line: 2693, column: 13, scope: !5280)
!5284 = !DILocation(line: 2694, column: 13, scope: !5280)
!5285 = !DILocation(line: 2691, column: 78, scope: !5270)
!5286 = !DILocation(line: 2696, column: 5, scope: !5261)
!5287 = !DILocation(line: 2697, column: 12, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5257, file: !292, line: 2697, column: 12)
!5289 = !DILocation(line: 2697, column: 31, scope: !5288)
!5290 = !DILocation(line: 2697, column: 34, scope: !5288)
!5291 = !DILocation(line: 2697, column: 53, scope: !5288)
!5292 = !DILocation(line: 2697, column: 56, scope: !5288)
!5293 = !DILocation(line: 2697, column: 12, scope: !5257)
!5294 = !DILocation(line: 2699, column: 18, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !292, line: 2699, column: 11)
!5296 = distinct !DILexicalBlock(scope: !5288, file: !292, line: 2698, column: 5)
!5297 = !DILocation(line: 2699, column: 28, scope: !5295)
!5298 = !DILocation(line: 2699, column: 40, scope: !5295)
!5299 = !DILocation(line: 2699, column: 39, scope: !5295)
!5300 = !DILocation(line: 2699, column: 37, scope: !5295)
!5301 = !DILocation(line: 2699, column: 68, scope: !5295)
!5302 = !DILocation(line: 2699, column: 11, scope: !5295)
!5303 = !DILocation(line: 2700, column: 11, scope: !5295)
!5304 = !DILocation(line: 2699, column: 11, scope: !5296)
!5305 = !DILocation(line: 2702, column: 21, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5295, file: !292, line: 2701, column: 9)
!5307 = !DILocation(line: 2702, column: 28, scope: !5306)
!5308 = !DILocation(line: 2703, column: 18, scope: !5306)
!5309 = !DILocation(line: 2702, column: 11, scope: !5306)
!5310 = !DILocation(line: 2704, column: 11, scope: !5306)
!5311 = !DILocation(line: 2706, column: 5, scope: !5296)
!5312 = !DILocation(line: 2707, column: 12, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5288, file: !292, line: 2707, column: 12)
!5314 = !DILocation(line: 2707, column: 12, scope: !5288)
!5315 = !DILocalVariable(name: "src_link_val", scope: !5316, file: !292, line: 2709, type: !9)
!5316 = distinct !DILexicalBlock(scope: !5313, file: !292, line: 2708, column: 5)
!5317 = !DILocation(line: 2709, column: 13, scope: !5316)
!5318 = !DILocation(line: 2709, column: 49, scope: !5316)
!5319 = !DILocation(line: 2709, column: 66, scope: !5316)
!5320 = !DILocation(line: 2709, column: 28, scope: !5316)
!5321 = !DILocation(line: 2710, column: 23, scope: !5316)
!5322 = !DILocation(line: 2711, column: 11, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5316, file: !292, line: 2711, column: 11)
!5324 = !DILocation(line: 2711, column: 24, scope: !5323)
!5325 = !DILocation(line: 2711, column: 11, scope: !5316)
!5326 = !DILocation(line: 2713, column: 21, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5323, file: !292, line: 2712, column: 9)
!5328 = !DILocation(line: 2713, column: 28, scope: !5327)
!5329 = !DILocation(line: 2714, column: 18, scope: !5327)
!5330 = !DILocation(line: 2713, column: 11, scope: !5327)
!5331 = !DILocation(line: 2715, column: 11, scope: !5327)
!5332 = !DILocalVariable(name: "symlink_err", scope: !5316, file: !292, line: 2718, type: !7)
!5333 = !DILocation(line: 2718, column: 11, scope: !5316)
!5334 = !DILocation(line: 2718, column: 42, scope: !5316)
!5335 = !DILocation(line: 2718, column: 66, scope: !5316)
!5336 = !DILocation(line: 2719, column: 42, scope: !5316)
!5337 = !DILocation(line: 2719, column: 45, scope: !5316)
!5338 = !DILocation(line: 2718, column: 25, scope: !5316)
!5339 = !DILocation(line: 2720, column: 15, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5316, file: !292, line: 2720, column: 11)
!5341 = !DILocation(line: 2720, column: 13, scope: !5340)
!5342 = !DILocation(line: 2720, column: 27, scope: !5340)
!5343 = !DILocation(line: 2720, column: 30, scope: !5340)
!5344 = !DILocation(line: 2720, column: 33, scope: !5340)
!5345 = !DILocation(line: 2720, column: 40, scope: !5340)
!5346 = !DILocation(line: 2720, column: 44, scope: !5340)
!5347 = !DILocation(line: 2720, column: 52, scope: !5340)
!5348 = !DILocation(line: 2720, column: 55, scope: !5340)
!5349 = !DILocation(line: 2721, column: 11, scope: !5340)
!5350 = !DILocation(line: 2721, column: 21, scope: !5340)
!5351 = !DILocation(line: 2721, column: 40, scope: !5340)
!5352 = !DILocation(line: 2721, column: 32, scope: !5340)
!5353 = !DILocation(line: 2721, column: 29, scope: !5340)
!5354 = !DILocation(line: 2720, column: 11, scope: !5316)
!5355 = !DILocalVariable(name: "dest_link_val", scope: !5356, file: !292, line: 2727, type: !9)
!5356 = distinct !DILexicalBlock(scope: !5340, file: !292, line: 2722, column: 9)
!5357 = !DILocation(line: 2727, column: 17, scope: !5356)
!5358 = !DILocation(line: 2728, column: 34, scope: !5356)
!5359 = !DILocation(line: 2728, column: 51, scope: !5356)
!5360 = !DILocation(line: 2728, column: 13, scope: !5356)
!5361 = !DILocation(line: 2729, column: 15, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5356, file: !292, line: 2729, column: 15)
!5363 = !DILocation(line: 2729, column: 15, scope: !5356)
!5364 = !DILocation(line: 2731, column: 19, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5366, file: !292, line: 2731, column: 19)
!5366 = distinct !DILexicalBlock(scope: !5362, file: !292, line: 2730, column: 13)
!5367 = !DILocation(line: 2731, column: 19, scope: !5366)
!5368 = !DILocation(line: 2732, column: 29, scope: !5365)
!5369 = !DILocation(line: 2732, column: 17, scope: !5365)
!5370 = !DILocation(line: 2733, column: 21, scope: !5366)
!5371 = !DILocation(line: 2733, column: 15, scope: !5366)
!5372 = !DILocation(line: 2734, column: 13, scope: !5366)
!5373 = !DILocation(line: 2735, column: 9, scope: !5356)
!5374 = !DILocation(line: 2736, column: 13, scope: !5316)
!5375 = !DILocation(line: 2736, column: 7, scope: !5316)
!5376 = !DILocation(line: 2737, column: 15, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5316, file: !292, line: 2737, column: 11)
!5378 = !DILocation(line: 2737, column: 13, scope: !5377)
!5379 = !DILocation(line: 2737, column: 11, scope: !5316)
!5380 = !DILocation(line: 2739, column: 21, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5377, file: !292, line: 2738, column: 9)
!5382 = !DILocation(line: 2739, column: 34, scope: !5381)
!5383 = !DILocation(line: 2740, column: 18, scope: !5381)
!5384 = !DILocation(line: 2739, column: 11, scope: !5381)
!5385 = !DILocation(line: 2741, column: 11, scope: !5381)
!5386 = !DILocation(line: 2744, column: 11, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5316, file: !292, line: 2744, column: 11)
!5388 = !DILocation(line: 2744, column: 14, scope: !5387)
!5389 = !DILocation(line: 2744, column: 11, scope: !5316)
!5390 = !DILocation(line: 2745, column: 9, scope: !5387)
!5391 = !DILocation(line: 2747, column: 11, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5316, file: !292, line: 2747, column: 11)
!5393 = !DILocation(line: 2747, column: 14, scope: !5392)
!5394 = !DILocation(line: 2747, column: 11, scope: !5316)
!5395 = !DILocation(line: 2752, column: 26, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !292, line: 2751, column: 15)
!5397 = distinct !DILexicalBlock(scope: !5392, file: !292, line: 2748, column: 9)
!5398 = !DILocation(line: 2752, column: 43, scope: !5396)
!5399 = !DILocation(line: 2752, column: 58, scope: !5396)
!5400 = !DILocation(line: 2752, column: 18, scope: !5396)
!5401 = !DILocation(line: 2752, column: 66, scope: !5396)
!5402 = !DILocation(line: 2753, column: 15, scope: !5396)
!5403 = !DILocation(line: 2753, column: 38, scope: !5396)
!5404 = !DILocation(line: 2753, column: 20, scope: !5396)
!5405 = !DILocation(line: 2751, column: 15, scope: !5397)
!5406 = !DILocation(line: 2755, column: 25, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5396, file: !292, line: 2754, column: 13)
!5408 = !DILocation(line: 2755, column: 32, scope: !5407)
!5409 = !DILocation(line: 2756, column: 22, scope: !5407)
!5410 = !DILocation(line: 2755, column: 15, scope: !5407)
!5411 = !DILocation(line: 2757, column: 19, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5407, file: !292, line: 2757, column: 19)
!5413 = !DILocation(line: 2757, column: 22, scope: !5412)
!5414 = !DILocation(line: 2757, column: 19, scope: !5407)
!5415 = !DILocation(line: 2758, column: 17, scope: !5412)
!5416 = !DILocation(line: 2759, column: 13, scope: !5407)
!5417 = !DILocation(line: 2767, column: 9, scope: !5397)
!5418 = !DILocation(line: 2768, column: 5, scope: !5316)
!5419 = !DILocation(line: 2771, column: 20, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5313, file: !292, line: 2770, column: 5)
!5421 = !DILocation(line: 2771, column: 51, scope: !5420)
!5422 = !DILocation(line: 2771, column: 7, scope: !5420)
!5423 = !DILocation(line: 2772, column: 7, scope: !5420)
!5424 = !DILocation(line: 2777, column: 8, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2777, column: 7)
!5426 = !DILocation(line: 2777, column: 16, scope: !5425)
!5427 = !DILocation(line: 2777, column: 20, scope: !5425)
!5428 = !DILocation(line: 2777, column: 23, scope: !5425)
!5429 = !DILocation(line: 2777, column: 39, scope: !5425)
!5430 = !DILocation(line: 2777, column: 43, scope: !5425)
!5431 = !DILocation(line: 2778, column: 7, scope: !5425)
!5432 = !DILocation(line: 2778, column: 11, scope: !5425)
!5433 = !DILocation(line: 2778, column: 14, scope: !5425)
!5434 = !DILocation(line: 2778, column: 35, scope: !5425)
!5435 = !DILocation(line: 2778, column: 38, scope: !5425)
!5436 = !DILocation(line: 2778, column: 41, scope: !5425)
!5437 = !DILocation(line: 2777, column: 7, scope: !4072)
!5438 = !DILocation(line: 2780, column: 36, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !292, line: 2780, column: 11)
!5440 = distinct !DILexicalBlock(scope: !5425, file: !292, line: 2779, column: 5)
!5441 = !DILocation(line: 2780, column: 46, scope: !5439)
!5442 = !DILocation(line: 2780, column: 49, scope: !5439)
!5443 = !DILocation(line: 2781, column: 43, scope: !5439)
!5444 = !DILocation(line: 2780, column: 13, scope: !5439)
!5445 = !DILocation(line: 2780, column: 11, scope: !5440)
!5446 = !DILocation(line: 2783, column: 16, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !292, line: 2783, column: 16)
!5448 = distinct !DILexicalBlock(scope: !5439, file: !292, line: 2782, column: 9)
!5449 = !DILocation(line: 2783, column: 19, scope: !5447)
!5450 = !DILocation(line: 2783, column: 16, scope: !5448)
!5451 = !DILocation(line: 2784, column: 14, scope: !5447)
!5452 = !DILocation(line: 2785, column: 9, scope: !5448)
!5453 = !DILocation(line: 2786, column: 5, scope: !5440)
!5454 = !DILocation(line: 2788, column: 7, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2788, column: 7)
!5456 = !DILocation(line: 2788, column: 24, scope: !5455)
!5457 = !DILocation(line: 2788, column: 27, scope: !5455)
!5458 = !DILocation(line: 2788, column: 30, scope: !5455)
!5459 = !DILocation(line: 2788, column: 7, scope: !4072)
!5460 = !DILocalVariable(name: "sb", scope: !5461, file: !292, line: 2792, type: !338)
!5461 = distinct !DILexicalBlock(scope: !5455, file: !292, line: 2789, column: 5)
!5462 = !DILocation(line: 2792, column: 19, scope: !5461)
!5463 = !DILocation(line: 2793, column: 18, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !292, line: 2793, column: 11)
!5465 = !DILocation(line: 2793, column: 11, scope: !5464)
!5466 = !DILocation(line: 2793, column: 33, scope: !5464)
!5467 = !DILocation(line: 2793, column: 11, scope: !5461)
!5468 = !DILocation(line: 2794, column: 22, scope: !5464)
!5469 = !DILocation(line: 2794, column: 25, scope: !5464)
!5470 = !DILocation(line: 2794, column: 36, scope: !5464)
!5471 = !DILocation(line: 2794, column: 9, scope: !5464)
!5472 = !DILocation(line: 2795, column: 5, scope: !5461)
!5473 = !DILocation(line: 2799, column: 7, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2799, column: 7)
!5475 = !DILocation(line: 2799, column: 10, scope: !5474)
!5476 = !DILocation(line: 2799, column: 20, scope: !5474)
!5477 = !DILocation(line: 2799, column: 25, scope: !5474)
!5478 = !DILocation(line: 2799, column: 7, scope: !4072)
!5479 = !DILocation(line: 2802, column: 12, scope: !5474)
!5480 = !DILocation(line: 2802, column: 5, scope: !5474)
!5481 = !DILocation(line: 2804, column: 7, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2804, column: 7)
!5483 = !DILocation(line: 2804, column: 7, scope: !4072)
!5484 = !DILocation(line: 2805, column: 12, scope: !5482)
!5485 = !DILocation(line: 2805, column: 5, scope: !5482)
!5486 = !DILocation(line: 2819, column: 7, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2819, column: 7)
!5488 = !DILocation(line: 2819, column: 10, scope: !5487)
!5489 = !DILocation(line: 2819, column: 7, scope: !4072)
!5490 = !DILocalVariable(name: "timespec", scope: !5491, file: !292, line: 2821, type: !390)
!5491 = distinct !DILexicalBlock(scope: !5487, file: !292, line: 2820, column: 5)
!5492 = !DILocation(line: 2821, column: 23, scope: !5491)
!5493 = !DILocation(line: 2822, column: 7, scope: !5491)
!5494 = !DILocation(line: 2822, column: 21, scope: !5491)
!5495 = !DILocation(line: 2823, column: 7, scope: !5491)
!5496 = !DILocation(line: 2823, column: 21, scope: !5491)
!5497 = !DILocation(line: 2825, column: 12, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5491, file: !292, line: 2825, column: 11)
!5499 = !DILocation(line: 2826, column: 31, scope: !5498)
!5500 = !DILocation(line: 2826, column: 41, scope: !5498)
!5501 = !DILocation(line: 2826, column: 14, scope: !5498)
!5502 = !DILocation(line: 2827, column: 23, scope: !5498)
!5503 = !DILocation(line: 2827, column: 33, scope: !5498)
!5504 = !DILocation(line: 2827, column: 14, scope: !5498)
!5505 = !DILocation(line: 2828, column: 11, scope: !5498)
!5506 = !DILocation(line: 2825, column: 11, scope: !5491)
!5507 = !DILocation(line: 2830, column: 21, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5498, file: !292, line: 2829, column: 9)
!5509 = !DILocation(line: 2830, column: 28, scope: !5508)
!5510 = !DILocation(line: 2830, column: 58, scope: !5508)
!5511 = !DILocation(line: 2830, column: 11, scope: !5508)
!5512 = !DILocation(line: 2831, column: 15, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5508, file: !292, line: 2831, column: 15)
!5514 = !DILocation(line: 2831, column: 18, scope: !5513)
!5515 = !DILocation(line: 2831, column: 15, scope: !5508)
!5516 = !DILocation(line: 2832, column: 13, scope: !5513)
!5517 = !DILocation(line: 2833, column: 9, scope: !5508)
!5518 = !DILocation(line: 2834, column: 5, scope: !5491)
!5519 = !DILocation(line: 2837, column: 8, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2837, column: 7)
!5521 = !DILocation(line: 2837, column: 24, scope: !5520)
!5522 = !DILocation(line: 2837, column: 27, scope: !5520)
!5523 = !DILocation(line: 2837, column: 30, scope: !5520)
!5524 = !DILocation(line: 2838, column: 7, scope: !5520)
!5525 = !DILocation(line: 2838, column: 11, scope: !5520)
!5526 = !DILocation(line: 2838, column: 19, scope: !5520)
!5527 = !DILocation(line: 2838, column: 23, scope: !5520)
!5528 = !DILocation(line: 2837, column: 7, scope: !4072)
!5529 = !DILocation(line: 2840, column: 26, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5520, file: !292, line: 2839, column: 5)
!5531 = !DILocation(line: 2840, column: 29, scope: !5530)
!5532 = !DILocation(line: 2840, column: 52, scope: !5530)
!5533 = !DILocation(line: 2840, column: 15, scope: !5530)
!5534 = !DILocation(line: 2840, column: 7, scope: !5530)
!5535 = !DILocation(line: 2843, column: 11, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5530, file: !292, line: 2841, column: 9)
!5537 = !DILocation(line: 2846, column: 20, scope: !5536)
!5538 = !DILocation(line: 2847, column: 11, scope: !5536)
!5539 = !DILocation(line: 2849, column: 5, scope: !5530)
!5540 = !DILocation(line: 2852, column: 7, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2852, column: 7)
!5542 = !DILocation(line: 2852, column: 10, scope: !5541)
!5543 = !DILocation(line: 2852, column: 25, scope: !5541)
!5544 = !DILocation(line: 2852, column: 41, scope: !5541)
!5545 = !DILocation(line: 2852, column: 55, scope: !5541)
!5546 = !DILocation(line: 2852, column: 69, scope: !5541)
!5547 = !DILocation(line: 2852, column: 30, scope: !5541)
!5548 = !DILocation(line: 2853, column: 7, scope: !5541)
!5549 = !DILocation(line: 2853, column: 10, scope: !5541)
!5550 = !DILocation(line: 2853, column: 13, scope: !5541)
!5551 = !DILocation(line: 2852, column: 7, scope: !4072)
!5552 = !DILocation(line: 2854, column: 5, scope: !5541)
!5553 = !DILocation(line: 2857, column: 7, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2857, column: 7)
!5555 = !DILocation(line: 2857, column: 7, scope: !4072)
!5556 = !DILocation(line: 2858, column: 12, scope: !5554)
!5557 = !DILocation(line: 2858, column: 5, scope: !5554)
!5558 = !DILocation(line: 2860, column: 15, scope: !4072)
!5559 = !DILocation(line: 2860, column: 3, scope: !4072)
!5560 = !DILocation(line: 2862, column: 7, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2862, column: 7)
!5562 = !DILocation(line: 2862, column: 10, scope: !5561)
!5563 = !DILocation(line: 2862, column: 24, scope: !5561)
!5564 = !DILocation(line: 2862, column: 27, scope: !5561)
!5565 = !DILocation(line: 2862, column: 30, scope: !5561)
!5566 = !DILocation(line: 2862, column: 7, scope: !4072)
!5567 = !DILocation(line: 2864, column: 21, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !292, line: 2864, column: 11)
!5569 = distinct !DILexicalBlock(scope: !5561, file: !292, line: 2863, column: 5)
!5570 = !DILocation(line: 2864, column: 35, scope: !5568)
!5571 = !DILocation(line: 2864, column: 49, scope: !5568)
!5572 = !DILocation(line: 2864, column: 11, scope: !5568)
!5573 = !DILocation(line: 2864, column: 59, scope: !5568)
!5574 = !DILocation(line: 2865, column: 11, scope: !5568)
!5575 = !DILocation(line: 2865, column: 14, scope: !5568)
!5576 = !DILocation(line: 2865, column: 17, scope: !5568)
!5577 = !DILocation(line: 2864, column: 11, scope: !5569)
!5578 = !DILocation(line: 2866, column: 9, scope: !5568)
!5579 = !DILocation(line: 2867, column: 5, scope: !5569)
!5580 = !DILocation(line: 2868, column: 12, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5561, file: !292, line: 2868, column: 12)
!5582 = !DILocation(line: 2868, column: 15, scope: !5581)
!5583 = !DILocation(line: 2868, column: 12, scope: !5561)
!5584 = !DILocation(line: 2870, column: 20, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !292, line: 2870, column: 11)
!5586 = distinct !DILexicalBlock(scope: !5581, file: !292, line: 2869, column: 5)
!5587 = !DILocation(line: 2870, column: 34, scope: !5585)
!5588 = !DILocation(line: 2870, column: 37, scope: !5585)
!5589 = !DILocation(line: 2870, column: 11, scope: !5585)
!5590 = !DILocation(line: 2870, column: 43, scope: !5585)
!5591 = !DILocation(line: 2870, column: 11, scope: !5586)
!5592 = !DILocation(line: 2871, column: 9, scope: !5585)
!5593 = !DILocation(line: 2872, column: 5, scope: !5586)
!5594 = !DILocation(line: 2873, column: 12, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5581, file: !292, line: 2873, column: 12)
!5596 = !DILocation(line: 2873, column: 15, scope: !5595)
!5597 = !DILocation(line: 2873, column: 41, scope: !5595)
!5598 = !DILocation(line: 2873, column: 44, scope: !5595)
!5599 = !DILocation(line: 2873, column: 12, scope: !5581)
!5600 = !DILocalVariable(name: "default_permissions", scope: !5601, file: !292, line: 2875, type: !7)
!5601 = distinct !DILexicalBlock(scope: !5595, file: !292, line: 2874, column: 5)
!5602 = !DILocation(line: 2875, column: 11, scope: !5601)
!5603 = !DILocation(line: 2875, column: 33, scope: !5601)
!5604 = !DILocation(line: 2875, column: 52, scope: !5601)
!5605 = !DILocation(line: 2875, column: 55, scope: !5601)
!5606 = !DILocation(line: 2877, column: 20, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5601, file: !292, line: 2877, column: 11)
!5608 = !DILocation(line: 2877, column: 34, scope: !5607)
!5609 = !DILocation(line: 2877, column: 57, scope: !5607)
!5610 = !DILocation(line: 2877, column: 56, scope: !5607)
!5611 = !DILocation(line: 2877, column: 54, scope: !5607)
!5612 = !DILocation(line: 2877, column: 11, scope: !5607)
!5613 = !DILocation(line: 2877, column: 74, scope: !5607)
!5614 = !DILocation(line: 2877, column: 11, scope: !5601)
!5615 = !DILocation(line: 2878, column: 9, scope: !5607)
!5616 = !DILocation(line: 2879, column: 5, scope: !5601)
!5617 = !DILocation(line: 2882, column: 11, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !292, line: 2882, column: 11)
!5619 = distinct !DILexicalBlock(scope: !5595, file: !292, line: 2881, column: 5)
!5620 = !DILocation(line: 2882, column: 11, scope: !5619)
!5621 = !DILocation(line: 2884, column: 36, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5618, file: !292, line: 2883, column: 9)
!5623 = !DILocation(line: 2884, column: 34, scope: !5622)
!5624 = !DILocation(line: 2884, column: 31, scope: !5622)
!5625 = !DILocation(line: 2886, column: 15, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5622, file: !292, line: 2886, column: 15)
!5627 = !DILocation(line: 2886, column: 35, scope: !5626)
!5628 = !DILocation(line: 2886, column: 39, scope: !5626)
!5629 = !DILocation(line: 2886, column: 15, scope: !5622)
!5630 = !DILocation(line: 2894, column: 19, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !292, line: 2894, column: 19)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !292, line: 2887, column: 13)
!5633 = !DILocation(line: 2894, column: 27, scope: !5631)
!5634 = !DILocation(line: 2894, column: 37, scope: !5631)
!5635 = !DILocation(line: 2894, column: 30, scope: !5631)
!5636 = !DILocation(line: 2894, column: 56, scope: !5631)
!5637 = !DILocation(line: 2894, column: 19, scope: !5632)
!5638 = !DILocation(line: 2896, column: 29, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5631, file: !292, line: 2895, column: 17)
!5640 = !DILocation(line: 2896, column: 36, scope: !5639)
!5641 = !DILocation(line: 2896, column: 57, scope: !5639)
!5642 = !DILocation(line: 2896, column: 19, scope: !5639)
!5643 = !DILocation(line: 2897, column: 19, scope: !5639)
!5644 = !DILocation(line: 2899, column: 33, scope: !5632)
!5645 = !DILocation(line: 2899, column: 24, scope: !5632)
!5646 = !DILocation(line: 2900, column: 19, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5632, file: !292, line: 2900, column: 19)
!5648 = !DILocation(line: 2900, column: 42, scope: !5647)
!5649 = !DILocation(line: 2900, column: 41, scope: !5647)
!5650 = !DILocation(line: 2900, column: 39, scope: !5647)
!5651 = !DILocation(line: 2900, column: 19, scope: !5632)
!5652 = !DILocation(line: 2901, column: 34, scope: !5647)
!5653 = !DILocation(line: 2901, column: 17, scope: !5647)
!5654 = !DILocation(line: 2902, column: 13, scope: !5632)
!5655 = !DILocation(line: 2903, column: 9, scope: !5622)
!5656 = !DILocation(line: 2905, column: 11, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5619, file: !292, line: 2905, column: 11)
!5658 = !DILocation(line: 2905, column: 11, scope: !5619)
!5659 = !DILocation(line: 2907, column: 23, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5661, file: !292, line: 2907, column: 15)
!5661 = distinct !DILexicalBlock(scope: !5657, file: !292, line: 2906, column: 9)
!5662 = !DILocation(line: 2907, column: 33, scope: !5660)
!5663 = !DILocation(line: 2907, column: 44, scope: !5660)
!5664 = !DILocation(line: 2907, column: 42, scope: !5660)
!5665 = !DILocation(line: 2907, column: 15, scope: !5660)
!5666 = !DILocation(line: 2907, column: 65, scope: !5660)
!5667 = !DILocation(line: 2907, column: 15, scope: !5661)
!5668 = !DILocation(line: 2909, column: 25, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5660, file: !292, line: 2908, column: 13)
!5670 = !DILocation(line: 2909, column: 32, scope: !5669)
!5671 = !DILocation(line: 2910, column: 22, scope: !5669)
!5672 = !DILocation(line: 2909, column: 15, scope: !5669)
!5673 = !DILocation(line: 2911, column: 19, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5669, file: !292, line: 2911, column: 19)
!5675 = !DILocation(line: 2911, column: 22, scope: !5674)
!5676 = !DILocation(line: 2911, column: 19, scope: !5669)
!5677 = !DILocation(line: 2912, column: 17, scope: !5674)
!5678 = !DILocation(line: 2913, column: 13, scope: !5669)
!5679 = !DILocation(line: 2914, column: 9, scope: !5661)
!5680 = !DILocation(line: 2917, column: 10, scope: !4072)
!5681 = !DILocation(line: 2917, column: 3, scope: !4072)
!5682 = !DILabel(scope: !4072, name: "un_backup", file: !292, line: 2919)
!5683 = !DILocation(line: 2919, column: 1, scope: !4072)
!5684 = !DILocation(line: 2921, column: 7, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2921, column: 7)
!5686 = !DILocation(line: 2921, column: 10, scope: !5685)
!5687 = !DILocation(line: 2921, column: 7, scope: !4072)
!5688 = !DILocation(line: 2922, column: 5, scope: !5685)
!5689 = !DILocation(line: 2930, column: 7, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2930, column: 7)
!5691 = !DILocation(line: 2930, column: 20, scope: !5690)
!5692 = !DILocation(line: 2930, column: 7, scope: !4072)
!5693 = !DILocation(line: 2931, column: 28, scope: !5690)
!5694 = !DILocation(line: 2931, column: 43, scope: !5690)
!5695 = !DILocation(line: 2931, column: 5, scope: !5690)
!5696 = !DILocation(line: 2933, column: 7, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !4072, file: !292, line: 2933, column: 7)
!5698 = !DILocation(line: 2933, column: 7, scope: !4072)
!5699 = !DILocation(line: 2935, column: 19, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !292, line: 2935, column: 11)
!5701 = distinct !DILexicalBlock(scope: !5697, file: !292, line: 2934, column: 5)
!5702 = !DILocation(line: 2935, column: 31, scope: !5700)
!5703 = !DILocation(line: 2935, column: 11, scope: !5700)
!5704 = !DILocation(line: 2935, column: 41, scope: !5700)
!5705 = !DILocation(line: 2935, column: 11, scope: !5701)
!5706 = !DILocation(line: 2936, column: 19, scope: !5700)
!5707 = !DILocation(line: 2936, column: 26, scope: !5700)
!5708 = !DILocation(line: 2936, column: 52, scope: !5700)
!5709 = !DILocation(line: 2936, column: 9, scope: !5700)
!5710 = !DILocation(line: 2939, column: 15, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5712, file: !292, line: 2939, column: 15)
!5712 = distinct !DILexicalBlock(scope: !5700, file: !292, line: 2938, column: 9)
!5713 = !DILocation(line: 2939, column: 18, scope: !5711)
!5714 = !DILocation(line: 2939, column: 15, scope: !5712)
!5715 = !DILocation(line: 2940, column: 21, scope: !5711)
!5716 = !DILocation(line: 2941, column: 21, scope: !5711)
!5717 = !DILocation(line: 2941, column: 48, scope: !5711)
!5718 = !DILocation(line: 2940, column: 13, scope: !5711)
!5719 = !DILocation(line: 2943, column: 5, scope: !5701)
!5720 = !DILocation(line: 2944, column: 3, scope: !4072)
!5721 = !DILocation(line: 2945, column: 1, scope: !4072)
!5722 = distinct !DISubprogram(name: "should_dereference", scope: !292, file: !292, line: 1804, type: !5723, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{!142, !3742, !142}
!5725 = !DILocalVariable(name: "x", arg: 1, scope: !5722, file: !292, line: 1804, type: !3742)
!5726 = !DILocation(line: 1804, column: 46, scope: !5722)
!5727 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !5722, file: !292, line: 1804, type: !142)
!5728 = !DILocation(line: 1804, column: 54, scope: !5722)
!5729 = !DILocation(line: 1806, column: 10, scope: !5722)
!5730 = !DILocation(line: 1806, column: 13, scope: !5722)
!5731 = !DILocation(line: 1806, column: 25, scope: !5722)
!5732 = !DILocation(line: 1807, column: 10, scope: !5722)
!5733 = !DILocation(line: 1807, column: 14, scope: !5722)
!5734 = !DILocation(line: 1807, column: 17, scope: !5722)
!5735 = !DILocation(line: 1807, column: 29, scope: !5722)
!5736 = !DILocation(line: 1808, column: 14, scope: !5722)
!5737 = !DILocation(line: 1808, column: 17, scope: !5722)
!5738 = !DILocation(line: 0, scope: !5722)
!5739 = !DILocation(line: 1806, column: 3, scope: !5722)
!5740 = distinct !DISubprogram(name: "same_file_ok", scope: !292, file: !292, line: 1428, type: !5741, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{!142, !116, !391, !116, !391, !3742, !4011}
!5743 = !DILocalVariable(name: "src_name", arg: 1, scope: !5740, file: !292, line: 1428, type: !116)
!5744 = !DILocation(line: 1428, column: 27, scope: !5740)
!5745 = !DILocalVariable(name: "src_sb", arg: 2, scope: !5740, file: !292, line: 1428, type: !391)
!5746 = !DILocation(line: 1428, column: 56, scope: !5740)
!5747 = !DILocalVariable(name: "dst_name", arg: 3, scope: !5740, file: !292, line: 1429, type: !116)
!5748 = !DILocation(line: 1429, column: 27, scope: !5740)
!5749 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !5740, file: !292, line: 1429, type: !391)
!5750 = !DILocation(line: 1429, column: 56, scope: !5740)
!5751 = !DILocalVariable(name: "x", arg: 5, scope: !5740, file: !292, line: 1430, type: !3742)
!5752 = !DILocation(line: 1430, column: 40, scope: !5740)
!5753 = !DILocalVariable(name: "return_now", arg: 6, scope: !5740, file: !292, line: 1430, type: !4011)
!5754 = !DILocation(line: 1430, column: 49, scope: !5740)
!5755 = !DILocalVariable(name: "src_sb_link", scope: !5740, file: !292, line: 1432, type: !391)
!5756 = !DILocation(line: 1432, column: 22, scope: !5740)
!5757 = !DILocalVariable(name: "dst_sb_link", scope: !5740, file: !292, line: 1433, type: !391)
!5758 = !DILocation(line: 1433, column: 22, scope: !5740)
!5759 = !DILocalVariable(name: "tmp_dst_sb", scope: !5740, file: !292, line: 1434, type: !338)
!5760 = !DILocation(line: 1434, column: 15, scope: !5740)
!5761 = !DILocalVariable(name: "tmp_src_sb", scope: !5740, file: !292, line: 1435, type: !338)
!5762 = !DILocation(line: 1435, column: 15, scope: !5740)
!5763 = !DILocalVariable(name: "same_link", scope: !5740, file: !292, line: 1437, type: !142)
!5764 = !DILocation(line: 1437, column: 8, scope: !5740)
!5765 = !DILocalVariable(name: "same", scope: !5740, file: !292, line: 1438, type: !142)
!5766 = !DILocation(line: 1438, column: 8, scope: !5740)
!5767 = !DILocation(line: 1438, column: 15, scope: !5740)
!5768 = !DILocation(line: 0, scope: !5740)
!5769 = !DILocation(line: 1440, column: 4, scope: !5740)
!5770 = !DILocation(line: 1440, column: 15, scope: !5740)
!5771 = !DILocation(line: 1447, column: 7, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1447, column: 7)
!5773 = !DILocation(line: 1447, column: 12, scope: !5772)
!5774 = !DILocation(line: 1447, column: 15, scope: !5772)
!5775 = !DILocation(line: 1447, column: 18, scope: !5772)
!5776 = !DILocation(line: 1447, column: 7, scope: !5740)
!5777 = !DILocation(line: 1449, column: 8, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5772, file: !292, line: 1448, column: 5)
!5779 = !DILocation(line: 1449, column: 19, scope: !5778)
!5780 = !DILocation(line: 1450, column: 7, scope: !5778)
!5781 = !DILocation(line: 1453, column: 7, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1453, column: 7)
!5783 = !DILocation(line: 1453, column: 10, scope: !5782)
!5784 = !DILocation(line: 1453, column: 22, scope: !5782)
!5785 = !DILocation(line: 1453, column: 7, scope: !5740)
!5786 = !DILocation(line: 1455, column: 19, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5782, file: !292, line: 1454, column: 5)
!5788 = !DILocation(line: 1455, column: 17, scope: !5787)
!5789 = !DILocation(line: 1460, column: 11, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5787, file: !292, line: 1460, column: 11)
!5791 = !DILocation(line: 1460, column: 37, scope: !5790)
!5792 = !DILocation(line: 1460, column: 40, scope: !5790)
!5793 = !DILocation(line: 1460, column: 11, scope: !5787)
!5794 = !DILocalVariable(name: "sn", scope: !5795, file: !292, line: 1462, type: !142)
!5795 = distinct !DILexicalBlock(scope: !5790, file: !292, line: 1461, column: 9)
!5796 = !DILocation(line: 1462, column: 16, scope: !5795)
!5797 = !DILocation(line: 1462, column: 32, scope: !5795)
!5798 = !DILocation(line: 1462, column: 42, scope: !5795)
!5799 = !DILocation(line: 1462, column: 21, scope: !5795)
!5800 = !DILocation(line: 1463, column: 18, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5795, file: !292, line: 1463, column: 16)
!5802 = !DILocation(line: 1463, column: 16, scope: !5795)
!5803 = !DILocation(line: 1466, column: 19, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !292, line: 1466, column: 19)
!5805 = distinct !DILexicalBlock(scope: !5801, file: !292, line: 1464, column: 13)
!5806 = !DILocation(line: 1466, column: 22, scope: !5804)
!5807 = !DILocation(line: 1466, column: 34, scope: !5804)
!5808 = !DILocation(line: 1466, column: 19, scope: !5805)
!5809 = !DILocation(line: 1467, column: 17, scope: !5804)
!5810 = !DILocation(line: 1473, column: 19, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5805, file: !292, line: 1473, column: 19)
!5812 = !DILocation(line: 1473, column: 19, scope: !5805)
!5813 = !DILocation(line: 1475, column: 20, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5811, file: !292, line: 1474, column: 17)
!5815 = !DILocation(line: 1475, column: 31, scope: !5814)
!5816 = !DILocation(line: 1476, column: 28, scope: !5814)
!5817 = !DILocation(line: 1476, column: 31, scope: !5814)
!5818 = !DILocation(line: 1476, column: 26, scope: !5814)
!5819 = !DILocation(line: 1476, column: 19, scope: !5814)
!5820 = !DILocation(line: 1478, column: 13, scope: !5805)
!5821 = !DILocation(line: 1480, column: 20, scope: !5795)
!5822 = !DILocation(line: 1480, column: 18, scope: !5795)
!5823 = !DILocation(line: 1480, column: 11, scope: !5795)
!5824 = !DILocation(line: 1483, column: 21, scope: !5787)
!5825 = !DILocation(line: 1483, column: 19, scope: !5787)
!5826 = !DILocation(line: 1484, column: 21, scope: !5787)
!5827 = !DILocation(line: 1484, column: 19, scope: !5787)
!5828 = !DILocation(line: 1485, column: 5, scope: !5787)
!5829 = !DILocation(line: 1488, column: 12, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !292, line: 1488, column: 11)
!5831 = distinct !DILexicalBlock(scope: !5782, file: !292, line: 1487, column: 5)
!5832 = !DILocation(line: 1488, column: 11, scope: !5831)
!5833 = !DILocation(line: 1489, column: 9, scope: !5830)
!5834 = !DILocation(line: 1491, column: 18, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5831, file: !292, line: 1491, column: 11)
!5836 = !DILocation(line: 1491, column: 11, scope: !5835)
!5837 = !DILocation(line: 1491, column: 41, scope: !5835)
!5838 = !DILocation(line: 1492, column: 11, scope: !5835)
!5839 = !DILocation(line: 1492, column: 21, scope: !5835)
!5840 = !DILocation(line: 1492, column: 14, scope: !5835)
!5841 = !DILocation(line: 1492, column: 44, scope: !5835)
!5842 = !DILocation(line: 1491, column: 11, scope: !5831)
!5843 = !DILocation(line: 1493, column: 9, scope: !5835)
!5844 = !DILocation(line: 1495, column: 19, scope: !5831)
!5845 = !DILocation(line: 1496, column: 19, scope: !5831)
!5846 = !DILocation(line: 1498, column: 19, scope: !5831)
!5847 = !DILocation(line: 0, scope: !5831)
!5848 = !DILocation(line: 1498, column: 17, scope: !5831)
!5849 = !DILocation(line: 1505, column: 11, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5831, file: !292, line: 1505, column: 11)
!5851 = !DILocation(line: 1505, column: 42, scope: !5850)
!5852 = !DILocation(line: 1505, column: 45, scope: !5850)
!5853 = !DILocation(line: 1506, column: 11, scope: !5850)
!5854 = !DILocation(line: 1506, column: 14, scope: !5850)
!5855 = !DILocation(line: 1506, column: 17, scope: !5850)
!5856 = !DILocation(line: 1505, column: 11, scope: !5831)
!5857 = !DILocation(line: 1507, column: 9, scope: !5850)
!5858 = !DILocation(line: 1515, column: 7, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1515, column: 7)
!5860 = !DILocation(line: 1515, column: 10, scope: !5859)
!5861 = !DILocation(line: 1515, column: 22, scope: !5859)
!5862 = !DILocation(line: 1515, column: 7, scope: !5740)
!5863 = !DILocation(line: 1517, column: 12, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !292, line: 1517, column: 11)
!5865 = distinct !DILexicalBlock(scope: !5859, file: !292, line: 1516, column: 5)
!5866 = !DILocation(line: 1517, column: 11, scope: !5865)
!5867 = !DILocation(line: 1535, column: 18, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !292, line: 1535, column: 16)
!5869 = distinct !DILexicalBlock(scope: !5864, file: !292, line: 1518, column: 9)
!5870 = !DILocation(line: 1535, column: 21, scope: !5868)
!5871 = !DILocation(line: 1536, column: 16, scope: !5868)
!5872 = !DILocation(line: 1536, column: 19, scope: !5868)
!5873 = !DILocation(line: 1536, column: 22, scope: !5868)
!5874 = !DILocation(line: 1536, column: 34, scope: !5868)
!5875 = !DILocation(line: 1537, column: 16, scope: !5868)
!5876 = !DILocation(line: 1537, column: 19, scope: !5868)
!5877 = !DILocation(line: 1538, column: 16, scope: !5868)
!5878 = !DILocation(line: 1538, column: 21, scope: !5868)
!5879 = !DILocation(line: 1535, column: 16, scope: !5869)
!5880 = !DILocation(line: 1539, column: 13, scope: !5868)
!5881 = !DILocation(line: 1541, column: 11, scope: !5869)
!5882 = !DILocation(line: 1545, column: 27, scope: !5865)
!5883 = !DILocation(line: 1545, column: 37, scope: !5865)
!5884 = !DILocation(line: 1545, column: 16, scope: !5865)
!5885 = !DILocation(line: 1545, column: 14, scope: !5865)
!5886 = !DILocation(line: 1545, column: 7, scope: !5865)
!5887 = !DILocation(line: 1565, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1565, column: 7)
!5889 = !DILocation(line: 1565, column: 10, scope: !5888)
!5890 = !DILocation(line: 1565, column: 20, scope: !5888)
!5891 = !DILocation(line: 1565, column: 23, scope: !5888)
!5892 = !DILocation(line: 1565, column: 26, scope: !5888)
!5893 = !DILocation(line: 1565, column: 7, scope: !5740)
!5894 = !DILocation(line: 1571, column: 11, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !292, line: 1571, column: 11)
!5896 = distinct !DILexicalBlock(scope: !5888, file: !292, line: 1566, column: 5)
!5897 = !DILocation(line: 1571, column: 11, scope: !5896)
!5898 = !DILocation(line: 1572, column: 9, scope: !5895)
!5899 = !DILocation(line: 1576, column: 11, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5896, file: !292, line: 1576, column: 11)
!5901 = !DILocation(line: 1577, column: 11, scope: !5900)
!5902 = !DILocation(line: 1577, column: 18, scope: !5900)
!5903 = !DILocation(line: 1577, column: 31, scope: !5900)
!5904 = !DILocation(line: 1577, column: 16, scope: !5900)
!5905 = !DILocation(line: 1578, column: 11, scope: !5900)
!5906 = !DILocation(line: 1578, column: 27, scope: !5900)
!5907 = !DILocation(line: 1578, column: 37, scope: !5900)
!5908 = !DILocation(line: 1578, column: 16, scope: !5900)
!5909 = !DILocation(line: 1576, column: 11, scope: !5896)
!5910 = !DILocation(line: 1579, column: 18, scope: !5900)
!5911 = !DILocation(line: 1579, column: 21, scope: !5900)
!5912 = !DILocation(line: 1579, column: 16, scope: !5900)
!5913 = !DILocation(line: 1579, column: 9, scope: !5900)
!5914 = !DILocation(line: 1580, column: 5, scope: !5896)
!5915 = !DILocation(line: 1584, column: 8, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1584, column: 7)
!5917 = !DILocation(line: 1584, column: 39, scope: !5916)
!5918 = !DILocation(line: 1584, column: 43, scope: !5916)
!5919 = !DILocation(line: 1584, column: 7, scope: !5740)
!5920 = !DILocation(line: 1586, column: 12, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !292, line: 1586, column: 11)
!5922 = distinct !DILexicalBlock(scope: !5916, file: !292, line: 1585, column: 5)
!5923 = !DILocation(line: 1586, column: 11, scope: !5922)
!5924 = !DILocation(line: 1587, column: 9, scope: !5921)
!5925 = !DILocation(line: 1590, column: 11, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5922, file: !292, line: 1590, column: 11)
!5927 = !DILocation(line: 1590, column: 14, scope: !5926)
!5928 = !DILocation(line: 1590, column: 11, scope: !5922)
!5929 = !DILocation(line: 1592, column: 12, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5926, file: !292, line: 1591, column: 9)
!5931 = !DILocation(line: 1592, column: 23, scope: !5930)
!5932 = !DILocation(line: 1593, column: 11, scope: !5930)
!5933 = !DILocation(line: 1595, column: 5, scope: !5922)
!5934 = !DILocation(line: 1617, column: 7, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1617, column: 7)
!5936 = !DILocation(line: 1617, column: 10, scope: !5935)
!5937 = !DILocation(line: 1618, column: 7, scope: !5935)
!5938 = !DILocation(line: 1618, column: 10, scope: !5935)
!5939 = !DILocation(line: 1619, column: 7, scope: !5935)
!5940 = !DILocation(line: 1619, column: 14, scope: !5935)
!5941 = !DILocation(line: 1619, column: 27, scope: !5935)
!5942 = !DILocation(line: 1619, column: 12, scope: !5935)
!5943 = !DILocation(line: 1617, column: 7, scope: !5740)
!5944 = !DILocalVariable(name: "abs_src", scope: !5945, file: !292, line: 1621, type: !9)
!5945 = distinct !DILexicalBlock(scope: !5935, file: !292, line: 1620, column: 5)
!5946 = !DILocation(line: 1621, column: 13, scope: !5945)
!5947 = !DILocation(line: 1621, column: 47, scope: !5945)
!5948 = !DILocation(line: 1621, column: 23, scope: !5945)
!5949 = !DILocation(line: 1622, column: 11, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5945, file: !292, line: 1622, column: 11)
!5951 = !DILocation(line: 1622, column: 11, scope: !5945)
!5952 = !DILocalVariable(name: "result", scope: !5953, file: !292, line: 1624, type: !142)
!5953 = distinct !DILexicalBlock(scope: !5950, file: !292, line: 1623, column: 9)
!5954 = !DILocation(line: 1624, column: 16, scope: !5953)
!5955 = !DILocation(line: 1624, column: 38, scope: !5953)
!5956 = !DILocation(line: 1624, column: 47, scope: !5953)
!5957 = !DILocation(line: 1624, column: 27, scope: !5953)
!5958 = !DILocation(line: 1624, column: 25, scope: !5953)
!5959 = !DILocation(line: 1625, column: 17, scope: !5953)
!5960 = !DILocation(line: 1625, column: 11, scope: !5953)
!5961 = !DILocation(line: 1626, column: 18, scope: !5953)
!5962 = !DILocation(line: 1626, column: 11, scope: !5953)
!5963 = !DILocation(line: 1628, column: 5, scope: !5945)
!5964 = !DILocation(line: 1631, column: 7, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1631, column: 7)
!5966 = !DILocation(line: 1631, column: 10, scope: !5965)
!5967 = !DILocation(line: 1631, column: 24, scope: !5965)
!5968 = !DILocation(line: 1631, column: 27, scope: !5965)
!5969 = !DILocation(line: 1631, column: 7, scope: !5740)
!5970 = !DILocation(line: 1632, column: 5, scope: !5965)
!5971 = !DILocation(line: 1634, column: 7, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5740, file: !292, line: 1634, column: 7)
!5973 = !DILocation(line: 1634, column: 10, scope: !5972)
!5974 = !DILocation(line: 1634, column: 22, scope: !5972)
!5975 = !DILocation(line: 1634, column: 7, scope: !5740)
!5976 = !DILocation(line: 1636, column: 14, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5978, file: !292, line: 1636, column: 12)
!5978 = distinct !DILexicalBlock(scope: !5972, file: !292, line: 1635, column: 5)
!5979 = !DILocation(line: 1636, column: 12, scope: !5978)
!5980 = !DILocation(line: 1637, column: 23, scope: !5977)
!5981 = !DILocation(line: 1637, column: 22, scope: !5977)
!5982 = !DILocation(line: 1637, column: 9, scope: !5977)
!5983 = !DILocation(line: 1638, column: 22, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5977, file: !292, line: 1638, column: 16)
!5985 = !DILocation(line: 1638, column: 16, scope: !5984)
!5986 = !DILocation(line: 1638, column: 45, scope: !5984)
!5987 = !DILocation(line: 1638, column: 16, scope: !5977)
!5988 = !DILocation(line: 1639, column: 9, scope: !5984)
!5989 = !DILocation(line: 1641, column: 14, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5978, file: !292, line: 1641, column: 12)
!5991 = !DILocation(line: 1641, column: 12, scope: !5978)
!5992 = !DILocation(line: 1642, column: 23, scope: !5990)
!5993 = !DILocation(line: 1642, column: 22, scope: !5990)
!5994 = !DILocation(line: 1642, column: 9, scope: !5990)
!5995 = !DILocation(line: 1643, column: 22, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5990, file: !292, line: 1643, column: 16)
!5997 = !DILocation(line: 1643, column: 16, scope: !5996)
!5998 = !DILocation(line: 1643, column: 45, scope: !5996)
!5999 = !DILocation(line: 1643, column: 16, scope: !5990)
!6000 = !DILocation(line: 1644, column: 9, scope: !5996)
!6001 = !DILocation(line: 1646, column: 14, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5978, file: !292, line: 1646, column: 12)
!6003 = !DILocation(line: 1646, column: 12, scope: !5978)
!6004 = !DILocation(line: 1647, column: 9, scope: !6002)
!6005 = !DILocation(line: 1649, column: 11, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5978, file: !292, line: 1649, column: 11)
!6007 = !DILocation(line: 1649, column: 14, scope: !6006)
!6008 = !DILocation(line: 1649, column: 11, scope: !5978)
!6009 = !DILocation(line: 1655, column: 27, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6006, file: !292, line: 1650, column: 9)
!6011 = !DILocation(line: 1655, column: 25, scope: !6010)
!6012 = !DILocation(line: 1655, column: 12, scope: !6010)
!6013 = !DILocation(line: 1655, column: 23, scope: !6010)
!6014 = !DILocation(line: 1656, column: 11, scope: !6010)
!6015 = !DILocation(line: 1658, column: 5, scope: !5978)
!6016 = !DILocation(line: 1660, column: 3, scope: !5740)
!6017 = !DILocation(line: 1661, column: 1, scope: !5740)
!6018 = distinct !DISubprogram(name: "create_hard_link", scope: !292, file: !292, line: 1783, type: !6019, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6019 = !DISubroutineType(types: !6020)
!6020 = !{!142, !116, !116, !142, !142, !142}
!6021 = !DILocalVariable(name: "src_name", arg: 1, scope: !6018, file: !292, line: 1783, type: !116)
!6022 = !DILocation(line: 1783, column: 31, scope: !6018)
!6023 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6018, file: !292, line: 1783, type: !116)
!6024 = !DILocation(line: 1783, column: 53, scope: !6018)
!6025 = !DILocalVariable(name: "replace", arg: 3, scope: !6018, file: !292, line: 1784, type: !142)
!6026 = !DILocation(line: 1784, column: 24, scope: !6018)
!6027 = !DILocalVariable(name: "verbose", arg: 4, scope: !6018, file: !292, line: 1784, type: !142)
!6028 = !DILocation(line: 1784, column: 38, scope: !6018)
!6029 = !DILocalVariable(name: "dereference", arg: 5, scope: !6018, file: !292, line: 1784, type: !142)
!6030 = !DILocation(line: 1784, column: 52, scope: !6018)
!6031 = !DILocalVariable(name: "err", scope: !6018, file: !292, line: 1786, type: !7)
!6032 = !DILocation(line: 1786, column: 7, scope: !6018)
!6033 = !DILocation(line: 1786, column: 37, scope: !6018)
!6034 = !DILocation(line: 1786, column: 57, scope: !6018)
!6035 = !DILocation(line: 1787, column: 27, scope: !6018)
!6036 = !DILocation(line: 1788, column: 27, scope: !6018)
!6037 = !DILocation(line: 1786, column: 13, scope: !6018)
!6038 = !DILocation(line: 1789, column: 11, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6018, file: !292, line: 1789, column: 7)
!6040 = !DILocation(line: 1789, column: 9, scope: !6039)
!6041 = !DILocation(line: 1789, column: 7, scope: !6018)
!6042 = !DILocation(line: 1791, column: 17, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6039, file: !292, line: 1790, column: 5)
!6044 = !DILocation(line: 1791, column: 22, scope: !6043)
!6045 = !DILocation(line: 1792, column: 14, scope: !6043)
!6046 = !DILocation(line: 1792, column: 39, scope: !6043)
!6047 = !DILocation(line: 1791, column: 7, scope: !6043)
!6048 = !DILocation(line: 1793, column: 7, scope: !6043)
!6049 = !DILocation(line: 1795, column: 7, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6018, file: !292, line: 1795, column: 7)
!6051 = !DILocation(line: 1795, column: 11, scope: !6050)
!6052 = !DILocation(line: 1795, column: 15, scope: !6050)
!6053 = !DILocation(line: 1795, column: 18, scope: !6050)
!6054 = !DILocation(line: 1795, column: 7, scope: !6018)
!6055 = !DILocation(line: 1796, column: 13, scope: !6050)
!6056 = !DILocation(line: 1796, column: 32, scope: !6050)
!6057 = !DILocation(line: 1796, column: 5, scope: !6050)
!6058 = !DILocation(line: 1797, column: 3, scope: !6018)
!6059 = !DILocation(line: 1798, column: 1, scope: !6018)
!6060 = distinct !DISubprogram(name: "abandon_move", scope: !292, file: !292, line: 1742, type: !6061, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!142, !3742, !116, !391}
!6063 = !DILocalVariable(name: "x", arg: 1, scope: !6060, file: !292, line: 1742, type: !3742)
!6064 = !DILocation(line: 1742, column: 40, scope: !6060)
!6065 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6060, file: !292, line: 1743, type: !116)
!6066 = !DILocation(line: 1743, column: 27, scope: !6060)
!6067 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6060, file: !292, line: 1744, type: !391)
!6068 = !DILocation(line: 1744, column: 34, scope: !6060)
!6069 = !DILocation(line: 1746, column: 3, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !292, line: 1746, column: 3)
!6071 = distinct !DILexicalBlock(scope: !6060, file: !292, line: 1746, column: 3)
!6072 = !DILocation(line: 1746, column: 3, scope: !6071)
!6073 = !DILocation(line: 1747, column: 11, scope: !6060)
!6074 = !DILocation(line: 1747, column: 14, scope: !6060)
!6075 = !DILocation(line: 1747, column: 26, scope: !6060)
!6076 = !DILocation(line: 1748, column: 11, scope: !6060)
!6077 = !DILocation(line: 1748, column: 16, scope: !6060)
!6078 = !DILocation(line: 1748, column: 19, scope: !6060)
!6079 = !DILocation(line: 1748, column: 31, scope: !6060)
!6080 = !DILocation(line: 1749, column: 16, scope: !6060)
!6081 = !DILocation(line: 1749, column: 20, scope: !6060)
!6082 = !DILocation(line: 1749, column: 23, scope: !6060)
!6083 = !DILocation(line: 1749, column: 35, scope: !6060)
!6084 = !DILocation(line: 1750, column: 20, scope: !6060)
!6085 = !DILocation(line: 1750, column: 23, scope: !6060)
!6086 = !DILocation(line: 1750, column: 26, scope: !6060)
!6087 = !DILocation(line: 1751, column: 20, scope: !6060)
!6088 = !DILocation(line: 1751, column: 47, scope: !6060)
!6089 = !DILocation(line: 1751, column: 57, scope: !6060)
!6090 = !DILocation(line: 1751, column: 65, scope: !6060)
!6091 = !DILocation(line: 1751, column: 25, scope: !6060)
!6092 = !DILocation(line: 1752, column: 15, scope: !6060)
!6093 = !DILocation(line: 1752, column: 34, scope: !6060)
!6094 = !DILocation(line: 1752, column: 37, scope: !6060)
!6095 = !DILocation(line: 1752, column: 47, scope: !6060)
!6096 = !DILocation(line: 1752, column: 20, scope: !6060)
!6097 = !DILocation(line: 1752, column: 18, scope: !6060)
!6098 = !DILocation(line: 0, scope: !6060)
!6099 = !DILocation(line: 1747, column: 3, scope: !6060)
!6100 = distinct !DISubprogram(name: "overwrite_ok", scope: !292, file: !292, line: 1674, type: !6061, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6101 = !DILocalVariable(name: "x", arg: 1, scope: !6100, file: !292, line: 1674, type: !3742)
!6102 = !DILocation(line: 1674, column: 40, scope: !6100)
!6103 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6100, file: !292, line: 1674, type: !116)
!6104 = !DILocation(line: 1674, column: 55, scope: !6100)
!6105 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6100, file: !292, line: 1675, type: !391)
!6106 = !DILocation(line: 1675, column: 34, scope: !6100)
!6107 = !DILocation(line: 1677, column: 31, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6100, file: !292, line: 1677, column: 7)
!6109 = !DILocation(line: 1677, column: 41, scope: !6108)
!6110 = !DILocation(line: 1677, column: 49, scope: !6108)
!6111 = !DILocation(line: 1677, column: 9, scope: !6108)
!6112 = !DILocation(line: 1677, column: 7, scope: !6100)
!6113 = !DILocalVariable(name: "perms", scope: !6114, file: !292, line: 1679, type: !173)
!6114 = distinct !DILexicalBlock(scope: !6108, file: !292, line: 1678, column: 5)
!6115 = !DILocation(line: 1679, column: 12, scope: !6114)
!6116 = !DILocation(line: 1680, column: 16, scope: !6114)
!6117 = !DILocation(line: 1680, column: 24, scope: !6114)
!6118 = !DILocation(line: 1680, column: 33, scope: !6114)
!6119 = !DILocation(line: 1680, column: 7, scope: !6114)
!6120 = !DILocation(line: 1681, column: 7, scope: !6114)
!6121 = !DILocation(line: 1681, column: 17, scope: !6114)
!6122 = !DILocation(line: 1682, column: 16, scope: !6114)
!6123 = !DILocation(line: 1683, column: 17, scope: !6114)
!6124 = !DILocation(line: 1683, column: 20, scope: !6114)
!6125 = !DILocation(line: 1683, column: 30, scope: !6114)
!6126 = !DILocation(line: 1683, column: 33, scope: !6114)
!6127 = !DILocation(line: 1683, column: 36, scope: !6114)
!6128 = !DILocation(line: 1684, column: 17, scope: !6114)
!6129 = !DILocation(line: 1684, column: 20, scope: !6114)
!6130 = !DILocation(line: 1684, column: 23, scope: !6114)
!6131 = !DILocation(line: 1683, column: 16, scope: !6114)
!6132 = !DILocation(line: 1685, column: 18, scope: !6114)
!6133 = !DILocation(line: 1686, column: 18, scope: !6114)
!6134 = !DILocation(line: 1687, column: 16, scope: !6114)
!6135 = !DILocation(line: 1687, column: 30, scope: !6114)
!6136 = !DILocation(line: 1688, column: 37, scope: !6114)
!6137 = !DILocation(line: 1688, column: 45, scope: !6114)
!6138 = !DILocation(line: 1688, column: 53, scope: !6114)
!6139 = !DILocation(line: 1688, column: 16, scope: !6114)
!6140 = !DILocation(line: 1689, column: 17, scope: !6114)
!6141 = !DILocation(line: 1682, column: 7, scope: !6114)
!6142 = !DILocation(line: 1690, column: 5, scope: !6114)
!6143 = !DILocation(line: 1693, column: 16, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6108, file: !292, line: 1692, column: 5)
!6145 = !DILocation(line: 1693, column: 24, scope: !6144)
!6146 = !DILocation(line: 1694, column: 16, scope: !6144)
!6147 = !DILocation(line: 1694, column: 30, scope: !6144)
!6148 = !DILocation(line: 1693, column: 7, scope: !6144)
!6149 = !DILocation(line: 1697, column: 10, scope: !6100)
!6150 = !DILocation(line: 1697, column: 3, scope: !6100)
!6151 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !212, file: !212, line: 265, type: !2613, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6152 = !DILocalVariable(name: "file_name", arg: 1, scope: !6151, file: !212, line: 265, type: !116)
!6153 = !DILocation(line: 265, column: 28, scope: !6151)
!6154 = !DILocation(line: 267, column: 7, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6151, file: !212, line: 267, column: 7)
!6156 = !DILocation(line: 267, column: 20, scope: !6155)
!6157 = !DILocation(line: 267, column: 7, scope: !6151)
!6158 = !DILocalVariable(name: "sep", scope: !6159, file: !212, line: 269, type: !10)
!6159 = distinct !DILexicalBlock(scope: !6155, file: !212, line: 268, column: 5)
!6160 = !DILocation(line: 269, column: 12, scope: !6159)
!6161 = !DILocation(line: 269, column: 18, scope: !6159)
!6162 = !DILocation(line: 269, column: 29, scope: !6159)
!6163 = !DILocation(line: 269, column: 42, scope: !6159)
!6164 = !DILocation(line: 269, column: 50, scope: !6159)
!6165 = !DILocation(line: 270, column: 17, scope: !6159)
!6166 = !DILocation(line: 270, column: 21, scope: !6159)
!6167 = !DILocation(line: 270, column: 24, scope: !6159)
!6168 = !DILocation(line: 270, column: 7, scope: !6159)
!6169 = !DILocation(line: 273, column: 5, scope: !6155)
!6170 = !DILocation(line: 274, column: 1, scope: !6151)
!6171 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !292, file: !292, line: 1814, type: !6172, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{!142, !116, !391, !116}
!6174 = !DILocalVariable(name: "srcbase", arg: 1, scope: !6171, file: !292, line: 1814, type: !116)
!6175 = !DILocation(line: 1814, column: 35, scope: !6171)
!6176 = !DILocalVariable(name: "src_st", arg: 2, scope: !6171, file: !292, line: 1814, type: !391)
!6177 = !DILocation(line: 1814, column: 63, scope: !6171)
!6178 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6171, file: !292, line: 1815, type: !116)
!6179 = !DILocation(line: 1815, column: 35, scope: !6171)
!6180 = !DILocalVariable(name: "srcbaselen", scope: !6171, file: !292, line: 1817, type: !55)
!6181 = !DILocation(line: 1817, column: 10, scope: !6171)
!6182 = !DILocation(line: 1817, column: 31, scope: !6171)
!6183 = !DILocation(line: 1817, column: 23, scope: !6171)
!6184 = !DILocalVariable(name: "dstbase", scope: !6171, file: !292, line: 1818, type: !116)
!6185 = !DILocation(line: 1818, column: 15, scope: !6171)
!6186 = !DILocation(line: 1818, column: 41, scope: !6171)
!6187 = !DILocation(line: 1818, column: 25, scope: !6171)
!6188 = !DILocalVariable(name: "dstbaselen", scope: !6171, file: !292, line: 1819, type: !55)
!6189 = !DILocation(line: 1819, column: 10, scope: !6171)
!6190 = !DILocation(line: 1819, column: 31, scope: !6171)
!6191 = !DILocation(line: 1819, column: 23, scope: !6171)
!6192 = !DILocalVariable(name: "suffixlen", scope: !6171, file: !292, line: 1820, type: !55)
!6193 = !DILocation(line: 1820, column: 10, scope: !6171)
!6194 = !DILocation(line: 1820, column: 30, scope: !6171)
!6195 = !DILocation(line: 1820, column: 22, scope: !6171)
!6196 = !DILocation(line: 1821, column: 10, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6171, file: !292, line: 1821, column: 7)
!6198 = !DILocation(line: 1821, column: 24, scope: !6197)
!6199 = !DILocation(line: 1821, column: 37, scope: !6197)
!6200 = !DILocation(line: 1821, column: 35, scope: !6197)
!6201 = !DILocation(line: 1821, column: 21, scope: !6197)
!6202 = !DILocation(line: 1822, column: 10, scope: !6197)
!6203 = !DILocation(line: 1822, column: 21, scope: !6197)
!6204 = !DILocation(line: 1822, column: 30, scope: !6197)
!6205 = !DILocation(line: 1822, column: 39, scope: !6197)
!6206 = !DILocation(line: 1822, column: 13, scope: !6197)
!6207 = !DILocation(line: 1822, column: 51, scope: !6197)
!6208 = !DILocation(line: 1823, column: 10, scope: !6197)
!6209 = !DILocation(line: 1823, column: 13, scope: !6197)
!6210 = !DILocation(line: 1821, column: 7, scope: !6171)
!6211 = !DILocation(line: 1824, column: 5, scope: !6197)
!6212 = !DILocalVariable(name: "dstlen", scope: !6171, file: !292, line: 1825, type: !55)
!6213 = !DILocation(line: 1825, column: 10, scope: !6171)
!6214 = !DILocation(line: 1825, column: 27, scope: !6171)
!6215 = !DILocation(line: 1825, column: 19, scope: !6171)
!6216 = !DILocalVariable(name: "dst_back", scope: !6171, file: !292, line: 1826, type: !9)
!6217 = !DILocation(line: 1826, column: 9, scope: !6171)
!6218 = !DILocation(line: 1826, column: 29, scope: !6171)
!6219 = !DILocation(line: 1826, column: 38, scope: !6171)
!6220 = !DILocation(line: 1826, column: 36, scope: !6171)
!6221 = !DILocation(line: 1826, column: 48, scope: !6171)
!6222 = !DILocation(line: 1826, column: 20, scope: !6171)
!6223 = !DILocation(line: 1827, column: 20, scope: !6171)
!6224 = !DILocation(line: 1827, column: 30, scope: !6171)
!6225 = !DILocation(line: 1827, column: 40, scope: !6171)
!6226 = !DILocation(line: 1827, column: 11, scope: !6171)
!6227 = !DILocation(line: 1827, column: 49, scope: !6171)
!6228 = !DILocation(line: 1827, column: 3, scope: !6171)
!6229 = !DILocalVariable(name: "dst_back_sb", scope: !6171, file: !292, line: 1828, type: !338)
!6230 = !DILocation(line: 1828, column: 15, scope: !6171)
!6231 = !DILocalVariable(name: "dst_back_status", scope: !6171, file: !292, line: 1829, type: !7)
!6232 = !DILocation(line: 1829, column: 7, scope: !6171)
!6233 = !DILocation(line: 1829, column: 31, scope: !6171)
!6234 = !DILocation(line: 1829, column: 25, scope: !6171)
!6235 = !DILocation(line: 1830, column: 9, scope: !6171)
!6236 = !DILocation(line: 1830, column: 3, scope: !6171)
!6237 = !DILocation(line: 1831, column: 10, scope: !6171)
!6238 = !DILocation(line: 1831, column: 26, scope: !6171)
!6239 = !DILocation(line: 1831, column: 31, scope: !6171)
!6240 = !DILocation(line: 1831, column: 34, scope: !6171)
!6241 = !DILocation(line: 0, scope: !6171)
!6242 = !DILocation(line: 1831, column: 3, scope: !6171)
!6243 = !DILocation(line: 1832, column: 1, scope: !6171)
!6244 = distinct !DISubprogram(name: "emit_verbose", scope: !292, file: !292, line: 1759, type: !6245, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6245 = !DISubroutineType(types: !6246)
!6246 = !{null, !116, !116, !116}
!6247 = !DILocalVariable(name: "src", arg: 1, scope: !6244, file: !292, line: 1759, type: !116)
!6248 = !DILocation(line: 1759, column: 27, scope: !6244)
!6249 = !DILocalVariable(name: "dst", arg: 2, scope: !6244, file: !292, line: 1759, type: !116)
!6250 = !DILocation(line: 1759, column: 44, scope: !6244)
!6251 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !6244, file: !292, line: 1759, type: !116)
!6252 = !DILocation(line: 1759, column: 61, scope: !6244)
!6253 = !DILocation(line: 1761, column: 23, scope: !6244)
!6254 = !DILocation(line: 1761, column: 43, scope: !6244)
!6255 = !DILocation(line: 1761, column: 3, scope: !6244)
!6256 = !DILocation(line: 1762, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6244, file: !292, line: 1762, column: 7)
!6258 = !DILocation(line: 1762, column: 7, scope: !6244)
!6259 = !DILocation(line: 1763, column: 13, scope: !6257)
!6260 = !DILocation(line: 1763, column: 33, scope: !6257)
!6261 = !DILocation(line: 1763, column: 5, scope: !6257)
!6262 = !DILocation(line: 1764, column: 3, scope: !6244)
!6263 = !DILocation(line: 1765, column: 1, scope: !6244)
!6264 = distinct !DISubprogram(name: "is_ancestor", scope: !292, file: !292, line: 584, type: !6265, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{!142, !391, !6267}
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !376)
!6269 = !DILocalVariable(name: "sb", arg: 1, scope: !6264, file: !292, line: 584, type: !391)
!6270 = !DILocation(line: 584, column: 33, scope: !6264)
!6271 = !DILocalVariable(name: "ancestors", arg: 2, scope: !6264, file: !292, line: 584, type: !6267)
!6272 = !DILocation(line: 584, column: 60, scope: !6264)
!6273 = !DILocation(line: 586, column: 3, scope: !6264)
!6274 = !DILocation(line: 586, column: 10, scope: !6264)
!6275 = !DILocation(line: 586, column: 20, scope: !6264)
!6276 = !DILocation(line: 588, column: 11, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !292, line: 588, column: 11)
!6278 = distinct !DILexicalBlock(scope: !6264, file: !292, line: 587, column: 5)
!6279 = !DILocation(line: 588, column: 22, scope: !6277)
!6280 = !DILocation(line: 588, column: 29, scope: !6277)
!6281 = !DILocation(line: 588, column: 33, scope: !6277)
!6282 = !DILocation(line: 588, column: 26, scope: !6277)
!6283 = !DILocation(line: 588, column: 40, scope: !6277)
!6284 = !DILocation(line: 588, column: 43, scope: !6277)
!6285 = !DILocation(line: 588, column: 54, scope: !6277)
!6286 = !DILocation(line: 588, column: 61, scope: !6277)
!6287 = !DILocation(line: 588, column: 65, scope: !6277)
!6288 = !DILocation(line: 588, column: 58, scope: !6277)
!6289 = !DILocation(line: 588, column: 11, scope: !6278)
!6290 = !DILocation(line: 589, column: 9, scope: !6277)
!6291 = !DILocation(line: 590, column: 19, scope: !6278)
!6292 = !DILocation(line: 590, column: 30, scope: !6278)
!6293 = !DILocation(line: 590, column: 17, scope: !6278)
!6294 = distinct !{!6294, !6273, !6295}
!6295 = !DILocation(line: 591, column: 5, scope: !6264)
!6296 = !DILocation(line: 592, column: 3, scope: !6264)
!6297 = !DILocation(line: 593, column: 1, scope: !6264)
!6298 = distinct !DISubprogram(name: "copy_dir", scope: !292, file: !292, line: 709, type: !6299, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6299 = !DISubroutineType(types: !6300)
!6300 = !{!142, !116, !116, !142, !391, !375, !3742, !4011, !4011}
!6301 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !6298, file: !292, line: 709, type: !116)
!6302 = !DILocation(line: 709, column: 23, scope: !6298)
!6303 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !6298, file: !292, line: 709, type: !116)
!6304 = !DILocation(line: 709, column: 48, scope: !6298)
!6305 = !DILocalVariable(name: "new_dst", arg: 3, scope: !6298, file: !292, line: 709, type: !142)
!6306 = !DILocation(line: 709, column: 66, scope: !6298)
!6307 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6298, file: !292, line: 710, type: !391)
!6308 = !DILocation(line: 710, column: 30, scope: !6298)
!6309 = !DILocalVariable(name: "ancestors", arg: 5, scope: !6298, file: !292, line: 710, type: !375)
!6310 = !DILocation(line: 710, column: 55, scope: !6298)
!6311 = !DILocalVariable(name: "x", arg: 6, scope: !6298, file: !292, line: 711, type: !3742)
!6312 = !DILocation(line: 711, column: 36, scope: !6298)
!6313 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !6298, file: !292, line: 712, type: !4011)
!6314 = !DILocation(line: 712, column: 17, scope: !6298)
!6315 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !6298, file: !292, line: 713, type: !4011)
!6316 = !DILocation(line: 713, column: 17, scope: !6298)
!6317 = !DILocalVariable(name: "name_space", scope: !6298, file: !292, line: 715, type: !9)
!6318 = !DILocation(line: 715, column: 9, scope: !6298)
!6319 = !DILocalVariable(name: "namep", scope: !6298, file: !292, line: 716, type: !9)
!6320 = !DILocation(line: 716, column: 9, scope: !6298)
!6321 = !DILocalVariable(name: "non_command_line_options", scope: !6298, file: !292, line: 717, type: !3744)
!6322 = !DILocation(line: 717, column: 21, scope: !6298)
!6323 = !DILocation(line: 717, column: 49, scope: !6298)
!6324 = !DILocation(line: 717, column: 48, scope: !6298)
!6325 = !DILocalVariable(name: "ok", scope: !6298, file: !292, line: 718, type: !142)
!6326 = !DILocation(line: 718, column: 8, scope: !6298)
!6327 = !DILocation(line: 720, column: 25, scope: !6298)
!6328 = !DILocation(line: 720, column: 16, scope: !6298)
!6329 = !DILocation(line: 720, column: 14, scope: !6298)
!6330 = !DILocation(line: 721, column: 7, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6298, file: !292, line: 721, column: 7)
!6332 = !DILocation(line: 721, column: 18, scope: !6331)
!6333 = !DILocation(line: 721, column: 7, scope: !6298)
!6334 = !DILocation(line: 725, column: 17, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6331, file: !292, line: 722, column: 5)
!6336 = !DILocation(line: 725, column: 24, scope: !6335)
!6337 = !DILocation(line: 725, column: 47, scope: !6335)
!6338 = !DILocation(line: 725, column: 7, scope: !6335)
!6339 = !DILocation(line: 726, column: 7, scope: !6335)
!6340 = !DILocation(line: 731, column: 7, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6298, file: !292, line: 731, column: 7)
!6342 = !DILocation(line: 731, column: 10, scope: !6341)
!6343 = !DILocation(line: 731, column: 22, scope: !6341)
!6344 = !DILocation(line: 731, column: 7, scope: !6298)
!6345 = !DILocation(line: 732, column: 30, scope: !6341)
!6346 = !DILocation(line: 732, column: 42, scope: !6341)
!6347 = !DILocation(line: 732, column: 5, scope: !6341)
!6348 = !DILocalVariable(name: "new_first_dir_created", scope: !6298, file: !292, line: 734, type: !142)
!6349 = !DILocation(line: 734, column: 8, scope: !6298)
!6350 = !DILocation(line: 735, column: 11, scope: !6298)
!6351 = !DILocation(line: 735, column: 9, scope: !6298)
!6352 = !DILocation(line: 736, column: 3, scope: !6298)
!6353 = !DILocation(line: 736, column: 11, scope: !6298)
!6354 = !DILocation(line: 736, column: 10, scope: !6298)
!6355 = !DILocation(line: 736, column: 17, scope: !6298)
!6356 = !DILocalVariable(name: "local_copy_into_self", scope: !6357, file: !292, line: 738, type: !142)
!6357 = distinct !DILexicalBlock(scope: !6298, file: !292, line: 737, column: 5)
!6358 = !DILocation(line: 738, column: 12, scope: !6357)
!6359 = !DILocalVariable(name: "src_name", scope: !6357, file: !292, line: 739, type: !9)
!6360 = !DILocation(line: 739, column: 13, scope: !6357)
!6361 = !DILocation(line: 739, column: 42, scope: !6357)
!6362 = !DILocation(line: 739, column: 55, scope: !6357)
!6363 = !DILocation(line: 739, column: 24, scope: !6357)
!6364 = !DILocalVariable(name: "dst_name", scope: !6357, file: !292, line: 740, type: !9)
!6365 = !DILocation(line: 740, column: 13, scope: !6357)
!6366 = !DILocation(line: 740, column: 42, scope: !6357)
!6367 = !DILocation(line: 740, column: 55, scope: !6357)
!6368 = !DILocation(line: 740, column: 24, scope: !6357)
!6369 = !DILocalVariable(name: "first_dir_created", scope: !6357, file: !292, line: 741, type: !142)
!6370 = !DILocation(line: 741, column: 12, scope: !6357)
!6371 = !DILocation(line: 741, column: 33, scope: !6357)
!6372 = !DILocation(line: 741, column: 32, scope: !6357)
!6373 = !DILocation(line: 743, column: 28, scope: !6357)
!6374 = !DILocation(line: 743, column: 38, scope: !6357)
!6375 = !DILocation(line: 743, column: 48, scope: !6357)
!6376 = !DILocation(line: 743, column: 57, scope: !6357)
!6377 = !DILocation(line: 744, column: 28, scope: !6357)
!6378 = !DILocation(line: 743, column: 13, scope: !6357)
!6379 = !DILocation(line: 743, column: 10, scope: !6357)
!6380 = !DILocation(line: 747, column: 26, scope: !6357)
!6381 = !DILocation(line: 747, column: 8, scope: !6357)
!6382 = !DILocation(line: 747, column: 23, scope: !6357)
!6383 = !DILocation(line: 749, column: 13, scope: !6357)
!6384 = !DILocation(line: 749, column: 7, scope: !6357)
!6385 = !DILocation(line: 750, column: 13, scope: !6357)
!6386 = !DILocation(line: 750, column: 7, scope: !6357)
!6387 = !DILocation(line: 755, column: 11, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6357, file: !292, line: 755, column: 11)
!6389 = !DILocation(line: 755, column: 11, scope: !6357)
!6390 = !DILocation(line: 756, column: 9, scope: !6388)
!6391 = !DILocation(line: 758, column: 32, scope: !6357)
!6392 = !DILocation(line: 758, column: 29, scope: !6357)
!6393 = !DILocation(line: 759, column: 24, scope: !6357)
!6394 = !DILocation(line: 759, column: 16, scope: !6357)
!6395 = !DILocation(line: 759, column: 31, scope: !6357)
!6396 = !DILocation(line: 759, column: 13, scope: !6357)
!6397 = distinct !{!6397, !6352, !6398}
!6398 = !DILocation(line: 760, column: 5, scope: !6298)
!6399 = !DILocation(line: 761, column: 9, scope: !6298)
!6400 = !DILocation(line: 761, column: 3, scope: !6298)
!6401 = !DILocation(line: 762, column: 45, scope: !6298)
!6402 = !DILocation(line: 762, column: 4, scope: !6298)
!6403 = !DILocation(line: 762, column: 43, scope: !6298)
!6404 = !DILocation(line: 764, column: 10, scope: !6298)
!6405 = !DILocation(line: 764, column: 3, scope: !6298)
!6406 = !DILocation(line: 765, column: 1, scope: !6298)
!6407 = distinct !DISubprogram(name: "copy_reg", scope: !292, file: !292, line: 1016, type: !6408, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!142, !116, !116, !3742, !239, !239, !4011, !391}
!6410 = !DILocalVariable(name: "src_name", arg: 1, scope: !6407, file: !292, line: 1016, type: !116)
!6411 = !DILocation(line: 1016, column: 23, scope: !6407)
!6412 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6407, file: !292, line: 1016, type: !116)
!6413 = !DILocation(line: 1016, column: 45, scope: !6407)
!6414 = !DILocalVariable(name: "x", arg: 3, scope: !6407, file: !292, line: 1017, type: !3742)
!6415 = !DILocation(line: 1017, column: 36, scope: !6407)
!6416 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !6407, file: !292, line: 1018, type: !239)
!6417 = !DILocation(line: 1018, column: 18, scope: !6407)
!6418 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !6407, file: !292, line: 1018, type: !239)
!6419 = !DILocation(line: 1018, column: 35, scope: !6407)
!6420 = !DILocalVariable(name: "new_dst", arg: 6, scope: !6407, file: !292, line: 1018, type: !4011)
!6421 = !DILocation(line: 1018, column: 62, scope: !6407)
!6422 = !DILocalVariable(name: "src_sb", arg: 7, scope: !6407, file: !292, line: 1019, type: !391)
!6423 = !DILocation(line: 1019, column: 30, scope: !6407)
!6424 = !DILocalVariable(name: "buf", scope: !6407, file: !292, line: 1021, type: !9)
!6425 = !DILocation(line: 1021, column: 9, scope: !6407)
!6426 = !DILocalVariable(name: "buf_alloc", scope: !6407, file: !292, line: 1022, type: !9)
!6427 = !DILocation(line: 1022, column: 9, scope: !6407)
!6428 = !DILocalVariable(name: "name_alloc", scope: !6407, file: !292, line: 1023, type: !9)
!6429 = !DILocation(line: 1023, column: 9, scope: !6407)
!6430 = !DILocalVariable(name: "dest_desc", scope: !6407, file: !292, line: 1024, type: !7)
!6431 = !DILocation(line: 1024, column: 7, scope: !6407)
!6432 = !DILocalVariable(name: "dest_errno", scope: !6407, file: !292, line: 1025, type: !7)
!6433 = !DILocation(line: 1025, column: 7, scope: !6407)
!6434 = !DILocalVariable(name: "source_desc", scope: !6407, file: !292, line: 1026, type: !7)
!6435 = !DILocation(line: 1026, column: 7, scope: !6407)
!6436 = !DILocalVariable(name: "src_mode", scope: !6407, file: !292, line: 1027, type: !239)
!6437 = !DILocation(line: 1027, column: 10, scope: !6407)
!6438 = !DILocation(line: 1027, column: 21, scope: !6407)
!6439 = !DILocation(line: 1027, column: 29, scope: !6407)
!6440 = !DILocalVariable(name: "sb", scope: !6407, file: !292, line: 1028, type: !338)
!6441 = !DILocation(line: 1028, column: 15, scope: !6407)
!6442 = !DILocalVariable(name: "src_open_sb", scope: !6407, file: !292, line: 1029, type: !338)
!6443 = !DILocation(line: 1029, column: 15, scope: !6407)
!6444 = !DILocalVariable(name: "return_val", scope: !6407, file: !292, line: 1030, type: !142)
!6445 = !DILocation(line: 1030, column: 8, scope: !6407)
!6446 = !DILocalVariable(name: "data_copy_required", scope: !6407, file: !292, line: 1031, type: !142)
!6447 = !DILocation(line: 1031, column: 8, scope: !6407)
!6448 = !DILocation(line: 1031, column: 29, scope: !6407)
!6449 = !DILocation(line: 1031, column: 32, scope: !6407)
!6450 = !DILocation(line: 1033, column: 23, scope: !6407)
!6451 = !DILocation(line: 1035, column: 27, scope: !6407)
!6452 = !DILocation(line: 1035, column: 30, scope: !6407)
!6453 = !DILocation(line: 1035, column: 42, scope: !6407)
!6454 = !DILocation(line: 1035, column: 24, scope: !6407)
!6455 = !DILocation(line: 1033, column: 17, scope: !6407)
!6456 = !DILocation(line: 1033, column: 15, scope: !6407)
!6457 = !DILocation(line: 1036, column: 7, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1036, column: 7)
!6459 = !DILocation(line: 1036, column: 19, scope: !6458)
!6460 = !DILocation(line: 1036, column: 7, scope: !6407)
!6461 = !DILocation(line: 1038, column: 17, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !292, line: 1037, column: 5)
!6463 = !DILocation(line: 1038, column: 24, scope: !6462)
!6464 = !DILocation(line: 1038, column: 57, scope: !6462)
!6465 = !DILocation(line: 1038, column: 7, scope: !6462)
!6466 = !DILocation(line: 1039, column: 7, scope: !6462)
!6467 = !DILocation(line: 1042, column: 14, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1042, column: 7)
!6469 = !DILocation(line: 1042, column: 7, scope: !6468)
!6470 = !DILocation(line: 1042, column: 41, scope: !6468)
!6471 = !DILocation(line: 1042, column: 7, scope: !6407)
!6472 = !DILocation(line: 1044, column: 17, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6468, file: !292, line: 1043, column: 5)
!6474 = !DILocation(line: 1044, column: 24, scope: !6473)
!6475 = !DILocation(line: 1044, column: 46, scope: !6473)
!6476 = !DILocation(line: 1044, column: 7, scope: !6473)
!6477 = !DILocation(line: 1045, column: 18, scope: !6473)
!6478 = !DILocation(line: 1046, column: 7, scope: !6473)
!6479 = !DILocation(line: 1051, column: 9, scope: !6480)
!6480 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1051, column: 7)
!6481 = !DILocation(line: 1051, column: 7, scope: !6407)
!6482 = !DILocation(line: 1054, column: 14, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6480, file: !292, line: 1052, column: 5)
!6484 = !DILocation(line: 1055, column: 14, scope: !6483)
!6485 = !DILocation(line: 1053, column: 7, scope: !6483)
!6486 = !DILocation(line: 1056, column: 18, scope: !6483)
!6487 = !DILocation(line: 1057, column: 7, scope: !6483)
!6488 = !DILocation(line: 1062, column: 10, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1062, column: 7)
!6490 = !DILocation(line: 1062, column: 9, scope: !6489)
!6491 = !DILocation(line: 1062, column: 7, scope: !6407)
!6492 = !DILocalVariable(name: "open_flags", scope: !6493, file: !292, line: 1064, type: !7)
!6493 = distinct !DILexicalBlock(scope: !6489, file: !292, line: 1063, column: 5)
!6494 = !DILocation(line: 1064, column: 11, scope: !6493)
!6495 = !DILocation(line: 1065, column: 32, scope: !6493)
!6496 = !DILocation(line: 1065, column: 35, scope: !6493)
!6497 = !DILocation(line: 1065, column: 29, scope: !6493)
!6498 = !DILocation(line: 1066, column: 25, scope: !6493)
!6499 = !DILocation(line: 1066, column: 35, scope: !6493)
!6500 = !DILocation(line: 1066, column: 19, scope: !6493)
!6501 = !DILocation(line: 1066, column: 17, scope: !6493)
!6502 = !DILocation(line: 1067, column: 20, scope: !6493)
!6503 = !DILocation(line: 1067, column: 18, scope: !6493)
!6504 = !DILocation(line: 1076, column: 12, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6493, file: !292, line: 1076, column: 11)
!6506 = !DILocation(line: 1076, column: 15, scope: !6505)
!6507 = !DILocation(line: 1076, column: 36, scope: !6505)
!6508 = !DILocation(line: 1076, column: 39, scope: !6505)
!6509 = !DILocation(line: 1076, column: 42, scope: !6505)
!6510 = !DILocation(line: 1077, column: 11, scope: !6505)
!6511 = !DILocation(line: 1077, column: 19, scope: !6505)
!6512 = !DILocation(line: 1077, column: 16, scope: !6505)
!6513 = !DILocation(line: 1076, column: 11, scope: !6493)
!6514 = !DILocation(line: 1079, column: 40, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !292, line: 1079, column: 15)
!6516 = distinct !DILexicalBlock(scope: !6505, file: !292, line: 1078, column: 9)
!6517 = !DILocation(line: 1079, column: 50, scope: !6515)
!6518 = !DILocation(line: 1079, column: 53, scope: !6515)
!6519 = !DILocation(line: 1080, column: 47, scope: !6515)
!6520 = !DILocation(line: 1079, column: 17, scope: !6515)
!6521 = !DILocation(line: 1079, column: 15, scope: !6516)
!6522 = !DILocation(line: 1082, column: 19, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6524, file: !292, line: 1082, column: 19)
!6524 = distinct !DILexicalBlock(scope: !6515, file: !292, line: 1081, column: 13)
!6525 = !DILocation(line: 1082, column: 22, scope: !6523)
!6526 = !DILocation(line: 1082, column: 19, scope: !6524)
!6527 = !DILocation(line: 1084, column: 30, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6523, file: !292, line: 1083, column: 17)
!6529 = !DILocation(line: 1085, column: 19, scope: !6528)
!6530 = !DILocation(line: 1087, column: 13, scope: !6524)
!6531 = !DILocation(line: 1088, column: 9, scope: !6516)
!6532 = !DILocation(line: 1090, column: 11, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6493, file: !292, line: 1090, column: 11)
!6534 = !DILocation(line: 1090, column: 21, scope: !6533)
!6535 = !DILocation(line: 1090, column: 25, scope: !6533)
!6536 = !DILocation(line: 1090, column: 28, scope: !6533)
!6537 = !DILocation(line: 1090, column: 31, scope: !6533)
!6538 = !DILocation(line: 1090, column: 11, scope: !6493)
!6539 = !DILocation(line: 1092, column: 23, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !292, line: 1092, column: 15)
!6541 = distinct !DILexicalBlock(scope: !6533, file: !292, line: 1091, column: 9)
!6542 = !DILocation(line: 1092, column: 15, scope: !6540)
!6543 = !DILocation(line: 1092, column: 33, scope: !6540)
!6544 = !DILocation(line: 1092, column: 15, scope: !6541)
!6545 = !DILocation(line: 1094, column: 25, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6540, file: !292, line: 1093, column: 13)
!6547 = !DILocation(line: 1094, column: 32, scope: !6546)
!6548 = !DILocation(line: 1094, column: 55, scope: !6546)
!6549 = !DILocation(line: 1094, column: 15, scope: !6546)
!6550 = !DILocation(line: 1095, column: 26, scope: !6546)
!6551 = !DILocation(line: 1096, column: 15, scope: !6546)
!6552 = !DILocation(line: 1098, column: 15, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6541, file: !292, line: 1098, column: 15)
!6554 = !DILocation(line: 1098, column: 18, scope: !6553)
!6555 = !DILocation(line: 1098, column: 15, scope: !6541)
!6556 = !DILocation(line: 1099, column: 21, scope: !6553)
!6557 = !DILocation(line: 1099, column: 40, scope: !6553)
!6558 = !DILocation(line: 1099, column: 13, scope: !6553)
!6559 = !DILocation(line: 1102, column: 12, scope: !6541)
!6560 = !DILocation(line: 1102, column: 20, scope: !6541)
!6561 = !DILocation(line: 1106, column: 15, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6541, file: !292, line: 1106, column: 15)
!6563 = !DILocation(line: 1106, column: 18, scope: !6562)
!6564 = !DILocation(line: 1106, column: 15, scope: !6541)
!6565 = !DILocation(line: 1108, column: 47, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6567, file: !292, line: 1108, column: 19)
!6567 = distinct !DILexicalBlock(scope: !6562, file: !292, line: 1107, column: 13)
!6568 = !DILocation(line: 1108, column: 57, scope: !6566)
!6569 = !DILocation(line: 1108, column: 67, scope: !6566)
!6570 = !DILocation(line: 1109, column: 48, scope: !6566)
!6571 = !DILocation(line: 1109, column: 47, scope: !6566)
!6572 = !DILocation(line: 1109, column: 57, scope: !6566)
!6573 = !DILocation(line: 1108, column: 21, scope: !6566)
!6574 = !DILocation(line: 1108, column: 19, scope: !6567)
!6575 = !DILocation(line: 1111, column: 30, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6566, file: !292, line: 1110, column: 17)
!6577 = !DILocation(line: 1112, column: 19, scope: !6576)
!6578 = !DILocation(line: 1114, column: 13, scope: !6567)
!6579 = !DILocation(line: 1115, column: 9, scope: !6541)
!6580 = !DILocation(line: 1116, column: 5, scope: !6493)
!6581 = !DILocation(line: 1118, column: 8, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1118, column: 7)
!6583 = !DILocation(line: 1118, column: 7, scope: !6582)
!6584 = !DILocation(line: 1118, column: 7, scope: !6407)
!6585 = !DILocation(line: 1119, column: 5, scope: !6582)
!6586 = !DILabel(scope: !6587, name: "open_with_O_CREAT", file: !292, line: 1120)
!6587 = distinct !DILexicalBlock(scope: !6582, file: !292, line: 1119, column: 5)
!6588 = !DILocation(line: 1120, column: 5, scope: !6587)
!6589 = !DILocalVariable(name: "open_flags", scope: !6587, file: !292, line: 1122, type: !7)
!6590 = !DILocation(line: 1122, column: 11, scope: !6587)
!6591 = !DILocation(line: 1123, column: 25, scope: !6587)
!6592 = !DILocation(line: 1123, column: 35, scope: !6587)
!6593 = !DILocation(line: 1123, column: 46, scope: !6587)
!6594 = !DILocation(line: 1124, column: 25, scope: !6587)
!6595 = !DILocation(line: 1124, column: 37, scope: !6587)
!6596 = !DILocation(line: 1124, column: 36, scope: !6587)
!6597 = !DILocation(line: 1124, column: 34, scope: !6587)
!6598 = !DILocation(line: 1123, column: 19, scope: !6587)
!6599 = !DILocation(line: 1123, column: 17, scope: !6587)
!6600 = !DILocation(line: 1125, column: 20, scope: !6587)
!6601 = !DILocation(line: 1125, column: 18, scope: !6587)
!6602 = !DILocation(line: 1137, column: 11, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6587, file: !292, line: 1137, column: 11)
!6604 = !DILocation(line: 1137, column: 21, scope: !6603)
!6605 = !DILocation(line: 1137, column: 25, scope: !6603)
!6606 = !DILocation(line: 1137, column: 28, scope: !6603)
!6607 = !DILocation(line: 1137, column: 39, scope: !6603)
!6608 = !DILocation(line: 1137, column: 49, scope: !6603)
!6609 = !DILocation(line: 1137, column: 54, scope: !6603)
!6610 = !DILocation(line: 1137, column: 57, scope: !6603)
!6611 = !DILocation(line: 1137, column: 11, scope: !6587)
!6612 = !DILocalVariable(name: "dangling_link_sb", scope: !6613, file: !292, line: 1139, type: !338)
!6613 = distinct !DILexicalBlock(scope: !6603, file: !292, line: 1138, column: 9)
!6614 = !DILocation(line: 1139, column: 23, scope: !6613)
!6615 = !DILocation(line: 1140, column: 22, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6613, file: !292, line: 1140, column: 15)
!6617 = !DILocation(line: 1140, column: 15, scope: !6616)
!6618 = !DILocation(line: 1140, column: 51, scope: !6616)
!6619 = !DILocation(line: 1141, column: 15, scope: !6616)
!6620 = !DILocation(line: 1141, column: 18, scope: !6616)
!6621 = !DILocation(line: 1140, column: 15, scope: !6613)
!6622 = !DILocation(line: 1143, column: 19, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6624, file: !292, line: 1143, column: 19)
!6624 = distinct !DILexicalBlock(scope: !6616, file: !292, line: 1142, column: 13)
!6625 = !DILocation(line: 1143, column: 22, scope: !6623)
!6626 = !DILocation(line: 1143, column: 19, scope: !6624)
!6627 = !DILocation(line: 1145, column: 37, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6623, file: !292, line: 1144, column: 17)
!6629 = !DILocation(line: 1145, column: 47, scope: !6628)
!6630 = !DILocation(line: 1146, column: 37, scope: !6628)
!6631 = !DILocation(line: 1146, column: 49, scope: !6628)
!6632 = !DILocation(line: 1146, column: 48, scope: !6628)
!6633 = !DILocation(line: 1146, column: 46, scope: !6628)
!6634 = !DILocation(line: 1145, column: 31, scope: !6628)
!6635 = !DILocation(line: 1145, column: 29, scope: !6628)
!6636 = !DILocation(line: 1147, column: 32, scope: !6628)
!6637 = !DILocation(line: 1147, column: 30, scope: !6628)
!6638 = !DILocation(line: 1148, column: 17, scope: !6628)
!6639 = !DILocation(line: 1151, column: 32, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6623, file: !292, line: 1150, column: 17)
!6641 = !DILocation(line: 1152, column: 26, scope: !6640)
!6642 = !DILocation(line: 1151, column: 19, scope: !6640)
!6643 = !DILocation(line: 1153, column: 30, scope: !6640)
!6644 = !DILocation(line: 1154, column: 19, scope: !6640)
!6645 = !DILocation(line: 1156, column: 13, scope: !6624)
!6646 = !DILocation(line: 1157, column: 9, scope: !6613)
!6647 = !DILocation(line: 1161, column: 11, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6587, file: !292, line: 1161, column: 11)
!6649 = !DILocation(line: 1161, column: 21, scope: !6648)
!6650 = !DILocation(line: 1161, column: 25, scope: !6648)
!6651 = !DILocation(line: 1161, column: 28, scope: !6648)
!6652 = !DILocation(line: 1161, column: 39, scope: !6648)
!6653 = !DILocation(line: 1162, column: 11, scope: !6648)
!6654 = !DILocation(line: 1162, column: 15, scope: !6648)
!6655 = !DILocation(line: 1162, column: 14, scope: !6648)
!6656 = !DILocation(line: 1162, column: 24, scope: !6648)
!6657 = !DILocation(line: 1162, column: 27, scope: !6648)
!6658 = !DILocation(line: 1162, column: 44, scope: !6648)
!6659 = !DILocation(line: 1162, column: 36, scope: !6648)
!6660 = !DILocation(line: 1162, column: 54, scope: !6648)
!6661 = !DILocation(line: 1162, column: 59, scope: !6648)
!6662 = !DILocation(line: 1161, column: 11, scope: !6587)
!6663 = !DILocation(line: 1163, column: 20, scope: !6648)
!6664 = !DILocation(line: 1163, column: 9, scope: !6648)
!6665 = !DILocation(line: 1164, column: 5, scope: !6587)
!6666 = !DILocation(line: 1167, column: 27, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6582, file: !292, line: 1166, column: 5)
!6668 = !DILocation(line: 1170, column: 7, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1170, column: 7)
!6670 = !DILocation(line: 1170, column: 17, scope: !6669)
!6671 = !DILocation(line: 1170, column: 7, scope: !6407)
!6672 = !DILocation(line: 1182, column: 11, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !292, line: 1182, column: 11)
!6674 = distinct !DILexicalBlock(scope: !6669, file: !292, line: 1171, column: 5)
!6675 = !DILocation(line: 1182, column: 22, scope: !6673)
!6676 = !DILocation(line: 1182, column: 32, scope: !6673)
!6677 = !DILocation(line: 1182, column: 38, scope: !6673)
!6678 = !DILocation(line: 1182, column: 37, scope: !6673)
!6679 = !DILocation(line: 1182, column: 46, scope: !6673)
!6680 = !DILocation(line: 1182, column: 51, scope: !6673)
!6681 = !DILocation(line: 1182, column: 54, scope: !6673)
!6682 = !DILocation(line: 1182, column: 11, scope: !6674)
!6683 = !DILocation(line: 1184, column: 12, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6673, file: !292, line: 1183, column: 9)
!6685 = !DILocation(line: 1184, column: 20, scope: !6684)
!6686 = !DILocation(line: 1185, column: 11, scope: !6684)
!6687 = !DILocation(line: 1189, column: 17, scope: !6674)
!6688 = !DILocation(line: 1189, column: 29, scope: !6674)
!6689 = !DILocation(line: 1190, column: 14, scope: !6674)
!6690 = !DILocation(line: 1189, column: 7, scope: !6674)
!6691 = !DILocation(line: 1191, column: 18, scope: !6674)
!6692 = !DILocation(line: 1192, column: 7, scope: !6674)
!6693 = !DILocation(line: 1195, column: 14, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1195, column: 7)
!6695 = !DILocation(line: 1195, column: 7, scope: !6694)
!6696 = !DILocation(line: 1195, column: 30, scope: !6694)
!6697 = !DILocation(line: 1195, column: 7, scope: !6407)
!6698 = !DILocation(line: 1197, column: 17, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6694, file: !292, line: 1196, column: 5)
!6700 = !DILocation(line: 1197, column: 24, scope: !6699)
!6701 = !DILocation(line: 1197, column: 46, scope: !6699)
!6702 = !DILocation(line: 1197, column: 7, scope: !6699)
!6703 = !DILocation(line: 1198, column: 18, scope: !6699)
!6704 = !DILocation(line: 1199, column: 7, scope: !6699)
!6705 = !DILocation(line: 1203, column: 7, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1203, column: 7)
!6707 = !DILocation(line: 1203, column: 26, scope: !6706)
!6708 = !DILocation(line: 1203, column: 29, scope: !6706)
!6709 = !DILocation(line: 1203, column: 32, scope: !6706)
!6710 = !DILocation(line: 1203, column: 7, scope: !6407)
!6711 = !DILocalVariable(name: "clone_ok", scope: !6712, file: !292, line: 1205, type: !142)
!6712 = distinct !DILexicalBlock(scope: !6706, file: !292, line: 1204, column: 5)
!6713 = !DILocation(line: 1205, column: 12, scope: !6712)
!6714 = !DILocation(line: 1205, column: 35, scope: !6712)
!6715 = !DILocation(line: 1205, column: 46, scope: !6712)
!6716 = !DILocation(line: 1205, column: 23, scope: !6712)
!6717 = !DILocation(line: 1205, column: 59, scope: !6712)
!6718 = !DILocation(line: 1206, column: 11, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6712, file: !292, line: 1206, column: 11)
!6720 = !DILocation(line: 1206, column: 20, scope: !6719)
!6721 = !DILocation(line: 1206, column: 23, scope: !6719)
!6722 = !DILocation(line: 1206, column: 26, scope: !6719)
!6723 = !DILocation(line: 1206, column: 39, scope: !6719)
!6724 = !DILocation(line: 1206, column: 11, scope: !6712)
!6725 = !DILocation(line: 1208, column: 16, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !292, line: 1208, column: 15)
!6727 = distinct !DILexicalBlock(scope: !6719, file: !292, line: 1207, column: 9)
!6728 = !DILocation(line: 1208, column: 15, scope: !6727)
!6729 = !DILocation(line: 1210, column: 25, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6726, file: !292, line: 1209, column: 13)
!6731 = !DILocation(line: 1210, column: 32, scope: !6730)
!6732 = !DILocation(line: 1211, column: 22, scope: !6730)
!6733 = !DILocation(line: 1211, column: 47, scope: !6730)
!6734 = !DILocation(line: 1210, column: 15, scope: !6730)
!6735 = !DILocation(line: 1212, column: 26, scope: !6730)
!6736 = !DILocation(line: 1213, column: 15, scope: !6730)
!6737 = !DILocation(line: 1215, column: 30, scope: !6727)
!6738 = !DILocation(line: 1216, column: 9, scope: !6727)
!6739 = !DILocation(line: 1217, column: 5, scope: !6712)
!6740 = !DILocation(line: 1219, column: 7, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1219, column: 7)
!6742 = !DILocation(line: 1219, column: 7, scope: !6407)
!6743 = !DILocalVariable(name: "buf_alignment", scope: !6744, file: !292, line: 1222, type: !55)
!6744 = distinct !DILexicalBlock(scope: !6741, file: !292, line: 1220, column: 5)
!6745 = !DILocation(line: 1222, column: 14, scope: !6744)
!6746 = !DILocation(line: 1222, column: 30, scope: !6744)
!6747 = !DILocalVariable(name: "buf_size", scope: !6744, file: !292, line: 1223, type: !55)
!6748 = !DILocation(line: 1223, column: 14, scope: !6744)
!6749 = !DILocation(line: 1223, column: 25, scope: !6744)
!6750 = !DILocalVariable(name: "hole_size", scope: !6744, file: !292, line: 1224, type: !55)
!6751 = !DILocation(line: 1224, column: 14, scope: !6744)
!6752 = !DILocation(line: 1224, column: 26, scope: !6744)
!6753 = !DILocation(line: 1226, column: 17, scope: !6744)
!6754 = !DILocation(line: 1226, column: 7, scope: !6744)
!6755 = !DILocalVariable(name: "make_holes", scope: !6744, file: !292, line: 1229, type: !142)
!6756 = !DILocation(line: 1229, column: 12, scope: !6744)
!6757 = !DILocalVariable(name: "sparse_src", scope: !6744, file: !292, line: 1230, type: !142)
!6758 = !DILocation(line: 1230, column: 12, scope: !6744)
!6759 = !DILocation(line: 1230, column: 25, scope: !6744)
!6760 = !DILocation(line: 1232, column: 11, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6744, file: !292, line: 1232, column: 11)
!6762 = !DILocation(line: 1232, column: 11, scope: !6744)
!6763 = !DILocation(line: 1236, column: 15, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !292, line: 1236, column: 15)
!6765 = distinct !DILexicalBlock(scope: !6761, file: !292, line: 1233, column: 9)
!6766 = !DILocation(line: 1236, column: 18, scope: !6764)
!6767 = !DILocation(line: 1236, column: 30, scope: !6764)
!6768 = !DILocation(line: 1236, column: 15, scope: !6765)
!6769 = !DILocation(line: 1237, column: 24, scope: !6764)
!6770 = !DILocation(line: 1237, column: 13, scope: !6764)
!6771 = !DILocation(line: 1243, column: 15, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6765, file: !292, line: 1243, column: 15)
!6773 = !DILocation(line: 1243, column: 18, scope: !6772)
!6774 = !DILocation(line: 1243, column: 30, scope: !6772)
!6775 = !DILocation(line: 1243, column: 45, scope: !6772)
!6776 = !DILocation(line: 1243, column: 48, scope: !6772)
!6777 = !DILocation(line: 1243, column: 15, scope: !6765)
!6778 = !DILocation(line: 1244, column: 24, scope: !6772)
!6779 = !DILocation(line: 1244, column: 13, scope: !6772)
!6780 = !DILocation(line: 1245, column: 9, scope: !6765)
!6781 = !DILocation(line: 1249, column: 13, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6744, file: !292, line: 1249, column: 11)
!6783 = !DILocation(line: 1249, column: 11, scope: !6744)
!6784 = !DILocalVariable(name: "blcm_max", scope: !6785, file: !292, line: 1253, type: !55)
!6785 = distinct !DILexicalBlock(scope: !6782, file: !292, line: 1250, column: 9)
!6786 = !DILocation(line: 1253, column: 18, scope: !6785)
!6787 = !DILocation(line: 1253, column: 57, scope: !6785)
!6788 = !DILocation(line: 1253, column: 55, scope: !6785)
!6789 = !DILocalVariable(name: "blcm", scope: !6785, file: !292, line: 1254, type: !55)
!6790 = !DILocation(line: 1254, column: 18, scope: !6785)
!6791 = !DILocation(line: 1254, column: 37, scope: !6785)
!6792 = !DILocation(line: 1254, column: 63, scope: !6785)
!6793 = !DILocation(line: 1255, column: 37, scope: !6785)
!6794 = !DILocation(line: 1254, column: 25, scope: !6785)
!6795 = !DILocation(line: 1259, column: 15, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6785, file: !292, line: 1259, column: 15)
!6797 = !DILocation(line: 1259, column: 45, scope: !6796)
!6798 = !DILocation(line: 1259, column: 60, scope: !6796)
!6799 = !DILocation(line: 1259, column: 70, scope: !6796)
!6800 = !DILocation(line: 1259, column: 68, scope: !6796)
!6801 = !DILocation(line: 1259, column: 15, scope: !6785)
!6802 = !DILocation(line: 1260, column: 36, scope: !6796)
!6803 = !DILocation(line: 1260, column: 44, scope: !6796)
!6804 = !DILocation(line: 1260, column: 22, scope: !6796)
!6805 = !DILocation(line: 1260, column: 13, scope: !6796)
!6806 = !DILocation(line: 1265, column: 23, scope: !6785)
!6807 = !DILocation(line: 1265, column: 28, scope: !6785)
!6808 = !DILocation(line: 1265, column: 20, scope: !6785)
!6809 = !DILocation(line: 1266, column: 23, scope: !6785)
!6810 = !DILocation(line: 1266, column: 34, scope: !6785)
!6811 = !DILocation(line: 1266, column: 32, scope: !6785)
!6812 = !DILocation(line: 1266, column: 20, scope: !6785)
!6813 = !DILocation(line: 1267, column: 15, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6785, file: !292, line: 1267, column: 15)
!6815 = !DILocation(line: 1267, column: 24, scope: !6814)
!6816 = !DILocation(line: 1267, column: 29, scope: !6814)
!6817 = !DILocation(line: 1267, column: 32, scope: !6814)
!6818 = !DILocation(line: 1267, column: 43, scope: !6814)
!6819 = !DILocation(line: 1267, column: 41, scope: !6814)
!6820 = !DILocation(line: 1267, column: 15, scope: !6785)
!6821 = !DILocation(line: 1268, column: 24, scope: !6814)
!6822 = !DILocation(line: 1268, column: 22, scope: !6814)
!6823 = !DILocation(line: 1268, column: 13, scope: !6814)
!6824 = !DILocation(line: 1269, column: 9, scope: !6785)
!6825 = !DILocation(line: 1271, column: 28, scope: !6744)
!6826 = !DILocation(line: 1271, column: 39, scope: !6744)
!6827 = !DILocation(line: 1271, column: 37, scope: !6744)
!6828 = !DILocation(line: 1271, column: 19, scope: !6744)
!6829 = !DILocation(line: 1271, column: 17, scope: !6744)
!6830 = !DILocation(line: 1272, column: 24, scope: !6744)
!6831 = !DILocation(line: 1272, column: 35, scope: !6744)
!6832 = !DILocation(line: 1272, column: 13, scope: !6744)
!6833 = !DILocation(line: 1272, column: 11, scope: !6744)
!6834 = !DILocation(line: 1274, column: 11, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6744, file: !292, line: 1274, column: 11)
!6836 = !DILocation(line: 1274, column: 11, scope: !6744)
!6837 = !DILocalVariable(name: "normal_copy_required", scope: !6838, file: !292, line: 1276, type: !142)
!6838 = distinct !DILexicalBlock(scope: !6835, file: !292, line: 1275, column: 9)
!6839 = !DILocation(line: 1276, column: 16, scope: !6838)
!6840 = !DILocation(line: 1282, column: 28, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6838, file: !292, line: 1282, column: 15)
!6842 = !DILocation(line: 1282, column: 41, scope: !6841)
!6843 = !DILocation(line: 1282, column: 52, scope: !6841)
!6844 = !DILocation(line: 1282, column: 57, scope: !6841)
!6845 = !DILocation(line: 1282, column: 67, scope: !6841)
!6846 = !DILocation(line: 1283, column: 40, scope: !6841)
!6847 = !DILocation(line: 1284, column: 28, scope: !6841)
!6848 = !DILocation(line: 1284, column: 41, scope: !6841)
!6849 = !DILocation(line: 1284, column: 44, scope: !6841)
!6850 = !DILocation(line: 1285, column: 28, scope: !6841)
!6851 = !DILocation(line: 1285, column: 38, scope: !6841)
!6852 = !DILocation(line: 1282, column: 15, scope: !6841)
!6853 = !DILocation(line: 1282, column: 15, scope: !6838)
!6854 = !DILocation(line: 1286, column: 13, scope: !6841)
!6855 = !DILocation(line: 1288, column: 17, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6838, file: !292, line: 1288, column: 15)
!6857 = !DILocation(line: 1288, column: 15, scope: !6838)
!6858 = !DILocation(line: 1290, column: 26, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6856, file: !292, line: 1289, column: 13)
!6860 = !DILocation(line: 1291, column: 15, scope: !6859)
!6861 = !DILocation(line: 1293, column: 9, scope: !6838)
!6862 = !DILocalVariable(name: "n_read", scope: !6744, file: !292, line: 1295, type: !295)
!6863 = !DILocation(line: 1295, column: 13, scope: !6744)
!6864 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !6744, file: !292, line: 1296, type: !142)
!6865 = !DILocation(line: 1296, column: 12, scope: !6744)
!6866 = !DILocation(line: 1297, column: 26, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6744, file: !292, line: 1297, column: 11)
!6868 = !DILocation(line: 1297, column: 39, scope: !6867)
!6869 = !DILocation(line: 1297, column: 50, scope: !6867)
!6870 = !DILocation(line: 1297, column: 55, scope: !6867)
!6871 = !DILocation(line: 1298, column: 26, scope: !6867)
!6872 = !DILocation(line: 1298, column: 39, scope: !6867)
!6873 = !DILocation(line: 1299, column: 26, scope: !6867)
!6874 = !DILocation(line: 1299, column: 29, scope: !6867)
!6875 = !DILocation(line: 1299, column: 41, scope: !6867)
!6876 = !DILocation(line: 1299, column: 59, scope: !6867)
!6877 = !DILocation(line: 1299, column: 69, scope: !6867)
!6878 = !DILocation(line: 1297, column: 13, scope: !6867)
!6879 = !DILocation(line: 1297, column: 11, scope: !6744)
!6880 = !DILocation(line: 1303, column: 22, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6867, file: !292, line: 1302, column: 9)
!6882 = !DILocation(line: 1304, column: 11, scope: !6881)
!6883 = !DILocation(line: 1306, column: 16, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6867, file: !292, line: 1306, column: 16)
!6885 = !DILocation(line: 1306, column: 34, scope: !6884)
!6886 = !DILocation(line: 1306, column: 48, scope: !6884)
!6887 = !DILocation(line: 1306, column: 59, scope: !6884)
!6888 = !DILocation(line: 1306, column: 37, scope: !6884)
!6889 = !DILocation(line: 1306, column: 67, scope: !6884)
!6890 = !DILocation(line: 1306, column: 16, scope: !6867)
!6891 = !DILocation(line: 1308, column: 21, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6884, file: !292, line: 1307, column: 9)
!6893 = !DILocation(line: 1308, column: 28, scope: !6892)
!6894 = !DILocation(line: 1308, column: 54, scope: !6892)
!6895 = !DILocation(line: 1308, column: 11, scope: !6892)
!6896 = !DILocation(line: 1309, column: 22, scope: !6892)
!6897 = !DILocation(line: 1310, column: 11, scope: !6892)
!6898 = !DILocation(line: 1312, column: 5, scope: !6744)
!6899 = !DILabel(scope: !6407, name: "preserve_metadata", file: !292, line: 1314)
!6900 = !DILocation(line: 1314, column: 1, scope: !6407)
!6901 = !DILocation(line: 1315, column: 7, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1315, column: 7)
!6903 = !DILocation(line: 1315, column: 10, scope: !6902)
!6904 = !DILocation(line: 1315, column: 7, scope: !6407)
!6905 = !DILocalVariable(name: "timespec", scope: !6906, file: !292, line: 1317, type: !390)
!6906 = distinct !DILexicalBlock(scope: !6902, file: !292, line: 1316, column: 5)
!6907 = !DILocation(line: 1317, column: 23, scope: !6906)
!6908 = !DILocation(line: 1318, column: 7, scope: !6906)
!6909 = !DILocation(line: 1318, column: 37, scope: !6906)
!6910 = !DILocation(line: 1318, column: 21, scope: !6906)
!6911 = !DILocation(line: 1319, column: 7, scope: !6906)
!6912 = !DILocation(line: 1319, column: 37, scope: !6906)
!6913 = !DILocation(line: 1319, column: 21, scope: !6906)
!6914 = !DILocation(line: 1321, column: 22, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6906, file: !292, line: 1321, column: 11)
!6916 = !DILocation(line: 1321, column: 33, scope: !6915)
!6917 = !DILocation(line: 1321, column: 43, scope: !6915)
!6918 = !DILocation(line: 1321, column: 11, scope: !6915)
!6919 = !DILocation(line: 1321, column: 53, scope: !6915)
!6920 = !DILocation(line: 1321, column: 11, scope: !6906)
!6921 = !DILocation(line: 1323, column: 21, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6915, file: !292, line: 1322, column: 9)
!6923 = !DILocation(line: 1323, column: 28, scope: !6922)
!6924 = !DILocation(line: 1323, column: 58, scope: !6922)
!6925 = !DILocation(line: 1323, column: 11, scope: !6922)
!6926 = !DILocation(line: 1324, column: 15, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6922, file: !292, line: 1324, column: 15)
!6928 = !DILocation(line: 1324, column: 18, scope: !6927)
!6929 = !DILocation(line: 1324, column: 15, scope: !6922)
!6930 = !DILocation(line: 1326, column: 26, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6927, file: !292, line: 1325, column: 13)
!6932 = !DILocation(line: 1327, column: 15, scope: !6931)
!6933 = !DILocation(line: 1329, column: 9, scope: !6922)
!6934 = !DILocation(line: 1330, column: 5, scope: !6906)
!6935 = !DILocation(line: 1334, column: 7, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1334, column: 7)
!6937 = !DILocation(line: 1334, column: 10, scope: !6936)
!6938 = !DILocation(line: 1334, column: 29, scope: !6936)
!6939 = !DILocation(line: 1334, column: 34, scope: !6936)
!6940 = !DILocation(line: 1334, column: 7, scope: !6407)
!6941 = !DILocation(line: 1336, column: 26, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6936, file: !292, line: 1335, column: 5)
!6943 = !DILocation(line: 1336, column: 29, scope: !6942)
!6944 = !DILocation(line: 1336, column: 39, scope: !6942)
!6945 = !DILocation(line: 1336, column: 50, scope: !6942)
!6946 = !DILocation(line: 1336, column: 59, scope: !6942)
!6947 = !DILocation(line: 1336, column: 58, scope: !6942)
!6948 = !DILocation(line: 1336, column: 15, scope: !6942)
!6949 = !DILocation(line: 1336, column: 7, scope: !6942)
!6950 = !DILocation(line: 1339, column: 22, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6942, file: !292, line: 1337, column: 9)
!6952 = !DILocation(line: 1340, column: 11, scope: !6951)
!6953 = !DILocation(line: 1343, column: 20, scope: !6951)
!6954 = !DILocation(line: 1344, column: 11, scope: !6951)
!6955 = !DILocation(line: 1346, column: 5, scope: !6942)
!6956 = !DILocation(line: 1351, column: 7, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1351, column: 7)
!6958 = !DILocation(line: 1351, column: 10, scope: !6957)
!6959 = !DILocation(line: 1351, column: 7, scope: !6407)
!6960 = !DILocalVariable(name: "access_changed", scope: !6961, file: !292, line: 1353, type: !142)
!6961 = distinct !DILexicalBlock(scope: !6957, file: !292, line: 1352, column: 5)
!6962 = !DILocation(line: 1353, column: 12, scope: !6961)
!6963 = !DILocation(line: 1355, column: 16, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6961, file: !292, line: 1355, column: 11)
!6965 = !DILocation(line: 1355, column: 24, scope: !6964)
!6966 = !DILocation(line: 1355, column: 35, scope: !6964)
!6967 = !DILocation(line: 1355, column: 38, scope: !6964)
!6968 = !DILocation(line: 1355, column: 49, scope: !6964)
!6969 = !DILocation(line: 1355, column: 11, scope: !6961)
!6970 = !DILocation(line: 1357, column: 46, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6964, file: !292, line: 1356, column: 9)
!6972 = !DILocation(line: 1357, column: 57, scope: !6971)
!6973 = !DILocation(line: 1357, column: 28, scope: !6971)
!6974 = !DILocation(line: 1358, column: 65, scope: !6971)
!6975 = !DILocation(line: 1357, column: 26, scope: !6971)
!6976 = !DILocation(line: 1359, column: 9, scope: !6971)
!6977 = !DILocation(line: 1361, column: 23, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6961, file: !292, line: 1361, column: 11)
!6979 = !DILocation(line: 1361, column: 33, scope: !6978)
!6980 = !DILocation(line: 1361, column: 46, scope: !6978)
!6981 = !DILocation(line: 1361, column: 56, scope: !6978)
!6982 = !DILocation(line: 1361, column: 67, scope: !6978)
!6983 = !DILocation(line: 1361, column: 12, scope: !6978)
!6984 = !DILocation(line: 1362, column: 11, scope: !6978)
!6985 = !DILocation(line: 1362, column: 14, scope: !6978)
!6986 = !DILocation(line: 1362, column: 17, scope: !6978)
!6987 = !DILocation(line: 1361, column: 11, scope: !6961)
!6988 = !DILocation(line: 1363, column: 20, scope: !6978)
!6989 = !DILocation(line: 1363, column: 9, scope: !6978)
!6990 = !DILocation(line: 1365, column: 11, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6961, file: !292, line: 1365, column: 11)
!6992 = !DILocation(line: 1365, column: 11, scope: !6961)
!6993 = !DILocation(line: 1366, column: 27, scope: !6991)
!6994 = !DILocation(line: 1366, column: 38, scope: !6991)
!6995 = !DILocation(line: 1366, column: 48, scope: !6991)
!6996 = !DILocation(line: 1366, column: 60, scope: !6991)
!6997 = !DILocation(line: 1366, column: 59, scope: !6991)
!6998 = !DILocation(line: 1366, column: 57, scope: !6991)
!6999 = !DILocation(line: 1366, column: 9, scope: !6991)
!7000 = !DILocation(line: 1367, column: 5, scope: !6961)
!7001 = !DILocation(line: 1369, column: 15, scope: !6407)
!7002 = !DILocation(line: 1369, column: 25, scope: !6407)
!7003 = !DILocation(line: 1369, column: 36, scope: !6407)
!7004 = !DILocation(line: 1369, column: 3, scope: !6407)
!7005 = !DILocation(line: 1371, column: 7, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1371, column: 7)
!7007 = !DILocation(line: 1371, column: 10, scope: !7006)
!7008 = !DILocation(line: 1371, column: 24, scope: !7006)
!7009 = !DILocation(line: 1371, column: 27, scope: !7006)
!7010 = !DILocation(line: 1371, column: 30, scope: !7006)
!7011 = !DILocation(line: 1371, column: 7, scope: !6407)
!7012 = !DILocation(line: 1373, column: 21, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !292, line: 1373, column: 11)
!7014 = distinct !DILexicalBlock(scope: !7006, file: !292, line: 1372, column: 5)
!7015 = !DILocation(line: 1373, column: 31, scope: !7013)
!7016 = !DILocation(line: 1373, column: 44, scope: !7013)
!7017 = !DILocation(line: 1373, column: 54, scope: !7013)
!7018 = !DILocation(line: 1373, column: 65, scope: !7013)
!7019 = !DILocation(line: 1373, column: 11, scope: !7013)
!7020 = !DILocation(line: 1373, column: 75, scope: !7013)
!7021 = !DILocation(line: 1374, column: 11, scope: !7013)
!7022 = !DILocation(line: 1374, column: 14, scope: !7013)
!7023 = !DILocation(line: 1374, column: 17, scope: !7013)
!7024 = !DILocation(line: 1373, column: 11, scope: !7014)
!7025 = !DILocation(line: 1375, column: 20, scope: !7013)
!7026 = !DILocation(line: 1375, column: 9, scope: !7013)
!7027 = !DILocation(line: 1376, column: 5, scope: !7014)
!7028 = !DILocation(line: 1377, column: 12, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7006, file: !292, line: 1377, column: 12)
!7030 = !DILocation(line: 1377, column: 15, scope: !7029)
!7031 = !DILocation(line: 1377, column: 12, scope: !7006)
!7032 = !DILocation(line: 1379, column: 20, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !292, line: 1379, column: 11)
!7034 = distinct !DILexicalBlock(scope: !7029, file: !292, line: 1378, column: 5)
!7035 = !DILocation(line: 1379, column: 30, scope: !7033)
!7036 = !DILocation(line: 1379, column: 41, scope: !7033)
!7037 = !DILocation(line: 1379, column: 44, scope: !7033)
!7038 = !DILocation(line: 1379, column: 11, scope: !7033)
!7039 = !DILocation(line: 1379, column: 50, scope: !7033)
!7040 = !DILocation(line: 1379, column: 11, scope: !7034)
!7041 = !DILocation(line: 1380, column: 20, scope: !7033)
!7042 = !DILocation(line: 1380, column: 9, scope: !7033)
!7043 = !DILocation(line: 1381, column: 5, scope: !7034)
!7044 = !DILocation(line: 1382, column: 12, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7029, file: !292, line: 1382, column: 12)
!7046 = !DILocation(line: 1382, column: 15, scope: !7045)
!7047 = !DILocation(line: 1382, column: 41, scope: !7045)
!7048 = !DILocation(line: 1382, column: 45, scope: !7045)
!7049 = !DILocation(line: 1382, column: 44, scope: !7045)
!7050 = !DILocation(line: 1382, column: 12, scope: !7029)
!7051 = !DILocation(line: 1384, column: 20, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !292, line: 1384, column: 11)
!7053 = distinct !DILexicalBlock(scope: !7045, file: !292, line: 1383, column: 5)
!7054 = !DILocation(line: 1384, column: 30, scope: !7052)
!7055 = !DILocation(line: 1384, column: 56, scope: !7052)
!7056 = !DILocation(line: 1384, column: 55, scope: !7052)
!7057 = !DILocation(line: 1384, column: 53, scope: !7052)
!7058 = !DILocation(line: 1384, column: 11, scope: !7052)
!7059 = !DILocation(line: 1384, column: 73, scope: !7052)
!7060 = !DILocation(line: 1384, column: 11, scope: !7053)
!7061 = !DILocation(line: 1385, column: 20, scope: !7052)
!7062 = !DILocation(line: 1385, column: 9, scope: !7052)
!7063 = !DILocation(line: 1386, column: 5, scope: !7053)
!7064 = !DILocation(line: 1387, column: 12, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7045, file: !292, line: 1387, column: 12)
!7066 = !DILocation(line: 1387, column: 12, scope: !7045)
!7067 = !DILocation(line: 1389, column: 32, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7065, file: !292, line: 1388, column: 5)
!7069 = !DILocation(line: 1389, column: 30, scope: !7068)
!7070 = !DILocation(line: 1389, column: 27, scope: !7068)
!7071 = !DILocation(line: 1390, column: 11, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7068, file: !292, line: 1390, column: 11)
!7073 = !DILocation(line: 1391, column: 11, scope: !7072)
!7074 = !DILocation(line: 1391, column: 32, scope: !7072)
!7075 = !DILocation(line: 1391, column: 43, scope: !7072)
!7076 = !DILocation(line: 1391, column: 53, scope: !7072)
!7077 = !DILocation(line: 1391, column: 14, scope: !7072)
!7078 = !DILocation(line: 1391, column: 63, scope: !7072)
!7079 = !DILocation(line: 1390, column: 11, scope: !7068)
!7080 = !DILocation(line: 1393, column: 21, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7072, file: !292, line: 1392, column: 9)
!7082 = !DILocation(line: 1393, column: 28, scope: !7081)
!7083 = !DILocation(line: 1394, column: 18, scope: !7081)
!7084 = !DILocation(line: 1393, column: 11, scope: !7081)
!7085 = !DILocation(line: 1395, column: 15, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7081, file: !292, line: 1395, column: 15)
!7087 = !DILocation(line: 1395, column: 18, scope: !7086)
!7088 = !DILocation(line: 1395, column: 15, scope: !7081)
!7089 = !DILocation(line: 1396, column: 24, scope: !7086)
!7090 = !DILocation(line: 1396, column: 13, scope: !7086)
!7091 = !DILocation(line: 1397, column: 9, scope: !7081)
!7092 = !DILocation(line: 1398, column: 5, scope: !7068)
!7093 = !DILabel(scope: !6407, name: "close_src_and_dst_desc", file: !292, line: 1400)
!7094 = !DILocation(line: 1400, column: 1, scope: !6407)
!7095 = !DILocation(line: 1401, column: 14, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1401, column: 7)
!7097 = !DILocation(line: 1401, column: 7, scope: !7096)
!7098 = !DILocation(line: 1401, column: 25, scope: !7096)
!7099 = !DILocation(line: 1401, column: 7, scope: !6407)
!7100 = !DILocation(line: 1403, column: 17, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7096, file: !292, line: 1402, column: 5)
!7102 = !DILocation(line: 1403, column: 24, scope: !7101)
!7103 = !DILocation(line: 1403, column: 49, scope: !7101)
!7104 = !DILocation(line: 1403, column: 7, scope: !7101)
!7105 = !DILocation(line: 1404, column: 18, scope: !7101)
!7106 = !DILocation(line: 1405, column: 5, scope: !7101)
!7107 = !DILocation(line: 1401, column: 27, scope: !7096)
!7108 = !DILabel(scope: !6407, name: "close_src_desc", file: !292, line: 1406)
!7109 = !DILocation(line: 1406, column: 1, scope: !6407)
!7110 = !DILocation(line: 1407, column: 14, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !6407, file: !292, line: 1407, column: 7)
!7112 = !DILocation(line: 1407, column: 7, scope: !7111)
!7113 = !DILocation(line: 1407, column: 27, scope: !7111)
!7114 = !DILocation(line: 1407, column: 7, scope: !6407)
!7115 = !DILocation(line: 1409, column: 17, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7111, file: !292, line: 1408, column: 5)
!7117 = !DILocation(line: 1409, column: 24, scope: !7116)
!7118 = !DILocation(line: 1409, column: 49, scope: !7116)
!7119 = !DILocation(line: 1409, column: 7, scope: !7116)
!7120 = !DILocation(line: 1410, column: 18, scope: !7116)
!7121 = !DILocation(line: 1411, column: 5, scope: !7116)
!7122 = !DILocation(line: 1413, column: 9, scope: !6407)
!7123 = !DILocation(line: 1413, column: 3, scope: !6407)
!7124 = !DILocation(line: 1414, column: 9, scope: !6407)
!7125 = !DILocation(line: 1414, column: 3, scope: !6407)
!7126 = !DILocation(line: 1415, column: 10, scope: !6407)
!7127 = !DILocation(line: 1415, column: 3, scope: !6407)
!7128 = !DILocation(line: 1416, column: 1, scope: !6407)
!7129 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !292, file: !292, line: 1769, type: !571, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7130 = !DILocation(line: 1771, column: 7, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7129, file: !292, line: 1771, column: 7)
!7132 = !DILocation(line: 1771, column: 29, scope: !7131)
!7133 = !DILocation(line: 1771, column: 7, scope: !7129)
!7134 = !DILocation(line: 1772, column: 5, scope: !7131)
!7135 = !DILocation(line: 1774, column: 1, scope: !7129)
!7136 = distinct !DISubprogram(name: "chown_failure_ok", scope: !292, file: !292, line: 3023, type: !4043, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7137 = !DILocalVariable(name: "x", arg: 1, scope: !7136, file: !292, line: 3023, type: !3742)
!7138 = !DILocation(line: 3023, column: 44, scope: !7136)
!7139 = !DILocation(line: 3029, column: 12, scope: !7136)
!7140 = !DILocation(line: 3029, column: 18, scope: !7136)
!7141 = !DILocation(line: 3029, column: 27, scope: !7136)
!7142 = !DILocation(line: 3029, column: 30, scope: !7136)
!7143 = !DILocation(line: 3029, column: 36, scope: !7136)
!7144 = !DILocation(line: 3029, column: 47, scope: !7136)
!7145 = !DILocation(line: 3029, column: 51, scope: !7136)
!7146 = !DILocation(line: 3029, column: 54, scope: !7136)
!7147 = !DILocation(line: 3029, column: 50, scope: !7136)
!7148 = !DILocation(line: 0, scope: !7136)
!7149 = !DILocation(line: 3029, column: 3, scope: !7136)
!7150 = distinct !DISubprogram(name: "utimens_symlink", scope: !292, file: !292, line: 153, type: !7151, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!7, !116, !7153}
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7154, size: 64)
!7154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!7155 = !DILocalVariable(name: "file", arg: 1, scope: !7150, file: !292, line: 153, type: !116)
!7156 = !DILocation(line: 153, column: 30, scope: !7150)
!7157 = !DILocalVariable(name: "timespec", arg: 2, scope: !7150, file: !292, line: 153, type: !7153)
!7158 = !DILocation(line: 153, column: 59, scope: !7150)
!7159 = !DILocalVariable(name: "err", scope: !7150, file: !292, line: 155, type: !7)
!7160 = !DILocation(line: 155, column: 7, scope: !7150)
!7161 = !DILocation(line: 155, column: 23, scope: !7150)
!7162 = !DILocation(line: 155, column: 29, scope: !7150)
!7163 = !DILocation(line: 155, column: 13, scope: !7150)
!7164 = !DILocation(line: 159, column: 7, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7150, file: !292, line: 159, column: 7)
!7166 = !DILocation(line: 159, column: 11, scope: !7165)
!7167 = !DILocation(line: 159, column: 14, scope: !7165)
!7168 = !DILocation(line: 159, column: 20, scope: !7165)
!7169 = !DILocation(line: 159, column: 7, scope: !7150)
!7170 = !DILocation(line: 160, column: 9, scope: !7165)
!7171 = !DILocation(line: 160, column: 5, scope: !7165)
!7172 = !DILocation(line: 161, column: 10, scope: !7150)
!7173 = !DILocation(line: 161, column: 3, scope: !7150)
!7174 = distinct !DISubprogram(name: "set_owner", scope: !292, file: !292, line: 780, type: !7175, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{!7, !3742, !116, !7, !391, !142, !391}
!7177 = !DILocalVariable(name: "x", arg: 1, scope: !7174, file: !292, line: 780, type: !3742)
!7178 = !DILocation(line: 780, column: 37, scope: !7174)
!7179 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7174, file: !292, line: 780, type: !116)
!7180 = !DILocation(line: 780, column: 52, scope: !7174)
!7181 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !7174, file: !292, line: 780, type: !7)
!7182 = !DILocation(line: 780, column: 66, scope: !7174)
!7183 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7174, file: !292, line: 781, type: !391)
!7184 = !DILocation(line: 781, column: 31, scope: !7174)
!7185 = !DILocalVariable(name: "new_dst", arg: 5, scope: !7174, file: !292, line: 781, type: !142)
!7186 = !DILocation(line: 781, column: 44, scope: !7174)
!7187 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !7174, file: !292, line: 782, type: !391)
!7188 = !DILocation(line: 782, column: 31, scope: !7174)
!7189 = !DILocalVariable(name: "uid", scope: !7174, file: !292, line: 784, type: !451)
!7190 = !DILocation(line: 784, column: 9, scope: !7174)
!7191 = !DILocation(line: 784, column: 15, scope: !7174)
!7192 = !DILocation(line: 784, column: 23, scope: !7174)
!7193 = !DILocalVariable(name: "gid", scope: !7174, file: !292, line: 785, type: !452)
!7194 = !DILocation(line: 785, column: 9, scope: !7174)
!7195 = !DILocation(line: 785, column: 15, scope: !7174)
!7196 = !DILocation(line: 785, column: 23, scope: !7174)
!7197 = !DILocation(line: 793, column: 8, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7174, file: !292, line: 793, column: 7)
!7199 = !DILocation(line: 793, column: 16, scope: !7198)
!7200 = !DILocation(line: 793, column: 20, scope: !7198)
!7201 = !DILocation(line: 793, column: 23, scope: !7198)
!7202 = !DILocation(line: 793, column: 37, scope: !7198)
!7203 = !DILocation(line: 793, column: 40, scope: !7198)
!7204 = !DILocation(line: 793, column: 43, scope: !7198)
!7205 = !DILocation(line: 793, column: 53, scope: !7198)
!7206 = !DILocation(line: 793, column: 56, scope: !7198)
!7207 = !DILocation(line: 793, column: 59, scope: !7198)
!7208 = !DILocation(line: 793, column: 7, scope: !7174)
!7209 = !DILocalVariable(name: "old_mode", scope: !7210, file: !292, line: 795, type: !239)
!7210 = distinct !DILexicalBlock(scope: !7198, file: !292, line: 794, column: 5)
!7211 = !DILocation(line: 795, column: 14, scope: !7210)
!7212 = !DILocation(line: 795, column: 25, scope: !7210)
!7213 = !DILocation(line: 795, column: 33, scope: !7210)
!7214 = !DILocalVariable(name: "new_mode", scope: !7210, file: !292, line: 796, type: !239)
!7215 = !DILocation(line: 796, column: 14, scope: !7210)
!7216 = !DILocation(line: 797, column: 10, scope: !7210)
!7217 = !DILocation(line: 797, column: 13, scope: !7210)
!7218 = !DILocation(line: 797, column: 27, scope: !7210)
!7219 = !DILocation(line: 797, column: 30, scope: !7210)
!7220 = !DILocation(line: 797, column: 33, scope: !7210)
!7221 = !DILocation(line: 797, column: 45, scope: !7210)
!7222 = !DILocation(line: 797, column: 53, scope: !7210)
!7223 = !DILocation(line: 797, column: 63, scope: !7210)
!7224 = !DILocation(line: 797, column: 66, scope: !7210)
!7225 = !DILocalVariable(name: "restrictive_temp_mode", scope: !7210, file: !292, line: 798, type: !239)
!7226 = !DILocation(line: 798, column: 14, scope: !7210)
!7227 = !DILocation(line: 798, column: 38, scope: !7210)
!7228 = !DILocation(line: 798, column: 49, scope: !7210)
!7229 = !DILocation(line: 798, column: 47, scope: !7210)
!7230 = !DILocation(line: 798, column: 58, scope: !7210)
!7231 = !DILocation(line: 803, column: 24, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7210, file: !292, line: 800, column: 11)
!7233 = !DILocation(line: 803, column: 34, scope: !7232)
!7234 = !DILocation(line: 803, column: 45, scope: !7232)
!7235 = !DILocation(line: 803, column: 14, scope: !7232)
!7236 = !DILocation(line: 803, column: 68, scope: !7232)
!7237 = !DILocation(line: 800, column: 11, scope: !7210)
!7238 = !DILocation(line: 805, column: 35, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !292, line: 805, column: 15)
!7240 = distinct !DILexicalBlock(scope: !7232, file: !292, line: 804, column: 9)
!7241 = !DILocation(line: 805, column: 17, scope: !7239)
!7242 = !DILocation(line: 805, column: 15, scope: !7240)
!7243 = !DILocation(line: 806, column: 23, scope: !7239)
!7244 = !DILocation(line: 806, column: 30, scope: !7239)
!7245 = !DILocation(line: 807, column: 20, scope: !7239)
!7246 = !DILocation(line: 806, column: 13, scope: !7239)
!7247 = !DILocation(line: 808, column: 19, scope: !7240)
!7248 = !DILocation(line: 808, column: 22, scope: !7240)
!7249 = !DILocation(line: 808, column: 18, scope: !7240)
!7250 = !DILocation(line: 808, column: 11, scope: !7240)
!7251 = !DILocation(line: 810, column: 5, scope: !7210)
!7252 = !DILocation(line: 812, column: 22, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7174, file: !292, line: 812, column: 7)
!7254 = !DILocation(line: 812, column: 32, scope: !7253)
!7255 = !DILocation(line: 812, column: 7, scope: !7174)
!7256 = !DILocation(line: 814, column: 19, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7258, file: !292, line: 814, column: 11)
!7258 = distinct !DILexicalBlock(scope: !7253, file: !292, line: 813, column: 5)
!7259 = !DILocation(line: 814, column: 30, scope: !7257)
!7260 = !DILocation(line: 814, column: 35, scope: !7257)
!7261 = !DILocation(line: 814, column: 11, scope: !7257)
!7262 = !DILocation(line: 814, column: 40, scope: !7257)
!7263 = !DILocation(line: 814, column: 11, scope: !7258)
!7264 = !DILocation(line: 815, column: 9, scope: !7257)
!7265 = !DILocation(line: 816, column: 11, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7258, file: !292, line: 816, column: 11)
!7267 = !DILocation(line: 816, column: 17, scope: !7266)
!7268 = !DILocation(line: 816, column: 26, scope: !7266)
!7269 = !DILocation(line: 816, column: 29, scope: !7266)
!7270 = !DILocation(line: 816, column: 35, scope: !7266)
!7271 = !DILocation(line: 816, column: 11, scope: !7258)
!7272 = !DILocalVariable(name: "saved_errno", scope: !7273, file: !292, line: 820, type: !7)
!7273 = distinct !DILexicalBlock(scope: !7266, file: !292, line: 817, column: 9)
!7274 = !DILocation(line: 820, column: 15, scope: !7273)
!7275 = !DILocation(line: 820, column: 29, scope: !7273)
!7276 = !DILocalVariable(name: "__x", scope: !7277, file: !292, line: 821, type: !7)
!7277 = distinct !DILexicalBlock(scope: !7273, file: !292, line: 821, column: 11)
!7278 = !DILocation(line: 821, column: 11, scope: !7277)
!7279 = !DILocation(line: 822, column: 19, scope: !7273)
!7280 = !DILocation(line: 822, column: 11, scope: !7273)
!7281 = !DILocation(line: 822, column: 17, scope: !7273)
!7282 = !DILocation(line: 823, column: 9, scope: !7273)
!7283 = !DILocation(line: 824, column: 5, scope: !7258)
!7284 = !DILocation(line: 827, column: 19, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7286, file: !292, line: 827, column: 11)
!7286 = distinct !DILexicalBlock(scope: !7253, file: !292, line: 826, column: 5)
!7287 = !DILocation(line: 827, column: 29, scope: !7285)
!7288 = !DILocation(line: 827, column: 34, scope: !7285)
!7289 = !DILocation(line: 827, column: 11, scope: !7285)
!7290 = !DILocation(line: 827, column: 39, scope: !7285)
!7291 = !DILocation(line: 827, column: 11, scope: !7286)
!7292 = !DILocation(line: 828, column: 9, scope: !7285)
!7293 = !DILocation(line: 829, column: 11, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7286, file: !292, line: 829, column: 11)
!7295 = !DILocation(line: 829, column: 17, scope: !7294)
!7296 = !DILocation(line: 829, column: 26, scope: !7294)
!7297 = !DILocation(line: 829, column: 29, scope: !7294)
!7298 = !DILocation(line: 829, column: 35, scope: !7294)
!7299 = !DILocation(line: 829, column: 11, scope: !7286)
!7300 = !DILocalVariable(name: "saved_errno", scope: !7301, file: !292, line: 833, type: !7)
!7301 = distinct !DILexicalBlock(scope: !7294, file: !292, line: 830, column: 9)
!7302 = !DILocation(line: 833, column: 15, scope: !7301)
!7303 = !DILocation(line: 833, column: 29, scope: !7301)
!7304 = !DILocalVariable(name: "__x", scope: !7305, file: !292, line: 834, type: !7)
!7305 = distinct !DILexicalBlock(scope: !7301, file: !292, line: 834, column: 11)
!7306 = !DILocation(line: 834, column: 11, scope: !7305)
!7307 = !DILocation(line: 835, column: 19, scope: !7301)
!7308 = !DILocation(line: 835, column: 11, scope: !7301)
!7309 = !DILocation(line: 835, column: 17, scope: !7301)
!7310 = !DILocation(line: 836, column: 9, scope: !7301)
!7311 = !DILocation(line: 839, column: 27, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7174, file: !292, line: 839, column: 7)
!7313 = !DILocation(line: 839, column: 9, scope: !7312)
!7314 = !DILocation(line: 839, column: 7, scope: !7174)
!7315 = !DILocation(line: 841, column: 17, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7312, file: !292, line: 840, column: 5)
!7317 = !DILocation(line: 841, column: 24, scope: !7316)
!7318 = !DILocation(line: 842, column: 14, scope: !7316)
!7319 = !DILocation(line: 841, column: 7, scope: !7316)
!7320 = !DILocation(line: 843, column: 11, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7316, file: !292, line: 843, column: 11)
!7322 = !DILocation(line: 843, column: 14, scope: !7321)
!7323 = !DILocation(line: 843, column: 11, scope: !7316)
!7324 = !DILocation(line: 844, column: 9, scope: !7321)
!7325 = !DILocation(line: 845, column: 5, scope: !7316)
!7326 = !DILocation(line: 847, column: 3, scope: !7174)
!7327 = !DILocation(line: 848, column: 1, scope: !7174)
!7328 = distinct !DISubprogram(name: "copy_attr", scope: !292, file: !292, line: 659, type: !7329, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!142, !116, !7, !116, !7, !3742}
!7331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "error_context", file: !7332, line: 25, size: 192, elements: !7333)
!7332 = !DIFile(filename: "/usr/include/attr/error_context.h", directory: "")
!7333 = !{!7334, !7339, !7343}
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7331, file: !7332, line: 27, baseType: !7335, size: 64)
!7335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7336, size: 64)
!7336 = !DISubroutineType(types: !7337)
!7337 = !{null, !7338, !116, null}
!7338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7331, size: 64)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !7331, file: !7332, line: 30, baseType: !7340, size: 64, offset: 64)
!7340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7341, size: 64)
!7341 = !DISubroutineType(types: !7342)
!7342 = !{!116, !7338, !116}
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "quote_free", scope: !7331, file: !7332, line: 33, baseType: !7344, size: 64, offset: 128)
!7344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7345, size: 64)
!7345 = !DISubroutineType(types: !7346)
!7346 = !{null, !7338, !116}
!7347 = !DILocalVariable(name: "src_path", arg: 1, scope: !7328, file: !292, line: 659, type: !116)
!7348 = !DILocation(line: 659, column: 24, scope: !7328)
!7349 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7328, file: !292, line: 659, type: !7)
!7350 = !DILocation(line: 659, column: 38, scope: !7328)
!7351 = !DILocalVariable(name: "dst_path", arg: 3, scope: !7328, file: !292, line: 660, type: !116)
!7352 = !DILocation(line: 660, column: 24, scope: !7328)
!7353 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !7328, file: !292, line: 660, type: !7)
!7354 = !DILocation(line: 660, column: 38, scope: !7328)
!7355 = !DILocalVariable(name: "x", arg: 5, scope: !7328, file: !292, line: 660, type: !3742)
!7356 = !DILocation(line: 660, column: 71, scope: !7328)
!7357 = !DILocalVariable(name: "ret", scope: !7328, file: !292, line: 662, type: !7)
!7358 = !DILocation(line: 662, column: 7, scope: !7328)
!7359 = !DILocalVariable(name: "all_errors", scope: !7328, file: !292, line: 663, type: !142)
!7360 = !DILocation(line: 663, column: 8, scope: !7328)
!7361 = !DILocation(line: 663, column: 23, scope: !7328)
!7362 = !DILocation(line: 663, column: 26, scope: !7328)
!7363 = !DILocation(line: 663, column: 45, scope: !7328)
!7364 = !DILocation(line: 663, column: 48, scope: !7328)
!7365 = !DILocation(line: 663, column: 51, scope: !7328)
!7366 = !DILocalVariable(name: "some_errors", scope: !7328, file: !292, line: 664, type: !142)
!7367 = !DILocation(line: 664, column: 8, scope: !7328)
!7368 = !DILocation(line: 664, column: 24, scope: !7328)
!7369 = !DILocation(line: 664, column: 35, scope: !7328)
!7370 = !DILocation(line: 664, column: 39, scope: !7328)
!7371 = !DILocation(line: 664, column: 42, scope: !7328)
!7372 = !DILocation(line: 664, column: 38, scope: !7328)
!7373 = !DILocation(line: 0, scope: !7328)
!7374 = !DILocalVariable(name: "selinux_done", scope: !7328, file: !292, line: 665, type: !142)
!7375 = !DILocation(line: 665, column: 8, scope: !7328)
!7376 = !DILocation(line: 665, column: 24, scope: !7328)
!7377 = !DILocation(line: 665, column: 27, scope: !7328)
!7378 = !DILocation(line: 665, column: 53, scope: !7328)
!7379 = !DILocation(line: 665, column: 56, scope: !7328)
!7380 = !DILocation(line: 665, column: 59, scope: !7328)
!7381 = !DILocalVariable(name: "ctx", scope: !7328, file: !292, line: 666, type: !7331)
!7382 = !DILocation(line: 666, column: 24, scope: !7328)
!7383 = !DILocation(line: 667, column: 3, scope: !7328)
!7384 = !DILocation(line: 668, column: 14, scope: !7328)
!7385 = !DILocation(line: 672, column: 12, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7328, file: !292, line: 672, column: 7)
!7387 = !DILocation(line: 672, column: 9, scope: !7386)
!7388 = !DILocation(line: 672, column: 19, scope: !7386)
!7389 = !DILocation(line: 672, column: 27, scope: !7386)
!7390 = !DILocation(line: 672, column: 24, scope: !7386)
!7391 = !DILocation(line: 672, column: 7, scope: !7328)
!7392 = !DILocation(line: 673, column: 25, scope: !7386)
!7393 = !DILocation(line: 673, column: 35, scope: !7386)
!7394 = !DILocation(line: 673, column: 43, scope: !7386)
!7395 = !DILocation(line: 673, column: 53, scope: !7386)
!7396 = !DILocation(line: 674, column: 25, scope: !7386)
!7397 = !DILocation(line: 675, column: 26, scope: !7386)
!7398 = !DILocation(line: 675, column: 37, scope: !7386)
!7399 = !DILocation(line: 675, column: 40, scope: !7386)
!7400 = !DILocation(line: 673, column: 11, scope: !7386)
!7401 = !DILocation(line: 673, column: 9, scope: !7386)
!7402 = !DILocation(line: 673, column: 5, scope: !7386)
!7403 = !DILocation(line: 677, column: 27, scope: !7386)
!7404 = !DILocation(line: 677, column: 37, scope: !7386)
!7405 = !DILocation(line: 678, column: 27, scope: !7386)
!7406 = !DILocation(line: 679, column: 28, scope: !7386)
!7407 = !DILocation(line: 679, column: 39, scope: !7386)
!7408 = !DILocation(line: 679, column: 42, scope: !7386)
!7409 = !DILocation(line: 677, column: 11, scope: !7386)
!7410 = !DILocation(line: 677, column: 9, scope: !7386)
!7411 = !DILocation(line: 681, column: 10, scope: !7328)
!7412 = !DILocation(line: 681, column: 14, scope: !7328)
!7413 = !DILocation(line: 681, column: 3, scope: !7328)
!7414 = distinct !DISubprogram(name: "set_author", scope: !292, file: !292, line: 856, type: !7415, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7415 = !DISubroutineType(types: !7416)
!7416 = !{null, !116, !7, !391}
!7417 = !DILocalVariable(name: "dst_name", arg: 1, scope: !7414, file: !292, line: 856, type: !116)
!7418 = !DILocation(line: 856, column: 25, scope: !7414)
!7419 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !7414, file: !292, line: 856, type: !7)
!7420 = !DILocation(line: 856, column: 39, scope: !7414)
!7421 = !DILocalVariable(name: "src_sb", arg: 3, scope: !7414, file: !292, line: 856, type: !391)
!7422 = !DILocation(line: 856, column: 69, scope: !7414)
!7423 = !DILocation(line: 877, column: 10, scope: !7414)
!7424 = !DILocation(line: 878, column: 10, scope: !7414)
!7425 = !DILocation(line: 879, column: 10, scope: !7414)
!7426 = !DILocation(line: 881, column: 1, scope: !7414)
!7427 = !DILocation(line: 3052, column: 7, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !467, file: !292, line: 3052, column: 7)
!7429 = !DILocation(line: 3052, column: 12, scope: !7428)
!7430 = !DILocation(line: 3052, column: 7, scope: !467)
!7431 = !DILocation(line: 3054, column: 14, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7428, file: !292, line: 3053, column: 5)
!7433 = !DILocation(line: 3054, column: 12, scope: !7432)
!7434 = !DILocation(line: 3055, column: 14, scope: !7432)
!7435 = !DILocation(line: 3055, column: 7, scope: !7432)
!7436 = !DILocation(line: 3056, column: 5, scope: !7432)
!7437 = !DILocation(line: 3057, column: 10, scope: !467)
!7438 = !DILocation(line: 3057, column: 3, scope: !467)
!7439 = distinct !DISubprogram(name: "copy_attr_allerror", scope: !292, file: !292, line: 619, type: !7336, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7440 = !DILocalVariable(name: "ctx", arg: 1, scope: !7439, file: !292, line: 619, type: !7338)
!7441 = !DILocation(line: 619, column: 43, scope: !7439)
!7442 = !DILocalVariable(name: "fmt", arg: 2, scope: !7439, file: !292, line: 620, type: !116)
!7443 = !DILocation(line: 620, column: 30, scope: !7439)
!7444 = !DILocalVariable(name: "err", scope: !7439, file: !292, line: 622, type: !7)
!7445 = !DILocation(line: 622, column: 7, scope: !7439)
!7446 = !DILocation(line: 622, column: 13, scope: !7439)
!7447 = !DILocalVariable(name: "ap", scope: !7439, file: !292, line: 623, type: !453)
!7448 = !DILocation(line: 623, column: 11, scope: !7439)
!7449 = !DILocation(line: 626, column: 3, scope: !7439)
!7450 = !DILocation(line: 627, column: 14, scope: !7439)
!7451 = !DILocation(line: 627, column: 19, scope: !7439)
!7452 = !DILocation(line: 627, column: 24, scope: !7439)
!7453 = !DILocation(line: 627, column: 3, scope: !7439)
!7454 = !DILocation(line: 628, column: 3, scope: !7439)
!7455 = !DILocation(line: 629, column: 1, scope: !7439)
!7456 = distinct !DISubprogram(name: "copy_attr_error", scope: !292, file: !292, line: 603, type: !7336, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7457 = !DILocalVariable(name: "ctx", arg: 1, scope: !7456, file: !292, line: 603, type: !7338)
!7458 = !DILocation(line: 603, column: 40, scope: !7456)
!7459 = !DILocalVariable(name: "fmt", arg: 2, scope: !7456, file: !292, line: 604, type: !116)
!7460 = !DILocation(line: 604, column: 30, scope: !7456)
!7461 = !DILocation(line: 606, column: 27, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7456, file: !292, line: 606, column: 7)
!7463 = !DILocation(line: 606, column: 8, scope: !7462)
!7464 = !DILocation(line: 606, column: 7, scope: !7456)
!7465 = !DILocalVariable(name: "err", scope: !7466, file: !292, line: 608, type: !7)
!7466 = distinct !DILexicalBlock(scope: !7462, file: !292, line: 607, column: 5)
!7467 = !DILocation(line: 608, column: 11, scope: !7466)
!7468 = !DILocation(line: 608, column: 17, scope: !7466)
!7469 = !DILocalVariable(name: "ap", scope: !7466, file: !292, line: 609, type: !453)
!7470 = !DILocation(line: 609, column: 15, scope: !7466)
!7471 = !DILocation(line: 612, column: 7, scope: !7466)
!7472 = !DILocation(line: 613, column: 18, scope: !7466)
!7473 = !DILocation(line: 613, column: 23, scope: !7466)
!7474 = !DILocation(line: 613, column: 28, scope: !7466)
!7475 = !DILocation(line: 613, column: 7, scope: !7466)
!7476 = !DILocation(line: 614, column: 7, scope: !7466)
!7477 = !DILocation(line: 615, column: 5, scope: !7466)
!7478 = !DILocation(line: 616, column: 1, scope: !7456)
!7479 = distinct !DISubprogram(name: "copy_attr_quote", scope: !292, file: !292, line: 632, type: !7341, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7480 = !DILocalVariable(name: "ctx", arg: 1, scope: !7479, file: !292, line: 632, type: !7338)
!7481 = !DILocation(line: 632, column: 40, scope: !7479)
!7482 = !DILocalVariable(name: "str", arg: 2, scope: !7479, file: !292, line: 632, type: !116)
!7483 = !DILocation(line: 632, column: 68, scope: !7479)
!7484 = !DILocation(line: 634, column: 10, scope: !7479)
!7485 = !DILocation(line: 634, column: 3, scope: !7479)
!7486 = distinct !DISubprogram(name: "copy_attr_free", scope: !292, file: !292, line: 638, type: !7345, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7487 = !DILocalVariable(name: "ctx", arg: 1, scope: !7486, file: !292, line: 638, type: !7338)
!7488 = !DILocation(line: 638, column: 39, scope: !7486)
!7489 = !DILocalVariable(name: "str", arg: 2, scope: !7486, file: !292, line: 639, type: !116)
!7490 = !DILocation(line: 639, column: 29, scope: !7486)
!7491 = !DILocation(line: 641, column: 1, scope: !7486)
!7492 = distinct !DISubprogram(name: "check_selinux_attr", scope: !292, file: !292, line: 649, type: !7493, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!7, !116, !7338}
!7495 = !DILocalVariable(name: "name", arg: 1, scope: !7492, file: !292, line: 649, type: !116)
!7496 = !DILocation(line: 649, column: 33, scope: !7492)
!7497 = !DILocalVariable(name: "ctx", arg: 2, scope: !7492, file: !292, line: 649, type: !7338)
!7498 = !DILocation(line: 649, column: 61, scope: !7492)
!7499 = !DILocation(line: 651, column: 10, scope: !7492)
!7500 = !DILocation(line: 652, column: 10, scope: !7492)
!7501 = !DILocation(line: 652, column: 42, scope: !7492)
!7502 = !DILocation(line: 652, column: 48, scope: !7492)
!7503 = !DILocation(line: 652, column: 13, scope: !7492)
!7504 = !DILocation(line: 0, scope: !7492)
!7505 = !DILocation(line: 651, column: 3, scope: !7492)
!7506 = distinct !DISubprogram(name: "owner_failure_ok", scope: !292, file: !292, line: 3037, type: !4043, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7507 = !DILocalVariable(name: "x", arg: 1, scope: !7506, file: !292, line: 3037, type: !3742)
!7508 = !DILocation(line: 3037, column: 44, scope: !7506)
!7509 = !DILocation(line: 3039, column: 12, scope: !7506)
!7510 = !DILocation(line: 3039, column: 18, scope: !7506)
!7511 = !DILocation(line: 3039, column: 27, scope: !7506)
!7512 = !DILocation(line: 3039, column: 30, scope: !7506)
!7513 = !DILocation(line: 3039, column: 36, scope: !7506)
!7514 = !DILocation(line: 3039, column: 47, scope: !7506)
!7515 = !DILocation(line: 3039, column: 51, scope: !7506)
!7516 = !DILocation(line: 3039, column: 54, scope: !7506)
!7517 = !DILocation(line: 3039, column: 50, scope: !7506)
!7518 = !DILocation(line: 0, scope: !7506)
!7519 = !DILocation(line: 3039, column: 3, scope: !7506)
!7520 = distinct !DISubprogram(name: "clone_file", scope: !292, file: !292, line: 334, type: !1034, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7521 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !7520, file: !292, line: 334, type: !7)
!7522 = !DILocation(line: 334, column: 17, scope: !7520)
!7523 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7520, file: !292, line: 334, type: !7)
!7524 = !DILocation(line: 334, column: 30, scope: !7520)
!7525 = !DILocation(line: 337, column: 17, scope: !7520)
!7526 = !DILocation(line: 337, column: 35, scope: !7520)
!7527 = !DILocation(line: 337, column: 10, scope: !7520)
!7528 = !DILocation(line: 337, column: 3, scope: !7520)
!7529 = distinct !DISubprogram(name: "io_blksize", scope: !7530, file: !7530, line: 75, type: !7531, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7530 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!55, !338}
!7533 = !DILocalVariable(name: "sb", arg: 1, scope: !7529, file: !7530, line: 75, type: !338)
!7534 = !DILocation(line: 75, column: 25, scope: !7529)
!7535 = !DILocation(line: 77, column: 10, scope: !7529)
!7536 = !DILocation(line: 77, column: 3, scope: !7529)
!7537 = distinct !DISubprogram(name: "is_probably_sparse", scope: !292, file: !292, line: 995, type: !7538, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!142, !391}
!7540 = !DILocalVariable(name: "sb", arg: 1, scope: !7537, file: !292, line: 995, type: !391)
!7541 = !DILocation(line: 995, column: 40, scope: !7537)
!7542 = !DILocation(line: 998, column: 14, scope: !7537)
!7543 = !DILocation(line: 999, column: 11, scope: !7537)
!7544 = !DILocation(line: 999, column: 14, scope: !7537)
!7545 = !DILocation(line: 999, column: 33, scope: !7537)
!7546 = !DILocation(line: 999, column: 37, scope: !7537)
!7547 = !DILocation(line: 999, column: 45, scope: !7537)
!7548 = !DILocation(line: 999, column: 31, scope: !7537)
!7549 = !DILocation(line: 0, scope: !7537)
!7550 = !DILocation(line: 997, column: 3, scope: !7537)
!7551 = distinct !DISubprogram(name: "ptr_align", scope: !212, file: !212, line: 498, type: !7552, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!53, !709, !55}
!7554 = !DILocalVariable(name: "ptr", arg: 1, scope: !7551, file: !212, line: 498, type: !709)
!7555 = !DILocation(line: 498, column: 24, scope: !7551)
!7556 = !DILocalVariable(name: "alignment", arg: 2, scope: !7551, file: !212, line: 498, type: !55)
!7557 = !DILocation(line: 498, column: 36, scope: !7551)
!7558 = !DILocalVariable(name: "p0", scope: !7551, file: !212, line: 500, type: !116)
!7559 = !DILocation(line: 500, column: 15, scope: !7551)
!7560 = !DILocation(line: 500, column: 20, scope: !7551)
!7561 = !DILocalVariable(name: "p1", scope: !7551, file: !212, line: 501, type: !116)
!7562 = !DILocation(line: 501, column: 15, scope: !7551)
!7563 = !DILocation(line: 501, column: 20, scope: !7551)
!7564 = !DILocation(line: 501, column: 25, scope: !7551)
!7565 = !DILocation(line: 501, column: 23, scope: !7551)
!7566 = !DILocation(line: 501, column: 35, scope: !7551)
!7567 = !DILocation(line: 502, column: 20, scope: !7551)
!7568 = !DILocation(line: 502, column: 34, scope: !7551)
!7569 = !DILocation(line: 502, column: 25, scope: !7551)
!7570 = !DILocation(line: 502, column: 39, scope: !7551)
!7571 = !DILocation(line: 502, column: 37, scope: !7551)
!7572 = !DILocation(line: 502, column: 23, scope: !7551)
!7573 = !DILocation(line: 502, column: 3, scope: !7551)
!7574 = distinct !DISubprogram(name: "extent_copy", scope: !292, file: !292, line: 387, type: !7575, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!142, !7, !7, !9, !55, !55, !295, !89, !116, !116, !4011}
!7577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !438, line: 36, size: 384, elements: !7578)
!7578 = !{!7579, !7580, !7581, !7582, !7583, !7584, !7585}
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !7577, file: !438, line: 39, baseType: !7, size: 32)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !7577, file: !438, line: 42, baseType: !295, size: 64, offset: 64)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !7577, file: !438, line: 45, baseType: !70, size: 32, offset: 128)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !7577, file: !438, line: 48, baseType: !55, size: 64, offset: 192)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !7577, file: !438, line: 52, baseType: !142, size: 8, offset: 256)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !7577, file: !438, line: 55, baseType: !142, size: 8, offset: 264)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !7577, file: !438, line: 58, baseType: !436, size: 64, offset: 320)
!7586 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7574, file: !292, line: 387, type: !7)
!7587 = !DILocation(line: 387, column: 18, scope: !7574)
!7588 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7574, file: !292, line: 387, type: !7)
!7589 = !DILocation(line: 387, column: 30, scope: !7574)
!7590 = !DILocalVariable(name: "buf", arg: 3, scope: !7574, file: !292, line: 387, type: !9)
!7591 = !DILocation(line: 387, column: 45, scope: !7574)
!7592 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7574, file: !292, line: 387, type: !55)
!7593 = !DILocation(line: 387, column: 57, scope: !7574)
!7594 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7574, file: !292, line: 388, type: !55)
!7595 = !DILocation(line: 388, column: 21, scope: !7574)
!7596 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !7574, file: !292, line: 388, type: !295)
!7597 = !DILocation(line: 388, column: 38, scope: !7574)
!7598 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !7574, file: !292, line: 389, type: !89)
!7599 = !DILocation(line: 389, column: 31, scope: !7574)
!7600 = !DILocalVariable(name: "src_name", arg: 8, scope: !7574, file: !292, line: 390, type: !116)
!7601 = !DILocation(line: 390, column: 26, scope: !7574)
!7602 = !DILocalVariable(name: "dst_name", arg: 9, scope: !7574, file: !292, line: 390, type: !116)
!7603 = !DILocation(line: 390, column: 48, scope: !7574)
!7604 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !7574, file: !292, line: 391, type: !4011)
!7605 = !DILocation(line: 391, column: 20, scope: !7574)
!7606 = !DILocalVariable(name: "scan", scope: !7574, file: !292, line: 393, type: !7577)
!7607 = !DILocation(line: 393, column: 22, scope: !7574)
!7608 = !DILocalVariable(name: "last_ext_start", scope: !7574, file: !292, line: 394, type: !295)
!7609 = !DILocation(line: 394, column: 9, scope: !7574)
!7610 = !DILocalVariable(name: "last_ext_len", scope: !7574, file: !292, line: 395, type: !295)
!7611 = !DILocation(line: 395, column: 9, scope: !7574)
!7612 = !DILocalVariable(name: "dest_pos", scope: !7574, file: !292, line: 399, type: !295)
!7613 = !DILocation(line: 399, column: 9, scope: !7574)
!7614 = !DILocation(line: 401, column: 21, scope: !7574)
!7615 = !DILocation(line: 401, column: 3, scope: !7574)
!7616 = !DILocation(line: 403, column: 4, scope: !7574)
!7617 = !DILocation(line: 403, column: 24, scope: !7574)
!7618 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7574, file: !292, line: 404, type: !142)
!7619 = !DILocation(line: 404, column: 8, scope: !7574)
!7620 = !DILocation(line: 405, column: 3, scope: !7574)
!7621 = !DILocalVariable(name: "ok", scope: !7622, file: !292, line: 407, type: !142)
!7622 = distinct !DILexicalBlock(scope: !7574, file: !292, line: 406, column: 5)
!7623 = !DILocation(line: 407, column: 12, scope: !7622)
!7624 = !DILocation(line: 407, column: 17, scope: !7622)
!7625 = !DILocation(line: 408, column: 13, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7622, file: !292, line: 408, column: 11)
!7627 = !DILocation(line: 408, column: 11, scope: !7622)
!7628 = !DILocation(line: 410, column: 20, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7630, file: !292, line: 410, column: 15)
!7630 = distinct !DILexicalBlock(scope: !7626, file: !292, line: 409, column: 9)
!7631 = !DILocation(line: 410, column: 15, scope: !7630)
!7632 = !DILocation(line: 411, column: 13, scope: !7629)
!7633 = !DILocation(line: 413, column: 20, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7630, file: !292, line: 413, column: 15)
!7635 = !DILocation(line: 413, column: 15, scope: !7630)
!7636 = !DILocation(line: 415, column: 16, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7634, file: !292, line: 414, column: 13)
!7638 = !DILocation(line: 415, column: 36, scope: !7637)
!7639 = !DILocation(line: 416, column: 15, scope: !7637)
!7640 = !DILocation(line: 419, column: 21, scope: !7630)
!7641 = !DILocation(line: 419, column: 28, scope: !7630)
!7642 = !DILocation(line: 420, column: 18, scope: !7630)
!7643 = !DILocation(line: 419, column: 11, scope: !7630)
!7644 = !DILocation(line: 421, column: 11, scope: !7630)
!7645 = !DILocalVariable(name: "empty_extent", scope: !7622, file: !292, line: 424, type: !142)
!7646 = !DILocation(line: 424, column: 12, scope: !7622)
!7647 = !DILocalVariable(name: "i", scope: !7648, file: !292, line: 425, type: !70)
!7648 = distinct !DILexicalBlock(scope: !7622, file: !292, line: 425, column: 7)
!7649 = !DILocation(line: 425, column: 25, scope: !7648)
!7650 = !DILocation(line: 425, column: 12, scope: !7648)
!7651 = !DILocation(line: 425, column: 32, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7648, file: !292, line: 425, column: 7)
!7653 = !DILocation(line: 425, column: 41, scope: !7652)
!7654 = !DILocation(line: 425, column: 34, scope: !7652)
!7655 = !DILocation(line: 425, column: 50, scope: !7652)
!7656 = !DILocation(line: 425, column: 53, scope: !7652)
!7657 = !DILocation(line: 425, column: 7, scope: !7648)
!7658 = !DILocalVariable(name: "ext_start", scope: !7659, file: !292, line: 427, type: !295)
!7659 = distinct !DILexicalBlock(scope: !7652, file: !292, line: 426, column: 9)
!7660 = !DILocation(line: 427, column: 17, scope: !7659)
!7661 = !DILocalVariable(name: "ext_len", scope: !7659, file: !292, line: 428, type: !295)
!7662 = !DILocation(line: 428, column: 17, scope: !7659)
!7663 = !DILocalVariable(name: "ext_hole_size", scope: !7659, file: !292, line: 429, type: !295)
!7664 = !DILocation(line: 429, column: 17, scope: !7659)
!7665 = !DILocation(line: 431, column: 15, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7659, file: !292, line: 431, column: 15)
!7667 = !DILocation(line: 431, column: 24, scope: !7666)
!7668 = !DILocation(line: 431, column: 17, scope: !7666)
!7669 = !DILocation(line: 431, column: 15, scope: !7659)
!7670 = !DILocation(line: 433, column: 32, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7666, file: !292, line: 432, column: 13)
!7672 = !DILocation(line: 433, column: 41, scope: !7671)
!7673 = !DILocation(line: 433, column: 27, scope: !7671)
!7674 = !DILocation(line: 433, column: 44, scope: !7671)
!7675 = !DILocation(line: 433, column: 25, scope: !7671)
!7676 = !DILocation(line: 434, column: 30, scope: !7671)
!7677 = !DILocation(line: 434, column: 39, scope: !7671)
!7678 = !DILocation(line: 434, column: 25, scope: !7671)
!7679 = !DILocation(line: 434, column: 42, scope: !7671)
!7680 = !DILocation(line: 434, column: 23, scope: !7671)
!7681 = !DILocation(line: 435, column: 13, scope: !7671)
!7682 = !DILocation(line: 438, column: 16, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7666, file: !292, line: 437, column: 13)
!7684 = !DILocation(line: 439, column: 27, scope: !7683)
!7685 = !DILocation(line: 439, column: 49, scope: !7683)
!7686 = !DILocation(line: 439, column: 58, scope: !7683)
!7687 = !DILocation(line: 439, column: 44, scope: !7683)
!7688 = !DILocation(line: 439, column: 61, scope: !7683)
!7689 = !DILocation(line: 439, column: 42, scope: !7683)
!7690 = !DILocation(line: 439, column: 25, scope: !7683)
!7691 = !DILocation(line: 440, column: 23, scope: !7683)
!7692 = !DILocation(line: 450, column: 15, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7659, file: !292, line: 450, column: 15)
!7694 = !DILocation(line: 450, column: 32, scope: !7693)
!7695 = !DILocation(line: 450, column: 44, scope: !7693)
!7696 = !DILocation(line: 450, column: 42, scope: !7693)
!7697 = !DILocation(line: 450, column: 30, scope: !7693)
!7698 = !DILocation(line: 450, column: 15, scope: !7659)
!7699 = !DILocation(line: 452, column: 19, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7701, file: !292, line: 452, column: 19)
!7701 = distinct !DILexicalBlock(scope: !7693, file: !292, line: 451, column: 13)
!7702 = !DILocation(line: 452, column: 36, scope: !7700)
!7703 = !DILocation(line: 452, column: 34, scope: !7700)
!7704 = !DILocation(line: 452, column: 19, scope: !7701)
!7705 = !DILocation(line: 453, column: 29, scope: !7700)
!7706 = !DILocation(line: 453, column: 27, scope: !7700)
!7707 = !DILocation(line: 453, column: 17, scope: !7700)
!7708 = !DILocation(line: 454, column: 25, scope: !7701)
!7709 = !DILocation(line: 454, column: 42, scope: !7701)
!7710 = !DILocation(line: 454, column: 40, scope: !7701)
!7711 = !DILocation(line: 454, column: 23, scope: !7701)
!7712 = !DILocation(line: 455, column: 13, scope: !7701)
!7713 = !DILocation(line: 457, column: 27, scope: !7659)
!7714 = !DILocation(line: 457, column: 39, scope: !7659)
!7715 = !DILocation(line: 457, column: 37, scope: !7659)
!7716 = !DILocation(line: 457, column: 56, scope: !7659)
!7717 = !DILocation(line: 457, column: 54, scope: !7659)
!7718 = !DILocation(line: 457, column: 25, scope: !7659)
!7719 = !DILocation(line: 459, column: 29, scope: !7659)
!7720 = !DILocation(line: 461, column: 15, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7659, file: !292, line: 461, column: 15)
!7722 = !DILocation(line: 461, column: 15, scope: !7659)
!7723 = !DILocation(line: 463, column: 26, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7725, file: !292, line: 463, column: 19)
!7725 = distinct !DILexicalBlock(scope: !7721, file: !292, line: 462, column: 13)
!7726 = !DILocation(line: 463, column: 34, scope: !7724)
!7727 = !DILocation(line: 463, column: 19, scope: !7724)
!7728 = !DILocation(line: 463, column: 55, scope: !7724)
!7729 = !DILocation(line: 463, column: 19, scope: !7725)
!7730 = !DILocation(line: 465, column: 29, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7724, file: !292, line: 464, column: 17)
!7732 = !DILocation(line: 465, column: 36, scope: !7731)
!7733 = !DILocation(line: 465, column: 58, scope: !7731)
!7734 = !DILocation(line: 465, column: 19, scope: !7731)
!7735 = !DILabel(scope: !7731, name: "fail", file: !292, line: 466)
!7736 = !DILocation(line: 466, column: 17, scope: !7731)
!7737 = !DILocation(line: 467, column: 19, scope: !7731)
!7738 = !DILocation(line: 468, column: 19, scope: !7731)
!7739 = !DILocation(line: 471, column: 20, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7725, file: !292, line: 471, column: 19)
!7741 = !DILocation(line: 471, column: 33, scope: !7740)
!7742 = !DILocation(line: 471, column: 36, scope: !7740)
!7743 = !DILocation(line: 471, column: 48, scope: !7740)
!7744 = !DILocation(line: 472, column: 19, scope: !7740)
!7745 = !DILocation(line: 472, column: 24, scope: !7740)
!7746 = !DILocation(line: 472, column: 37, scope: !7740)
!7747 = !DILocation(line: 472, column: 40, scope: !7740)
!7748 = !DILocation(line: 472, column: 52, scope: !7740)
!7749 = !DILocation(line: 471, column: 19, scope: !7725)
!7750 = !DILocation(line: 474, column: 38, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !292, line: 474, column: 23)
!7752 = distinct !DILexicalBlock(scope: !7740, file: !292, line: 473, column: 17)
!7753 = !DILocation(line: 474, column: 47, scope: !7751)
!7754 = !DILocation(line: 475, column: 38, scope: !7751)
!7755 = !DILocation(line: 475, column: 50, scope: !7751)
!7756 = !DILocation(line: 476, column: 38, scope: !7751)
!7757 = !DILocation(line: 474, column: 25, scope: !7751)
!7758 = !DILocation(line: 474, column: 23, scope: !7752)
!7759 = !DILocation(line: 477, column: 21, scope: !7751)
!7760 = !DILocation(line: 478, column: 37, scope: !7752)
!7761 = !DILocation(line: 479, column: 17, scope: !7752)
!7762 = !DILocalVariable(name: "nzeros", scope: !7763, file: !292, line: 485, type: !295)
!7763 = distinct !DILexicalBlock(scope: !7740, file: !292, line: 481, column: 17)
!7764 = !DILocation(line: 485, column: 25, scope: !7763)
!7765 = !DILocation(line: 485, column: 34, scope: !7763)
!7766 = !DILocation(line: 486, column: 23, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7763, file: !292, line: 486, column: 23)
!7768 = !DILocation(line: 486, column: 23, scope: !7763)
!7769 = !DILocation(line: 487, column: 30, scope: !7767)
!7770 = !DILocation(line: 487, column: 28, scope: !7767)
!7771 = !DILocation(line: 487, column: 21, scope: !7767)
!7772 = !DILocation(line: 489, column: 38, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7763, file: !292, line: 489, column: 23)
!7774 = !DILocation(line: 489, column: 47, scope: !7773)
!7775 = !DILocation(line: 489, column: 25, scope: !7773)
!7776 = !DILocation(line: 489, column: 23, scope: !7763)
!7777 = !DILocation(line: 491, column: 33, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7773, file: !292, line: 490, column: 21)
!7779 = !DILocation(line: 491, column: 40, scope: !7778)
!7780 = !DILocation(line: 492, column: 30, scope: !7778)
!7781 = !DILocation(line: 491, column: 23, scope: !7778)
!7782 = !DILocation(line: 493, column: 23, scope: !7778)
!7783 = !DILocation(line: 496, column: 30, scope: !7763)
!7784 = !DILocation(line: 496, column: 28, scope: !7763)
!7785 = !DILocation(line: 498, column: 13, scope: !7725)
!7786 = !DILocation(line: 500, column: 28, scope: !7659)
!7787 = !DILocation(line: 500, column: 26, scope: !7659)
!7788 = !DILocalVariable(name: "n_read", scope: !7789, file: !292, line: 517, type: !295)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !292, line: 516, column: 13)
!7790 = distinct !DILexicalBlock(scope: !7659, file: !292, line: 508, column: 15)
!7791 = !DILocation(line: 517, column: 21, scope: !7789)
!7792 = !DILocation(line: 518, column: 28, scope: !7789)
!7793 = !DILocation(line: 519, column: 30, scope: !7789)
!7794 = !DILocation(line: 519, column: 28, scope: !7789)
!7795 = !DILocalVariable(name: "read_hole", scope: !7789, file: !292, line: 520, type: !142)
!7796 = !DILocation(line: 520, column: 20, scope: !7789)
!7797 = !DILocation(line: 522, column: 35, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7789, file: !292, line: 522, column: 20)
!7799 = !DILocation(line: 522, column: 43, scope: !7798)
!7800 = !DILocation(line: 522, column: 52, scope: !7798)
!7801 = !DILocation(line: 522, column: 57, scope: !7798)
!7802 = !DILocation(line: 523, column: 35, scope: !7798)
!7803 = !DILocation(line: 523, column: 47, scope: !7798)
!7804 = !DILocation(line: 523, column: 66, scope: !7798)
!7805 = !DILocation(line: 524, column: 41, scope: !7798)
!7806 = !DILocation(line: 524, column: 51, scope: !7798)
!7807 = !DILocation(line: 524, column: 61, scope: !7798)
!7808 = !DILocation(line: 522, column: 22, scope: !7798)
!7809 = !DILocation(line: 522, column: 20, scope: !7789)
!7810 = !DILocation(line: 526, column: 17, scope: !7798)
!7811 = !DILocation(line: 528, column: 26, scope: !7789)
!7812 = !DILocation(line: 528, column: 38, scope: !7789)
!7813 = !DILocation(line: 528, column: 36, scope: !7789)
!7814 = !DILocation(line: 528, column: 24, scope: !7789)
!7815 = !DILocation(line: 529, column: 19, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7789, file: !292, line: 529, column: 19)
!7817 = !DILocation(line: 529, column: 19, scope: !7789)
!7818 = !DILocation(line: 530, column: 37, scope: !7816)
!7819 = !DILocation(line: 530, column: 35, scope: !7816)
!7820 = !DILocation(line: 530, column: 17, scope: !7816)
!7821 = !DILocation(line: 538, column: 15, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7659, file: !292, line: 538, column: 15)
!7823 = !DILocation(line: 538, column: 27, scope: !7822)
!7824 = !DILocation(line: 538, column: 24, scope: !7822)
!7825 = !DILocation(line: 538, column: 15, scope: !7659)
!7826 = !DILocation(line: 540, column: 20, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7822, file: !292, line: 539, column: 13)
!7828 = !DILocation(line: 540, column: 37, scope: !7827)
!7829 = !DILocation(line: 541, column: 15, scope: !7827)
!7830 = !DILocation(line: 543, column: 9, scope: !7659)
!7831 = !DILocation(line: 425, column: 68, scope: !7652)
!7832 = !DILocation(line: 425, column: 7, scope: !7652)
!7833 = distinct !{!7833, !7657, !7834}
!7834 = !DILocation(line: 543, column: 9, scope: !7648)
!7835 = !DILocation(line: 546, column: 7, scope: !7622)
!7836 = !DILocation(line: 548, column: 5, scope: !7622)
!7837 = !DILocation(line: 549, column: 17, scope: !7574)
!7838 = !DILocation(line: 549, column: 10, scope: !7574)
!7839 = distinct !{!7839, !7620, !7840}
!7840 = !DILocation(line: 549, column: 33, scope: !7574)
!7841 = !DILocation(line: 559, column: 8, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7574, file: !292, line: 559, column: 7)
!7843 = !DILocation(line: 559, column: 19, scope: !7842)
!7844 = !DILocation(line: 559, column: 17, scope: !7842)
!7845 = !DILocation(line: 559, column: 34, scope: !7842)
!7846 = !DILocation(line: 559, column: 37, scope: !7842)
!7847 = !DILocation(line: 560, column: 7, scope: !7842)
!7848 = !DILocation(line: 560, column: 11, scope: !7842)
!7849 = !DILocation(line: 560, column: 23, scope: !7842)
!7850 = !DILocation(line: 559, column: 7, scope: !7574)
!7851 = !DILocation(line: 561, column: 24, scope: !7842)
!7852 = !DILocation(line: 561, column: 33, scope: !7842)
!7853 = !DILocation(line: 561, column: 13, scope: !7842)
!7854 = !DILocation(line: 562, column: 28, scope: !7842)
!7855 = !DILocation(line: 562, column: 37, scope: !7842)
!7856 = !DILocation(line: 562, column: 54, scope: !7842)
!7857 = !DILocation(line: 562, column: 52, scope: !7842)
!7858 = !DILocation(line: 562, column: 15, scope: !7842)
!7859 = !DILocation(line: 564, column: 17, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7842, file: !292, line: 563, column: 5)
!7861 = !DILocation(line: 564, column: 24, scope: !7860)
!7862 = !DILocation(line: 564, column: 50, scope: !7860)
!7863 = !DILocation(line: 564, column: 7, scope: !7860)
!7864 = !DILocation(line: 565, column: 7, scope: !7860)
!7865 = !DILocation(line: 568, column: 7, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7574, file: !292, line: 568, column: 7)
!7867 = !DILocation(line: 568, column: 19, scope: !7866)
!7868 = !DILocation(line: 568, column: 36, scope: !7866)
!7869 = !DILocation(line: 568, column: 39, scope: !7866)
!7870 = !DILocation(line: 568, column: 50, scope: !7866)
!7871 = !DILocation(line: 568, column: 48, scope: !7866)
!7872 = !DILocation(line: 569, column: 7, scope: !7866)
!7873 = !DILocation(line: 569, column: 22, scope: !7866)
!7874 = !DILocation(line: 569, column: 31, scope: !7866)
!7875 = !DILocation(line: 569, column: 41, scope: !7866)
!7876 = !DILocation(line: 569, column: 58, scope: !7866)
!7877 = !DILocation(line: 569, column: 56, scope: !7866)
!7878 = !DILocation(line: 569, column: 10, scope: !7866)
!7879 = !DILocation(line: 569, column: 68, scope: !7866)
!7880 = !DILocation(line: 568, column: 7, scope: !7574)
!7881 = !DILocation(line: 571, column: 17, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7866, file: !292, line: 570, column: 5)
!7883 = !DILocation(line: 571, column: 24, scope: !7882)
!7884 = !DILocation(line: 571, column: 52, scope: !7882)
!7885 = !DILocation(line: 571, column: 7, scope: !7882)
!7886 = !DILocation(line: 572, column: 7, scope: !7882)
!7887 = !DILocation(line: 575, column: 3, scope: !7574)
!7888 = !DILocation(line: 576, column: 1, scope: !7574)
!7889 = distinct !DISubprogram(name: "sparse_copy", scope: !292, file: !292, line: 224, type: !7890, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!7890 = !DISubroutineType(types: !7891)
!7891 = !{!142, !7, !7, !9, !55, !55, !142, !116, !116, !486, !7892, !4011}
!7892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!7893 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7889, file: !292, line: 224, type: !7)
!7894 = !DILocation(line: 224, column: 18, scope: !7889)
!7895 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7889, file: !292, line: 224, type: !7)
!7896 = !DILocation(line: 224, column: 30, scope: !7889)
!7897 = !DILocalVariable(name: "buf", arg: 3, scope: !7889, file: !292, line: 224, type: !9)
!7898 = !DILocation(line: 224, column: 45, scope: !7889)
!7899 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7889, file: !292, line: 224, type: !55)
!7900 = !DILocation(line: 224, column: 57, scope: !7889)
!7901 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7889, file: !292, line: 225, type: !55)
!7902 = !DILocation(line: 225, column: 21, scope: !7889)
!7903 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !7889, file: !292, line: 225, type: !142)
!7904 = !DILocation(line: 225, column: 37, scope: !7889)
!7905 = !DILocalVariable(name: "src_name", arg: 7, scope: !7889, file: !292, line: 226, type: !116)
!7906 = !DILocation(line: 226, column: 26, scope: !7889)
!7907 = !DILocalVariable(name: "dst_name", arg: 8, scope: !7889, file: !292, line: 226, type: !116)
!7908 = !DILocation(line: 226, column: 48, scope: !7889)
!7909 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !7889, file: !292, line: 227, type: !486)
!7910 = !DILocation(line: 227, column: 24, scope: !7889)
!7911 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !7889, file: !292, line: 227, type: !7892)
!7912 = !DILocation(line: 227, column: 43, scope: !7889)
!7913 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !7889, file: !292, line: 228, type: !4011)
!7914 = !DILocation(line: 228, column: 20, scope: !7889)
!7915 = !DILocation(line: 230, column: 4, scope: !7889)
!7916 = !DILocation(line: 230, column: 25, scope: !7889)
!7917 = !DILocation(line: 231, column: 4, scope: !7889)
!7918 = !DILocation(line: 231, column: 17, scope: !7889)
!7919 = !DILocalVariable(name: "make_hole", scope: !7889, file: !292, line: 232, type: !142)
!7920 = !DILocation(line: 232, column: 8, scope: !7889)
!7921 = !DILocalVariable(name: "psize", scope: !7889, file: !292, line: 233, type: !295)
!7922 = !DILocation(line: 233, column: 9, scope: !7889)
!7923 = !DILocation(line: 235, column: 3, scope: !7889)
!7924 = !DILocation(line: 235, column: 10, scope: !7889)
!7925 = !DILocalVariable(name: "n_read", scope: !7926, file: !292, line: 237, type: !446)
!7926 = distinct !DILexicalBlock(scope: !7889, file: !292, line: 236, column: 5)
!7927 = !DILocation(line: 237, column: 15, scope: !7926)
!7928 = !DILocation(line: 237, column: 30, scope: !7926)
!7929 = !DILocation(line: 237, column: 38, scope: !7926)
!7930 = !DILocation(line: 237, column: 43, scope: !7926)
!7931 = !DILocation(line: 237, column: 24, scope: !7926)
!7932 = !DILocation(line: 238, column: 11, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7926, file: !292, line: 238, column: 11)
!7934 = !DILocation(line: 238, column: 18, scope: !7933)
!7935 = !DILocation(line: 238, column: 11, scope: !7926)
!7936 = !DILocation(line: 240, column: 15, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !292, line: 240, column: 15)
!7938 = distinct !DILexicalBlock(scope: !7933, file: !292, line: 239, column: 9)
!7939 = !DILocation(line: 240, column: 21, scope: !7937)
!7940 = !DILocation(line: 240, column: 15, scope: !7938)
!7941 = !DILocation(line: 241, column: 13, scope: !7937)
!7942 = distinct !{!7942, !7923, !7943}
!7943 = !DILocation(line: 321, column: 5, scope: !7889)
!7944 = !DILocation(line: 242, column: 21, scope: !7938)
!7945 = !DILocation(line: 242, column: 28, scope: !7938)
!7946 = !DILocation(line: 242, column: 51, scope: !7938)
!7947 = !DILocation(line: 242, column: 11, scope: !7938)
!7948 = !DILocation(line: 243, column: 11, scope: !7938)
!7949 = !DILocation(line: 245, column: 11, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7926, file: !292, line: 245, column: 11)
!7951 = !DILocation(line: 245, column: 18, scope: !7950)
!7952 = !DILocation(line: 245, column: 11, scope: !7926)
!7953 = !DILocation(line: 246, column: 9, scope: !7950)
!7954 = !DILocation(line: 247, column: 21, scope: !7926)
!7955 = !DILocation(line: 247, column: 18, scope: !7926)
!7956 = !DILocation(line: 248, column: 24, scope: !7926)
!7957 = !DILocation(line: 248, column: 8, scope: !7926)
!7958 = !DILocation(line: 248, column: 21, scope: !7926)
!7959 = !DILocalVariable(name: "csize", scope: !7926, file: !292, line: 251, type: !55)
!7960 = !DILocation(line: 251, column: 14, scope: !7926)
!7961 = !DILocation(line: 251, column: 22, scope: !7926)
!7962 = !DILocation(line: 251, column: 34, scope: !7926)
!7963 = !DILocation(line: 251, column: 46, scope: !7926)
!7964 = !DILocalVariable(name: "cbuf", scope: !7926, file: !292, line: 252, type: !9)
!7965 = !DILocation(line: 252, column: 13, scope: !7926)
!7966 = !DILocation(line: 252, column: 20, scope: !7926)
!7967 = !DILocalVariable(name: "pbuf", scope: !7926, file: !292, line: 253, type: !9)
!7968 = !DILocation(line: 253, column: 13, scope: !7926)
!7969 = !DILocation(line: 253, column: 20, scope: !7926)
!7970 = !DILocation(line: 255, column: 7, scope: !7926)
!7971 = !DILocation(line: 255, column: 14, scope: !7926)
!7972 = !DILocalVariable(name: "prev_hole", scope: !7973, file: !292, line: 257, type: !142)
!7973 = distinct !DILexicalBlock(scope: !7926, file: !292, line: 256, column: 9)
!7974 = !DILocation(line: 257, column: 16, scope: !7973)
!7975 = !DILocation(line: 257, column: 28, scope: !7973)
!7976 = !DILocation(line: 258, column: 19, scope: !7973)
!7977 = !DILocation(line: 258, column: 17, scope: !7973)
!7978 = !DILocation(line: 260, column: 15, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7973, file: !292, line: 260, column: 15)
!7980 = !DILocation(line: 260, column: 25, scope: !7979)
!7981 = !DILocation(line: 260, column: 28, scope: !7979)
!7982 = !DILocation(line: 260, column: 15, scope: !7973)
!7983 = !DILocation(line: 261, column: 33, scope: !7979)
!7984 = !DILocation(line: 261, column: 39, scope: !7979)
!7985 = !DILocation(line: 261, column: 25, scope: !7979)
!7986 = !DILocation(line: 261, column: 23, scope: !7979)
!7987 = !DILocation(line: 261, column: 13, scope: !7979)
!7988 = !DILocalVariable(name: "transition", scope: !7973, file: !292, line: 263, type: !142)
!7989 = !DILocation(line: 263, column: 16, scope: !7973)
!7990 = !DILocation(line: 263, column: 30, scope: !7973)
!7991 = !DILocation(line: 263, column: 43, scope: !7973)
!7992 = !DILocation(line: 263, column: 40, scope: !7973)
!7993 = !DILocation(line: 263, column: 54, scope: !7973)
!7994 = !DILocation(line: 263, column: 57, scope: !7973)
!7995 = !DILocation(line: 0, scope: !7973)
!7996 = !DILocalVariable(name: "last_chunk", scope: !7973, file: !292, line: 264, type: !142)
!7997 = !DILocation(line: 264, column: 16, scope: !7973)
!7998 = !DILocation(line: 264, column: 30, scope: !7973)
!7999 = !DILocation(line: 264, column: 40, scope: !7973)
!8000 = !DILocation(line: 264, column: 37, scope: !7973)
!8001 = !DILocation(line: 264, column: 46, scope: !7973)
!8002 = !DILocation(line: 264, column: 51, scope: !7973)
!8003 = !DILocation(line: 264, column: 62, scope: !7973)
!8004 = !DILocation(line: 264, column: 67, scope: !7973)
!8005 = !DILocation(line: 264, column: 65, scope: !7973)
!8006 = !DILocation(line: 266, column: 15, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !7973, file: !292, line: 266, column: 15)
!8008 = !DILocation(line: 266, column: 26, scope: !8007)
!8009 = !DILocation(line: 266, column: 29, scope: !8007)
!8010 = !DILocation(line: 266, column: 15, scope: !7973)
!8011 = !DILocation(line: 268, column: 21, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !292, line: 268, column: 19)
!8013 = distinct !DILexicalBlock(scope: !8007, file: !292, line: 267, column: 13)
!8014 = !DILocation(line: 268, column: 19, scope: !8013)
!8015 = !DILocation(line: 269, column: 26, scope: !8012)
!8016 = !DILocation(line: 269, column: 23, scope: !8012)
!8017 = !DILocation(line: 269, column: 17, scope: !8012)
!8018 = !DILocation(line: 271, column: 21, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8013, file: !292, line: 271, column: 19)
!8020 = !DILocation(line: 271, column: 19, scope: !8013)
!8021 = !DILocation(line: 273, column: 35, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8023, file: !292, line: 273, column: 23)
!8023 = distinct !DILexicalBlock(scope: !8019, file: !292, line: 272, column: 17)
!8024 = !DILocation(line: 273, column: 44, scope: !8022)
!8025 = !DILocation(line: 273, column: 50, scope: !8022)
!8026 = !DILocation(line: 273, column: 23, scope: !8022)
!8027 = !DILocation(line: 273, column: 60, scope: !8022)
!8028 = !DILocation(line: 273, column: 57, scope: !8022)
!8029 = !DILocation(line: 273, column: 23, scope: !8023)
!8030 = !DILocation(line: 275, column: 33, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8022, file: !292, line: 274, column: 21)
!8032 = !DILocation(line: 275, column: 40, scope: !8031)
!8033 = !DILocation(line: 276, column: 30, scope: !8031)
!8034 = !DILocation(line: 275, column: 23, scope: !8031)
!8035 = !DILocation(line: 277, column: 23, scope: !8031)
!8036 = !DILocation(line: 279, column: 17, scope: !8023)
!8037 = !DILocation(line: 282, column: 38, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !292, line: 282, column: 23)
!8039 = distinct !DILexicalBlock(scope: !8019, file: !292, line: 281, column: 17)
!8040 = !DILocation(line: 282, column: 47, scope: !8038)
!8041 = !DILocation(line: 282, column: 57, scope: !8038)
!8042 = !DILocation(line: 282, column: 70, scope: !8038)
!8043 = !DILocation(line: 282, column: 25, scope: !8038)
!8044 = !DILocation(line: 282, column: 23, scope: !8039)
!8045 = !DILocation(line: 283, column: 21, scope: !8038)
!8046 = !DILocation(line: 286, column: 22, scope: !8013)
!8047 = !DILocation(line: 286, column: 20, scope: !8013)
!8048 = !DILocation(line: 287, column: 23, scope: !8013)
!8049 = !DILocation(line: 287, column: 21, scope: !8013)
!8050 = !DILocation(line: 289, column: 19, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8013, file: !292, line: 289, column: 19)
!8052 = !DILocation(line: 289, column: 19, scope: !8013)
!8053 = !DILocation(line: 291, column: 25, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8055, file: !292, line: 291, column: 23)
!8055 = distinct !DILexicalBlock(scope: !8051, file: !292, line: 290, column: 17)
!8056 = !DILocation(line: 291, column: 23, scope: !8055)
!8057 = !DILocation(line: 292, column: 28, scope: !8054)
!8058 = !DILocation(line: 292, column: 21, scope: !8054)
!8059 = !DILocation(line: 294, column: 23, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8055, file: !292, line: 294, column: 23)
!8061 = !DILocation(line: 294, column: 23, scope: !8055)
!8062 = !DILocation(line: 295, column: 27, scope: !8060)
!8063 = !DILocation(line: 295, column: 21, scope: !8060)
!8064 = !DILocation(line: 297, column: 27, scope: !8060)
!8065 = !DILocation(line: 298, column: 17, scope: !8055)
!8066 = !DILocation(line: 299, column: 13, scope: !8013)
!8067 = !DILocation(line: 302, column: 19, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8069, file: !292, line: 302, column: 19)
!8069 = distinct !DILexicalBlock(scope: !8007, file: !292, line: 301, column: 13)
!8070 = !DILocation(line: 302, column: 40, scope: !8068)
!8071 = !DILocation(line: 302, column: 38, scope: !8068)
!8072 = !DILocation(line: 302, column: 25, scope: !8068)
!8073 = !DILocation(line: 302, column: 19, scope: !8069)
!8074 = !DILocation(line: 303, column: 26, scope: !8068)
!8075 = !DILocation(line: 303, column: 23, scope: !8068)
!8076 = !DILocation(line: 303, column: 17, scope: !8068)
!8077 = !DILocation(line: 306, column: 32, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8068, file: !292, line: 305, column: 17)
!8079 = !DILocation(line: 306, column: 58, scope: !8078)
!8080 = !DILocation(line: 306, column: 19, scope: !8078)
!8081 = !DILocation(line: 307, column: 19, scope: !8078)
!8082 = !DILocation(line: 311, column: 21, scope: !7973)
!8083 = !DILocation(line: 311, column: 18, scope: !7973)
!8084 = !DILocation(line: 312, column: 19, scope: !7973)
!8085 = !DILocation(line: 312, column: 16, scope: !7973)
!8086 = distinct !{!8086, !7970, !8087}
!8087 = !DILocation(line: 313, column: 9, scope: !7926)
!8088 = !DILocation(line: 315, column: 31, scope: !7926)
!8089 = !DILocation(line: 315, column: 8, scope: !7926)
!8090 = !DILocation(line: 315, column: 29, scope: !7926)
!8091 = !DILocation(line: 325, column: 7, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !7889, file: !292, line: 325, column: 7)
!8093 = !DILocation(line: 325, column: 17, scope: !8092)
!8094 = !DILocation(line: 325, column: 35, scope: !8092)
!8095 = !DILocation(line: 325, column: 44, scope: !8092)
!8096 = !DILocation(line: 325, column: 54, scope: !8092)
!8097 = !DILocation(line: 325, column: 67, scope: !8092)
!8098 = !DILocation(line: 325, column: 22, scope: !8092)
!8099 = !DILocation(line: 325, column: 7, scope: !7889)
!8100 = !DILocation(line: 326, column: 5, scope: !8092)
!8101 = !DILocation(line: 328, column: 5, scope: !8092)
!8102 = !DILocation(line: 329, column: 1, scope: !7889)
!8103 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !292, file: !292, line: 977, type: !8104, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!7, !7, !116, !239}
!8106 = !DILocalVariable(name: "desc", arg: 1, scope: !8103, file: !292, line: 977, type: !7)
!8107 = !DILocation(line: 977, column: 23, scope: !8103)
!8108 = !DILocalVariable(name: "name", arg: 2, scope: !8103, file: !292, line: 977, type: !116)
!8109 = !DILocation(line: 977, column: 41, scope: !8103)
!8110 = !DILocalVariable(name: "mode", arg: 3, scope: !8103, file: !292, line: 977, type: !239)
!8111 = !DILocation(line: 977, column: 54, scope: !8103)
!8112 = !DILocation(line: 980, column: 12, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8103, file: !292, line: 980, column: 7)
!8114 = !DILocation(line: 980, column: 9, scope: !8113)
!8115 = !DILocation(line: 980, column: 7, scope: !8103)
!8116 = !DILocation(line: 981, column: 20, scope: !8113)
!8117 = !DILocation(line: 981, column: 26, scope: !8113)
!8118 = !DILocation(line: 981, column: 12, scope: !8113)
!8119 = !DILocation(line: 981, column: 5, scope: !8113)
!8120 = !DILocation(line: 983, column: 18, scope: !8103)
!8121 = !DILocation(line: 983, column: 24, scope: !8103)
!8122 = !DILocation(line: 983, column: 10, scope: !8103)
!8123 = !DILocation(line: 983, column: 3, scope: !8103)
!8124 = !DILocation(line: 984, column: 1, scope: !8103)
!8125 = distinct !DISubprogram(name: "is_nul", scope: !212, file: !212, line: 509, type: !8126, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8126 = !DISubroutineType(types: !8127)
!8127 = !{!142, !709, !55}
!8128 = !DILocalVariable(name: "buf", arg: 1, scope: !8125, file: !212, line: 509, type: !709)
!8129 = !DILocation(line: 509, column: 21, scope: !8125)
!8130 = !DILocalVariable(name: "length", arg: 2, scope: !8125, file: !212, line: 509, type: !55)
!8131 = !DILocation(line: 509, column: 33, scope: !8125)
!8132 = !DILocalVariable(name: "p", scope: !8125, file: !212, line: 511, type: !448)
!8133 = !DILocation(line: 511, column: 24, scope: !8125)
!8134 = !DILocation(line: 511, column: 28, scope: !8125)
!8135 = !DILocalVariable(name: "word", scope: !8125, file: !212, line: 521, type: !450)
!8136 = !DILocation(line: 521, column: 17, scope: !8125)
!8137 = !DILocation(line: 524, column: 9, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8125, file: !212, line: 524, column: 7)
!8139 = !DILocation(line: 524, column: 7, scope: !8125)
!8140 = !DILocation(line: 525, column: 7, scope: !8138)
!8141 = !DILocation(line: 528, column: 3, scope: !8125)
!8142 = !DILocation(line: 528, column: 10, scope: !8125)
!8143 = !DILocation(line: 530, column: 12, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8145, file: !212, line: 530, column: 11)
!8145 = distinct !DILexicalBlock(scope: !8125, file: !212, line: 529, column: 5)
!8146 = !DILocation(line: 530, column: 11, scope: !8144)
!8147 = !DILocation(line: 530, column: 11, scope: !8145)
!8148 = !DILocation(line: 531, column: 9, scope: !8144)
!8149 = !DILocation(line: 532, column: 8, scope: !8145)
!8150 = !DILocation(line: 533, column: 13, scope: !8145)
!8151 = !DILocation(line: 534, column: 13, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8145, file: !212, line: 534, column: 11)
!8153 = !DILocation(line: 534, column: 11, scope: !8145)
!8154 = !DILocation(line: 535, column: 9, scope: !8152)
!8155 = distinct !{!8155, !8141, !8156}
!8156 = !DILocation(line: 536, column: 4, scope: !8125)
!8157 = !DILocation(line: 539, column: 3, scope: !8125)
!8158 = !DILocation(line: 541, column: 22, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !212, line: 540, column: 5)
!8160 = distinct !DILexicalBlock(scope: !8161, file: !212, line: 539, column: 3)
!8161 = distinct !DILexicalBlock(scope: !8125, file: !212, line: 539, column: 3)
!8162 = !DILocation(line: 541, column: 7, scope: !8159)
!8163 = !DILocation(line: 542, column: 11, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !212, line: 542, column: 11)
!8165 = !DILocation(line: 542, column: 11, scope: !8159)
!8166 = !DILocation(line: 543, column: 9, scope: !8164)
!8167 = !DILocation(line: 544, column: 9, scope: !8159)
!8168 = !DILocation(line: 545, column: 14, scope: !8159)
!8169 = !DILocation(line: 546, column: 13, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8159, file: !212, line: 546, column: 11)
!8171 = !DILocation(line: 546, column: 11, scope: !8159)
!8172 = !DILocation(line: 547, column: 9, scope: !8170)
!8173 = !DILocation(line: 548, column: 11, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8159, file: !212, line: 548, column: 11)
!8175 = !DILocation(line: 548, column: 34, scope: !8174)
!8176 = !DILocation(line: 548, column: 11, scope: !8159)
!8177 = !DILocation(line: 549, column: 9, scope: !8174)
!8178 = !DILocation(line: 539, column: 3, scope: !8160)
!8179 = distinct !{!8179, !8180, !8181}
!8180 = !DILocation(line: 539, column: 3, scope: !8161)
!8181 = !DILocation(line: 550, column: 4, scope: !8161)
!8182 = !DILocation(line: 553, column: 19, scope: !8125)
!8183 = !DILocation(line: 553, column: 24, scope: !8125)
!8184 = !DILocation(line: 553, column: 27, scope: !8125)
!8185 = !DILocation(line: 553, column: 11, scope: !8125)
!8186 = !DILocation(line: 553, column: 35, scope: !8125)
!8187 = !DILocation(line: 553, column: 4, scope: !8125)
!8188 = !DILocation(line: 554, column: 1, scope: !8125)
!8189 = distinct !DISubprogram(name: "create_hole", scope: !292, file: !292, line: 188, type: !8190, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8190 = !DISubroutineType(types: !8191)
!8191 = !{!142, !7, !116, !142, !295}
!8192 = !DILocalVariable(name: "fd", arg: 1, scope: !8189, file: !292, line: 188, type: !7)
!8193 = !DILocation(line: 188, column: 18, scope: !8189)
!8194 = !DILocalVariable(name: "name", arg: 2, scope: !8189, file: !292, line: 188, type: !116)
!8195 = !DILocation(line: 188, column: 34, scope: !8189)
!8196 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8189, file: !292, line: 188, type: !142)
!8197 = !DILocation(line: 188, column: 45, scope: !8189)
!8198 = !DILocalVariable(name: "size", arg: 4, scope: !8189, file: !292, line: 188, type: !295)
!8199 = !DILocation(line: 188, column: 64, scope: !8189)
!8200 = !DILocalVariable(name: "file_end", scope: !8189, file: !292, line: 190, type: !295)
!8201 = !DILocation(line: 190, column: 9, scope: !8189)
!8202 = !DILocation(line: 190, column: 27, scope: !8189)
!8203 = !DILocation(line: 190, column: 31, scope: !8189)
!8204 = !DILocation(line: 190, column: 20, scope: !8189)
!8205 = !DILocation(line: 192, column: 7, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8189, file: !292, line: 192, column: 7)
!8207 = !DILocation(line: 192, column: 16, scope: !8206)
!8208 = !DILocation(line: 192, column: 7, scope: !8189)
!8209 = !DILocation(line: 194, column: 17, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8206, file: !292, line: 193, column: 5)
!8211 = !DILocation(line: 194, column: 24, scope: !8210)
!8212 = !DILocation(line: 194, column: 46, scope: !8210)
!8213 = !DILocation(line: 194, column: 7, scope: !8210)
!8214 = !DILocation(line: 195, column: 7, scope: !8210)
!8215 = !DILocation(line: 202, column: 7, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8189, file: !292, line: 202, column: 7)
!8217 = !DILocation(line: 202, column: 19, scope: !8216)
!8218 = !DILocation(line: 202, column: 34, scope: !8216)
!8219 = !DILocation(line: 202, column: 38, scope: !8216)
!8220 = !DILocation(line: 202, column: 49, scope: !8216)
!8221 = !DILocation(line: 202, column: 47, scope: !8216)
!8222 = !DILocation(line: 202, column: 55, scope: !8216)
!8223 = !DILocation(line: 202, column: 22, scope: !8216)
!8224 = !DILocation(line: 202, column: 61, scope: !8216)
!8225 = !DILocation(line: 202, column: 7, scope: !8189)
!8226 = !DILocation(line: 204, column: 17, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8216, file: !292, line: 203, column: 5)
!8228 = !DILocation(line: 204, column: 24, scope: !8227)
!8229 = !DILocation(line: 204, column: 52, scope: !8227)
!8230 = !DILocation(line: 204, column: 7, scope: !8227)
!8231 = !DILocation(line: 205, column: 7, scope: !8227)
!8232 = !DILocation(line: 208, column: 3, scope: !8189)
!8233 = !DILocation(line: 209, column: 1, scope: !8189)
!8234 = distinct !DISubprogram(name: "punch_hole", scope: !292, file: !292, line: 169, type: !8235, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8235 = !DISubroutineType(types: !8236)
!8236 = !{!7, !7, !295, !295}
!8237 = !DILocalVariable(name: "fd", arg: 1, scope: !8234, file: !292, line: 169, type: !7)
!8238 = !DILocation(line: 169, column: 17, scope: !8234)
!8239 = !DILocalVariable(name: "offset", arg: 2, scope: !8234, file: !292, line: 169, type: !295)
!8240 = !DILocation(line: 169, column: 27, scope: !8234)
!8241 = !DILocalVariable(name: "length", arg: 3, scope: !8234, file: !292, line: 169, type: !295)
!8242 = !DILocation(line: 169, column: 41, scope: !8234)
!8243 = !DILocalVariable(name: "ret", scope: !8234, file: !292, line: 171, type: !7)
!8244 = !DILocation(line: 171, column: 7, scope: !8234)
!8245 = !DILocation(line: 175, column: 20, scope: !8234)
!8246 = !DILocation(line: 176, column: 20, scope: !8234)
!8247 = !DILocation(line: 176, column: 28, scope: !8234)
!8248 = !DILocation(line: 175, column: 9, scope: !8234)
!8249 = !DILocation(line: 175, column: 7, scope: !8234)
!8250 = !DILocation(line: 177, column: 7, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8234, file: !292, line: 177, column: 7)
!8252 = !DILocation(line: 177, column: 11, scope: !8251)
!8253 = !DILocation(line: 177, column: 15, scope: !8251)
!8254 = !DILocation(line: 177, column: 31, scope: !8251)
!8255 = !DILocation(line: 177, column: 19, scope: !8251)
!8256 = !DILocation(line: 177, column: 38, scope: !8251)
!8257 = !DILocation(line: 177, column: 41, scope: !8251)
!8258 = !DILocation(line: 177, column: 47, scope: !8251)
!8259 = !DILocation(line: 177, column: 7, scope: !8234)
!8260 = !DILocation(line: 178, column: 9, scope: !8251)
!8261 = !DILocation(line: 178, column: 5, scope: !8251)
!8262 = !DILocation(line: 181, column: 10, scope: !8234)
!8263 = !DILocation(line: 181, column: 3, scope: !8234)
!8264 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !212, file: !212, line: 762, type: !3614, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8265 = !DILocalVariable(name: "err", arg: 1, scope: !8264, file: !212, line: 762, type: !7)
!8266 = !DILocation(line: 762, column: 17, scope: !8264)
!8267 = !DILocation(line: 764, column: 10, scope: !8264)
!8268 = !DILocation(line: 764, column: 14, scope: !8264)
!8269 = !DILocation(line: 764, column: 28, scope: !8264)
!8270 = !DILocation(line: 764, column: 3, scope: !8264)
!8271 = distinct !DISubprogram(name: "extent_scan_free", scope: !438, file: !438, line: 66, type: !8272, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8272 = !DISubroutineType(types: !8273)
!8273 = !{null, !8274}
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7577, size: 64)
!8275 = !DILocalVariable(name: "scan", arg: 1, scope: !8271, file: !438, line: 66, type: !8274)
!8276 = !DILocation(line: 66, column: 39, scope: !8271)
!8277 = !DILocation(line: 68, column: 9, scope: !8271)
!8278 = !DILocation(line: 68, column: 15, scope: !8271)
!8279 = !DILocation(line: 68, column: 3, scope: !8271)
!8280 = !DILocation(line: 69, column: 3, scope: !8271)
!8281 = !DILocation(line: 69, column: 9, scope: !8271)
!8282 = !DILocation(line: 69, column: 18, scope: !8271)
!8283 = !DILocation(line: 70, column: 3, scope: !8271)
!8284 = !DILocation(line: 70, column: 9, scope: !8271)
!8285 = !DILocation(line: 70, column: 18, scope: !8271)
!8286 = !DILocation(line: 71, column: 1, scope: !8271)
!8287 = !DILocalVariable(name: "fd", arg: 1, scope: !474, file: !292, line: 349, type: !7)
!8288 = !DILocation(line: 349, column: 18, scope: !474)
!8289 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !474, file: !292, line: 349, type: !295)
!8290 = !DILocation(line: 349, column: 28, scope: !474)
!8291 = !DILocation(line: 357, column: 7, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !474, file: !292, line: 357, column: 7)
!8293 = !DILocation(line: 357, column: 13, scope: !8292)
!8294 = !DILocation(line: 357, column: 7, scope: !474)
!8295 = !DILocation(line: 360, column: 23, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8292, file: !292, line: 358, column: 5)
!8297 = !DILocation(line: 360, column: 15, scope: !8296)
!8298 = !DILocation(line: 360, column: 13, scope: !8296)
!8299 = !DILocation(line: 361, column: 11, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !292, line: 361, column: 11)
!8301 = !DILocation(line: 361, column: 17, scope: !8300)
!8302 = !DILocation(line: 361, column: 11, scope: !8296)
!8303 = !DILocation(line: 363, column: 17, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8300, file: !292, line: 362, column: 9)
!8305 = !DILocation(line: 364, column: 14, scope: !8304)
!8306 = !DILocation(line: 365, column: 9, scope: !8304)
!8307 = !DILocation(line: 366, column: 5, scope: !8296)
!8308 = !DILocation(line: 368, column: 3, scope: !474)
!8309 = !DILocation(line: 368, column: 10, scope: !474)
!8310 = !DILocalVariable(name: "n", scope: !8311, file: !292, line: 370, type: !55)
!8311 = distinct !DILexicalBlock(scope: !474, file: !292, line: 369, column: 5)
!8312 = !DILocation(line: 370, column: 14, scope: !8311)
!8313 = !DILocation(line: 370, column: 18, scope: !8311)
!8314 = !DILocation(line: 371, column: 24, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8311, file: !292, line: 371, column: 11)
!8316 = !DILocation(line: 371, column: 28, scope: !8315)
!8317 = !DILocation(line: 371, column: 35, scope: !8315)
!8318 = !DILocation(line: 371, column: 12, scope: !8315)
!8319 = !DILocation(line: 371, column: 42, scope: !8315)
!8320 = !DILocation(line: 371, column: 39, scope: !8315)
!8321 = !DILocation(line: 371, column: 11, scope: !8311)
!8322 = !DILocation(line: 372, column: 9, scope: !8315)
!8323 = !DILocation(line: 373, column: 18, scope: !8311)
!8324 = !DILocation(line: 373, column: 15, scope: !8311)
!8325 = distinct !{!8325, !8308, !8326}
!8326 = !DILocation(line: 374, column: 5, scope: !474)
!8327 = !DILocation(line: 376, column: 3, scope: !474)
!8328 = !DILocation(line: 377, column: 1, scope: !474)
!8329 = distinct !DISubprogram(name: "writable_destination", scope: !292, file: !292, line: 1666, type: !8330, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8330 = !DISubroutineType(types: !8331)
!8331 = !{!142, !116, !239}
!8332 = !DILocalVariable(name: "file", arg: 1, scope: !8329, file: !292, line: 1666, type: !116)
!8333 = !DILocation(line: 1666, column: 35, scope: !8329)
!8334 = !DILocalVariable(name: "mode", arg: 2, scope: !8329, file: !292, line: 1666, type: !239)
!8335 = !DILocation(line: 1666, column: 48, scope: !8329)
!8336 = !DILocation(line: 1668, column: 11, scope: !8329)
!8337 = !DILocation(line: 1669, column: 11, scope: !8329)
!8338 = !DILocation(line: 1669, column: 14, scope: !8329)
!8339 = !DILocation(line: 1670, column: 11, scope: !8329)
!8340 = !DILocation(line: 1670, column: 26, scope: !8329)
!8341 = !DILocation(line: 1670, column: 14, scope: !8329)
!8342 = !DILocation(line: 1670, column: 38, scope: !8329)
!8343 = !DILocation(line: 1668, column: 3, scope: !8329)
!8344 = distinct !DISubprogram(name: "cp_options_default", scope: !292, file: !292, line: 2997, type: !3990, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !291, retainedNodes: !216)
!8345 = !DILocalVariable(name: "x", arg: 1, scope: !8344, file: !292, line: 2997, type: !3992)
!8346 = !DILocation(line: 2997, column: 40, scope: !8344)
!8347 = !DILocation(line: 2999, column: 11, scope: !8344)
!8348 = !DILocation(line: 2999, column: 3, scope: !8344)
!8349 = !DILocation(line: 3013, column: 48, scope: !8344)
!8350 = !DILocation(line: 3013, column: 59, scope: !8344)
!8351 = !DILocation(line: 3013, column: 25, scope: !8344)
!8352 = !DILocation(line: 3013, column: 28, scope: !8344)
!8353 = !DILocation(line: 3013, column: 45, scope: !8344)
!8354 = !DILocation(line: 3013, column: 3, scope: !8344)
!8355 = !DILocation(line: 3013, column: 6, scope: !8344)
!8356 = !DILocation(line: 3013, column: 23, scope: !8344)
!8357 = !DILocation(line: 3015, column: 3, scope: !8344)
!8358 = !DILocation(line: 3015, column: 6, scope: !8344)
!8359 = !DILocation(line: 3015, column: 19, scope: !8344)
!8360 = !DILocation(line: 3016, column: 1, scope: !8344)
!8361 = distinct !DISubprogram(name: "forget_created", scope: !484, file: !484, line: 82, type: !8362, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8362 = !DISubroutineType(types: !8363)
!8363 = !{null, !259, !262}
!8364 = !DILocalVariable(name: "ino", arg: 1, scope: !8361, file: !484, line: 82, type: !259)
!8365 = !DILocation(line: 82, column: 23, scope: !8361)
!8366 = !DILocalVariable(name: "dev", arg: 2, scope: !8361, file: !484, line: 82, type: !262)
!8367 = !DILocation(line: 82, column: 34, scope: !8361)
!8368 = !DILocalVariable(name: "probe", scope: !8361, file: !484, line: 84, type: !490)
!8369 = !DILocation(line: 84, column: 22, scope: !8361)
!8370 = !DILocalVariable(name: "ent", scope: !8361, file: !484, line: 85, type: !489)
!8371 = !DILocation(line: 85, column: 23, scope: !8361)
!8372 = !DILocation(line: 87, column: 18, scope: !8361)
!8373 = !DILocation(line: 87, column: 9, scope: !8361)
!8374 = !DILocation(line: 87, column: 16, scope: !8361)
!8375 = !DILocation(line: 88, column: 18, scope: !8361)
!8376 = !DILocation(line: 88, column: 9, scope: !8361)
!8377 = !DILocation(line: 88, column: 16, scope: !8361)
!8378 = !DILocation(line: 89, column: 9, scope: !8361)
!8379 = !DILocation(line: 89, column: 14, scope: !8361)
!8380 = !DILocation(line: 91, column: 22, scope: !8361)
!8381 = !DILocation(line: 91, column: 35, scope: !8361)
!8382 = !DILocation(line: 91, column: 9, scope: !8361)
!8383 = !DILocation(line: 91, column: 7, scope: !8361)
!8384 = !DILocation(line: 92, column: 7, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8361, file: !484, line: 92, column: 7)
!8386 = !DILocation(line: 92, column: 7, scope: !8361)
!8387 = !DILocation(line: 93, column: 23, scope: !8385)
!8388 = !DILocation(line: 93, column: 5, scope: !8385)
!8389 = !DILocation(line: 94, column: 1, scope: !8361)
!8390 = distinct !DISubprogram(name: "src_to_dest_free", scope: !484, file: !484, line: 72, type: !719, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8391 = !DILocalVariable(name: "x", arg: 1, scope: !8390, file: !484, line: 72, type: !53)
!8392 = !DILocation(line: 72, column: 25, scope: !8390)
!8393 = !DILocalVariable(name: "a", scope: !8390, file: !484, line: 74, type: !489)
!8394 = !DILocation(line: 74, column: 23, scope: !8390)
!8395 = !DILocation(line: 74, column: 27, scope: !8390)
!8396 = !DILocation(line: 75, column: 9, scope: !8390)
!8397 = !DILocation(line: 75, column: 12, scope: !8390)
!8398 = !DILocation(line: 75, column: 3, scope: !8390)
!8399 = !DILocation(line: 76, column: 9, scope: !8390)
!8400 = !DILocation(line: 76, column: 3, scope: !8390)
!8401 = !DILocation(line: 77, column: 1, scope: !8390)
!8402 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !484, file: !484, line: 100, type: !8403, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{!9, !259, !262}
!8405 = !DILocalVariable(name: "ino", arg: 1, scope: !8402, file: !484, line: 100, type: !259)
!8406 = !DILocation(line: 100, column: 27, scope: !8402)
!8407 = !DILocalVariable(name: "dev", arg: 2, scope: !8402, file: !484, line: 100, type: !262)
!8408 = !DILocation(line: 100, column: 38, scope: !8402)
!8409 = !DILocalVariable(name: "ent", scope: !8402, file: !484, line: 102, type: !490)
!8410 = !DILocation(line: 102, column: 22, scope: !8402)
!8411 = !DILocalVariable(name: "e", scope: !8402, file: !484, line: 103, type: !495)
!8412 = !DILocation(line: 103, column: 29, scope: !8402)
!8413 = !DILocation(line: 104, column: 16, scope: !8402)
!8414 = !DILocation(line: 104, column: 7, scope: !8402)
!8415 = !DILocation(line: 104, column: 14, scope: !8402)
!8416 = !DILocation(line: 105, column: 16, scope: !8402)
!8417 = !DILocation(line: 105, column: 7, scope: !8402)
!8418 = !DILocation(line: 105, column: 14, scope: !8402)
!8419 = !DILocation(line: 106, column: 20, scope: !8402)
!8420 = !DILocation(line: 106, column: 33, scope: !8402)
!8421 = !DILocation(line: 106, column: 7, scope: !8402)
!8422 = !DILocation(line: 106, column: 5, scope: !8402)
!8423 = !DILocation(line: 107, column: 10, scope: !8402)
!8424 = !DILocation(line: 107, column: 14, scope: !8402)
!8425 = !DILocation(line: 107, column: 17, scope: !8402)
!8426 = !DILocation(line: 107, column: 3, scope: !8402)
!8427 = distinct !DISubprogram(name: "remember_copied", scope: !484, file: !484, line: 115, type: !8428, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8428 = !DISubroutineType(types: !8429)
!8429 = !{!9, !116, !259, !262}
!8430 = !DILocalVariable(name: "name", arg: 1, scope: !8427, file: !484, line: 115, type: !116)
!8431 = !DILocation(line: 115, column: 30, scope: !8427)
!8432 = !DILocalVariable(name: "ino", arg: 2, scope: !8427, file: !484, line: 115, type: !259)
!8433 = !DILocation(line: 115, column: 42, scope: !8427)
!8434 = !DILocalVariable(name: "dev", arg: 3, scope: !8427, file: !484, line: 115, type: !262)
!8435 = !DILocation(line: 115, column: 53, scope: !8427)
!8436 = !DILocalVariable(name: "ent", scope: !8427, file: !484, line: 117, type: !489)
!8437 = !DILocation(line: 117, column: 23, scope: !8427)
!8438 = !DILocalVariable(name: "ent_from_table", scope: !8427, file: !484, line: 118, type: !489)
!8439 = !DILocation(line: 118, column: 23, scope: !8427)
!8440 = !DILocation(line: 120, column: 9, scope: !8427)
!8441 = !DILocation(line: 120, column: 7, scope: !8427)
!8442 = !DILocation(line: 121, column: 24, scope: !8427)
!8443 = !DILocation(line: 121, column: 15, scope: !8427)
!8444 = !DILocation(line: 121, column: 3, scope: !8427)
!8445 = !DILocation(line: 121, column: 8, scope: !8427)
!8446 = !DILocation(line: 121, column: 13, scope: !8427)
!8447 = !DILocation(line: 122, column: 17, scope: !8427)
!8448 = !DILocation(line: 122, column: 3, scope: !8427)
!8449 = !DILocation(line: 122, column: 8, scope: !8427)
!8450 = !DILocation(line: 122, column: 15, scope: !8427)
!8451 = !DILocation(line: 123, column: 17, scope: !8427)
!8452 = !DILocation(line: 123, column: 3, scope: !8427)
!8453 = !DILocation(line: 123, column: 8, scope: !8427)
!8454 = !DILocation(line: 123, column: 15, scope: !8427)
!8455 = !DILocation(line: 125, column: 33, scope: !8427)
!8456 = !DILocation(line: 125, column: 46, scope: !8427)
!8457 = !DILocation(line: 125, column: 20, scope: !8427)
!8458 = !DILocation(line: 125, column: 18, scope: !8427)
!8459 = !DILocation(line: 126, column: 7, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8427, file: !484, line: 126, column: 7)
!8461 = !DILocation(line: 126, column: 22, scope: !8460)
!8462 = !DILocation(line: 126, column: 7, scope: !8427)
!8463 = !DILocation(line: 129, column: 7, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8460, file: !484, line: 127, column: 5)
!8465 = !DILocation(line: 135, column: 7, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8427, file: !484, line: 135, column: 7)
!8467 = !DILocation(line: 135, column: 25, scope: !8466)
!8468 = !DILocation(line: 135, column: 22, scope: !8466)
!8469 = !DILocation(line: 135, column: 7, scope: !8427)
!8470 = !DILocation(line: 137, column: 25, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8466, file: !484, line: 136, column: 5)
!8472 = !DILocation(line: 137, column: 7, scope: !8471)
!8473 = !DILocation(line: 138, column: 23, scope: !8471)
!8474 = !DILocation(line: 138, column: 39, scope: !8471)
!8475 = !DILocation(line: 138, column: 7, scope: !8471)
!8476 = !DILocation(line: 142, column: 3, scope: !8427)
!8477 = !DILocation(line: 143, column: 1, scope: !8427)
!8478 = distinct !DISubprogram(name: "hash_init", scope: !484, file: !484, line: 147, type: !571, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8479 = !DILocation(line: 149, column: 17, scope: !8478)
!8480 = !DILocation(line: 149, column: 15, scope: !8478)
!8481 = !DILocation(line: 153, column: 7, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8478, file: !484, line: 153, column: 7)
!8483 = !DILocation(line: 153, column: 19, scope: !8482)
!8484 = !DILocation(line: 153, column: 7, scope: !8478)
!8485 = !DILocation(line: 154, column: 5, scope: !8482)
!8486 = !DILocation(line: 155, column: 1, scope: !8478)
!8487 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !484, file: !484, line: 51, type: !707, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8488 = !DILocalVariable(name: "x", arg: 1, scope: !8487, file: !484, line: 51, type: !709)
!8489 = !DILocation(line: 51, column: 31, scope: !8487)
!8490 = !DILocalVariable(name: "table_size", arg: 2, scope: !8487, file: !484, line: 51, type: !55)
!8491 = !DILocation(line: 51, column: 41, scope: !8487)
!8492 = !DILocalVariable(name: "p", scope: !8487, file: !484, line: 53, type: !495)
!8493 = !DILocation(line: 53, column: 29, scope: !8487)
!8494 = !DILocation(line: 53, column: 33, scope: !8487)
!8495 = !DILocation(line: 58, column: 22, scope: !8487)
!8496 = !DILocation(line: 58, column: 25, scope: !8487)
!8497 = !DILocation(line: 58, column: 34, scope: !8487)
!8498 = !DILocation(line: 58, column: 32, scope: !8487)
!8499 = !DILocation(line: 58, column: 3, scope: !8487)
!8500 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !484, file: !484, line: 64, type: !714, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8501 = !DILocalVariable(name: "x", arg: 1, scope: !8500, file: !484, line: 64, type: !709)
!8502 = !DILocation(line: 64, column: 34, scope: !8500)
!8503 = !DILocalVariable(name: "y", arg: 2, scope: !8500, file: !484, line: 64, type: !709)
!8504 = !DILocation(line: 64, column: 49, scope: !8500)
!8505 = !DILocalVariable(name: "a", scope: !8500, file: !484, line: 66, type: !495)
!8506 = !DILocation(line: 66, column: 29, scope: !8500)
!8507 = !DILocation(line: 66, column: 33, scope: !8500)
!8508 = !DILocalVariable(name: "b", scope: !8500, file: !484, line: 67, type: !495)
!8509 = !DILocation(line: 67, column: 29, scope: !8500)
!8510 = !DILocation(line: 67, column: 33, scope: !8500)
!8511 = !DILocation(line: 68, column: 10, scope: !8500)
!8512 = !DILocation(line: 0, scope: !8500)
!8513 = !DILocation(line: 68, column: 3, scope: !8500)
!8514 = distinct !DISubprogram(name: "forget_all", scope: !484, file: !484, line: 161, type: !571, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !483, retainedNodes: !216)
!8515 = !DILocation(line: 163, column: 14, scope: !8514)
!8516 = !DILocation(line: 163, column: 3, scope: !8514)
!8517 = !DILocation(line: 164, column: 1, scope: !8514)
!8518 = distinct !DISubprogram(name: "extent_scan_init", scope: !1227, file: !1227, line: 69, type: !8519, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1226, retainedNodes: !216)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{null, !7, !8521}
!8521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8522, size: 64)
!8522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !438, line: 36, size: 384, elements: !8523)
!8523 = !{!8524, !8525, !8526, !8527, !8528, !8529, !8530}
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !8522, file: !438, line: 39, baseType: !7, size: 32)
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !8522, file: !438, line: 42, baseType: !1229, size: 64, offset: 64)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !8522, file: !438, line: 45, baseType: !70, size: 32, offset: 128)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !8522, file: !438, line: 48, baseType: !55, size: 64, offset: 192)
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !8522, file: !438, line: 52, baseType: !142, size: 8, offset: 256)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !8522, file: !438, line: 55, baseType: !142, size: 8, offset: 264)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !8522, file: !438, line: 58, baseType: !1230, size: 64, offset: 320)
!8531 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8518, file: !1227, line: 69, type: !7)
!8532 = !DILocation(line: 69, column: 23, scope: !8518)
!8533 = !DILocalVariable(name: "scan", arg: 2, scope: !8518, file: !1227, line: 69, type: !8521)
!8534 = !DILocation(line: 69, column: 51, scope: !8518)
!8535 = !DILocation(line: 71, column: 14, scope: !8518)
!8536 = !DILocation(line: 71, column: 3, scope: !8518)
!8537 = !DILocation(line: 71, column: 9, scope: !8518)
!8538 = !DILocation(line: 71, column: 12, scope: !8518)
!8539 = !DILocation(line: 72, column: 3, scope: !8518)
!8540 = !DILocation(line: 72, column: 9, scope: !8518)
!8541 = !DILocation(line: 72, column: 18, scope: !8518)
!8542 = !DILocation(line: 73, column: 3, scope: !8518)
!8543 = !DILocation(line: 73, column: 9, scope: !8518)
!8544 = !DILocation(line: 73, column: 18, scope: !8518)
!8545 = !DILocation(line: 74, column: 3, scope: !8518)
!8546 = !DILocation(line: 74, column: 9, scope: !8518)
!8547 = !DILocation(line: 74, column: 20, scope: !8518)
!8548 = !DILocation(line: 75, column: 3, scope: !8518)
!8549 = !DILocation(line: 75, column: 9, scope: !8518)
!8550 = !DILocation(line: 75, column: 29, scope: !8518)
!8551 = !DILocation(line: 76, column: 3, scope: !8518)
!8552 = !DILocation(line: 76, column: 9, scope: !8518)
!8553 = !DILocation(line: 76, column: 26, scope: !8518)
!8554 = !DILocation(line: 77, column: 20, scope: !8518)
!8555 = !DILocation(line: 77, column: 3, scope: !8518)
!8556 = !DILocation(line: 77, column: 9, scope: !8518)
!8557 = !DILocation(line: 77, column: 18, scope: !8518)
!8558 = !DILocation(line: 78, column: 1, scope: !8518)
!8559 = distinct !DISubprogram(name: "extent_need_sync", scope: !1227, file: !1227, line: 33, type: !981, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1226, retainedNodes: !216)
!8560 = !DILocation(line: 39, column: 3, scope: !8559)
!8561 = distinct !DISubprogram(name: "extent_scan_read", scope: !1227, file: !1227, line: 87, type: !8562, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1226, retainedNodes: !216)
!8562 = !DISubroutineType(types: !8563)
!8563 = !{!142, !8521}
!8564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8561, file: !1227, line: 94, size: 32768, elements: !8565)
!8565 = !{!8566, !8567}
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !8564, file: !1227, line: 94, baseType: !1237, size: 256)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !8564, file: !1227, line: 94, baseType: !1993, size: 32768)
!8568 = !DILocalVariable(name: "scan", arg: 1, scope: !8561, file: !1227, line: 87, type: !8521)
!8569 = !DILocation(line: 87, column: 39, scope: !8561)
!8570 = !DILocalVariable(name: "si", scope: !8561, file: !1227, line: 89, type: !70)
!8571 = !DILocation(line: 89, column: 16, scope: !8561)
!8572 = !DILocalVariable(name: "last_ei", scope: !8561, file: !1227, line: 90, type: !1230)
!8573 = !DILocation(line: 90, column: 23, scope: !8561)
!8574 = !DILocation(line: 90, column: 33, scope: !8561)
!8575 = !DILocation(line: 90, column: 39, scope: !8561)
!8576 = !DILocation(line: 92, column: 3, scope: !8561)
!8577 = !DILocalVariable(name: "fiemap_buf", scope: !8578, file: !1227, line: 94, type: !8564)
!8578 = distinct !DILexicalBlock(scope: !8561, file: !1227, line: 93, column: 5)
!8579 = !DILocation(line: 94, column: 48, scope: !8578)
!8580 = !DILocalVariable(name: "fiemap", scope: !8578, file: !1227, line: 95, type: !1236)
!8581 = !DILocation(line: 95, column: 22, scope: !8578)
!8582 = !DILocation(line: 95, column: 43, scope: !8578)
!8583 = !DILocalVariable(name: "fm_extents", scope: !8578, file: !1227, line: 96, type: !1265)
!8584 = !DILocation(line: 96, column: 29, scope: !8578)
!8585 = !DILocation(line: 96, column: 43, scope: !8578)
!8586 = !DILocation(line: 96, column: 51, scope: !8578)
!8587 = !DILocation(line: 103, column: 7, scope: !8578)
!8588 = !DILocation(line: 105, column: 26, scope: !8578)
!8589 = !DILocation(line: 105, column: 32, scope: !8578)
!8590 = !DILocation(line: 105, column: 7, scope: !8578)
!8591 = !DILocation(line: 105, column: 15, scope: !8578)
!8592 = !DILocation(line: 105, column: 24, scope: !8578)
!8593 = !DILocation(line: 106, column: 26, scope: !8578)
!8594 = !DILocation(line: 106, column: 32, scope: !8578)
!8595 = !DILocation(line: 106, column: 7, scope: !8578)
!8596 = !DILocation(line: 106, column: 15, scope: !8578)
!8597 = !DILocation(line: 106, column: 24, scope: !8578)
!8598 = !DILocation(line: 107, column: 7, scope: !8578)
!8599 = !DILocation(line: 107, column: 15, scope: !8578)
!8600 = !DILocation(line: 107, column: 31, scope: !8578)
!8601 = !DILocation(line: 108, column: 47, scope: !8578)
!8602 = !DILocation(line: 108, column: 53, scope: !8578)
!8603 = !DILocation(line: 108, column: 45, scope: !8578)
!8604 = !DILocation(line: 108, column: 7, scope: !8578)
!8605 = !DILocation(line: 108, column: 15, scope: !8578)
!8606 = !DILocation(line: 108, column: 25, scope: !8578)
!8607 = !DILocation(line: 112, column: 18, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 112, column: 11)
!8609 = !DILocation(line: 112, column: 24, scope: !8608)
!8610 = !DILocation(line: 112, column: 43, scope: !8608)
!8611 = !DILocation(line: 112, column: 11, scope: !8608)
!8612 = !DILocation(line: 112, column: 51, scope: !8608)
!8613 = !DILocation(line: 112, column: 11, scope: !8578)
!8614 = !DILocation(line: 114, column: 15, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !1227, line: 114, column: 15)
!8616 = distinct !DILexicalBlock(scope: !8608, file: !1227, line: 113, column: 9)
!8617 = !DILocation(line: 114, column: 21, scope: !8615)
!8618 = !DILocation(line: 114, column: 32, scope: !8615)
!8619 = !DILocation(line: 114, column: 15, scope: !8616)
!8620 = !DILocation(line: 115, column: 13, scope: !8615)
!8621 = !DILocation(line: 115, column: 19, scope: !8615)
!8622 = !DILocation(line: 115, column: 39, scope: !8615)
!8623 = !DILocation(line: 116, column: 11, scope: !8616)
!8624 = !DILocation(line: 120, column: 11, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 120, column: 11)
!8626 = !DILocation(line: 120, column: 19, scope: !8625)
!8627 = !DILocation(line: 120, column: 37, scope: !8625)
!8628 = !DILocation(line: 120, column: 11, scope: !8578)
!8629 = !DILocation(line: 122, column: 11, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8625, file: !1227, line: 121, column: 9)
!8631 = !DILocation(line: 122, column: 17, scope: !8630)
!8632 = !DILocation(line: 122, column: 34, scope: !8630)
!8633 = !DILocation(line: 123, column: 18, scope: !8630)
!8634 = !DILocation(line: 123, column: 24, scope: !8630)
!8635 = !DILocation(line: 123, column: 35, scope: !8630)
!8636 = !DILocation(line: 123, column: 11, scope: !8630)
!8637 = !DILocation(line: 126, column: 7, scope: !8638)
!8638 = distinct !DILexicalBlock(scope: !8639, file: !1227, line: 126, column: 7)
!8639 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 126, column: 7)
!8640 = !DILocation(line: 126, column: 7, scope: !8639)
!8641 = !DILocation(line: 127, column: 25, scope: !8578)
!8642 = !DILocation(line: 127, column: 33, scope: !8578)
!8643 = !DILocation(line: 127, column: 7, scope: !8578)
!8644 = !DILocation(line: 127, column: 13, scope: !8578)
!8645 = !DILocation(line: 127, column: 22, scope: !8578)
!8646 = !DILocalVariable(name: "prev_idx", scope: !8647, file: !1227, line: 131, type: !55)
!8647 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 128, column: 7)
!8648 = !DILocation(line: 131, column: 16, scope: !8647)
!8649 = !DILocation(line: 131, column: 27, scope: !8647)
!8650 = !DILocation(line: 131, column: 37, scope: !8647)
!8651 = !DILocation(line: 131, column: 43, scope: !8647)
!8652 = !DILocation(line: 131, column: 35, scope: !8647)
!8653 = !DILocation(line: 132, column: 37, scope: !8647)
!8654 = !DILocation(line: 132, column: 43, scope: !8647)
!8655 = !DILocation(line: 132, column: 53, scope: !8647)
!8656 = !DILocation(line: 132, column: 59, scope: !8647)
!8657 = !DILocation(line: 132, column: 26, scope: !8647)
!8658 = !DILocation(line: 132, column: 9, scope: !8647)
!8659 = !DILocation(line: 132, column: 15, scope: !8647)
!8660 = !DILocation(line: 132, column: 24, scope: !8647)
!8661 = !DILocation(line: 134, column: 19, scope: !8647)
!8662 = !DILocation(line: 134, column: 25, scope: !8647)
!8663 = !DILocation(line: 134, column: 36, scope: !8647)
!8664 = !DILocation(line: 134, column: 34, scope: !8647)
!8665 = !DILocation(line: 134, column: 17, scope: !8647)
!8666 = !DILocalVariable(name: "i", scope: !8578, file: !1227, line: 137, type: !70)
!8667 = !DILocation(line: 137, column: 20, scope: !8578)
!8668 = !DILocation(line: 138, column: 14, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 138, column: 7)
!8670 = !DILocation(line: 138, column: 12, scope: !8669)
!8671 = !DILocation(line: 138, column: 19, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8669, file: !1227, line: 138, column: 7)
!8673 = !DILocation(line: 138, column: 23, scope: !8672)
!8674 = !DILocation(line: 138, column: 31, scope: !8672)
!8675 = !DILocation(line: 138, column: 21, scope: !8672)
!8676 = !DILocation(line: 138, column: 7, scope: !8669)
!8677 = !DILocation(line: 140, column: 11, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !1227, line: 140, column: 11)
!8679 = distinct !DILexicalBlock(scope: !8680, file: !1227, line: 140, column: 11)
!8680 = distinct !DILexicalBlock(scope: !8672, file: !1227, line: 139, column: 9)
!8681 = !DILocation(line: 140, column: 11, scope: !8679)
!8682 = !DILocation(line: 145, column: 15, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8680, file: !1227, line: 145, column: 15)
!8684 = !DILocation(line: 145, column: 18, scope: !8683)
!8685 = !DILocation(line: 145, column: 21, scope: !8683)
!8686 = !DILocation(line: 145, column: 30, scope: !8683)
!8687 = !DILocation(line: 146, column: 19, scope: !8683)
!8688 = !DILocation(line: 146, column: 30, scope: !8683)
!8689 = !DILocation(line: 146, column: 33, scope: !8683)
!8690 = !DILocation(line: 146, column: 42, scope: !8683)
!8691 = !DILocation(line: 146, column: 15, scope: !8683)
!8692 = !DILocation(line: 147, column: 15, scope: !8683)
!8693 = !DILocation(line: 147, column: 19, scope: !8683)
!8694 = !DILocation(line: 147, column: 28, scope: !8683)
!8695 = !DILocation(line: 147, column: 42, scope: !8683)
!8696 = !DILocation(line: 147, column: 51, scope: !8683)
!8697 = !DILocation(line: 147, column: 40, scope: !8683)
!8698 = !DILocation(line: 148, column: 22, scope: !8683)
!8699 = !DILocation(line: 148, column: 33, scope: !8683)
!8700 = !DILocation(line: 148, column: 36, scope: !8683)
!8701 = !DILocation(line: 148, column: 19, scope: !8683)
!8702 = !DILocation(line: 145, column: 15, scope: !8680)
!8703 = !DILocation(line: 151, column: 38, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8683, file: !1227, line: 149, column: 13)
!8705 = !DILocation(line: 151, column: 49, scope: !8704)
!8706 = !DILocation(line: 151, column: 52, scope: !8704)
!8707 = !DILocation(line: 151, column: 15, scope: !8704)
!8708 = !DILocation(line: 151, column: 24, scope: !8704)
!8709 = !DILocation(line: 151, column: 35, scope: !8704)
!8710 = !DILocation(line: 153, column: 36, scope: !8704)
!8711 = !DILocation(line: 153, column: 47, scope: !8704)
!8712 = !DILocation(line: 153, column: 50, scope: !8704)
!8713 = !DILocation(line: 153, column: 15, scope: !8704)
!8714 = !DILocation(line: 153, column: 24, scope: !8704)
!8715 = !DILocation(line: 153, column: 34, scope: !8704)
!8716 = !DILocation(line: 154, column: 13, scope: !8704)
!8717 = !DILocation(line: 155, column: 21, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8683, file: !1227, line: 155, column: 20)
!8719 = !DILocation(line: 155, column: 24, scope: !8718)
!8720 = !DILocation(line: 155, column: 29, scope: !8718)
!8721 = !DILocation(line: 155, column: 32, scope: !8718)
!8722 = !DILocation(line: 155, column: 38, scope: !8718)
!8723 = !DILocation(line: 155, column: 51, scope: !8718)
!8724 = !DILocation(line: 155, column: 62, scope: !8718)
!8725 = !DILocation(line: 155, column: 65, scope: !8718)
!8726 = !DILocation(line: 155, column: 49, scope: !8718)
!8727 = !DILocation(line: 156, column: 20, scope: !8718)
!8728 = !DILocation(line: 156, column: 24, scope: !8718)
!8729 = !DILocation(line: 156, column: 27, scope: !8718)
!8730 = !DILocation(line: 156, column: 31, scope: !8718)
!8731 = !DILocation(line: 156, column: 40, scope: !8718)
!8732 = !DILocation(line: 156, column: 54, scope: !8718)
!8733 = !DILocation(line: 156, column: 63, scope: !8718)
!8734 = !DILocation(line: 156, column: 52, scope: !8718)
!8735 = !DILocation(line: 157, column: 33, scope: !8718)
!8736 = !DILocation(line: 157, column: 44, scope: !8718)
!8737 = !DILocation(line: 157, column: 47, scope: !8718)
!8738 = !DILocation(line: 157, column: 31, scope: !8718)
!8739 = !DILocation(line: 155, column: 20, scope: !8683)
!8740 = !DILocalVariable(name: "new_logical", scope: !8741, file: !1227, line: 163, type: !1241)
!8741 = distinct !DILexicalBlock(scope: !8718, file: !1227, line: 158, column: 13)
!8742 = !DILocation(line: 163, column: 24, scope: !8741)
!8743 = !DILocalVariable(name: "length_adjust", scope: !8741, file: !1227, line: 164, type: !1241)
!8744 = !DILocation(line: 164, column: 24, scope: !8741)
!8745 = !DILocation(line: 165, column: 19, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8741, file: !1227, line: 165, column: 19)
!8747 = !DILocation(line: 165, column: 22, scope: !8746)
!8748 = !DILocation(line: 165, column: 19, scope: !8741)
!8749 = !DILocation(line: 166, column: 31, scope: !8746)
!8750 = !DILocation(line: 166, column: 37, scope: !8746)
!8751 = !DILocation(line: 166, column: 29, scope: !8746)
!8752 = !DILocation(line: 166, column: 17, scope: !8746)
!8753 = !DILocation(line: 171, column: 33, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8746, file: !1227, line: 168, column: 17)
!8755 = !DILocation(line: 171, column: 42, scope: !8754)
!8756 = !DILocation(line: 171, column: 56, scope: !8754)
!8757 = !DILocation(line: 171, column: 65, scope: !8754)
!8758 = !DILocation(line: 171, column: 54, scope: !8754)
!8759 = !DILocation(line: 171, column: 31, scope: !8754)
!8760 = !DILocation(line: 173, column: 31, scope: !8741)
!8761 = !DILocation(line: 173, column: 45, scope: !8741)
!8762 = !DILocation(line: 173, column: 56, scope: !8741)
!8763 = !DILocation(line: 173, column: 59, scope: !8741)
!8764 = !DILocation(line: 173, column: 43, scope: !8741)
!8765 = !DILocation(line: 173, column: 29, scope: !8741)
!8766 = !DILocation(line: 175, column: 19, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8741, file: !1227, line: 175, column: 19)
!8768 = !DILocation(line: 175, column: 35, scope: !8767)
!8769 = !DILocation(line: 175, column: 46, scope: !8767)
!8770 = !DILocation(line: 175, column: 49, scope: !8767)
!8771 = !DILocation(line: 175, column: 33, scope: !8767)
!8772 = !DILocation(line: 175, column: 19, scope: !8741)
!8773 = !DILocation(line: 177, column: 23, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !1227, line: 177, column: 23)
!8775 = distinct !DILexicalBlock(scope: !8767, file: !1227, line: 176, column: 17)
!8776 = !DILocation(line: 177, column: 29, scope: !8774)
!8777 = !DILocation(line: 177, column: 40, scope: !8774)
!8778 = !DILocation(line: 177, column: 23, scope: !8775)
!8779 = !DILocation(line: 178, column: 21, scope: !8774)
!8780 = !DILocation(line: 178, column: 27, scope: !8774)
!8781 = !DILocation(line: 178, column: 47, scope: !8774)
!8782 = !DILocation(line: 179, column: 19, scope: !8775)
!8783 = !DILocation(line: 181, column: 42, scope: !8741)
!8784 = !DILocation(line: 181, column: 15, scope: !8741)
!8785 = !DILocation(line: 181, column: 26, scope: !8741)
!8786 = !DILocation(line: 181, column: 29, scope: !8741)
!8787 = !DILocation(line: 181, column: 40, scope: !8741)
!8788 = !DILocation(line: 182, column: 42, scope: !8741)
!8789 = !DILocation(line: 182, column: 15, scope: !8741)
!8790 = !DILocation(line: 182, column: 26, scope: !8741)
!8791 = !DILocation(line: 182, column: 29, scope: !8741)
!8792 = !DILocation(line: 182, column: 39, scope: !8741)
!8793 = !DILocation(line: 184, column: 16, scope: !8741)
!8794 = !DILocation(line: 185, column: 15, scope: !8741)
!8795 = !DILocation(line: 189, column: 25, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8718, file: !1227, line: 188, column: 13)
!8797 = !DILocation(line: 189, column: 31, scope: !8796)
!8798 = !DILocation(line: 189, column: 42, scope: !8796)
!8799 = !DILocation(line: 189, column: 40, scope: !8796)
!8800 = !DILocation(line: 189, column: 23, scope: !8796)
!8801 = !DILocation(line: 190, column: 38, scope: !8796)
!8802 = !DILocation(line: 190, column: 49, scope: !8796)
!8803 = !DILocation(line: 190, column: 52, scope: !8796)
!8804 = !DILocation(line: 190, column: 15, scope: !8796)
!8805 = !DILocation(line: 190, column: 24, scope: !8796)
!8806 = !DILocation(line: 190, column: 36, scope: !8796)
!8807 = !DILocation(line: 191, column: 37, scope: !8796)
!8808 = !DILocation(line: 191, column: 48, scope: !8796)
!8809 = !DILocation(line: 191, column: 51, scope: !8796)
!8810 = !DILocation(line: 191, column: 15, scope: !8796)
!8811 = !DILocation(line: 191, column: 24, scope: !8796)
!8812 = !DILocation(line: 191, column: 35, scope: !8796)
!8813 = !DILocation(line: 192, column: 36, scope: !8796)
!8814 = !DILocation(line: 192, column: 47, scope: !8796)
!8815 = !DILocation(line: 192, column: 50, scope: !8796)
!8816 = !DILocation(line: 192, column: 15, scope: !8796)
!8817 = !DILocation(line: 192, column: 24, scope: !8796)
!8818 = !DILocation(line: 192, column: 34, scope: !8796)
!8819 = !DILocation(line: 193, column: 17, scope: !8796)
!8820 = !DILocation(line: 195, column: 9, scope: !8680)
!8821 = !DILocation(line: 138, column: 51, scope: !8672)
!8822 = !DILocation(line: 138, column: 7, scope: !8672)
!8823 = distinct !{!8823, !8676, !8824}
!8824 = !DILocation(line: 195, column: 9, scope: !8669)
!8825 = !DILocation(line: 197, column: 11, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 197, column: 11)
!8827 = !DILocation(line: 197, column: 20, scope: !8826)
!8828 = !DILocation(line: 197, column: 30, scope: !8826)
!8829 = !DILocation(line: 197, column: 11, scope: !8578)
!8830 = !DILocation(line: 198, column: 9, scope: !8826)
!8831 = !DILocation(line: 198, column: 15, scope: !8826)
!8832 = !DILocation(line: 198, column: 32, scope: !8826)
!8833 = !DILocation(line: 202, column: 11, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 202, column: 11)
!8835 = !DILocation(line: 202, column: 14, scope: !8834)
!8836 = !DILocation(line: 202, column: 22, scope: !8834)
!8837 = !DILocation(line: 202, column: 26, scope: !8834)
!8838 = !DILocation(line: 202, column: 32, scope: !8834)
!8839 = !DILocation(line: 202, column: 11, scope: !8578)
!8840 = !DILocation(line: 203, column: 19, scope: !8834)
!8841 = !DILocation(line: 203, column: 25, scope: !8834)
!8842 = !DILocation(line: 203, column: 36, scope: !8834)
!8843 = !DILocation(line: 203, column: 34, scope: !8834)
!8844 = !DILocation(line: 203, column: 41, scope: !8834)
!8845 = !DILocation(line: 203, column: 17, scope: !8834)
!8846 = !DILocation(line: 203, column: 9, scope: !8834)
!8847 = !DILocation(line: 206, column: 24, scope: !8578)
!8848 = !DILocation(line: 206, column: 7, scope: !8578)
!8849 = !DILocation(line: 206, column: 13, scope: !8578)
!8850 = !DILocation(line: 206, column: 22, scope: !8578)
!8851 = !DILocation(line: 208, column: 11, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 208, column: 11)
!8853 = !DILocation(line: 208, column: 17, scope: !8852)
!8854 = !DILocation(line: 208, column: 11, scope: !8578)
!8855 = !DILocation(line: 209, column: 9, scope: !8852)
!8856 = !DILocation(line: 211, column: 28, scope: !8852)
!8857 = !DILocation(line: 211, column: 37, scope: !8852)
!8858 = !DILocation(line: 211, column: 51, scope: !8852)
!8859 = !DILocation(line: 211, column: 60, scope: !8852)
!8860 = !DILocation(line: 211, column: 49, scope: !8852)
!8861 = !DILocation(line: 211, column: 9, scope: !8852)
!8862 = !DILocation(line: 211, column: 15, scope: !8852)
!8863 = !DILocation(line: 211, column: 26, scope: !8852)
!8864 = !DILocation(line: 213, column: 11, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8578, file: !1227, line: 213, column: 11)
!8866 = !DILocation(line: 213, column: 14, scope: !8865)
!8867 = !DILocation(line: 213, column: 11, scope: !8578)
!8868 = !DILocation(line: 214, column: 9, scope: !8865)
!8869 = distinct !{!8869, !8576, !8870}
!8870 = !DILocation(line: 215, column: 5, scope: !8561)
!8871 = !DILocation(line: 217, column: 3, scope: !8561)
!8872 = !DILocation(line: 218, column: 1, scope: !8561)
!8873 = distinct !DISubprogram(name: "force_linkat", scope: !501, file: !501, line: 95, type: !8874, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !500, retainedNodes: !216)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{!7, !7, !116, !7, !116, !7, !142, !7}
!8876 = !DILocalVariable(name: "srcdir", arg: 1, scope: !8873, file: !501, line: 95, type: !7)
!8877 = !DILocation(line: 95, column: 19, scope: !8873)
!8878 = !DILocalVariable(name: "srcname", arg: 2, scope: !8873, file: !501, line: 95, type: !116)
!8879 = !DILocation(line: 95, column: 39, scope: !8873)
!8880 = !DILocalVariable(name: "dstdir", arg: 3, scope: !8873, file: !501, line: 96, type: !7)
!8881 = !DILocation(line: 96, column: 19, scope: !8873)
!8882 = !DILocalVariable(name: "dstname", arg: 4, scope: !8873, file: !501, line: 96, type: !116)
!8883 = !DILocation(line: 96, column: 39, scope: !8873)
!8884 = !DILocalVariable(name: "flags", arg: 5, scope: !8873, file: !501, line: 96, type: !7)
!8885 = !DILocation(line: 96, column: 52, scope: !8873)
!8886 = !DILocalVariable(name: "force", arg: 6, scope: !8873, file: !501, line: 96, type: !142)
!8887 = !DILocation(line: 96, column: 64, scope: !8873)
!8888 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !8873, file: !501, line: 97, type: !7)
!8889 = !DILocation(line: 97, column: 19, scope: !8873)
!8890 = !DILocation(line: 99, column: 7, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8873, file: !501, line: 99, column: 7)
!8892 = !DILocation(line: 99, column: 20, scope: !8891)
!8893 = !DILocation(line: 99, column: 7, scope: !8873)
!8894 = !DILocation(line: 100, column: 29, scope: !8891)
!8895 = !DILocation(line: 100, column: 37, scope: !8891)
!8896 = !DILocation(line: 100, column: 46, scope: !8891)
!8897 = !DILocation(line: 100, column: 54, scope: !8891)
!8898 = !DILocation(line: 100, column: 63, scope: !8891)
!8899 = !DILocation(line: 100, column: 21, scope: !8891)
!8900 = !DILocation(line: 100, column: 70, scope: !8891)
!8901 = !DILocation(line: 101, column: 27, scope: !8891)
!8902 = !DILocation(line: 100, column: 18, scope: !8891)
!8903 = !DILocation(line: 100, column: 5, scope: !8891)
!8904 = !DILocation(line: 102, column: 8, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8873, file: !501, line: 102, column: 7)
!8906 = !DILocation(line: 102, column: 14, scope: !8905)
!8907 = !DILocation(line: 102, column: 17, scope: !8905)
!8908 = !DILocation(line: 102, column: 30, scope: !8905)
!8909 = !DILocation(line: 102, column: 7, scope: !8873)
!8910 = !DILocation(line: 103, column: 12, scope: !8905)
!8911 = !DILocation(line: 103, column: 5, scope: !8905)
!8912 = !DILocalVariable(name: "buf", scope: !8873, file: !501, line: 105, type: !503)
!8913 = !DILocation(line: 105, column: 8, scope: !8873)
!8914 = !DILocalVariable(name: "dsttmp", scope: !8873, file: !501, line: 106, type: !9)
!8915 = !DILocation(line: 106, column: 9, scope: !8873)
!8916 = !DILocation(line: 106, column: 36, scope: !8873)
!8917 = !DILocation(line: 106, column: 45, scope: !8873)
!8918 = !DILocation(line: 106, column: 18, scope: !8873)
!8919 = !DILocation(line: 107, column: 9, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8873, file: !501, line: 107, column: 7)
!8921 = !DILocation(line: 107, column: 7, scope: !8873)
!8922 = !DILocation(line: 108, column: 12, scope: !8920)
!8923 = !DILocation(line: 108, column: 5, scope: !8920)
!8924 = !DILocalVariable(name: "arg", scope: !8873, file: !501, line: 109, type: !509)
!8925 = !DILocation(line: 109, column: 19, scope: !8873)
!8926 = !DILocation(line: 109, column: 25, scope: !8873)
!8927 = !DILocation(line: 109, column: 27, scope: !8873)
!8928 = !DILocation(line: 109, column: 35, scope: !8873)
!8929 = !DILocation(line: 109, column: 44, scope: !8873)
!8930 = !DILocation(line: 109, column: 52, scope: !8873)
!8931 = !DILocalVariable(name: "err", scope: !8873, file: !501, line: 110, type: !7)
!8932 = !DILocation(line: 110, column: 7, scope: !8873)
!8933 = !DILocation(line: 112, column: 25, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8873, file: !501, line: 112, column: 7)
!8935 = !DILocation(line: 112, column: 36, scope: !8934)
!8936 = !DILocation(line: 112, column: 7, scope: !8934)
!8937 = !DILocation(line: 112, column: 66, scope: !8934)
!8938 = !DILocation(line: 112, column: 7, scope: !8873)
!8939 = !DILocation(line: 113, column: 11, scope: !8934)
!8940 = !DILocation(line: 113, column: 9, scope: !8934)
!8941 = !DILocation(line: 113, column: 5, scope: !8934)
!8942 = !DILocation(line: 116, column: 23, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8934, file: !501, line: 115, column: 5)
!8944 = !DILocation(line: 116, column: 31, scope: !8943)
!8945 = !DILocation(line: 116, column: 39, scope: !8943)
!8946 = !DILocation(line: 116, column: 47, scope: !8943)
!8947 = !DILocation(line: 116, column: 13, scope: !8943)
!8948 = !DILocation(line: 116, column: 56, scope: !8943)
!8949 = !DILocation(line: 116, column: 68, scope: !8943)
!8950 = !DILocation(line: 116, column: 11, scope: !8943)
!8951 = !DILocation(line: 120, column: 17, scope: !8943)
!8952 = !DILocation(line: 120, column: 25, scope: !8943)
!8953 = !DILocation(line: 120, column: 7, scope: !8943)
!8954 = !DILocation(line: 123, column: 7, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8873, file: !501, line: 123, column: 7)
!8956 = !DILocation(line: 123, column: 17, scope: !8955)
!8957 = !DILocation(line: 123, column: 14, scope: !8955)
!8958 = !DILocation(line: 123, column: 7, scope: !8873)
!8959 = !DILocation(line: 124, column: 11, scope: !8955)
!8960 = !DILocation(line: 124, column: 5, scope: !8955)
!8961 = !DILocation(line: 125, column: 10, scope: !8873)
!8962 = !DILocation(line: 125, column: 3, scope: !8873)
!8963 = !DILocation(line: 126, column: 1, scope: !8873)
!8964 = distinct !DISubprogram(name: "samedir_template", scope: !501, file: !501, line: 51, type: !8965, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !500, retainedNodes: !216)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{!9, !116, !9}
!8967 = !DILocalVariable(name: "dstname", arg: 1, scope: !8964, file: !501, line: 51, type: !116)
!8968 = !DILocation(line: 51, column: 31, scope: !8964)
!8969 = !DILocalVariable(name: "buf", arg: 2, scope: !8964, file: !501, line: 51, type: !9)
!8970 = !DILocation(line: 51, column: 45, scope: !8964)
!8971 = !DILocalVariable(name: "dstdirlen", scope: !8964, file: !501, line: 53, type: !506)
!8972 = !DILocation(line: 53, column: 13, scope: !8964)
!8973 = !DILocation(line: 53, column: 41, scope: !8964)
!8974 = !DILocation(line: 53, column: 25, scope: !8964)
!8975 = !DILocation(line: 53, column: 52, scope: !8964)
!8976 = !DILocation(line: 53, column: 50, scope: !8964)
!8977 = !DILocalVariable(name: "dsttmpsize", scope: !8964, file: !501, line: 54, type: !55)
!8978 = !DILocation(line: 54, column: 10, scope: !8964)
!8979 = !DILocation(line: 54, column: 23, scope: !8964)
!8980 = !DILocation(line: 54, column: 33, scope: !8964)
!8981 = !DILocalVariable(name: "dsttmp", scope: !8964, file: !501, line: 55, type: !9)
!8982 = !DILocation(line: 55, column: 9, scope: !8964)
!8983 = !DILocation(line: 56, column: 7, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8964, file: !501, line: 56, column: 7)
!8985 = !DILocation(line: 56, column: 18, scope: !8984)
!8986 = !DILocation(line: 56, column: 7, scope: !8964)
!8987 = !DILocation(line: 57, column: 14, scope: !8984)
!8988 = !DILocation(line: 57, column: 12, scope: !8984)
!8989 = !DILocation(line: 57, column: 5, scope: !8984)
!8990 = !DILocation(line: 60, column: 24, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8984, file: !501, line: 59, column: 5)
!8992 = !DILocation(line: 60, column: 16, scope: !8991)
!8993 = !DILocation(line: 60, column: 14, scope: !8991)
!8994 = !DILocation(line: 61, column: 12, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8991, file: !501, line: 61, column: 11)
!8996 = !DILocation(line: 61, column: 11, scope: !8991)
!8997 = !DILocation(line: 62, column: 16, scope: !8995)
!8998 = !DILocation(line: 62, column: 9, scope: !8995)
!8999 = !DILocation(line: 64, column: 20, scope: !8964)
!9000 = !DILocation(line: 64, column: 28, scope: !8964)
!9001 = !DILocation(line: 64, column: 37, scope: !8964)
!9002 = !DILocation(line: 64, column: 11, scope: !8964)
!9003 = !DILocation(line: 64, column: 3, scope: !8964)
!9004 = !DILocation(line: 65, column: 10, scope: !8964)
!9005 = !DILocation(line: 65, column: 3, scope: !8964)
!9006 = !DILocation(line: 66, column: 1, scope: !8964)
!9007 = distinct !DISubprogram(name: "try_link", scope: !501, file: !501, line: 80, type: !893, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !500, retainedNodes: !216)
!9008 = !DILocalVariable(name: "dest", arg: 1, scope: !9007, file: !501, line: 80, type: !9)
!9009 = !DILocation(line: 80, column: 17, scope: !9007)
!9010 = !DILocalVariable(name: "arg", arg: 2, scope: !9007, file: !501, line: 80, type: !53)
!9011 = !DILocation(line: 80, column: 29, scope: !9007)
!9012 = !DILocalVariable(name: "a", scope: !9007, file: !501, line: 82, type: !508)
!9013 = !DILocation(line: 82, column: 20, scope: !9007)
!9014 = !DILocation(line: 82, column: 24, scope: !9007)
!9015 = !DILocation(line: 83, column: 18, scope: !9007)
!9016 = !DILocation(line: 83, column: 21, scope: !9007)
!9017 = !DILocation(line: 83, column: 29, scope: !9007)
!9018 = !DILocation(line: 83, column: 32, scope: !9007)
!9019 = !DILocation(line: 83, column: 41, scope: !9007)
!9020 = !DILocation(line: 83, column: 44, scope: !9007)
!9021 = !DILocation(line: 83, column: 52, scope: !9007)
!9022 = !DILocation(line: 83, column: 58, scope: !9007)
!9023 = !DILocation(line: 83, column: 61, scope: !9007)
!9024 = !DILocation(line: 83, column: 10, scope: !9007)
!9025 = !DILocation(line: 83, column: 3, scope: !9007)
!9026 = distinct !DISubprogram(name: "force_symlinkat", scope: !501, file: !501, line: 152, type: !9027, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !500, retainedNodes: !216)
!9027 = !DISubroutineType(types: !9028)
!9028 = !{!7, !116, !7, !116, !142, !7}
!9029 = !DILocalVariable(name: "srcname", arg: 1, scope: !9026, file: !501, line: 152, type: !116)
!9030 = !DILocation(line: 152, column: 30, scope: !9026)
!9031 = !DILocalVariable(name: "dstdir", arg: 2, scope: !9026, file: !501, line: 152, type: !7)
!9032 = !DILocation(line: 152, column: 43, scope: !9026)
!9033 = !DILocalVariable(name: "dstname", arg: 3, scope: !9026, file: !501, line: 152, type: !116)
!9034 = !DILocation(line: 152, column: 63, scope: !9026)
!9035 = !DILocalVariable(name: "force", arg: 4, scope: !9026, file: !501, line: 153, type: !142)
!9036 = !DILocation(line: 153, column: 23, scope: !9026)
!9037 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !9026, file: !501, line: 153, type: !7)
!9038 = !DILocation(line: 153, column: 34, scope: !9026)
!9039 = !DILocation(line: 155, column: 7, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9026, file: !501, line: 155, column: 7)
!9041 = !DILocation(line: 155, column: 23, scope: !9040)
!9042 = !DILocation(line: 155, column: 7, scope: !9026)
!9043 = !DILocation(line: 156, column: 34, scope: !9040)
!9044 = !DILocation(line: 156, column: 43, scope: !9040)
!9045 = !DILocation(line: 156, column: 51, scope: !9040)
!9046 = !DILocation(line: 156, column: 23, scope: !9040)
!9047 = !DILocation(line: 156, column: 60, scope: !9040)
!9048 = !DILocation(line: 156, column: 71, scope: !9040)
!9049 = !DILocation(line: 156, column: 21, scope: !9040)
!9050 = !DILocation(line: 156, column: 5, scope: !9040)
!9051 = !DILocation(line: 157, column: 8, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9026, file: !501, line: 157, column: 7)
!9053 = !DILocation(line: 157, column: 14, scope: !9052)
!9054 = !DILocation(line: 157, column: 17, scope: !9052)
!9055 = !DILocation(line: 157, column: 33, scope: !9052)
!9056 = !DILocation(line: 157, column: 7, scope: !9026)
!9057 = !DILocation(line: 158, column: 12, scope: !9052)
!9058 = !DILocation(line: 158, column: 5, scope: !9052)
!9059 = !DILocalVariable(name: "buf", scope: !9026, file: !501, line: 160, type: !503)
!9060 = !DILocation(line: 160, column: 8, scope: !9026)
!9061 = !DILocalVariable(name: "dsttmp", scope: !9026, file: !501, line: 161, type: !9)
!9062 = !DILocation(line: 161, column: 9, scope: !9026)
!9063 = !DILocation(line: 161, column: 36, scope: !9026)
!9064 = !DILocation(line: 161, column: 45, scope: !9026)
!9065 = !DILocation(line: 161, column: 18, scope: !9026)
!9066 = !DILocation(line: 162, column: 8, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9026, file: !501, line: 162, column: 7)
!9068 = !DILocation(line: 162, column: 7, scope: !9026)
!9069 = !DILocation(line: 163, column: 12, scope: !9067)
!9070 = !DILocation(line: 163, column: 5, scope: !9067)
!9071 = !DILocalVariable(name: "arg", scope: !9026, file: !501, line: 164, type: !516)
!9072 = !DILocation(line: 164, column: 22, scope: !9026)
!9073 = !DILocation(line: 164, column: 28, scope: !9026)
!9074 = !DILocation(line: 164, column: 30, scope: !9026)
!9075 = !DILocation(line: 164, column: 39, scope: !9026)
!9076 = !DILocalVariable(name: "err", scope: !9026, file: !501, line: 165, type: !7)
!9077 = !DILocation(line: 165, column: 7, scope: !9026)
!9078 = !DILocation(line: 167, column: 25, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9026, file: !501, line: 167, column: 7)
!9080 = !DILocation(line: 167, column: 36, scope: !9079)
!9081 = !DILocation(line: 167, column: 7, scope: !9079)
!9082 = !DILocation(line: 167, column: 69, scope: !9079)
!9083 = !DILocation(line: 167, column: 7, scope: !9026)
!9084 = !DILocation(line: 168, column: 11, scope: !9079)
!9085 = !DILocation(line: 168, column: 9, scope: !9079)
!9086 = !DILocation(line: 168, column: 5, scope: !9079)
!9087 = !DILocation(line: 169, column: 22, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9079, file: !501, line: 169, column: 12)
!9089 = !DILocation(line: 169, column: 30, scope: !9088)
!9090 = !DILocation(line: 169, column: 38, scope: !9088)
!9091 = !DILocation(line: 169, column: 46, scope: !9088)
!9092 = !DILocation(line: 169, column: 12, scope: !9088)
!9093 = !DILocation(line: 169, column: 55, scope: !9088)
!9094 = !DILocation(line: 169, column: 12, scope: !9079)
!9095 = !DILocation(line: 171, column: 13, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9088, file: !501, line: 170, column: 5)
!9097 = !DILocation(line: 171, column: 11, scope: !9096)
!9098 = !DILocation(line: 172, column: 17, scope: !9096)
!9099 = !DILocation(line: 172, column: 25, scope: !9096)
!9100 = !DILocation(line: 172, column: 7, scope: !9096)
!9101 = !DILocation(line: 173, column: 5, scope: !9096)
!9102 = !DILocation(line: 178, column: 11, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9088, file: !501, line: 175, column: 5)
!9104 = !DILocation(line: 181, column: 7, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9026, file: !501, line: 181, column: 7)
!9106 = !DILocation(line: 181, column: 17, scope: !9105)
!9107 = !DILocation(line: 181, column: 14, scope: !9105)
!9108 = !DILocation(line: 181, column: 7, scope: !9026)
!9109 = !DILocation(line: 182, column: 11, scope: !9105)
!9110 = !DILocation(line: 182, column: 5, scope: !9105)
!9111 = !DILocation(line: 183, column: 10, scope: !9026)
!9112 = !DILocation(line: 183, column: 3, scope: !9026)
!9113 = !DILocation(line: 184, column: 1, scope: !9026)
!9114 = distinct !DISubprogram(name: "try_symlink", scope: !501, file: !501, line: 138, type: !893, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !500, retainedNodes: !216)
!9115 = !DILocalVariable(name: "dest", arg: 1, scope: !9114, file: !501, line: 138, type: !9)
!9116 = !DILocation(line: 138, column: 20, scope: !9114)
!9117 = !DILocalVariable(name: "arg", arg: 2, scope: !9114, file: !501, line: 138, type: !53)
!9118 = !DILocation(line: 138, column: 32, scope: !9114)
!9119 = !DILocalVariable(name: "a", scope: !9114, file: !501, line: 140, type: !515)
!9120 = !DILocation(line: 140, column: 23, scope: !9114)
!9121 = !DILocation(line: 140, column: 27, scope: !9114)
!9122 = !DILocation(line: 141, column: 21, scope: !9114)
!9123 = !DILocation(line: 141, column: 24, scope: !9114)
!9124 = !DILocation(line: 141, column: 33, scope: !9114)
!9125 = !DILocation(line: 141, column: 36, scope: !9114)
!9126 = !DILocation(line: 141, column: 44, scope: !9114)
!9127 = !DILocation(line: 141, column: 10, scope: !9114)
!9128 = !DILocation(line: 141, column: 3, scope: !9114)
!9129 = distinct !DISubprogram(name: "copy_acl", scope: !9130, file: !9130, line: 43, type: !9131, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1278, retainedNodes: !216)
!9130 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9131 = !DISubroutineType(types: !9132)
!9132 = !{!7, !116, !7, !116, !7, !239}
!9133 = !DILocalVariable(name: "src_name", arg: 1, scope: !9129, file: !9130, line: 43, type: !116)
!9134 = !DILocation(line: 43, column: 23, scope: !9129)
!9135 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9129, file: !9130, line: 43, type: !7)
!9136 = !DILocation(line: 43, column: 37, scope: !9129)
!9137 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9129, file: !9130, line: 43, type: !116)
!9138 = !DILocation(line: 43, column: 62, scope: !9129)
!9139 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9129, file: !9130, line: 44, type: !7)
!9140 = !DILocation(line: 44, column: 15, scope: !9129)
!9141 = !DILocalVariable(name: "mode", arg: 5, scope: !9129, file: !9130, line: 44, type: !239)
!9142 = !DILocation(line: 44, column: 33, scope: !9129)
!9143 = !DILocalVariable(name: "ret", scope: !9129, file: !9130, line: 46, type: !7)
!9144 = !DILocation(line: 46, column: 7, scope: !9129)
!9145 = !DILocation(line: 46, column: 24, scope: !9129)
!9146 = !DILocation(line: 46, column: 34, scope: !9129)
!9147 = !DILocation(line: 46, column: 47, scope: !9129)
!9148 = !DILocation(line: 46, column: 57, scope: !9129)
!9149 = !DILocation(line: 46, column: 68, scope: !9129)
!9150 = !DILocation(line: 46, column: 13, scope: !9129)
!9151 = !DILocation(line: 47, column: 11, scope: !9129)
!9152 = !DILocation(line: 47, column: 3, scope: !9129)
!9153 = !DILocation(line: 50, column: 17, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9129, file: !9130, line: 48, column: 5)
!9155 = !DILocation(line: 50, column: 37, scope: !9154)
!9156 = !DILocation(line: 50, column: 30, scope: !9154)
!9157 = !DILocation(line: 50, column: 7, scope: !9154)
!9158 = !DILocation(line: 51, column: 7, scope: !9154)
!9159 = !DILocation(line: 54, column: 17, scope: !9154)
!9160 = !DILocation(line: 54, column: 24, scope: !9154)
!9161 = !DILocation(line: 54, column: 67, scope: !9154)
!9162 = !DILocation(line: 54, column: 60, scope: !9154)
!9163 = !DILocation(line: 54, column: 7, scope: !9154)
!9164 = !DILocation(line: 55, column: 7, scope: !9154)
!9165 = !DILocation(line: 58, column: 7, scope: !9154)
!9166 = !DILocation(line: 60, column: 10, scope: !9129)
!9167 = !DILocation(line: 60, column: 3, scope: !9129)
!9168 = distinct !DISubprogram(name: "set_acl", scope: !9169, file: !9169, line: 42, type: !9170, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1281, retainedNodes: !216)
!9169 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!7, !116, !7, !239}
!9172 = !DILocalVariable(name: "name", arg: 1, scope: !9168, file: !9169, line: 42, type: !116)
!9173 = !DILocation(line: 42, column: 22, scope: !9168)
!9174 = !DILocalVariable(name: "desc", arg: 2, scope: !9168, file: !9169, line: 42, type: !7)
!9175 = !DILocation(line: 42, column: 32, scope: !9168)
!9176 = !DILocalVariable(name: "mode", arg: 3, scope: !9168, file: !9169, line: 42, type: !239)
!9177 = !DILocation(line: 42, column: 45, scope: !9168)
!9178 = !DILocalVariable(name: "ret", scope: !9168, file: !9169, line: 44, type: !7)
!9179 = !DILocation(line: 44, column: 7, scope: !9168)
!9180 = !DILocation(line: 44, column: 23, scope: !9168)
!9181 = !DILocation(line: 44, column: 29, scope: !9168)
!9182 = !DILocation(line: 44, column: 35, scope: !9168)
!9183 = !DILocation(line: 44, column: 13, scope: !9168)
!9184 = !DILocation(line: 45, column: 7, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9168, file: !9169, line: 45, column: 7)
!9186 = !DILocation(line: 45, column: 11, scope: !9185)
!9187 = !DILocation(line: 45, column: 7, scope: !9168)
!9188 = !DILocation(line: 46, column: 15, scope: !9185)
!9189 = !DILocation(line: 46, column: 22, scope: !9185)
!9190 = !DILocation(line: 46, column: 62, scope: !9185)
!9191 = !DILocation(line: 46, column: 55, scope: !9185)
!9192 = !DILocation(line: 46, column: 5, scope: !9185)
!9193 = !DILocation(line: 47, column: 10, scope: !9168)
!9194 = !DILocation(line: 47, column: 3, scope: !9168)
!9195 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9196, file: !9196, line: 52, type: !9197, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1284, retainedNodes: !216)
!9196 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9197 = !DISubroutineType(types: !9198)
!9198 = !{!9, !116, !55}
!9199 = !DILocalVariable(name: "file", arg: 1, scope: !9195, file: !9196, line: 52, type: !116)
!9200 = !DILocation(line: 52, column: 34, scope: !9195)
!9201 = !DILocalVariable(name: "size", arg: 2, scope: !9195, file: !9196, line: 52, type: !55)
!9202 = !DILocation(line: 52, column: 47, scope: !9195)
!9203 = !DILocalVariable(name: "symlink_max", scope: !9195, file: !9196, line: 57, type: !55)
!9204 = !DILocation(line: 57, column: 10, scope: !9195)
!9205 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9195, file: !9196, line: 58, type: !55)
!9206 = !DILocation(line: 58, column: 10, scope: !9195)
!9207 = !DILocalVariable(name: "initial_limit", scope: !9195, file: !9196, line: 59, type: !55)
!9208 = !DILocation(line: 59, column: 10, scope: !9195)
!9209 = !DILocation(line: 59, column: 27, scope: !9195)
!9210 = !DILocation(line: 59, column: 41, scope: !9195)
!9211 = !DILocation(line: 59, column: 39, scope: !9195)
!9212 = !DILocation(line: 60, column: 29, scope: !9195)
!9213 = !DILocation(line: 60, column: 41, scope: !9195)
!9214 = !DILocation(line: 61, column: 29, scope: !9195)
!9215 = !DILocalVariable(name: "buf_size", scope: !9195, file: !9196, line: 64, type: !55)
!9216 = !DILocation(line: 64, column: 10, scope: !9195)
!9217 = !DILocation(line: 64, column: 21, scope: !9195)
!9218 = !DILocation(line: 64, column: 28, scope: !9195)
!9219 = !DILocation(line: 64, column: 26, scope: !9195)
!9220 = !DILocation(line: 64, column: 44, scope: !9195)
!9221 = !DILocation(line: 64, column: 49, scope: !9195)
!9222 = !DILocation(line: 64, column: 55, scope: !9195)
!9223 = !DILocation(line: 66, column: 3, scope: !9195)
!9224 = !DILocalVariable(name: "r", scope: !9225, file: !9196, line: 68, type: !540)
!9225 = distinct !DILexicalBlock(scope: !9195, file: !9196, line: 67, column: 5)
!9226 = !DILocation(line: 68, column: 15, scope: !9225)
!9227 = !DILocalVariable(name: "link_length", scope: !9225, file: !9196, line: 69, type: !55)
!9228 = !DILocation(line: 69, column: 14, scope: !9225)
!9229 = !DILocalVariable(name: "buffer", scope: !9225, file: !9196, line: 70, type: !9)
!9230 = !DILocation(line: 70, column: 13, scope: !9225)
!9231 = !DILocation(line: 70, column: 30, scope: !9225)
!9232 = !DILocation(line: 70, column: 22, scope: !9225)
!9233 = !DILocation(line: 72, column: 11, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9225, file: !9196, line: 72, column: 11)
!9235 = !DILocation(line: 72, column: 18, scope: !9234)
!9236 = !DILocation(line: 72, column: 11, scope: !9225)
!9237 = !DILocation(line: 73, column: 9, scope: !9234)
!9238 = !DILocation(line: 74, column: 21, scope: !9225)
!9239 = !DILocation(line: 74, column: 27, scope: !9225)
!9240 = !DILocation(line: 74, column: 35, scope: !9225)
!9241 = !DILocation(line: 74, column: 11, scope: !9225)
!9242 = !DILocation(line: 74, column: 9, scope: !9225)
!9243 = !DILocation(line: 75, column: 21, scope: !9225)
!9244 = !DILocation(line: 75, column: 19, scope: !9225)
!9245 = !DILocation(line: 79, column: 11, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9225, file: !9196, line: 79, column: 11)
!9247 = !DILocation(line: 79, column: 13, scope: !9246)
!9248 = !DILocation(line: 79, column: 17, scope: !9246)
!9249 = !DILocation(line: 79, column: 20, scope: !9246)
!9250 = !DILocation(line: 79, column: 26, scope: !9246)
!9251 = !DILocation(line: 79, column: 11, scope: !9225)
!9252 = !DILocalVariable(name: "saved_errno", scope: !9253, file: !9196, line: 81, type: !7)
!9253 = distinct !DILexicalBlock(scope: !9246, file: !9196, line: 80, column: 9)
!9254 = !DILocation(line: 81, column: 15, scope: !9253)
!9255 = !DILocation(line: 81, column: 29, scope: !9253)
!9256 = !DILocation(line: 82, column: 17, scope: !9253)
!9257 = !DILocation(line: 82, column: 11, scope: !9253)
!9258 = !DILocation(line: 83, column: 19, scope: !9253)
!9259 = !DILocation(line: 83, column: 11, scope: !9253)
!9260 = !DILocation(line: 83, column: 17, scope: !9253)
!9261 = !DILocation(line: 84, column: 11, scope: !9253)
!9262 = !DILocation(line: 87, column: 11, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9225, file: !9196, line: 87, column: 11)
!9264 = !DILocation(line: 87, column: 25, scope: !9263)
!9265 = !DILocation(line: 87, column: 23, scope: !9263)
!9266 = !DILocation(line: 87, column: 11, scope: !9225)
!9267 = !DILocation(line: 89, column: 11, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9263, file: !9196, line: 88, column: 9)
!9269 = !DILocation(line: 89, column: 18, scope: !9268)
!9270 = !DILocation(line: 89, column: 31, scope: !9268)
!9271 = !DILocation(line: 90, column: 18, scope: !9268)
!9272 = !DILocation(line: 90, column: 11, scope: !9268)
!9273 = !DILocation(line: 93, column: 13, scope: !9225)
!9274 = !DILocation(line: 93, column: 7, scope: !9225)
!9275 = !DILocation(line: 94, column: 11, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9225, file: !9196, line: 94, column: 11)
!9277 = !DILocation(line: 94, column: 20, scope: !9276)
!9278 = !DILocation(line: 94, column: 11, scope: !9225)
!9279 = !DILocation(line: 95, column: 18, scope: !9276)
!9280 = !DILocation(line: 95, column: 9, scope: !9276)
!9281 = !DILocation(line: 96, column: 16, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9276, file: !9196, line: 96, column: 16)
!9283 = !DILocation(line: 96, column: 25, scope: !9282)
!9284 = !DILocation(line: 96, column: 16, scope: !9276)
!9285 = !DILocation(line: 97, column: 18, scope: !9282)
!9286 = !DILocation(line: 97, column: 9, scope: !9282)
!9287 = !DILocation(line: 100, column: 11, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9282, file: !9196, line: 99, column: 9)
!9289 = !DILocation(line: 100, column: 17, scope: !9288)
!9290 = !DILocation(line: 101, column: 11, scope: !9288)
!9291 = distinct !{!9291, !9223, !9292}
!9292 = !DILocation(line: 103, column: 5, scope: !9195)
!9293 = !DILocation(line: 104, column: 1, scope: !9195)
!9294 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !533, file: !533, line: 88, type: !214, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !529, retainedNodes: !216)
!9295 = !DILocalVariable(name: "s", arg: 1, scope: !9294, file: !533, line: 88, type: !116)
!9296 = !DILocation(line: 88, column: 39, scope: !9294)
!9297 = !DILocation(line: 90, column: 8, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9294, file: !533, line: 90, column: 7)
!9299 = !DILocation(line: 90, column: 7, scope: !9294)
!9300 = !DILocation(line: 91, column: 9, scope: !9298)
!9301 = !DILocation(line: 91, column: 7, scope: !9298)
!9302 = !DILocation(line: 91, column: 5, scope: !9298)
!9303 = !DILocation(line: 92, column: 26, scope: !9294)
!9304 = !DILocation(line: 92, column: 28, scope: !9294)
!9305 = !DILocation(line: 92, column: 32, scope: !9294)
!9306 = !DILocation(line: 92, column: 31, scope: !9294)
!9307 = !DILocation(line: 92, column: 34, scope: !9294)
!9308 = !DILocation(line: 92, column: 37, scope: !9294)
!9309 = !DILocation(line: 92, column: 58, scope: !9294)
!9310 = !DILocation(line: 92, column: 42, scope: !9294)
!9311 = !DILocation(line: 92, column: 39, scope: !9294)
!9312 = !DILocation(line: 92, column: 63, scope: !9294)
!9313 = !DILocation(line: 92, column: 24, scope: !9294)
!9314 = !DILocation(line: 93, column: 1, scope: !9294)
!9315 = distinct !DISubprogram(name: "backupfile_internal", scope: !533, file: !533, line: 314, type: !9316, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !529, retainedNodes: !216)
!9316 = !DISubroutineType(types: !9317)
!9317 = !{!9, !7, !116, !68, !142}
!9318 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9315, file: !533, line: 314, type: !7)
!9319 = !DILocation(line: 314, column: 26, scope: !9315)
!9320 = !DILocalVariable(name: "file", arg: 2, scope: !9315, file: !533, line: 314, type: !116)
!9321 = !DILocation(line: 314, column: 46, scope: !9315)
!9322 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9315, file: !533, line: 315, type: !68)
!9323 = !DILocation(line: 315, column: 39, scope: !9315)
!9324 = !DILocalVariable(name: "rename", arg: 4, scope: !9315, file: !533, line: 315, type: !142)
!9325 = !DILocation(line: 315, column: 57, scope: !9315)
!9326 = !DILocalVariable(name: "base_offset", scope: !9315, file: !533, line: 317, type: !506)
!9327 = !DILocation(line: 317, column: 13, scope: !9315)
!9328 = !DILocation(line: 317, column: 43, scope: !9315)
!9329 = !DILocation(line: 317, column: 27, scope: !9315)
!9330 = !DILocation(line: 317, column: 51, scope: !9315)
!9331 = !DILocation(line: 317, column: 49, scope: !9315)
!9332 = !DILocalVariable(name: "filelen", scope: !9315, file: !533, line: 318, type: !55)
!9333 = !DILocation(line: 318, column: 10, scope: !9315)
!9334 = !DILocation(line: 318, column: 20, scope: !9315)
!9335 = !DILocation(line: 318, column: 42, scope: !9315)
!9336 = !DILocation(line: 318, column: 49, scope: !9315)
!9337 = !DILocation(line: 318, column: 47, scope: !9315)
!9338 = !DILocation(line: 318, column: 34, scope: !9315)
!9339 = !DILocation(line: 318, column: 32, scope: !9315)
!9340 = !DILocation(line: 320, column: 9, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9315, file: !533, line: 320, column: 7)
!9342 = !DILocation(line: 320, column: 7, scope: !9315)
!9343 = !DILocation(line: 321, column: 5, scope: !9341)
!9344 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !9315, file: !533, line: 325, type: !55)
!9345 = !DILocation(line: 325, column: 10, scope: !9315)
!9346 = !DILocation(line: 325, column: 46, scope: !9315)
!9347 = !DILocation(line: 325, column: 38, scope: !9315)
!9348 = !DILocation(line: 325, column: 68, scope: !9315)
!9349 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !9315, file: !533, line: 326, type: !55)
!9350 = !DILocation(line: 326, column: 10, scope: !9315)
!9351 = !DILocation(line: 326, column: 37, scope: !9315)
!9352 = !DILocation(line: 328, column: 7, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9315, file: !533, line: 328, column: 7)
!9354 = !DILocation(line: 328, column: 32, scope: !9353)
!9355 = !DILocation(line: 328, column: 7, scope: !9315)
!9356 = !DILocation(line: 329, column: 30, scope: !9353)
!9357 = !DILocation(line: 329, column: 5, scope: !9353)
!9358 = !DILocalVariable(name: "ssize", scope: !9315, file: !533, line: 331, type: !540)
!9359 = !DILocation(line: 331, column: 11, scope: !9315)
!9360 = !DILocation(line: 331, column: 19, scope: !9315)
!9361 = !DILocation(line: 331, column: 29, scope: !9315)
!9362 = !DILocation(line: 331, column: 27, scope: !9315)
!9363 = !DILocation(line: 331, column: 54, scope: !9315)
!9364 = !DILocalVariable(name: "s", scope: !9315, file: !533, line: 332, type: !9)
!9365 = !DILocation(line: 332, column: 9, scope: !9315)
!9366 = !DILocation(line: 332, column: 21, scope: !9315)
!9367 = !DILocation(line: 332, column: 13, scope: !9315)
!9368 = !DILocation(line: 333, column: 8, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9315, file: !533, line: 333, column: 7)
!9370 = !DILocation(line: 333, column: 7, scope: !9315)
!9371 = !DILocation(line: 334, column: 12, scope: !9369)
!9372 = !DILocation(line: 334, column: 5, scope: !9369)
!9373 = !DILocalVariable(name: "dirp", scope: !9315, file: !533, line: 336, type: !541)
!9374 = !DILocation(line: 336, column: 8, scope: !9315)
!9375 = !DILocalVariable(name: "sdir", scope: !9315, file: !533, line: 337, type: !7)
!9376 = !DILocation(line: 337, column: 7, scope: !9315)
!9377 = !DILocalVariable(name: "base_max", scope: !9315, file: !533, line: 338, type: !55)
!9378 = !DILocation(line: 338, column: 10, scope: !9315)
!9379 = !DILocation(line: 339, column: 3, scope: !9315)
!9380 = !DILocation(line: 341, column: 15, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9315, file: !533, line: 340, column: 5)
!9382 = !DILocation(line: 341, column: 18, scope: !9381)
!9383 = !DILocation(line: 341, column: 24, scope: !9381)
!9384 = !DILocation(line: 341, column: 32, scope: !9381)
!9385 = !DILocation(line: 341, column: 7, scope: !9381)
!9386 = !DILocation(line: 343, column: 11, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9381, file: !533, line: 343, column: 11)
!9388 = !DILocation(line: 343, column: 23, scope: !9387)
!9389 = !DILocation(line: 343, column: 11, scope: !9381)
!9390 = !DILocation(line: 344, column: 17, scope: !9387)
!9391 = !DILocation(line: 344, column: 21, scope: !9387)
!9392 = !DILocation(line: 344, column: 19, scope: !9387)
!9393 = !DILocation(line: 344, column: 30, scope: !9387)
!9394 = !DILocation(line: 344, column: 52, scope: !9387)
!9395 = !DILocation(line: 344, column: 9, scope: !9387)
!9396 = !DILocation(line: 346, column: 34, scope: !9387)
!9397 = !DILocation(line: 346, column: 46, scope: !9387)
!9398 = !DILocation(line: 346, column: 53, scope: !9387)
!9399 = !DILocation(line: 346, column: 62, scope: !9387)
!9400 = !DILocation(line: 346, column: 17, scope: !9387)
!9401 = !DILocation(line: 346, column: 9, scope: !9387)
!9402 = !DILocation(line: 350, column: 13, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9387, file: !533, line: 348, column: 11)
!9404 = !DILocation(line: 353, column: 17, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9403, file: !533, line: 353, column: 17)
!9406 = !DILocation(line: 353, column: 29, scope: !9405)
!9407 = !DILocation(line: 353, column: 17, scope: !9403)
!9408 = !DILocation(line: 355, column: 29, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !533, line: 354, column: 15)
!9410 = !DILocation(line: 356, column: 25, scope: !9409)
!9411 = !DILocation(line: 356, column: 29, scope: !9409)
!9412 = !DILocation(line: 356, column: 27, scope: !9409)
!9413 = !DILocation(line: 356, column: 38, scope: !9409)
!9414 = !DILocation(line: 357, column: 25, scope: !9409)
!9415 = !DILocation(line: 356, column: 17, scope: !9409)
!9416 = !DILocation(line: 358, column: 15, scope: !9409)
!9417 = !DILocation(line: 359, column: 13, scope: !9403)
!9418 = !DILocation(line: 361, column: 30, scope: !9403)
!9419 = !DILocation(line: 361, column: 33, scope: !9403)
!9420 = !DILocation(line: 361, column: 47, scope: !9403)
!9421 = !DILocation(line: 361, column: 13, scope: !9403)
!9422 = !DILocation(line: 362, column: 13, scope: !9403)
!9423 = !DILocation(line: 365, column: 19, scope: !9403)
!9424 = !DILocation(line: 365, column: 13, scope: !9403)
!9425 = !DILocation(line: 366, column: 13, scope: !9403)
!9426 = !DILocation(line: 366, column: 19, scope: !9403)
!9427 = !DILocation(line: 367, column: 13, scope: !9403)
!9428 = !DILocation(line: 370, column: 13, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9381, file: !533, line: 370, column: 11)
!9430 = !DILocation(line: 370, column: 11, scope: !9381)
!9431 = !DILocation(line: 371, column: 9, scope: !9429)
!9432 = !DILocation(line: 373, column: 11, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9381, file: !533, line: 373, column: 11)
!9434 = !DILocation(line: 373, column: 16, scope: !9433)
!9435 = !DILocation(line: 373, column: 11, scope: !9381)
!9436 = !DILocation(line: 375, column: 16, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9433, file: !533, line: 374, column: 9)
!9438 = !DILocation(line: 376, column: 23, scope: !9437)
!9439 = !DILocation(line: 377, column: 9, scope: !9437)
!9440 = !DILocalVariable(name: "flags", scope: !9381, file: !533, line: 378, type: !70)
!9441 = !DILocation(line: 378, column: 16, scope: !9381)
!9442 = !DILocation(line: 378, column: 24, scope: !9381)
!9443 = !DILocation(line: 378, column: 36, scope: !9381)
!9444 = !DILocation(line: 379, column: 32, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9381, file: !533, line: 379, column: 11)
!9446 = !DILocation(line: 379, column: 38, scope: !9445)
!9447 = !DILocation(line: 379, column: 44, scope: !9445)
!9448 = !DILocation(line: 379, column: 48, scope: !9445)
!9449 = !DILocation(line: 379, column: 46, scope: !9445)
!9450 = !DILocation(line: 379, column: 61, scope: !9445)
!9451 = !DILocation(line: 379, column: 11, scope: !9445)
!9452 = !DILocation(line: 379, column: 68, scope: !9445)
!9453 = !DILocation(line: 379, column: 11, scope: !9381)
!9454 = !DILocation(line: 380, column: 9, scope: !9445)
!9455 = !DILocalVariable(name: "e", scope: !9381, file: !533, line: 381, type: !7)
!9456 = !DILocation(line: 381, column: 11, scope: !9381)
!9457 = !DILocation(line: 381, column: 15, scope: !9381)
!9458 = !DILocation(line: 382, column: 11, scope: !9459)
!9459 = distinct !DILexicalBlock(scope: !9381, file: !533, line: 382, column: 11)
!9460 = !DILocation(line: 382, column: 13, scope: !9459)
!9461 = !DILocation(line: 382, column: 11, scope: !9381)
!9462 = !DILocation(line: 384, column: 15, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9464, file: !533, line: 384, column: 15)
!9464 = distinct !DILexicalBlock(scope: !9459, file: !533, line: 383, column: 9)
!9465 = !DILocation(line: 384, column: 15, scope: !9464)
!9466 = !DILocation(line: 385, column: 23, scope: !9463)
!9467 = !DILocation(line: 385, column: 13, scope: !9463)
!9468 = !DILocation(line: 386, column: 17, scope: !9464)
!9469 = !DILocation(line: 386, column: 11, scope: !9464)
!9470 = !DILocation(line: 387, column: 19, scope: !9464)
!9471 = !DILocation(line: 387, column: 11, scope: !9464)
!9472 = !DILocation(line: 387, column: 17, scope: !9464)
!9473 = !DILocation(line: 388, column: 11, scope: !9464)
!9474 = distinct !{!9474, !9379, !9475}
!9475 = !DILocation(line: 390, column: 5, scope: !9315)
!9476 = !DILocation(line: 392, column: 7, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9315, file: !533, line: 392, column: 7)
!9478 = !DILocation(line: 392, column: 7, scope: !9315)
!9479 = !DILocation(line: 393, column: 15, scope: !9477)
!9480 = !DILocation(line: 393, column: 5, scope: !9477)
!9481 = !DILocation(line: 394, column: 10, scope: !9315)
!9482 = !DILocation(line: 394, column: 3, scope: !9315)
!9483 = !DILocation(line: 395, column: 1, scope: !9315)
!9484 = distinct !DISubprogram(name: "numbered_backup", scope: !533, file: !533, line: 207, type: !9485, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !529, retainedNodes: !216)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!532, !7, !143, !55, !55, !506, !9487, !161}
!9487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!9488 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9484, file: !533, line: 207, type: !7)
!9489 = !DILocation(line: 207, column: 22, scope: !9484)
!9490 = !DILocalVariable(name: "buffer", arg: 2, scope: !9484, file: !533, line: 207, type: !143)
!9491 = !DILocation(line: 207, column: 37, scope: !9484)
!9492 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !9484, file: !533, line: 207, type: !55)
!9493 = !DILocation(line: 207, column: 52, scope: !9484)
!9494 = !DILocalVariable(name: "filelen", arg: 4, scope: !9484, file: !533, line: 207, type: !55)
!9495 = !DILocation(line: 207, column: 72, scope: !9484)
!9496 = !DILocalVariable(name: "base_offset", arg: 5, scope: !9484, file: !533, line: 208, type: !506)
!9497 = !DILocation(line: 208, column: 28, scope: !9484)
!9498 = !DILocalVariable(name: "dirpp", arg: 6, scope: !9484, file: !533, line: 208, type: !9487)
!9499 = !DILocation(line: 208, column: 47, scope: !9484)
!9500 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !9484, file: !533, line: 208, type: !161)
!9501 = !DILocation(line: 208, column: 59, scope: !9484)
!9502 = !DILocalVariable(name: "result", scope: !9484, file: !533, line: 210, type: !532)
!9503 = !DILocation(line: 210, column: 31, scope: !9484)
!9504 = !DILocalVariable(name: "dirp", scope: !9484, file: !533, line: 211, type: !541)
!9505 = !DILocation(line: 211, column: 8, scope: !9484)
!9506 = !DILocation(line: 211, column: 16, scope: !9484)
!9507 = !DILocation(line: 211, column: 15, scope: !9484)
!9508 = !DILocalVariable(name: "dp", scope: !9484, file: !533, line: 212, type: !545)
!9509 = !DILocation(line: 212, column: 18, scope: !9484)
!9510 = !DILocalVariable(name: "buf", scope: !9484, file: !533, line: 213, type: !9)
!9511 = !DILocation(line: 213, column: 9, scope: !9484)
!9512 = !DILocation(line: 213, column: 16, scope: !9484)
!9513 = !DILocation(line: 213, column: 15, scope: !9484)
!9514 = !DILocalVariable(name: "versionlenmax", scope: !9484, file: !533, line: 214, type: !55)
!9515 = !DILocation(line: 214, column: 10, scope: !9484)
!9516 = !DILocalVariable(name: "base", scope: !9484, file: !533, line: 215, type: !9)
!9517 = !DILocation(line: 215, column: 9, scope: !9484)
!9518 = !DILocation(line: 215, column: 16, scope: !9484)
!9519 = !DILocation(line: 215, column: 22, scope: !9484)
!9520 = !DILocation(line: 215, column: 20, scope: !9484)
!9521 = !DILocalVariable(name: "baselen", scope: !9484, file: !533, line: 216, type: !55)
!9522 = !DILocation(line: 216, column: 10, scope: !9484)
!9523 = !DILocation(line: 216, column: 30, scope: !9484)
!9524 = !DILocation(line: 216, column: 20, scope: !9484)
!9525 = !DILocation(line: 218, column: 7, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9484, file: !533, line: 218, column: 7)
!9527 = !DILocation(line: 218, column: 7, scope: !9484)
!9528 = !DILocation(line: 219, column: 16, scope: !9526)
!9529 = !DILocation(line: 219, column: 5, scope: !9526)
!9530 = !DILocalVariable(name: "tmp", scope: !9531, file: !533, line: 224, type: !267)
!9531 = distinct !DILexicalBlock(scope: !9526, file: !533, line: 221, column: 5)
!9532 = !DILocation(line: 224, column: 12, scope: !9531)
!9533 = !DILocation(line: 225, column: 7, scope: !9531)
!9534 = !DILocation(line: 225, column: 20, scope: !9531)
!9535 = !DILocation(line: 226, column: 15, scope: !9531)
!9536 = !DILocation(line: 226, column: 7, scope: !9531)
!9537 = !DILocation(line: 227, column: 25, scope: !9531)
!9538 = !DILocation(line: 227, column: 33, scope: !9531)
!9539 = !DILocation(line: 227, column: 41, scope: !9531)
!9540 = !DILocation(line: 227, column: 14, scope: !9531)
!9541 = !DILocation(line: 227, column: 12, scope: !9531)
!9542 = !DILocation(line: 228, column: 12, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9531, file: !533, line: 228, column: 11)
!9544 = !DILocation(line: 228, column: 17, scope: !9543)
!9545 = !DILocation(line: 228, column: 20, scope: !9543)
!9546 = !DILocation(line: 228, column: 26, scope: !9543)
!9547 = !DILocation(line: 228, column: 11, scope: !9531)
!9548 = !DILocation(line: 229, column: 16, scope: !9543)
!9549 = !DILocation(line: 229, column: 9, scope: !9543)
!9550 = !DILocation(line: 230, column: 15, scope: !9531)
!9551 = !DILocation(line: 230, column: 7, scope: !9531)
!9552 = !DILocation(line: 231, column: 15, scope: !9531)
!9553 = !DILocation(line: 231, column: 22, scope: !9531)
!9554 = !DILocation(line: 231, column: 20, scope: !9531)
!9555 = !DILocation(line: 231, column: 7, scope: !9531)
!9556 = !DILocation(line: 232, column: 12, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9531, file: !533, line: 232, column: 11)
!9558 = !DILocation(line: 232, column: 11, scope: !9531)
!9559 = !DILocation(line: 233, column: 16, scope: !9557)
!9560 = !DILocation(line: 233, column: 9, scope: !9557)
!9561 = !DILocation(line: 234, column: 16, scope: !9531)
!9562 = !DILocation(line: 234, column: 8, scope: !9531)
!9563 = !DILocation(line: 234, column: 14, scope: !9531)
!9564 = !DILocation(line: 237, column: 3, scope: !9484)
!9565 = !DILocation(line: 237, column: 25, scope: !9484)
!9566 = !DILocation(line: 237, column: 16, scope: !9484)
!9567 = !DILocation(line: 237, column: 14, scope: !9484)
!9568 = !DILocation(line: 237, column: 32, scope: !9484)
!9569 = !DILocalVariable(name: "p", scope: !9570, file: !533, line: 239, type: !116)
!9570 = distinct !DILexicalBlock(scope: !9484, file: !533, line: 238, column: 5)
!9571 = !DILocation(line: 239, column: 19, scope: !9570)
!9572 = !DILocalVariable(name: "q", scope: !9570, file: !533, line: 240, type: !9)
!9573 = !DILocation(line: 240, column: 13, scope: !9570)
!9574 = !DILocalVariable(name: "all_9s", scope: !9570, file: !533, line: 241, type: !142)
!9575 = !DILocation(line: 241, column: 12, scope: !9570)
!9576 = !DILocalVariable(name: "versionlen", scope: !9570, file: !533, line: 242, type: !55)
!9577 = !DILocation(line: 242, column: 14, scope: !9570)
!9578 = !DILocation(line: 244, column: 11, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9570, file: !533, line: 244, column: 11)
!9580 = !DILocation(line: 244, column: 34, scope: !9579)
!9581 = !DILocation(line: 244, column: 42, scope: !9579)
!9582 = !DILocation(line: 244, column: 32, scope: !9579)
!9583 = !DILocation(line: 244, column: 11, scope: !9570)
!9584 = !DILocation(line: 245, column: 9, scope: !9579)
!9585 = distinct !{!9585, !9564, !9586}
!9586 = !DILocation(line: 301, column: 5, scope: !9484)
!9587 = !DILocation(line: 247, column: 19, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9570, file: !533, line: 247, column: 11)
!9589 = !DILocation(line: 247, column: 25, scope: !9588)
!9590 = !DILocation(line: 247, column: 23, scope: !9588)
!9591 = !DILocation(line: 247, column: 38, scope: !9588)
!9592 = !DILocation(line: 247, column: 42, scope: !9588)
!9593 = !DILocation(line: 247, column: 50, scope: !9588)
!9594 = !DILocation(line: 247, column: 58, scope: !9588)
!9595 = !DILocation(line: 247, column: 11, scope: !9588)
!9596 = !DILocation(line: 247, column: 63, scope: !9588)
!9597 = !DILocation(line: 247, column: 11, scope: !9570)
!9598 = !DILocation(line: 248, column: 9, scope: !9588)
!9599 = !DILocation(line: 250, column: 11, scope: !9570)
!9600 = !DILocation(line: 250, column: 15, scope: !9570)
!9601 = !DILocation(line: 250, column: 24, scope: !9570)
!9602 = !DILocation(line: 250, column: 22, scope: !9570)
!9603 = !DILocation(line: 250, column: 32, scope: !9570)
!9604 = !DILocation(line: 250, column: 9, scope: !9570)
!9605 = !DILocation(line: 256, column: 22, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9570, file: !533, line: 256, column: 11)
!9607 = !DILocation(line: 256, column: 21, scope: !9606)
!9608 = !DILocation(line: 256, column: 18, scope: !9606)
!9609 = !DILocation(line: 256, column: 24, scope: !9606)
!9610 = !DILocation(line: 256, column: 28, scope: !9606)
!9611 = !DILocation(line: 256, column: 27, scope: !9606)
!9612 = !DILocation(line: 256, column: 30, scope: !9606)
!9613 = !DILocation(line: 256, column: 11, scope: !9570)
!9614 = !DILocation(line: 257, column: 9, scope: !9606)
!9615 = !DILocation(line: 258, column: 18, scope: !9570)
!9616 = !DILocation(line: 258, column: 17, scope: !9570)
!9617 = !DILocation(line: 258, column: 20, scope: !9570)
!9618 = !DILocation(line: 258, column: 14, scope: !9570)
!9619 = !DILocation(line: 259, column: 23, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9570, file: !533, line: 259, column: 7)
!9621 = !DILocation(line: 259, column: 12, scope: !9620)
!9622 = !DILocation(line: 259, column: 28, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9620, file: !533, line: 259, column: 7)
!9624 = !DILocation(line: 259, column: 7, scope: !9620)
!9625 = !DILocation(line: 260, column: 20, scope: !9623)
!9626 = !DILocation(line: 260, column: 22, scope: !9623)
!9627 = !DILocation(line: 260, column: 34, scope: !9623)
!9628 = !DILocation(line: 260, column: 16, scope: !9623)
!9629 = !DILocation(line: 260, column: 9, scope: !9623)
!9630 = !DILocation(line: 259, column: 63, scope: !9623)
!9631 = !DILocation(line: 259, column: 7, scope: !9623)
!9632 = distinct !{!9632, !9624, !9633}
!9633 = !DILocation(line: 260, column: 40, scope: !9620)
!9634 = !DILocation(line: 262, column: 14, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9570, file: !533, line: 262, column: 11)
!9636 = !DILocation(line: 262, column: 16, scope: !9635)
!9637 = !DILocation(line: 262, column: 28, scope: !9635)
!9638 = !DILocation(line: 262, column: 35, scope: !9635)
!9639 = !DILocation(line: 262, column: 39, scope: !9635)
!9640 = !DILocation(line: 262, column: 41, scope: !9635)
!9641 = !DILocation(line: 262, column: 52, scope: !9635)
!9642 = !DILocation(line: 263, column: 14, scope: !9635)
!9643 = !DILocation(line: 263, column: 18, scope: !9635)
!9644 = !DILocation(line: 263, column: 34, scope: !9635)
!9645 = !DILocation(line: 263, column: 32, scope: !9635)
!9646 = !DILocation(line: 264, column: 18, scope: !9635)
!9647 = !DILocation(line: 264, column: 22, scope: !9635)
!9648 = !DILocation(line: 264, column: 39, scope: !9635)
!9649 = !DILocation(line: 264, column: 36, scope: !9635)
!9650 = !DILocation(line: 265, column: 22, scope: !9635)
!9651 = !DILocation(line: 265, column: 33, scope: !9635)
!9652 = !DILocation(line: 265, column: 39, scope: !9635)
!9653 = !DILocation(line: 265, column: 37, scope: !9635)
!9654 = !DILocation(line: 265, column: 47, scope: !9635)
!9655 = !DILocation(line: 265, column: 52, scope: !9635)
!9656 = !DILocation(line: 265, column: 55, scope: !9635)
!9657 = !DILocation(line: 265, column: 25, scope: !9635)
!9658 = !DILocation(line: 265, column: 67, scope: !9635)
!9659 = !DILocation(line: 262, column: 11, scope: !9570)
!9660 = !DILocation(line: 266, column: 9, scope: !9635)
!9661 = !DILocation(line: 272, column: 23, scope: !9570)
!9662 = !DILocation(line: 272, column: 32, scope: !9570)
!9663 = !DILocation(line: 272, column: 30, scope: !9570)
!9664 = !DILocation(line: 272, column: 21, scope: !9570)
!9665 = !DILocation(line: 273, column: 17, scope: !9570)
!9666 = !DILocation(line: 273, column: 14, scope: !9570)
!9667 = !DILocalVariable(name: "new_buffer_size", scope: !9570, file: !533, line: 274, type: !55)
!9668 = !DILocation(line: 274, column: 14, scope: !9570)
!9669 = !DILocation(line: 274, column: 32, scope: !9570)
!9670 = !DILocation(line: 274, column: 40, scope: !9570)
!9671 = !DILocation(line: 274, column: 46, scope: !9570)
!9672 = !DILocation(line: 274, column: 44, scope: !9570)
!9673 = !DILocation(line: 274, column: 60, scope: !9570)
!9674 = !DILocation(line: 275, column: 11, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9570, file: !533, line: 275, column: 11)
!9676 = !DILocation(line: 275, column: 25, scope: !9675)
!9677 = !DILocation(line: 275, column: 23, scope: !9675)
!9678 = !DILocation(line: 275, column: 11, scope: !9570)
!9679 = !DILocation(line: 277, column: 17, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9681, file: !533, line: 277, column: 15)
!9681 = distinct !DILexicalBlock(scope: !9675, file: !533, line: 276, column: 9)
!9682 = !DILocation(line: 277, column: 15, scope: !9681)
!9683 = !DILocation(line: 278, column: 29, scope: !9680)
!9684 = !DILocation(line: 278, column: 13, scope: !9680)
!9685 = !DILocalVariable(name: "new_buf", scope: !9681, file: !533, line: 279, type: !9)
!9686 = !DILocation(line: 279, column: 17, scope: !9681)
!9687 = !DILocation(line: 279, column: 36, scope: !9681)
!9688 = !DILocation(line: 279, column: 41, scope: !9681)
!9689 = !DILocation(line: 279, column: 27, scope: !9681)
!9690 = !DILocation(line: 280, column: 16, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9681, file: !533, line: 280, column: 15)
!9692 = !DILocation(line: 280, column: 15, scope: !9681)
!9693 = !DILocation(line: 282, column: 25, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9691, file: !533, line: 281, column: 13)
!9695 = !DILocation(line: 282, column: 16, scope: !9694)
!9696 = !DILocation(line: 282, column: 23, scope: !9694)
!9697 = !DILocation(line: 283, column: 15, scope: !9694)
!9698 = !DILocation(line: 285, column: 17, scope: !9681)
!9699 = !DILocation(line: 285, column: 15, scope: !9681)
!9700 = !DILocation(line: 286, column: 25, scope: !9681)
!9701 = !DILocation(line: 286, column: 23, scope: !9681)
!9702 = !DILocation(line: 287, column: 9, scope: !9681)
!9703 = !DILocation(line: 288, column: 11, scope: !9570)
!9704 = !DILocation(line: 288, column: 17, scope: !9570)
!9705 = !DILocation(line: 288, column: 15, scope: !9570)
!9706 = !DILocation(line: 288, column: 9, scope: !9570)
!9707 = !DILocation(line: 289, column: 9, scope: !9570)
!9708 = !DILocation(line: 289, column: 12, scope: !9570)
!9709 = !DILocation(line: 290, column: 9, scope: !9570)
!9710 = !DILocation(line: 290, column: 12, scope: !9570)
!9711 = !DILocation(line: 291, column: 8, scope: !9570)
!9712 = !DILocation(line: 291, column: 10, scope: !9570)
!9713 = !DILocation(line: 292, column: 12, scope: !9570)
!9714 = !DILocation(line: 292, column: 9, scope: !9570)
!9715 = !DILocation(line: 293, column: 15, scope: !9570)
!9716 = !DILocation(line: 293, column: 18, scope: !9570)
!9717 = !DILocation(line: 293, column: 21, scope: !9570)
!9718 = !DILocation(line: 293, column: 32, scope: !9570)
!9719 = !DILocation(line: 293, column: 7, scope: !9570)
!9720 = !DILocation(line: 297, column: 12, scope: !9570)
!9721 = !DILocation(line: 297, column: 9, scope: !9570)
!9722 = !DILocation(line: 298, column: 7, scope: !9570)
!9723 = !DILocation(line: 298, column: 15, scope: !9570)
!9724 = !DILocation(line: 298, column: 14, scope: !9570)
!9725 = !DILocation(line: 298, column: 19, scope: !9570)
!9726 = !DILocation(line: 299, column: 10, scope: !9570)
!9727 = !DILocation(line: 299, column: 12, scope: !9570)
!9728 = distinct !{!9728, !9722, !9729}
!9729 = !DILocation(line: 299, column: 14, scope: !9570)
!9730 = !DILocation(line: 300, column: 10, scope: !9570)
!9731 = !DILocation(line: 300, column: 7, scope: !9570)
!9732 = !DILocation(line: 303, column: 13, scope: !9484)
!9733 = !DILocation(line: 303, column: 4, scope: !9484)
!9734 = !DILocation(line: 303, column: 11, scope: !9484)
!9735 = !DILocation(line: 304, column: 10, scope: !9484)
!9736 = !DILocation(line: 304, column: 3, scope: !9484)
!9737 = !DILocation(line: 305, column: 1, scope: !9484)
!9738 = distinct !DISubprogram(name: "check_extension", scope: !533, file: !533, line: 105, type: !9739, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !529, retainedNodes: !216)
!9739 = !DISubroutineType(types: !9740)
!9740 = !{null, !9, !55, !10, !7, !9741}
!9741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!9742 = !DILocalVariable(name: "file", arg: 1, scope: !9738, file: !533, line: 105, type: !9)
!9743 = !DILocation(line: 105, column: 24, scope: !9738)
!9744 = !DILocalVariable(name: "filelen", arg: 2, scope: !9738, file: !533, line: 105, type: !55)
!9745 = !DILocation(line: 105, column: 37, scope: !9738)
!9746 = !DILocalVariable(name: "e", arg: 3, scope: !9738, file: !533, line: 105, type: !10)
!9747 = !DILocation(line: 105, column: 51, scope: !9738)
!9748 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !9738, file: !533, line: 106, type: !7)
!9749 = !DILocation(line: 106, column: 22, scope: !9738)
!9750 = !DILocalVariable(name: "base_max", arg: 5, scope: !9738, file: !533, line: 106, type: !9741)
!9751 = !DILocation(line: 106, column: 38, scope: !9738)
!9752 = !DILocalVariable(name: "base", scope: !9738, file: !533, line: 108, type: !9)
!9753 = !DILocation(line: 108, column: 9, scope: !9738)
!9754 = !DILocation(line: 108, column: 32, scope: !9738)
!9755 = !DILocation(line: 108, column: 16, scope: !9738)
!9756 = !DILocalVariable(name: "baselen", scope: !9738, file: !533, line: 109, type: !55)
!9757 = !DILocation(line: 109, column: 10, scope: !9738)
!9758 = !DILocation(line: 109, column: 30, scope: !9738)
!9759 = !DILocation(line: 109, column: 20, scope: !9738)
!9760 = !DILocalVariable(name: "baselen_max", scope: !9738, file: !533, line: 110, type: !55)
!9761 = !DILocation(line: 110, column: 10, scope: !9738)
!9762 = !DILocation(line: 112, column: 49, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9738, file: !533, line: 112, column: 7)
!9764 = !DILocation(line: 112, column: 47, scope: !9763)
!9765 = !DILocation(line: 112, column: 7, scope: !9738)
!9766 = !DILocation(line: 115, column: 12, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9768, file: !533, line: 115, column: 11)
!9768 = distinct !DILexicalBlock(scope: !9763, file: !533, line: 113, column: 5)
!9769 = !DILocation(line: 115, column: 11, scope: !9767)
!9770 = !DILocation(line: 115, column: 21, scope: !9767)
!9771 = !DILocation(line: 115, column: 11, scope: !9768)
!9772 = !DILocalVariable(name: "name_max", scope: !9773, file: !533, line: 117, type: !31)
!9773 = distinct !DILexicalBlock(scope: !9767, file: !533, line: 116, column: 9)
!9774 = !DILocation(line: 117, column: 16, scope: !9773)
!9775 = !DILocation(line: 118, column: 15, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9773, file: !533, line: 118, column: 15)
!9777 = !DILocation(line: 118, column: 22, scope: !9776)
!9778 = !DILocation(line: 118, column: 15, scope: !9773)
!9779 = !DILocalVariable(name: "tmp", scope: !9780, file: !533, line: 123, type: !267)
!9780 = distinct !DILexicalBlock(scope: !9776, file: !533, line: 119, column: 13)
!9781 = !DILocation(line: 123, column: 20, scope: !9780)
!9782 = !DILocation(line: 124, column: 15, scope: !9780)
!9783 = !DILocation(line: 124, column: 28, scope: !9780)
!9784 = !DILocation(line: 125, column: 23, scope: !9780)
!9785 = !DILocation(line: 125, column: 15, scope: !9780)
!9786 = !DILocation(line: 126, column: 15, scope: !9780)
!9787 = !DILocation(line: 126, column: 21, scope: !9780)
!9788 = !DILocation(line: 127, column: 36, scope: !9780)
!9789 = !DILocation(line: 127, column: 26, scope: !9780)
!9790 = !DILocation(line: 127, column: 24, scope: !9780)
!9791 = !DILocation(line: 128, column: 28, scope: !9780)
!9792 = !DILocation(line: 128, column: 27, scope: !9780)
!9793 = !DILocation(line: 128, column: 24, scope: !9780)
!9794 = !DILocation(line: 129, column: 23, scope: !9780)
!9795 = !DILocation(line: 129, column: 15, scope: !9780)
!9796 = !DILocation(line: 130, column: 13, scope: !9780)
!9797 = !DILocation(line: 133, column: 15, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9776, file: !533, line: 132, column: 13)
!9799 = !DILocation(line: 133, column: 21, scope: !9798)
!9800 = !DILocation(line: 134, column: 37, scope: !9798)
!9801 = !DILocation(line: 134, column: 26, scope: !9798)
!9802 = !DILocation(line: 134, column: 24, scope: !9798)
!9803 = !DILocation(line: 135, column: 28, scope: !9798)
!9804 = !DILocation(line: 135, column: 27, scope: !9798)
!9805 = !DILocation(line: 135, column: 24, scope: !9798)
!9806 = !DILocation(line: 138, column: 29, scope: !9773)
!9807 = !DILocation(line: 138, column: 26, scope: !9773)
!9808 = !DILocation(line: 138, column: 38, scope: !9773)
!9809 = !DILocation(line: 138, column: 41, scope: !9773)
!9810 = !DILocation(line: 138, column: 50, scope: !9773)
!9811 = !DILocation(line: 138, column: 24, scope: !9773)
!9812 = !DILocation(line: 138, column: 64, scope: !9773)
!9813 = !DILocation(line: 139, column: 26, scope: !9773)
!9814 = !DILocation(line: 139, column: 35, scope: !9773)
!9815 = !DILocation(line: 138, column: 12, scope: !9773)
!9816 = !DILocation(line: 138, column: 21, scope: !9773)
!9817 = !DILocation(line: 140, column: 9, scope: !9773)
!9818 = !DILocation(line: 142, column: 22, scope: !9768)
!9819 = !DILocation(line: 142, column: 21, scope: !9768)
!9820 = !DILocation(line: 142, column: 19, scope: !9768)
!9821 = !DILocation(line: 143, column: 5, scope: !9768)
!9822 = !DILocation(line: 160, column: 7, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9738, file: !533, line: 160, column: 7)
!9824 = !DILocation(line: 160, column: 21, scope: !9823)
!9825 = !DILocation(line: 160, column: 19, scope: !9823)
!9826 = !DILocation(line: 160, column: 7, scope: !9738)
!9827 = !DILocation(line: 162, column: 17, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9823, file: !533, line: 161, column: 5)
!9829 = !DILocation(line: 162, column: 24, scope: !9828)
!9830 = !DILocation(line: 162, column: 22, scope: !9828)
!9831 = !DILocation(line: 162, column: 34, scope: !9828)
!9832 = !DILocation(line: 162, column: 32, scope: !9828)
!9833 = !DILocation(line: 162, column: 15, scope: !9828)
!9834 = !DILocation(line: 163, column: 11, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9828, file: !533, line: 163, column: 11)
!9836 = !DILocation(line: 163, column: 26, scope: !9835)
!9837 = !DILocation(line: 163, column: 23, scope: !9835)
!9838 = !DILocation(line: 163, column: 11, scope: !9828)
!9839 = !DILocation(line: 164, column: 19, scope: !9835)
!9840 = !DILocation(line: 164, column: 31, scope: !9835)
!9841 = !DILocation(line: 164, column: 17, scope: !9835)
!9842 = !DILocation(line: 164, column: 9, scope: !9835)
!9843 = !DILocation(line: 165, column: 23, scope: !9828)
!9844 = !DILocation(line: 165, column: 7, scope: !9828)
!9845 = !DILocation(line: 165, column: 12, scope: !9828)
!9846 = !DILocation(line: 165, column: 21, scope: !9828)
!9847 = !DILocation(line: 166, column: 7, scope: !9828)
!9848 = !DILocation(line: 166, column: 12, scope: !9828)
!9849 = !DILocation(line: 166, column: 20, scope: !9828)
!9850 = !DILocation(line: 166, column: 25, scope: !9828)
!9851 = !DILocation(line: 167, column: 5, scope: !9828)
!9852 = !DILocation(line: 168, column: 1, scope: !9738)
!9853 = distinct !DISubprogram(name: "backup_file_rename", scope: !9854, file: !9854, line: 28, type: !9855, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1287, retainedNodes: !216)
!9854 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9855 = !DISubroutineType(types: !9856)
!9856 = !{!9, !7, !116, !68}
!9857 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9853, file: !9854, line: 28, type: !7)
!9858 = !DILocation(line: 28, column: 25, scope: !9853)
!9859 = !DILocalVariable(name: "file", arg: 2, scope: !9853, file: !9854, line: 28, type: !116)
!9860 = !DILocation(line: 28, column: 45, scope: !9853)
!9861 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9853, file: !9854, line: 28, type: !68)
!9862 = !DILocation(line: 28, column: 68, scope: !9853)
!9863 = !DILocation(line: 30, column: 31, scope: !9853)
!9864 = !DILocation(line: 30, column: 39, scope: !9853)
!9865 = !DILocation(line: 30, column: 45, scope: !9853)
!9866 = !DILocation(line: 30, column: 10, scope: !9853)
!9867 = !DILocation(line: 30, column: 3, scope: !9853)
!9868 = distinct !DISubprogram(name: "find_backup_file_name", scope: !576, file: !576, line: 33, type: !9855, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !560, retainedNodes: !216)
!9869 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9868, file: !576, line: 33, type: !7)
!9870 = !DILocation(line: 33, column: 28, scope: !9868)
!9871 = !DILocalVariable(name: "file", arg: 2, scope: !9868, file: !576, line: 33, type: !116)
!9872 = !DILocation(line: 33, column: 48, scope: !9868)
!9873 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9868, file: !576, line: 34, type: !68)
!9874 = !DILocation(line: 34, column: 41, scope: !9868)
!9875 = !DILocalVariable(name: "result", scope: !9868, file: !576, line: 36, type: !9)
!9876 = !DILocation(line: 36, column: 9, scope: !9868)
!9877 = !DILocation(line: 36, column: 39, scope: !9868)
!9878 = !DILocation(line: 36, column: 47, scope: !9868)
!9879 = !DILocation(line: 36, column: 53, scope: !9868)
!9880 = !DILocation(line: 36, column: 18, scope: !9868)
!9881 = !DILocation(line: 37, column: 8, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9868, file: !576, line: 37, column: 7)
!9883 = !DILocation(line: 37, column: 7, scope: !9868)
!9884 = !DILocation(line: 38, column: 5, scope: !9882)
!9885 = !DILocation(line: 39, column: 10, scope: !9868)
!9886 = !DILocation(line: 39, column: 3, scope: !9868)
!9887 = distinct !DISubprogram(name: "get_version", scope: !576, file: !576, line: 71, type: !9888, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !560, retainedNodes: !216)
!9888 = !DISubroutineType(types: !9889)
!9889 = !{!68, !116, !116}
!9890 = !DILocalVariable(name: "context", arg: 1, scope: !9887, file: !576, line: 71, type: !116)
!9891 = !DILocation(line: 71, column: 26, scope: !9887)
!9892 = !DILocalVariable(name: "version", arg: 2, scope: !9887, file: !576, line: 71, type: !116)
!9893 = !DILocation(line: 71, column: 47, scope: !9887)
!9894 = !DILocation(line: 73, column: 7, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9887, file: !576, line: 73, column: 7)
!9896 = !DILocation(line: 73, column: 15, scope: !9895)
!9897 = !DILocation(line: 73, column: 20, scope: !9895)
!9898 = !DILocation(line: 73, column: 24, scope: !9895)
!9899 = !DILocation(line: 73, column: 23, scope: !9895)
!9900 = !DILocation(line: 73, column: 32, scope: !9895)
!9901 = !DILocation(line: 73, column: 7, scope: !9887)
!9902 = !DILocation(line: 74, column: 5, scope: !9895)
!9903 = !DILocation(line: 76, column: 12, scope: !9895)
!9904 = !DILocation(line: 76, column: 5, scope: !9895)
!9905 = !DILocation(line: 77, column: 1, scope: !9887)
!9906 = distinct !DISubprogram(name: "xget_version", scope: !576, file: !576, line: 87, type: !9888, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !560, retainedNodes: !216)
!9907 = !DILocalVariable(name: "context", arg: 1, scope: !9906, file: !576, line: 87, type: !116)
!9908 = !DILocation(line: 87, column: 27, scope: !9906)
!9909 = !DILocalVariable(name: "version", arg: 2, scope: !9906, file: !576, line: 87, type: !116)
!9910 = !DILocation(line: 87, column: 48, scope: !9906)
!9911 = !DILocation(line: 89, column: 7, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9906, file: !576, line: 89, column: 7)
!9913 = !DILocation(line: 89, column: 15, scope: !9912)
!9914 = !DILocation(line: 89, column: 19, scope: !9912)
!9915 = !DILocation(line: 89, column: 18, scope: !9912)
!9916 = !DILocation(line: 89, column: 7, scope: !9906)
!9917 = !DILocation(line: 90, column: 25, scope: !9912)
!9918 = !DILocation(line: 90, column: 34, scope: !9912)
!9919 = !DILocation(line: 90, column: 12, scope: !9912)
!9920 = !DILocation(line: 90, column: 5, scope: !9912)
!9921 = !DILocation(line: 92, column: 45, scope: !9912)
!9922 = !DILocation(line: 92, column: 12, scope: !9912)
!9923 = !DILocation(line: 92, column: 5, scope: !9912)
!9924 = !DILocation(line: 93, column: 1, scope: !9906)
!9925 = distinct !DISubprogram(name: "buffer_lcm", scope: !9926, file: !9926, line: 28, type: !9927, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1289, retainedNodes: !216)
!9926 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9927 = !DISubroutineType(types: !9928)
!9928 = !{!55, !55, !55, !55}
!9929 = !DILocalVariable(name: "a", arg: 1, scope: !9925, file: !9926, line: 28, type: !55)
!9930 = !DILocation(line: 28, column: 20, scope: !9925)
!9931 = !DILocalVariable(name: "b", arg: 2, scope: !9925, file: !9926, line: 28, type: !55)
!9932 = !DILocation(line: 28, column: 30, scope: !9925)
!9933 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !9925, file: !9926, line: 28, type: !55)
!9934 = !DILocation(line: 28, column: 40, scope: !9925)
!9935 = !DILocalVariable(name: "size", scope: !9925, file: !9926, line: 30, type: !55)
!9936 = !DILocation(line: 30, column: 10, scope: !9925)
!9937 = !DILocation(line: 33, column: 8, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9925, file: !9926, line: 33, column: 7)
!9939 = !DILocation(line: 33, column: 7, scope: !9925)
!9940 = !DILocation(line: 34, column: 12, scope: !9938)
!9941 = !DILocation(line: 34, column: 16, scope: !9938)
!9942 = !DILocation(line: 34, column: 10, scope: !9938)
!9943 = !DILocation(line: 34, column: 5, scope: !9938)
!9944 = !DILocation(line: 37, column: 11, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !9926, line: 37, column: 11)
!9946 = distinct !DILexicalBlock(scope: !9938, file: !9926, line: 36, column: 5)
!9947 = !DILocation(line: 37, column: 11, scope: !9946)
!9948 = !DILocalVariable(name: "lcm", scope: !9949, file: !9926, line: 42, type: !55)
!9949 = distinct !DILexicalBlock(scope: !9945, file: !9926, line: 38, column: 9)
!9950 = !DILocation(line: 42, column: 18, scope: !9949)
!9951 = !DILocalVariable(name: "m", scope: !9949, file: !9926, line: 42, type: !55)
!9952 = !DILocation(line: 42, column: 23, scope: !9949)
!9953 = !DILocalVariable(name: "n", scope: !9949, file: !9926, line: 42, type: !55)
!9954 = !DILocation(line: 42, column: 26, scope: !9949)
!9955 = !DILocalVariable(name: "q", scope: !9949, file: !9926, line: 42, type: !55)
!9956 = !DILocation(line: 42, column: 29, scope: !9949)
!9957 = !DILocalVariable(name: "r", scope: !9949, file: !9926, line: 42, type: !55)
!9958 = !DILocation(line: 42, column: 32, scope: !9949)
!9959 = !DILocation(line: 45, column: 20, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9949, file: !9926, line: 45, column: 11)
!9961 = !DILocation(line: 45, column: 18, scope: !9960)
!9962 = !DILocation(line: 45, column: 27, scope: !9960)
!9963 = !DILocation(line: 45, column: 25, scope: !9960)
!9964 = !DILocation(line: 45, column: 16, scope: !9960)
!9965 = !DILocation(line: 45, column: 36, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9960, file: !9926, line: 45, column: 11)
!9967 = !DILocation(line: 45, column: 40, scope: !9966)
!9968 = !DILocation(line: 45, column: 38, scope: !9966)
!9969 = !DILocation(line: 45, column: 34, scope: !9966)
!9970 = !DILocation(line: 45, column: 43, scope: !9966)
!9971 = !DILocation(line: 45, column: 11, scope: !9960)
!9972 = !DILocation(line: 46, column: 13, scope: !9966)
!9973 = !DILocation(line: 45, column: 54, scope: !9966)
!9974 = !DILocation(line: 45, column: 52, scope: !9966)
!9975 = !DILocation(line: 45, column: 61, scope: !9966)
!9976 = !DILocation(line: 45, column: 59, scope: !9966)
!9977 = !DILocation(line: 45, column: 11, scope: !9966)
!9978 = distinct !{!9978, !9971, !9979}
!9979 = !DILocation(line: 46, column: 13, scope: !9960)
!9980 = !DILocation(line: 49, column: 15, scope: !9949)
!9981 = !DILocation(line: 49, column: 19, scope: !9949)
!9982 = !DILocation(line: 49, column: 17, scope: !9949)
!9983 = !DILocation(line: 49, column: 13, scope: !9949)
!9984 = !DILocation(line: 50, column: 17, scope: !9949)
!9985 = !DILocation(line: 50, column: 21, scope: !9949)
!9986 = !DILocation(line: 50, column: 19, scope: !9949)
!9987 = !DILocation(line: 50, column: 15, scope: !9949)
!9988 = !DILocation(line: 51, column: 15, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9949, file: !9926, line: 51, column: 15)
!9990 = !DILocation(line: 51, column: 22, scope: !9989)
!9991 = !DILocation(line: 51, column: 19, scope: !9989)
!9992 = !DILocation(line: 51, column: 30, scope: !9989)
!9993 = !DILocation(line: 51, column: 33, scope: !9989)
!9994 = !DILocation(line: 51, column: 39, scope: !9989)
!9995 = !DILocation(line: 51, column: 37, scope: !9989)
!9996 = !DILocation(line: 51, column: 44, scope: !9989)
!9997 = !DILocation(line: 51, column: 41, scope: !9989)
!9998 = !DILocation(line: 51, column: 15, scope: !9949)
!9999 = !DILocation(line: 52, column: 20, scope: !9989)
!10000 = !DILocation(line: 52, column: 13, scope: !9989)
!10001 = !DILocation(line: 53, column: 9, scope: !9949)
!10002 = !DILocation(line: 55, column: 14, scope: !9946)
!10003 = !DILocation(line: 55, column: 12, scope: !9946)
!10004 = !DILocation(line: 58, column: 10, scope: !9925)
!10005 = !DILocation(line: 58, column: 18, scope: !9925)
!10006 = !DILocation(line: 58, column: 15, scope: !9925)
!10007 = !DILocation(line: 58, column: 28, scope: !9925)
!10008 = !DILocation(line: 58, column: 35, scope: !9925)
!10009 = !DILocation(line: 58, column: 3, scope: !9925)
!10010 = !DILocation(line: 59, column: 1, scope: !9925)
!10011 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !619, file: !619, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !579, retainedNodes: !216)
!10012 = !DILocalVariable(name: "file", arg: 1, scope: !10011, file: !619, line: 43, type: !116)
!10013 = !DILocation(line: 43, column: 40, scope: !10011)
!10014 = !DILocation(line: 45, column: 15, scope: !10011)
!10015 = !DILocation(line: 45, column: 13, scope: !10011)
!10016 = !DILocation(line: 46, column: 1, scope: !10011)
!10017 = distinct !DISubprogram(name: "close_stdin", scope: !619, file: !619, line: 79, type: !571, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !579, retainedNodes: !216)
!10018 = !DILocalVariable(name: "fail", scope: !10017, file: !619, line: 81, type: !142)
!10019 = !DILocation(line: 81, column: 8, scope: !10017)
!10020 = !DILocation(line: 87, column: 19, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10017, file: !619, line: 87, column: 7)
!10022 = !DILocation(line: 87, column: 7, scope: !10021)
!10023 = !DILocation(line: 87, column: 26, scope: !10021)
!10024 = !DILocation(line: 87, column: 7, scope: !10017)
!10025 = !DILocation(line: 91, column: 19, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !619, line: 91, column: 11)
!10027 = distinct !DILexicalBlock(scope: !10021, file: !619, line: 88, column: 5)
!10028 = !DILocation(line: 91, column: 11, scope: !10026)
!10029 = !DILocation(line: 91, column: 39, scope: !10026)
!10030 = !DILocation(line: 91, column: 44, scope: !10026)
!10031 = !DILocation(line: 91, column: 55, scope: !10026)
!10032 = !DILocation(line: 91, column: 47, scope: !10026)
!10033 = !DILocation(line: 91, column: 62, scope: !10026)
!10034 = !DILocation(line: 91, column: 11, scope: !10027)
!10035 = !DILocation(line: 92, column: 14, scope: !10026)
!10036 = !DILocation(line: 92, column: 9, scope: !10026)
!10037 = !DILocation(line: 93, column: 5, scope: !10027)
!10038 = !DILocation(line: 94, column: 21, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10017, file: !619, line: 94, column: 7)
!10040 = !DILocation(line: 94, column: 7, scope: !10039)
!10041 = !DILocation(line: 94, column: 28, scope: !10039)
!10042 = !DILocation(line: 94, column: 7, scope: !10017)
!10043 = !DILocation(line: 95, column: 10, scope: !10039)
!10044 = !DILocation(line: 95, column: 5, scope: !10039)
!10045 = !DILocation(line: 96, column: 7, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10017, file: !619, line: 96, column: 7)
!10047 = !DILocation(line: 96, column: 7, scope: !10017)
!10048 = !DILocalVariable(name: "close_error", scope: !10049, file: !619, line: 100, type: !116)
!10049 = distinct !DILexicalBlock(scope: !10046, file: !619, line: 97, column: 5)
!10050 = !DILocation(line: 100, column: 19, scope: !10049)
!10051 = !DILocation(line: 100, column: 33, scope: !10049)
!10052 = !DILocation(line: 101, column: 11, scope: !10053)
!10053 = distinct !DILexicalBlock(scope: !10049, file: !619, line: 101, column: 11)
!10054 = !DILocation(line: 101, column: 11, scope: !10049)
!10055 = !DILocation(line: 102, column: 19, scope: !10053)
!10056 = !DILocation(line: 102, column: 52, scope: !10053)
!10057 = !DILocation(line: 102, column: 36, scope: !10053)
!10058 = !DILocation(line: 103, column: 16, scope: !10053)
!10059 = !DILocation(line: 102, column: 9, scope: !10053)
!10060 = !DILocation(line: 105, column: 19, scope: !10053)
!10061 = !DILocation(line: 105, column: 32, scope: !10053)
!10062 = !DILocation(line: 105, column: 9, scope: !10053)
!10063 = !DILocation(line: 106, column: 5, scope: !10049)
!10064 = !DILocation(line: 108, column: 3, scope: !10017)
!10065 = !DILocation(line: 110, column: 7, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10017, file: !619, line: 110, column: 7)
!10067 = !DILocation(line: 110, column: 7, scope: !10017)
!10068 = !DILocation(line: 111, column: 12, scope: !10066)
!10069 = !DILocation(line: 111, column: 5, scope: !10066)
!10070 = !DILocation(line: 112, column: 1, scope: !10017)
!10071 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !662, file: !662, line: 51, type: !214, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !622, retainedNodes: !216)
!10072 = !DILocalVariable(name: "file", arg: 1, scope: !10071, file: !662, line: 51, type: !116)
!10073 = !DILocation(line: 51, column: 41, scope: !10071)
!10074 = !DILocation(line: 53, column: 15, scope: !10071)
!10075 = !DILocation(line: 53, column: 13, scope: !10071)
!10076 = !DILocation(line: 54, column: 1, scope: !10071)
!10077 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !662, file: !662, line: 88, type: !10078, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !622, retainedNodes: !216)
!10078 = !DISubroutineType(types: !10079)
!10079 = !{null, !142}
!10080 = !DILocalVariable(name: "ignore", arg: 1, scope: !10077, file: !662, line: 88, type: !142)
!10081 = !DILocation(line: 88, column: 37, scope: !10077)
!10082 = !DILocation(line: 90, column: 18, scope: !10077)
!10083 = !DILocation(line: 90, column: 16, scope: !10077)
!10084 = !DILocation(line: 91, column: 1, scope: !10077)
!10085 = distinct !DISubprogram(name: "close_stdout", scope: !662, file: !662, line: 117, type: !571, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !622, retainedNodes: !216)
!10086 = !DILocation(line: 119, column: 21, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10085, file: !662, line: 119, column: 7)
!10088 = !DILocation(line: 119, column: 7, scope: !10087)
!10089 = !DILocation(line: 119, column: 29, scope: !10087)
!10090 = !DILocation(line: 120, column: 7, scope: !10087)
!10091 = !DILocation(line: 120, column: 12, scope: !10087)
!10092 = !DILocation(line: 120, column: 25, scope: !10087)
!10093 = !DILocation(line: 120, column: 28, scope: !10087)
!10094 = !DILocation(line: 120, column: 34, scope: !10087)
!10095 = !DILocation(line: 119, column: 7, scope: !10085)
!10096 = !DILocalVariable(name: "write_error", scope: !10097, file: !662, line: 122, type: !116)
!10097 = distinct !DILexicalBlock(scope: !10087, file: !662, line: 121, column: 5)
!10098 = !DILocation(line: 122, column: 19, scope: !10097)
!10099 = !DILocation(line: 122, column: 33, scope: !10097)
!10100 = !DILocation(line: 123, column: 11, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10097, file: !662, line: 123, column: 11)
!10102 = !DILocation(line: 123, column: 11, scope: !10097)
!10103 = !DILocation(line: 124, column: 19, scope: !10101)
!10104 = !DILocation(line: 124, column: 52, scope: !10101)
!10105 = !DILocation(line: 124, column: 36, scope: !10101)
!10106 = !DILocation(line: 125, column: 16, scope: !10101)
!10107 = !DILocation(line: 124, column: 9, scope: !10101)
!10108 = !DILocation(line: 127, column: 19, scope: !10101)
!10109 = !DILocation(line: 127, column: 32, scope: !10101)
!10110 = !DILocation(line: 127, column: 9, scope: !10101)
!10111 = !DILocation(line: 129, column: 14, scope: !10097)
!10112 = !DILocation(line: 129, column: 7, scope: !10097)
!10113 = !DILocation(line: 134, column: 42, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10085, file: !662, line: 134, column: 7)
!10115 = !DILocation(line: 134, column: 28, scope: !10114)
!10116 = !DILocation(line: 134, column: 50, scope: !10114)
!10117 = !DILocation(line: 134, column: 7, scope: !10085)
!10118 = !DILocation(line: 135, column: 12, scope: !10114)
!10119 = !DILocation(line: 135, column: 5, scope: !10114)
!10120 = !DILocation(line: 136, column: 1, scope: !10085)
!10121 = distinct !DISubprogram(name: "dir_name", scope: !10122, file: !10122, line: 32, type: !10123, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1292, retainedNodes: !216)
!10122 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10123 = !DISubroutineType(types: !10124)
!10124 = !{!9, !116}
!10125 = !DILocalVariable(name: "file", arg: 1, scope: !10121, file: !10122, line: 32, type: !116)
!10126 = !DILocation(line: 32, column: 23, scope: !10121)
!10127 = !DILocalVariable(name: "result", scope: !10121, file: !10122, line: 34, type: !9)
!10128 = !DILocation(line: 34, column: 9, scope: !10121)
!10129 = !DILocation(line: 34, column: 29, scope: !10121)
!10130 = !DILocation(line: 34, column: 18, scope: !10121)
!10131 = !DILocation(line: 35, column: 8, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10121, file: !10122, line: 35, column: 7)
!10133 = !DILocation(line: 35, column: 7, scope: !10121)
!10134 = !DILocation(line: 36, column: 5, scope: !10132)
!10135 = !DILocation(line: 37, column: 10, scope: !10121)
!10136 = !DILocation(line: 37, column: 3, scope: !10121)
!10137 = distinct !DISubprogram(name: "dir_len", scope: !10138, file: !10138, line: 32, type: !10139, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1295, retainedNodes: !216)
!10138 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10139 = !DISubroutineType(types: !10140)
!10140 = !{!55, !116}
!10141 = !DILocalVariable(name: "file", arg: 1, scope: !10137, file: !10138, line: 32, type: !116)
!10142 = !DILocation(line: 32, column: 22, scope: !10137)
!10143 = !DILocalVariable(name: "prefix_length", scope: !10137, file: !10138, line: 34, type: !55)
!10144 = !DILocation(line: 34, column: 10, scope: !10137)
!10145 = !DILocalVariable(name: "length", scope: !10137, file: !10138, line: 35, type: !55)
!10146 = !DILocation(line: 35, column: 10, scope: !10137)
!10147 = !DILocation(line: 38, column: 21, scope: !10137)
!10148 = !DILocation(line: 38, column: 35, scope: !10137)
!10149 = !DILocation(line: 41, column: 24, scope: !10137)
!10150 = !DILocation(line: 38, column: 20, scope: !10137)
!10151 = !DILocation(line: 38, column: 17, scope: !10137)
!10152 = !DILocation(line: 48, column: 33, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10137, file: !10138, line: 48, column: 3)
!10154 = !DILocation(line: 48, column: 17, scope: !10153)
!10155 = !DILocation(line: 48, column: 41, scope: !10153)
!10156 = !DILocation(line: 48, column: 39, scope: !10153)
!10157 = !DILocation(line: 48, column: 15, scope: !10153)
!10158 = !DILocation(line: 48, column: 8, scope: !10153)
!10159 = !DILocation(line: 49, column: 8, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10153, file: !10138, line: 48, column: 3)
!10161 = !DILocation(line: 49, column: 24, scope: !10160)
!10162 = !DILocation(line: 49, column: 22, scope: !10160)
!10163 = !DILocation(line: 48, column: 3, scope: !10153)
!10164 = !DILocation(line: 50, column: 11, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10160, file: !10138, line: 50, column: 9)
!10166 = !DILocation(line: 50, column: 9, scope: !10160)
!10167 = !DILocation(line: 51, column: 7, scope: !10165)
!10168 = !DILocation(line: 49, column: 38, scope: !10160)
!10169 = !DILocation(line: 48, column: 3, scope: !10160)
!10170 = distinct !{!10170, !10163, !10171}
!10171 = !DILocation(line: 51, column: 7, scope: !10153)
!10172 = !DILocation(line: 52, column: 10, scope: !10137)
!10173 = !DILocation(line: 52, column: 3, scope: !10137)
!10174 = distinct !DISubprogram(name: "mdir_name", scope: !10138, file: !10138, line: 71, type: !10123, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1295, retainedNodes: !216)
!10175 = !DILocalVariable(name: "file", arg: 1, scope: !10174, file: !10138, line: 71, type: !116)
!10176 = !DILocation(line: 71, column: 24, scope: !10174)
!10177 = !DILocalVariable(name: "length", scope: !10174, file: !10138, line: 73, type: !55)
!10178 = !DILocation(line: 73, column: 10, scope: !10174)
!10179 = !DILocation(line: 73, column: 28, scope: !10174)
!10180 = !DILocation(line: 73, column: 19, scope: !10174)
!10181 = !DILocalVariable(name: "append_dot", scope: !10174, file: !10138, line: 74, type: !142)
!10182 = !DILocation(line: 74, column: 8, scope: !10174)
!10183 = !DILocation(line: 74, column: 22, scope: !10174)
!10184 = !DILocation(line: 74, column: 29, scope: !10174)
!10185 = !DILocation(line: 75, column: 22, scope: !10174)
!10186 = !DILocalVariable(name: "dir", scope: !10174, file: !10138, line: 78, type: !9)
!10187 = !DILocation(line: 78, column: 9, scope: !10174)
!10188 = !DILocation(line: 78, column: 23, scope: !10174)
!10189 = !DILocation(line: 78, column: 32, scope: !10174)
!10190 = !DILocation(line: 78, column: 30, scope: !10174)
!10191 = !DILocation(line: 78, column: 43, scope: !10174)
!10192 = !DILocation(line: 78, column: 15, scope: !10174)
!10193 = !DILocation(line: 79, column: 8, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10174, file: !10138, line: 79, column: 7)
!10195 = !DILocation(line: 79, column: 7, scope: !10174)
!10196 = !DILocation(line: 80, column: 5, scope: !10194)
!10197 = !DILocation(line: 81, column: 11, scope: !10174)
!10198 = !DILocation(line: 81, column: 16, scope: !10174)
!10199 = !DILocation(line: 81, column: 22, scope: !10174)
!10200 = !DILocation(line: 81, column: 3, scope: !10174)
!10201 = !DILocation(line: 82, column: 7, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10174, file: !10138, line: 82, column: 7)
!10203 = !DILocation(line: 82, column: 7, scope: !10174)
!10204 = !DILocation(line: 83, column: 5, scope: !10202)
!10205 = !DILocation(line: 83, column: 15, scope: !10202)
!10206 = !DILocation(line: 83, column: 19, scope: !10202)
!10207 = !DILocation(line: 84, column: 3, scope: !10174)
!10208 = !DILocation(line: 84, column: 7, scope: !10174)
!10209 = !DILocation(line: 84, column: 15, scope: !10174)
!10210 = !DILocation(line: 85, column: 10, scope: !10174)
!10211 = !DILocation(line: 85, column: 3, scope: !10174)
!10212 = !DILocation(line: 86, column: 1, scope: !10174)
!10213 = distinct !DISubprogram(name: "last_component", scope: !10214, file: !10214, line: 30, type: !10123, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !216)
!10214 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10215 = !DILocalVariable(name: "name", arg: 1, scope: !10213, file: !10214, line: 30, type: !116)
!10216 = !DILocation(line: 30, column: 29, scope: !10213)
!10217 = !DILocalVariable(name: "base", scope: !10213, file: !10214, line: 32, type: !116)
!10218 = !DILocation(line: 32, column: 15, scope: !10213)
!10219 = !DILocation(line: 32, column: 22, scope: !10213)
!10220 = !DILocation(line: 32, column: 27, scope: !10213)
!10221 = !DILocalVariable(name: "p", scope: !10213, file: !10214, line: 33, type: !116)
!10222 = !DILocation(line: 33, column: 15, scope: !10213)
!10223 = !DILocalVariable(name: "saw_slash", scope: !10213, file: !10214, line: 34, type: !142)
!10224 = !DILocation(line: 34, column: 8, scope: !10213)
!10225 = !DILocation(line: 36, column: 3, scope: !10213)
!10226 = !DILocation(line: 36, column: 10, scope: !10213)
!10227 = !DILocation(line: 37, column: 9, scope: !10213)
!10228 = distinct !{!10228, !10225, !10227}
!10229 = !DILocation(line: 39, column: 12, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10213, file: !10214, line: 39, column: 3)
!10231 = !DILocation(line: 39, column: 10, scope: !10230)
!10232 = !DILocation(line: 39, column: 8, scope: !10230)
!10233 = !DILocation(line: 39, column: 19, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10230, file: !10214, line: 39, column: 3)
!10235 = !DILocation(line: 39, column: 18, scope: !10234)
!10236 = !DILocation(line: 39, column: 3, scope: !10230)
!10237 = !DILocation(line: 41, column: 11, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !10214, line: 41, column: 11)
!10239 = distinct !DILexicalBlock(scope: !10234, file: !10214, line: 40, column: 5)
!10240 = !DILocation(line: 41, column: 11, scope: !10239)
!10241 = !DILocation(line: 42, column: 19, scope: !10238)
!10242 = !DILocation(line: 42, column: 9, scope: !10238)
!10243 = !DILocation(line: 43, column: 16, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10238, file: !10214, line: 43, column: 16)
!10245 = !DILocation(line: 43, column: 16, scope: !10238)
!10246 = !DILocation(line: 45, column: 18, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10244, file: !10214, line: 44, column: 9)
!10248 = !DILocation(line: 45, column: 16, scope: !10247)
!10249 = !DILocation(line: 46, column: 21, scope: !10247)
!10250 = !DILocation(line: 47, column: 9, scope: !10247)
!10251 = !DILocation(line: 48, column: 5, scope: !10239)
!10252 = !DILocation(line: 39, column: 23, scope: !10234)
!10253 = !DILocation(line: 39, column: 3, scope: !10234)
!10254 = distinct !{!10254, !10236, !10255}
!10255 = !DILocation(line: 48, column: 5, scope: !10230)
!10256 = !DILocation(line: 50, column: 19, scope: !10213)
!10257 = !DILocation(line: 50, column: 3, scope: !10213)
!10258 = distinct !DISubprogram(name: "base_len", scope: !10214, file: !10214, line: 58, type: !10139, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !216)
!10259 = !DILocalVariable(name: "name", arg: 1, scope: !10258, file: !10214, line: 58, type: !116)
!10260 = !DILocation(line: 58, column: 23, scope: !10258)
!10261 = !DILocalVariable(name: "len", scope: !10258, file: !10214, line: 60, type: !55)
!10262 = !DILocation(line: 60, column: 10, scope: !10258)
!10263 = !DILocalVariable(name: "prefix_len", scope: !10258, file: !10214, line: 61, type: !55)
!10264 = !DILocation(line: 61, column: 10, scope: !10258)
!10265 = !DILocation(line: 63, column: 22, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10258, file: !10214, line: 63, column: 3)
!10267 = !DILocation(line: 63, column: 14, scope: !10266)
!10268 = !DILocation(line: 63, column: 12, scope: !10266)
!10269 = !DILocation(line: 63, column: 8, scope: !10266)
!10270 = !DILocation(line: 63, column: 34, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10266, file: !10214, line: 63, column: 3)
!10272 = !DILocation(line: 63, column: 32, scope: !10271)
!10273 = !DILocation(line: 63, column: 38, scope: !10271)
!10274 = !DILocation(line: 63, column: 41, scope: !10271)
!10275 = !DILocation(line: 0, scope: !10271)
!10276 = !DILocation(line: 63, column: 3, scope: !10266)
!10277 = !DILocation(line: 64, column: 5, scope: !10271)
!10278 = !DILocation(line: 63, column: 70, scope: !10271)
!10279 = !DILocation(line: 63, column: 3, scope: !10271)
!10280 = distinct !{!10280, !10276, !10281}
!10281 = !DILocation(line: 64, column: 5, scope: !10266)
!10282 = !DILocation(line: 74, column: 10, scope: !10258)
!10283 = !DILocation(line: 74, column: 3, scope: !10258)
!10284 = distinct !DISubprogram(name: "strip_trailing_slashes", scope: !10285, file: !10285, line: 31, type: !10286, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1301, retainedNodes: !216)
!10285 = !DIFile(filename: "lib/stripslash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10286 = !DISubroutineType(types: !10287)
!10287 = !{!142, !9}
!10288 = !DILocalVariable(name: "file", arg: 1, scope: !10284, file: !10285, line: 31, type: !9)
!10289 = !DILocation(line: 31, column: 31, scope: !10284)
!10290 = !DILocalVariable(name: "base", scope: !10284, file: !10285, line: 33, type: !9)
!10291 = !DILocation(line: 33, column: 9, scope: !10284)
!10292 = !DILocation(line: 33, column: 32, scope: !10284)
!10293 = !DILocation(line: 33, column: 16, scope: !10284)
!10294 = !DILocalVariable(name: "base_lim", scope: !10284, file: !10285, line: 34, type: !9)
!10295 = !DILocation(line: 34, column: 9, scope: !10284)
!10296 = !DILocalVariable(name: "had_slash", scope: !10284, file: !10285, line: 35, type: !142)
!10297 = !DILocation(line: 35, column: 8, scope: !10284)
!10298 = !DILocation(line: 39, column: 10, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10284, file: !10285, line: 39, column: 7)
!10300 = !DILocation(line: 39, column: 9, scope: !10299)
!10301 = !DILocation(line: 39, column: 7, scope: !10284)
!10302 = !DILocation(line: 40, column: 12, scope: !10299)
!10303 = !DILocation(line: 40, column: 10, scope: !10299)
!10304 = !DILocation(line: 40, column: 5, scope: !10299)
!10305 = !DILocation(line: 41, column: 14, scope: !10284)
!10306 = !DILocation(line: 41, column: 31, scope: !10284)
!10307 = !DILocation(line: 41, column: 21, scope: !10284)
!10308 = !DILocation(line: 41, column: 19, scope: !10284)
!10309 = !DILocation(line: 41, column: 12, scope: !10284)
!10310 = !DILocation(line: 42, column: 17, scope: !10284)
!10311 = !DILocation(line: 42, column: 16, scope: !10284)
!10312 = !DILocation(line: 42, column: 26, scope: !10284)
!10313 = !DILocation(line: 42, column: 13, scope: !10284)
!10314 = !DILocation(line: 43, column: 4, scope: !10284)
!10315 = !DILocation(line: 43, column: 13, scope: !10284)
!10316 = !DILocation(line: 44, column: 10, scope: !10284)
!10317 = !DILocation(line: 44, column: 3, scope: !10284)
!10318 = distinct !DISubprogram(name: "fdadvise", scope: !10319, file: !10319, line: 31, type: !10320, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1304, retainedNodes: !216)
!10319 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10320 = !DISubroutineType(types: !10321)
!10321 = !{null, !7, !295, !295, !10322}
!10322 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1308, line: 52, baseType: !1307)
!10323 = !DILocalVariable(name: "fd", arg: 1, scope: !10318, file: !10319, line: 31, type: !7)
!10324 = !DILocation(line: 31, column: 15, scope: !10318)
!10325 = !DILocalVariable(name: "offset", arg: 2, scope: !10318, file: !10319, line: 31, type: !295)
!10326 = !DILocation(line: 31, column: 25, scope: !10318)
!10327 = !DILocalVariable(name: "len", arg: 3, scope: !10318, file: !10319, line: 31, type: !295)
!10328 = !DILocation(line: 31, column: 39, scope: !10318)
!10329 = !DILocalVariable(name: "advice", arg: 4, scope: !10318, file: !10319, line: 31, type: !10322)
!10330 = !DILocation(line: 31, column: 54, scope: !10318)
!10331 = !DILocalVariable(name: "__x", scope: !10332, file: !10319, line: 34, type: !7)
!10332 = distinct !DILexicalBlock(scope: !10318, file: !10319, line: 34, column: 3)
!10333 = !DILocation(line: 34, column: 3, scope: !10332)
!10334 = !DILocation(line: 36, column: 1, scope: !10318)
!10335 = distinct !DISubprogram(name: "fadvise", scope: !10319, file: !10319, line: 39, type: !10336, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1304, retainedNodes: !216)
!10336 = !DISubroutineType(types: !10337)
!10337 = !{null, !10338, !10322}
!10338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10339, size: 64)
!10339 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !10340)
!10340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !10341)
!10341 = !{!10342, !10343, !10344, !10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352, !10353, !10354, !10355, !10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364, !10365, !10366, !10367, !10368, !10369, !10370, !10371}
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !10340, file: !4, line: 51, baseType: !7, size: 32)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !10340, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !10340, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !10340, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !10340, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !10340, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !10340, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !10340, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !10340, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !10340, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !10340, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !10340, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !10340, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !10340, file: !4, line: 70, baseType: !10356, size: 64, offset: 832)
!10356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10340, size: 64)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !10340, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !10340, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !10340, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !10340, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !10340, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !10340, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !10340, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !10340, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !10340, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !10340, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !10340, file: !4, line: 93, baseType: !10356, size: 64, offset: 1344)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !10340, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !10340, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !10340, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !10340, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!10372 = !DILocalVariable(name: "fp", arg: 1, scope: !10335, file: !10319, line: 39, type: !10338)
!10373 = !DILocation(line: 39, column: 16, scope: !10335)
!10374 = !DILocalVariable(name: "advice", arg: 2, scope: !10335, file: !10319, line: 39, type: !10322)
!10375 = !DILocation(line: 39, column: 30, scope: !10335)
!10376 = !DILocation(line: 41, column: 7, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10335, file: !10319, line: 41, column: 7)
!10378 = !DILocation(line: 41, column: 7, scope: !10335)
!10379 = !DILocation(line: 42, column: 23, scope: !10377)
!10380 = !DILocation(line: 42, column: 15, scope: !10377)
!10381 = !DILocation(line: 42, column: 34, scope: !10377)
!10382 = !DILocation(line: 42, column: 5, scope: !10377)
!10383 = !DILocation(line: 43, column: 1, scope: !10335)
!10384 = distinct !DISubprogram(name: "open_safer", scope: !10385, file: !10385, line: 29, type: !10386, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1316, retainedNodes: !216)
!10385 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10386 = !DISubroutineType(types: !10387)
!10387 = !{!7, !116, !7, null}
!10388 = !DILocalVariable(name: "file", arg: 1, scope: !10384, file: !10385, line: 29, type: !116)
!10389 = !DILocation(line: 29, column: 25, scope: !10384)
!10390 = !DILocalVariable(name: "flags", arg: 2, scope: !10384, file: !10385, line: 29, type: !7)
!10391 = !DILocation(line: 29, column: 35, scope: !10384)
!10392 = !DILocalVariable(name: "mode", scope: !10384, file: !10385, line: 31, type: !239)
!10393 = !DILocation(line: 31, column: 10, scope: !10384)
!10394 = !DILocation(line: 33, column: 7, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10384, file: !10385, line: 33, column: 7)
!10396 = !DILocation(line: 33, column: 13, scope: !10395)
!10397 = !DILocation(line: 33, column: 7, scope: !10384)
!10398 = !DILocalVariable(name: "ap", scope: !10399, file: !10385, line: 35, type: !1319)
!10399 = distinct !DILexicalBlock(scope: !10395, file: !10385, line: 34, column: 5)
!10400 = !DILocation(line: 35, column: 15, scope: !10399)
!10401 = !DILocation(line: 36, column: 7, scope: !10399)
!10402 = !DILocation(line: 40, column: 14, scope: !10399)
!10403 = !DILocation(line: 40, column: 12, scope: !10399)
!10404 = !DILocation(line: 42, column: 7, scope: !10399)
!10405 = !DILocation(line: 43, column: 5, scope: !10399)
!10406 = !DILocation(line: 45, column: 26, scope: !10384)
!10407 = !DILocation(line: 45, column: 32, scope: !10384)
!10408 = !DILocation(line: 45, column: 39, scope: !10384)
!10409 = !DILocation(line: 45, column: 20, scope: !10384)
!10410 = !DILocation(line: 45, column: 10, scope: !10384)
!10411 = !DILocation(line: 45, column: 3, scope: !10384)
!10412 = distinct !DISubprogram(name: "record_file", scope: !10413, file: !10413, line: 29, type: !10414, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1328, retainedNodes: !216)
!10413 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10414 = !DISubroutineType(types: !10415)
!10415 = !{null, !241, !116, !10416}
!10416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10417, size: 64)
!10417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10418)
!10418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !10419)
!10419 = !{!10420, !10421, !10422, !10423, !10424, !10425, !10426, !10427, !10428, !10429, !10430, !10431, !10436, !10437, !10438}
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10418, file: !339, line: 48, baseType: !263, size: 64)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10418, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10418, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10418, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10418, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10418, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10418, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10418, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!10428 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10418, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10418, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10418, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10418, file: !339, line: 91, baseType: !10432, size: 128, offset: 576)
!10432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !10433)
!10433 = !{!10434, !10435}
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10432, file: !358, line: 11, baseType: !361, size: 64)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10432, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10418, file: !339, line: 92, baseType: !10432, size: 128, offset: 704)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10418, file: !339, line: 93, baseType: !10432, size: 128, offset: 832)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10418, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!10439 = !DILocalVariable(name: "ht", arg: 1, scope: !10412, file: !10413, line: 29, type: !241)
!10440 = !DILocation(line: 29, column: 26, scope: !10412)
!10441 = !DILocalVariable(name: "file", arg: 2, scope: !10412, file: !10413, line: 29, type: !116)
!10442 = !DILocation(line: 29, column: 42, scope: !10412)
!10443 = !DILocalVariable(name: "stats", arg: 3, scope: !10412, file: !10413, line: 29, type: !10416)
!10444 = !DILocation(line: 29, column: 67, scope: !10412)
!10445 = !DILocalVariable(name: "ent", scope: !10412, file: !10413, line: 31, type: !1331)
!10446 = !DILocation(line: 31, column: 20, scope: !10412)
!10447 = !DILocation(line: 33, column: 7, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10412, file: !10413, line: 33, column: 7)
!10449 = !DILocation(line: 33, column: 10, scope: !10448)
!10450 = !DILocation(line: 33, column: 7, scope: !10412)
!10451 = !DILocation(line: 34, column: 5, scope: !10448)
!10452 = !DILocation(line: 36, column: 9, scope: !10412)
!10453 = !DILocation(line: 36, column: 7, scope: !10412)
!10454 = !DILocation(line: 37, column: 24, scope: !10412)
!10455 = !DILocation(line: 37, column: 15, scope: !10412)
!10456 = !DILocation(line: 37, column: 3, scope: !10412)
!10457 = !DILocation(line: 37, column: 8, scope: !10412)
!10458 = !DILocation(line: 37, column: 13, scope: !10412)
!10459 = !DILocation(line: 38, column: 17, scope: !10412)
!10460 = !DILocation(line: 38, column: 24, scope: !10412)
!10461 = !DILocation(line: 38, column: 3, scope: !10412)
!10462 = !DILocation(line: 38, column: 8, scope: !10412)
!10463 = !DILocation(line: 38, column: 15, scope: !10412)
!10464 = !DILocation(line: 39, column: 17, scope: !10412)
!10465 = !DILocation(line: 39, column: 24, scope: !10412)
!10466 = !DILocation(line: 39, column: 3, scope: !10412)
!10467 = !DILocation(line: 39, column: 8, scope: !10412)
!10468 = !DILocation(line: 39, column: 15, scope: !10412)
!10469 = !DILocalVariable(name: "ent_from_table", scope: !10470, file: !10413, line: 42, type: !1331)
!10470 = distinct !DILexicalBlock(scope: !10412, file: !10413, line: 41, column: 3)
!10471 = !DILocation(line: 42, column: 22, scope: !10470)
!10472 = !DILocation(line: 42, column: 52, scope: !10470)
!10473 = !DILocation(line: 42, column: 56, scope: !10470)
!10474 = !DILocation(line: 42, column: 39, scope: !10470)
!10475 = !DILocation(line: 43, column: 9, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10470, file: !10413, line: 43, column: 9)
!10477 = !DILocation(line: 43, column: 24, scope: !10476)
!10478 = !DILocation(line: 43, column: 9, scope: !10470)
!10479 = !DILocation(line: 46, column: 9, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10476, file: !10413, line: 44, column: 7)
!10481 = !DILocation(line: 49, column: 9, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10470, file: !10413, line: 49, column: 9)
!10483 = !DILocation(line: 49, column: 27, scope: !10482)
!10484 = !DILocation(line: 49, column: 24, scope: !10482)
!10485 = !DILocation(line: 49, column: 9, scope: !10470)
!10486 = !DILocation(line: 53, column: 22, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10482, file: !10413, line: 50, column: 7)
!10488 = !DILocation(line: 53, column: 9, scope: !10487)
!10489 = !DILocation(line: 54, column: 7, scope: !10487)
!10490 = !DILocation(line: 56, column: 1, scope: !10412)
!10491 = distinct !DISubprogram(name: "seen_file", scope: !10413, file: !10413, line: 61, type: !10492, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1328, retainedNodes: !216)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!142, !10494, !116, !10416}
!10494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10495, size: 64)
!10495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !242)
!10496 = !DILocalVariable(name: "ht", arg: 1, scope: !10491, file: !10413, line: 61, type: !10494)
!10497 = !DILocation(line: 61, column: 30, scope: !10491)
!10498 = !DILocalVariable(name: "file", arg: 2, scope: !10491, file: !10413, line: 61, type: !116)
!10499 = !DILocation(line: 61, column: 46, scope: !10491)
!10500 = !DILocalVariable(name: "stats", arg: 3, scope: !10491, file: !10413, line: 62, type: !10416)
!10501 = !DILocation(line: 62, column: 31, scope: !10491)
!10502 = !DILocalVariable(name: "new_ent", scope: !10491, file: !10413, line: 64, type: !1332)
!10503 = !DILocation(line: 64, column: 19, scope: !10491)
!10504 = !DILocation(line: 66, column: 7, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10491, file: !10413, line: 66, column: 7)
!10506 = !DILocation(line: 66, column: 10, scope: !10505)
!10507 = !DILocation(line: 66, column: 7, scope: !10491)
!10508 = !DILocation(line: 67, column: 5, scope: !10505)
!10509 = !DILocation(line: 69, column: 27, scope: !10491)
!10510 = !DILocation(line: 69, column: 11, scope: !10491)
!10511 = !DILocation(line: 69, column: 16, scope: !10491)
!10512 = !DILocation(line: 70, column: 20, scope: !10491)
!10513 = !DILocation(line: 70, column: 27, scope: !10491)
!10514 = !DILocation(line: 70, column: 11, scope: !10491)
!10515 = !DILocation(line: 70, column: 18, scope: !10491)
!10516 = !DILocation(line: 71, column: 20, scope: !10491)
!10517 = !DILocation(line: 71, column: 27, scope: !10491)
!10518 = !DILocation(line: 71, column: 11, scope: !10491)
!10519 = !DILocation(line: 71, column: 18, scope: !10491)
!10520 = !DILocation(line: 73, column: 25, scope: !10491)
!10521 = !DILocation(line: 73, column: 29, scope: !10491)
!10522 = !DILocation(line: 73, column: 12, scope: !10491)
!10523 = !DILocation(line: 73, column: 11, scope: !10491)
!10524 = !DILocation(line: 73, column: 10, scope: !10491)
!10525 = !DILocation(line: 73, column: 3, scope: !10491)
!10526 = !DILocation(line: 74, column: 1, scope: !10491)
!10527 = distinct !DISubprogram(name: "file_type", scope: !10528, file: !10528, line: 29, type: !10529, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1338, retainedNodes: !216)
!10528 = !DIFile(filename: "lib/file-type.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10529 = !DISubroutineType(types: !10530)
!10530 = !{!116, !10531}
!10531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10532, size: 64)
!10532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10533)
!10533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !10534)
!10534 = !{!10535, !10536, !10537, !10538, !10539, !10540, !10541, !10542, !10543, !10544, !10545, !10546, !10551, !10552, !10553}
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10533, file: !339, line: 48, baseType: !263, size: 64)
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10533, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10533, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10533, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10533, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10533, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10533, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10533, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10533, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10533, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10533, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10533, file: !339, line: 91, baseType: !10547, size: 128, offset: 576)
!10547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !10548)
!10548 = !{!10549, !10550}
!10549 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10547, file: !358, line: 11, baseType: !361, size: 64)
!10550 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10547, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10533, file: !339, line: 92, baseType: !10547, size: 128, offset: 704)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10533, file: !339, line: 93, baseType: !10547, size: 128, offset: 832)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10533, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!10554 = !DILocalVariable(name: "st", arg: 1, scope: !10527, file: !10528, line: 29, type: !10531)
!10555 = !DILocation(line: 29, column: 31, scope: !10527)
!10556 = !DILocation(line: 39, column: 7, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 39, column: 7)
!10558 = !DILocation(line: 39, column: 7, scope: !10527)
!10559 = !DILocation(line: 40, column: 12, scope: !10557)
!10560 = !DILocation(line: 40, column: 16, scope: !10557)
!10561 = !DILocation(line: 40, column: 24, scope: !10557)
!10562 = !DILocation(line: 40, column: 31, scope: !10557)
!10563 = !DILocation(line: 40, column: 57, scope: !10557)
!10564 = !DILocation(line: 40, column: 5, scope: !10557)
!10565 = !DILocation(line: 42, column: 7, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 42, column: 7)
!10567 = !DILocation(line: 42, column: 7, scope: !10527)
!10568 = !DILocation(line: 43, column: 12, scope: !10566)
!10569 = !DILocation(line: 43, column: 5, scope: !10566)
!10570 = !DILocation(line: 45, column: 7, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 45, column: 7)
!10572 = !DILocation(line: 45, column: 7, scope: !10527)
!10573 = !DILocation(line: 46, column: 12, scope: !10571)
!10574 = !DILocation(line: 46, column: 5, scope: !10571)
!10575 = !DILocation(line: 51, column: 7, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 51, column: 7)
!10577 = !DILocation(line: 51, column: 7, scope: !10527)
!10578 = !DILocation(line: 52, column: 12, scope: !10576)
!10579 = !DILocation(line: 52, column: 5, scope: !10576)
!10580 = !DILocation(line: 54, column: 7, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 54, column: 7)
!10582 = !DILocation(line: 54, column: 7, scope: !10527)
!10583 = !DILocation(line: 55, column: 12, scope: !10581)
!10584 = !DILocation(line: 55, column: 5, scope: !10581)
!10585 = !DILocation(line: 57, column: 7, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 57, column: 7)
!10587 = !DILocation(line: 57, column: 7, scope: !10527)
!10588 = !DILocation(line: 58, column: 12, scope: !10586)
!10589 = !DILocation(line: 58, column: 5, scope: !10586)
!10590 = !DILocation(line: 65, column: 7, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 65, column: 7)
!10592 = !DILocation(line: 65, column: 7, scope: !10527)
!10593 = !DILocation(line: 66, column: 12, scope: !10591)
!10594 = !DILocation(line: 66, column: 5, scope: !10591)
!10595 = !DILocation(line: 68, column: 7, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 68, column: 7)
!10597 = !DILocation(line: 68, column: 7, scope: !10527)
!10598 = !DILocation(line: 69, column: 12, scope: !10596)
!10599 = !DILocation(line: 69, column: 5, scope: !10596)
!10600 = !DILocation(line: 74, column: 7, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 74, column: 7)
!10602 = !DILocation(line: 74, column: 7, scope: !10527)
!10603 = !DILocation(line: 75, column: 12, scope: !10601)
!10604 = !DILocation(line: 75, column: 5, scope: !10601)
!10605 = !DILocation(line: 104, column: 7, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10527, file: !10528, line: 104, column: 7)
!10607 = !DILocation(line: 104, column: 7, scope: !10527)
!10608 = !DILocation(line: 105, column: 12, scope: !10606)
!10609 = !DILocation(line: 105, column: 5, scope: !10606)
!10610 = !DILocation(line: 110, column: 10, scope: !10527)
!10611 = !DILocation(line: 110, column: 3, scope: !10527)
!10612 = !DILocation(line: 111, column: 1, scope: !10527)
!10613 = distinct !DISubprogram(name: "strmode", scope: !10614, file: !10614, line: 96, type: !10615, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !216)
!10614 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10615 = !DISubroutineType(types: !10616)
!10616 = !{null, !239, !9}
!10617 = !DILocalVariable(name: "mode", arg: 1, scope: !10613, file: !10614, line: 96, type: !239)
!10618 = !DILocation(line: 96, column: 17, scope: !10613)
!10619 = !DILocalVariable(name: "str", arg: 2, scope: !10613, file: !10614, line: 96, type: !9)
!10620 = !DILocation(line: 96, column: 29, scope: !10613)
!10621 = !DILocation(line: 98, column: 22, scope: !10613)
!10622 = !DILocation(line: 98, column: 12, scope: !10613)
!10623 = !DILocation(line: 98, column: 3, scope: !10613)
!10624 = !DILocation(line: 98, column: 10, scope: !10613)
!10625 = !DILocation(line: 99, column: 12, scope: !10613)
!10626 = !DILocation(line: 99, column: 17, scope: !10613)
!10627 = !DILocation(line: 99, column: 3, scope: !10613)
!10628 = !DILocation(line: 99, column: 10, scope: !10613)
!10629 = !DILocation(line: 100, column: 12, scope: !10613)
!10630 = !DILocation(line: 100, column: 17, scope: !10613)
!10631 = !DILocation(line: 100, column: 3, scope: !10613)
!10632 = !DILocation(line: 100, column: 10, scope: !10613)
!10633 = !DILocation(line: 101, column: 13, scope: !10613)
!10634 = !DILocation(line: 101, column: 18, scope: !10613)
!10635 = !DILocation(line: 102, column: 16, scope: !10613)
!10636 = !DILocation(line: 102, column: 21, scope: !10613)
!10637 = !DILocation(line: 103, column: 16, scope: !10613)
!10638 = !DILocation(line: 103, column: 21, scope: !10613)
!10639 = !DILocation(line: 101, column: 12, scope: !10613)
!10640 = !DILocation(line: 101, column: 3, scope: !10613)
!10641 = !DILocation(line: 101, column: 10, scope: !10613)
!10642 = !DILocation(line: 104, column: 12, scope: !10613)
!10643 = !DILocation(line: 104, column: 17, scope: !10613)
!10644 = !DILocation(line: 104, column: 3, scope: !10613)
!10645 = !DILocation(line: 104, column: 10, scope: !10613)
!10646 = !DILocation(line: 105, column: 12, scope: !10613)
!10647 = !DILocation(line: 105, column: 17, scope: !10613)
!10648 = !DILocation(line: 105, column: 3, scope: !10613)
!10649 = !DILocation(line: 105, column: 10, scope: !10613)
!10650 = !DILocation(line: 106, column: 13, scope: !10613)
!10651 = !DILocation(line: 106, column: 18, scope: !10613)
!10652 = !DILocation(line: 107, column: 16, scope: !10613)
!10653 = !DILocation(line: 107, column: 21, scope: !10613)
!10654 = !DILocation(line: 108, column: 16, scope: !10613)
!10655 = !DILocation(line: 108, column: 21, scope: !10613)
!10656 = !DILocation(line: 106, column: 12, scope: !10613)
!10657 = !DILocation(line: 106, column: 3, scope: !10613)
!10658 = !DILocation(line: 106, column: 10, scope: !10613)
!10659 = !DILocation(line: 109, column: 12, scope: !10613)
!10660 = !DILocation(line: 109, column: 17, scope: !10613)
!10661 = !DILocation(line: 109, column: 3, scope: !10613)
!10662 = !DILocation(line: 109, column: 10, scope: !10613)
!10663 = !DILocation(line: 110, column: 12, scope: !10613)
!10664 = !DILocation(line: 110, column: 17, scope: !10613)
!10665 = !DILocation(line: 110, column: 3, scope: !10613)
!10666 = !DILocation(line: 110, column: 10, scope: !10613)
!10667 = !DILocation(line: 111, column: 13, scope: !10613)
!10668 = !DILocation(line: 111, column: 18, scope: !10613)
!10669 = !DILocation(line: 112, column: 16, scope: !10613)
!10670 = !DILocation(line: 112, column: 21, scope: !10613)
!10671 = !DILocation(line: 113, column: 16, scope: !10613)
!10672 = !DILocation(line: 113, column: 21, scope: !10613)
!10673 = !DILocation(line: 111, column: 12, scope: !10613)
!10674 = !DILocation(line: 111, column: 3, scope: !10613)
!10675 = !DILocation(line: 111, column: 10, scope: !10613)
!10676 = !DILocation(line: 114, column: 3, scope: !10613)
!10677 = !DILocation(line: 114, column: 11, scope: !10613)
!10678 = !DILocation(line: 115, column: 3, scope: !10613)
!10679 = !DILocation(line: 115, column: 11, scope: !10613)
!10680 = !DILocation(line: 116, column: 1, scope: !10613)
!10681 = distinct !DISubprogram(name: "ftypelet", scope: !10614, file: !10614, line: 54, type: !10682, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1341, retainedNodes: !216)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{!10, !239}
!10684 = !DILocalVariable(name: "bits", arg: 1, scope: !10681, file: !10614, line: 54, type: !239)
!10685 = !DILocation(line: 54, column: 18, scope: !10681)
!10686 = !DILocation(line: 57, column: 7, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10681, file: !10614, line: 57, column: 7)
!10688 = !DILocation(line: 57, column: 7, scope: !10681)
!10689 = !DILocation(line: 58, column: 5, scope: !10687)
!10690 = !DILocation(line: 59, column: 7, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10681, file: !10614, line: 59, column: 7)
!10692 = !DILocation(line: 59, column: 7, scope: !10681)
!10693 = !DILocation(line: 60, column: 5, scope: !10691)
!10694 = !DILocation(line: 63, column: 7, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10681, file: !10614, line: 63, column: 7)
!10696 = !DILocation(line: 63, column: 7, scope: !10681)
!10697 = !DILocation(line: 64, column: 5, scope: !10695)
!10698 = !DILocation(line: 65, column: 7, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10681, file: !10614, line: 65, column: 7)
!10700 = !DILocation(line: 65, column: 7, scope: !10681)
!10701 = !DILocation(line: 66, column: 5, scope: !10699)
!10702 = !DILocation(line: 67, column: 7, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10681, file: !10614, line: 67, column: 7)
!10704 = !DILocation(line: 67, column: 7, scope: !10681)
!10705 = !DILocation(line: 68, column: 5, scope: !10703)
!10706 = !DILocation(line: 69, column: 7, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10681, file: !10614, line: 69, column: 7)
!10708 = !DILocation(line: 69, column: 7, scope: !10681)
!10709 = !DILocation(line: 70, column: 5, scope: !10707)
!10710 = !DILocation(line: 73, column: 7, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10681, file: !10614, line: 73, column: 7)
!10712 = !DILocation(line: 73, column: 7, scope: !10681)
!10713 = !DILocation(line: 74, column: 5, scope: !10711)
!10714 = !DILocation(line: 90, column: 3, scope: !10681)
!10715 = !DILocation(line: 91, column: 1, scope: !10681)
!10716 = distinct !DISubprogram(name: "filemodestring", scope: !10614, file: !10614, line: 166, type: !10717, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !216)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{null, !10719, !9}
!10719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10720, size: 64)
!10720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10721)
!10721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !10722)
!10722 = !{!10723, !10724, !10725, !10726, !10727, !10728, !10729, !10730, !10731, !10732, !10733, !10734, !10739, !10740, !10741}
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10721, file: !339, line: 48, baseType: !263, size: 64)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10721, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10721, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10721, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10721, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10721, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !10721, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10721, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10721, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10721, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10721, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!10734 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10721, file: !339, line: 91, baseType: !10735, size: 128, offset: 576)
!10735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !10736)
!10736 = !{!10737, !10738}
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10735, file: !358, line: 11, baseType: !361, size: 64)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10735, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10721, file: !339, line: 92, baseType: !10735, size: 128, offset: 704)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10721, file: !339, line: 93, baseType: !10735, size: 128, offset: 832)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !10721, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!10742 = !DILocalVariable(name: "statp", arg: 1, scope: !10716, file: !10614, line: 166, type: !10719)
!10743 = !DILocation(line: 166, column: 36, scope: !10716)
!10744 = !DILocalVariable(name: "str", arg: 2, scope: !10716, file: !10614, line: 166, type: !9)
!10745 = !DILocation(line: 166, column: 49, scope: !10716)
!10746 = !DILocation(line: 168, column: 12, scope: !10716)
!10747 = !DILocation(line: 168, column: 19, scope: !10716)
!10748 = !DILocation(line: 168, column: 28, scope: !10716)
!10749 = !DILocation(line: 168, column: 3, scope: !10716)
!10750 = !DILocation(line: 170, column: 7, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10716, file: !10614, line: 170, column: 7)
!10752 = !DILocation(line: 170, column: 7, scope: !10716)
!10753 = !DILocation(line: 171, column: 5, scope: !10751)
!10754 = !DILocation(line: 171, column: 12, scope: !10751)
!10755 = !DILocation(line: 174, column: 12, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !10614, line: 174, column: 12)
!10757 = distinct !DILexicalBlock(scope: !10751, file: !10614, line: 172, column: 12)
!10758 = !DILocation(line: 174, column: 12, scope: !10757)
!10759 = !DILocation(line: 175, column: 5, scope: !10756)
!10760 = !DILocation(line: 175, column: 12, scope: !10756)
!10761 = !DILocation(line: 176, column: 12, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10756, file: !10614, line: 176, column: 12)
!10763 = !DILocation(line: 176, column: 12, scope: !10756)
!10764 = !DILocation(line: 177, column: 5, scope: !10762)
!10765 = !DILocation(line: 177, column: 12, scope: !10762)
!10766 = !DILocation(line: 180, column: 1, scope: !10716)
!10767 = distinct !DISubprogram(name: "file_name_concat", scope: !10768, file: !10768, line: 35, type: !10769, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1344, retainedNodes: !216)
!10768 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10769 = !DISubroutineType(types: !10770)
!10770 = !{!9, !116, !116, !143}
!10771 = !DILocalVariable(name: "dir", arg: 1, scope: !10767, file: !10768, line: 35, type: !116)
!10772 = !DILocation(line: 35, column: 31, scope: !10767)
!10773 = !DILocalVariable(name: "base", arg: 2, scope: !10767, file: !10768, line: 35, type: !116)
!10774 = !DILocation(line: 35, column: 48, scope: !10767)
!10775 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10767, file: !10768, line: 35, type: !143)
!10776 = !DILocation(line: 35, column: 61, scope: !10767)
!10777 = !DILocalVariable(name: "p", scope: !10767, file: !10768, line: 37, type: !9)
!10778 = !DILocation(line: 37, column: 9, scope: !10767)
!10779 = !DILocation(line: 37, column: 32, scope: !10767)
!10780 = !DILocation(line: 37, column: 37, scope: !10767)
!10781 = !DILocation(line: 37, column: 43, scope: !10767)
!10782 = !DILocation(line: 37, column: 13, scope: !10767)
!10783 = !DILocation(line: 38, column: 7, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10767, file: !10768, line: 38, column: 7)
!10785 = !DILocation(line: 38, column: 9, scope: !10784)
!10786 = !DILocation(line: 38, column: 7, scope: !10767)
!10787 = !DILocation(line: 39, column: 5, scope: !10784)
!10788 = !DILocation(line: 40, column: 10, scope: !10767)
!10789 = !DILocation(line: 40, column: 3, scope: !10767)
!10790 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10791, file: !10791, line: 47, type: !10769, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1347, retainedNodes: !216)
!10791 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10792 = !DILocalVariable(name: "dir", arg: 1, scope: !10790, file: !10791, line: 47, type: !116)
!10793 = !DILocation(line: 47, column: 32, scope: !10790)
!10794 = !DILocalVariable(name: "base", arg: 2, scope: !10790, file: !10791, line: 47, type: !116)
!10795 = !DILocation(line: 47, column: 49, scope: !10790)
!10796 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10790, file: !10791, line: 47, type: !143)
!10797 = !DILocation(line: 47, column: 62, scope: !10790)
!10798 = !DILocalVariable(name: "dirbase", scope: !10790, file: !10791, line: 49, type: !116)
!10799 = !DILocation(line: 49, column: 15, scope: !10790)
!10800 = !DILocation(line: 49, column: 41, scope: !10790)
!10801 = !DILocation(line: 49, column: 25, scope: !10790)
!10802 = !DILocalVariable(name: "dirbaselen", scope: !10790, file: !10791, line: 50, type: !55)
!10803 = !DILocation(line: 50, column: 10, scope: !10790)
!10804 = !DILocation(line: 50, column: 33, scope: !10790)
!10805 = !DILocation(line: 50, column: 23, scope: !10790)
!10806 = !DILocalVariable(name: "dirlen", scope: !10790, file: !10791, line: 51, type: !55)
!10807 = !DILocation(line: 51, column: 10, scope: !10790)
!10808 = !DILocation(line: 51, column: 19, scope: !10790)
!10809 = !DILocation(line: 51, column: 29, scope: !10790)
!10810 = !DILocation(line: 51, column: 27, scope: !10790)
!10811 = !DILocation(line: 51, column: 35, scope: !10790)
!10812 = !DILocation(line: 51, column: 33, scope: !10790)
!10813 = !DILocalVariable(name: "baselen", scope: !10790, file: !10791, line: 52, type: !55)
!10814 = !DILocation(line: 52, column: 10, scope: !10790)
!10815 = !DILocation(line: 52, column: 28, scope: !10790)
!10816 = !DILocation(line: 52, column: 20, scope: !10790)
!10817 = !DILocalVariable(name: "sep", scope: !10790, file: !10791, line: 53, type: !10)
!10818 = !DILocation(line: 53, column: 8, scope: !10790)
!10819 = !DILocation(line: 54, column: 7, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10790, file: !10791, line: 54, column: 7)
!10821 = !DILocation(line: 54, column: 7, scope: !10790)
!10822 = !DILocation(line: 57, column: 13, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10824, file: !10791, line: 57, column: 11)
!10824 = distinct !DILexicalBlock(scope: !10820, file: !10791, line: 55, column: 5)
!10825 = !DILocation(line: 57, column: 39, scope: !10823)
!10826 = !DILocation(line: 57, column: 44, scope: !10823)
!10827 = !DILocation(line: 57, column: 11, scope: !10824)
!10828 = !DILocation(line: 58, column: 13, scope: !10823)
!10829 = !DILocation(line: 58, column: 9, scope: !10823)
!10830 = !DILocation(line: 59, column: 5, scope: !10824)
!10831 = !DILocation(line: 60, column: 12, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10820, file: !10791, line: 60, column: 12)
!10833 = !DILocation(line: 60, column: 12, scope: !10820)
!10834 = !DILocation(line: 67, column: 11, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10832, file: !10791, line: 61, column: 5)
!10836 = !DILocation(line: 68, column: 5, scope: !10835)
!10837 = !DILocalVariable(name: "p_concat", scope: !10790, file: !10791, line: 70, type: !9)
!10838 = !DILocation(line: 70, column: 9, scope: !10790)
!10839 = !DILocation(line: 70, column: 28, scope: !10790)
!10840 = !DILocation(line: 70, column: 38, scope: !10790)
!10841 = !DILocation(line: 70, column: 42, scope: !10790)
!10842 = !DILocation(line: 70, column: 37, scope: !10790)
!10843 = !DILocation(line: 70, column: 35, scope: !10790)
!10844 = !DILocation(line: 70, column: 54, scope: !10790)
!10845 = !DILocation(line: 70, column: 52, scope: !10790)
!10846 = !DILocation(line: 70, column: 62, scope: !10790)
!10847 = !DILocation(line: 70, column: 20, scope: !10790)
!10848 = !DILocalVariable(name: "p", scope: !10790, file: !10791, line: 71, type: !9)
!10849 = !DILocation(line: 71, column: 9, scope: !10790)
!10850 = !DILocation(line: 73, column: 7, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10790, file: !10791, line: 73, column: 7)
!10852 = !DILocation(line: 73, column: 16, scope: !10851)
!10853 = !DILocation(line: 73, column: 7, scope: !10790)
!10854 = !DILocation(line: 74, column: 5, scope: !10851)
!10855 = !DILocation(line: 76, column: 16, scope: !10790)
!10856 = !DILocation(line: 76, column: 26, scope: !10790)
!10857 = !DILocation(line: 76, column: 31, scope: !10790)
!10858 = !DILocation(line: 76, column: 7, scope: !10790)
!10859 = !DILocation(line: 76, column: 5, scope: !10790)
!10860 = !DILocation(line: 77, column: 8, scope: !10790)
!10861 = !DILocation(line: 77, column: 4, scope: !10790)
!10862 = !DILocation(line: 77, column: 6, scope: !10790)
!10863 = !DILocation(line: 78, column: 8, scope: !10790)
!10864 = !DILocation(line: 78, column: 12, scope: !10790)
!10865 = !DILocation(line: 78, column: 5, scope: !10790)
!10866 = !DILocation(line: 80, column: 7, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10790, file: !10791, line: 80, column: 7)
!10868 = !DILocation(line: 80, column: 7, scope: !10790)
!10869 = !DILocation(line: 81, column: 23, scope: !10867)
!10870 = !DILocation(line: 81, column: 6, scope: !10867)
!10871 = !DILocation(line: 81, column: 21, scope: !10867)
!10872 = !DILocation(line: 81, column: 5, scope: !10867)
!10873 = !DILocation(line: 83, column: 16, scope: !10790)
!10874 = !DILocation(line: 83, column: 19, scope: !10790)
!10875 = !DILocation(line: 83, column: 25, scope: !10790)
!10876 = !DILocation(line: 83, column: 7, scope: !10790)
!10877 = !DILocation(line: 83, column: 5, scope: !10790)
!10878 = !DILocation(line: 84, column: 4, scope: !10790)
!10879 = !DILocation(line: 84, column: 6, scope: !10790)
!10880 = !DILocation(line: 86, column: 10, scope: !10790)
!10881 = !DILocation(line: 86, column: 3, scope: !10790)
!10882 = !DILocation(line: 87, column: 1, scope: !10790)
!10883 = distinct !DISubprogram(name: "full_write", scope: !10884, file: !10884, line: 58, type: !10885, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1350, retainedNodes: !216)
!10884 = !DIFile(filename: "lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!55, !7, !709, !55}
!10887 = !DILocalVariable(name: "fd", arg: 1, scope: !10883, file: !10884, line: 58, type: !7)
!10888 = !DILocation(line: 58, column: 14, scope: !10883)
!10889 = !DILocalVariable(name: "buf", arg: 2, scope: !10883, file: !10884, line: 58, type: !709)
!10890 = !DILocation(line: 58, column: 30, scope: !10883)
!10891 = !DILocalVariable(name: "count", arg: 3, scope: !10883, file: !10884, line: 58, type: !55)
!10892 = !DILocation(line: 58, column: 42, scope: !10883)
!10893 = !DILocalVariable(name: "total", scope: !10883, file: !10884, line: 60, type: !55)
!10894 = !DILocation(line: 60, column: 10, scope: !10883)
!10895 = !DILocalVariable(name: "ptr", scope: !10883, file: !10884, line: 61, type: !116)
!10896 = !DILocation(line: 61, column: 15, scope: !10883)
!10897 = !DILocation(line: 61, column: 36, scope: !10883)
!10898 = !DILocation(line: 63, column: 3, scope: !10883)
!10899 = !DILocation(line: 63, column: 10, scope: !10883)
!10900 = !DILocation(line: 63, column: 16, scope: !10883)
!10901 = !DILocalVariable(name: "n_rw", scope: !10902, file: !10884, line: 65, type: !55)
!10902 = distinct !DILexicalBlock(scope: !10883, file: !10884, line: 64, column: 5)
!10903 = !DILocation(line: 65, column: 14, scope: !10902)
!10904 = !DILocation(line: 65, column: 30, scope: !10902)
!10905 = !DILocation(line: 65, column: 34, scope: !10902)
!10906 = !DILocation(line: 65, column: 39, scope: !10902)
!10907 = !DILocation(line: 65, column: 21, scope: !10902)
!10908 = !DILocation(line: 66, column: 11, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10902, file: !10884, line: 66, column: 11)
!10910 = !DILocation(line: 66, column: 16, scope: !10909)
!10911 = !DILocation(line: 66, column: 11, scope: !10902)
!10912 = !DILocation(line: 67, column: 9, scope: !10909)
!10913 = !DILocation(line: 68, column: 11, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10902, file: !10884, line: 68, column: 11)
!10915 = !DILocation(line: 68, column: 16, scope: !10914)
!10916 = !DILocation(line: 68, column: 11, scope: !10902)
!10917 = !DILocation(line: 70, column: 11, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10914, file: !10884, line: 69, column: 9)
!10919 = !DILocation(line: 70, column: 17, scope: !10918)
!10920 = !DILocation(line: 71, column: 11, scope: !10918)
!10921 = !DILocation(line: 73, column: 16, scope: !10902)
!10922 = !DILocation(line: 73, column: 13, scope: !10902)
!10923 = !DILocation(line: 74, column: 14, scope: !10902)
!10924 = !DILocation(line: 74, column: 11, scope: !10902)
!10925 = !DILocation(line: 75, column: 16, scope: !10902)
!10926 = !DILocation(line: 75, column: 13, scope: !10902)
!10927 = distinct !{!10927, !10898, !10928}
!10928 = !DILocation(line: 76, column: 5, scope: !10883)
!10929 = !DILocation(line: 78, column: 10, scope: !10883)
!10930 = !DILocation(line: 78, column: 3, scope: !10883)
!10931 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !678, file: !678, line: 150, type: !10932, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!10932 = !DISubroutineType(types: !10933)
!10933 = !{!55, !10934}
!10934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!10935 = !DILocalVariable(name: "table", arg: 1, scope: !10931, file: !678, line: 150, type: !10934)
!10936 = !DILocation(line: 150, column: 39, scope: !10931)
!10937 = !DILocation(line: 152, column: 10, scope: !10931)
!10938 = !DILocation(line: 152, column: 17, scope: !10931)
!10939 = !DILocation(line: 152, column: 3, scope: !10931)
!10940 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !678, file: !678, line: 158, type: !10932, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!10941 = !DILocalVariable(name: "table", arg: 1, scope: !10940, file: !678, line: 158, type: !10934)
!10942 = !DILocation(line: 158, column: 44, scope: !10940)
!10943 = !DILocation(line: 160, column: 10, scope: !10940)
!10944 = !DILocation(line: 160, column: 17, scope: !10940)
!10945 = !DILocation(line: 160, column: 3, scope: !10940)
!10946 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !678, file: !678, line: 166, type: !10932, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!10947 = !DILocalVariable(name: "table", arg: 1, scope: !10946, file: !678, line: 166, type: !10934)
!10948 = !DILocation(line: 166, column: 39, scope: !10946)
!10949 = !DILocation(line: 168, column: 10, scope: !10946)
!10950 = !DILocation(line: 168, column: 17, scope: !10946)
!10951 = !DILocation(line: 168, column: 3, scope: !10946)
!10952 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !678, file: !678, line: 174, type: !10932, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!10953 = !DILocalVariable(name: "table", arg: 1, scope: !10952, file: !678, line: 174, type: !10934)
!10954 = !DILocation(line: 174, column: 47, scope: !10952)
!10955 = !DILocalVariable(name: "bucket", scope: !10952, file: !678, line: 176, type: !687)
!10956 = !DILocation(line: 176, column: 28, scope: !10952)
!10957 = !DILocalVariable(name: "max_bucket_length", scope: !10952, file: !678, line: 177, type: !55)
!10958 = !DILocation(line: 177, column: 10, scope: !10952)
!10959 = !DILocation(line: 179, column: 17, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10952, file: !678, line: 179, column: 3)
!10961 = !DILocation(line: 179, column: 24, scope: !10960)
!10962 = !DILocation(line: 179, column: 15, scope: !10960)
!10963 = !DILocation(line: 179, column: 8, scope: !10960)
!10964 = !DILocation(line: 179, column: 32, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10960, file: !678, line: 179, column: 3)
!10966 = !DILocation(line: 179, column: 41, scope: !10965)
!10967 = !DILocation(line: 179, column: 48, scope: !10965)
!10968 = !DILocation(line: 179, column: 39, scope: !10965)
!10969 = !DILocation(line: 179, column: 3, scope: !10960)
!10970 = !DILocation(line: 181, column: 11, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10972, file: !678, line: 181, column: 11)
!10972 = distinct !DILexicalBlock(scope: !10965, file: !678, line: 180, column: 5)
!10973 = !DILocation(line: 181, column: 19, scope: !10971)
!10974 = !DILocation(line: 181, column: 11, scope: !10972)
!10975 = !DILocalVariable(name: "cursor", scope: !10976, file: !678, line: 183, type: !687)
!10976 = distinct !DILexicalBlock(scope: !10971, file: !678, line: 182, column: 9)
!10977 = !DILocation(line: 183, column: 36, scope: !10976)
!10978 = !DILocation(line: 183, column: 45, scope: !10976)
!10979 = !DILocalVariable(name: "bucket_length", scope: !10976, file: !678, line: 184, type: !55)
!10980 = !DILocation(line: 184, column: 18, scope: !10976)
!10981 = !DILocation(line: 186, column: 11, scope: !10976)
!10982 = !DILocation(line: 186, column: 27, scope: !10976)
!10983 = !DILocation(line: 186, column: 35, scope: !10976)
!10984 = !DILocation(line: 186, column: 25, scope: !10976)
!10985 = !DILocation(line: 186, column: 41, scope: !10976)
!10986 = !DILocation(line: 187, column: 26, scope: !10976)
!10987 = distinct !{!10987, !10981, !10986}
!10988 = !DILocation(line: 189, column: 15, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10976, file: !678, line: 189, column: 15)
!10990 = !DILocation(line: 189, column: 31, scope: !10989)
!10991 = !DILocation(line: 189, column: 29, scope: !10989)
!10992 = !DILocation(line: 189, column: 15, scope: !10976)
!10993 = !DILocation(line: 190, column: 33, scope: !10989)
!10994 = !DILocation(line: 190, column: 31, scope: !10989)
!10995 = !DILocation(line: 190, column: 13, scope: !10989)
!10996 = !DILocation(line: 191, column: 9, scope: !10976)
!10997 = !DILocation(line: 192, column: 5, scope: !10972)
!10998 = !DILocation(line: 179, column: 68, scope: !10965)
!10999 = !DILocation(line: 179, column: 3, scope: !10965)
!11000 = distinct !{!11000, !10969, !11001}
!11001 = !DILocation(line: 192, column: 5, scope: !10960)
!11002 = !DILocation(line: 194, column: 10, scope: !10952)
!11003 = !DILocation(line: 194, column: 3, scope: !10952)
!11004 = distinct !DISubprogram(name: "hash_table_ok", scope: !678, file: !678, line: 201, type: !11005, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11005 = !DISubroutineType(types: !11006)
!11006 = !{!142, !10934}
!11007 = !DILocalVariable(name: "table", arg: 1, scope: !11004, file: !678, line: 201, type: !10934)
!11008 = !DILocation(line: 201, column: 34, scope: !11004)
!11009 = !DILocalVariable(name: "bucket", scope: !11004, file: !678, line: 203, type: !687)
!11010 = !DILocation(line: 203, column: 28, scope: !11004)
!11011 = !DILocalVariable(name: "n_buckets_used", scope: !11004, file: !678, line: 204, type: !55)
!11012 = !DILocation(line: 204, column: 10, scope: !11004)
!11013 = !DILocalVariable(name: "n_entries", scope: !11004, file: !678, line: 205, type: !55)
!11014 = !DILocation(line: 205, column: 10, scope: !11004)
!11015 = !DILocation(line: 207, column: 17, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11004, file: !678, line: 207, column: 3)
!11017 = !DILocation(line: 207, column: 24, scope: !11016)
!11018 = !DILocation(line: 207, column: 15, scope: !11016)
!11019 = !DILocation(line: 207, column: 8, scope: !11016)
!11020 = !DILocation(line: 207, column: 32, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11016, file: !678, line: 207, column: 3)
!11022 = !DILocation(line: 207, column: 41, scope: !11021)
!11023 = !DILocation(line: 207, column: 48, scope: !11021)
!11024 = !DILocation(line: 207, column: 39, scope: !11021)
!11025 = !DILocation(line: 207, column: 3, scope: !11016)
!11026 = !DILocation(line: 209, column: 11, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11028, file: !678, line: 209, column: 11)
!11028 = distinct !DILexicalBlock(scope: !11021, file: !678, line: 208, column: 5)
!11029 = !DILocation(line: 209, column: 19, scope: !11027)
!11030 = !DILocation(line: 209, column: 11, scope: !11028)
!11031 = !DILocalVariable(name: "cursor", scope: !11032, file: !678, line: 211, type: !687)
!11032 = distinct !DILexicalBlock(scope: !11027, file: !678, line: 210, column: 9)
!11033 = !DILocation(line: 211, column: 36, scope: !11032)
!11034 = !DILocation(line: 211, column: 45, scope: !11032)
!11035 = !DILocation(line: 214, column: 25, scope: !11032)
!11036 = !DILocation(line: 215, column: 20, scope: !11032)
!11037 = !DILocation(line: 218, column: 11, scope: !11032)
!11038 = !DILocation(line: 218, column: 27, scope: !11032)
!11039 = !DILocation(line: 218, column: 35, scope: !11032)
!11040 = !DILocation(line: 218, column: 25, scope: !11032)
!11041 = !DILocation(line: 218, column: 41, scope: !11032)
!11042 = !DILocation(line: 219, column: 22, scope: !11032)
!11043 = distinct !{!11043, !11037, !11042}
!11044 = !DILocation(line: 220, column: 9, scope: !11032)
!11045 = !DILocation(line: 221, column: 5, scope: !11028)
!11046 = !DILocation(line: 207, column: 68, scope: !11021)
!11047 = !DILocation(line: 207, column: 3, scope: !11021)
!11048 = distinct !{!11048, !11025, !11049}
!11049 = !DILocation(line: 221, column: 5, scope: !11016)
!11050 = !DILocation(line: 223, column: 7, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11004, file: !678, line: 223, column: 7)
!11052 = !DILocation(line: 223, column: 25, scope: !11051)
!11053 = !DILocation(line: 223, column: 32, scope: !11051)
!11054 = !DILocation(line: 223, column: 22, scope: !11051)
!11055 = !DILocation(line: 223, column: 47, scope: !11051)
!11056 = !DILocation(line: 223, column: 50, scope: !11051)
!11057 = !DILocation(line: 223, column: 63, scope: !11051)
!11058 = !DILocation(line: 223, column: 70, scope: !11051)
!11059 = !DILocation(line: 223, column: 60, scope: !11051)
!11060 = !DILocation(line: 223, column: 7, scope: !11004)
!11061 = !DILocation(line: 224, column: 5, scope: !11051)
!11062 = !DILocation(line: 226, column: 3, scope: !11004)
!11063 = !DILocation(line: 227, column: 1, scope: !11004)
!11064 = distinct !DISubprogram(name: "hash_print_statistics", scope: !678, file: !678, line: 230, type: !11065, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11065 = !DISubroutineType(types: !11066)
!11066 = !{null, !10934, !11067}
!11067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11068, size: 64)
!11068 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !11069)
!11069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !11070)
!11070 = !{!11071, !11072, !11073, !11074, !11075, !11076, !11077, !11078, !11079, !11080, !11081, !11082, !11083, !11084, !11086, !11087, !11088, !11089, !11090, !11091, !11092, !11093, !11094, !11095, !11096, !11097, !11098, !11099, !11100}
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !11069, file: !4, line: 51, baseType: !7, size: 32)
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !11069, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !11069, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !11069, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !11069, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !11069, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!11077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !11069, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!11078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !11069, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!11079 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !11069, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !11069, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !11069, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !11069, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !11069, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !11069, file: !4, line: 70, baseType: !11085, size: 64, offset: 832)
!11085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11069, size: 64)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !11069, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !11069, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !11069, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !11069, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !11069, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !11069, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !11069, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !11069, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !11069, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !11069, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !11069, file: !4, line: 93, baseType: !11085, size: 64, offset: 1344)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !11069, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !11069, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !11069, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !11069, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!11101 = !DILocalVariable(name: "table", arg: 1, scope: !11064, file: !678, line: 230, type: !10934)
!11102 = !DILocation(line: 230, column: 42, scope: !11064)
!11103 = !DILocalVariable(name: "stream", arg: 2, scope: !11064, file: !678, line: 230, type: !11067)
!11104 = !DILocation(line: 230, column: 55, scope: !11064)
!11105 = !DILocalVariable(name: "n_entries", scope: !11064, file: !678, line: 232, type: !55)
!11106 = !DILocation(line: 232, column: 10, scope: !11064)
!11107 = !DILocation(line: 232, column: 42, scope: !11064)
!11108 = !DILocation(line: 232, column: 22, scope: !11064)
!11109 = !DILocalVariable(name: "n_buckets", scope: !11064, file: !678, line: 233, type: !55)
!11110 = !DILocation(line: 233, column: 10, scope: !11064)
!11111 = !DILocation(line: 233, column: 42, scope: !11064)
!11112 = !DILocation(line: 233, column: 22, scope: !11064)
!11113 = !DILocalVariable(name: "n_buckets_used", scope: !11064, file: !678, line: 234, type: !55)
!11114 = !DILocation(line: 234, column: 10, scope: !11064)
!11115 = !DILocation(line: 234, column: 52, scope: !11064)
!11116 = !DILocation(line: 234, column: 27, scope: !11064)
!11117 = !DILocalVariable(name: "max_bucket_length", scope: !11064, file: !678, line: 235, type: !55)
!11118 = !DILocation(line: 235, column: 10, scope: !11064)
!11119 = !DILocation(line: 235, column: 58, scope: !11064)
!11120 = !DILocation(line: 235, column: 30, scope: !11064)
!11121 = !DILocation(line: 237, column: 12, scope: !11064)
!11122 = !DILocation(line: 237, column: 68, scope: !11064)
!11123 = !DILocation(line: 237, column: 3, scope: !11064)
!11124 = !DILocation(line: 238, column: 12, scope: !11064)
!11125 = !DILocation(line: 238, column: 68, scope: !11064)
!11126 = !DILocation(line: 238, column: 3, scope: !11064)
!11127 = !DILocation(line: 239, column: 12, scope: !11064)
!11128 = !DILocation(line: 240, column: 32, scope: !11064)
!11129 = !DILocation(line: 241, column: 21, scope: !11064)
!11130 = !DILocation(line: 241, column: 19, scope: !11064)
!11131 = !DILocation(line: 241, column: 39, scope: !11064)
!11132 = !DILocation(line: 241, column: 37, scope: !11064)
!11133 = !DILocation(line: 239, column: 3, scope: !11064)
!11134 = !DILocation(line: 242, column: 12, scope: !11064)
!11135 = !DILocation(line: 243, column: 32, scope: !11064)
!11136 = !DILocation(line: 242, column: 3, scope: !11064)
!11137 = !DILocation(line: 244, column: 1, scope: !11064)
!11138 = distinct !DISubprogram(name: "hash_lookup", scope: !678, file: !678, line: 261, type: !11139, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11139 = !DISubroutineType(types: !11140)
!11140 = !{!53, !10934, !709}
!11141 = !DILocalVariable(name: "table", arg: 1, scope: !11138, file: !678, line: 261, type: !10934)
!11142 = !DILocation(line: 261, column: 32, scope: !11138)
!11143 = !DILocalVariable(name: "entry", arg: 2, scope: !11138, file: !678, line: 261, type: !709)
!11144 = !DILocation(line: 261, column: 51, scope: !11138)
!11145 = !DILocalVariable(name: "bucket", scope: !11138, file: !678, line: 263, type: !687)
!11146 = !DILocation(line: 263, column: 28, scope: !11138)
!11147 = !DILocation(line: 263, column: 50, scope: !11138)
!11148 = !DILocation(line: 263, column: 57, scope: !11138)
!11149 = !DILocation(line: 263, column: 37, scope: !11138)
!11150 = !DILocalVariable(name: "cursor", scope: !11138, file: !678, line: 264, type: !687)
!11151 = !DILocation(line: 264, column: 28, scope: !11138)
!11152 = !DILocation(line: 266, column: 7, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11138, file: !678, line: 266, column: 7)
!11154 = !DILocation(line: 266, column: 15, scope: !11153)
!11155 = !DILocation(line: 266, column: 20, scope: !11153)
!11156 = !DILocation(line: 266, column: 7, scope: !11138)
!11157 = !DILocation(line: 267, column: 5, scope: !11153)
!11158 = !DILocation(line: 269, column: 17, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11138, file: !678, line: 269, column: 3)
!11160 = !DILocation(line: 269, column: 15, scope: !11159)
!11161 = !DILocation(line: 269, column: 8, scope: !11159)
!11162 = !DILocation(line: 269, column: 25, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11159, file: !678, line: 269, column: 3)
!11164 = !DILocation(line: 269, column: 3, scope: !11159)
!11165 = !DILocation(line: 270, column: 9, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11163, file: !678, line: 270, column: 9)
!11167 = !DILocation(line: 270, column: 18, scope: !11166)
!11168 = !DILocation(line: 270, column: 26, scope: !11166)
!11169 = !DILocation(line: 270, column: 15, scope: !11166)
!11170 = !DILocation(line: 270, column: 31, scope: !11166)
!11171 = !DILocation(line: 270, column: 34, scope: !11166)
!11172 = !DILocation(line: 270, column: 41, scope: !11166)
!11173 = !DILocation(line: 270, column: 53, scope: !11166)
!11174 = !DILocation(line: 270, column: 60, scope: !11166)
!11175 = !DILocation(line: 270, column: 68, scope: !11166)
!11176 = !DILocation(line: 270, column: 9, scope: !11163)
!11177 = !DILocation(line: 271, column: 14, scope: !11166)
!11178 = !DILocation(line: 271, column: 22, scope: !11166)
!11179 = !DILocation(line: 271, column: 7, scope: !11166)
!11180 = !DILocation(line: 270, column: 72, scope: !11166)
!11181 = !DILocation(line: 269, column: 42, scope: !11163)
!11182 = !DILocation(line: 269, column: 50, scope: !11163)
!11183 = !DILocation(line: 269, column: 40, scope: !11163)
!11184 = !DILocation(line: 269, column: 3, scope: !11163)
!11185 = distinct !{!11185, !11164, !11186}
!11186 = !DILocation(line: 271, column: 22, scope: !11159)
!11187 = !DILocation(line: 273, column: 3, scope: !11138)
!11188 = !DILocation(line: 274, column: 1, scope: !11138)
!11189 = distinct !DISubprogram(name: "safe_hasher", scope: !678, file: !678, line: 249, type: !11190, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{!681, !10934, !709}
!11192 = !DILocalVariable(name: "table", arg: 1, scope: !11189, file: !678, line: 249, type: !10934)
!11193 = !DILocation(line: 249, column: 32, scope: !11189)
!11194 = !DILocalVariable(name: "key", arg: 2, scope: !11189, file: !678, line: 249, type: !709)
!11195 = !DILocation(line: 249, column: 51, scope: !11189)
!11196 = !DILocalVariable(name: "n", scope: !11189, file: !678, line: 251, type: !55)
!11197 = !DILocation(line: 251, column: 10, scope: !11189)
!11198 = !DILocation(line: 251, column: 14, scope: !11189)
!11199 = !DILocation(line: 251, column: 21, scope: !11189)
!11200 = !DILocation(line: 251, column: 29, scope: !11189)
!11201 = !DILocation(line: 251, column: 34, scope: !11189)
!11202 = !DILocation(line: 251, column: 41, scope: !11189)
!11203 = !DILocation(line: 252, column: 10, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11189, file: !678, line: 252, column: 7)
!11205 = !DILocation(line: 252, column: 14, scope: !11204)
!11206 = !DILocation(line: 252, column: 21, scope: !11204)
!11207 = !DILocation(line: 252, column: 12, scope: !11204)
!11208 = !DILocation(line: 252, column: 7, scope: !11189)
!11209 = !DILocation(line: 253, column: 5, scope: !11204)
!11210 = !DILocation(line: 254, column: 10, scope: !11189)
!11211 = !DILocation(line: 254, column: 17, scope: !11189)
!11212 = !DILocation(line: 254, column: 26, scope: !11189)
!11213 = !DILocation(line: 254, column: 24, scope: !11189)
!11214 = !DILocation(line: 254, column: 3, scope: !11189)
!11215 = distinct !DISubprogram(name: "hash_get_first", scope: !678, file: !678, line: 288, type: !11216, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{!53, !10934}
!11218 = !DILocalVariable(name: "table", arg: 1, scope: !11215, file: !678, line: 288, type: !10934)
!11219 = !DILocation(line: 288, column: 35, scope: !11215)
!11220 = !DILocalVariable(name: "bucket", scope: !11215, file: !678, line: 290, type: !687)
!11221 = !DILocation(line: 290, column: 28, scope: !11215)
!11222 = !DILocation(line: 292, column: 7, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11215, file: !678, line: 292, column: 7)
!11224 = !DILocation(line: 292, column: 14, scope: !11223)
!11225 = !DILocation(line: 292, column: 24, scope: !11223)
!11226 = !DILocation(line: 292, column: 7, scope: !11215)
!11227 = !DILocation(line: 293, column: 5, scope: !11223)
!11228 = !DILocation(line: 295, column: 17, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11215, file: !678, line: 295, column: 3)
!11230 = !DILocation(line: 295, column: 24, scope: !11229)
!11231 = !DILocation(line: 295, column: 15, scope: !11229)
!11232 = !DILocation(line: 295, column: 8, scope: !11229)
!11233 = !DILocation(line: 296, column: 12, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11235, file: !678, line: 296, column: 9)
!11235 = distinct !DILexicalBlock(scope: !11229, file: !678, line: 295, column: 3)
!11236 = !DILocation(line: 296, column: 21, scope: !11234)
!11237 = !DILocation(line: 296, column: 28, scope: !11234)
!11238 = !DILocation(line: 296, column: 19, scope: !11234)
!11239 = !DILocation(line: 296, column: 9, scope: !11235)
!11240 = !DILocation(line: 297, column: 7, scope: !11234)
!11241 = !DILocation(line: 298, column: 14, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11234, file: !678, line: 298, column: 14)
!11243 = !DILocation(line: 298, column: 22, scope: !11242)
!11244 = !DILocation(line: 298, column: 14, scope: !11234)
!11245 = !DILocation(line: 299, column: 14, scope: !11242)
!11246 = !DILocation(line: 299, column: 22, scope: !11242)
!11247 = !DILocation(line: 299, column: 7, scope: !11242)
!11248 = !DILocation(line: 296, column: 40, scope: !11234)
!11249 = !DILocation(line: 295, column: 40, scope: !11235)
!11250 = !DILocation(line: 295, column: 3, scope: !11235)
!11251 = distinct !{!11251, !11252, !11253}
!11252 = !DILocation(line: 295, column: 3, scope: !11229)
!11253 = !DILocation(line: 299, column: 22, scope: !11229)
!11254 = !DILocation(line: 300, column: 1, scope: !11215)
!11255 = distinct !DISubprogram(name: "hash_get_next", scope: !678, file: !678, line: 307, type: !11139, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11256 = !DILocalVariable(name: "table", arg: 1, scope: !11255, file: !678, line: 307, type: !10934)
!11257 = !DILocation(line: 307, column: 34, scope: !11255)
!11258 = !DILocalVariable(name: "entry", arg: 2, scope: !11255, file: !678, line: 307, type: !709)
!11259 = !DILocation(line: 307, column: 53, scope: !11255)
!11260 = !DILocalVariable(name: "bucket", scope: !11255, file: !678, line: 309, type: !687)
!11261 = !DILocation(line: 309, column: 28, scope: !11255)
!11262 = !DILocation(line: 309, column: 50, scope: !11255)
!11263 = !DILocation(line: 309, column: 57, scope: !11255)
!11264 = !DILocation(line: 309, column: 37, scope: !11255)
!11265 = !DILocalVariable(name: "cursor", scope: !11255, file: !678, line: 310, type: !687)
!11266 = !DILocation(line: 310, column: 28, scope: !11255)
!11267 = !DILocation(line: 313, column: 12, scope: !11255)
!11268 = !DILocation(line: 313, column: 10, scope: !11255)
!11269 = !DILocation(line: 314, column: 3, scope: !11255)
!11270 = !DILocation(line: 316, column: 11, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11272, file: !678, line: 316, column: 11)
!11272 = distinct !DILexicalBlock(scope: !11255, file: !678, line: 315, column: 5)
!11273 = !DILocation(line: 316, column: 19, scope: !11271)
!11274 = !DILocation(line: 316, column: 27, scope: !11271)
!11275 = !DILocation(line: 316, column: 24, scope: !11271)
!11276 = !DILocation(line: 316, column: 33, scope: !11271)
!11277 = !DILocation(line: 316, column: 36, scope: !11271)
!11278 = !DILocation(line: 316, column: 44, scope: !11271)
!11279 = !DILocation(line: 316, column: 11, scope: !11272)
!11280 = !DILocation(line: 317, column: 16, scope: !11271)
!11281 = !DILocation(line: 317, column: 24, scope: !11271)
!11282 = !DILocation(line: 317, column: 30, scope: !11271)
!11283 = !DILocation(line: 317, column: 9, scope: !11271)
!11284 = !DILocation(line: 318, column: 16, scope: !11272)
!11285 = !DILocation(line: 318, column: 24, scope: !11272)
!11286 = !DILocation(line: 318, column: 14, scope: !11272)
!11287 = !DILocation(line: 319, column: 5, scope: !11272)
!11288 = !DILocation(line: 320, column: 10, scope: !11255)
!11289 = !DILocation(line: 320, column: 17, scope: !11255)
!11290 = distinct !{!11290, !11269, !11291}
!11291 = !DILocation(line: 320, column: 24, scope: !11255)
!11292 = !DILocation(line: 323, column: 3, scope: !11255)
!11293 = !DILocation(line: 323, column: 10, scope: !11255)
!11294 = !DILocation(line: 323, column: 21, scope: !11255)
!11295 = !DILocation(line: 323, column: 28, scope: !11255)
!11296 = !DILocation(line: 323, column: 19, scope: !11255)
!11297 = !DILocation(line: 324, column: 9, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11255, file: !678, line: 324, column: 9)
!11299 = !DILocation(line: 324, column: 17, scope: !11298)
!11300 = !DILocation(line: 324, column: 9, scope: !11255)
!11301 = !DILocation(line: 325, column: 14, scope: !11298)
!11302 = !DILocation(line: 325, column: 22, scope: !11298)
!11303 = !DILocation(line: 325, column: 7, scope: !11298)
!11304 = distinct !{!11304, !11292, !11305}
!11305 = !DILocation(line: 325, column: 22, scope: !11255)
!11306 = !DILocation(line: 328, column: 3, scope: !11255)
!11307 = !DILocation(line: 329, column: 1, scope: !11255)
!11308 = distinct !DISubprogram(name: "hash_get_entries", scope: !678, file: !678, line: 336, type: !11309, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11309 = !DISubroutineType(types: !11310)
!11310 = !{!55, !10934, !722, !55}
!11311 = !DILocalVariable(name: "table", arg: 1, scope: !11308, file: !678, line: 336, type: !10934)
!11312 = !DILocation(line: 336, column: 37, scope: !11308)
!11313 = !DILocalVariable(name: "buffer", arg: 2, scope: !11308, file: !678, line: 336, type: !722)
!11314 = !DILocation(line: 336, column: 51, scope: !11308)
!11315 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11308, file: !678, line: 337, type: !55)
!11316 = !DILocation(line: 337, column: 26, scope: !11308)
!11317 = !DILocalVariable(name: "counter", scope: !11308, file: !678, line: 339, type: !55)
!11318 = !DILocation(line: 339, column: 10, scope: !11308)
!11319 = !DILocalVariable(name: "bucket", scope: !11308, file: !678, line: 340, type: !687)
!11320 = !DILocation(line: 340, column: 28, scope: !11308)
!11321 = !DILocalVariable(name: "cursor", scope: !11308, file: !678, line: 341, type: !687)
!11322 = !DILocation(line: 341, column: 28, scope: !11308)
!11323 = !DILocation(line: 343, column: 17, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11308, file: !678, line: 343, column: 3)
!11325 = !DILocation(line: 343, column: 24, scope: !11324)
!11326 = !DILocation(line: 343, column: 15, scope: !11324)
!11327 = !DILocation(line: 343, column: 8, scope: !11324)
!11328 = !DILocation(line: 343, column: 32, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11324, file: !678, line: 343, column: 3)
!11330 = !DILocation(line: 343, column: 41, scope: !11329)
!11331 = !DILocation(line: 343, column: 48, scope: !11329)
!11332 = !DILocation(line: 343, column: 39, scope: !11329)
!11333 = !DILocation(line: 343, column: 3, scope: !11324)
!11334 = !DILocation(line: 345, column: 11, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11336, file: !678, line: 345, column: 11)
!11336 = distinct !DILexicalBlock(scope: !11329, file: !678, line: 344, column: 5)
!11337 = !DILocation(line: 345, column: 19, scope: !11335)
!11338 = !DILocation(line: 345, column: 11, scope: !11336)
!11339 = !DILocation(line: 347, column: 25, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !678, line: 347, column: 11)
!11341 = distinct !DILexicalBlock(scope: !11335, file: !678, line: 346, column: 9)
!11342 = !DILocation(line: 347, column: 23, scope: !11340)
!11343 = !DILocation(line: 347, column: 16, scope: !11340)
!11344 = !DILocation(line: 347, column: 33, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11340, file: !678, line: 347, column: 11)
!11346 = !DILocation(line: 347, column: 11, scope: !11340)
!11347 = !DILocation(line: 349, column: 19, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11349, file: !678, line: 349, column: 19)
!11349 = distinct !DILexicalBlock(scope: !11345, file: !678, line: 348, column: 13)
!11350 = !DILocation(line: 349, column: 30, scope: !11348)
!11351 = !DILocation(line: 349, column: 27, scope: !11348)
!11352 = !DILocation(line: 349, column: 19, scope: !11349)
!11353 = !DILocation(line: 350, column: 24, scope: !11348)
!11354 = !DILocation(line: 350, column: 17, scope: !11348)
!11355 = !DILocation(line: 351, column: 35, scope: !11349)
!11356 = !DILocation(line: 351, column: 43, scope: !11349)
!11357 = !DILocation(line: 351, column: 15, scope: !11349)
!11358 = !DILocation(line: 351, column: 29, scope: !11349)
!11359 = !DILocation(line: 351, column: 33, scope: !11349)
!11360 = !DILocation(line: 352, column: 13, scope: !11349)
!11361 = !DILocation(line: 347, column: 50, scope: !11345)
!11362 = !DILocation(line: 347, column: 58, scope: !11345)
!11363 = !DILocation(line: 347, column: 48, scope: !11345)
!11364 = !DILocation(line: 347, column: 11, scope: !11345)
!11365 = distinct !{!11365, !11346, !11366}
!11366 = !DILocation(line: 352, column: 13, scope: !11340)
!11367 = !DILocation(line: 353, column: 9, scope: !11341)
!11368 = !DILocation(line: 354, column: 5, scope: !11336)
!11369 = !DILocation(line: 343, column: 68, scope: !11329)
!11370 = !DILocation(line: 343, column: 3, scope: !11329)
!11371 = distinct !{!11371, !11333, !11372}
!11372 = !DILocation(line: 354, column: 5, scope: !11324)
!11373 = !DILocation(line: 356, column: 10, scope: !11308)
!11374 = !DILocation(line: 356, column: 3, scope: !11308)
!11375 = !DILocation(line: 357, column: 1, scope: !11308)
!11376 = distinct !DISubprogram(name: "hash_do_for_each", scope: !678, file: !678, line: 368, type: !11377, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11377 = !DISubroutineType(types: !11378)
!11378 = !{!55, !10934, !11379, !53}
!11379 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !243, line: 51, baseType: !11380)
!11380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11381, size: 64)
!11381 = !DISubroutineType(types: !11382)
!11382 = !{!142, !53, !53}
!11383 = !DILocalVariable(name: "table", arg: 1, scope: !11376, file: !678, line: 368, type: !10934)
!11384 = !DILocation(line: 368, column: 37, scope: !11376)
!11385 = !DILocalVariable(name: "processor", arg: 2, scope: !11376, file: !678, line: 368, type: !11379)
!11386 = !DILocation(line: 368, column: 59, scope: !11376)
!11387 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11376, file: !678, line: 369, type: !53)
!11388 = !DILocation(line: 369, column: 25, scope: !11376)
!11389 = !DILocalVariable(name: "counter", scope: !11376, file: !678, line: 371, type: !55)
!11390 = !DILocation(line: 371, column: 10, scope: !11376)
!11391 = !DILocalVariable(name: "bucket", scope: !11376, file: !678, line: 372, type: !687)
!11392 = !DILocation(line: 372, column: 28, scope: !11376)
!11393 = !DILocalVariable(name: "cursor", scope: !11376, file: !678, line: 373, type: !687)
!11394 = !DILocation(line: 373, column: 28, scope: !11376)
!11395 = !DILocation(line: 375, column: 17, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11376, file: !678, line: 375, column: 3)
!11397 = !DILocation(line: 375, column: 24, scope: !11396)
!11398 = !DILocation(line: 375, column: 15, scope: !11396)
!11399 = !DILocation(line: 375, column: 8, scope: !11396)
!11400 = !DILocation(line: 375, column: 32, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11396, file: !678, line: 375, column: 3)
!11402 = !DILocation(line: 375, column: 41, scope: !11401)
!11403 = !DILocation(line: 375, column: 48, scope: !11401)
!11404 = !DILocation(line: 375, column: 39, scope: !11401)
!11405 = !DILocation(line: 375, column: 3, scope: !11396)
!11406 = !DILocation(line: 377, column: 11, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !678, line: 377, column: 11)
!11408 = distinct !DILexicalBlock(scope: !11401, file: !678, line: 376, column: 5)
!11409 = !DILocation(line: 377, column: 19, scope: !11407)
!11410 = !DILocation(line: 377, column: 11, scope: !11408)
!11411 = !DILocation(line: 379, column: 25, scope: !11412)
!11412 = distinct !DILexicalBlock(scope: !11413, file: !678, line: 379, column: 11)
!11413 = distinct !DILexicalBlock(scope: !11407, file: !678, line: 378, column: 9)
!11414 = !DILocation(line: 379, column: 23, scope: !11412)
!11415 = !DILocation(line: 379, column: 16, scope: !11412)
!11416 = !DILocation(line: 379, column: 33, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11412, file: !678, line: 379, column: 11)
!11418 = !DILocation(line: 379, column: 11, scope: !11412)
!11419 = !DILocation(line: 381, column: 21, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11421, file: !678, line: 381, column: 19)
!11421 = distinct !DILexicalBlock(scope: !11417, file: !678, line: 380, column: 13)
!11422 = !DILocation(line: 381, column: 32, scope: !11420)
!11423 = !DILocation(line: 381, column: 40, scope: !11420)
!11424 = !DILocation(line: 381, column: 46, scope: !11420)
!11425 = !DILocation(line: 381, column: 19, scope: !11421)
!11426 = !DILocation(line: 382, column: 24, scope: !11420)
!11427 = !DILocation(line: 382, column: 17, scope: !11420)
!11428 = !DILocation(line: 383, column: 22, scope: !11421)
!11429 = !DILocation(line: 384, column: 13, scope: !11421)
!11430 = !DILocation(line: 379, column: 50, scope: !11417)
!11431 = !DILocation(line: 379, column: 58, scope: !11417)
!11432 = !DILocation(line: 379, column: 48, scope: !11417)
!11433 = !DILocation(line: 379, column: 11, scope: !11417)
!11434 = distinct !{!11434, !11418, !11435}
!11435 = !DILocation(line: 384, column: 13, scope: !11412)
!11436 = !DILocation(line: 385, column: 9, scope: !11413)
!11437 = !DILocation(line: 386, column: 5, scope: !11408)
!11438 = !DILocation(line: 375, column: 68, scope: !11401)
!11439 = !DILocation(line: 375, column: 3, scope: !11401)
!11440 = distinct !{!11440, !11405, !11441}
!11441 = !DILocation(line: 386, column: 5, scope: !11396)
!11442 = !DILocation(line: 388, column: 10, scope: !11376)
!11443 = !DILocation(line: 388, column: 3, scope: !11376)
!11444 = !DILocation(line: 389, column: 1, scope: !11376)
!11445 = distinct !DISubprogram(name: "hash_string", scope: !678, file: !678, line: 428, type: !11446, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11446 = !DISubroutineType(types: !11447)
!11447 = !{!55, !116, !55}
!11448 = !DILocalVariable(name: "string", arg: 1, scope: !11445, file: !678, line: 428, type: !116)
!11449 = !DILocation(line: 428, column: 26, scope: !11445)
!11450 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11445, file: !678, line: 428, type: !55)
!11451 = !DILocation(line: 428, column: 41, scope: !11445)
!11452 = !DILocalVariable(name: "value", scope: !11445, file: !678, line: 430, type: !55)
!11453 = !DILocation(line: 430, column: 10, scope: !11445)
!11454 = !DILocalVariable(name: "ch", scope: !11445, file: !678, line: 431, type: !450)
!11455 = !DILocation(line: 431, column: 17, scope: !11445)
!11456 = !DILocation(line: 433, column: 3, scope: !11445)
!11457 = !DILocation(line: 433, column: 17, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !678, line: 433, column: 3)
!11459 = distinct !DILexicalBlock(scope: !11445, file: !678, line: 433, column: 3)
!11460 = !DILocation(line: 433, column: 16, scope: !11458)
!11461 = !DILocation(line: 433, column: 14, scope: !11458)
!11462 = !DILocation(line: 433, column: 3, scope: !11459)
!11463 = !DILocation(line: 434, column: 14, scope: !11458)
!11464 = !DILocation(line: 434, column: 20, scope: !11458)
!11465 = !DILocation(line: 434, column: 27, scope: !11458)
!11466 = !DILocation(line: 434, column: 25, scope: !11458)
!11467 = !DILocation(line: 434, column: 33, scope: !11458)
!11468 = !DILocation(line: 434, column: 31, scope: !11458)
!11469 = !DILocation(line: 434, column: 11, scope: !11458)
!11470 = !DILocation(line: 434, column: 5, scope: !11458)
!11471 = !DILocation(line: 433, column: 32, scope: !11458)
!11472 = !DILocation(line: 433, column: 3, scope: !11458)
!11473 = distinct !{!11473, !11462, !11474}
!11474 = !DILocation(line: 434, column: 33, scope: !11459)
!11475 = !DILocation(line: 435, column: 10, scope: !11445)
!11476 = !DILocation(line: 435, column: 3, scope: !11445)
!11477 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !678, file: !678, line: 479, type: !11478, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11478 = !DISubroutineType(types: !11479)
!11479 = !{null, !11480}
!11480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!11481 = !DILocalVariable(name: "tuning", arg: 1, scope: !11477, file: !678, line: 479, type: !11480)
!11482 = !DILocation(line: 479, column: 33, scope: !11477)
!11483 = !DILocation(line: 481, column: 4, scope: !11477)
!11484 = !DILocation(line: 481, column: 13, scope: !11477)
!11485 = !DILocation(line: 482, column: 1, scope: !11477)
!11486 = distinct !DISubprogram(name: "hash_initialize", scope: !678, file: !678, line: 594, type: !11487, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11487 = !DISubroutineType(types: !11488)
!11488 = !{!723, !55, !693, !705, !712, !717}
!11489 = !DILocalVariable(name: "candidate", arg: 1, scope: !11486, file: !678, line: 594, type: !55)
!11490 = !DILocation(line: 594, column: 25, scope: !11486)
!11491 = !DILocalVariable(name: "tuning", arg: 2, scope: !11486, file: !678, line: 594, type: !693)
!11492 = !DILocation(line: 594, column: 55, scope: !11486)
!11493 = !DILocalVariable(name: "hasher", arg: 3, scope: !11486, file: !678, line: 595, type: !705)
!11494 = !DILocation(line: 595, column: 30, scope: !11486)
!11495 = !DILocalVariable(name: "comparator", arg: 4, scope: !11486, file: !678, line: 595, type: !712)
!11496 = !DILocation(line: 595, column: 54, scope: !11486)
!11497 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11486, file: !678, line: 596, type: !717)
!11498 = !DILocation(line: 596, column: 34, scope: !11486)
!11499 = !DILocalVariable(name: "table", scope: !11486, file: !678, line: 598, type: !723)
!11500 = !DILocation(line: 598, column: 15, scope: !11486)
!11501 = !DILocation(line: 600, column: 7, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11486, file: !678, line: 600, column: 7)
!11503 = !DILocation(line: 600, column: 14, scope: !11502)
!11504 = !DILocation(line: 600, column: 7, scope: !11486)
!11505 = !DILocation(line: 601, column: 12, scope: !11502)
!11506 = !DILocation(line: 601, column: 5, scope: !11502)
!11507 = !DILocation(line: 602, column: 7, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11486, file: !678, line: 602, column: 7)
!11509 = !DILocation(line: 602, column: 18, scope: !11508)
!11510 = !DILocation(line: 602, column: 7, scope: !11486)
!11511 = !DILocation(line: 603, column: 16, scope: !11508)
!11512 = !DILocation(line: 603, column: 5, scope: !11508)
!11513 = !DILocation(line: 605, column: 11, scope: !11486)
!11514 = !DILocation(line: 605, column: 9, scope: !11486)
!11515 = !DILocation(line: 606, column: 7, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11486, file: !678, line: 606, column: 7)
!11517 = !DILocation(line: 606, column: 13, scope: !11516)
!11518 = !DILocation(line: 606, column: 7, scope: !11486)
!11519 = !DILocation(line: 607, column: 5, scope: !11516)
!11520 = !DILocation(line: 609, column: 8, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11486, file: !678, line: 609, column: 7)
!11522 = !DILocation(line: 609, column: 7, scope: !11486)
!11523 = !DILocation(line: 610, column: 12, scope: !11521)
!11524 = !DILocation(line: 610, column: 5, scope: !11521)
!11525 = !DILocation(line: 611, column: 19, scope: !11486)
!11526 = !DILocation(line: 611, column: 3, scope: !11486)
!11527 = !DILocation(line: 611, column: 10, scope: !11486)
!11528 = !DILocation(line: 611, column: 17, scope: !11486)
!11529 = !DILocation(line: 612, column: 22, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11486, file: !678, line: 612, column: 7)
!11531 = !DILocation(line: 612, column: 8, scope: !11530)
!11532 = !DILocation(line: 612, column: 7, scope: !11486)
!11533 = !DILocation(line: 619, column: 7, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11530, file: !678, line: 613, column: 5)
!11535 = !DILocation(line: 622, column: 43, scope: !11486)
!11536 = !DILocation(line: 622, column: 54, scope: !11486)
!11537 = !DILocation(line: 622, column: 22, scope: !11486)
!11538 = !DILocation(line: 622, column: 3, scope: !11486)
!11539 = !DILocation(line: 622, column: 10, scope: !11486)
!11540 = !DILocation(line: 622, column: 20, scope: !11486)
!11541 = !DILocation(line: 623, column: 8, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11486, file: !678, line: 623, column: 7)
!11543 = !DILocation(line: 623, column: 15, scope: !11542)
!11544 = !DILocation(line: 623, column: 7, scope: !11486)
!11545 = !DILocation(line: 624, column: 5, scope: !11542)
!11546 = !DILocation(line: 626, column: 27, scope: !11486)
!11547 = !DILocation(line: 626, column: 34, scope: !11486)
!11548 = !DILocation(line: 626, column: 19, scope: !11486)
!11549 = !DILocation(line: 626, column: 3, scope: !11486)
!11550 = !DILocation(line: 626, column: 10, scope: !11486)
!11551 = !DILocation(line: 626, column: 17, scope: !11486)
!11552 = !DILocation(line: 627, column: 7, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11486, file: !678, line: 627, column: 7)
!11554 = !DILocation(line: 627, column: 14, scope: !11553)
!11555 = !DILocation(line: 627, column: 21, scope: !11553)
!11556 = !DILocation(line: 627, column: 7, scope: !11486)
!11557 = !DILocation(line: 628, column: 5, scope: !11553)
!11558 = !DILocation(line: 629, column: 25, scope: !11486)
!11559 = !DILocation(line: 629, column: 32, scope: !11486)
!11560 = !DILocation(line: 629, column: 41, scope: !11486)
!11561 = !DILocation(line: 629, column: 48, scope: !11486)
!11562 = !DILocation(line: 629, column: 39, scope: !11486)
!11563 = !DILocation(line: 629, column: 3, scope: !11486)
!11564 = !DILocation(line: 629, column: 10, scope: !11486)
!11565 = !DILocation(line: 629, column: 23, scope: !11486)
!11566 = !DILocation(line: 630, column: 3, scope: !11486)
!11567 = !DILocation(line: 630, column: 10, scope: !11486)
!11568 = !DILocation(line: 630, column: 25, scope: !11486)
!11569 = !DILocation(line: 631, column: 3, scope: !11486)
!11570 = !DILocation(line: 631, column: 10, scope: !11486)
!11571 = !DILocation(line: 631, column: 20, scope: !11486)
!11572 = !DILocation(line: 633, column: 19, scope: !11486)
!11573 = !DILocation(line: 633, column: 3, scope: !11486)
!11574 = !DILocation(line: 633, column: 10, scope: !11486)
!11575 = !DILocation(line: 633, column: 17, scope: !11486)
!11576 = !DILocation(line: 634, column: 23, scope: !11486)
!11577 = !DILocation(line: 634, column: 3, scope: !11486)
!11578 = !DILocation(line: 634, column: 10, scope: !11486)
!11579 = !DILocation(line: 634, column: 21, scope: !11486)
!11580 = !DILocation(line: 635, column: 23, scope: !11486)
!11581 = !DILocation(line: 635, column: 3, scope: !11486)
!11582 = !DILocation(line: 635, column: 10, scope: !11486)
!11583 = !DILocation(line: 635, column: 21, scope: !11486)
!11584 = !DILocation(line: 637, column: 3, scope: !11486)
!11585 = !DILocation(line: 637, column: 10, scope: !11486)
!11586 = !DILocation(line: 637, column: 26, scope: !11486)
!11587 = !DILocation(line: 641, column: 10, scope: !11486)
!11588 = !DILocation(line: 641, column: 3, scope: !11486)
!11589 = !DILabel(scope: !11486, name: "fail", file: !678, line: 643)
!11590 = !DILocation(line: 643, column: 2, scope: !11486)
!11591 = !DILocation(line: 644, column: 9, scope: !11486)
!11592 = !DILocation(line: 644, column: 3, scope: !11486)
!11593 = !DILocation(line: 645, column: 3, scope: !11486)
!11594 = !DILocation(line: 646, column: 1, scope: !11486)
!11595 = distinct !DISubprogram(name: "raw_hasher", scope: !678, file: !678, line: 486, type: !707, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11596 = !DILocalVariable(name: "data", arg: 1, scope: !11595, file: !678, line: 486, type: !709)
!11597 = !DILocation(line: 486, column: 25, scope: !11595)
!11598 = !DILocalVariable(name: "n", arg: 2, scope: !11595, file: !678, line: 486, type: !55)
!11599 = !DILocation(line: 486, column: 38, scope: !11595)
!11600 = !DILocalVariable(name: "val", scope: !11595, file: !678, line: 493, type: !55)
!11601 = !DILocation(line: 493, column: 10, scope: !11595)
!11602 = !DILocation(line: 493, column: 34, scope: !11595)
!11603 = !DILocation(line: 493, column: 25, scope: !11595)
!11604 = !DILocation(line: 493, column: 16, scope: !11595)
!11605 = !DILocation(line: 494, column: 10, scope: !11595)
!11606 = !DILocation(line: 494, column: 16, scope: !11595)
!11607 = !DILocation(line: 494, column: 14, scope: !11595)
!11608 = !DILocation(line: 494, column: 3, scope: !11595)
!11609 = distinct !DISubprogram(name: "raw_comparator", scope: !678, file: !678, line: 499, type: !714, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11610 = !DILocalVariable(name: "a", arg: 1, scope: !11609, file: !678, line: 499, type: !709)
!11611 = !DILocation(line: 499, column: 29, scope: !11609)
!11612 = !DILocalVariable(name: "b", arg: 2, scope: !11609, file: !678, line: 499, type: !709)
!11613 = !DILocation(line: 499, column: 44, scope: !11609)
!11614 = !DILocation(line: 501, column: 10, scope: !11609)
!11615 = !DILocation(line: 501, column: 15, scope: !11609)
!11616 = !DILocation(line: 501, column: 12, scope: !11609)
!11617 = !DILocation(line: 501, column: 3, scope: !11609)
!11618 = distinct !DISubprogram(name: "check_tuning", scope: !678, file: !678, line: 512, type: !11619, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11619 = !DISubroutineType(types: !11620)
!11620 = !{!142, !723}
!11621 = !DILocalVariable(name: "table", arg: 1, scope: !11618, file: !678, line: 512, type: !723)
!11622 = !DILocation(line: 512, column: 27, scope: !11618)
!11623 = !DILocalVariable(name: "tuning", scope: !11618, file: !678, line: 514, type: !693)
!11624 = !DILocation(line: 514, column: 22, scope: !11618)
!11625 = !DILocation(line: 514, column: 31, scope: !11618)
!11626 = !DILocation(line: 514, column: 38, scope: !11618)
!11627 = !DILocalVariable(name: "epsilon", scope: !11618, file: !678, line: 515, type: !699)
!11628 = !DILocation(line: 515, column: 9, scope: !11618)
!11629 = !DILocation(line: 516, column: 7, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11618, file: !678, line: 516, column: 7)
!11631 = !DILocation(line: 516, column: 14, scope: !11630)
!11632 = !DILocation(line: 516, column: 7, scope: !11618)
!11633 = !DILocation(line: 517, column: 5, scope: !11630)
!11634 = !DILocation(line: 524, column: 11, scope: !11618)
!11635 = !DILocation(line: 526, column: 7, scope: !11636)
!11636 = distinct !DILexicalBlock(scope: !11618, file: !678, line: 526, column: 7)
!11637 = !DILocation(line: 526, column: 17, scope: !11636)
!11638 = !DILocation(line: 526, column: 25, scope: !11636)
!11639 = !DILocation(line: 526, column: 15, scope: !11636)
!11640 = !DILocation(line: 527, column: 7, scope: !11636)
!11641 = !DILocation(line: 527, column: 10, scope: !11636)
!11642 = !DILocation(line: 527, column: 18, scope: !11636)
!11643 = !DILocation(line: 527, column: 41, scope: !11636)
!11644 = !DILocation(line: 527, column: 39, scope: !11636)
!11645 = !DILocation(line: 527, column: 35, scope: !11636)
!11646 = !DILocation(line: 528, column: 7, scope: !11636)
!11647 = !DILocation(line: 528, column: 14, scope: !11636)
!11648 = !DILocation(line: 528, column: 12, scope: !11636)
!11649 = !DILocation(line: 528, column: 24, scope: !11636)
!11650 = !DILocation(line: 528, column: 32, scope: !11636)
!11651 = !DILocation(line: 528, column: 22, scope: !11636)
!11652 = !DILocation(line: 529, column: 7, scope: !11636)
!11653 = !DILocation(line: 529, column: 15, scope: !11636)
!11654 = !DILocation(line: 529, column: 23, scope: !11636)
!11655 = !DILocation(line: 529, column: 12, scope: !11636)
!11656 = !DILocation(line: 530, column: 7, scope: !11636)
!11657 = !DILocation(line: 530, column: 10, scope: !11636)
!11658 = !DILocation(line: 530, column: 18, scope: !11636)
!11659 = !DILocation(line: 530, column: 37, scope: !11636)
!11660 = !DILocation(line: 530, column: 35, scope: !11636)
!11661 = !DILocation(line: 530, column: 47, scope: !11636)
!11662 = !DILocation(line: 530, column: 55, scope: !11636)
!11663 = !DILocation(line: 530, column: 45, scope: !11636)
!11664 = !DILocation(line: 531, column: 7, scope: !11636)
!11665 = !DILocation(line: 531, column: 10, scope: !11636)
!11666 = !DILocation(line: 531, column: 18, scope: !11636)
!11667 = !DILocation(line: 531, column: 32, scope: !11636)
!11668 = !DILocation(line: 532, column: 7, scope: !11636)
!11669 = !DILocation(line: 532, column: 10, scope: !11636)
!11670 = !DILocation(line: 532, column: 18, scope: !11636)
!11671 = !DILocation(line: 532, column: 37, scope: !11636)
!11672 = !DILocation(line: 532, column: 35, scope: !11636)
!11673 = !DILocation(line: 532, column: 47, scope: !11636)
!11674 = !DILocation(line: 532, column: 55, scope: !11636)
!11675 = !DILocation(line: 532, column: 45, scope: !11636)
!11676 = !DILocation(line: 526, column: 7, scope: !11618)
!11677 = !DILocation(line: 533, column: 5, scope: !11636)
!11678 = !DILocation(line: 535, column: 3, scope: !11618)
!11679 = !DILocation(line: 535, column: 10, scope: !11618)
!11680 = !DILocation(line: 535, column: 17, scope: !11618)
!11681 = !DILocation(line: 536, column: 3, scope: !11618)
!11682 = !DILocation(line: 537, column: 1, scope: !11618)
!11683 = distinct !DISubprogram(name: "compute_bucket_size", scope: !678, file: !678, line: 544, type: !11684, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11684 = !DISubroutineType(types: !11685)
!11685 = !{!55, !55, !693}
!11686 = !DILocalVariable(name: "candidate", arg: 1, scope: !11683, file: !678, line: 544, type: !55)
!11687 = !DILocation(line: 544, column: 29, scope: !11683)
!11688 = !DILocalVariable(name: "tuning", arg: 2, scope: !11683, file: !678, line: 544, type: !693)
!11689 = !DILocation(line: 544, column: 59, scope: !11683)
!11690 = !DILocation(line: 546, column: 8, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11683, file: !678, line: 546, column: 7)
!11692 = !DILocation(line: 546, column: 16, scope: !11691)
!11693 = !DILocation(line: 546, column: 7, scope: !11683)
!11694 = !DILocalVariable(name: "new_candidate", scope: !11695, file: !678, line: 548, type: !699)
!11695 = distinct !DILexicalBlock(scope: !11691, file: !678, line: 547, column: 5)
!11696 = !DILocation(line: 548, column: 13, scope: !11695)
!11697 = !DILocation(line: 548, column: 29, scope: !11695)
!11698 = !DILocation(line: 548, column: 41, scope: !11695)
!11699 = !DILocation(line: 548, column: 49, scope: !11695)
!11700 = !DILocation(line: 548, column: 39, scope: !11695)
!11701 = !DILocation(line: 549, column: 23, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11695, file: !678, line: 549, column: 11)
!11703 = !DILocation(line: 549, column: 20, scope: !11702)
!11704 = !DILocation(line: 549, column: 11, scope: !11695)
!11705 = !DILocation(line: 550, column: 9, scope: !11702)
!11706 = !DILocation(line: 551, column: 19, scope: !11695)
!11707 = !DILocation(line: 551, column: 17, scope: !11695)
!11708 = !DILocation(line: 552, column: 5, scope: !11695)
!11709 = !DILocation(line: 553, column: 27, scope: !11683)
!11710 = !DILocation(line: 553, column: 15, scope: !11683)
!11711 = !DILocation(line: 553, column: 13, scope: !11683)
!11712 = !DILocation(line: 554, column: 7, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11683, file: !678, line: 554, column: 7)
!11714 = !DILocation(line: 554, column: 7, scope: !11683)
!11715 = !DILocation(line: 555, column: 5, scope: !11713)
!11716 = !DILocation(line: 556, column: 10, scope: !11683)
!11717 = !DILocation(line: 556, column: 3, scope: !11683)
!11718 = !DILocation(line: 557, column: 1, scope: !11683)
!11719 = distinct !DISubprogram(name: "next_prime", scope: !678, file: !678, line: 463, type: !11720, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11720 = !DISubroutineType(types: !11721)
!11721 = !{!55, !55}
!11722 = !DILocalVariable(name: "candidate", arg: 1, scope: !11719, file: !678, line: 463, type: !55)
!11723 = !DILocation(line: 463, column: 20, scope: !11719)
!11724 = !DILocation(line: 466, column: 7, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11719, file: !678, line: 466, column: 7)
!11726 = !DILocation(line: 466, column: 17, scope: !11725)
!11727 = !DILocation(line: 466, column: 7, scope: !11719)
!11728 = !DILocation(line: 467, column: 15, scope: !11725)
!11729 = !DILocation(line: 467, column: 5, scope: !11725)
!11730 = !DILocation(line: 470, column: 13, scope: !11719)
!11731 = !DILocation(line: 472, column: 3, scope: !11719)
!11732 = !DILocation(line: 472, column: 22, scope: !11719)
!11733 = !DILocation(line: 472, column: 19, scope: !11719)
!11734 = !DILocation(line: 472, column: 32, scope: !11719)
!11735 = !DILocation(line: 472, column: 46, scope: !11719)
!11736 = !DILocation(line: 472, column: 36, scope: !11719)
!11737 = !DILocation(line: 472, column: 35, scope: !11719)
!11738 = !DILocation(line: 0, scope: !11719)
!11739 = !DILocation(line: 473, column: 15, scope: !11719)
!11740 = distinct !{!11740, !11731, !11741}
!11741 = !DILocation(line: 473, column: 18, scope: !11719)
!11742 = !DILocation(line: 475, column: 10, scope: !11719)
!11743 = !DILocation(line: 475, column: 3, scope: !11719)
!11744 = distinct !DISubprogram(name: "is_prime", scope: !678, file: !678, line: 444, type: !11745, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11745 = !DISubroutineType(types: !11746)
!11746 = !{!142, !55}
!11747 = !DILocalVariable(name: "candidate", arg: 1, scope: !11744, file: !678, line: 444, type: !55)
!11748 = !DILocation(line: 444, column: 18, scope: !11744)
!11749 = !DILocalVariable(name: "divisor", scope: !11744, file: !678, line: 446, type: !55)
!11750 = !DILocation(line: 446, column: 10, scope: !11744)
!11751 = !DILocalVariable(name: "square", scope: !11744, file: !678, line: 447, type: !55)
!11752 = !DILocation(line: 447, column: 10, scope: !11744)
!11753 = !DILocation(line: 447, column: 19, scope: !11744)
!11754 = !DILocation(line: 447, column: 29, scope: !11744)
!11755 = !DILocation(line: 447, column: 27, scope: !11744)
!11756 = !DILocation(line: 449, column: 3, scope: !11744)
!11757 = !DILocation(line: 449, column: 10, scope: !11744)
!11758 = !DILocation(line: 449, column: 19, scope: !11744)
!11759 = !DILocation(line: 449, column: 17, scope: !11744)
!11760 = !DILocation(line: 449, column: 29, scope: !11744)
!11761 = !DILocation(line: 449, column: 33, scope: !11744)
!11762 = !DILocation(line: 449, column: 45, scope: !11744)
!11763 = !DILocation(line: 449, column: 43, scope: !11744)
!11764 = !DILocation(line: 0, scope: !11744)
!11765 = !DILocation(line: 451, column: 14, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11744, file: !678, line: 450, column: 5)
!11767 = !DILocation(line: 452, column: 21, scope: !11766)
!11768 = !DILocation(line: 452, column: 19, scope: !11766)
!11769 = !DILocation(line: 452, column: 14, scope: !11766)
!11770 = !DILocation(line: 453, column: 14, scope: !11766)
!11771 = distinct !{!11771, !11756, !11772}
!11772 = !DILocation(line: 454, column: 5, scope: !11744)
!11773 = !DILocation(line: 456, column: 11, scope: !11744)
!11774 = !DILocation(line: 456, column: 23, scope: !11744)
!11775 = !DILocation(line: 456, column: 21, scope: !11744)
!11776 = !DILocation(line: 456, column: 10, scope: !11744)
!11777 = !DILocation(line: 456, column: 3, scope: !11744)
!11778 = distinct !DISubprogram(name: "hash_clear", scope: !678, file: !678, line: 653, type: !11779, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11779 = !DISubroutineType(types: !11780)
!11780 = !{null, !723}
!11781 = !DILocalVariable(name: "table", arg: 1, scope: !11778, file: !678, line: 653, type: !723)
!11782 = !DILocation(line: 653, column: 25, scope: !11778)
!11783 = !DILocalVariable(name: "bucket", scope: !11778, file: !678, line: 655, type: !681)
!11784 = !DILocation(line: 655, column: 22, scope: !11778)
!11785 = !DILocation(line: 657, column: 17, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11778, file: !678, line: 657, column: 3)
!11787 = !DILocation(line: 657, column: 24, scope: !11786)
!11788 = !DILocation(line: 657, column: 15, scope: !11786)
!11789 = !DILocation(line: 657, column: 8, scope: !11786)
!11790 = !DILocation(line: 657, column: 32, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11786, file: !678, line: 657, column: 3)
!11792 = !DILocation(line: 657, column: 41, scope: !11791)
!11793 = !DILocation(line: 657, column: 48, scope: !11791)
!11794 = !DILocation(line: 657, column: 39, scope: !11791)
!11795 = !DILocation(line: 657, column: 3, scope: !11786)
!11796 = !DILocation(line: 659, column: 11, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11798, file: !678, line: 659, column: 11)
!11798 = distinct !DILexicalBlock(scope: !11791, file: !678, line: 658, column: 5)
!11799 = !DILocation(line: 659, column: 19, scope: !11797)
!11800 = !DILocation(line: 659, column: 11, scope: !11798)
!11801 = !DILocalVariable(name: "cursor", scope: !11802, file: !678, line: 661, type: !681)
!11802 = distinct !DILexicalBlock(scope: !11797, file: !678, line: 660, column: 9)
!11803 = !DILocation(line: 661, column: 30, scope: !11802)
!11804 = !DILocalVariable(name: "next", scope: !11802, file: !678, line: 662, type: !681)
!11805 = !DILocation(line: 662, column: 30, scope: !11802)
!11806 = !DILocation(line: 665, column: 25, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11802, file: !678, line: 665, column: 11)
!11808 = !DILocation(line: 665, column: 33, scope: !11807)
!11809 = !DILocation(line: 665, column: 23, scope: !11807)
!11810 = !DILocation(line: 665, column: 16, scope: !11807)
!11811 = !DILocation(line: 665, column: 39, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11807, file: !678, line: 665, column: 11)
!11813 = !DILocation(line: 665, column: 11, scope: !11807)
!11814 = !DILocation(line: 667, column: 19, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11816, file: !678, line: 667, column: 19)
!11816 = distinct !DILexicalBlock(scope: !11812, file: !678, line: 666, column: 13)
!11817 = !DILocation(line: 667, column: 26, scope: !11815)
!11818 = !DILocation(line: 667, column: 19, scope: !11816)
!11819 = !DILocation(line: 668, column: 17, scope: !11815)
!11820 = !DILocation(line: 668, column: 24, scope: !11815)
!11821 = !DILocation(line: 668, column: 36, scope: !11815)
!11822 = !DILocation(line: 668, column: 44, scope: !11815)
!11823 = !DILocation(line: 669, column: 15, scope: !11816)
!11824 = !DILocation(line: 669, column: 23, scope: !11816)
!11825 = !DILocation(line: 669, column: 28, scope: !11816)
!11826 = !DILocation(line: 671, column: 22, scope: !11816)
!11827 = !DILocation(line: 671, column: 30, scope: !11816)
!11828 = !DILocation(line: 671, column: 20, scope: !11816)
!11829 = !DILocation(line: 674, column: 30, scope: !11816)
!11830 = !DILocation(line: 674, column: 37, scope: !11816)
!11831 = !DILocation(line: 674, column: 15, scope: !11816)
!11832 = !DILocation(line: 674, column: 23, scope: !11816)
!11833 = !DILocation(line: 674, column: 28, scope: !11816)
!11834 = !DILocation(line: 675, column: 40, scope: !11816)
!11835 = !DILocation(line: 675, column: 15, scope: !11816)
!11836 = !DILocation(line: 675, column: 22, scope: !11816)
!11837 = !DILocation(line: 675, column: 38, scope: !11816)
!11838 = !DILocation(line: 676, column: 13, scope: !11816)
!11839 = !DILocation(line: 665, column: 56, scope: !11812)
!11840 = !DILocation(line: 665, column: 54, scope: !11812)
!11841 = !DILocation(line: 665, column: 11, scope: !11812)
!11842 = distinct !{!11842, !11813, !11843}
!11843 = !DILocation(line: 676, column: 13, scope: !11807)
!11844 = !DILocation(line: 679, column: 15, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11802, file: !678, line: 679, column: 15)
!11846 = !DILocation(line: 679, column: 22, scope: !11845)
!11847 = !DILocation(line: 679, column: 15, scope: !11802)
!11848 = !DILocation(line: 680, column: 13, scope: !11845)
!11849 = !DILocation(line: 680, column: 20, scope: !11845)
!11850 = !DILocation(line: 680, column: 32, scope: !11845)
!11851 = !DILocation(line: 680, column: 40, scope: !11845)
!11852 = !DILocation(line: 681, column: 11, scope: !11802)
!11853 = !DILocation(line: 681, column: 19, scope: !11802)
!11854 = !DILocation(line: 681, column: 24, scope: !11802)
!11855 = !DILocation(line: 682, column: 11, scope: !11802)
!11856 = !DILocation(line: 682, column: 19, scope: !11802)
!11857 = !DILocation(line: 682, column: 24, scope: !11802)
!11858 = !DILocation(line: 683, column: 9, scope: !11802)
!11859 = !DILocation(line: 684, column: 5, scope: !11798)
!11860 = !DILocation(line: 657, column: 68, scope: !11791)
!11861 = !DILocation(line: 657, column: 3, scope: !11791)
!11862 = distinct !{!11862, !11795, !11863}
!11863 = !DILocation(line: 684, column: 5, scope: !11786)
!11864 = !DILocation(line: 686, column: 3, scope: !11778)
!11865 = !DILocation(line: 686, column: 10, scope: !11778)
!11866 = !DILocation(line: 686, column: 25, scope: !11778)
!11867 = !DILocation(line: 687, column: 3, scope: !11778)
!11868 = !DILocation(line: 687, column: 10, scope: !11778)
!11869 = !DILocation(line: 687, column: 20, scope: !11778)
!11870 = !DILocation(line: 688, column: 1, scope: !11778)
!11871 = distinct !DISubprogram(name: "hash_free", scope: !678, file: !678, line: 696, type: !11779, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11872 = !DILocalVariable(name: "table", arg: 1, scope: !11871, file: !678, line: 696, type: !723)
!11873 = !DILocation(line: 696, column: 24, scope: !11871)
!11874 = !DILocalVariable(name: "bucket", scope: !11871, file: !678, line: 698, type: !681)
!11875 = !DILocation(line: 698, column: 22, scope: !11871)
!11876 = !DILocalVariable(name: "cursor", scope: !11871, file: !678, line: 699, type: !681)
!11877 = !DILocation(line: 699, column: 22, scope: !11871)
!11878 = !DILocalVariable(name: "next", scope: !11871, file: !678, line: 700, type: !681)
!11879 = !DILocation(line: 700, column: 22, scope: !11871)
!11880 = !DILocation(line: 703, column: 7, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11871, file: !678, line: 703, column: 7)
!11882 = !DILocation(line: 703, column: 14, scope: !11881)
!11883 = !DILocation(line: 703, column: 25, scope: !11881)
!11884 = !DILocation(line: 703, column: 28, scope: !11881)
!11885 = !DILocation(line: 703, column: 35, scope: !11881)
!11886 = !DILocation(line: 703, column: 7, scope: !11871)
!11887 = !DILocation(line: 705, column: 21, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !678, line: 705, column: 7)
!11889 = distinct !DILexicalBlock(scope: !11881, file: !678, line: 704, column: 5)
!11890 = !DILocation(line: 705, column: 28, scope: !11888)
!11891 = !DILocation(line: 705, column: 19, scope: !11888)
!11892 = !DILocation(line: 705, column: 12, scope: !11888)
!11893 = !DILocation(line: 705, column: 36, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11888, file: !678, line: 705, column: 7)
!11895 = !DILocation(line: 705, column: 45, scope: !11894)
!11896 = !DILocation(line: 705, column: 52, scope: !11894)
!11897 = !DILocation(line: 705, column: 43, scope: !11894)
!11898 = !DILocation(line: 705, column: 7, scope: !11888)
!11899 = !DILocation(line: 707, column: 15, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !678, line: 707, column: 15)
!11901 = distinct !DILexicalBlock(scope: !11894, file: !678, line: 706, column: 9)
!11902 = !DILocation(line: 707, column: 23, scope: !11900)
!11903 = !DILocation(line: 707, column: 15, scope: !11901)
!11904 = !DILocation(line: 709, column: 29, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !678, line: 709, column: 15)
!11906 = distinct !DILexicalBlock(scope: !11900, file: !678, line: 708, column: 13)
!11907 = !DILocation(line: 709, column: 27, scope: !11905)
!11908 = !DILocation(line: 709, column: 20, scope: !11905)
!11909 = !DILocation(line: 709, column: 37, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11905, file: !678, line: 709, column: 15)
!11911 = !DILocation(line: 709, column: 15, scope: !11905)
!11912 = !DILocation(line: 710, column: 17, scope: !11910)
!11913 = !DILocation(line: 710, column: 24, scope: !11910)
!11914 = !DILocation(line: 710, column: 36, scope: !11910)
!11915 = !DILocation(line: 710, column: 44, scope: !11910)
!11916 = !DILocation(line: 709, column: 54, scope: !11910)
!11917 = !DILocation(line: 709, column: 62, scope: !11910)
!11918 = !DILocation(line: 709, column: 52, scope: !11910)
!11919 = !DILocation(line: 709, column: 15, scope: !11910)
!11920 = distinct !{!11920, !11911, !11921}
!11921 = !DILocation(line: 710, column: 48, scope: !11905)
!11922 = !DILocation(line: 711, column: 13, scope: !11906)
!11923 = !DILocation(line: 712, column: 9, scope: !11901)
!11924 = !DILocation(line: 705, column: 72, scope: !11894)
!11925 = !DILocation(line: 705, column: 7, scope: !11894)
!11926 = distinct !{!11926, !11898, !11927}
!11927 = !DILocation(line: 712, column: 9, scope: !11888)
!11928 = !DILocation(line: 713, column: 5, scope: !11889)
!11929 = !DILocation(line: 722, column: 17, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11871, file: !678, line: 722, column: 3)
!11931 = !DILocation(line: 722, column: 24, scope: !11930)
!11932 = !DILocation(line: 722, column: 15, scope: !11930)
!11933 = !DILocation(line: 722, column: 8, scope: !11930)
!11934 = !DILocation(line: 722, column: 32, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11930, file: !678, line: 722, column: 3)
!11936 = !DILocation(line: 722, column: 41, scope: !11935)
!11937 = !DILocation(line: 722, column: 48, scope: !11935)
!11938 = !DILocation(line: 722, column: 39, scope: !11935)
!11939 = !DILocation(line: 722, column: 3, scope: !11930)
!11940 = !DILocation(line: 724, column: 21, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !678, line: 724, column: 7)
!11942 = distinct !DILexicalBlock(scope: !11935, file: !678, line: 723, column: 5)
!11943 = !DILocation(line: 724, column: 29, scope: !11941)
!11944 = !DILocation(line: 724, column: 19, scope: !11941)
!11945 = !DILocation(line: 724, column: 12, scope: !11941)
!11946 = !DILocation(line: 724, column: 35, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11941, file: !678, line: 724, column: 7)
!11948 = !DILocation(line: 724, column: 7, scope: !11941)
!11949 = !DILocation(line: 726, column: 18, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11947, file: !678, line: 725, column: 9)
!11951 = !DILocation(line: 726, column: 26, scope: !11950)
!11952 = !DILocation(line: 726, column: 16, scope: !11950)
!11953 = !DILocation(line: 727, column: 17, scope: !11950)
!11954 = !DILocation(line: 727, column: 11, scope: !11950)
!11955 = !DILocation(line: 728, column: 9, scope: !11950)
!11956 = !DILocation(line: 724, column: 52, scope: !11947)
!11957 = !DILocation(line: 724, column: 50, scope: !11947)
!11958 = !DILocation(line: 724, column: 7, scope: !11947)
!11959 = distinct !{!11959, !11948, !11960}
!11960 = !DILocation(line: 728, column: 9, scope: !11941)
!11961 = !DILocation(line: 729, column: 5, scope: !11942)
!11962 = !DILocation(line: 722, column: 68, scope: !11935)
!11963 = !DILocation(line: 722, column: 3, scope: !11935)
!11964 = distinct !{!11964, !11939, !11965}
!11965 = !DILocation(line: 729, column: 5, scope: !11930)
!11966 = !DILocation(line: 732, column: 17, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11871, file: !678, line: 732, column: 3)
!11968 = !DILocation(line: 732, column: 24, scope: !11967)
!11969 = !DILocation(line: 732, column: 15, scope: !11967)
!11970 = !DILocation(line: 732, column: 8, scope: !11967)
!11971 = !DILocation(line: 732, column: 41, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11967, file: !678, line: 732, column: 3)
!11973 = !DILocation(line: 732, column: 3, scope: !11967)
!11974 = !DILocation(line: 734, column: 14, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11972, file: !678, line: 733, column: 5)
!11976 = !DILocation(line: 734, column: 22, scope: !11975)
!11977 = !DILocation(line: 734, column: 12, scope: !11975)
!11978 = !DILocation(line: 735, column: 13, scope: !11975)
!11979 = !DILocation(line: 735, column: 7, scope: !11975)
!11980 = !DILocation(line: 736, column: 5, scope: !11975)
!11981 = !DILocation(line: 732, column: 58, scope: !11972)
!11982 = !DILocation(line: 732, column: 56, scope: !11972)
!11983 = !DILocation(line: 732, column: 3, scope: !11972)
!11984 = distinct !{!11984, !11973, !11985}
!11985 = !DILocation(line: 736, column: 5, scope: !11967)
!11986 = !DILocation(line: 741, column: 9, scope: !11871)
!11987 = !DILocation(line: 741, column: 16, scope: !11871)
!11988 = !DILocation(line: 741, column: 3, scope: !11871)
!11989 = !DILocation(line: 742, column: 9, scope: !11871)
!11990 = !DILocation(line: 742, column: 3, scope: !11871)
!11991 = !DILocation(line: 743, column: 1, scope: !11871)
!11992 = distinct !DISubprogram(name: "hash_rehash", scope: !678, file: !678, line: 943, type: !11993, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!11993 = !DISubroutineType(types: !11994)
!11994 = !{!142, !723, !55}
!11995 = !DILocalVariable(name: "table", arg: 1, scope: !11992, file: !678, line: 943, type: !723)
!11996 = !DILocation(line: 943, column: 26, scope: !11992)
!11997 = !DILocalVariable(name: "candidate", arg: 2, scope: !11992, file: !678, line: 943, type: !55)
!11998 = !DILocation(line: 943, column: 40, scope: !11992)
!11999 = !DILocalVariable(name: "storage", scope: !11992, file: !678, line: 945, type: !676)
!12000 = !DILocation(line: 945, column: 14, scope: !11992)
!12001 = !DILocalVariable(name: "new_table", scope: !11992, file: !678, line: 946, type: !723)
!12002 = !DILocation(line: 946, column: 15, scope: !11992)
!12003 = !DILocalVariable(name: "new_size", scope: !11992, file: !678, line: 947, type: !55)
!12004 = !DILocation(line: 947, column: 10, scope: !11992)
!12005 = !DILocation(line: 947, column: 42, scope: !11992)
!12006 = !DILocation(line: 947, column: 53, scope: !11992)
!12007 = !DILocation(line: 947, column: 60, scope: !11992)
!12008 = !DILocation(line: 947, column: 21, scope: !11992)
!12009 = !DILocation(line: 949, column: 8, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11992, file: !678, line: 949, column: 7)
!12011 = !DILocation(line: 949, column: 7, scope: !11992)
!12012 = !DILocation(line: 950, column: 5, scope: !12010)
!12013 = !DILocation(line: 951, column: 7, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !11992, file: !678, line: 951, column: 7)
!12015 = !DILocation(line: 951, column: 19, scope: !12014)
!12016 = !DILocation(line: 951, column: 26, scope: !12014)
!12017 = !DILocation(line: 951, column: 16, scope: !12014)
!12018 = !DILocation(line: 951, column: 7, scope: !11992)
!12019 = !DILocation(line: 952, column: 5, scope: !12014)
!12020 = !DILocation(line: 953, column: 13, scope: !11992)
!12021 = !DILocation(line: 954, column: 31, scope: !11992)
!12022 = !DILocation(line: 954, column: 23, scope: !11992)
!12023 = !DILocation(line: 954, column: 3, scope: !11992)
!12024 = !DILocation(line: 954, column: 14, scope: !11992)
!12025 = !DILocation(line: 954, column: 21, scope: !11992)
!12026 = !DILocation(line: 955, column: 7, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !11992, file: !678, line: 955, column: 7)
!12028 = !DILocation(line: 955, column: 18, scope: !12027)
!12029 = !DILocation(line: 955, column: 25, scope: !12027)
!12030 = !DILocation(line: 955, column: 7, scope: !11992)
!12031 = !DILocation(line: 956, column: 5, scope: !12027)
!12032 = !DILocation(line: 957, column: 26, scope: !11992)
!12033 = !DILocation(line: 957, column: 3, scope: !11992)
!12034 = !DILocation(line: 957, column: 14, scope: !11992)
!12035 = !DILocation(line: 957, column: 24, scope: !11992)
!12036 = !DILocation(line: 958, column: 29, scope: !11992)
!12037 = !DILocation(line: 958, column: 40, scope: !11992)
!12038 = !DILocation(line: 958, column: 49, scope: !11992)
!12039 = !DILocation(line: 958, column: 47, scope: !11992)
!12040 = !DILocation(line: 958, column: 3, scope: !11992)
!12041 = !DILocation(line: 958, column: 14, scope: !11992)
!12042 = !DILocation(line: 958, column: 27, scope: !11992)
!12043 = !DILocation(line: 959, column: 3, scope: !11992)
!12044 = !DILocation(line: 959, column: 14, scope: !11992)
!12045 = !DILocation(line: 959, column: 29, scope: !11992)
!12046 = !DILocation(line: 960, column: 3, scope: !11992)
!12047 = !DILocation(line: 960, column: 14, scope: !11992)
!12048 = !DILocation(line: 960, column: 24, scope: !11992)
!12049 = !DILocation(line: 961, column: 23, scope: !11992)
!12050 = !DILocation(line: 961, column: 30, scope: !11992)
!12051 = !DILocation(line: 961, column: 3, scope: !11992)
!12052 = !DILocation(line: 961, column: 14, scope: !11992)
!12053 = !DILocation(line: 961, column: 21, scope: !11992)
!12054 = !DILocation(line: 962, column: 23, scope: !11992)
!12055 = !DILocation(line: 962, column: 30, scope: !11992)
!12056 = !DILocation(line: 962, column: 3, scope: !11992)
!12057 = !DILocation(line: 962, column: 14, scope: !11992)
!12058 = !DILocation(line: 962, column: 21, scope: !11992)
!12059 = !DILocation(line: 963, column: 27, scope: !11992)
!12060 = !DILocation(line: 963, column: 34, scope: !11992)
!12061 = !DILocation(line: 963, column: 3, scope: !11992)
!12062 = !DILocation(line: 963, column: 14, scope: !11992)
!12063 = !DILocation(line: 963, column: 25, scope: !11992)
!12064 = !DILocation(line: 964, column: 27, scope: !11992)
!12065 = !DILocation(line: 964, column: 34, scope: !11992)
!12066 = !DILocation(line: 964, column: 3, scope: !11992)
!12067 = !DILocation(line: 964, column: 14, scope: !11992)
!12068 = !DILocation(line: 964, column: 25, scope: !11992)
!12069 = !DILocation(line: 984, column: 32, scope: !11992)
!12070 = !DILocation(line: 984, column: 39, scope: !11992)
!12071 = !DILocation(line: 984, column: 3, scope: !11992)
!12072 = !DILocation(line: 984, column: 14, scope: !11992)
!12073 = !DILocation(line: 984, column: 30, scope: !11992)
!12074 = !DILocation(line: 986, column: 25, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !11992, file: !678, line: 986, column: 7)
!12076 = !DILocation(line: 986, column: 36, scope: !12075)
!12077 = !DILocation(line: 986, column: 7, scope: !12075)
!12078 = !DILocation(line: 986, column: 7, scope: !11992)
!12079 = !DILocation(line: 989, column: 13, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12075, file: !678, line: 987, column: 5)
!12081 = !DILocation(line: 989, column: 20, scope: !12080)
!12082 = !DILocation(line: 989, column: 7, scope: !12080)
!12083 = !DILocation(line: 990, column: 23, scope: !12080)
!12084 = !DILocation(line: 990, column: 34, scope: !12080)
!12085 = !DILocation(line: 990, column: 7, scope: !12080)
!12086 = !DILocation(line: 990, column: 14, scope: !12080)
!12087 = !DILocation(line: 990, column: 21, scope: !12080)
!12088 = !DILocation(line: 991, column: 29, scope: !12080)
!12089 = !DILocation(line: 991, column: 40, scope: !12080)
!12090 = !DILocation(line: 991, column: 7, scope: !12080)
!12091 = !DILocation(line: 991, column: 14, scope: !12080)
!12092 = !DILocation(line: 991, column: 27, scope: !12080)
!12093 = !DILocation(line: 992, column: 26, scope: !12080)
!12094 = !DILocation(line: 992, column: 37, scope: !12080)
!12095 = !DILocation(line: 992, column: 7, scope: !12080)
!12096 = !DILocation(line: 992, column: 14, scope: !12080)
!12097 = !DILocation(line: 992, column: 24, scope: !12080)
!12098 = !DILocation(line: 993, column: 31, scope: !12080)
!12099 = !DILocation(line: 993, column: 42, scope: !12080)
!12100 = !DILocation(line: 993, column: 7, scope: !12080)
!12101 = !DILocation(line: 993, column: 14, scope: !12080)
!12102 = !DILocation(line: 993, column: 29, scope: !12080)
!12103 = !DILocation(line: 994, column: 32, scope: !12080)
!12104 = !DILocation(line: 994, column: 43, scope: !12080)
!12105 = !DILocation(line: 994, column: 7, scope: !12080)
!12106 = !DILocation(line: 994, column: 14, scope: !12080)
!12107 = !DILocation(line: 994, column: 30, scope: !12080)
!12108 = !DILocation(line: 996, column: 7, scope: !12080)
!12109 = !DILocation(line: 1012, column: 28, scope: !11992)
!12110 = !DILocation(line: 1012, column: 39, scope: !11992)
!12111 = !DILocation(line: 1012, column: 3, scope: !11992)
!12112 = !DILocation(line: 1012, column: 10, scope: !11992)
!12113 = !DILocation(line: 1012, column: 26, scope: !11992)
!12114 = !DILocation(line: 1013, column: 28, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !11992, file: !678, line: 1013, column: 7)
!12116 = !DILocation(line: 1013, column: 35, scope: !12115)
!12117 = !DILocation(line: 1013, column: 10, scope: !12115)
!12118 = !DILocation(line: 1014, column: 10, scope: !12115)
!12119 = !DILocation(line: 1014, column: 31, scope: !12115)
!12120 = !DILocation(line: 1014, column: 38, scope: !12115)
!12121 = !DILocation(line: 1014, column: 13, scope: !12115)
!12122 = !DILocation(line: 1013, column: 7, scope: !11992)
!12123 = !DILocation(line: 1015, column: 5, scope: !12115)
!12124 = !DILocation(line: 1017, column: 9, scope: !11992)
!12125 = !DILocation(line: 1017, column: 20, scope: !11992)
!12126 = !DILocation(line: 1017, column: 3, scope: !11992)
!12127 = !DILocation(line: 1018, column: 3, scope: !11992)
!12128 = !DILocation(line: 1019, column: 1, scope: !11992)
!12129 = distinct !DISubprogram(name: "transfer_entries", scope: !678, file: !678, line: 860, type: !12130, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!12130 = !DISubroutineType(types: !12131)
!12131 = !{!142, !723, !723, !142}
!12132 = !DILocalVariable(name: "dst", arg: 1, scope: !12129, file: !678, line: 860, type: !723)
!12133 = !DILocation(line: 860, column: 31, scope: !12129)
!12134 = !DILocalVariable(name: "src", arg: 2, scope: !12129, file: !678, line: 860, type: !723)
!12135 = !DILocation(line: 860, column: 48, scope: !12129)
!12136 = !DILocalVariable(name: "safe", arg: 3, scope: !12129, file: !678, line: 860, type: !142)
!12137 = !DILocation(line: 860, column: 58, scope: !12129)
!12138 = !DILocalVariable(name: "bucket", scope: !12129, file: !678, line: 862, type: !681)
!12139 = !DILocation(line: 862, column: 22, scope: !12129)
!12140 = !DILocalVariable(name: "cursor", scope: !12129, file: !678, line: 863, type: !681)
!12141 = !DILocation(line: 863, column: 22, scope: !12129)
!12142 = !DILocalVariable(name: "next", scope: !12129, file: !678, line: 864, type: !681)
!12143 = !DILocation(line: 864, column: 22, scope: !12129)
!12144 = !DILocation(line: 865, column: 17, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12129, file: !678, line: 865, column: 3)
!12146 = !DILocation(line: 865, column: 22, scope: !12145)
!12147 = !DILocation(line: 865, column: 15, scope: !12145)
!12148 = !DILocation(line: 865, column: 8, scope: !12145)
!12149 = !DILocation(line: 865, column: 30, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12145, file: !678, line: 865, column: 3)
!12151 = !DILocation(line: 865, column: 39, scope: !12150)
!12152 = !DILocation(line: 865, column: 44, scope: !12150)
!12153 = !DILocation(line: 865, column: 37, scope: !12150)
!12154 = !DILocation(line: 865, column: 3, scope: !12145)
!12155 = !DILocation(line: 866, column: 9, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12150, file: !678, line: 866, column: 9)
!12157 = !DILocation(line: 866, column: 17, scope: !12156)
!12158 = !DILocation(line: 866, column: 9, scope: !12150)
!12159 = !DILocalVariable(name: "data", scope: !12160, file: !678, line: 868, type: !53)
!12160 = distinct !DILexicalBlock(scope: !12156, file: !678, line: 867, column: 7)
!12161 = !DILocation(line: 868, column: 15, scope: !12160)
!12162 = !DILocalVariable(name: "new_bucket", scope: !12160, file: !678, line: 869, type: !681)
!12163 = !DILocation(line: 869, column: 28, scope: !12160)
!12164 = !DILocation(line: 877, column: 23, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12160, file: !678, line: 877, column: 9)
!12166 = !DILocation(line: 877, column: 31, scope: !12165)
!12167 = !DILocation(line: 877, column: 21, scope: !12165)
!12168 = !DILocation(line: 877, column: 14, scope: !12165)
!12169 = !DILocation(line: 877, column: 37, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12165, file: !678, line: 877, column: 9)
!12171 = !DILocation(line: 877, column: 9, scope: !12165)
!12172 = !DILocation(line: 879, column: 20, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12170, file: !678, line: 878, column: 11)
!12174 = !DILocation(line: 879, column: 28, scope: !12173)
!12175 = !DILocation(line: 879, column: 18, scope: !12173)
!12176 = !DILocation(line: 880, column: 39, scope: !12173)
!12177 = !DILocation(line: 880, column: 44, scope: !12173)
!12178 = !DILocation(line: 880, column: 26, scope: !12173)
!12179 = !DILocation(line: 880, column: 24, scope: !12173)
!12180 = !DILocation(line: 882, column: 20, scope: !12173)
!12181 = !DILocation(line: 882, column: 28, scope: !12173)
!12182 = !DILocation(line: 882, column: 18, scope: !12173)
!12183 = !DILocation(line: 884, column: 17, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12173, file: !678, line: 884, column: 17)
!12185 = !DILocation(line: 884, column: 29, scope: !12184)
!12186 = !DILocation(line: 884, column: 17, scope: !12173)
!12187 = !DILocation(line: 888, column: 32, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12184, file: !678, line: 885, column: 15)
!12189 = !DILocation(line: 888, column: 44, scope: !12188)
!12190 = !DILocation(line: 888, column: 17, scope: !12188)
!12191 = !DILocation(line: 888, column: 25, scope: !12188)
!12192 = !DILocation(line: 888, column: 30, scope: !12188)
!12193 = !DILocation(line: 889, column: 36, scope: !12188)
!12194 = !DILocation(line: 889, column: 17, scope: !12188)
!12195 = !DILocation(line: 889, column: 29, scope: !12188)
!12196 = !DILocation(line: 889, column: 34, scope: !12188)
!12197 = !DILocation(line: 890, column: 15, scope: !12188)
!12198 = !DILocation(line: 895, column: 36, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12184, file: !678, line: 892, column: 15)
!12200 = !DILocation(line: 895, column: 17, scope: !12199)
!12201 = !DILocation(line: 895, column: 29, scope: !12199)
!12202 = !DILocation(line: 895, column: 34, scope: !12199)
!12203 = !DILocation(line: 896, column: 17, scope: !12199)
!12204 = !DILocation(line: 896, column: 22, scope: !12199)
!12205 = !DILocation(line: 896, column: 36, scope: !12199)
!12206 = !DILocation(line: 897, column: 29, scope: !12199)
!12207 = !DILocation(line: 897, column: 34, scope: !12199)
!12208 = !DILocation(line: 897, column: 17, scope: !12199)
!12209 = !DILocation(line: 899, column: 11, scope: !12173)
!12210 = !DILocation(line: 877, column: 54, scope: !12170)
!12211 = !DILocation(line: 877, column: 52, scope: !12170)
!12212 = !DILocation(line: 877, column: 9, scope: !12170)
!12213 = distinct !{!12213, !12171, !12214}
!12214 = !DILocation(line: 899, column: 11, scope: !12165)
!12215 = !DILocation(line: 903, column: 16, scope: !12160)
!12216 = !DILocation(line: 903, column: 24, scope: !12160)
!12217 = !DILocation(line: 903, column: 14, scope: !12160)
!12218 = !DILocation(line: 904, column: 9, scope: !12160)
!12219 = !DILocation(line: 904, column: 17, scope: !12160)
!12220 = !DILocation(line: 904, column: 22, scope: !12160)
!12221 = !DILocation(line: 905, column: 13, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12160, file: !678, line: 905, column: 13)
!12223 = !DILocation(line: 905, column: 13, scope: !12160)
!12224 = !DILocation(line: 906, column: 11, scope: !12222)
!12225 = !DILocation(line: 907, column: 35, scope: !12160)
!12226 = !DILocation(line: 907, column: 40, scope: !12160)
!12227 = !DILocation(line: 907, column: 22, scope: !12160)
!12228 = !DILocation(line: 907, column: 20, scope: !12160)
!12229 = !DILocation(line: 909, column: 13, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12160, file: !678, line: 909, column: 13)
!12231 = !DILocation(line: 909, column: 25, scope: !12230)
!12232 = !DILocation(line: 909, column: 13, scope: !12160)
!12233 = !DILocalVariable(name: "new_entry", scope: !12234, file: !678, line: 913, type: !681)
!12234 = distinct !DILexicalBlock(scope: !12230, file: !678, line: 910, column: 11)
!12235 = !DILocation(line: 913, column: 32, scope: !12234)
!12236 = !DILocation(line: 913, column: 60, scope: !12234)
!12237 = !DILocation(line: 913, column: 44, scope: !12234)
!12238 = !DILocation(line: 915, column: 17, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12234, file: !678, line: 915, column: 17)
!12240 = !DILocation(line: 915, column: 27, scope: !12239)
!12241 = !DILocation(line: 915, column: 17, scope: !12234)
!12242 = !DILocation(line: 916, column: 15, scope: !12239)
!12243 = !DILocation(line: 918, column: 31, scope: !12234)
!12244 = !DILocation(line: 918, column: 13, scope: !12234)
!12245 = !DILocation(line: 918, column: 24, scope: !12234)
!12246 = !DILocation(line: 918, column: 29, scope: !12234)
!12247 = !DILocation(line: 919, column: 31, scope: !12234)
!12248 = !DILocation(line: 919, column: 43, scope: !12234)
!12249 = !DILocation(line: 919, column: 13, scope: !12234)
!12250 = !DILocation(line: 919, column: 24, scope: !12234)
!12251 = !DILocation(line: 919, column: 29, scope: !12234)
!12252 = !DILocation(line: 920, column: 32, scope: !12234)
!12253 = !DILocation(line: 920, column: 13, scope: !12234)
!12254 = !DILocation(line: 920, column: 25, scope: !12234)
!12255 = !DILocation(line: 920, column: 30, scope: !12234)
!12256 = !DILocation(line: 921, column: 11, scope: !12234)
!12257 = !DILocation(line: 925, column: 32, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12230, file: !678, line: 923, column: 11)
!12259 = !DILocation(line: 925, column: 13, scope: !12258)
!12260 = !DILocation(line: 925, column: 25, scope: !12258)
!12261 = !DILocation(line: 925, column: 30, scope: !12258)
!12262 = !DILocation(line: 926, column: 13, scope: !12258)
!12263 = !DILocation(line: 926, column: 18, scope: !12258)
!12264 = !DILocation(line: 926, column: 32, scope: !12258)
!12265 = !DILocation(line: 928, column: 9, scope: !12160)
!12266 = !DILocation(line: 928, column: 17, scope: !12160)
!12267 = !DILocation(line: 928, column: 22, scope: !12160)
!12268 = !DILocation(line: 929, column: 9, scope: !12160)
!12269 = !DILocation(line: 929, column: 14, scope: !12160)
!12270 = !DILocation(line: 929, column: 28, scope: !12160)
!12271 = !DILocation(line: 930, column: 7, scope: !12160)
!12272 = !DILocation(line: 865, column: 64, scope: !12150)
!12273 = !DILocation(line: 865, column: 3, scope: !12150)
!12274 = distinct !{!12274, !12154, !12275}
!12275 = !DILocation(line: 930, column: 7, scope: !12145)
!12276 = !DILocation(line: 931, column: 3, scope: !12129)
!12277 = !DILocation(line: 932, column: 1, scope: !12129)
!12278 = distinct !DISubprogram(name: "free_entry", scope: !678, file: !678, line: 776, type: !12279, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!12279 = !DISubroutineType(types: !12280)
!12280 = !{null, !723, !681}
!12281 = !DILocalVariable(name: "table", arg: 1, scope: !12278, file: !678, line: 776, type: !723)
!12282 = !DILocation(line: 776, column: 25, scope: !12278)
!12283 = !DILocalVariable(name: "entry", arg: 2, scope: !12278, file: !678, line: 776, type: !681)
!12284 = !DILocation(line: 776, column: 51, scope: !12278)
!12285 = !DILocation(line: 778, column: 3, scope: !12278)
!12286 = !DILocation(line: 778, column: 10, scope: !12278)
!12287 = !DILocation(line: 778, column: 15, scope: !12278)
!12288 = !DILocation(line: 779, column: 17, scope: !12278)
!12289 = !DILocation(line: 779, column: 24, scope: !12278)
!12290 = !DILocation(line: 779, column: 3, scope: !12278)
!12291 = !DILocation(line: 779, column: 10, scope: !12278)
!12292 = !DILocation(line: 779, column: 15, scope: !12278)
!12293 = !DILocation(line: 780, column: 28, scope: !12278)
!12294 = !DILocation(line: 780, column: 3, scope: !12278)
!12295 = !DILocation(line: 780, column: 10, scope: !12278)
!12296 = !DILocation(line: 780, column: 26, scope: !12278)
!12297 = !DILocation(line: 781, column: 1, scope: !12278)
!12298 = distinct !DISubprogram(name: "allocate_entry", scope: !678, file: !678, line: 751, type: !12299, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!681, !723}
!12301 = !DILocalVariable(name: "table", arg: 1, scope: !12298, file: !678, line: 751, type: !723)
!12302 = !DILocation(line: 751, column: 29, scope: !12298)
!12303 = !DILocalVariable(name: "new", scope: !12298, file: !678, line: 753, type: !681)
!12304 = !DILocation(line: 753, column: 22, scope: !12298)
!12305 = !DILocation(line: 755, column: 7, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12298, file: !678, line: 755, column: 7)
!12307 = !DILocation(line: 755, column: 14, scope: !12306)
!12308 = !DILocation(line: 755, column: 7, scope: !12298)
!12309 = !DILocation(line: 757, column: 13, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12306, file: !678, line: 756, column: 5)
!12311 = !DILocation(line: 757, column: 20, scope: !12310)
!12312 = !DILocation(line: 757, column: 11, scope: !12310)
!12313 = !DILocation(line: 758, column: 32, scope: !12310)
!12314 = !DILocation(line: 758, column: 37, scope: !12310)
!12315 = !DILocation(line: 758, column: 7, scope: !12310)
!12316 = !DILocation(line: 758, column: 14, scope: !12310)
!12317 = !DILocation(line: 758, column: 30, scope: !12310)
!12318 = !DILocation(line: 759, column: 5, scope: !12310)
!12319 = !DILocation(line: 765, column: 13, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12306, file: !678, line: 761, column: 5)
!12321 = !DILocation(line: 765, column: 11, scope: !12320)
!12322 = !DILocation(line: 769, column: 10, scope: !12298)
!12323 = !DILocation(line: 769, column: 3, scope: !12298)
!12324 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !678, file: !678, line: 1038, type: !12325, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!12325 = !DISubroutineType(types: !12326)
!12326 = !{!7, !723, !709, !12327}
!12327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!12328 = !DILocalVariable(name: "table", arg: 1, scope: !12324, file: !678, line: 1038, type: !723)
!12329 = !DILocation(line: 1038, column: 36, scope: !12324)
!12330 = !DILocalVariable(name: "entry", arg: 2, scope: !12324, file: !678, line: 1038, type: !709)
!12331 = !DILocation(line: 1038, column: 55, scope: !12324)
!12332 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12324, file: !678, line: 1039, type: !12327)
!12333 = !DILocation(line: 1039, column: 37, scope: !12324)
!12334 = !DILocalVariable(name: "data", scope: !12324, file: !678, line: 1041, type: !53)
!12335 = !DILocation(line: 1041, column: 9, scope: !12324)
!12336 = !DILocalVariable(name: "bucket", scope: !12324, file: !678, line: 1042, type: !681)
!12337 = !DILocation(line: 1042, column: 22, scope: !12324)
!12338 = !DILocation(line: 1047, column: 9, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12324, file: !678, line: 1047, column: 7)
!12340 = !DILocation(line: 1047, column: 7, scope: !12324)
!12341 = !DILocation(line: 1048, column: 5, scope: !12339)
!12342 = !DILocation(line: 1051, column: 32, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12324, file: !678, line: 1051, column: 7)
!12344 = !DILocation(line: 1051, column: 39, scope: !12343)
!12345 = !DILocation(line: 1051, column: 15, scope: !12343)
!12346 = !DILocation(line: 1051, column: 13, scope: !12343)
!12347 = !DILocation(line: 1051, column: 63, scope: !12343)
!12348 = !DILocation(line: 1051, column: 7, scope: !12324)
!12349 = !DILocation(line: 1053, column: 11, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !678, line: 1053, column: 11)
!12351 = distinct !DILexicalBlock(scope: !12343, file: !678, line: 1052, column: 5)
!12352 = !DILocation(line: 1053, column: 11, scope: !12351)
!12353 = !DILocation(line: 1054, column: 24, scope: !12350)
!12354 = !DILocation(line: 1054, column: 10, scope: !12350)
!12355 = !DILocation(line: 1054, column: 22, scope: !12350)
!12356 = !DILocation(line: 1054, column: 9, scope: !12350)
!12357 = !DILocation(line: 1055, column: 7, scope: !12351)
!12358 = !DILocation(line: 1063, column: 7, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12324, file: !678, line: 1063, column: 7)
!12360 = !DILocation(line: 1063, column: 14, scope: !12359)
!12361 = !DILocation(line: 1064, column: 9, scope: !12359)
!12362 = !DILocation(line: 1064, column: 16, scope: !12359)
!12363 = !DILocation(line: 1064, column: 24, scope: !12359)
!12364 = !DILocation(line: 1064, column: 43, scope: !12359)
!12365 = !DILocation(line: 1064, column: 50, scope: !12359)
!12366 = !DILocation(line: 1064, column: 41, scope: !12359)
!12367 = !DILocation(line: 1064, column: 7, scope: !12359)
!12368 = !DILocation(line: 1063, column: 7, scope: !12324)
!12369 = !DILocation(line: 1068, column: 21, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12359, file: !678, line: 1065, column: 5)
!12371 = !DILocation(line: 1068, column: 7, scope: !12370)
!12372 = !DILocation(line: 1069, column: 11, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12370, file: !678, line: 1069, column: 11)
!12374 = !DILocation(line: 1069, column: 18, scope: !12373)
!12375 = !DILocation(line: 1070, column: 13, scope: !12373)
!12376 = !DILocation(line: 1070, column: 20, scope: !12373)
!12377 = !DILocation(line: 1070, column: 28, scope: !12373)
!12378 = !DILocation(line: 1070, column: 47, scope: !12373)
!12379 = !DILocation(line: 1070, column: 54, scope: !12373)
!12380 = !DILocation(line: 1070, column: 45, scope: !12373)
!12381 = !DILocation(line: 1070, column: 11, scope: !12373)
!12382 = !DILocation(line: 1069, column: 11, scope: !12370)
!12383 = !DILocalVariable(name: "tuning", scope: !12384, file: !678, line: 1072, type: !693)
!12384 = distinct !DILexicalBlock(scope: !12373, file: !678, line: 1071, column: 9)
!12385 = !DILocation(line: 1072, column: 30, scope: !12384)
!12386 = !DILocation(line: 1072, column: 39, scope: !12384)
!12387 = !DILocation(line: 1072, column: 46, scope: !12384)
!12388 = !DILocalVariable(name: "candidate", scope: !12384, file: !678, line: 1073, type: !699)
!12389 = !DILocation(line: 1073, column: 17, scope: !12384)
!12390 = !DILocation(line: 1074, column: 14, scope: !12384)
!12391 = !DILocation(line: 1074, column: 22, scope: !12384)
!12392 = !DILocation(line: 1075, column: 17, scope: !12384)
!12393 = !DILocation(line: 1075, column: 24, scope: !12384)
!12394 = !DILocation(line: 1075, column: 36, scope: !12384)
!12395 = !DILocation(line: 1075, column: 44, scope: !12384)
!12396 = !DILocation(line: 1075, column: 34, scope: !12384)
!12397 = !DILocation(line: 1076, column: 17, scope: !12384)
!12398 = !DILocation(line: 1076, column: 24, scope: !12384)
!12399 = !DILocation(line: 1076, column: 36, scope: !12384)
!12400 = !DILocation(line: 1076, column: 44, scope: !12384)
!12401 = !DILocation(line: 1076, column: 34, scope: !12384)
!12402 = !DILocation(line: 1077, column: 19, scope: !12384)
!12403 = !DILocation(line: 1077, column: 27, scope: !12384)
!12404 = !DILocation(line: 1077, column: 17, scope: !12384)
!12405 = !DILocation(line: 1079, column: 27, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12384, file: !678, line: 1079, column: 15)
!12407 = !DILocation(line: 1079, column: 24, scope: !12406)
!12408 = !DILocation(line: 1079, column: 15, scope: !12384)
!12409 = !DILocation(line: 1080, column: 13, scope: !12406)
!12410 = !DILocation(line: 1083, column: 29, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12384, file: !678, line: 1083, column: 15)
!12412 = !DILocation(line: 1083, column: 36, scope: !12411)
!12413 = !DILocation(line: 1083, column: 16, scope: !12411)
!12414 = !DILocation(line: 1083, column: 15, scope: !12384)
!12415 = !DILocation(line: 1084, column: 13, scope: !12411)
!12416 = !DILocation(line: 1087, column: 32, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12384, file: !678, line: 1087, column: 15)
!12418 = !DILocation(line: 1087, column: 39, scope: !12417)
!12419 = !DILocation(line: 1087, column: 15, scope: !12417)
!12420 = !DILocation(line: 1087, column: 62, scope: !12417)
!12421 = !DILocation(line: 1087, column: 15, scope: !12384)
!12422 = !DILocation(line: 1088, column: 13, scope: !12417)
!12423 = !DILocation(line: 1089, column: 9, scope: !12384)
!12424 = !DILocation(line: 1090, column: 5, scope: !12370)
!12425 = !DILocation(line: 1094, column: 7, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12324, file: !678, line: 1094, column: 7)
!12427 = !DILocation(line: 1094, column: 15, scope: !12426)
!12428 = !DILocation(line: 1094, column: 7, scope: !12324)
!12429 = !DILocalVariable(name: "new_entry", scope: !12430, file: !678, line: 1096, type: !681)
!12430 = distinct !DILexicalBlock(scope: !12426, file: !678, line: 1095, column: 5)
!12431 = !DILocation(line: 1096, column: 26, scope: !12430)
!12432 = !DILocation(line: 1096, column: 54, scope: !12430)
!12433 = !DILocation(line: 1096, column: 38, scope: !12430)
!12434 = !DILocation(line: 1098, column: 11, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12430, file: !678, line: 1098, column: 11)
!12436 = !DILocation(line: 1098, column: 21, scope: !12435)
!12437 = !DILocation(line: 1098, column: 11, scope: !12430)
!12438 = !DILocation(line: 1099, column: 9, scope: !12435)
!12439 = !DILocation(line: 1103, column: 34, scope: !12430)
!12440 = !DILocation(line: 1103, column: 7, scope: !12430)
!12441 = !DILocation(line: 1103, column: 18, scope: !12430)
!12442 = !DILocation(line: 1103, column: 23, scope: !12430)
!12443 = !DILocation(line: 1104, column: 25, scope: !12430)
!12444 = !DILocation(line: 1104, column: 33, scope: !12430)
!12445 = !DILocation(line: 1104, column: 7, scope: !12430)
!12446 = !DILocation(line: 1104, column: 18, scope: !12430)
!12447 = !DILocation(line: 1104, column: 23, scope: !12430)
!12448 = !DILocation(line: 1105, column: 22, scope: !12430)
!12449 = !DILocation(line: 1105, column: 7, scope: !12430)
!12450 = !DILocation(line: 1105, column: 15, scope: !12430)
!12451 = !DILocation(line: 1105, column: 20, scope: !12430)
!12452 = !DILocation(line: 1106, column: 7, scope: !12430)
!12453 = !DILocation(line: 1106, column: 14, scope: !12430)
!12454 = !DILocation(line: 1106, column: 23, scope: !12430)
!12455 = !DILocation(line: 1107, column: 7, scope: !12430)
!12456 = !DILocation(line: 1112, column: 27, scope: !12324)
!12457 = !DILocation(line: 1112, column: 3, scope: !12324)
!12458 = !DILocation(line: 1112, column: 11, scope: !12324)
!12459 = !DILocation(line: 1112, column: 16, scope: !12324)
!12460 = !DILocation(line: 1113, column: 3, scope: !12324)
!12461 = !DILocation(line: 1113, column: 10, scope: !12324)
!12462 = !DILocation(line: 1113, column: 19, scope: !12324)
!12463 = !DILocation(line: 1114, column: 3, scope: !12324)
!12464 = !DILocation(line: 1114, column: 10, scope: !12324)
!12465 = !DILocation(line: 1114, column: 24, scope: !12324)
!12466 = !DILocation(line: 1116, column: 3, scope: !12324)
!12467 = !DILocation(line: 1117, column: 1, scope: !12324)
!12468 = distinct !DISubprogram(name: "hash_find_entry", scope: !678, file: !678, line: 790, type: !12469, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !672, retainedNodes: !216)
!12469 = !DISubroutineType(types: !12470)
!12470 = !{!53, !723, !709, !12471, !142}
!12471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!12472 = !DILocalVariable(name: "table", arg: 1, scope: !12468, file: !678, line: 790, type: !723)
!12473 = !DILocation(line: 790, column: 30, scope: !12468)
!12474 = !DILocalVariable(name: "entry", arg: 2, scope: !12468, file: !678, line: 790, type: !709)
!12475 = !DILocation(line: 790, column: 49, scope: !12468)
!12476 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12468, file: !678, line: 791, type: !12471)
!12477 = !DILocation(line: 791, column: 38, scope: !12468)
!12478 = !DILocalVariable(name: "delete", arg: 4, scope: !12468, file: !678, line: 791, type: !142)
!12479 = !DILocation(line: 791, column: 56, scope: !12468)
!12480 = !DILocalVariable(name: "bucket", scope: !12468, file: !678, line: 793, type: !681)
!12481 = !DILocation(line: 793, column: 22, scope: !12468)
!12482 = !DILocation(line: 793, column: 44, scope: !12468)
!12483 = !DILocation(line: 793, column: 51, scope: !12468)
!12484 = !DILocation(line: 793, column: 31, scope: !12468)
!12485 = !DILocalVariable(name: "cursor", scope: !12468, file: !678, line: 794, type: !681)
!12486 = !DILocation(line: 794, column: 22, scope: !12468)
!12487 = !DILocation(line: 796, column: 18, scope: !12468)
!12488 = !DILocation(line: 796, column: 4, scope: !12468)
!12489 = !DILocation(line: 796, column: 16, scope: !12468)
!12490 = !DILocation(line: 799, column: 7, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12468, file: !678, line: 799, column: 7)
!12492 = !DILocation(line: 799, column: 15, scope: !12491)
!12493 = !DILocation(line: 799, column: 20, scope: !12491)
!12494 = !DILocation(line: 799, column: 7, scope: !12468)
!12495 = !DILocation(line: 800, column: 5, scope: !12491)
!12496 = !DILocation(line: 803, column: 7, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12468, file: !678, line: 803, column: 7)
!12498 = !DILocation(line: 803, column: 16, scope: !12497)
!12499 = !DILocation(line: 803, column: 24, scope: !12497)
!12500 = !DILocation(line: 803, column: 13, scope: !12497)
!12501 = !DILocation(line: 803, column: 29, scope: !12497)
!12502 = !DILocation(line: 803, column: 32, scope: !12497)
!12503 = !DILocation(line: 803, column: 39, scope: !12497)
!12504 = !DILocation(line: 803, column: 51, scope: !12497)
!12505 = !DILocation(line: 803, column: 58, scope: !12497)
!12506 = !DILocation(line: 803, column: 66, scope: !12497)
!12507 = !DILocation(line: 803, column: 7, scope: !12468)
!12508 = !DILocalVariable(name: "data", scope: !12509, file: !678, line: 805, type: !53)
!12509 = distinct !DILexicalBlock(scope: !12497, file: !678, line: 804, column: 5)
!12510 = !DILocation(line: 805, column: 13, scope: !12509)
!12511 = !DILocation(line: 805, column: 20, scope: !12509)
!12512 = !DILocation(line: 805, column: 28, scope: !12509)
!12513 = !DILocation(line: 807, column: 11, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12509, file: !678, line: 807, column: 11)
!12515 = !DILocation(line: 807, column: 11, scope: !12509)
!12516 = !DILocation(line: 809, column: 15, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12518, file: !678, line: 809, column: 15)
!12518 = distinct !DILexicalBlock(scope: !12514, file: !678, line: 808, column: 9)
!12519 = !DILocation(line: 809, column: 23, scope: !12517)
!12520 = !DILocation(line: 809, column: 15, scope: !12518)
!12521 = !DILocalVariable(name: "next", scope: !12522, file: !678, line: 811, type: !681)
!12522 = distinct !DILexicalBlock(scope: !12517, file: !678, line: 810, column: 13)
!12523 = !DILocation(line: 811, column: 34, scope: !12522)
!12524 = !DILocation(line: 811, column: 41, scope: !12522)
!12525 = !DILocation(line: 811, column: 49, scope: !12522)
!12526 = !DILocation(line: 815, column: 16, scope: !12522)
!12527 = !DILocation(line: 815, column: 26, scope: !12522)
!12528 = !DILocation(line: 815, column: 25, scope: !12522)
!12529 = !DILocation(line: 816, column: 27, scope: !12522)
!12530 = !DILocation(line: 816, column: 34, scope: !12522)
!12531 = !DILocation(line: 816, column: 15, scope: !12522)
!12532 = !DILocation(line: 817, column: 13, scope: !12522)
!12533 = !DILocation(line: 820, column: 15, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12517, file: !678, line: 819, column: 13)
!12535 = !DILocation(line: 820, column: 23, scope: !12534)
!12536 = !DILocation(line: 820, column: 28, scope: !12534)
!12537 = !DILocation(line: 822, column: 9, scope: !12518)
!12538 = !DILocation(line: 824, column: 14, scope: !12509)
!12539 = !DILocation(line: 824, column: 7, scope: !12509)
!12540 = !DILocation(line: 828, column: 17, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12468, file: !678, line: 828, column: 3)
!12542 = !DILocation(line: 828, column: 15, scope: !12541)
!12543 = !DILocation(line: 828, column: 8, scope: !12541)
!12544 = !DILocation(line: 828, column: 25, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12541, file: !678, line: 828, column: 3)
!12546 = !DILocation(line: 828, column: 33, scope: !12545)
!12547 = !DILocation(line: 828, column: 3, scope: !12541)
!12548 = !DILocation(line: 830, column: 11, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12550, file: !678, line: 830, column: 11)
!12550 = distinct !DILexicalBlock(scope: !12545, file: !678, line: 829, column: 5)
!12551 = !DILocation(line: 830, column: 20, scope: !12549)
!12552 = !DILocation(line: 830, column: 28, scope: !12549)
!12553 = !DILocation(line: 830, column: 34, scope: !12549)
!12554 = !DILocation(line: 830, column: 17, scope: !12549)
!12555 = !DILocation(line: 831, column: 11, scope: !12549)
!12556 = !DILocation(line: 831, column: 14, scope: !12549)
!12557 = !DILocation(line: 831, column: 21, scope: !12549)
!12558 = !DILocation(line: 831, column: 33, scope: !12549)
!12559 = !DILocation(line: 831, column: 40, scope: !12549)
!12560 = !DILocation(line: 831, column: 48, scope: !12549)
!12561 = !DILocation(line: 831, column: 54, scope: !12549)
!12562 = !DILocation(line: 830, column: 11, scope: !12550)
!12563 = !DILocalVariable(name: "data", scope: !12564, file: !678, line: 833, type: !53)
!12564 = distinct !DILexicalBlock(scope: !12549, file: !678, line: 832, column: 9)
!12565 = !DILocation(line: 833, column: 17, scope: !12564)
!12566 = !DILocation(line: 833, column: 24, scope: !12564)
!12567 = !DILocation(line: 833, column: 32, scope: !12564)
!12568 = !DILocation(line: 833, column: 38, scope: !12564)
!12569 = !DILocation(line: 835, column: 15, scope: !12570)
!12570 = distinct !DILexicalBlock(scope: !12564, file: !678, line: 835, column: 15)
!12571 = !DILocation(line: 835, column: 15, scope: !12564)
!12572 = !DILocalVariable(name: "next", scope: !12573, file: !678, line: 837, type: !681)
!12573 = distinct !DILexicalBlock(scope: !12570, file: !678, line: 836, column: 13)
!12574 = !DILocation(line: 837, column: 34, scope: !12573)
!12575 = !DILocation(line: 837, column: 41, scope: !12573)
!12576 = !DILocation(line: 837, column: 49, scope: !12573)
!12577 = !DILocation(line: 841, column: 30, scope: !12573)
!12578 = !DILocation(line: 841, column: 36, scope: !12573)
!12579 = !DILocation(line: 841, column: 15, scope: !12573)
!12580 = !DILocation(line: 841, column: 23, scope: !12573)
!12581 = !DILocation(line: 841, column: 28, scope: !12573)
!12582 = !DILocation(line: 842, column: 27, scope: !12573)
!12583 = !DILocation(line: 842, column: 34, scope: !12573)
!12584 = !DILocation(line: 842, column: 15, scope: !12573)
!12585 = !DILocation(line: 843, column: 13, scope: !12573)
!12586 = !DILocation(line: 845, column: 18, scope: !12564)
!12587 = !DILocation(line: 845, column: 11, scope: !12564)
!12588 = !DILocation(line: 847, column: 5, scope: !12550)
!12589 = !DILocation(line: 828, column: 48, scope: !12545)
!12590 = !DILocation(line: 828, column: 56, scope: !12545)
!12591 = !DILocation(line: 828, column: 46, scope: !12545)
!12592 = !DILocation(line: 828, column: 3, scope: !12545)
!12593 = distinct !{!12593, !12547, !12594}
!12594 = !DILocation(line: 847, column: 5, scope: !12541)
!12595 = !DILocation(line: 850, column: 3, scope: !12468)
!12596 = !DILocation(line: 851, column: 1, scope: !12468)
!12597 = distinct !DISubprogram(name: "hash_insert", scope: !678, file: !678, line: 1126, type: !12598, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{!53, !723, !709}
!12600 = !DILocalVariable(name: "table", arg: 1, scope: !12597, file: !678, line: 1126, type: !723)
!12601 = !DILocation(line: 1126, column: 26, scope: !12597)
!12602 = !DILocalVariable(name: "entry", arg: 2, scope: !12597, file: !678, line: 1126, type: !709)
!12603 = !DILocation(line: 1126, column: 45, scope: !12597)
!12604 = !DILocalVariable(name: "matched_ent", scope: !12597, file: !678, line: 1128, type: !709)
!12605 = !DILocation(line: 1128, column: 15, scope: !12597)
!12606 = !DILocalVariable(name: "err", scope: !12597, file: !678, line: 1129, type: !7)
!12607 = !DILocation(line: 1129, column: 7, scope: !12597)
!12608 = !DILocation(line: 1129, column: 36, scope: !12597)
!12609 = !DILocation(line: 1129, column: 43, scope: !12597)
!12610 = !DILocation(line: 1129, column: 13, scope: !12597)
!12611 = !DILocation(line: 1130, column: 11, scope: !12597)
!12612 = !DILocation(line: 1130, column: 15, scope: !12597)
!12613 = !DILocation(line: 1132, column: 23, scope: !12597)
!12614 = !DILocation(line: 1132, column: 27, scope: !12597)
!12615 = !DILocation(line: 1132, column: 34, scope: !12597)
!12616 = !DILocation(line: 1132, column: 48, scope: !12597)
!12617 = !DILocation(line: 1130, column: 3, scope: !12597)
!12618 = distinct !DISubprogram(name: "hash_delete", scope: !678, file: !678, line: 1140, type: !12598, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !216)
!12619 = !DILocalVariable(name: "table", arg: 1, scope: !12618, file: !678, line: 1140, type: !723)
!12620 = !DILocation(line: 1140, column: 26, scope: !12618)
!12621 = !DILocalVariable(name: "entry", arg: 2, scope: !12618, file: !678, line: 1140, type: !709)
!12622 = !DILocation(line: 1140, column: 45, scope: !12618)
!12623 = !DILocalVariable(name: "data", scope: !12618, file: !678, line: 1142, type: !53)
!12624 = !DILocation(line: 1142, column: 9, scope: !12618)
!12625 = !DILocalVariable(name: "bucket", scope: !12618, file: !678, line: 1143, type: !681)
!12626 = !DILocation(line: 1143, column: 22, scope: !12618)
!12627 = !DILocation(line: 1145, column: 27, scope: !12618)
!12628 = !DILocation(line: 1145, column: 34, scope: !12618)
!12629 = !DILocation(line: 1145, column: 10, scope: !12618)
!12630 = !DILocation(line: 1145, column: 8, scope: !12618)
!12631 = !DILocation(line: 1146, column: 8, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12618, file: !678, line: 1146, column: 7)
!12633 = !DILocation(line: 1146, column: 7, scope: !12618)
!12634 = !DILocation(line: 1147, column: 5, scope: !12632)
!12635 = !DILocation(line: 1149, column: 3, scope: !12618)
!12636 = !DILocation(line: 1149, column: 10, scope: !12618)
!12637 = !DILocation(line: 1149, column: 19, scope: !12618)
!12638 = !DILocation(line: 1150, column: 8, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12618, file: !678, line: 1150, column: 7)
!12640 = !DILocation(line: 1150, column: 16, scope: !12639)
!12641 = !DILocation(line: 1150, column: 7, scope: !12618)
!12642 = !DILocation(line: 1152, column: 7, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12639, file: !678, line: 1151, column: 5)
!12644 = !DILocation(line: 1152, column: 14, scope: !12643)
!12645 = !DILocation(line: 1152, column: 28, scope: !12643)
!12646 = !DILocation(line: 1157, column: 11, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12643, file: !678, line: 1157, column: 11)
!12648 = !DILocation(line: 1157, column: 18, scope: !12647)
!12649 = !DILocation(line: 1158, column: 13, scope: !12647)
!12650 = !DILocation(line: 1158, column: 20, scope: !12647)
!12651 = !DILocation(line: 1158, column: 28, scope: !12647)
!12652 = !DILocation(line: 1158, column: 47, scope: !12647)
!12653 = !DILocation(line: 1158, column: 54, scope: !12647)
!12654 = !DILocation(line: 1158, column: 45, scope: !12647)
!12655 = !DILocation(line: 1158, column: 11, scope: !12647)
!12656 = !DILocation(line: 1157, column: 11, scope: !12643)
!12657 = !DILocation(line: 1162, column: 25, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12647, file: !678, line: 1159, column: 9)
!12659 = !DILocation(line: 1162, column: 11, scope: !12658)
!12660 = !DILocation(line: 1163, column: 15, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12658, file: !678, line: 1163, column: 15)
!12662 = !DILocation(line: 1163, column: 22, scope: !12661)
!12663 = !DILocation(line: 1164, column: 17, scope: !12661)
!12664 = !DILocation(line: 1164, column: 24, scope: !12661)
!12665 = !DILocation(line: 1164, column: 32, scope: !12661)
!12666 = !DILocation(line: 1164, column: 51, scope: !12661)
!12667 = !DILocation(line: 1164, column: 58, scope: !12661)
!12668 = !DILocation(line: 1164, column: 49, scope: !12661)
!12669 = !DILocation(line: 1164, column: 15, scope: !12661)
!12670 = !DILocation(line: 1163, column: 15, scope: !12658)
!12671 = !DILocalVariable(name: "tuning", scope: !12672, file: !678, line: 1166, type: !693)
!12672 = distinct !DILexicalBlock(scope: !12661, file: !678, line: 1165, column: 13)
!12673 = !DILocation(line: 1166, column: 34, scope: !12672)
!12674 = !DILocation(line: 1166, column: 43, scope: !12672)
!12675 = !DILocation(line: 1166, column: 50, scope: !12672)
!12676 = !DILocalVariable(name: "candidate", scope: !12672, file: !678, line: 1167, type: !55)
!12677 = !DILocation(line: 1167, column: 22, scope: !12672)
!12678 = !DILocation(line: 1168, column: 18, scope: !12672)
!12679 = !DILocation(line: 1168, column: 26, scope: !12672)
!12680 = !DILocation(line: 1169, column: 20, scope: !12672)
!12681 = !DILocation(line: 1169, column: 27, scope: !12672)
!12682 = !DILocation(line: 1169, column: 39, scope: !12672)
!12683 = !DILocation(line: 1169, column: 47, scope: !12672)
!12684 = !DILocation(line: 1169, column: 37, scope: !12672)
!12685 = !DILocation(line: 1170, column: 21, scope: !12672)
!12686 = !DILocation(line: 1170, column: 28, scope: !12672)
!12687 = !DILocation(line: 1170, column: 40, scope: !12672)
!12688 = !DILocation(line: 1170, column: 48, scope: !12672)
!12689 = !DILocation(line: 1170, column: 38, scope: !12672)
!12690 = !DILocation(line: 1171, column: 23, scope: !12672)
!12691 = !DILocation(line: 1171, column: 31, scope: !12672)
!12692 = !DILocation(line: 1171, column: 21, scope: !12672)
!12693 = !DILocation(line: 1168, column: 17, scope: !12672)
!12694 = !DILocation(line: 1173, column: 33, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12672, file: !678, line: 1173, column: 19)
!12696 = !DILocation(line: 1173, column: 40, scope: !12695)
!12697 = !DILocation(line: 1173, column: 20, scope: !12695)
!12698 = !DILocation(line: 1173, column: 19, scope: !12672)
!12699 = !DILocalVariable(name: "cursor", scope: !12700, file: !678, line: 1181, type: !681)
!12700 = distinct !DILexicalBlock(scope: !12695, file: !678, line: 1174, column: 17)
!12701 = !DILocation(line: 1181, column: 38, scope: !12700)
!12702 = !DILocation(line: 1181, column: 47, scope: !12700)
!12703 = !DILocation(line: 1181, column: 54, scope: !12700)
!12704 = !DILocalVariable(name: "next", scope: !12700, file: !678, line: 1182, type: !681)
!12705 = !DILocation(line: 1182, column: 38, scope: !12700)
!12706 = !DILocation(line: 1183, column: 19, scope: !12700)
!12707 = !DILocation(line: 1183, column: 26, scope: !12700)
!12708 = !DILocation(line: 1185, column: 30, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12700, file: !678, line: 1184, column: 21)
!12710 = !DILocation(line: 1185, column: 38, scope: !12709)
!12711 = !DILocation(line: 1185, column: 28, scope: !12709)
!12712 = !DILocation(line: 1186, column: 29, scope: !12709)
!12713 = !DILocation(line: 1186, column: 23, scope: !12709)
!12714 = !DILocation(line: 1187, column: 32, scope: !12709)
!12715 = !DILocation(line: 1187, column: 30, scope: !12709)
!12716 = distinct !{!12716, !12706, !12717}
!12717 = !DILocation(line: 1188, column: 21, scope: !12700)
!12718 = !DILocation(line: 1189, column: 19, scope: !12700)
!12719 = !DILocation(line: 1189, column: 26, scope: !12700)
!12720 = !DILocation(line: 1189, column: 42, scope: !12700)
!12721 = !DILocation(line: 1191, column: 17, scope: !12700)
!12722 = !DILocation(line: 1192, column: 13, scope: !12672)
!12723 = !DILocation(line: 1193, column: 9, scope: !12658)
!12724 = !DILocation(line: 1194, column: 5, scope: !12643)
!12725 = !DILocation(line: 1196, column: 10, scope: !12618)
!12726 = !DILocation(line: 1196, column: 3, scope: !12618)
!12727 = !DILocation(line: 1197, column: 1, scope: !12618)
!12728 = distinct !DISubprogram(name: "triple_hash", scope: !12729, file: !12729, line: 34, type: !707, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1353, retainedNodes: !216)
!12729 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12730 = !DILocalVariable(name: "x", arg: 1, scope: !12728, file: !12729, line: 34, type: !709)
!12731 = !DILocation(line: 34, column: 26, scope: !12728)
!12732 = !DILocalVariable(name: "table_size", arg: 2, scope: !12728, file: !12729, line: 34, type: !55)
!12733 = !DILocation(line: 34, column: 36, scope: !12728)
!12734 = !DILocalVariable(name: "p", scope: !12728, file: !12729, line: 36, type: !1356)
!12735 = !DILocation(line: 36, column: 26, scope: !12728)
!12736 = !DILocation(line: 36, column: 30, scope: !12728)
!12737 = !DILocalVariable(name: "tmp", scope: !12728, file: !12729, line: 37, type: !55)
!12738 = !DILocation(line: 37, column: 10, scope: !12728)
!12739 = !DILocation(line: 37, column: 26, scope: !12728)
!12740 = !DILocation(line: 37, column: 29, scope: !12728)
!12741 = !DILocation(line: 37, column: 35, scope: !12728)
!12742 = !DILocation(line: 37, column: 16, scope: !12728)
!12743 = !DILocation(line: 40, column: 11, scope: !12728)
!12744 = !DILocation(line: 40, column: 17, scope: !12728)
!12745 = !DILocation(line: 40, column: 20, scope: !12728)
!12746 = !DILocation(line: 40, column: 15, scope: !12728)
!12747 = !DILocation(line: 40, column: 30, scope: !12728)
!12748 = !DILocation(line: 40, column: 28, scope: !12728)
!12749 = !DILocation(line: 40, column: 3, scope: !12728)
!12750 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12729, file: !12729, line: 45, type: !707, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1353, retainedNodes: !216)
!12751 = !DILocalVariable(name: "x", arg: 1, scope: !12750, file: !12729, line: 45, type: !709)
!12752 = !DILocation(line: 45, column: 34, scope: !12750)
!12753 = !DILocalVariable(name: "table_size", arg: 2, scope: !12750, file: !12729, line: 45, type: !55)
!12754 = !DILocation(line: 45, column: 44, scope: !12750)
!12755 = !DILocalVariable(name: "p", scope: !12750, file: !12729, line: 47, type: !1356)
!12756 = !DILocation(line: 47, column: 26, scope: !12750)
!12757 = !DILocation(line: 47, column: 30, scope: !12750)
!12758 = !DILocation(line: 50, column: 10, scope: !12750)
!12759 = !DILocation(line: 50, column: 13, scope: !12750)
!12760 = !DILocation(line: 50, column: 22, scope: !12750)
!12761 = !DILocation(line: 50, column: 20, scope: !12750)
!12762 = !DILocation(line: 50, column: 3, scope: !12750)
!12763 = distinct !DISubprogram(name: "triple_compare", scope: !12729, file: !12729, line: 55, type: !714, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1353, retainedNodes: !216)
!12764 = !DILocalVariable(name: "x", arg: 1, scope: !12763, file: !12729, line: 55, type: !709)
!12765 = !DILocation(line: 55, column: 29, scope: !12763)
!12766 = !DILocalVariable(name: "y", arg: 2, scope: !12763, file: !12729, line: 55, type: !709)
!12767 = !DILocation(line: 55, column: 44, scope: !12763)
!12768 = !DILocalVariable(name: "a", scope: !12763, file: !12729, line: 57, type: !1356)
!12769 = !DILocation(line: 57, column: 26, scope: !12763)
!12770 = !DILocation(line: 57, column: 30, scope: !12763)
!12771 = !DILocalVariable(name: "b", scope: !12763, file: !12729, line: 58, type: !1356)
!12772 = !DILocation(line: 58, column: 26, scope: !12763)
!12773 = !DILocation(line: 58, column: 30, scope: !12763)
!12774 = !DILocation(line: 59, column: 11, scope: !12763)
!12775 = !DILocation(line: 59, column: 31, scope: !12763)
!12776 = !DILocation(line: 59, column: 45, scope: !12763)
!12777 = !DILocation(line: 59, column: 48, scope: !12763)
!12778 = !DILocation(line: 59, column: 54, scope: !12763)
!12779 = !DILocation(line: 59, column: 57, scope: !12763)
!12780 = !DILocation(line: 59, column: 34, scope: !12763)
!12781 = !DILocation(line: 0, scope: !12763)
!12782 = !DILocation(line: 59, column: 10, scope: !12763)
!12783 = !DILocation(line: 59, column: 3, scope: !12763)
!12784 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12729, file: !12729, line: 63, type: !714, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1353, retainedNodes: !216)
!12785 = !DILocalVariable(name: "x", arg: 1, scope: !12784, file: !12729, line: 63, type: !709)
!12786 = !DILocation(line: 63, column: 37, scope: !12784)
!12787 = !DILocalVariable(name: "y", arg: 2, scope: !12784, file: !12729, line: 63, type: !709)
!12788 = !DILocation(line: 63, column: 52, scope: !12784)
!12789 = !DILocalVariable(name: "a", scope: !12784, file: !12729, line: 65, type: !1356)
!12790 = !DILocation(line: 65, column: 26, scope: !12784)
!12791 = !DILocation(line: 65, column: 30, scope: !12784)
!12792 = !DILocalVariable(name: "b", scope: !12784, file: !12729, line: 66, type: !1356)
!12793 = !DILocation(line: 66, column: 26, scope: !12784)
!12794 = !DILocation(line: 66, column: 30, scope: !12784)
!12795 = !DILocation(line: 67, column: 11, scope: !12784)
!12796 = !DILocation(line: 67, column: 31, scope: !12784)
!12797 = !DILocation(line: 67, column: 34, scope: !12784)
!12798 = !DILocation(line: 0, scope: !12784)
!12799 = !DILocation(line: 67, column: 10, scope: !12784)
!12800 = !DILocation(line: 67, column: 3, scope: !12784)
!12801 = distinct !DISubprogram(name: "triple_free", scope: !12729, file: !12729, line: 72, type: !719, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1353, retainedNodes: !216)
!12802 = !DILocalVariable(name: "x", arg: 1, scope: !12801, file: !12729, line: 72, type: !53)
!12803 = !DILocation(line: 72, column: 20, scope: !12801)
!12804 = !DILocalVariable(name: "a", scope: !12801, file: !12729, line: 74, type: !1363)
!12805 = !DILocation(line: 74, column: 20, scope: !12801)
!12806 = !DILocation(line: 74, column: 24, scope: !12801)
!12807 = !DILocation(line: 75, column: 9, scope: !12801)
!12808 = !DILocation(line: 75, column: 12, scope: !12801)
!12809 = !DILocation(line: 75, column: 3, scope: !12801)
!12810 = !DILocation(line: 76, column: 9, scope: !12801)
!12811 = !DILocation(line: 76, column: 3, scope: !12801)
!12812 = !DILocation(line: 77, column: 1, scope: !12801)
!12813 = distinct !DISubprogram(name: "opendirat", scope: !12814, file: !12814, line: 36, type: !12815, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1364, retainedNodes: !216)
!12814 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12815 = !DISubroutineType(types: !12816)
!12816 = !{!541, !7, !116, !7, !161}
!12817 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !12813, file: !12814, line: 36, type: !7)
!12818 = !DILocation(line: 36, column: 16, scope: !12813)
!12819 = !DILocalVariable(name: "dir", arg: 2, scope: !12813, file: !12814, line: 36, type: !116)
!12820 = !DILocation(line: 36, column: 36, scope: !12813)
!12821 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !12813, file: !12814, line: 36, type: !7)
!12822 = !DILocation(line: 36, column: 45, scope: !12813)
!12823 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !12813, file: !12814, line: 36, type: !161)
!12824 = !DILocation(line: 36, column: 63, scope: !12813)
!12825 = !DILocalVariable(name: "open_flags", scope: !12813, file: !12814, line: 38, type: !7)
!12826 = !DILocation(line: 38, column: 7, scope: !12813)
!12827 = !DILocation(line: 39, column: 36, scope: !12813)
!12828 = !DILocation(line: 39, column: 34, scope: !12813)
!12829 = !DILocalVariable(name: "new_fd", scope: !12813, file: !12814, line: 40, type: !7)
!12830 = !DILocation(line: 40, column: 7, scope: !12813)
!12831 = !DILocation(line: 40, column: 24, scope: !12813)
!12832 = !DILocation(line: 40, column: 32, scope: !12813)
!12833 = !DILocation(line: 40, column: 37, scope: !12813)
!12834 = !DILocation(line: 40, column: 16, scope: !12813)
!12835 = !DILocation(line: 42, column: 7, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12813, file: !12814, line: 42, column: 7)
!12837 = !DILocation(line: 42, column: 14, scope: !12836)
!12838 = !DILocation(line: 42, column: 7, scope: !12813)
!12839 = !DILocation(line: 43, column: 5, scope: !12836)
!12840 = !DILocalVariable(name: "dirp", scope: !12813, file: !12814, line: 44, type: !541)
!12841 = !DILocation(line: 44, column: 8, scope: !12813)
!12842 = !DILocation(line: 44, column: 26, scope: !12813)
!12843 = !DILocation(line: 44, column: 15, scope: !12813)
!12844 = !DILocation(line: 45, column: 7, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12813, file: !12814, line: 45, column: 7)
!12846 = !DILocation(line: 45, column: 7, scope: !12813)
!12847 = !DILocation(line: 46, column: 16, scope: !12845)
!12848 = !DILocation(line: 46, column: 6, scope: !12845)
!12849 = !DILocation(line: 46, column: 14, scope: !12845)
!12850 = !DILocation(line: 46, column: 5, scope: !12845)
!12851 = !DILocalVariable(name: "fdopendir_errno", scope: !12852, file: !12814, line: 49, type: !7)
!12852 = distinct !DILexicalBlock(scope: !12845, file: !12814, line: 48, column: 5)
!12853 = !DILocation(line: 49, column: 11, scope: !12852)
!12854 = !DILocation(line: 49, column: 29, scope: !12852)
!12855 = !DILocation(line: 50, column: 14, scope: !12852)
!12856 = !DILocation(line: 50, column: 7, scope: !12852)
!12857 = !DILocation(line: 51, column: 15, scope: !12852)
!12858 = !DILocation(line: 51, column: 7, scope: !12852)
!12859 = !DILocation(line: 51, column: 13, scope: !12852)
!12860 = !DILocation(line: 53, column: 10, scope: !12813)
!12861 = !DILocation(line: 53, column: 3, scope: !12813)
!12862 = !DILocation(line: 54, column: 1, scope: !12813)
!12863 = distinct !DISubprogram(name: "priv_set_remove_linkdir", scope: !12864, file: !12864, line: 51, type: !12865, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1367, retainedNodes: !216)
!12864 = !DIFile(filename: "./lib/priv-set.h", directory: "/home/mbarbar/software/coreutils-8.31")
!12865 = !DISubroutineType(types: !1371)
!12866 = !DILocation(line: 53, column: 3, scope: !12863)
!12867 = distinct !DISubprogram(name: "priv_set_restore_linkdir", scope: !12864, file: !12864, line: 57, type: !12865, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1367, retainedNodes: !216)
!12868 = !DILocation(line: 59, column: 3, scope: !12867)
!12869 = distinct !DISubprogram(name: "set_program_name", scope: !765, file: !765, line: 39, type: !214, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !727, retainedNodes: !216)
!12870 = !DILocalVariable(name: "argv0", arg: 1, scope: !12869, file: !765, line: 39, type: !116)
!12871 = !DILocation(line: 39, column: 31, scope: !12869)
!12872 = !DILocalVariable(name: "slash", scope: !12869, file: !765, line: 46, type: !116)
!12873 = !DILocation(line: 46, column: 15, scope: !12869)
!12874 = !DILocalVariable(name: "base", scope: !12869, file: !765, line: 47, type: !116)
!12875 = !DILocation(line: 47, column: 15, scope: !12869)
!12876 = !DILocation(line: 51, column: 7, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12869, file: !765, line: 51, column: 7)
!12878 = !DILocation(line: 51, column: 13, scope: !12877)
!12879 = !DILocation(line: 51, column: 7, scope: !12869)
!12880 = !DILocation(line: 55, column: 14, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12877, file: !765, line: 52, column: 5)
!12882 = !DILocation(line: 54, column: 7, scope: !12881)
!12883 = !DILocation(line: 56, column: 7, scope: !12881)
!12884 = !DILocation(line: 59, column: 20, scope: !12869)
!12885 = !DILocation(line: 59, column: 11, scope: !12869)
!12886 = !DILocation(line: 59, column: 9, scope: !12869)
!12887 = !DILocation(line: 60, column: 11, scope: !12869)
!12888 = !DILocation(line: 60, column: 17, scope: !12869)
!12889 = !DILocation(line: 60, column: 27, scope: !12869)
!12890 = !DILocation(line: 60, column: 33, scope: !12869)
!12891 = !DILocation(line: 60, column: 39, scope: !12869)
!12892 = !DILocation(line: 60, column: 8, scope: !12869)
!12893 = !DILocation(line: 61, column: 7, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12869, file: !765, line: 61, column: 7)
!12895 = !DILocation(line: 61, column: 14, scope: !12894)
!12896 = !DILocation(line: 61, column: 12, scope: !12894)
!12897 = !DILocation(line: 61, column: 20, scope: !12894)
!12898 = !DILocation(line: 61, column: 25, scope: !12894)
!12899 = !DILocation(line: 61, column: 37, scope: !12894)
!12900 = !DILocation(line: 61, column: 42, scope: !12894)
!12901 = !DILocation(line: 61, column: 28, scope: !12894)
!12902 = !DILocation(line: 61, column: 61, scope: !12894)
!12903 = !DILocation(line: 61, column: 7, scope: !12869)
!12904 = !DILocation(line: 63, column: 15, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12894, file: !765, line: 62, column: 5)
!12906 = !DILocation(line: 63, column: 13, scope: !12905)
!12907 = !DILocation(line: 64, column: 20, scope: !12908)
!12908 = distinct !DILexicalBlock(scope: !12905, file: !765, line: 64, column: 11)
!12909 = !DILocation(line: 64, column: 11, scope: !12908)
!12910 = !DILocation(line: 64, column: 36, scope: !12908)
!12911 = !DILocation(line: 64, column: 11, scope: !12905)
!12912 = !DILocation(line: 66, column: 19, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12908, file: !765, line: 65, column: 9)
!12914 = !DILocation(line: 66, column: 24, scope: !12913)
!12915 = !DILocation(line: 66, column: 17, scope: !12913)
!12916 = !DILocation(line: 70, column: 52, scope: !12913)
!12917 = !DILocation(line: 70, column: 41, scope: !12913)
!12918 = !DILocation(line: 72, column: 9, scope: !12913)
!12919 = !DILocation(line: 73, column: 5, scope: !12905)
!12920 = !DILocation(line: 84, column: 18, scope: !12869)
!12921 = !DILocation(line: 84, column: 16, scope: !12869)
!12922 = !DILocation(line: 90, column: 38, scope: !12869)
!12923 = !DILocation(line: 90, column: 27, scope: !12869)
!12924 = !DILocation(line: 92, column: 1, scope: !12869)
!12925 = distinct !DISubprogram(name: "qcopy_acl", scope: !12926, file: !12926, line: 39, type: !9131, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1369, retainedNodes: !216)
!12926 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12928, line: 260, size: 256, elements: !12929)
!12928 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mbarbar/software/coreutils-8.31")
!12929 = !{!12930, !12931, !12932, !12933}
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12927, file: !12928, line: 261, baseType: !239, size: 32)
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !12927, file: !12928, line: 264, baseType: !1865, size: 64, offset: 64)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !12927, file: !12928, line: 266, baseType: !1865, size: 64, offset: 128)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !12927, file: !12928, line: 268, baseType: !142, size: 8, offset: 192)
!12934 = !DILocalVariable(name: "src_name", arg: 1, scope: !12925, file: !12926, line: 39, type: !116)
!12935 = !DILocation(line: 39, column: 24, scope: !12925)
!12936 = !DILocalVariable(name: "source_desc", arg: 2, scope: !12925, file: !12926, line: 39, type: !7)
!12937 = !DILocation(line: 39, column: 38, scope: !12925)
!12938 = !DILocalVariable(name: "dst_name", arg: 3, scope: !12925, file: !12926, line: 39, type: !116)
!12939 = !DILocation(line: 39, column: 63, scope: !12925)
!12940 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !12925, file: !12926, line: 40, type: !7)
!12941 = !DILocation(line: 40, column: 16, scope: !12925)
!12942 = !DILocalVariable(name: "mode", arg: 5, scope: !12925, file: !12926, line: 40, type: !239)
!12943 = !DILocation(line: 40, column: 34, scope: !12925)
!12944 = !DILocalVariable(name: "ctx", scope: !12925, file: !12926, line: 42, type: !12927)
!12945 = !DILocation(line: 42, column: 29, scope: !12925)
!12946 = !DILocalVariable(name: "ret", scope: !12925, file: !12926, line: 43, type: !7)
!12947 = !DILocation(line: 43, column: 7, scope: !12925)
!12948 = !DILocation(line: 45, column: 26, scope: !12925)
!12949 = !DILocation(line: 45, column: 36, scope: !12925)
!12950 = !DILocation(line: 45, column: 49, scope: !12925)
!12951 = !DILocation(line: 45, column: 9, scope: !12925)
!12952 = !DILocation(line: 45, column: 7, scope: !12925)
!12953 = !DILocation(line: 46, column: 7, scope: !12954)
!12954 = distinct !DILexicalBlock(scope: !12925, file: !12926, line: 46, column: 7)
!12955 = !DILocation(line: 46, column: 11, scope: !12954)
!12956 = !DILocation(line: 46, column: 7, scope: !12925)
!12957 = !DILocation(line: 47, column: 5, scope: !12954)
!12958 = !DILocation(line: 48, column: 32, scope: !12925)
!12959 = !DILocation(line: 48, column: 42, scope: !12925)
!12960 = !DILocation(line: 48, column: 9, scope: !12925)
!12961 = !DILocation(line: 48, column: 7, scope: !12925)
!12962 = !DILocation(line: 49, column: 3, scope: !12925)
!12963 = !DILocation(line: 50, column: 10, scope: !12925)
!12964 = !DILocation(line: 50, column: 3, scope: !12925)
!12965 = !DILocation(line: 51, column: 1, scope: !12925)
!12966 = distinct !DISubprogram(name: "qset_acl", scope: !12967, file: !12967, line: 39, type: !9170, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1372, retainedNodes: !216)
!12967 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12928, line: 260, size: 256, elements: !12969)
!12969 = !{!12970, !12971, !12972, !12973}
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12968, file: !12928, line: 261, baseType: !239, size: 32)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !12968, file: !12928, line: 264, baseType: !1865, size: 64, offset: 64)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !12968, file: !12928, line: 266, baseType: !1865, size: 64, offset: 128)
!12973 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !12968, file: !12928, line: 268, baseType: !142, size: 8, offset: 192)
!12974 = !DILocalVariable(name: "name", arg: 1, scope: !12966, file: !12967, line: 39, type: !116)
!12975 = !DILocation(line: 39, column: 23, scope: !12966)
!12976 = !DILocalVariable(name: "desc", arg: 2, scope: !12966, file: !12967, line: 39, type: !7)
!12977 = !DILocation(line: 39, column: 33, scope: !12966)
!12978 = !DILocalVariable(name: "mode", arg: 3, scope: !12966, file: !12967, line: 39, type: !239)
!12979 = !DILocation(line: 39, column: 46, scope: !12966)
!12980 = !DILocalVariable(name: "ctx", scope: !12966, file: !12967, line: 41, type: !12968)
!12981 = !DILocation(line: 41, column: 29, scope: !12966)
!12982 = !DILocalVariable(name: "ret", scope: !12966, file: !12967, line: 42, type: !7)
!12983 = !DILocation(line: 42, column: 7, scope: !12966)
!12984 = !DILocation(line: 44, column: 3, scope: !12966)
!12985 = !DILocation(line: 45, column: 14, scope: !12966)
!12986 = !DILocation(line: 45, column: 7, scope: !12966)
!12987 = !DILocation(line: 45, column: 12, scope: !12966)
!12988 = !DILocation(line: 46, column: 32, scope: !12966)
!12989 = !DILocation(line: 46, column: 38, scope: !12966)
!12990 = !DILocation(line: 46, column: 9, scope: !12966)
!12991 = !DILocation(line: 46, column: 7, scope: !12966)
!12992 = !DILocation(line: 47, column: 3, scope: !12966)
!12993 = !DILocation(line: 48, column: 10, scope: !12966)
!12994 = !DILocation(line: 48, column: 3, scope: !12966)
!12995 = distinct !DISubprogram(name: "clone_quoting_options", scope: !791, file: !791, line: 122, type: !12996, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!12996 = !DISubroutineType(types: !12997)
!12997 = !{!789, !789}
!12998 = !DILocalVariable(name: "o", arg: 1, scope: !12995, file: !791, line: 122, type: !789)
!12999 = !DILocation(line: 122, column: 48, scope: !12995)
!13000 = !DILocalVariable(name: "e", scope: !12995, file: !791, line: 124, type: !7)
!13001 = !DILocation(line: 124, column: 7, scope: !12995)
!13002 = !DILocation(line: 124, column: 11, scope: !12995)
!13003 = !DILocalVariable(name: "p", scope: !12995, file: !791, line: 125, type: !789)
!13004 = !DILocation(line: 125, column: 27, scope: !12995)
!13005 = !DILocation(line: 125, column: 40, scope: !12995)
!13006 = !DILocation(line: 125, column: 44, scope: !12995)
!13007 = !DILocation(line: 125, column: 31, scope: !12995)
!13008 = !DILocation(line: 127, column: 11, scope: !12995)
!13009 = !DILocation(line: 127, column: 3, scope: !12995)
!13010 = !DILocation(line: 127, column: 9, scope: !12995)
!13011 = !DILocation(line: 128, column: 10, scope: !12995)
!13012 = !DILocation(line: 128, column: 3, scope: !12995)
!13013 = distinct !DISubprogram(name: "get_quoting_style", scope: !791, file: !791, line: 133, type: !13014, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!13014 = !DISubroutineType(types: !13015)
!13015 = !{!771, !800}
!13016 = !DILocalVariable(name: "o", arg: 1, scope: !13013, file: !791, line: 133, type: !800)
!13017 = !DILocation(line: 133, column: 50, scope: !13013)
!13018 = !DILocation(line: 135, column: 11, scope: !13013)
!13019 = !DILocation(line: 135, column: 15, scope: !13013)
!13020 = !DILocation(line: 135, column: 46, scope: !13013)
!13021 = !DILocation(line: 135, column: 3, scope: !13013)
!13022 = distinct !DISubprogram(name: "set_quoting_style", scope: !791, file: !791, line: 141, type: !13023, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{null, !789, !771}
!13025 = !DILocalVariable(name: "o", arg: 1, scope: !13022, file: !791, line: 141, type: !789)
!13026 = !DILocation(line: 141, column: 44, scope: !13022)
!13027 = !DILocalVariable(name: "s", arg: 2, scope: !13022, file: !791, line: 141, type: !771)
!13028 = !DILocation(line: 141, column: 66, scope: !13022)
!13029 = !DILocation(line: 143, column: 47, scope: !13022)
!13030 = !DILocation(line: 143, column: 4, scope: !13022)
!13031 = !DILocation(line: 143, column: 8, scope: !13022)
!13032 = !DILocation(line: 143, column: 39, scope: !13022)
!13033 = !DILocation(line: 143, column: 45, scope: !13022)
!13034 = !DILocation(line: 144, column: 1, scope: !13022)
!13035 = distinct !DISubprogram(name: "set_char_quoting", scope: !791, file: !791, line: 152, type: !13036, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!13036 = !DISubroutineType(types: !13037)
!13037 = !{!7, !789, !10, !7}
!13038 = !DILocalVariable(name: "o", arg: 1, scope: !13035, file: !791, line: 152, type: !789)
!13039 = !DILocation(line: 152, column: 43, scope: !13035)
!13040 = !DILocalVariable(name: "c", arg: 2, scope: !13035, file: !791, line: 152, type: !10)
!13041 = !DILocation(line: 152, column: 51, scope: !13035)
!13042 = !DILocalVariable(name: "i", arg: 3, scope: !13035, file: !791, line: 152, type: !7)
!13043 = !DILocation(line: 152, column: 58, scope: !13035)
!13044 = !DILocalVariable(name: "uc", scope: !13035, file: !791, line: 154, type: !450)
!13045 = !DILocation(line: 154, column: 17, scope: !13035)
!13046 = !DILocation(line: 154, column: 22, scope: !13035)
!13047 = !DILocalVariable(name: "p", scope: !13035, file: !791, line: 155, type: !799)
!13048 = !DILocation(line: 155, column: 17, scope: !13035)
!13049 = !DILocation(line: 156, column: 6, scope: !13035)
!13050 = !DILocation(line: 156, column: 10, scope: !13035)
!13051 = !DILocation(line: 156, column: 41, scope: !13035)
!13052 = !DILocation(line: 156, column: 5, scope: !13035)
!13053 = !DILocation(line: 156, column: 59, scope: !13035)
!13054 = !DILocation(line: 156, column: 62, scope: !13035)
!13055 = !DILocation(line: 156, column: 57, scope: !13035)
!13056 = !DILocalVariable(name: "shift", scope: !13035, file: !791, line: 157, type: !7)
!13057 = !DILocation(line: 157, column: 7, scope: !13035)
!13058 = !DILocation(line: 157, column: 15, scope: !13035)
!13059 = !DILocation(line: 157, column: 18, scope: !13035)
!13060 = !DILocalVariable(name: "r", scope: !13035, file: !791, line: 158, type: !7)
!13061 = !DILocation(line: 158, column: 7, scope: !13035)
!13062 = !DILocation(line: 158, column: 13, scope: !13035)
!13063 = !DILocation(line: 158, column: 12, scope: !13035)
!13064 = !DILocation(line: 158, column: 18, scope: !13035)
!13065 = !DILocation(line: 158, column: 15, scope: !13035)
!13066 = !DILocation(line: 158, column: 25, scope: !13035)
!13067 = !DILocation(line: 159, column: 11, scope: !13035)
!13068 = !DILocation(line: 159, column: 13, scope: !13035)
!13069 = !DILocation(line: 159, column: 20, scope: !13035)
!13070 = !DILocation(line: 159, column: 18, scope: !13035)
!13071 = !DILocation(line: 159, column: 26, scope: !13035)
!13072 = !DILocation(line: 159, column: 23, scope: !13035)
!13073 = !DILocation(line: 159, column: 4, scope: !13035)
!13074 = !DILocation(line: 159, column: 6, scope: !13035)
!13075 = !DILocation(line: 160, column: 10, scope: !13035)
!13076 = !DILocation(line: 160, column: 3, scope: !13035)
!13077 = distinct !DISubprogram(name: "set_quoting_flags", scope: !791, file: !791, line: 168, type: !13078, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!13078 = !DISubroutineType(types: !13079)
!13079 = !{!7, !789, !7}
!13080 = !DILocalVariable(name: "o", arg: 1, scope: !13077, file: !791, line: 168, type: !789)
!13081 = !DILocation(line: 168, column: 44, scope: !13077)
!13082 = !DILocalVariable(name: "i", arg: 2, scope: !13077, file: !791, line: 168, type: !7)
!13083 = !DILocation(line: 168, column: 51, scope: !13077)
!13084 = !DILocalVariable(name: "r", scope: !13077, file: !791, line: 170, type: !7)
!13085 = !DILocation(line: 170, column: 7, scope: !13077)
!13086 = !DILocation(line: 171, column: 8, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13077, file: !791, line: 171, column: 7)
!13088 = !DILocation(line: 171, column: 7, scope: !13077)
!13089 = !DILocation(line: 172, column: 7, scope: !13087)
!13090 = !DILocation(line: 172, column: 5, scope: !13087)
!13091 = !DILocation(line: 173, column: 7, scope: !13077)
!13092 = !DILocation(line: 173, column: 10, scope: !13077)
!13093 = !DILocation(line: 173, column: 5, scope: !13077)
!13094 = !DILocation(line: 174, column: 14, scope: !13077)
!13095 = !DILocation(line: 174, column: 3, scope: !13077)
!13096 = !DILocation(line: 174, column: 6, scope: !13077)
!13097 = !DILocation(line: 174, column: 12, scope: !13077)
!13098 = !DILocation(line: 175, column: 10, scope: !13077)
!13099 = !DILocation(line: 175, column: 3, scope: !13077)
!13100 = distinct !DISubprogram(name: "set_custom_quoting", scope: !791, file: !791, line: 179, type: !13101, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!13101 = !DISubroutineType(types: !13102)
!13102 = !{null, !789, !116, !116}
!13103 = !DILocalVariable(name: "o", arg: 1, scope: !13100, file: !791, line: 179, type: !789)
!13104 = !DILocation(line: 179, column: 45, scope: !13100)
!13105 = !DILocalVariable(name: "left_quote", arg: 2, scope: !13100, file: !791, line: 180, type: !116)
!13106 = !DILocation(line: 180, column: 33, scope: !13100)
!13107 = !DILocalVariable(name: "right_quote", arg: 3, scope: !13100, file: !791, line: 180, type: !116)
!13108 = !DILocation(line: 180, column: 57, scope: !13100)
!13109 = !DILocation(line: 182, column: 8, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13100, file: !791, line: 182, column: 7)
!13111 = !DILocation(line: 182, column: 7, scope: !13100)
!13112 = !DILocation(line: 183, column: 7, scope: !13110)
!13113 = !DILocation(line: 183, column: 5, scope: !13110)
!13114 = !DILocation(line: 184, column: 3, scope: !13100)
!13115 = !DILocation(line: 184, column: 6, scope: !13100)
!13116 = !DILocation(line: 184, column: 12, scope: !13100)
!13117 = !DILocation(line: 185, column: 8, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13100, file: !791, line: 185, column: 7)
!13119 = !DILocation(line: 185, column: 19, scope: !13118)
!13120 = !DILocation(line: 185, column: 23, scope: !13118)
!13121 = !DILocation(line: 185, column: 7, scope: !13100)
!13122 = !DILocation(line: 186, column: 5, scope: !13118)
!13123 = !DILocation(line: 187, column: 19, scope: !13100)
!13124 = !DILocation(line: 187, column: 3, scope: !13100)
!13125 = !DILocation(line: 187, column: 6, scope: !13100)
!13126 = !DILocation(line: 187, column: 17, scope: !13100)
!13127 = !DILocation(line: 188, column: 20, scope: !13100)
!13128 = !DILocation(line: 188, column: 3, scope: !13100)
!13129 = !DILocation(line: 188, column: 6, scope: !13100)
!13130 = !DILocation(line: 188, column: 18, scope: !13100)
!13131 = !DILocation(line: 189, column: 1, scope: !13100)
!13132 = distinct !DISubprogram(name: "quotearg_buffer", scope: !791, file: !791, line: 784, type: !13133, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!13133 = !DISubroutineType(types: !13134)
!13134 = !{!55, !9, !55, !116, !55, !800}
!13135 = !DILocalVariable(name: "buffer", arg: 1, scope: !13132, file: !791, line: 784, type: !9)
!13136 = !DILocation(line: 784, column: 24, scope: !13132)
!13137 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13132, file: !791, line: 784, type: !55)
!13138 = !DILocation(line: 784, column: 39, scope: !13132)
!13139 = !DILocalVariable(name: "arg", arg: 3, scope: !13132, file: !791, line: 785, type: !116)
!13140 = !DILocation(line: 785, column: 30, scope: !13132)
!13141 = !DILocalVariable(name: "argsize", arg: 4, scope: !13132, file: !791, line: 785, type: !55)
!13142 = !DILocation(line: 785, column: 42, scope: !13132)
!13143 = !DILocalVariable(name: "o", arg: 5, scope: !13132, file: !791, line: 786, type: !800)
!13144 = !DILocation(line: 786, column: 48, scope: !13132)
!13145 = !DILocalVariable(name: "p", scope: !13132, file: !791, line: 788, type: !800)
!13146 = !DILocation(line: 788, column: 33, scope: !13132)
!13147 = !DILocation(line: 788, column: 37, scope: !13132)
!13148 = !DILocation(line: 788, column: 41, scope: !13132)
!13149 = !DILocalVariable(name: "e", scope: !13132, file: !791, line: 789, type: !7)
!13150 = !DILocation(line: 789, column: 7, scope: !13132)
!13151 = !DILocation(line: 789, column: 11, scope: !13132)
!13152 = !DILocalVariable(name: "r", scope: !13132, file: !791, line: 790, type: !55)
!13153 = !DILocation(line: 790, column: 10, scope: !13132)
!13154 = !DILocation(line: 790, column: 40, scope: !13132)
!13155 = !DILocation(line: 790, column: 48, scope: !13132)
!13156 = !DILocation(line: 790, column: 60, scope: !13132)
!13157 = !DILocation(line: 790, column: 65, scope: !13132)
!13158 = !DILocation(line: 791, column: 40, scope: !13132)
!13159 = !DILocation(line: 791, column: 43, scope: !13132)
!13160 = !DILocation(line: 791, column: 50, scope: !13132)
!13161 = !DILocation(line: 791, column: 53, scope: !13132)
!13162 = !DILocation(line: 791, column: 60, scope: !13132)
!13163 = !DILocation(line: 791, column: 63, scope: !13132)
!13164 = !DILocation(line: 792, column: 40, scope: !13132)
!13165 = !DILocation(line: 792, column: 43, scope: !13132)
!13166 = !DILocation(line: 792, column: 55, scope: !13132)
!13167 = !DILocation(line: 792, column: 58, scope: !13132)
!13168 = !DILocation(line: 790, column: 14, scope: !13132)
!13169 = !DILocation(line: 793, column: 11, scope: !13132)
!13170 = !DILocation(line: 793, column: 3, scope: !13132)
!13171 = !DILocation(line: 793, column: 9, scope: !13132)
!13172 = !DILocation(line: 794, column: 10, scope: !13132)
!13173 = !DILocation(line: 794, column: 3, scope: !13132)
!13174 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !791, file: !791, line: 256, type: !13175, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !768, retainedNodes: !216)
!13175 = !DISubroutineType(types: !13176)
!13176 = !{!55, !9, !55, !116, !55, !771, !7, !823, !116, !116}
!13177 = !DILocalVariable(name: "buffer", arg: 1, scope: !13174, file: !791, line: 256, type: !9)
!13178 = !DILocation(line: 256, column: 33, scope: !13174)
!13179 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13174, file: !791, line: 256, type: !55)
!13180 = !DILocation(line: 256, column: 48, scope: !13174)
!13181 = !DILocalVariable(name: "arg", arg: 3, scope: !13174, file: !791, line: 257, type: !116)
!13182 = !DILocation(line: 257, column: 39, scope: !13174)
!13183 = !DILocalVariable(name: "argsize", arg: 4, scope: !13174, file: !791, line: 257, type: !55)
!13184 = !DILocation(line: 257, column: 51, scope: !13174)
!13185 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !13174, file: !791, line: 258, type: !771)
!13186 = !DILocation(line: 258, column: 46, scope: !13174)
!13187 = !DILocalVariable(name: "flags", arg: 6, scope: !13174, file: !791, line: 258, type: !7)
!13188 = !DILocation(line: 258, column: 65, scope: !13174)
!13189 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !13174, file: !791, line: 259, type: !823)
!13190 = !DILocation(line: 259, column: 47, scope: !13174)
!13191 = !DILocalVariable(name: "left_quote", arg: 8, scope: !13174, file: !791, line: 260, type: !116)
!13192 = !DILocation(line: 260, column: 39, scope: !13174)
!13193 = !DILocalVariable(name: "right_quote", arg: 9, scope: !13174, file: !791, line: 261, type: !116)
!13194 = !DILocation(line: 261, column: 39, scope: !13174)
!13195 = !DILocalVariable(name: "i", scope: !13174, file: !791, line: 263, type: !55)
!13196 = !DILocation(line: 263, column: 10, scope: !13174)
!13197 = !DILocalVariable(name: "len", scope: !13174, file: !791, line: 264, type: !55)
!13198 = !DILocation(line: 264, column: 10, scope: !13174)
!13199 = !DILocalVariable(name: "orig_buffersize", scope: !13174, file: !791, line: 265, type: !55)
!13200 = !DILocation(line: 265, column: 10, scope: !13174)
!13201 = !DILocalVariable(name: "quote_string", scope: !13174, file: !791, line: 266, type: !116)
!13202 = !DILocation(line: 266, column: 15, scope: !13174)
!13203 = !DILocalVariable(name: "quote_string_len", scope: !13174, file: !791, line: 267, type: !55)
!13204 = !DILocation(line: 267, column: 10, scope: !13174)
!13205 = !DILocalVariable(name: "backslash_escapes", scope: !13174, file: !791, line: 268, type: !142)
!13206 = !DILocation(line: 268, column: 8, scope: !13174)
!13207 = !DILocalVariable(name: "unibyte_locale", scope: !13174, file: !791, line: 269, type: !142)
!13208 = !DILocation(line: 269, column: 8, scope: !13174)
!13209 = !DILocation(line: 269, column: 25, scope: !13174)
!13210 = !DILocation(line: 269, column: 36, scope: !13174)
!13211 = !DILocalVariable(name: "elide_outer_quotes", scope: !13174, file: !791, line: 270, type: !142)
!13212 = !DILocation(line: 270, column: 8, scope: !13174)
!13213 = !DILocation(line: 270, column: 30, scope: !13174)
!13214 = !DILocation(line: 270, column: 36, scope: !13174)
!13215 = !DILocation(line: 270, column: 61, scope: !13174)
!13216 = !DILocalVariable(name: "pending_shell_escape_end", scope: !13174, file: !791, line: 271, type: !142)
!13217 = !DILocation(line: 271, column: 8, scope: !13174)
!13218 = !DILocalVariable(name: "encountered_single_quote", scope: !13174, file: !791, line: 272, type: !142)
!13219 = !DILocation(line: 272, column: 8, scope: !13174)
!13220 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !13174, file: !791, line: 273, type: !142)
!13221 = !DILocation(line: 273, column: 8, scope: !13174)
!13222 = !DILocation(line: 273, column: 3, scope: !13174)
!13223 = !DILabel(scope: !13174, name: "process_input", file: !791, line: 314)
!13224 = !DILocation(line: 314, column: 2, scope: !13174)
!13225 = !DILocation(line: 316, column: 11, scope: !13174)
!13226 = !DILocation(line: 316, column: 3, scope: !13174)
!13227 = !DILocation(line: 319, column: 21, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13174, file: !791, line: 317, column: 5)
!13229 = !DILocation(line: 320, column: 26, scope: !13228)
!13230 = !DILocation(line: 321, column: 7, scope: !13228)
!13231 = !DILocation(line: 323, column: 12, scope: !13232)
!13232 = distinct !DILexicalBlock(scope: !13228, file: !791, line: 323, column: 11)
!13233 = !DILocation(line: 323, column: 11, scope: !13228)
!13234 = !DILocation(line: 324, column: 9, scope: !13232)
!13235 = !DILocation(line: 324, column: 9, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13237, file: !791, line: 324, column: 9)
!13237 = distinct !DILexicalBlock(scope: !13232, file: !791, line: 324, column: 9)
!13238 = !DILocation(line: 324, column: 9, scope: !13237)
!13239 = !DILocation(line: 325, column: 25, scope: !13228)
!13240 = !DILocation(line: 326, column: 20, scope: !13228)
!13241 = !DILocation(line: 327, column: 24, scope: !13228)
!13242 = !DILocation(line: 328, column: 7, scope: !13228)
!13243 = !DILocation(line: 331, column: 25, scope: !13228)
!13244 = !DILocation(line: 332, column: 26, scope: !13228)
!13245 = !DILocation(line: 333, column: 7, scope: !13228)
!13246 = !DILocation(line: 339, column: 13, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13248, file: !791, line: 339, column: 13)
!13248 = distinct !DILexicalBlock(scope: !13228, file: !791, line: 338, column: 7)
!13249 = !DILocation(line: 339, column: 27, scope: !13247)
!13250 = !DILocation(line: 339, column: 13, scope: !13248)
!13251 = !DILocation(line: 362, column: 50, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13247, file: !791, line: 340, column: 11)
!13253 = !DILocation(line: 362, column: 26, scope: !13252)
!13254 = !DILocation(line: 362, column: 24, scope: !13252)
!13255 = !DILocation(line: 363, column: 51, scope: !13252)
!13256 = !DILocation(line: 363, column: 27, scope: !13252)
!13257 = !DILocation(line: 363, column: 25, scope: !13252)
!13258 = !DILocation(line: 364, column: 11, scope: !13252)
!13259 = !DILocation(line: 365, column: 14, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13248, file: !791, line: 365, column: 13)
!13261 = !DILocation(line: 365, column: 13, scope: !13248)
!13262 = !DILocation(line: 366, column: 31, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13260, file: !791, line: 366, column: 11)
!13264 = !DILocation(line: 366, column: 29, scope: !13263)
!13265 = !DILocation(line: 366, column: 16, scope: !13263)
!13266 = !DILocation(line: 366, column: 44, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13263, file: !791, line: 366, column: 11)
!13268 = !DILocation(line: 366, column: 43, scope: !13267)
!13269 = !DILocation(line: 366, column: 11, scope: !13263)
!13270 = !DILocation(line: 367, column: 13, scope: !13267)
!13271 = !DILocation(line: 367, column: 13, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13273, file: !791, line: 367, column: 13)
!13273 = distinct !DILexicalBlock(scope: !13267, file: !791, line: 367, column: 13)
!13274 = !DILocation(line: 367, column: 13, scope: !13273)
!13275 = !DILocation(line: 366, column: 70, scope: !13267)
!13276 = !DILocation(line: 366, column: 11, scope: !13267)
!13277 = distinct !{!13277, !13269, !13278}
!13278 = !DILocation(line: 367, column: 13, scope: !13263)
!13279 = !DILocation(line: 368, column: 27, scope: !13248)
!13280 = !DILocation(line: 369, column: 24, scope: !13248)
!13281 = !DILocation(line: 369, column: 22, scope: !13248)
!13282 = !DILocation(line: 370, column: 36, scope: !13248)
!13283 = !DILocation(line: 370, column: 28, scope: !13248)
!13284 = !DILocation(line: 370, column: 26, scope: !13248)
!13285 = !DILocation(line: 372, column: 7, scope: !13228)
!13286 = !DILocation(line: 375, column: 25, scope: !13228)
!13287 = !DILocation(line: 376, column: 7, scope: !13228)
!13288 = !DILocation(line: 378, column: 26, scope: !13228)
!13289 = !DILocation(line: 379, column: 7, scope: !13228)
!13290 = !DILocation(line: 381, column: 12, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13228, file: !791, line: 381, column: 11)
!13292 = !DILocation(line: 381, column: 11, scope: !13228)
!13293 = !DILocation(line: 382, column: 27, scope: !13291)
!13294 = !DILocation(line: 382, column: 9, scope: !13291)
!13295 = !DILocation(line: 383, column: 7, scope: !13228)
!13296 = !DILocation(line: 385, column: 21, scope: !13228)
!13297 = !DILocation(line: 386, column: 12, scope: !13298)
!13298 = distinct !DILexicalBlock(scope: !13228, file: !791, line: 386, column: 11)
!13299 = !DILocation(line: 386, column: 11, scope: !13228)
!13300 = !DILocation(line: 387, column: 9, scope: !13298)
!13301 = !DILocation(line: 387, column: 9, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13303, file: !791, line: 387, column: 9)
!13303 = distinct !DILexicalBlock(scope: !13298, file: !791, line: 387, column: 9)
!13304 = !DILocation(line: 387, column: 9, scope: !13303)
!13305 = !DILocation(line: 388, column: 20, scope: !13228)
!13306 = !DILocation(line: 389, column: 24, scope: !13228)
!13307 = !DILocation(line: 390, column: 7, scope: !13228)
!13308 = !DILocation(line: 393, column: 26, scope: !13228)
!13309 = !DILocation(line: 394, column: 7, scope: !13228)
!13310 = !DILocation(line: 397, column: 7, scope: !13228)
!13311 = !DILocation(line: 400, column: 10, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13174, file: !791, line: 400, column: 3)
!13313 = !DILocation(line: 400, column: 8, scope: !13312)
!13314 = !DILocation(line: 400, column: 19, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13312, file: !791, line: 400, column: 3)
!13316 = !DILocation(line: 400, column: 27, scope: !13315)
!13317 = !DILocation(line: 400, column: 41, scope: !13315)
!13318 = !DILocation(line: 400, column: 45, scope: !13315)
!13319 = !DILocation(line: 400, column: 48, scope: !13315)
!13320 = !DILocation(line: 400, column: 58, scope: !13315)
!13321 = !DILocation(line: 400, column: 63, scope: !13315)
!13322 = !DILocation(line: 400, column: 60, scope: !13315)
!13323 = !DILocation(line: 400, column: 16, scope: !13315)
!13324 = !DILocation(line: 400, column: 3, scope: !13312)
!13325 = !DILocalVariable(name: "c", scope: !13326, file: !791, line: 402, type: !450)
!13326 = distinct !DILexicalBlock(scope: !13315, file: !791, line: 401, column: 5)
!13327 = !DILocation(line: 402, column: 21, scope: !13326)
!13328 = !DILocalVariable(name: "esc", scope: !13326, file: !791, line: 403, type: !450)
!13329 = !DILocation(line: 403, column: 21, scope: !13326)
!13330 = !DILocalVariable(name: "is_right_quote", scope: !13326, file: !791, line: 404, type: !142)
!13331 = !DILocation(line: 404, column: 12, scope: !13326)
!13332 = !DILocalVariable(name: "escaping", scope: !13326, file: !791, line: 405, type: !142)
!13333 = !DILocation(line: 405, column: 12, scope: !13326)
!13334 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !13326, file: !791, line: 406, type: !142)
!13335 = !DILocation(line: 406, column: 12, scope: !13326)
!13336 = !DILocation(line: 408, column: 11, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13326, file: !791, line: 408, column: 11)
!13338 = !DILocation(line: 409, column: 11, scope: !13337)
!13339 = !DILocation(line: 409, column: 14, scope: !13337)
!13340 = !DILocation(line: 409, column: 28, scope: !13337)
!13341 = !DILocation(line: 410, column: 11, scope: !13337)
!13342 = !DILocation(line: 410, column: 14, scope: !13337)
!13343 = !DILocation(line: 411, column: 11, scope: !13337)
!13344 = !DILocation(line: 411, column: 15, scope: !13337)
!13345 = !DILocation(line: 411, column: 19, scope: !13337)
!13346 = !DILocation(line: 411, column: 17, scope: !13337)
!13347 = !DILocation(line: 412, column: 19, scope: !13337)
!13348 = !DILocation(line: 412, column: 27, scope: !13337)
!13349 = !DILocation(line: 412, column: 39, scope: !13337)
!13350 = !DILocation(line: 412, column: 46, scope: !13337)
!13351 = !DILocation(line: 412, column: 44, scope: !13337)
!13352 = !DILocation(line: 416, column: 40, scope: !13337)
!13353 = !DILocation(line: 416, column: 32, scope: !13337)
!13354 = !DILocation(line: 416, column: 30, scope: !13337)
!13355 = !DILocation(line: 416, column: 48, scope: !13337)
!13356 = !DILocation(line: 412, column: 15, scope: !13337)
!13357 = !DILocation(line: 417, column: 11, scope: !13337)
!13358 = !DILocation(line: 417, column: 22, scope: !13337)
!13359 = !DILocation(line: 417, column: 28, scope: !13337)
!13360 = !DILocation(line: 417, column: 26, scope: !13337)
!13361 = !DILocation(line: 417, column: 31, scope: !13337)
!13362 = !DILocation(line: 417, column: 45, scope: !13337)
!13363 = !DILocation(line: 417, column: 14, scope: !13337)
!13364 = !DILocation(line: 417, column: 63, scope: !13337)
!13365 = !DILocation(line: 408, column: 11, scope: !13326)
!13366 = !DILocation(line: 419, column: 15, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !791, line: 419, column: 15)
!13368 = distinct !DILexicalBlock(scope: !13337, file: !791, line: 418, column: 9)
!13369 = !DILocation(line: 419, column: 15, scope: !13368)
!13370 = !DILocation(line: 420, column: 13, scope: !13367)
!13371 = !DILocation(line: 421, column: 26, scope: !13368)
!13372 = !DILocation(line: 422, column: 9, scope: !13368)
!13373 = !DILocation(line: 424, column: 11, scope: !13326)
!13374 = !DILocation(line: 424, column: 15, scope: !13326)
!13375 = !DILocation(line: 424, column: 9, scope: !13326)
!13376 = !DILocation(line: 425, column: 15, scope: !13326)
!13377 = !DILocation(line: 425, column: 7, scope: !13326)
!13378 = !DILocation(line: 428, column: 15, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 428, column: 15)
!13380 = distinct !DILexicalBlock(scope: !13326, file: !791, line: 426, column: 9)
!13381 = !DILocation(line: 428, column: 15, scope: !13380)
!13382 = !DILocation(line: 430, column: 15, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13379, file: !791, line: 429, column: 13)
!13384 = !DILocation(line: 430, column: 15, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !791, line: 430, column: 15)
!13386 = distinct !DILexicalBlock(scope: !13383, file: !791, line: 430, column: 15)
!13387 = !DILocation(line: 430, column: 15, scope: !13386)
!13388 = !DILocation(line: 430, column: 15, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13386, file: !791, line: 430, column: 15)
!13390 = !DILocation(line: 430, column: 15, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13389, file: !791, line: 430, column: 15)
!13392 = !DILocation(line: 430, column: 15, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13394, file: !791, line: 430, column: 15)
!13394 = distinct !DILexicalBlock(scope: !13391, file: !791, line: 430, column: 15)
!13395 = !DILocation(line: 430, column: 15, scope: !13394)
!13396 = !DILocation(line: 430, column: 15, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13398, file: !791, line: 430, column: 15)
!13398 = distinct !DILexicalBlock(scope: !13391, file: !791, line: 430, column: 15)
!13399 = !DILocation(line: 430, column: 15, scope: !13398)
!13400 = !DILocation(line: 430, column: 15, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13402, file: !791, line: 430, column: 15)
!13402 = distinct !DILexicalBlock(scope: !13391, file: !791, line: 430, column: 15)
!13403 = !DILocation(line: 430, column: 15, scope: !13402)
!13404 = !DILocation(line: 430, column: 15, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13406, file: !791, line: 430, column: 15)
!13406 = distinct !DILexicalBlock(scope: !13386, file: !791, line: 430, column: 15)
!13407 = !DILocation(line: 430, column: 15, scope: !13406)
!13408 = !DILocation(line: 437, column: 19, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13383, file: !791, line: 437, column: 19)
!13410 = !DILocation(line: 437, column: 33, scope: !13409)
!13411 = !DILocation(line: 438, column: 19, scope: !13409)
!13412 = !DILocation(line: 438, column: 22, scope: !13409)
!13413 = !DILocation(line: 438, column: 24, scope: !13409)
!13414 = !DILocation(line: 438, column: 30, scope: !13409)
!13415 = !DILocation(line: 438, column: 28, scope: !13409)
!13416 = !DILocation(line: 438, column: 38, scope: !13409)
!13417 = !DILocation(line: 438, column: 48, scope: !13409)
!13418 = !DILocation(line: 438, column: 52, scope: !13409)
!13419 = !DILocation(line: 438, column: 54, scope: !13409)
!13420 = !DILocation(line: 438, column: 45, scope: !13409)
!13421 = !DILocation(line: 438, column: 59, scope: !13409)
!13422 = !DILocation(line: 438, column: 62, scope: !13409)
!13423 = !DILocation(line: 438, column: 66, scope: !13409)
!13424 = !DILocation(line: 438, column: 68, scope: !13409)
!13425 = !DILocation(line: 438, column: 73, scope: !13409)
!13426 = !DILocation(line: 437, column: 19, scope: !13383)
!13427 = !DILocation(line: 440, column: 19, scope: !13428)
!13428 = distinct !DILexicalBlock(scope: !13409, file: !791, line: 439, column: 17)
!13429 = !DILocation(line: 440, column: 19, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !791, line: 440, column: 19)
!13431 = distinct !DILexicalBlock(scope: !13428, file: !791, line: 440, column: 19)
!13432 = !DILocation(line: 440, column: 19, scope: !13431)
!13433 = !DILocation(line: 441, column: 19, scope: !13428)
!13434 = !DILocation(line: 441, column: 19, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13436, file: !791, line: 441, column: 19)
!13436 = distinct !DILexicalBlock(scope: !13428, file: !791, line: 441, column: 19)
!13437 = !DILocation(line: 441, column: 19, scope: !13436)
!13438 = !DILocation(line: 442, column: 17, scope: !13428)
!13439 = !DILocation(line: 443, column: 17, scope: !13383)
!13440 = !DILocation(line: 448, column: 13, scope: !13383)
!13441 = !DILocation(line: 449, column: 20, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13379, file: !791, line: 449, column: 20)
!13443 = !DILocation(line: 449, column: 26, scope: !13442)
!13444 = !DILocation(line: 449, column: 20, scope: !13379)
!13445 = !DILocation(line: 450, column: 13, scope: !13442)
!13446 = !DILocation(line: 451, column: 11, scope: !13380)
!13447 = !DILocation(line: 454, column: 19, scope: !13380)
!13448 = !DILocation(line: 454, column: 11, scope: !13380)
!13449 = !DILocation(line: 457, column: 19, scope: !13450)
!13450 = distinct !DILexicalBlock(scope: !13451, file: !791, line: 457, column: 19)
!13451 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 455, column: 13)
!13452 = !DILocation(line: 457, column: 19, scope: !13451)
!13453 = !DILocation(line: 458, column: 17, scope: !13450)
!13454 = !DILocation(line: 459, column: 15, scope: !13451)
!13455 = !DILocation(line: 462, column: 20, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13451, file: !791, line: 462, column: 19)
!13457 = !DILocation(line: 462, column: 26, scope: !13456)
!13458 = !DILocation(line: 463, column: 19, scope: !13456)
!13459 = !DILocation(line: 463, column: 22, scope: !13456)
!13460 = !DILocation(line: 463, column: 24, scope: !13456)
!13461 = !DILocation(line: 463, column: 30, scope: !13456)
!13462 = !DILocation(line: 463, column: 28, scope: !13456)
!13463 = !DILocation(line: 463, column: 38, scope: !13456)
!13464 = !DILocation(line: 463, column: 41, scope: !13456)
!13465 = !DILocation(line: 463, column: 45, scope: !13456)
!13466 = !DILocation(line: 463, column: 47, scope: !13456)
!13467 = !DILocation(line: 463, column: 52, scope: !13456)
!13468 = !DILocation(line: 462, column: 19, scope: !13451)
!13469 = !DILocation(line: 464, column: 25, scope: !13456)
!13470 = !DILocation(line: 464, column: 29, scope: !13456)
!13471 = !DILocation(line: 464, column: 31, scope: !13456)
!13472 = !DILocation(line: 464, column: 17, scope: !13456)
!13473 = !DILocation(line: 471, column: 25, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !791, line: 471, column: 25)
!13475 = distinct !DILexicalBlock(scope: !13456, file: !791, line: 465, column: 19)
!13476 = !DILocation(line: 471, column: 25, scope: !13475)
!13477 = !DILocation(line: 472, column: 23, scope: !13474)
!13478 = !DILocation(line: 473, column: 25, scope: !13475)
!13479 = !DILocation(line: 473, column: 29, scope: !13475)
!13480 = !DILocation(line: 473, column: 31, scope: !13475)
!13481 = !DILocation(line: 473, column: 23, scope: !13475)
!13482 = !DILocation(line: 474, column: 23, scope: !13475)
!13483 = !DILocation(line: 475, column: 21, scope: !13475)
!13484 = !DILocation(line: 475, column: 21, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13486, file: !791, line: 475, column: 21)
!13486 = distinct !DILexicalBlock(scope: !13475, file: !791, line: 475, column: 21)
!13487 = !DILocation(line: 475, column: 21, scope: !13486)
!13488 = !DILocation(line: 476, column: 21, scope: !13475)
!13489 = !DILocation(line: 476, column: 21, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13491, file: !791, line: 476, column: 21)
!13491 = distinct !DILexicalBlock(scope: !13475, file: !791, line: 476, column: 21)
!13492 = !DILocation(line: 476, column: 21, scope: !13491)
!13493 = !DILocation(line: 477, column: 21, scope: !13475)
!13494 = !DILocation(line: 477, column: 21, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13496, file: !791, line: 477, column: 21)
!13496 = distinct !DILexicalBlock(scope: !13475, file: !791, line: 477, column: 21)
!13497 = !DILocation(line: 477, column: 21, scope: !13496)
!13498 = !DILocation(line: 478, column: 21, scope: !13475)
!13499 = !DILocation(line: 478, column: 21, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13501, file: !791, line: 478, column: 21)
!13501 = distinct !DILexicalBlock(scope: !13475, file: !791, line: 478, column: 21)
!13502 = !DILocation(line: 478, column: 21, scope: !13501)
!13503 = !DILocation(line: 479, column: 21, scope: !13475)
!13504 = !DILocation(line: 482, column: 21, scope: !13475)
!13505 = !DILocation(line: 483, column: 19, scope: !13475)
!13506 = !DILocation(line: 484, column: 15, scope: !13451)
!13507 = !DILocation(line: 487, column: 15, scope: !13451)
!13508 = !DILocation(line: 489, column: 11, scope: !13380)
!13509 = !DILocation(line: 491, column: 24, scope: !13380)
!13510 = !DILocation(line: 491, column: 31, scope: !13380)
!13511 = !DILocation(line: 492, column: 24, scope: !13380)
!13512 = !DILocation(line: 492, column: 31, scope: !13380)
!13513 = !DILocation(line: 493, column: 24, scope: !13380)
!13514 = !DILocation(line: 493, column: 31, scope: !13380)
!13515 = !DILocation(line: 494, column: 24, scope: !13380)
!13516 = !DILocation(line: 494, column: 31, scope: !13380)
!13517 = !DILocation(line: 495, column: 24, scope: !13380)
!13518 = !DILocation(line: 495, column: 31, scope: !13380)
!13519 = !DILocation(line: 496, column: 24, scope: !13380)
!13520 = !DILocation(line: 496, column: 31, scope: !13380)
!13521 = !DILocation(line: 497, column: 24, scope: !13380)
!13522 = !DILocation(line: 497, column: 31, scope: !13380)
!13523 = !DILocation(line: 498, column: 26, scope: !13380)
!13524 = !DILocation(line: 498, column: 24, scope: !13380)
!13525 = !DILocation(line: 500, column: 15, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 500, column: 15)
!13527 = !DILocation(line: 500, column: 29, scope: !13526)
!13528 = !DILocation(line: 500, column: 15, scope: !13380)
!13529 = !DILocation(line: 502, column: 19, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13531, file: !791, line: 502, column: 19)
!13531 = distinct !DILexicalBlock(scope: !13526, file: !791, line: 501, column: 13)
!13532 = !DILocation(line: 502, column: 19, scope: !13531)
!13533 = !DILocation(line: 503, column: 17, scope: !13530)
!13534 = !DILocation(line: 504, column: 15, scope: !13531)
!13535 = !DILocation(line: 509, column: 15, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 509, column: 15)
!13537 = !DILocation(line: 509, column: 33, scope: !13536)
!13538 = !DILocation(line: 509, column: 36, scope: !13536)
!13539 = !DILocation(line: 509, column: 55, scope: !13536)
!13540 = !DILocation(line: 509, column: 58, scope: !13536)
!13541 = !DILocation(line: 509, column: 15, scope: !13380)
!13542 = !DILocation(line: 510, column: 13, scope: !13536)
!13543 = !DILabel(scope: !13380, name: "c_and_shell_escape", file: !791, line: 512)
!13544 = !DILocation(line: 512, column: 9, scope: !13380)
!13545 = !DILocation(line: 513, column: 15, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 513, column: 15)
!13547 = !DILocation(line: 513, column: 29, scope: !13546)
!13548 = !DILocation(line: 514, column: 15, scope: !13546)
!13549 = !DILocation(line: 514, column: 18, scope: !13546)
!13550 = !DILocation(line: 513, column: 15, scope: !13380)
!13551 = !DILocation(line: 515, column: 13, scope: !13546)
!13552 = !DILabel(scope: !13380, name: "c_escape", file: !791, line: 517)
!13553 = !DILocation(line: 517, column: 9, scope: !13380)
!13554 = !DILocation(line: 518, column: 15, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 518, column: 15)
!13556 = !DILocation(line: 518, column: 15, scope: !13380)
!13557 = !DILocation(line: 520, column: 19, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13555, file: !791, line: 519, column: 13)
!13559 = !DILocation(line: 520, column: 17, scope: !13558)
!13560 = !DILocation(line: 521, column: 15, scope: !13558)
!13561 = !DILocation(line: 523, column: 11, scope: !13380)
!13562 = !DILocation(line: 526, column: 18, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 526, column: 15)
!13564 = !DILocation(line: 526, column: 26, scope: !13563)
!13565 = !DILocation(line: 526, column: 15, scope: !13380)
!13566 = !DILocation(line: 526, column: 40, scope: !13563)
!13567 = !DILocation(line: 526, column: 47, scope: !13563)
!13568 = !DILocation(line: 526, column: 57, scope: !13563)
!13569 = !DILocation(line: 526, column: 65, scope: !13563)
!13570 = !DILocation(line: 527, column: 13, scope: !13563)
!13571 = !DILocation(line: 528, column: 11, scope: !13380)
!13572 = !DILocation(line: 530, column: 15, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 530, column: 15)
!13574 = !DILocation(line: 530, column: 17, scope: !13573)
!13575 = !DILocation(line: 530, column: 15, scope: !13380)
!13576 = !DILocation(line: 531, column: 13, scope: !13573)
!13577 = !DILocation(line: 532, column: 11, scope: !13380)
!13578 = !DILocation(line: 534, column: 36, scope: !13380)
!13579 = !DILocation(line: 535, column: 11, scope: !13380)
!13580 = !DILocation(line: 548, column: 15, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 548, column: 15)
!13582 = !DILocation(line: 548, column: 29, scope: !13581)
!13583 = !DILocation(line: 549, column: 15, scope: !13581)
!13584 = !DILocation(line: 549, column: 18, scope: !13581)
!13585 = !DILocation(line: 548, column: 15, scope: !13380)
!13586 = !DILocation(line: 550, column: 13, scope: !13581)
!13587 = !DILocation(line: 551, column: 11, scope: !13380)
!13588 = !DILocation(line: 554, column: 36, scope: !13380)
!13589 = !DILocation(line: 555, column: 36, scope: !13380)
!13590 = !DILocation(line: 556, column: 15, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 556, column: 15)
!13592 = !DILocation(line: 556, column: 29, scope: !13591)
!13593 = !DILocation(line: 556, column: 15, scope: !13380)
!13594 = !DILocation(line: 558, column: 19, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13596, file: !791, line: 558, column: 19)
!13596 = distinct !DILexicalBlock(scope: !13591, file: !791, line: 557, column: 13)
!13597 = !DILocation(line: 558, column: 19, scope: !13596)
!13598 = !DILocation(line: 559, column: 17, scope: !13595)
!13599 = !DILocation(line: 561, column: 19, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13596, file: !791, line: 561, column: 19)
!13601 = !DILocation(line: 561, column: 30, scope: !13600)
!13602 = !DILocation(line: 561, column: 35, scope: !13600)
!13603 = !DILocation(line: 561, column: 19, scope: !13596)
!13604 = !DILocation(line: 566, column: 37, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13600, file: !791, line: 562, column: 17)
!13606 = !DILocation(line: 566, column: 35, scope: !13605)
!13607 = !DILocation(line: 567, column: 30, scope: !13605)
!13608 = !DILocation(line: 568, column: 17, scope: !13605)
!13609 = !DILocation(line: 570, column: 15, scope: !13596)
!13610 = !DILocation(line: 570, column: 15, scope: !13611)
!13611 = distinct !DILexicalBlock(scope: !13612, file: !791, line: 570, column: 15)
!13612 = distinct !DILexicalBlock(scope: !13596, file: !791, line: 570, column: 15)
!13613 = !DILocation(line: 570, column: 15, scope: !13612)
!13614 = !DILocation(line: 571, column: 15, scope: !13596)
!13615 = !DILocation(line: 571, column: 15, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13617, file: !791, line: 571, column: 15)
!13617 = distinct !DILexicalBlock(scope: !13596, file: !791, line: 571, column: 15)
!13618 = !DILocation(line: 571, column: 15, scope: !13617)
!13619 = !DILocation(line: 572, column: 15, scope: !13596)
!13620 = !DILocation(line: 572, column: 15, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13622, file: !791, line: 572, column: 15)
!13622 = distinct !DILexicalBlock(scope: !13596, file: !791, line: 572, column: 15)
!13623 = !DILocation(line: 572, column: 15, scope: !13622)
!13624 = !DILocation(line: 573, column: 40, scope: !13596)
!13625 = !DILocation(line: 574, column: 13, scope: !13596)
!13626 = !DILocation(line: 575, column: 11, scope: !13380)
!13627 = !DILocation(line: 599, column: 36, scope: !13380)
!13628 = !DILocation(line: 600, column: 11, scope: !13380)
!13629 = !DILocalVariable(name: "m", scope: !13630, file: !791, line: 610, type: !55)
!13630 = distinct !DILexicalBlock(scope: !13380, file: !791, line: 608, column: 11)
!13631 = !DILocation(line: 610, column: 20, scope: !13630)
!13632 = !DILocalVariable(name: "printable", scope: !13630, file: !791, line: 612, type: !142)
!13633 = !DILocation(line: 612, column: 18, scope: !13630)
!13634 = !DILocation(line: 614, column: 17, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !791, line: 614, column: 17)
!13636 = !DILocation(line: 614, column: 17, scope: !13630)
!13637 = !DILocation(line: 616, column: 19, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13635, file: !791, line: 615, column: 15)
!13639 = !DILocation(line: 617, column: 29, scope: !13638)
!13640 = !DILocation(line: 617, column: 41, scope: !13638)
!13641 = !DILocation(line: 617, column: 27, scope: !13638)
!13642 = !DILocation(line: 618, column: 15, scope: !13638)
!13643 = !DILocalVariable(name: "mbstate", scope: !13644, file: !791, line: 621, type: !810)
!13644 = distinct !DILexicalBlock(scope: !13635, file: !791, line: 620, column: 15)
!13645 = !DILocation(line: 621, column: 27, scope: !13644)
!13646 = !DILocation(line: 622, column: 17, scope: !13644)
!13647 = !DILocation(line: 624, column: 19, scope: !13644)
!13648 = !DILocation(line: 625, column: 27, scope: !13644)
!13649 = !DILocation(line: 626, column: 21, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13644, file: !791, line: 626, column: 21)
!13651 = !DILocation(line: 626, column: 29, scope: !13650)
!13652 = !DILocation(line: 626, column: 21, scope: !13644)
!13653 = !DILocation(line: 627, column: 37, scope: !13650)
!13654 = !DILocation(line: 627, column: 29, scope: !13650)
!13655 = !DILocation(line: 627, column: 27, scope: !13650)
!13656 = !DILocation(line: 627, column: 19, scope: !13650)
!13657 = !DILocation(line: 629, column: 17, scope: !13644)
!13658 = !DILocalVariable(name: "w", scope: !13659, file: !791, line: 631, type: !822)
!13659 = distinct !DILexicalBlock(scope: !13644, file: !791, line: 630, column: 19)
!13660 = !DILocation(line: 631, column: 29, scope: !13659)
!13661 = !DILocalVariable(name: "bytes", scope: !13659, file: !791, line: 632, type: !55)
!13662 = !DILocation(line: 632, column: 28, scope: !13659)
!13663 = !DILocation(line: 632, column: 50, scope: !13659)
!13664 = !DILocation(line: 632, column: 54, scope: !13659)
!13665 = !DILocation(line: 632, column: 58, scope: !13659)
!13666 = !DILocation(line: 632, column: 56, scope: !13659)
!13667 = !DILocation(line: 633, column: 45, scope: !13659)
!13668 = !DILocation(line: 633, column: 56, scope: !13659)
!13669 = !DILocation(line: 633, column: 60, scope: !13659)
!13670 = !DILocation(line: 633, column: 58, scope: !13659)
!13671 = !DILocation(line: 633, column: 53, scope: !13659)
!13672 = !DILocation(line: 632, column: 36, scope: !13659)
!13673 = !DILocation(line: 634, column: 25, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13659, file: !791, line: 634, column: 25)
!13675 = !DILocation(line: 634, column: 31, scope: !13674)
!13676 = !DILocation(line: 634, column: 25, scope: !13659)
!13677 = !DILocation(line: 635, column: 23, scope: !13674)
!13678 = !DILocation(line: 636, column: 30, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13674, file: !791, line: 636, column: 30)
!13680 = !DILocation(line: 636, column: 36, scope: !13679)
!13681 = !DILocation(line: 636, column: 30, scope: !13674)
!13682 = !DILocation(line: 638, column: 35, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13679, file: !791, line: 637, column: 23)
!13684 = !DILocation(line: 639, column: 25, scope: !13683)
!13685 = !DILocation(line: 641, column: 30, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13679, file: !791, line: 641, column: 30)
!13687 = !DILocation(line: 641, column: 36, scope: !13686)
!13688 = !DILocation(line: 641, column: 30, scope: !13679)
!13689 = !DILocation(line: 643, column: 35, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13686, file: !791, line: 642, column: 23)
!13691 = !DILocation(line: 644, column: 25, scope: !13690)
!13692 = !DILocation(line: 644, column: 32, scope: !13690)
!13693 = !DILocation(line: 644, column: 36, scope: !13690)
!13694 = !DILocation(line: 644, column: 34, scope: !13690)
!13695 = !DILocation(line: 644, column: 40, scope: !13690)
!13696 = !DILocation(line: 644, column: 38, scope: !13690)
!13697 = !DILocation(line: 644, column: 48, scope: !13690)
!13698 = !DILocation(line: 644, column: 51, scope: !13690)
!13699 = !DILocation(line: 644, column: 55, scope: !13690)
!13700 = !DILocation(line: 644, column: 59, scope: !13690)
!13701 = !DILocation(line: 644, column: 57, scope: !13690)
!13702 = !DILocation(line: 0, scope: !13690)
!13703 = !DILocation(line: 645, column: 28, scope: !13690)
!13704 = distinct !{!13704, !13691, !13703}
!13705 = !DILocation(line: 646, column: 25, scope: !13690)
!13706 = !DILocation(line: 654, column: 44, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13708, file: !791, line: 654, column: 29)
!13708 = distinct !DILexicalBlock(scope: !13686, file: !791, line: 649, column: 23)
!13709 = !DILocation(line: 655, column: 29, scope: !13707)
!13710 = !DILocation(line: 655, column: 32, scope: !13707)
!13711 = !DILocation(line: 655, column: 46, scope: !13707)
!13712 = !DILocation(line: 654, column: 29, scope: !13708)
!13713 = !DILocalVariable(name: "j", scope: !13714, file: !791, line: 657, type: !55)
!13714 = distinct !DILexicalBlock(scope: !13707, file: !791, line: 656, column: 27)
!13715 = !DILocation(line: 657, column: 36, scope: !13714)
!13716 = !DILocation(line: 658, column: 36, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13714, file: !791, line: 658, column: 29)
!13718 = !DILocation(line: 658, column: 34, scope: !13717)
!13719 = !DILocation(line: 658, column: 41, scope: !13720)
!13720 = distinct !DILexicalBlock(scope: !13717, file: !791, line: 658, column: 29)
!13721 = !DILocation(line: 658, column: 45, scope: !13720)
!13722 = !DILocation(line: 658, column: 43, scope: !13720)
!13723 = !DILocation(line: 658, column: 29, scope: !13717)
!13724 = !DILocation(line: 659, column: 39, scope: !13720)
!13725 = !DILocation(line: 659, column: 43, scope: !13720)
!13726 = !DILocation(line: 659, column: 47, scope: !13720)
!13727 = !DILocation(line: 659, column: 45, scope: !13720)
!13728 = !DILocation(line: 659, column: 51, scope: !13720)
!13729 = !DILocation(line: 659, column: 49, scope: !13720)
!13730 = !DILocation(line: 659, column: 31, scope: !13720)
!13731 = !DILocation(line: 663, column: 35, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13720, file: !791, line: 660, column: 33)
!13733 = !DILocation(line: 666, column: 35, scope: !13732)
!13734 = !DILocation(line: 667, column: 33, scope: !13732)
!13735 = !DILocation(line: 658, column: 53, scope: !13720)
!13736 = !DILocation(line: 658, column: 29, scope: !13720)
!13737 = distinct !{!13737, !13723, !13738}
!13738 = !DILocation(line: 667, column: 33, scope: !13717)
!13739 = !DILocation(line: 668, column: 27, scope: !13714)
!13740 = !DILocation(line: 670, column: 41, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13708, file: !791, line: 670, column: 29)
!13742 = !DILocation(line: 670, column: 31, scope: !13741)
!13743 = !DILocation(line: 670, column: 29, scope: !13708)
!13744 = !DILocation(line: 671, column: 37, scope: !13741)
!13745 = !DILocation(line: 671, column: 27, scope: !13741)
!13746 = !DILocation(line: 672, column: 30, scope: !13708)
!13747 = !DILocation(line: 672, column: 27, scope: !13708)
!13748 = !DILocation(line: 674, column: 19, scope: !13659)
!13749 = !DILocation(line: 675, column: 26, scope: !13644)
!13750 = !DILocation(line: 675, column: 24, scope: !13644)
!13751 = distinct !{!13751, !13657, !13752}
!13752 = !DILocation(line: 675, column: 44, scope: !13644)
!13753 = !DILocation(line: 678, column: 40, scope: !13630)
!13754 = !DILocation(line: 678, column: 38, scope: !13630)
!13755 = !DILocation(line: 680, column: 21, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13630, file: !791, line: 680, column: 17)
!13757 = !DILocation(line: 680, column: 19, scope: !13756)
!13758 = !DILocation(line: 680, column: 23, scope: !13756)
!13759 = !DILocation(line: 680, column: 27, scope: !13756)
!13760 = !DILocation(line: 680, column: 45, scope: !13756)
!13761 = !DILocation(line: 680, column: 50, scope: !13756)
!13762 = !DILocation(line: 680, column: 17, scope: !13630)
!13763 = !DILocalVariable(name: "ilim", scope: !13764, file: !791, line: 684, type: !55)
!13764 = distinct !DILexicalBlock(scope: !13756, file: !791, line: 681, column: 15)
!13765 = !DILocation(line: 684, column: 24, scope: !13764)
!13766 = !DILocation(line: 684, column: 31, scope: !13764)
!13767 = !DILocation(line: 684, column: 35, scope: !13764)
!13768 = !DILocation(line: 684, column: 33, scope: !13764)
!13769 = !DILocation(line: 686, column: 17, scope: !13764)
!13770 = !DILocation(line: 688, column: 25, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13772, file: !791, line: 688, column: 25)
!13772 = distinct !DILexicalBlock(scope: !13773, file: !791, line: 687, column: 19)
!13773 = distinct !DILexicalBlock(scope: !13774, file: !791, line: 686, column: 17)
!13774 = distinct !DILexicalBlock(scope: !13764, file: !791, line: 686, column: 17)
!13775 = !DILocation(line: 688, column: 43, scope: !13771)
!13776 = !DILocation(line: 688, column: 48, scope: !13771)
!13777 = !DILocation(line: 688, column: 25, scope: !13772)
!13778 = !DILocation(line: 690, column: 25, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13771, file: !791, line: 689, column: 23)
!13780 = !DILocation(line: 690, column: 25, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !791, line: 690, column: 25)
!13782 = distinct !DILexicalBlock(scope: !13779, file: !791, line: 690, column: 25)
!13783 = !DILocation(line: 690, column: 25, scope: !13782)
!13784 = !DILocation(line: 690, column: 25, scope: !13785)
!13785 = distinct !DILexicalBlock(scope: !13782, file: !791, line: 690, column: 25)
!13786 = !DILocation(line: 690, column: 25, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13785, file: !791, line: 690, column: 25)
!13788 = !DILocation(line: 690, column: 25, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13790, file: !791, line: 690, column: 25)
!13790 = distinct !DILexicalBlock(scope: !13787, file: !791, line: 690, column: 25)
!13791 = !DILocation(line: 690, column: 25, scope: !13790)
!13792 = !DILocation(line: 690, column: 25, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13794, file: !791, line: 690, column: 25)
!13794 = distinct !DILexicalBlock(scope: !13787, file: !791, line: 690, column: 25)
!13795 = !DILocation(line: 690, column: 25, scope: !13794)
!13796 = !DILocation(line: 690, column: 25, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13798, file: !791, line: 690, column: 25)
!13798 = distinct !DILexicalBlock(scope: !13787, file: !791, line: 690, column: 25)
!13799 = !DILocation(line: 690, column: 25, scope: !13798)
!13800 = !DILocation(line: 690, column: 25, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13802, file: !791, line: 690, column: 25)
!13802 = distinct !DILexicalBlock(scope: !13782, file: !791, line: 690, column: 25)
!13803 = !DILocation(line: 690, column: 25, scope: !13802)
!13804 = !DILocation(line: 691, column: 25, scope: !13779)
!13805 = !DILocation(line: 691, column: 25, scope: !13806)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !791, line: 691, column: 25)
!13807 = distinct !DILexicalBlock(scope: !13779, file: !791, line: 691, column: 25)
!13808 = !DILocation(line: 691, column: 25, scope: !13807)
!13809 = !DILocation(line: 692, column: 25, scope: !13779)
!13810 = !DILocation(line: 692, column: 25, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13812, file: !791, line: 692, column: 25)
!13812 = distinct !DILexicalBlock(scope: !13779, file: !791, line: 692, column: 25)
!13813 = !DILocation(line: 692, column: 25, scope: !13812)
!13814 = !DILocation(line: 693, column: 36, scope: !13779)
!13815 = !DILocation(line: 693, column: 38, scope: !13779)
!13816 = !DILocation(line: 693, column: 33, scope: !13779)
!13817 = !DILocation(line: 693, column: 29, scope: !13779)
!13818 = !DILocation(line: 693, column: 27, scope: !13779)
!13819 = !DILocation(line: 694, column: 23, scope: !13779)
!13820 = !DILocation(line: 695, column: 30, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13771, file: !791, line: 695, column: 30)
!13822 = !DILocation(line: 695, column: 30, scope: !13771)
!13823 = !DILocation(line: 697, column: 25, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13821, file: !791, line: 696, column: 23)
!13825 = !DILocation(line: 697, column: 25, scope: !13826)
!13826 = distinct !DILexicalBlock(scope: !13827, file: !791, line: 697, column: 25)
!13827 = distinct !DILexicalBlock(scope: !13824, file: !791, line: 697, column: 25)
!13828 = !DILocation(line: 697, column: 25, scope: !13827)
!13829 = !DILocation(line: 698, column: 40, scope: !13824)
!13830 = !DILocation(line: 699, column: 23, scope: !13824)
!13831 = !DILocation(line: 700, column: 25, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13772, file: !791, line: 700, column: 25)
!13833 = !DILocation(line: 700, column: 33, scope: !13832)
!13834 = !DILocation(line: 700, column: 35, scope: !13832)
!13835 = !DILocation(line: 700, column: 30, scope: !13832)
!13836 = !DILocation(line: 700, column: 25, scope: !13772)
!13837 = !DILocation(line: 701, column: 23, scope: !13832)
!13838 = !DILocation(line: 702, column: 21, scope: !13772)
!13839 = !DILocation(line: 702, column: 21, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !791, line: 702, column: 21)
!13841 = distinct !DILexicalBlock(scope: !13772, file: !791, line: 702, column: 21)
!13842 = !DILocation(line: 702, column: 21, scope: !13841)
!13843 = !DILocation(line: 702, column: 21, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13840, file: !791, line: 702, column: 21)
!13845 = !DILocation(line: 702, column: 21, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13847, file: !791, line: 702, column: 21)
!13847 = distinct !DILexicalBlock(scope: !13844, file: !791, line: 702, column: 21)
!13848 = !DILocation(line: 702, column: 21, scope: !13847)
!13849 = !DILocation(line: 702, column: 21, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13851, file: !791, line: 702, column: 21)
!13851 = distinct !DILexicalBlock(scope: !13844, file: !791, line: 702, column: 21)
!13852 = !DILocation(line: 702, column: 21, scope: !13851)
!13853 = !DILocation(line: 703, column: 21, scope: !13772)
!13854 = !DILocation(line: 703, column: 21, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !791, line: 703, column: 21)
!13856 = distinct !DILexicalBlock(scope: !13772, file: !791, line: 703, column: 21)
!13857 = !DILocation(line: 703, column: 21, scope: !13856)
!13858 = !DILocation(line: 704, column: 25, scope: !13772)
!13859 = !DILocation(line: 704, column: 29, scope: !13772)
!13860 = !DILocation(line: 704, column: 23, scope: !13772)
!13861 = !DILocation(line: 686, column: 17, scope: !13773)
!13862 = distinct !{!13862, !13863, !13864}
!13863 = !DILocation(line: 686, column: 17, scope: !13774)
!13864 = !DILocation(line: 705, column: 19, scope: !13774)
!13865 = !DILocation(line: 707, column: 17, scope: !13764)
!13866 = !DILocation(line: 710, column: 9, scope: !13380)
!13867 = !DILocation(line: 712, column: 16, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13326, file: !791, line: 712, column: 11)
!13869 = !DILocation(line: 712, column: 34, scope: !13868)
!13870 = !DILocation(line: 712, column: 37, scope: !13868)
!13871 = !DILocation(line: 712, column: 51, scope: !13868)
!13872 = !DILocation(line: 713, column: 15, scope: !13868)
!13873 = !DILocation(line: 713, column: 18, scope: !13868)
!13874 = !DILocation(line: 714, column: 14, scope: !13868)
!13875 = !DILocation(line: 714, column: 17, scope: !13868)
!13876 = !DILocation(line: 715, column: 14, scope: !13868)
!13877 = !DILocation(line: 715, column: 17, scope: !13868)
!13878 = !DILocation(line: 715, column: 33, scope: !13868)
!13879 = !DILocation(line: 715, column: 35, scope: !13868)
!13880 = !DILocation(line: 715, column: 51, scope: !13868)
!13881 = !DILocation(line: 715, column: 53, scope: !13868)
!13882 = !DILocation(line: 715, column: 47, scope: !13868)
!13883 = !DILocation(line: 715, column: 65, scope: !13868)
!13884 = !DILocation(line: 716, column: 11, scope: !13868)
!13885 = !DILocation(line: 716, column: 15, scope: !13868)
!13886 = !DILocation(line: 712, column: 11, scope: !13326)
!13887 = !DILocation(line: 717, column: 9, scope: !13868)
!13888 = !DILabel(scope: !13326, name: "store_escape", file: !791, line: 719)
!13889 = !DILocation(line: 719, column: 5, scope: !13326)
!13890 = !DILocation(line: 720, column: 7, scope: !13326)
!13891 = !DILocation(line: 720, column: 7, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13893, file: !791, line: 720, column: 7)
!13893 = distinct !DILexicalBlock(scope: !13326, file: !791, line: 720, column: 7)
!13894 = !DILocation(line: 720, column: 7, scope: !13893)
!13895 = !DILocation(line: 720, column: 7, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13893, file: !791, line: 720, column: 7)
!13897 = !DILocation(line: 720, column: 7, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13896, file: !791, line: 720, column: 7)
!13899 = !DILocation(line: 720, column: 7, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13901, file: !791, line: 720, column: 7)
!13901 = distinct !DILexicalBlock(scope: !13898, file: !791, line: 720, column: 7)
!13902 = !DILocation(line: 720, column: 7, scope: !13901)
!13903 = !DILocation(line: 720, column: 7, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13905, file: !791, line: 720, column: 7)
!13905 = distinct !DILexicalBlock(scope: !13898, file: !791, line: 720, column: 7)
!13906 = !DILocation(line: 720, column: 7, scope: !13905)
!13907 = !DILocation(line: 720, column: 7, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13909, file: !791, line: 720, column: 7)
!13909 = distinct !DILexicalBlock(scope: !13898, file: !791, line: 720, column: 7)
!13910 = !DILocation(line: 720, column: 7, scope: !13909)
!13911 = !DILocation(line: 720, column: 7, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !791, line: 720, column: 7)
!13913 = distinct !DILexicalBlock(scope: !13893, file: !791, line: 720, column: 7)
!13914 = !DILocation(line: 720, column: 7, scope: !13913)
!13915 = !DILabel(scope: !13326, name: "store_c", file: !791, line: 722)
!13916 = !DILocation(line: 722, column: 5, scope: !13326)
!13917 = !DILocation(line: 723, column: 7, scope: !13326)
!13918 = !DILocation(line: 723, column: 7, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13920, file: !791, line: 723, column: 7)
!13920 = distinct !DILexicalBlock(scope: !13326, file: !791, line: 723, column: 7)
!13921 = !DILocation(line: 723, column: 7, scope: !13920)
!13922 = !DILocation(line: 723, column: 7, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13919, file: !791, line: 723, column: 7)
!13924 = !DILocation(line: 723, column: 7, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13926, file: !791, line: 723, column: 7)
!13926 = distinct !DILexicalBlock(scope: !13923, file: !791, line: 723, column: 7)
!13927 = !DILocation(line: 723, column: 7, scope: !13926)
!13928 = !DILocation(line: 723, column: 7, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13930, file: !791, line: 723, column: 7)
!13930 = distinct !DILexicalBlock(scope: !13923, file: !791, line: 723, column: 7)
!13931 = !DILocation(line: 723, column: 7, scope: !13930)
!13932 = !DILocation(line: 724, column: 7, scope: !13326)
!13933 = !DILocation(line: 724, column: 7, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13935, file: !791, line: 724, column: 7)
!13935 = distinct !DILexicalBlock(scope: !13326, file: !791, line: 724, column: 7)
!13936 = !DILocation(line: 724, column: 7, scope: !13935)
!13937 = !DILocation(line: 726, column: 13, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13326, file: !791, line: 726, column: 11)
!13939 = !DILocation(line: 726, column: 11, scope: !13326)
!13940 = !DILocation(line: 727, column: 38, scope: !13938)
!13941 = !DILocation(line: 727, column: 9, scope: !13938)
!13942 = !DILocation(line: 728, column: 5, scope: !13326)
!13943 = !DILocation(line: 400, column: 75, scope: !13315)
!13944 = !DILocation(line: 400, column: 3, scope: !13315)
!13945 = distinct !{!13945, !13324, !13946}
!13946 = !DILocation(line: 728, column: 5, scope: !13312)
!13947 = !DILocation(line: 730, column: 7, scope: !13948)
!13948 = distinct !DILexicalBlock(scope: !13174, file: !791, line: 730, column: 7)
!13949 = !DILocation(line: 730, column: 11, scope: !13948)
!13950 = !DILocation(line: 730, column: 16, scope: !13948)
!13951 = !DILocation(line: 730, column: 19, scope: !13948)
!13952 = !DILocation(line: 730, column: 33, scope: !13948)
!13953 = !DILocation(line: 731, column: 7, scope: !13948)
!13954 = !DILocation(line: 731, column: 10, scope: !13948)
!13955 = !DILocation(line: 730, column: 7, scope: !13174)
!13956 = !DILocation(line: 732, column: 5, scope: !13948)
!13957 = !DILocation(line: 738, column: 7, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13174, file: !791, line: 738, column: 7)
!13959 = !DILocation(line: 738, column: 21, scope: !13958)
!13960 = !DILocation(line: 738, column: 51, scope: !13958)
!13961 = !DILocation(line: 738, column: 56, scope: !13958)
!13962 = !DILocation(line: 739, column: 7, scope: !13958)
!13963 = !DILocation(line: 739, column: 10, scope: !13958)
!13964 = !DILocation(line: 738, column: 7, scope: !13174)
!13965 = !DILocation(line: 741, column: 11, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13967, file: !791, line: 741, column: 11)
!13967 = distinct !DILexicalBlock(scope: !13958, file: !791, line: 740, column: 5)
!13968 = !DILocation(line: 741, column: 11, scope: !13967)
!13969 = !DILocation(line: 742, column: 42, scope: !13966)
!13970 = !DILocation(line: 742, column: 50, scope: !13966)
!13971 = !DILocation(line: 742, column: 67, scope: !13966)
!13972 = !DILocation(line: 742, column: 72, scope: !13966)
!13973 = !DILocation(line: 744, column: 42, scope: !13966)
!13974 = !DILocation(line: 744, column: 49, scope: !13966)
!13975 = !DILocation(line: 745, column: 42, scope: !13966)
!13976 = !DILocation(line: 745, column: 54, scope: !13966)
!13977 = !DILocation(line: 742, column: 16, scope: !13966)
!13978 = !DILocation(line: 742, column: 9, scope: !13966)
!13979 = !DILocation(line: 746, column: 18, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13966, file: !791, line: 746, column: 16)
!13981 = !DILocation(line: 746, column: 29, scope: !13980)
!13982 = !DILocation(line: 746, column: 32, scope: !13980)
!13983 = !DILocation(line: 746, column: 16, scope: !13966)
!13984 = !DILocation(line: 749, column: 24, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13980, file: !791, line: 747, column: 9)
!13986 = !DILocation(line: 749, column: 22, scope: !13985)
!13987 = !DILocation(line: 750, column: 15, scope: !13985)
!13988 = !DILocation(line: 751, column: 11, scope: !13985)
!13989 = !DILocation(line: 753, column: 5, scope: !13967)
!13990 = !DILocation(line: 755, column: 7, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13174, file: !791, line: 755, column: 7)
!13992 = !DILocation(line: 755, column: 20, scope: !13991)
!13993 = !DILocation(line: 755, column: 24, scope: !13991)
!13994 = !DILocation(line: 755, column: 7, scope: !13174)
!13995 = !DILocation(line: 756, column: 5, scope: !13991)
!13996 = !DILocation(line: 756, column: 13, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13998, file: !791, line: 756, column: 5)
!13998 = distinct !DILexicalBlock(scope: !13991, file: !791, line: 756, column: 5)
!13999 = !DILocation(line: 756, column: 12, scope: !13997)
!14000 = !DILocation(line: 756, column: 5, scope: !13998)
!14001 = !DILocation(line: 757, column: 7, scope: !13997)
!14002 = !DILocation(line: 757, column: 7, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !14004, file: !791, line: 757, column: 7)
!14004 = distinct !DILexicalBlock(scope: !13997, file: !791, line: 757, column: 7)
!14005 = !DILocation(line: 757, column: 7, scope: !14004)
!14006 = !DILocation(line: 756, column: 39, scope: !13997)
!14007 = !DILocation(line: 756, column: 5, scope: !13997)
!14008 = distinct !{!14008, !14000, !14009}
!14009 = !DILocation(line: 757, column: 7, scope: !13998)
!14010 = !DILocation(line: 759, column: 7, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !13174, file: !791, line: 759, column: 7)
!14012 = !DILocation(line: 759, column: 13, scope: !14011)
!14013 = !DILocation(line: 759, column: 11, scope: !14011)
!14014 = !DILocation(line: 759, column: 7, scope: !13174)
!14015 = !DILocation(line: 760, column: 5, scope: !14011)
!14016 = !DILocation(line: 760, column: 12, scope: !14011)
!14017 = !DILocation(line: 760, column: 17, scope: !14011)
!14018 = !DILocation(line: 761, column: 10, scope: !13174)
!14019 = !DILocation(line: 761, column: 3, scope: !13174)
!14020 = !DILabel(scope: !13174, name: "force_outer_quoting_style", file: !791, line: 763)
!14021 = !DILocation(line: 763, column: 2, scope: !13174)
!14022 = !DILocation(line: 766, column: 7, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !13174, file: !791, line: 766, column: 7)
!14024 = !DILocation(line: 766, column: 21, scope: !14023)
!14025 = !DILocation(line: 766, column: 51, scope: !14023)
!14026 = !DILocation(line: 766, column: 54, scope: !14023)
!14027 = !DILocation(line: 766, column: 7, scope: !13174)
!14028 = !DILocation(line: 767, column: 19, scope: !14023)
!14029 = !DILocation(line: 767, column: 5, scope: !14023)
!14030 = !DILocation(line: 768, column: 36, scope: !13174)
!14031 = !DILocation(line: 768, column: 44, scope: !13174)
!14032 = !DILocation(line: 768, column: 56, scope: !13174)
!14033 = !DILocation(line: 768, column: 61, scope: !13174)
!14034 = !DILocation(line: 769, column: 36, scope: !13174)
!14035 = !DILocation(line: 770, column: 36, scope: !13174)
!14036 = !DILocation(line: 770, column: 42, scope: !13174)
!14037 = !DILocation(line: 771, column: 36, scope: !13174)
!14038 = !DILocation(line: 771, column: 48, scope: !13174)
!14039 = !DILocation(line: 768, column: 10, scope: !13174)
!14040 = !DILocation(line: 768, column: 3, scope: !13174)
!14041 = !DILocation(line: 772, column: 1, scope: !13174)
!14042 = distinct !DISubprogram(name: "gettext_quote", scope: !791, file: !791, line: 207, type: !14043, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14043 = !DISubroutineType(types: !14044)
!14044 = !{!116, !116, !771}
!14045 = !DILocalVariable(name: "msgid", arg: 1, scope: !14042, file: !791, line: 207, type: !116)
!14046 = !DILocation(line: 207, column: 28, scope: !14042)
!14047 = !DILocalVariable(name: "s", arg: 2, scope: !14042, file: !791, line: 207, type: !771)
!14048 = !DILocation(line: 207, column: 54, scope: !14042)
!14049 = !DILocalVariable(name: "translation", scope: !14042, file: !791, line: 209, type: !116)
!14050 = !DILocation(line: 209, column: 15, scope: !14042)
!14051 = !DILocation(line: 209, column: 29, scope: !14042)
!14052 = !DILocalVariable(name: "locale_code", scope: !14042, file: !791, line: 210, type: !116)
!14053 = !DILocation(line: 210, column: 15, scope: !14042)
!14054 = !DILocation(line: 212, column: 7, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14042, file: !791, line: 212, column: 7)
!14056 = !DILocation(line: 212, column: 22, scope: !14055)
!14057 = !DILocation(line: 212, column: 19, scope: !14055)
!14058 = !DILocation(line: 212, column: 7, scope: !14042)
!14059 = !DILocation(line: 213, column: 12, scope: !14055)
!14060 = !DILocation(line: 213, column: 5, scope: !14055)
!14061 = !DILocation(line: 233, column: 17, scope: !14042)
!14062 = !DILocation(line: 233, column: 15, scope: !14042)
!14063 = !DILocation(line: 234, column: 7, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14042, file: !791, line: 234, column: 7)
!14065 = !DILocation(line: 234, column: 7, scope: !14042)
!14066 = !DILocation(line: 235, column: 12, scope: !14064)
!14067 = !DILocation(line: 235, column: 21, scope: !14064)
!14068 = !DILocation(line: 235, column: 5, scope: !14064)
!14069 = !DILocation(line: 236, column: 7, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14042, file: !791, line: 236, column: 7)
!14071 = !DILocation(line: 236, column: 7, scope: !14042)
!14072 = !DILocation(line: 237, column: 12, scope: !14070)
!14073 = !DILocation(line: 237, column: 21, scope: !14070)
!14074 = !DILocation(line: 237, column: 5, scope: !14070)
!14075 = !DILocation(line: 239, column: 11, scope: !14042)
!14076 = !DILocation(line: 239, column: 13, scope: !14042)
!14077 = !DILocation(line: 239, column: 3, scope: !14042)
!14078 = !DILocation(line: 240, column: 1, scope: !14042)
!14079 = distinct !DISubprogram(name: "quotearg_alloc", scope: !791, file: !791, line: 799, type: !14080, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14080 = !DISubroutineType(types: !14081)
!14081 = !{!9, !116, !55, !800}
!14082 = !DILocalVariable(name: "arg", arg: 1, scope: !14079, file: !791, line: 799, type: !116)
!14083 = !DILocation(line: 799, column: 29, scope: !14079)
!14084 = !DILocalVariable(name: "argsize", arg: 2, scope: !14079, file: !791, line: 799, type: !55)
!14085 = !DILocation(line: 799, column: 41, scope: !14079)
!14086 = !DILocalVariable(name: "o", arg: 3, scope: !14079, file: !791, line: 800, type: !800)
!14087 = !DILocation(line: 800, column: 47, scope: !14079)
!14088 = !DILocation(line: 802, column: 30, scope: !14079)
!14089 = !DILocation(line: 802, column: 35, scope: !14079)
!14090 = !DILocation(line: 802, column: 50, scope: !14079)
!14091 = !DILocation(line: 802, column: 10, scope: !14079)
!14092 = !DILocation(line: 802, column: 3, scope: !14079)
!14093 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !791, file: !791, line: 812, type: !14094, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14094 = !DISubroutineType(types: !14095)
!14095 = !{!9, !116, !55, !9741, !800}
!14096 = !DILocalVariable(name: "arg", arg: 1, scope: !14093, file: !791, line: 812, type: !116)
!14097 = !DILocation(line: 812, column: 33, scope: !14093)
!14098 = !DILocalVariable(name: "argsize", arg: 2, scope: !14093, file: !791, line: 812, type: !55)
!14099 = !DILocation(line: 812, column: 45, scope: !14093)
!14100 = !DILocalVariable(name: "size", arg: 3, scope: !14093, file: !791, line: 812, type: !9741)
!14101 = !DILocation(line: 812, column: 62, scope: !14093)
!14102 = !DILocalVariable(name: "o", arg: 4, scope: !14093, file: !791, line: 813, type: !800)
!14103 = !DILocation(line: 813, column: 51, scope: !14093)
!14104 = !DILocalVariable(name: "p", scope: !14093, file: !791, line: 815, type: !800)
!14105 = !DILocation(line: 815, column: 33, scope: !14093)
!14106 = !DILocation(line: 815, column: 37, scope: !14093)
!14107 = !DILocation(line: 815, column: 41, scope: !14093)
!14108 = !DILocalVariable(name: "e", scope: !14093, file: !791, line: 816, type: !7)
!14109 = !DILocation(line: 816, column: 7, scope: !14093)
!14110 = !DILocation(line: 816, column: 11, scope: !14093)
!14111 = !DILocalVariable(name: "flags", scope: !14093, file: !791, line: 818, type: !7)
!14112 = !DILocation(line: 818, column: 7, scope: !14093)
!14113 = !DILocation(line: 818, column: 15, scope: !14093)
!14114 = !DILocation(line: 818, column: 18, scope: !14093)
!14115 = !DILocation(line: 818, column: 27, scope: !14093)
!14116 = !DILocation(line: 818, column: 24, scope: !14093)
!14117 = !DILocalVariable(name: "bufsize", scope: !14093, file: !791, line: 819, type: !55)
!14118 = !DILocation(line: 819, column: 10, scope: !14093)
!14119 = !DILocation(line: 819, column: 52, scope: !14093)
!14120 = !DILocation(line: 819, column: 57, scope: !14093)
!14121 = !DILocation(line: 819, column: 66, scope: !14093)
!14122 = !DILocation(line: 819, column: 69, scope: !14093)
!14123 = !DILocation(line: 820, column: 46, scope: !14093)
!14124 = !DILocation(line: 820, column: 53, scope: !14093)
!14125 = !DILocation(line: 820, column: 56, scope: !14093)
!14126 = !DILocation(line: 821, column: 46, scope: !14093)
!14127 = !DILocation(line: 821, column: 49, scope: !14093)
!14128 = !DILocation(line: 822, column: 46, scope: !14093)
!14129 = !DILocation(line: 822, column: 49, scope: !14093)
!14130 = !DILocation(line: 819, column: 20, scope: !14093)
!14131 = !DILocation(line: 822, column: 62, scope: !14093)
!14132 = !DILocalVariable(name: "buf", scope: !14093, file: !791, line: 823, type: !9)
!14133 = !DILocation(line: 823, column: 9, scope: !14093)
!14134 = !DILocation(line: 823, column: 27, scope: !14093)
!14135 = !DILocation(line: 823, column: 15, scope: !14093)
!14136 = !DILocation(line: 824, column: 29, scope: !14093)
!14137 = !DILocation(line: 824, column: 34, scope: !14093)
!14138 = !DILocation(line: 824, column: 43, scope: !14093)
!14139 = !DILocation(line: 824, column: 48, scope: !14093)
!14140 = !DILocation(line: 824, column: 57, scope: !14093)
!14141 = !DILocation(line: 824, column: 60, scope: !14093)
!14142 = !DILocation(line: 824, column: 67, scope: !14093)
!14143 = !DILocation(line: 825, column: 29, scope: !14093)
!14144 = !DILocation(line: 825, column: 32, scope: !14093)
!14145 = !DILocation(line: 826, column: 29, scope: !14093)
!14146 = !DILocation(line: 826, column: 32, scope: !14093)
!14147 = !DILocation(line: 826, column: 44, scope: !14093)
!14148 = !DILocation(line: 826, column: 47, scope: !14093)
!14149 = !DILocation(line: 824, column: 3, scope: !14093)
!14150 = !DILocation(line: 827, column: 11, scope: !14093)
!14151 = !DILocation(line: 827, column: 3, scope: !14093)
!14152 = !DILocation(line: 827, column: 9, scope: !14093)
!14153 = !DILocation(line: 828, column: 7, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14093, file: !791, line: 828, column: 7)
!14155 = !DILocation(line: 828, column: 7, scope: !14093)
!14156 = !DILocation(line: 829, column: 13, scope: !14154)
!14157 = !DILocation(line: 829, column: 21, scope: !14154)
!14158 = !DILocation(line: 829, column: 6, scope: !14154)
!14159 = !DILocation(line: 829, column: 11, scope: !14154)
!14160 = !DILocation(line: 829, column: 5, scope: !14154)
!14161 = !DILocation(line: 830, column: 10, scope: !14093)
!14162 = !DILocation(line: 830, column: 3, scope: !14093)
!14163 = distinct !DISubprogram(name: "quotearg_free", scope: !791, file: !791, line: 848, type: !571, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14164 = !DILocalVariable(name: "sv", scope: !14163, file: !791, line: 850, type: !803)
!14165 = !DILocation(line: 850, column: 19, scope: !14163)
!14166 = !DILocation(line: 850, column: 24, scope: !14163)
!14167 = !DILocalVariable(name: "i", scope: !14163, file: !791, line: 851, type: !7)
!14168 = !DILocation(line: 851, column: 7, scope: !14163)
!14169 = !DILocation(line: 852, column: 10, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14163, file: !791, line: 852, column: 3)
!14171 = !DILocation(line: 852, column: 8, scope: !14170)
!14172 = !DILocation(line: 852, column: 15, scope: !14173)
!14173 = distinct !DILexicalBlock(scope: !14170, file: !791, line: 852, column: 3)
!14174 = !DILocation(line: 852, column: 19, scope: !14173)
!14175 = !DILocation(line: 852, column: 17, scope: !14173)
!14176 = !DILocation(line: 852, column: 3, scope: !14170)
!14177 = !DILocation(line: 853, column: 11, scope: !14173)
!14178 = !DILocation(line: 853, column: 14, scope: !14173)
!14179 = !DILocation(line: 853, column: 17, scope: !14173)
!14180 = !DILocation(line: 853, column: 5, scope: !14173)
!14181 = !DILocation(line: 852, column: 28, scope: !14173)
!14182 = !DILocation(line: 852, column: 3, scope: !14173)
!14183 = distinct !{!14183, !14176, !14184}
!14184 = !DILocation(line: 853, column: 20, scope: !14170)
!14185 = !DILocation(line: 854, column: 7, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14163, file: !791, line: 854, column: 7)
!14187 = !DILocation(line: 854, column: 13, scope: !14186)
!14188 = !DILocation(line: 854, column: 17, scope: !14186)
!14189 = !DILocation(line: 854, column: 7, scope: !14163)
!14190 = !DILocation(line: 856, column: 13, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14186, file: !791, line: 855, column: 5)
!14192 = !DILocation(line: 856, column: 19, scope: !14191)
!14193 = !DILocation(line: 856, column: 7, scope: !14191)
!14194 = !DILocation(line: 857, column: 21, scope: !14191)
!14195 = !DILocation(line: 858, column: 20, scope: !14191)
!14196 = !DILocation(line: 859, column: 5, scope: !14191)
!14197 = !DILocation(line: 860, column: 7, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14163, file: !791, line: 860, column: 7)
!14199 = !DILocation(line: 860, column: 10, scope: !14198)
!14200 = !DILocation(line: 860, column: 7, scope: !14163)
!14201 = !DILocation(line: 862, column: 13, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14198, file: !791, line: 861, column: 5)
!14203 = !DILocation(line: 862, column: 7, scope: !14202)
!14204 = !DILocation(line: 863, column: 15, scope: !14202)
!14205 = !DILocation(line: 864, column: 5, scope: !14202)
!14206 = !DILocation(line: 865, column: 10, scope: !14163)
!14207 = !DILocation(line: 866, column: 1, scope: !14163)
!14208 = distinct !DISubprogram(name: "quotearg_n", scope: !791, file: !791, line: 931, type: !14209, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{!9, !7, !116}
!14211 = !DILocalVariable(name: "n", arg: 1, scope: !14208, file: !791, line: 931, type: !7)
!14212 = !DILocation(line: 931, column: 17, scope: !14208)
!14213 = !DILocalVariable(name: "arg", arg: 2, scope: !14208, file: !791, line: 931, type: !116)
!14214 = !DILocation(line: 931, column: 32, scope: !14208)
!14215 = !DILocation(line: 933, column: 30, scope: !14208)
!14216 = !DILocation(line: 933, column: 33, scope: !14208)
!14217 = !DILocation(line: 933, column: 10, scope: !14208)
!14218 = !DILocation(line: 933, column: 3, scope: !14208)
!14219 = distinct !DISubprogram(name: "quotearg_n_options", scope: !791, file: !791, line: 877, type: !14220, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14220 = !DISubroutineType(types: !14221)
!14221 = !{!9, !7, !116, !55, !800}
!14222 = !DILocalVariable(name: "n", arg: 1, scope: !14219, file: !791, line: 877, type: !7)
!14223 = !DILocation(line: 877, column: 25, scope: !14219)
!14224 = !DILocalVariable(name: "arg", arg: 2, scope: !14219, file: !791, line: 877, type: !116)
!14225 = !DILocation(line: 877, column: 40, scope: !14219)
!14226 = !DILocalVariable(name: "argsize", arg: 3, scope: !14219, file: !791, line: 877, type: !55)
!14227 = !DILocation(line: 877, column: 52, scope: !14219)
!14228 = !DILocalVariable(name: "options", arg: 4, scope: !14219, file: !791, line: 878, type: !800)
!14229 = !DILocation(line: 878, column: 51, scope: !14219)
!14230 = !DILocalVariable(name: "e", scope: !14219, file: !791, line: 880, type: !7)
!14231 = !DILocation(line: 880, column: 7, scope: !14219)
!14232 = !DILocation(line: 880, column: 11, scope: !14219)
!14233 = !DILocalVariable(name: "sv", scope: !14219, file: !791, line: 882, type: !803)
!14234 = !DILocation(line: 882, column: 19, scope: !14219)
!14235 = !DILocation(line: 882, column: 24, scope: !14219)
!14236 = !DILocation(line: 884, column: 7, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14219, file: !791, line: 884, column: 7)
!14238 = !DILocation(line: 884, column: 9, scope: !14237)
!14239 = !DILocation(line: 884, column: 7, scope: !14219)
!14240 = !DILocation(line: 885, column: 5, scope: !14237)
!14241 = !DILocation(line: 887, column: 7, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14219, file: !791, line: 887, column: 7)
!14243 = !DILocation(line: 887, column: 17, scope: !14242)
!14244 = !DILocation(line: 887, column: 14, scope: !14242)
!14245 = !DILocation(line: 887, column: 7, scope: !14219)
!14246 = !DILocalVariable(name: "preallocated", scope: !14247, file: !791, line: 889, type: !142)
!14247 = distinct !DILexicalBlock(scope: !14242, file: !791, line: 888, column: 5)
!14248 = !DILocation(line: 889, column: 12, scope: !14247)
!14249 = !DILocation(line: 889, column: 28, scope: !14247)
!14250 = !DILocation(line: 889, column: 31, scope: !14247)
!14251 = !DILocalVariable(name: "nmax", scope: !14247, file: !791, line: 890, type: !7)
!14252 = !DILocation(line: 890, column: 11, scope: !14247)
!14253 = !DILocation(line: 892, column: 11, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14247, file: !791, line: 892, column: 11)
!14255 = !DILocation(line: 892, column: 18, scope: !14254)
!14256 = !DILocation(line: 892, column: 16, scope: !14254)
!14257 = !DILocation(line: 892, column: 11, scope: !14247)
!14258 = !DILocation(line: 893, column: 9, scope: !14254)
!14259 = !DILocation(line: 895, column: 32, scope: !14247)
!14260 = !DILocation(line: 895, column: 54, scope: !14247)
!14261 = !DILocation(line: 895, column: 59, scope: !14247)
!14262 = !DILocation(line: 895, column: 61, scope: !14247)
!14263 = !DILocation(line: 895, column: 58, scope: !14247)
!14264 = !DILocation(line: 895, column: 66, scope: !14247)
!14265 = !DILocation(line: 895, column: 22, scope: !14247)
!14266 = !DILocation(line: 895, column: 20, scope: !14247)
!14267 = !DILocation(line: 895, column: 15, scope: !14247)
!14268 = !DILocation(line: 896, column: 11, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14247, file: !791, line: 896, column: 11)
!14270 = !DILocation(line: 896, column: 11, scope: !14247)
!14271 = !DILocation(line: 897, column: 10, scope: !14269)
!14272 = !DILocation(line: 897, column: 15, scope: !14269)
!14273 = !DILocation(line: 897, column: 9, scope: !14269)
!14274 = !DILocation(line: 898, column: 15, scope: !14247)
!14275 = !DILocation(line: 898, column: 20, scope: !14247)
!14276 = !DILocation(line: 898, column: 18, scope: !14247)
!14277 = !DILocation(line: 898, column: 7, scope: !14247)
!14278 = !DILocation(line: 898, column: 32, scope: !14247)
!14279 = !DILocation(line: 898, column: 34, scope: !14247)
!14280 = !DILocation(line: 898, column: 40, scope: !14247)
!14281 = !DILocation(line: 898, column: 38, scope: !14247)
!14282 = !DILocation(line: 898, column: 31, scope: !14247)
!14283 = !DILocation(line: 898, column: 48, scope: !14247)
!14284 = !DILocation(line: 899, column: 16, scope: !14247)
!14285 = !DILocation(line: 899, column: 18, scope: !14247)
!14286 = !DILocation(line: 899, column: 14, scope: !14247)
!14287 = !DILocation(line: 900, column: 5, scope: !14247)
!14288 = !DILocalVariable(name: "size", scope: !14289, file: !791, line: 903, type: !55)
!14289 = distinct !DILexicalBlock(scope: !14219, file: !791, line: 902, column: 3)
!14290 = !DILocation(line: 903, column: 12, scope: !14289)
!14291 = !DILocation(line: 903, column: 19, scope: !14289)
!14292 = !DILocation(line: 903, column: 22, scope: !14289)
!14293 = !DILocation(line: 903, column: 25, scope: !14289)
!14294 = !DILocalVariable(name: "val", scope: !14289, file: !791, line: 904, type: !9)
!14295 = !DILocation(line: 904, column: 11, scope: !14289)
!14296 = !DILocation(line: 904, column: 17, scope: !14289)
!14297 = !DILocation(line: 904, column: 20, scope: !14289)
!14298 = !DILocation(line: 904, column: 23, scope: !14289)
!14299 = !DILocalVariable(name: "flags", scope: !14289, file: !791, line: 906, type: !7)
!14300 = !DILocation(line: 906, column: 9, scope: !14289)
!14301 = !DILocation(line: 906, column: 17, scope: !14289)
!14302 = !DILocation(line: 906, column: 26, scope: !14289)
!14303 = !DILocation(line: 906, column: 32, scope: !14289)
!14304 = !DILocalVariable(name: "qsize", scope: !14289, file: !791, line: 907, type: !55)
!14305 = !DILocation(line: 907, column: 12, scope: !14289)
!14306 = !DILocation(line: 907, column: 46, scope: !14289)
!14307 = !DILocation(line: 907, column: 51, scope: !14289)
!14308 = !DILocation(line: 907, column: 57, scope: !14289)
!14309 = !DILocation(line: 907, column: 62, scope: !14289)
!14310 = !DILocation(line: 908, column: 46, scope: !14289)
!14311 = !DILocation(line: 908, column: 55, scope: !14289)
!14312 = !DILocation(line: 908, column: 62, scope: !14289)
!14313 = !DILocation(line: 909, column: 46, scope: !14289)
!14314 = !DILocation(line: 909, column: 55, scope: !14289)
!14315 = !DILocation(line: 910, column: 46, scope: !14289)
!14316 = !DILocation(line: 910, column: 55, scope: !14289)
!14317 = !DILocation(line: 911, column: 46, scope: !14289)
!14318 = !DILocation(line: 911, column: 55, scope: !14289)
!14319 = !DILocation(line: 907, column: 20, scope: !14289)
!14320 = !DILocation(line: 913, column: 9, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14289, file: !791, line: 913, column: 9)
!14322 = !DILocation(line: 913, column: 17, scope: !14321)
!14323 = !DILocation(line: 913, column: 14, scope: !14321)
!14324 = !DILocation(line: 913, column: 9, scope: !14289)
!14325 = !DILocation(line: 915, column: 29, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14321, file: !791, line: 914, column: 7)
!14327 = !DILocation(line: 915, column: 35, scope: !14326)
!14328 = !DILocation(line: 915, column: 27, scope: !14326)
!14329 = !DILocation(line: 915, column: 9, scope: !14326)
!14330 = !DILocation(line: 915, column: 12, scope: !14326)
!14331 = !DILocation(line: 915, column: 15, scope: !14326)
!14332 = !DILocation(line: 915, column: 20, scope: !14326)
!14333 = !DILocation(line: 916, column: 13, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14326, file: !791, line: 916, column: 13)
!14335 = !DILocation(line: 916, column: 17, scope: !14334)
!14336 = !DILocation(line: 916, column: 13, scope: !14326)
!14337 = !DILocation(line: 917, column: 17, scope: !14334)
!14338 = !DILocation(line: 917, column: 11, scope: !14334)
!14339 = !DILocation(line: 918, column: 39, scope: !14326)
!14340 = !DILocation(line: 918, column: 27, scope: !14326)
!14341 = !DILocation(line: 918, column: 25, scope: !14326)
!14342 = !DILocation(line: 918, column: 9, scope: !14326)
!14343 = !DILocation(line: 918, column: 12, scope: !14326)
!14344 = !DILocation(line: 918, column: 15, scope: !14326)
!14345 = !DILocation(line: 918, column: 19, scope: !14326)
!14346 = !DILocation(line: 919, column: 35, scope: !14326)
!14347 = !DILocation(line: 919, column: 40, scope: !14326)
!14348 = !DILocation(line: 919, column: 46, scope: !14326)
!14349 = !DILocation(line: 919, column: 51, scope: !14326)
!14350 = !DILocation(line: 919, column: 60, scope: !14326)
!14351 = !DILocation(line: 919, column: 69, scope: !14326)
!14352 = !DILocation(line: 920, column: 35, scope: !14326)
!14353 = !DILocation(line: 920, column: 42, scope: !14326)
!14354 = !DILocation(line: 920, column: 51, scope: !14326)
!14355 = !DILocation(line: 921, column: 35, scope: !14326)
!14356 = !DILocation(line: 921, column: 44, scope: !14326)
!14357 = !DILocation(line: 922, column: 35, scope: !14326)
!14358 = !DILocation(line: 922, column: 44, scope: !14326)
!14359 = !DILocation(line: 919, column: 9, scope: !14326)
!14360 = !DILocation(line: 923, column: 7, scope: !14326)
!14361 = !DILocation(line: 925, column: 13, scope: !14289)
!14362 = !DILocation(line: 925, column: 5, scope: !14289)
!14363 = !DILocation(line: 925, column: 11, scope: !14289)
!14364 = !DILocation(line: 926, column: 12, scope: !14289)
!14365 = !DILocation(line: 926, column: 5, scope: !14289)
!14366 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !791, file: !791, line: 937, type: !14367, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{!9, !7, !116, !55}
!14369 = !DILocalVariable(name: "n", arg: 1, scope: !14366, file: !791, line: 937, type: !7)
!14370 = !DILocation(line: 937, column: 21, scope: !14366)
!14371 = !DILocalVariable(name: "arg", arg: 2, scope: !14366, file: !791, line: 937, type: !116)
!14372 = !DILocation(line: 937, column: 36, scope: !14366)
!14373 = !DILocalVariable(name: "argsize", arg: 3, scope: !14366, file: !791, line: 937, type: !55)
!14374 = !DILocation(line: 937, column: 48, scope: !14366)
!14375 = !DILocation(line: 939, column: 30, scope: !14366)
!14376 = !DILocation(line: 939, column: 33, scope: !14366)
!14377 = !DILocation(line: 939, column: 38, scope: !14366)
!14378 = !DILocation(line: 939, column: 10, scope: !14366)
!14379 = !DILocation(line: 939, column: 3, scope: !14366)
!14380 = distinct !DISubprogram(name: "quotearg", scope: !791, file: !791, line: 943, type: !10123, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14381 = !DILocalVariable(name: "arg", arg: 1, scope: !14380, file: !791, line: 943, type: !116)
!14382 = !DILocation(line: 943, column: 23, scope: !14380)
!14383 = !DILocation(line: 945, column: 25, scope: !14380)
!14384 = !DILocation(line: 945, column: 10, scope: !14380)
!14385 = !DILocation(line: 945, column: 3, scope: !14380)
!14386 = distinct !DISubprogram(name: "quotearg_mem", scope: !791, file: !791, line: 949, type: !9197, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14387 = !DILocalVariable(name: "arg", arg: 1, scope: !14386, file: !791, line: 949, type: !116)
!14388 = !DILocation(line: 949, column: 27, scope: !14386)
!14389 = !DILocalVariable(name: "argsize", arg: 2, scope: !14386, file: !791, line: 949, type: !55)
!14390 = !DILocation(line: 949, column: 39, scope: !14386)
!14391 = !DILocation(line: 951, column: 29, scope: !14386)
!14392 = !DILocation(line: 951, column: 34, scope: !14386)
!14393 = !DILocation(line: 951, column: 10, scope: !14386)
!14394 = !DILocation(line: 951, column: 3, scope: !14386)
!14395 = distinct !DISubprogram(name: "quotearg_n_style", scope: !791, file: !791, line: 955, type: !14396, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14396 = !DISubroutineType(types: !14397)
!14397 = !{!9, !7, !771, !116}
!14398 = !DILocalVariable(name: "n", arg: 1, scope: !14395, file: !791, line: 955, type: !7)
!14399 = !DILocation(line: 955, column: 23, scope: !14395)
!14400 = !DILocalVariable(name: "s", arg: 2, scope: !14395, file: !791, line: 955, type: !771)
!14401 = !DILocation(line: 955, column: 45, scope: !14395)
!14402 = !DILocalVariable(name: "arg", arg: 3, scope: !14395, file: !791, line: 955, type: !116)
!14403 = !DILocation(line: 955, column: 60, scope: !14395)
!14404 = !DILocalVariable(name: "o", scope: !14395, file: !791, line: 957, type: !801)
!14405 = !DILocation(line: 957, column: 32, scope: !14395)
!14406 = !DILocation(line: 957, column: 64, scope: !14395)
!14407 = !DILocation(line: 957, column: 36, scope: !14395)
!14408 = !DILocation(line: 958, column: 30, scope: !14395)
!14409 = !DILocation(line: 958, column: 33, scope: !14395)
!14410 = !DILocation(line: 958, column: 10, scope: !14395)
!14411 = !DILocation(line: 958, column: 3, scope: !14395)
!14412 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !791, file: !791, line: 193, type: !14413, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14413 = !DISubroutineType(types: !14414)
!14414 = !{!790, !771}
!14415 = !DILocalVariable(name: "style", arg: 1, scope: !14412, file: !791, line: 193, type: !771)
!14416 = !DILocation(line: 193, column: 48, scope: !14412)
!14417 = !DILocalVariable(name: "o", scope: !14412, file: !791, line: 195, type: !790)
!14418 = !DILocation(line: 195, column: 26, scope: !14412)
!14419 = !DILocation(line: 196, column: 7, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14412, file: !791, line: 196, column: 7)
!14421 = !DILocation(line: 196, column: 13, scope: !14420)
!14422 = !DILocation(line: 196, column: 7, scope: !14412)
!14423 = !DILocation(line: 197, column: 5, scope: !14420)
!14424 = !DILocation(line: 198, column: 13, scope: !14412)
!14425 = !DILocation(line: 198, column: 5, scope: !14412)
!14426 = !DILocation(line: 198, column: 11, scope: !14412)
!14427 = !DILocation(line: 199, column: 3, scope: !14412)
!14428 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !791, file: !791, line: 962, type: !14429, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14429 = !DISubroutineType(types: !14430)
!14430 = !{!9, !7, !771, !116, !55}
!14431 = !DILocalVariable(name: "n", arg: 1, scope: !14428, file: !791, line: 962, type: !7)
!14432 = !DILocation(line: 962, column: 27, scope: !14428)
!14433 = !DILocalVariable(name: "s", arg: 2, scope: !14428, file: !791, line: 962, type: !771)
!14434 = !DILocation(line: 962, column: 49, scope: !14428)
!14435 = !DILocalVariable(name: "arg", arg: 3, scope: !14428, file: !791, line: 963, type: !116)
!14436 = !DILocation(line: 963, column: 35, scope: !14428)
!14437 = !DILocalVariable(name: "argsize", arg: 4, scope: !14428, file: !791, line: 963, type: !55)
!14438 = !DILocation(line: 963, column: 47, scope: !14428)
!14439 = !DILocalVariable(name: "o", scope: !14428, file: !791, line: 965, type: !801)
!14440 = !DILocation(line: 965, column: 32, scope: !14428)
!14441 = !DILocation(line: 965, column: 64, scope: !14428)
!14442 = !DILocation(line: 965, column: 36, scope: !14428)
!14443 = !DILocation(line: 966, column: 30, scope: !14428)
!14444 = !DILocation(line: 966, column: 33, scope: !14428)
!14445 = !DILocation(line: 966, column: 38, scope: !14428)
!14446 = !DILocation(line: 966, column: 10, scope: !14428)
!14447 = !DILocation(line: 966, column: 3, scope: !14428)
!14448 = distinct !DISubprogram(name: "quotearg_style", scope: !791, file: !791, line: 970, type: !14449, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14449 = !DISubroutineType(types: !14450)
!14450 = !{!9, !771, !116}
!14451 = !DILocalVariable(name: "s", arg: 1, scope: !14448, file: !791, line: 970, type: !771)
!14452 = !DILocation(line: 970, column: 36, scope: !14448)
!14453 = !DILocalVariable(name: "arg", arg: 2, scope: !14448, file: !791, line: 970, type: !116)
!14454 = !DILocation(line: 970, column: 51, scope: !14448)
!14455 = !DILocation(line: 972, column: 31, scope: !14448)
!14456 = !DILocation(line: 972, column: 34, scope: !14448)
!14457 = !DILocation(line: 972, column: 10, scope: !14448)
!14458 = !DILocation(line: 972, column: 3, scope: !14448)
!14459 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !791, file: !791, line: 976, type: !14460, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14460 = !DISubroutineType(types: !14461)
!14461 = !{!9, !771, !116, !55}
!14462 = !DILocalVariable(name: "s", arg: 1, scope: !14459, file: !791, line: 976, type: !771)
!14463 = !DILocation(line: 976, column: 40, scope: !14459)
!14464 = !DILocalVariable(name: "arg", arg: 2, scope: !14459, file: !791, line: 976, type: !116)
!14465 = !DILocation(line: 976, column: 55, scope: !14459)
!14466 = !DILocalVariable(name: "argsize", arg: 3, scope: !14459, file: !791, line: 976, type: !55)
!14467 = !DILocation(line: 976, column: 67, scope: !14459)
!14468 = !DILocation(line: 978, column: 35, scope: !14459)
!14469 = !DILocation(line: 978, column: 38, scope: !14459)
!14470 = !DILocation(line: 978, column: 43, scope: !14459)
!14471 = !DILocation(line: 978, column: 10, scope: !14459)
!14472 = !DILocation(line: 978, column: 3, scope: !14459)
!14473 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !791, file: !791, line: 982, type: !14474, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14474 = !DISubroutineType(types: !14475)
!14475 = !{!9, !116, !55, !10}
!14476 = !DILocalVariable(name: "arg", arg: 1, scope: !14473, file: !791, line: 982, type: !116)
!14477 = !DILocation(line: 982, column: 32, scope: !14473)
!14478 = !DILocalVariable(name: "argsize", arg: 2, scope: !14473, file: !791, line: 982, type: !55)
!14479 = !DILocation(line: 982, column: 44, scope: !14473)
!14480 = !DILocalVariable(name: "ch", arg: 3, scope: !14473, file: !791, line: 982, type: !10)
!14481 = !DILocation(line: 982, column: 58, scope: !14473)
!14482 = !DILocalVariable(name: "options", scope: !14473, file: !791, line: 984, type: !790)
!14483 = !DILocation(line: 984, column: 26, scope: !14473)
!14484 = !DILocation(line: 985, column: 13, scope: !14473)
!14485 = !DILocation(line: 986, column: 31, scope: !14473)
!14486 = !DILocation(line: 986, column: 3, scope: !14473)
!14487 = !DILocation(line: 987, column: 33, scope: !14473)
!14488 = !DILocation(line: 987, column: 38, scope: !14473)
!14489 = !DILocation(line: 987, column: 10, scope: !14473)
!14490 = !DILocation(line: 987, column: 3, scope: !14473)
!14491 = distinct !DISubprogram(name: "quotearg_char", scope: !791, file: !791, line: 991, type: !14492, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14492 = !DISubroutineType(types: !14493)
!14493 = !{!9, !116, !10}
!14494 = !DILocalVariable(name: "arg", arg: 1, scope: !14491, file: !791, line: 991, type: !116)
!14495 = !DILocation(line: 991, column: 28, scope: !14491)
!14496 = !DILocalVariable(name: "ch", arg: 2, scope: !14491, file: !791, line: 991, type: !10)
!14497 = !DILocation(line: 991, column: 38, scope: !14491)
!14498 = !DILocation(line: 993, column: 29, scope: !14491)
!14499 = !DILocation(line: 993, column: 44, scope: !14491)
!14500 = !DILocation(line: 993, column: 10, scope: !14491)
!14501 = !DILocation(line: 993, column: 3, scope: !14491)
!14502 = distinct !DISubprogram(name: "quotearg_colon", scope: !791, file: !791, line: 997, type: !10123, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14503 = !DILocalVariable(name: "arg", arg: 1, scope: !14502, file: !791, line: 997, type: !116)
!14504 = !DILocation(line: 997, column: 29, scope: !14502)
!14505 = !DILocation(line: 999, column: 25, scope: !14502)
!14506 = !DILocation(line: 999, column: 10, scope: !14502)
!14507 = !DILocation(line: 999, column: 3, scope: !14502)
!14508 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !791, file: !791, line: 1003, type: !9197, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14509 = !DILocalVariable(name: "arg", arg: 1, scope: !14508, file: !791, line: 1003, type: !116)
!14510 = !DILocation(line: 1003, column: 33, scope: !14508)
!14511 = !DILocalVariable(name: "argsize", arg: 2, scope: !14508, file: !791, line: 1003, type: !55)
!14512 = !DILocation(line: 1003, column: 45, scope: !14508)
!14513 = !DILocation(line: 1005, column: 29, scope: !14508)
!14514 = !DILocation(line: 1005, column: 34, scope: !14508)
!14515 = !DILocation(line: 1005, column: 10, scope: !14508)
!14516 = !DILocation(line: 1005, column: 3, scope: !14508)
!14517 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !791, file: !791, line: 1009, type: !14396, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14518 = !DILocalVariable(name: "n", arg: 1, scope: !14517, file: !791, line: 1009, type: !7)
!14519 = !DILocation(line: 1009, column: 29, scope: !14517)
!14520 = !DILocalVariable(name: "s", arg: 2, scope: !14517, file: !791, line: 1009, type: !771)
!14521 = !DILocation(line: 1009, column: 51, scope: !14517)
!14522 = !DILocalVariable(name: "arg", arg: 3, scope: !14517, file: !791, line: 1009, type: !116)
!14523 = !DILocation(line: 1009, column: 66, scope: !14517)
!14524 = !DILocalVariable(name: "options", scope: !14517, file: !791, line: 1011, type: !790)
!14525 = !DILocation(line: 1011, column: 26, scope: !14517)
!14526 = !DILocation(line: 1012, column: 41, scope: !14517)
!14527 = !DILocation(line: 1012, column: 13, scope: !14517)
!14528 = !DILocation(line: 1013, column: 3, scope: !14517)
!14529 = !DILocation(line: 1014, column: 30, scope: !14517)
!14530 = !DILocation(line: 1014, column: 33, scope: !14517)
!14531 = !DILocation(line: 1014, column: 10, scope: !14517)
!14532 = !DILocation(line: 1014, column: 3, scope: !14517)
!14533 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !791, file: !791, line: 1018, type: !14534, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14534 = !DISubroutineType(types: !14535)
!14535 = !{!9, !7, !116, !116, !116}
!14536 = !DILocalVariable(name: "n", arg: 1, scope: !14533, file: !791, line: 1018, type: !7)
!14537 = !DILocation(line: 1018, column: 24, scope: !14533)
!14538 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14533, file: !791, line: 1018, type: !116)
!14539 = !DILocation(line: 1018, column: 39, scope: !14533)
!14540 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14533, file: !791, line: 1019, type: !116)
!14541 = !DILocation(line: 1019, column: 32, scope: !14533)
!14542 = !DILocalVariable(name: "arg", arg: 4, scope: !14533, file: !791, line: 1019, type: !116)
!14543 = !DILocation(line: 1019, column: 57, scope: !14533)
!14544 = !DILocation(line: 1021, column: 33, scope: !14533)
!14545 = !DILocation(line: 1021, column: 36, scope: !14533)
!14546 = !DILocation(line: 1021, column: 48, scope: !14533)
!14547 = !DILocation(line: 1021, column: 61, scope: !14533)
!14548 = !DILocation(line: 1021, column: 10, scope: !14533)
!14549 = !DILocation(line: 1021, column: 3, scope: !14533)
!14550 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !791, file: !791, line: 1026, type: !14551, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14551 = !DISubroutineType(types: !14552)
!14552 = !{!9, !7, !116, !116, !116, !55}
!14553 = !DILocalVariable(name: "n", arg: 1, scope: !14550, file: !791, line: 1026, type: !7)
!14554 = !DILocation(line: 1026, column: 28, scope: !14550)
!14555 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14550, file: !791, line: 1026, type: !116)
!14556 = !DILocation(line: 1026, column: 43, scope: !14550)
!14557 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14550, file: !791, line: 1027, type: !116)
!14558 = !DILocation(line: 1027, column: 36, scope: !14550)
!14559 = !DILocalVariable(name: "arg", arg: 4, scope: !14550, file: !791, line: 1028, type: !116)
!14560 = !DILocation(line: 1028, column: 36, scope: !14550)
!14561 = !DILocalVariable(name: "argsize", arg: 5, scope: !14550, file: !791, line: 1028, type: !55)
!14562 = !DILocation(line: 1028, column: 48, scope: !14550)
!14563 = !DILocalVariable(name: "o", scope: !14550, file: !791, line: 1030, type: !790)
!14564 = !DILocation(line: 1030, column: 26, scope: !14550)
!14565 = !DILocation(line: 1030, column: 30, scope: !14550)
!14566 = !DILocation(line: 1031, column: 27, scope: !14550)
!14567 = !DILocation(line: 1031, column: 39, scope: !14550)
!14568 = !DILocation(line: 1031, column: 3, scope: !14550)
!14569 = !DILocation(line: 1032, column: 30, scope: !14550)
!14570 = !DILocation(line: 1032, column: 33, scope: !14550)
!14571 = !DILocation(line: 1032, column: 38, scope: !14550)
!14572 = !DILocation(line: 1032, column: 10, scope: !14550)
!14573 = !DILocation(line: 1032, column: 3, scope: !14550)
!14574 = distinct !DISubprogram(name: "quotearg_custom", scope: !791, file: !791, line: 1036, type: !14575, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14575 = !DISubroutineType(types: !14576)
!14576 = !{!9, !116, !116, !116}
!14577 = !DILocalVariable(name: "left_quote", arg: 1, scope: !14574, file: !791, line: 1036, type: !116)
!14578 = !DILocation(line: 1036, column: 30, scope: !14574)
!14579 = !DILocalVariable(name: "right_quote", arg: 2, scope: !14574, file: !791, line: 1036, type: !116)
!14580 = !DILocation(line: 1036, column: 54, scope: !14574)
!14581 = !DILocalVariable(name: "arg", arg: 3, scope: !14574, file: !791, line: 1037, type: !116)
!14582 = !DILocation(line: 1037, column: 30, scope: !14574)
!14583 = !DILocation(line: 1039, column: 32, scope: !14574)
!14584 = !DILocation(line: 1039, column: 44, scope: !14574)
!14585 = !DILocation(line: 1039, column: 57, scope: !14574)
!14586 = !DILocation(line: 1039, column: 10, scope: !14574)
!14587 = !DILocation(line: 1039, column: 3, scope: !14574)
!14588 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !791, file: !791, line: 1043, type: !14589, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14589 = !DISubroutineType(types: !14590)
!14590 = !{!9, !116, !116, !116, !55}
!14591 = !DILocalVariable(name: "left_quote", arg: 1, scope: !14588, file: !791, line: 1043, type: !116)
!14592 = !DILocation(line: 1043, column: 34, scope: !14588)
!14593 = !DILocalVariable(name: "right_quote", arg: 2, scope: !14588, file: !791, line: 1043, type: !116)
!14594 = !DILocation(line: 1043, column: 58, scope: !14588)
!14595 = !DILocalVariable(name: "arg", arg: 3, scope: !14588, file: !791, line: 1044, type: !116)
!14596 = !DILocation(line: 1044, column: 34, scope: !14588)
!14597 = !DILocalVariable(name: "argsize", arg: 4, scope: !14588, file: !791, line: 1044, type: !55)
!14598 = !DILocation(line: 1044, column: 46, scope: !14588)
!14599 = !DILocation(line: 1046, column: 36, scope: !14588)
!14600 = !DILocation(line: 1046, column: 48, scope: !14588)
!14601 = !DILocation(line: 1046, column: 61, scope: !14588)
!14602 = !DILocation(line: 1047, column: 33, scope: !14588)
!14603 = !DILocation(line: 1046, column: 10, scope: !14588)
!14604 = !DILocation(line: 1046, column: 3, scope: !14588)
!14605 = distinct !DISubprogram(name: "quote_n_mem", scope: !791, file: !791, line: 1061, type: !14606, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14606 = !DISubroutineType(types: !14607)
!14607 = !{!116, !7, !116, !55}
!14608 = !DILocalVariable(name: "n", arg: 1, scope: !14605, file: !791, line: 1061, type: !7)
!14609 = !DILocation(line: 1061, column: 18, scope: !14605)
!14610 = !DILocalVariable(name: "arg", arg: 2, scope: !14605, file: !791, line: 1061, type: !116)
!14611 = !DILocation(line: 1061, column: 33, scope: !14605)
!14612 = !DILocalVariable(name: "argsize", arg: 3, scope: !14605, file: !791, line: 1061, type: !55)
!14613 = !DILocation(line: 1061, column: 45, scope: !14605)
!14614 = !DILocation(line: 1063, column: 30, scope: !14605)
!14615 = !DILocation(line: 1063, column: 33, scope: !14605)
!14616 = !DILocation(line: 1063, column: 38, scope: !14605)
!14617 = !DILocation(line: 1063, column: 10, scope: !14605)
!14618 = !DILocation(line: 1063, column: 3, scope: !14605)
!14619 = distinct !DISubprogram(name: "quote_mem", scope: !791, file: !791, line: 1067, type: !14620, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{!116, !116, !55}
!14622 = !DILocalVariable(name: "arg", arg: 1, scope: !14619, file: !791, line: 1067, type: !116)
!14623 = !DILocation(line: 1067, column: 24, scope: !14619)
!14624 = !DILocalVariable(name: "argsize", arg: 2, scope: !14619, file: !791, line: 1067, type: !55)
!14625 = !DILocation(line: 1067, column: 36, scope: !14619)
!14626 = !DILocation(line: 1069, column: 26, scope: !14619)
!14627 = !DILocation(line: 1069, column: 31, scope: !14619)
!14628 = !DILocation(line: 1069, column: 10, scope: !14619)
!14629 = !DILocation(line: 1069, column: 3, scope: !14619)
!14630 = distinct !DISubprogram(name: "quote_n", scope: !791, file: !791, line: 1073, type: !14631, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14631 = !DISubroutineType(types: !14632)
!14632 = !{!116, !7, !116}
!14633 = !DILocalVariable(name: "n", arg: 1, scope: !14630, file: !791, line: 1073, type: !7)
!14634 = !DILocation(line: 1073, column: 14, scope: !14630)
!14635 = !DILocalVariable(name: "arg", arg: 2, scope: !14630, file: !791, line: 1073, type: !116)
!14636 = !DILocation(line: 1073, column: 29, scope: !14630)
!14637 = !DILocation(line: 1075, column: 23, scope: !14630)
!14638 = !DILocation(line: 1075, column: 26, scope: !14630)
!14639 = !DILocation(line: 1075, column: 10, scope: !14630)
!14640 = !DILocation(line: 1075, column: 3, scope: !14630)
!14641 = distinct !DISubprogram(name: "quote", scope: !791, file: !791, line: 1079, type: !14642, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !768, retainedNodes: !216)
!14642 = !DISubroutineType(types: !14643)
!14643 = !{!116, !116}
!14644 = !DILocalVariable(name: "arg", arg: 1, scope: !14641, file: !791, line: 1079, type: !116)
!14645 = !DILocation(line: 1079, column: 20, scope: !14641)
!14646 = !DILocation(line: 1081, column: 22, scope: !14641)
!14647 = !DILocation(line: 1081, column: 10, scope: !14641)
!14648 = !DILocation(line: 1081, column: 3, scope: !14641)
!14649 = distinct !DISubprogram(name: "renameatu", scope: !14650, file: !14650, line: 77, type: !14651, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1375, retainedNodes: !216)
!14650 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14651 = !DISubroutineType(types: !14652)
!14652 = !{!7, !7, !116, !7, !116, !70}
!14653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !14654)
!14654 = !{!14655, !14656, !14657, !14658, !14659, !14660, !14661, !14662, !14663, !14664, !14665, !14666, !14671, !14672, !14673}
!14655 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14653, file: !339, line: 48, baseType: !263, size: 64)
!14656 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14653, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!14657 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !14653, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!14658 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !14653, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!14659 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !14653, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!14660 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !14653, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!14661 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !14653, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!14662 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !14653, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!14663 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !14653, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!14664 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !14653, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!14665 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !14653, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!14666 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !14653, file: !339, line: 91, baseType: !14667, size: 128, offset: 576)
!14667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !14668)
!14668 = !{!14669, !14670}
!14669 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !14667, file: !358, line: 11, baseType: !361, size: 64)
!14670 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !14667, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!14671 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !14653, file: !339, line: 92, baseType: !14667, size: 128, offset: 704)
!14672 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !14653, file: !339, line: 93, baseType: !14667, size: 128, offset: 832)
!14673 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !14653, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!14674 = !DILocalVariable(name: "fd1", arg: 1, scope: !14649, file: !14650, line: 77, type: !7)
!14675 = !DILocation(line: 77, column: 16, scope: !14649)
!14676 = !DILocalVariable(name: "src", arg: 2, scope: !14649, file: !14650, line: 77, type: !116)
!14677 = !DILocation(line: 77, column: 33, scope: !14649)
!14678 = !DILocalVariable(name: "fd2", arg: 3, scope: !14649, file: !14650, line: 77, type: !7)
!14679 = !DILocation(line: 77, column: 42, scope: !14649)
!14680 = !DILocalVariable(name: "dst", arg: 4, scope: !14649, file: !14650, line: 77, type: !116)
!14681 = !DILocation(line: 77, column: 59, scope: !14649)
!14682 = !DILocalVariable(name: "flags", arg: 5, scope: !14649, file: !14650, line: 78, type: !70)
!14683 = !DILocation(line: 78, column: 25, scope: !14649)
!14684 = !DILocalVariable(name: "ret_val", scope: !14649, file: !14650, line: 80, type: !7)
!14685 = !DILocation(line: 80, column: 7, scope: !14649)
!14686 = !DILocalVariable(name: "err", scope: !14649, file: !14650, line: 81, type: !7)
!14687 = !DILocation(line: 81, column: 7, scope: !14649)
!14688 = !DILocation(line: 84, column: 24, scope: !14649)
!14689 = !DILocation(line: 84, column: 29, scope: !14649)
!14690 = !DILocation(line: 84, column: 34, scope: !14649)
!14691 = !DILocation(line: 84, column: 39, scope: !14649)
!14692 = !DILocation(line: 84, column: 44, scope: !14649)
!14693 = !DILocation(line: 84, column: 13, scope: !14649)
!14694 = !DILocation(line: 84, column: 11, scope: !14649)
!14695 = !DILocation(line: 85, column: 9, scope: !14649)
!14696 = !DILocation(line: 85, column: 7, scope: !14649)
!14697 = !DILocation(line: 99, column: 10, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14649, file: !14650, line: 99, column: 7)
!14699 = !DILocation(line: 99, column: 18, scope: !14698)
!14700 = !DILocation(line: 99, column: 22, scope: !14698)
!14701 = !DILocation(line: 99, column: 26, scope: !14698)
!14702 = !DILocation(line: 99, column: 30, scope: !14698)
!14703 = !DILocation(line: 99, column: 40, scope: !14698)
!14704 = !DILocation(line: 99, column: 43, scope: !14698)
!14705 = !DILocation(line: 99, column: 47, scope: !14698)
!14706 = !DILocation(line: 99, column: 57, scope: !14698)
!14707 = !DILocation(line: 99, column: 60, scope: !14698)
!14708 = !DILocation(line: 99, column: 64, scope: !14698)
!14709 = !DILocation(line: 99, column: 7, scope: !14649)
!14710 = !DILocation(line: 100, column: 12, scope: !14698)
!14711 = !DILocation(line: 100, column: 5, scope: !14698)
!14712 = !DILocalVariable(name: "src_len", scope: !14713, file: !14650, line: 104, type: !55)
!14713 = distinct !DILexicalBlock(scope: !14649, file: !14650, line: 103, column: 3)
!14714 = !DILocation(line: 104, column: 10, scope: !14713)
!14715 = !DILocalVariable(name: "dst_len", scope: !14713, file: !14650, line: 105, type: !55)
!14716 = !DILocation(line: 105, column: 10, scope: !14713)
!14717 = !DILocalVariable(name: "src_temp", scope: !14713, file: !14650, line: 106, type: !9)
!14718 = !DILocation(line: 106, column: 9, scope: !14713)
!14719 = !DILocation(line: 106, column: 29, scope: !14713)
!14720 = !DILocalVariable(name: "dst_temp", scope: !14713, file: !14650, line: 107, type: !9)
!14721 = !DILocation(line: 107, column: 9, scope: !14713)
!14722 = !DILocation(line: 107, column: 29, scope: !14713)
!14723 = !DILocalVariable(name: "src_slash", scope: !14713, file: !14650, line: 108, type: !142)
!14724 = !DILocation(line: 108, column: 8, scope: !14713)
!14725 = !DILocalVariable(name: "dst_slash", scope: !14713, file: !14650, line: 109, type: !142)
!14726 = !DILocation(line: 109, column: 8, scope: !14713)
!14727 = !DILocalVariable(name: "rename_errno", scope: !14713, file: !14650, line: 110, type: !7)
!14728 = !DILocation(line: 110, column: 7, scope: !14713)
!14729 = !DILocalVariable(name: "src_st", scope: !14713, file: !14650, line: 111, type: !14653)
!14730 = !DILocation(line: 111, column: 15, scope: !14713)
!14731 = !DILocalVariable(name: "dst_st", scope: !14713, file: !14650, line: 112, type: !14653)
!14732 = !DILocation(line: 112, column: 15, scope: !14713)
!14733 = !DILocalVariable(name: "dst_found_nonexistent", scope: !14713, file: !14650, line: 113, type: !142)
!14734 = !DILocation(line: 113, column: 8, scope: !14713)
!14735 = !DILocation(line: 115, column: 7, scope: !14736)
!14736 = distinct !DILexicalBlock(scope: !14713, file: !14650, line: 115, column: 7)
!14737 = !DILocation(line: 115, column: 13, scope: !14736)
!14738 = !DILocation(line: 115, column: 7, scope: !14713)
!14739 = !DILocation(line: 118, column: 11, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14741, file: !14650, line: 118, column: 11)
!14741 = distinct !DILexicalBlock(scope: !14736, file: !14650, line: 116, column: 5)
!14742 = !DILocation(line: 118, column: 17, scope: !14740)
!14743 = !DILocation(line: 118, column: 11, scope: !14741)
!14744 = !DILocation(line: 119, column: 16, scope: !14740)
!14745 = !DILocation(line: 119, column: 9, scope: !14740)
!14746 = !DILocation(line: 124, column: 24, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14748, file: !14650, line: 124, column: 15)
!14748 = distinct !DILexicalBlock(scope: !14740, file: !14650, line: 121, column: 9)
!14749 = !DILocation(line: 124, column: 29, scope: !14747)
!14750 = !DILocation(line: 124, column: 15, scope: !14747)
!14751 = !DILocation(line: 124, column: 43, scope: !14747)
!14752 = !DILocation(line: 124, column: 48, scope: !14747)
!14753 = !DILocation(line: 124, column: 51, scope: !14747)
!14754 = !DILocation(line: 124, column: 57, scope: !14747)
!14755 = !DILocation(line: 124, column: 15, scope: !14748)
!14756 = !DILocation(line: 125, column: 20, scope: !14747)
!14757 = !DILocation(line: 125, column: 13, scope: !14747)
!14758 = !DILocation(line: 126, column: 15, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14748, file: !14650, line: 126, column: 15)
!14760 = !DILocation(line: 126, column: 21, scope: !14759)
!14761 = !DILocation(line: 126, column: 15, scope: !14748)
!14762 = !DILocation(line: 127, column: 13, scope: !14759)
!14763 = !DILocation(line: 128, column: 33, scope: !14748)
!14764 = !DILocation(line: 130, column: 5, scope: !14741)
!14765 = !DILocation(line: 133, column: 21, scope: !14713)
!14766 = !DILocation(line: 133, column: 13, scope: !14713)
!14767 = !DILocation(line: 133, column: 11, scope: !14713)
!14768 = !DILocation(line: 134, column: 21, scope: !14713)
!14769 = !DILocation(line: 134, column: 13, scope: !14713)
!14770 = !DILocation(line: 134, column: 11, scope: !14713)
!14771 = !DILocation(line: 135, column: 8, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14713, file: !14650, line: 135, column: 7)
!14773 = !DILocation(line: 135, column: 16, scope: !14772)
!14774 = !DILocation(line: 135, column: 20, scope: !14772)
!14775 = !DILocation(line: 135, column: 7, scope: !14713)
!14776 = !DILocation(line: 136, column: 22, scope: !14772)
!14777 = !DILocation(line: 136, column: 27, scope: !14772)
!14778 = !DILocation(line: 136, column: 32, scope: !14772)
!14779 = !DILocation(line: 136, column: 37, scope: !14772)
!14780 = !DILocation(line: 136, column: 12, scope: !14772)
!14781 = !DILocation(line: 136, column: 5, scope: !14772)
!14782 = !DILocation(line: 138, column: 15, scope: !14713)
!14783 = !DILocation(line: 138, column: 19, scope: !14713)
!14784 = !DILocation(line: 138, column: 27, scope: !14713)
!14785 = !DILocation(line: 138, column: 32, scope: !14713)
!14786 = !DILocation(line: 138, column: 13, scope: !14713)
!14787 = !DILocation(line: 139, column: 15, scope: !14713)
!14788 = !DILocation(line: 139, column: 19, scope: !14713)
!14789 = !DILocation(line: 139, column: 27, scope: !14713)
!14790 = !DILocation(line: 139, column: 32, scope: !14713)
!14791 = !DILocation(line: 139, column: 13, scope: !14713)
!14792 = !DILocation(line: 140, column: 8, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14713, file: !14650, line: 140, column: 7)
!14794 = !DILocation(line: 140, column: 18, scope: !14793)
!14795 = !DILocation(line: 140, column: 22, scope: !14793)
!14796 = !DILocation(line: 140, column: 7, scope: !14713)
!14797 = !DILocation(line: 141, column: 22, scope: !14793)
!14798 = !DILocation(line: 141, column: 27, scope: !14793)
!14799 = !DILocation(line: 141, column: 32, scope: !14793)
!14800 = !DILocation(line: 141, column: 37, scope: !14793)
!14801 = !DILocation(line: 141, column: 12, scope: !14793)
!14802 = !DILocation(line: 141, column: 5, scope: !14793)
!14803 = !DILocation(line: 147, column: 16, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14713, file: !14650, line: 147, column: 7)
!14805 = !DILocation(line: 147, column: 21, scope: !14804)
!14806 = !DILocation(line: 147, column: 7, scope: !14804)
!14807 = !DILocation(line: 147, column: 7, scope: !14713)
!14808 = !DILocation(line: 148, column: 5, scope: !14804)
!14809 = !DILocation(line: 149, column: 7, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14713, file: !14650, line: 149, column: 7)
!14811 = !DILocation(line: 149, column: 7, scope: !14713)
!14812 = !DILocation(line: 151, column: 12, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !14650, line: 151, column: 11)
!14814 = distinct !DILexicalBlock(scope: !14810, file: !14650, line: 150, column: 5)
!14815 = !DILocation(line: 151, column: 11, scope: !14814)
!14816 = !DILocation(line: 152, column: 16, scope: !14813)
!14817 = !DILocation(line: 152, column: 9, scope: !14813)
!14818 = !DILocation(line: 153, column: 5, scope: !14814)
!14819 = !DILocation(line: 154, column: 21, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14810, file: !14650, line: 154, column: 12)
!14821 = !DILocation(line: 154, column: 26, scope: !14820)
!14822 = !DILocation(line: 154, column: 12, scope: !14820)
!14823 = !DILocation(line: 154, column: 12, scope: !14810)
!14824 = !DILocation(line: 156, column: 11, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !14650, line: 156, column: 11)
!14826 = distinct !DILexicalBlock(scope: !14820, file: !14650, line: 155, column: 5)
!14827 = !DILocation(line: 156, column: 17, scope: !14825)
!14828 = !DILocation(line: 156, column: 27, scope: !14825)
!14829 = !DILocation(line: 156, column: 31, scope: !14825)
!14830 = !DILocation(line: 156, column: 11, scope: !14826)
!14831 = !DILocation(line: 157, column: 9, scope: !14825)
!14832 = !DILocation(line: 158, column: 5, scope: !14826)
!14833 = !DILocation(line: 159, column: 13, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14820, file: !14650, line: 159, column: 12)
!14835 = !DILocation(line: 159, column: 12, scope: !14820)
!14836 = !DILocation(line: 160, column: 12, scope: !14834)
!14837 = !DILocation(line: 160, column: 5, scope: !14834)
!14838 = !DILocation(line: 161, column: 13, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14834, file: !14650, line: 161, column: 12)
!14840 = !DILocation(line: 161, column: 12, scope: !14834)
!14841 = !DILocation(line: 162, column: 12, scope: !14839)
!14842 = !DILocation(line: 162, column: 5, scope: !14839)
!14843 = !DILocation(line: 214, column: 23, scope: !14713)
!14844 = !DILocation(line: 214, column: 28, scope: !14713)
!14845 = !DILocation(line: 214, column: 38, scope: !14713)
!14846 = !DILocation(line: 214, column: 43, scope: !14713)
!14847 = !DILocation(line: 214, column: 13, scope: !14713)
!14848 = !DILocation(line: 214, column: 11, scope: !14713)
!14849 = !DILocation(line: 215, column: 18, scope: !14713)
!14850 = !DILocation(line: 215, column: 16, scope: !14713)
!14851 = !DILocation(line: 216, column: 3, scope: !14713)
!14852 = !DILabel(scope: !14713, name: "out", file: !14650, line: 217)
!14853 = !DILocation(line: 217, column: 2, scope: !14713)
!14854 = !DILocation(line: 218, column: 7, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14713, file: !14650, line: 218, column: 7)
!14856 = !DILocation(line: 218, column: 19, scope: !14855)
!14857 = !DILocation(line: 218, column: 16, scope: !14855)
!14858 = !DILocation(line: 218, column: 7, scope: !14713)
!14859 = !DILocation(line: 219, column: 11, scope: !14855)
!14860 = !DILocation(line: 219, column: 5, scope: !14855)
!14861 = !DILocation(line: 220, column: 7, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14713, file: !14650, line: 220, column: 7)
!14863 = !DILocation(line: 220, column: 19, scope: !14862)
!14864 = !DILocation(line: 220, column: 16, scope: !14862)
!14865 = !DILocation(line: 220, column: 7, scope: !14713)
!14866 = !DILocation(line: 221, column: 11, scope: !14862)
!14867 = !DILocation(line: 221, column: 5, scope: !14862)
!14868 = !DILocation(line: 222, column: 11, scope: !14713)
!14869 = !DILocation(line: 222, column: 3, scope: !14713)
!14870 = !DILocation(line: 222, column: 9, scope: !14713)
!14871 = !DILocation(line: 223, column: 10, scope: !14713)
!14872 = !DILocation(line: 223, column: 3, scope: !14713)
!14873 = !DILocation(line: 233, column: 1, scope: !14649)
!14874 = distinct !DISubprogram(name: "errno_fail", scope: !14650, file: !14650, line: 33, type: !14875, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1375, retainedNodes: !216)
!14875 = !DISubroutineType(types: !14876)
!14876 = !{!7, !7}
!14877 = !DILocalVariable(name: "e", arg: 1, scope: !14874, file: !14650, line: 33, type: !7)
!14878 = !DILocation(line: 33, column: 17, scope: !14874)
!14879 = !DILocation(line: 35, column: 11, scope: !14874)
!14880 = !DILocation(line: 35, column: 3, scope: !14874)
!14881 = !DILocation(line: 35, column: 9, scope: !14874)
!14882 = !DILocation(line: 36, column: 3, scope: !14874)
!14883 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !14884, file: !14884, line: 29, type: !14885, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1378, retainedNodes: !216)
!14884 = !DIFile(filename: "lib/root-dev-ino.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14885 = !DISubroutineType(types: !14886)
!14886 = !{!14887, !14887}
!14887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14888, size: 64)
!14888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !256, line: 7, size: 128, elements: !14889)
!14889 = !{!14890, !14891}
!14890 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14888, file: !256, line: 9, baseType: !259, size: 64)
!14891 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14888, file: !256, line: 10, baseType: !262, size: 64, offset: 64)
!14892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !14893)
!14893 = !{!14894, !14895, !14896, !14897, !14898, !14899, !14900, !14901, !14902, !14903, !14904, !14905, !14910, !14911, !14912}
!14894 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14892, file: !339, line: 48, baseType: !263, size: 64)
!14895 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14892, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!14896 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !14892, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!14897 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !14892, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!14898 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !14892, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!14899 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !14892, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!14900 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !14892, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!14901 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !14892, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!14902 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !14892, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!14903 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !14892, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!14904 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !14892, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!14905 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !14892, file: !339, line: 91, baseType: !14906, size: 128, offset: 576)
!14906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !14907)
!14907 = !{!14908, !14909}
!14908 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !14906, file: !358, line: 11, baseType: !361, size: 64)
!14909 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !14906, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!14910 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !14892, file: !339, line: 92, baseType: !14906, size: 128, offset: 704)
!14911 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !14892, file: !339, line: 93, baseType: !14906, size: 128, offset: 832)
!14912 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !14892, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!14913 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !14883, file: !14884, line: 29, type: !14887)
!14914 = !DILocation(line: 29, column: 35, scope: !14883)
!14915 = !DILocalVariable(name: "statbuf", scope: !14883, file: !14884, line: 31, type: !14892)
!14916 = !DILocation(line: 31, column: 15, scope: !14883)
!14917 = !DILocation(line: 32, column: 7, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14883, file: !14884, line: 32, column: 7)
!14919 = !DILocation(line: 32, column: 7, scope: !14883)
!14920 = !DILocation(line: 33, column: 5, scope: !14918)
!14921 = !DILocation(line: 34, column: 30, scope: !14883)
!14922 = !DILocation(line: 34, column: 3, scope: !14883)
!14923 = !DILocation(line: 34, column: 13, scope: !14883)
!14924 = !DILocation(line: 34, column: 20, scope: !14883)
!14925 = !DILocation(line: 35, column: 30, scope: !14883)
!14926 = !DILocation(line: 35, column: 3, scope: !14883)
!14927 = !DILocation(line: 35, column: 13, scope: !14883)
!14928 = !DILocation(line: 35, column: 20, scope: !14883)
!14929 = !DILocation(line: 36, column: 10, scope: !14883)
!14930 = !DILocation(line: 36, column: 3, scope: !14883)
!14931 = !DILocation(line: 37, column: 1, scope: !14883)
!14932 = distinct !DISubprogram(name: "safe_write", scope: !14933, file: !14933, line: 56, type: !10885, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1381, retainedNodes: !216)
!14933 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14934 = !DILocalVariable(name: "fd", arg: 1, scope: !14932, file: !14933, line: 56, type: !7)
!14935 = !DILocation(line: 56, column: 14, scope: !14932)
!14936 = !DILocalVariable(name: "buf", arg: 2, scope: !14932, file: !14933, line: 56, type: !709)
!14937 = !DILocation(line: 56, column: 30, scope: !14932)
!14938 = !DILocalVariable(name: "count", arg: 3, scope: !14932, file: !14933, line: 56, type: !55)
!14939 = !DILocation(line: 56, column: 42, scope: !14932)
!14940 = !DILocation(line: 58, column: 3, scope: !14932)
!14941 = !DILocalVariable(name: "result", scope: !14942, file: !14933, line: 60, type: !540)
!14942 = distinct !DILexicalBlock(scope: !14943, file: !14933, line: 59, column: 5)
!14943 = distinct !DILexicalBlock(scope: !14944, file: !14933, line: 58, column: 3)
!14944 = distinct !DILexicalBlock(scope: !14932, file: !14933, line: 58, column: 3)
!14945 = !DILocation(line: 60, column: 15, scope: !14942)
!14946 = !DILocation(line: 60, column: 28, scope: !14942)
!14947 = !DILocation(line: 60, column: 32, scope: !14942)
!14948 = !DILocation(line: 60, column: 37, scope: !14942)
!14949 = !DILocation(line: 60, column: 24, scope: !14942)
!14950 = !DILocation(line: 62, column: 16, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14942, file: !14933, line: 62, column: 11)
!14952 = !DILocation(line: 62, column: 13, scope: !14951)
!14953 = !DILocation(line: 62, column: 11, scope: !14942)
!14954 = !DILocation(line: 63, column: 16, scope: !14951)
!14955 = !DILocation(line: 63, column: 9, scope: !14951)
!14956 = !DILocation(line: 64, column: 16, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14951, file: !14933, line: 64, column: 16)
!14958 = !DILocation(line: 64, column: 16, scope: !14951)
!14959 = !DILocation(line: 65, column: 9, scope: !14957)
!14960 = distinct !{!14960, !14961, !14962}
!14961 = !DILocation(line: 58, column: 3, scope: !14944)
!14962 = !DILocation(line: 70, column: 5, scope: !14944)
!14963 = !DILocation(line: 66, column: 16, scope: !14964)
!14964 = distinct !DILexicalBlock(scope: !14957, file: !14933, line: 66, column: 16)
!14965 = !DILocation(line: 66, column: 22, scope: !14964)
!14966 = !DILocation(line: 66, column: 32, scope: !14964)
!14967 = !DILocation(line: 66, column: 53, scope: !14964)
!14968 = !DILocation(line: 66, column: 51, scope: !14964)
!14969 = !DILocation(line: 66, column: 16, scope: !14957)
!14970 = !DILocation(line: 67, column: 15, scope: !14964)
!14971 = !DILocation(line: 67, column: 9, scope: !14964)
!14972 = !DILocation(line: 69, column: 16, scope: !14964)
!14973 = !DILocation(line: 69, column: 9, scope: !14964)
!14974 = !DILocation(line: 58, column: 3, scope: !14943)
!14975 = !DILocation(line: 71, column: 1, scope: !14932)
!14976 = distinct !DISubprogram(name: "same_name", scope: !14977, file: !14977, line: 61, type: !14978, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1384, retainedNodes: !216)
!14977 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!14978 = !DISubroutineType(types: !14979)
!14979 = !{!142, !116, !116}
!14980 = !DILocalVariable(name: "source", arg: 1, scope: !14976, file: !14977, line: 61, type: !116)
!14981 = !DILocation(line: 61, column: 24, scope: !14976)
!14982 = !DILocalVariable(name: "dest", arg: 2, scope: !14976, file: !14977, line: 61, type: !116)
!14983 = !DILocation(line: 61, column: 44, scope: !14976)
!14984 = !DILocation(line: 63, column: 33, scope: !14976)
!14985 = !DILocation(line: 63, column: 51, scope: !14976)
!14986 = !DILocation(line: 63, column: 10, scope: !14976)
!14987 = !DILocation(line: 63, column: 3, scope: !14976)
!14988 = distinct !DISubprogram(name: "same_nameat", scope: !14977, file: !14977, line: 70, type: !14989, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1384, retainedNodes: !216)
!14989 = !DISubroutineType(types: !14990)
!14990 = !{!142, !7, !116, !7, !116}
!14991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !14992)
!14992 = !{!14993, !14994, !14995, !14996, !14997, !14998, !14999, !15000, !15001, !15002, !15003, !15004, !15009, !15010, !15011}
!14993 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !14991, file: !339, line: 48, baseType: !263, size: 64)
!14994 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !14991, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!14995 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !14991, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!14996 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !14991, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!14997 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !14991, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!14998 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !14991, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!14999 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !14991, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!15000 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !14991, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!15001 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !14991, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!15002 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !14991, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!15003 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !14991, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!15004 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !14991, file: !339, line: 91, baseType: !15005, size: 128, offset: 576)
!15005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !15006)
!15006 = !{!15007, !15008}
!15007 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15005, file: !358, line: 11, baseType: !361, size: 64)
!15008 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15005, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!15009 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !14991, file: !339, line: 92, baseType: !15005, size: 128, offset: 704)
!15010 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !14991, file: !339, line: 93, baseType: !15005, size: 128, offset: 832)
!15011 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !14991, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!15012 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !14988, file: !14977, line: 70, type: !7)
!15013 = !DILocation(line: 70, column: 18, scope: !14988)
!15014 = !DILocalVariable(name: "source", arg: 2, scope: !14988, file: !14977, line: 70, type: !116)
!15015 = !DILocation(line: 70, column: 42, scope: !14988)
!15016 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !14988, file: !14977, line: 71, type: !7)
!15017 = !DILocation(line: 71, column: 18, scope: !14988)
!15018 = !DILocalVariable(name: "dest", arg: 4, scope: !14988, file: !14977, line: 71, type: !116)
!15019 = !DILocation(line: 71, column: 40, scope: !14988)
!15020 = !DILocalVariable(name: "source_basename", scope: !14988, file: !14977, line: 74, type: !116)
!15021 = !DILocation(line: 74, column: 15, scope: !14988)
!15022 = !DILocation(line: 74, column: 49, scope: !14988)
!15023 = !DILocation(line: 74, column: 33, scope: !14988)
!15024 = !DILocalVariable(name: "dest_basename", scope: !14988, file: !14977, line: 75, type: !116)
!15025 = !DILocation(line: 75, column: 15, scope: !14988)
!15026 = !DILocation(line: 75, column: 47, scope: !14988)
!15027 = !DILocation(line: 75, column: 31, scope: !14988)
!15028 = !DILocalVariable(name: "source_baselen", scope: !14988, file: !14977, line: 76, type: !55)
!15029 = !DILocation(line: 76, column: 10, scope: !14988)
!15030 = !DILocation(line: 76, column: 37, scope: !14988)
!15031 = !DILocation(line: 76, column: 27, scope: !14988)
!15032 = !DILocalVariable(name: "dest_baselen", scope: !14988, file: !14977, line: 77, type: !55)
!15033 = !DILocation(line: 77, column: 10, scope: !14988)
!15034 = !DILocation(line: 77, column: 35, scope: !14988)
!15035 = !DILocation(line: 77, column: 25, scope: !14988)
!15036 = !DILocalVariable(name: "identical_basenames", scope: !14988, file: !14977, line: 78, type: !142)
!15037 = !DILocation(line: 78, column: 8, scope: !14988)
!15038 = !DILocation(line: 79, column: 6, scope: !14988)
!15039 = !DILocation(line: 79, column: 24, scope: !14988)
!15040 = !DILocation(line: 79, column: 21, scope: !14988)
!15041 = !DILocation(line: 80, column: 6, scope: !14988)
!15042 = !DILocation(line: 80, column: 17, scope: !14988)
!15043 = !DILocation(line: 80, column: 34, scope: !14988)
!15044 = !DILocation(line: 80, column: 49, scope: !14988)
!15045 = !DILocation(line: 80, column: 9, scope: !14988)
!15046 = !DILocation(line: 80, column: 63, scope: !14988)
!15047 = !DILocation(line: 0, scope: !14988)
!15048 = !DILocalVariable(name: "compare_dirs", scope: !14988, file: !14977, line: 81, type: !142)
!15049 = !DILocation(line: 81, column: 8, scope: !14988)
!15050 = !DILocation(line: 81, column: 23, scope: !14988)
!15051 = !DILocalVariable(name: "same", scope: !14988, file: !14977, line: 82, type: !142)
!15052 = !DILocation(line: 82, column: 8, scope: !14988)
!15053 = !DILocation(line: 92, column: 7, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !14988, file: !14977, line: 92, column: 7)
!15055 = !DILocation(line: 92, column: 7, scope: !14988)
!15056 = !DILocalVariable(name: "source_dir_stats", scope: !15057, file: !14977, line: 94, type: !14991)
!15057 = distinct !DILexicalBlock(scope: !15054, file: !14977, line: 93, column: 5)
!15058 = !DILocation(line: 94, column: 19, scope: !15057)
!15059 = !DILocalVariable(name: "dest_dir_stats", scope: !15057, file: !14977, line: 95, type: !14991)
!15060 = !DILocation(line: 95, column: 19, scope: !15057)
!15061 = !DILocalVariable(name: "source_dirname", scope: !15057, file: !14977, line: 98, type: !9)
!15062 = !DILocation(line: 98, column: 13, scope: !15057)
!15063 = !DILocation(line: 98, column: 40, scope: !15057)
!15064 = !DILocation(line: 98, column: 30, scope: !15057)
!15065 = !DILocalVariable(name: "flags", scope: !15057, file: !14977, line: 99, type: !7)
!15066 = !DILocation(line: 99, column: 11, scope: !15057)
!15067 = !DILocation(line: 100, column: 20, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15057, file: !14977, line: 100, column: 11)
!15069 = !DILocation(line: 100, column: 32, scope: !15068)
!15070 = !DILocation(line: 100, column: 67, scope: !15068)
!15071 = !DILocation(line: 100, column: 11, scope: !15068)
!15072 = !DILocation(line: 100, column: 74, scope: !15068)
!15073 = !DILocation(line: 100, column: 11, scope: !15057)
!15074 = !DILocation(line: 103, column: 21, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15068, file: !14977, line: 101, column: 9)
!15076 = !DILocation(line: 103, column: 34, scope: !15075)
!15077 = !DILocation(line: 103, column: 11, scope: !15075)
!15078 = !DILocation(line: 104, column: 9, scope: !15075)
!15079 = !DILocation(line: 105, column: 13, scope: !15057)
!15080 = !DILocation(line: 105, column: 7, scope: !15057)
!15081 = !DILocalVariable(name: "dest_dirname", scope: !15057, file: !14977, line: 107, type: !9)
!15082 = !DILocation(line: 107, column: 13, scope: !15057)
!15083 = !DILocation(line: 107, column: 38, scope: !15057)
!15084 = !DILocation(line: 107, column: 28, scope: !15057)
!15085 = !DILocation(line: 137, column: 20, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15057, file: !14977, line: 137, column: 11)
!15087 = !DILocation(line: 137, column: 30, scope: !15086)
!15088 = !DILocation(line: 137, column: 61, scope: !15086)
!15089 = !DILocation(line: 137, column: 11, scope: !15086)
!15090 = !DILocation(line: 137, column: 68, scope: !15086)
!15091 = !DILocation(line: 137, column: 11, scope: !15057)
!15092 = !DILocation(line: 140, column: 21, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15086, file: !14977, line: 138, column: 9)
!15094 = !DILocation(line: 140, column: 34, scope: !15093)
!15095 = !DILocation(line: 140, column: 11, scope: !15093)
!15096 = !DILocation(line: 141, column: 9, scope: !15093)
!15097 = !DILocation(line: 142, column: 14, scope: !15057)
!15098 = !DILocation(line: 0, scope: !15057)
!15099 = !DILocation(line: 142, column: 12, scope: !15057)
!15100 = !DILocation(line: 145, column: 13, scope: !15057)
!15101 = !DILocation(line: 145, column: 7, scope: !15057)
!15102 = !DILocation(line: 146, column: 5, scope: !15057)
!15103 = !DILocation(line: 148, column: 10, scope: !14988)
!15104 = !DILocation(line: 148, column: 3, scope: !14988)
!15105 = distinct !DISubprogram(name: "streamsavedir", scope: !858, file: !858, line: 91, type: !15106, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !845, retainedNodes: !216)
!15106 = !DISubroutineType(types: !15107)
!15107 = !{!9, !541, !848}
!15108 = !DILocalVariable(name: "dirp", arg: 1, scope: !15105, file: !858, line: 91, type: !541)
!15109 = !DILocation(line: 91, column: 21, scope: !15105)
!15110 = !DILocalVariable(name: "option", arg: 2, scope: !15105, file: !858, line: 91, type: !848)
!15111 = !DILocation(line: 91, column: 47, scope: !15105)
!15112 = !DILocalVariable(name: "name_space", scope: !15105, file: !858, line: 93, type: !9)
!15113 = !DILocation(line: 93, column: 9, scope: !15105)
!15114 = !DILocalVariable(name: "allocated", scope: !15105, file: !858, line: 94, type: !55)
!15115 = !DILocation(line: 94, column: 10, scope: !15105)
!15116 = !DILocalVariable(name: "entries", scope: !15105, file: !858, line: 95, type: !856)
!15117 = !DILocation(line: 95, column: 15, scope: !15105)
!15118 = !DILocalVariable(name: "entries_allocated", scope: !15105, file: !858, line: 96, type: !55)
!15119 = !DILocation(line: 96, column: 10, scope: !15105)
!15120 = !DILocalVariable(name: "entries_used", scope: !15105, file: !858, line: 97, type: !55)
!15121 = !DILocation(line: 97, column: 10, scope: !15105)
!15122 = !DILocalVariable(name: "used", scope: !15105, file: !858, line: 98, type: !55)
!15123 = !DILocation(line: 98, column: 10, scope: !15105)
!15124 = !DILocalVariable(name: "readdir_errno", scope: !15105, file: !858, line: 99, type: !7)
!15125 = !DILocation(line: 99, column: 7, scope: !15105)
!15126 = !DILocalVariable(name: "cmp", scope: !15105, file: !858, line: 100, type: !864)
!15127 = !DILocation(line: 100, column: 23, scope: !15105)
!15128 = !DILocation(line: 100, column: 55, scope: !15105)
!15129 = !DILocation(line: 100, column: 29, scope: !15105)
!15130 = !DILocation(line: 102, column: 7, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15105, file: !858, line: 102, column: 7)
!15132 = !DILocation(line: 102, column: 12, scope: !15131)
!15133 = !DILocation(line: 102, column: 7, scope: !15105)
!15134 = !DILocation(line: 103, column: 5, scope: !15131)
!15135 = !DILocation(line: 105, column: 3, scope: !15105)
!15136 = !DILocalVariable(name: "dp", scope: !15137, file: !858, line: 107, type: !870)
!15137 = distinct !DILexicalBlock(scope: !15138, file: !858, line: 106, column: 5)
!15138 = distinct !DILexicalBlock(scope: !15139, file: !858, line: 105, column: 3)
!15139 = distinct !DILexicalBlock(scope: !15105, file: !858, line: 105, column: 3)
!15140 = !DILocation(line: 107, column: 28, scope: !15137)
!15141 = !DILocalVariable(name: "entry", scope: !15137, file: !858, line: 108, type: !116)
!15142 = !DILocation(line: 108, column: 19, scope: !15137)
!15143 = !DILocation(line: 110, column: 7, scope: !15137)
!15144 = !DILocation(line: 110, column: 13, scope: !15137)
!15145 = !DILocation(line: 111, column: 21, scope: !15137)
!15146 = !DILocation(line: 111, column: 12, scope: !15137)
!15147 = !DILocation(line: 111, column: 10, scope: !15137)
!15148 = !DILocation(line: 112, column: 13, scope: !15149)
!15149 = distinct !DILexicalBlock(scope: !15137, file: !858, line: 112, column: 11)
!15150 = !DILocation(line: 112, column: 11, scope: !15137)
!15151 = !DILocation(line: 113, column: 9, scope: !15149)
!15152 = !DILocation(line: 117, column: 15, scope: !15137)
!15153 = !DILocation(line: 117, column: 19, scope: !15137)
!15154 = !DILocation(line: 117, column: 13, scope: !15137)
!15155 = !DILocation(line: 118, column: 11, scope: !15156)
!15156 = distinct !DILexicalBlock(scope: !15137, file: !858, line: 118, column: 11)
!15157 = !DILocation(line: 118, column: 17, scope: !15156)
!15158 = !DILocation(line: 118, column: 26, scope: !15156)
!15159 = !DILocation(line: 118, column: 39, scope: !15156)
!15160 = !DILocation(line: 118, column: 48, scope: !15156)
!15161 = !DILocation(line: 118, column: 64, scope: !15156)
!15162 = !DILocation(line: 118, column: 11, scope: !15137)
!15163 = !DILocalVariable(name: "entry_size", scope: !15164, file: !858, line: 120, type: !55)
!15164 = distinct !DILexicalBlock(scope: !15156, file: !858, line: 119, column: 9)
!15165 = !DILocation(line: 120, column: 18, scope: !15164)
!15166 = !DILocation(line: 120, column: 31, scope: !15164)
!15167 = !DILocation(line: 120, column: 52, scope: !15164)
!15168 = !DILocation(line: 121, column: 15, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15164, file: !858, line: 121, column: 15)
!15170 = !DILocation(line: 121, column: 15, scope: !15164)
!15171 = !DILocation(line: 123, column: 19, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15173, file: !858, line: 123, column: 19)
!15173 = distinct !DILexicalBlock(scope: !15169, file: !858, line: 122, column: 13)
!15174 = !DILocation(line: 123, column: 40, scope: !15172)
!15175 = !DILocation(line: 123, column: 37, scope: !15172)
!15176 = !DILocation(line: 123, column: 19, scope: !15173)
!15177 = !DILocalVariable(name: "n", scope: !15178, file: !858, line: 125, type: !55)
!15178 = distinct !DILexicalBlock(scope: !15172, file: !858, line: 124, column: 17)
!15179 = !DILocation(line: 125, column: 26, scope: !15178)
!15180 = !DILocation(line: 125, column: 30, scope: !15178)
!15181 = !DILocation(line: 126, column: 41, scope: !15178)
!15182 = !DILocation(line: 126, column: 29, scope: !15178)
!15183 = !DILocation(line: 126, column: 27, scope: !15178)
!15184 = !DILocation(line: 127, column: 39, scope: !15178)
!15185 = !DILocation(line: 127, column: 37, scope: !15178)
!15186 = !DILocation(line: 128, column: 17, scope: !15178)
!15187 = !DILocation(line: 129, column: 53, scope: !15173)
!15188 = !DILocation(line: 129, column: 44, scope: !15173)
!15189 = !DILocation(line: 129, column: 15, scope: !15173)
!15190 = !DILocation(line: 129, column: 23, scope: !15173)
!15191 = !DILocation(line: 129, column: 37, scope: !15173)
!15192 = !DILocation(line: 129, column: 42, scope: !15173)
!15193 = !DILocation(line: 131, column: 43, scope: !15173)
!15194 = !DILocation(line: 131, column: 47, scope: !15173)
!15195 = !DILocation(line: 131, column: 15, scope: !15173)
!15196 = !DILocation(line: 131, column: 23, scope: !15173)
!15197 = !DILocation(line: 131, column: 37, scope: !15173)
!15198 = !DILocation(line: 131, column: 41, scope: !15173)
!15199 = !DILocation(line: 133, column: 27, scope: !15173)
!15200 = !DILocation(line: 134, column: 13, scope: !15173)
!15201 = !DILocation(line: 137, column: 19, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15203, file: !858, line: 137, column: 19)
!15203 = distinct !DILexicalBlock(scope: !15169, file: !858, line: 136, column: 13)
!15204 = !DILocation(line: 137, column: 31, scope: !15202)
!15205 = !DILocation(line: 137, column: 29, scope: !15202)
!15206 = !DILocation(line: 137, column: 39, scope: !15202)
!15207 = !DILocation(line: 137, column: 36, scope: !15202)
!15208 = !DILocation(line: 137, column: 19, scope: !15203)
!15209 = !DILocalVariable(name: "n", scope: !15210, file: !858, line: 139, type: !55)
!15210 = distinct !DILexicalBlock(scope: !15202, file: !858, line: 138, column: 17)
!15211 = !DILocation(line: 139, column: 26, scope: !15210)
!15212 = !DILocation(line: 139, column: 30, scope: !15210)
!15213 = !DILocation(line: 139, column: 37, scope: !15210)
!15214 = !DILocation(line: 139, column: 35, scope: !15210)
!15215 = !DILocation(line: 140, column: 23, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15210, file: !858, line: 140, column: 23)
!15217 = !DILocation(line: 140, column: 27, scope: !15216)
!15218 = !DILocation(line: 140, column: 25, scope: !15216)
!15219 = !DILocation(line: 140, column: 23, scope: !15210)
!15220 = !DILocation(line: 141, column: 21, scope: !15216)
!15221 = !DILocation(line: 142, column: 44, scope: !15210)
!15222 = !DILocation(line: 142, column: 32, scope: !15210)
!15223 = !DILocation(line: 142, column: 30, scope: !15210)
!15224 = !DILocation(line: 143, column: 31, scope: !15210)
!15225 = !DILocation(line: 143, column: 29, scope: !15210)
!15226 = !DILocation(line: 144, column: 17, scope: !15210)
!15227 = !DILocation(line: 145, column: 23, scope: !15203)
!15228 = !DILocation(line: 145, column: 36, scope: !15203)
!15229 = !DILocation(line: 145, column: 34, scope: !15203)
!15230 = !DILocation(line: 145, column: 42, scope: !15203)
!15231 = !DILocation(line: 145, column: 49, scope: !15203)
!15232 = !DILocation(line: 145, column: 15, scope: !15203)
!15233 = !DILocation(line: 147, column: 19, scope: !15164)
!15234 = !DILocation(line: 147, column: 16, scope: !15164)
!15235 = !DILocation(line: 148, column: 9, scope: !15164)
!15236 = !DILocation(line: 105, column: 3, scope: !15138)
!15237 = distinct !{!15237, !15238, !15239}
!15238 = !DILocation(line: 105, column: 3, scope: !15139)
!15239 = !DILocation(line: 149, column: 5, scope: !15139)
!15240 = !DILocation(line: 151, column: 19, scope: !15105)
!15241 = !DILocation(line: 151, column: 17, scope: !15105)
!15242 = !DILocation(line: 152, column: 7, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15105, file: !858, line: 152, column: 7)
!15244 = !DILocation(line: 152, column: 21, scope: !15243)
!15245 = !DILocation(line: 152, column: 7, scope: !15105)
!15246 = !DILocation(line: 154, column: 13, scope: !15247)
!15247 = distinct !DILexicalBlock(scope: !15243, file: !858, line: 153, column: 5)
!15248 = !DILocation(line: 154, column: 7, scope: !15247)
!15249 = !DILocation(line: 155, column: 13, scope: !15247)
!15250 = !DILocation(line: 155, column: 7, scope: !15247)
!15251 = !DILocation(line: 156, column: 15, scope: !15247)
!15252 = !DILocation(line: 156, column: 7, scope: !15247)
!15253 = !DILocation(line: 156, column: 13, scope: !15247)
!15254 = !DILocation(line: 157, column: 7, scope: !15247)
!15255 = !DILocation(line: 160, column: 7, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !15105, file: !858, line: 160, column: 7)
!15257 = !DILocation(line: 160, column: 7, scope: !15105)
!15258 = !DILocalVariable(name: "i", scope: !15259, file: !858, line: 162, type: !55)
!15259 = distinct !DILexicalBlock(scope: !15256, file: !858, line: 161, column: 5)
!15260 = !DILocation(line: 162, column: 14, scope: !15259)
!15261 = !DILocation(line: 164, column: 11, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15259, file: !858, line: 164, column: 11)
!15263 = !DILocation(line: 164, column: 11, scope: !15259)
!15264 = !DILocation(line: 165, column: 16, scope: !15262)
!15265 = !DILocation(line: 165, column: 25, scope: !15262)
!15266 = !DILocation(line: 165, column: 56, scope: !15262)
!15267 = !DILocation(line: 165, column: 9, scope: !15262)
!15268 = !DILocation(line: 166, column: 29, scope: !15259)
!15269 = !DILocation(line: 166, column: 34, scope: !15259)
!15270 = !DILocation(line: 166, column: 20, scope: !15259)
!15271 = !DILocation(line: 166, column: 18, scope: !15259)
!15272 = !DILocation(line: 167, column: 12, scope: !15259)
!15273 = !DILocation(line: 168, column: 14, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15259, file: !858, line: 168, column: 7)
!15275 = !DILocation(line: 168, column: 12, scope: !15274)
!15276 = !DILocation(line: 168, column: 19, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15274, file: !858, line: 168, column: 7)
!15278 = !DILocation(line: 168, column: 23, scope: !15277)
!15279 = !DILocation(line: 168, column: 21, scope: !15277)
!15280 = !DILocation(line: 168, column: 7, scope: !15274)
!15281 = !DILocalVariable(name: "dest", scope: !15282, file: !858, line: 170, type: !9)
!15282 = distinct !DILexicalBlock(scope: !15277, file: !858, line: 169, column: 9)
!15283 = !DILocation(line: 170, column: 17, scope: !15282)
!15284 = !DILocation(line: 170, column: 24, scope: !15282)
!15285 = !DILocation(line: 170, column: 37, scope: !15282)
!15286 = !DILocation(line: 170, column: 35, scope: !15282)
!15287 = !DILocation(line: 171, column: 27, scope: !15282)
!15288 = !DILocation(line: 171, column: 33, scope: !15282)
!15289 = !DILocation(line: 171, column: 41, scope: !15282)
!15290 = !DILocation(line: 171, column: 44, scope: !15282)
!15291 = !DILocation(line: 171, column: 19, scope: !15282)
!15292 = !DILocation(line: 171, column: 52, scope: !15282)
!15293 = !DILocation(line: 171, column: 50, scope: !15282)
!15294 = !DILocation(line: 171, column: 57, scope: !15282)
!15295 = !DILocation(line: 171, column: 16, scope: !15282)
!15296 = !DILocation(line: 172, column: 17, scope: !15282)
!15297 = !DILocation(line: 172, column: 25, scope: !15282)
!15298 = !DILocation(line: 172, column: 28, scope: !15282)
!15299 = !DILocation(line: 172, column: 11, scope: !15282)
!15300 = !DILocation(line: 173, column: 9, scope: !15282)
!15301 = !DILocation(line: 168, column: 38, scope: !15277)
!15302 = !DILocation(line: 168, column: 7, scope: !15277)
!15303 = distinct !{!15303, !15280, !15304}
!15304 = !DILocation(line: 173, column: 9, scope: !15274)
!15305 = !DILocation(line: 174, column: 13, scope: !15259)
!15306 = !DILocation(line: 174, column: 7, scope: !15259)
!15307 = !DILocation(line: 175, column: 5, scope: !15259)
!15308 = !DILocation(line: 176, column: 12, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15256, file: !858, line: 176, column: 12)
!15310 = !DILocation(line: 176, column: 20, scope: !15309)
!15311 = !DILocation(line: 176, column: 17, scope: !15309)
!15312 = !DILocation(line: 176, column: 12, scope: !15256)
!15313 = !DILocation(line: 177, column: 28, scope: !15309)
!15314 = !DILocation(line: 177, column: 40, scope: !15309)
!15315 = !DILocation(line: 177, column: 45, scope: !15309)
!15316 = !DILocation(line: 177, column: 18, scope: !15309)
!15317 = !DILocation(line: 177, column: 16, scope: !15309)
!15318 = !DILocation(line: 177, column: 5, scope: !15309)
!15319 = !DILocation(line: 179, column: 3, scope: !15105)
!15320 = !DILocation(line: 179, column: 14, scope: !15105)
!15321 = !DILocation(line: 179, column: 20, scope: !15105)
!15322 = !DILocation(line: 180, column: 10, scope: !15105)
!15323 = !DILocation(line: 180, column: 3, scope: !15105)
!15324 = !DILocation(line: 181, column: 1, scope: !15105)
!15325 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !858, file: !858, line: 51, type: !866, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !845, retainedNodes: !216)
!15326 = !DILocalVariable(name: "a", arg: 1, scope: !15325, file: !858, line: 51, type: !709)
!15327 = !DILocation(line: 51, column: 32, scope: !15325)
!15328 = !DILocalVariable(name: "b", arg: 2, scope: !15325, file: !858, line: 51, type: !709)
!15329 = !DILocation(line: 51, column: 47, scope: !15325)
!15330 = !DILocalVariable(name: "dea", scope: !15325, file: !858, line: 53, type: !880)
!15331 = !DILocation(line: 53, column: 21, scope: !15325)
!15332 = !DILocation(line: 53, column: 27, scope: !15325)
!15333 = !DILocalVariable(name: "deb", scope: !15325, file: !858, line: 54, type: !880)
!15334 = !DILocation(line: 54, column: 21, scope: !15325)
!15335 = !DILocation(line: 54, column: 27, scope: !15325)
!15336 = !DILocation(line: 56, column: 18, scope: !15325)
!15337 = !DILocation(line: 56, column: 23, scope: !15325)
!15338 = !DILocation(line: 56, column: 29, scope: !15325)
!15339 = !DILocation(line: 56, column: 34, scope: !15325)
!15340 = !DILocation(line: 56, column: 10, scope: !15325)
!15341 = !DILocation(line: 56, column: 3, scope: !15325)
!15342 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !858, file: !858, line: 63, type: !866, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !845, retainedNodes: !216)
!15343 = !DILocalVariable(name: "a", arg: 1, scope: !15342, file: !858, line: 63, type: !709)
!15344 = !DILocation(line: 63, column: 33, scope: !15342)
!15345 = !DILocalVariable(name: "b", arg: 2, scope: !15342, file: !858, line: 63, type: !709)
!15346 = !DILocation(line: 63, column: 48, scope: !15342)
!15347 = !DILocalVariable(name: "dea", scope: !15342, file: !858, line: 65, type: !880)
!15348 = !DILocation(line: 65, column: 21, scope: !15342)
!15349 = !DILocation(line: 65, column: 27, scope: !15342)
!15350 = !DILocalVariable(name: "deb", scope: !15342, file: !858, line: 66, type: !880)
!15351 = !DILocation(line: 66, column: 21, scope: !15342)
!15352 = !DILocation(line: 66, column: 27, scope: !15342)
!15353 = !DILocation(line: 68, column: 10, scope: !15342)
!15354 = !DILocation(line: 68, column: 15, scope: !15342)
!15355 = !DILocation(line: 68, column: 21, scope: !15342)
!15356 = !DILocation(line: 68, column: 26, scope: !15342)
!15357 = !DILocation(line: 68, column: 19, scope: !15342)
!15358 = !DILocation(line: 68, column: 37, scope: !15342)
!15359 = !DILocation(line: 68, column: 42, scope: !15342)
!15360 = !DILocation(line: 68, column: 48, scope: !15342)
!15361 = !DILocation(line: 68, column: 53, scope: !15342)
!15362 = !DILocation(line: 68, column: 46, scope: !15342)
!15363 = !DILocation(line: 68, column: 3, scope: !15342)
!15364 = distinct !DISubprogram(name: "savedir", scope: !858, file: !858, line: 189, type: !15365, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !845, retainedNodes: !216)
!15365 = !DISubroutineType(types: !15366)
!15366 = !{!9, !116, !848}
!15367 = !DILocalVariable(name: "dir", arg: 1, scope: !15364, file: !858, line: 189, type: !116)
!15368 = !DILocation(line: 189, column: 22, scope: !15364)
!15369 = !DILocalVariable(name: "option", arg: 2, scope: !15364, file: !858, line: 189, type: !848)
!15370 = !DILocation(line: 189, column: 47, scope: !15364)
!15371 = !DILocalVariable(name: "dirp", scope: !15364, file: !858, line: 191, type: !541)
!15372 = !DILocation(line: 191, column: 8, scope: !15364)
!15373 = !DILocation(line: 191, column: 24, scope: !15364)
!15374 = !DILocation(line: 191, column: 15, scope: !15364)
!15375 = !DILocation(line: 192, column: 9, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15364, file: !858, line: 192, column: 7)
!15377 = !DILocation(line: 192, column: 7, scope: !15364)
!15378 = !DILocation(line: 193, column: 5, scope: !15376)
!15379 = !DILocalVariable(name: "name_space", scope: !15380, file: !858, line: 196, type: !9)
!15380 = distinct !DILexicalBlock(scope: !15376, file: !858, line: 195, column: 5)
!15381 = !DILocation(line: 196, column: 13, scope: !15380)
!15382 = !DILocation(line: 196, column: 41, scope: !15380)
!15383 = !DILocation(line: 196, column: 47, scope: !15380)
!15384 = !DILocation(line: 196, column: 26, scope: !15380)
!15385 = !DILocation(line: 197, column: 21, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15380, file: !858, line: 197, column: 11)
!15387 = !DILocation(line: 197, column: 11, scope: !15386)
!15388 = !DILocation(line: 197, column: 27, scope: !15386)
!15389 = !DILocation(line: 197, column: 11, scope: !15380)
!15390 = !DILocalVariable(name: "closedir_errno", scope: !15391, file: !858, line: 199, type: !7)
!15391 = distinct !DILexicalBlock(scope: !15386, file: !858, line: 198, column: 9)
!15392 = !DILocation(line: 199, column: 15, scope: !15391)
!15393 = !DILocation(line: 199, column: 32, scope: !15391)
!15394 = !DILocation(line: 200, column: 17, scope: !15391)
!15395 = !DILocation(line: 200, column: 11, scope: !15391)
!15396 = !DILocation(line: 201, column: 19, scope: !15391)
!15397 = !DILocation(line: 201, column: 11, scope: !15391)
!15398 = !DILocation(line: 201, column: 17, scope: !15391)
!15399 = !DILocation(line: 202, column: 11, scope: !15391)
!15400 = !DILocation(line: 204, column: 14, scope: !15380)
!15401 = !DILocation(line: 204, column: 7, scope: !15380)
!15402 = !DILocation(line: 206, column: 1, scope: !15364)
!15403 = distinct !DISubprogram(name: "getcon", scope: !15404, file: !15404, line: 87, type: !15405, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15404 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!15405 = !DISubroutineType(types: !15406)
!15406 = !{!7, !15407}
!15407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15408, size: 64)
!15408 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !15404, line: 83, baseType: !9)
!15409 = !DILocalVariable(name: "con", arg: 1, scope: !15403, file: !15404, line: 87, type: !15407)
!15410 = !DILocation(line: 87, column: 29, scope: !15403)
!15411 = !DILocation(line: 88, column: 5, scope: !15403)
!15412 = !DILocation(line: 88, column: 11, scope: !15403)
!15413 = !DILocation(line: 88, column: 22, scope: !15403)
!15414 = distinct !DISubprogram(name: "freecon", scope: !15404, file: !15404, line: 90, type: !15415, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15415 = !DISubroutineType(types: !15416)
!15416 = !{null, !15408}
!15417 = !DILocalVariable(name: "con", arg: 1, scope: !15414, file: !15404, line: 90, type: !15408)
!15418 = !DILocation(line: 90, column: 29, scope: !15414)
!15419 = !DILocation(line: 90, column: 56, scope: !15414)
!15420 = distinct !DISubprogram(name: "getfscreatecon", scope: !15404, file: !15404, line: 93, type: !15405, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15421 = !DILocalVariable(name: "con", arg: 1, scope: !15420, file: !15404, line: 93, type: !15407)
!15422 = !DILocation(line: 93, column: 37, scope: !15420)
!15423 = !DILocation(line: 94, column: 5, scope: !15420)
!15424 = !DILocation(line: 94, column: 11, scope: !15420)
!15425 = !DILocation(line: 94, column: 22, scope: !15420)
!15426 = distinct !DISubprogram(name: "setfscreatecon", scope: !15404, file: !15404, line: 96, type: !15427, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15427 = !DISubroutineType(types: !15428)
!15428 = !{!7, !15408}
!15429 = !DILocalVariable(name: "con", arg: 1, scope: !15426, file: !15404, line: 96, type: !15408)
!15430 = !DILocation(line: 96, column: 36, scope: !15426)
!15431 = !DILocation(line: 97, column: 5, scope: !15426)
!15432 = !DILocation(line: 97, column: 11, scope: !15426)
!15433 = !DILocation(line: 97, column: 22, scope: !15426)
!15434 = distinct !DISubprogram(name: "matchpathcon", scope: !15404, file: !15404, line: 99, type: !15435, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15435 = !DISubroutineType(types: !15436)
!15436 = !{!7, !116, !239, !15407}
!15437 = !DILocalVariable(name: "file", arg: 1, scope: !15434, file: !15404, line: 99, type: !116)
!15438 = !DILocation(line: 99, column: 27, scope: !15434)
!15439 = !DILocalVariable(name: "m", arg: 2, scope: !15434, file: !15404, line: 100, type: !239)
!15440 = !DILocation(line: 100, column: 22, scope: !15434)
!15441 = !DILocalVariable(name: "con", arg: 3, scope: !15434, file: !15404, line: 101, type: !15407)
!15442 = !DILocation(line: 101, column: 23, scope: !15434)
!15443 = !DILocation(line: 102, column: 5, scope: !15434)
!15444 = !DILocation(line: 102, column: 11, scope: !15434)
!15445 = !DILocation(line: 102, column: 22, scope: !15434)
!15446 = distinct !DISubprogram(name: "getfilecon", scope: !15404, file: !15404, line: 104, type: !15447, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15447 = !DISubroutineType(types: !15448)
!15448 = !{!7, !116, !15407}
!15449 = !DILocalVariable(name: "file", arg: 1, scope: !15446, file: !15404, line: 104, type: !116)
!15450 = !DILocation(line: 104, column: 25, scope: !15446)
!15451 = !DILocalVariable(name: "con", arg: 2, scope: !15446, file: !15404, line: 105, type: !15407)
!15452 = !DILocation(line: 105, column: 33, scope: !15446)
!15453 = !DILocation(line: 106, column: 5, scope: !15446)
!15454 = !DILocation(line: 106, column: 11, scope: !15446)
!15455 = !DILocation(line: 106, column: 22, scope: !15446)
!15456 = distinct !DISubprogram(name: "lgetfilecon", scope: !15404, file: !15404, line: 108, type: !15447, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15457 = !DILocalVariable(name: "file", arg: 1, scope: !15456, file: !15404, line: 108, type: !116)
!15458 = !DILocation(line: 108, column: 26, scope: !15456)
!15459 = !DILocalVariable(name: "con", arg: 2, scope: !15456, file: !15404, line: 109, type: !15407)
!15460 = !DILocation(line: 109, column: 34, scope: !15456)
!15461 = !DILocation(line: 110, column: 5, scope: !15456)
!15462 = !DILocation(line: 110, column: 11, scope: !15456)
!15463 = !DILocation(line: 110, column: 22, scope: !15456)
!15464 = distinct !DISubprogram(name: "fgetfilecon", scope: !15404, file: !15404, line: 112, type: !15465, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15465 = !DISubroutineType(types: !15466)
!15466 = !{!7, !7, !15407}
!15467 = !DILocalVariable(name: "fd", arg: 1, scope: !15464, file: !15404, line: 112, type: !7)
!15468 = !DILocation(line: 112, column: 18, scope: !15464)
!15469 = !DILocalVariable(name: "con", arg: 2, scope: !15464, file: !15404, line: 112, type: !15407)
!15470 = !DILocation(line: 112, column: 42, scope: !15464)
!15471 = !DILocation(line: 113, column: 5, scope: !15464)
!15472 = !DILocation(line: 113, column: 11, scope: !15464)
!15473 = !DILocation(line: 113, column: 22, scope: !15464)
!15474 = distinct !DISubprogram(name: "setfilecon", scope: !15404, file: !15404, line: 115, type: !15475, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15475 = !DISubroutineType(types: !15476)
!15476 = !{!7, !116, !15408}
!15477 = !DILocalVariable(name: "file", arg: 1, scope: !15474, file: !15404, line: 115, type: !116)
!15478 = !DILocation(line: 115, column: 25, scope: !15474)
!15479 = !DILocalVariable(name: "con", arg: 2, scope: !15474, file: !15404, line: 116, type: !15408)
!15480 = !DILocation(line: 116, column: 32, scope: !15474)
!15481 = !DILocation(line: 117, column: 5, scope: !15474)
!15482 = !DILocation(line: 117, column: 11, scope: !15474)
!15483 = !DILocation(line: 117, column: 22, scope: !15474)
!15484 = distinct !DISubprogram(name: "lsetfilecon", scope: !15404, file: !15404, line: 119, type: !15475, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15485 = !DILocalVariable(name: "file", arg: 1, scope: !15484, file: !15404, line: 119, type: !116)
!15486 = !DILocation(line: 119, column: 26, scope: !15484)
!15487 = !DILocalVariable(name: "con", arg: 2, scope: !15484, file: !15404, line: 120, type: !15408)
!15488 = !DILocation(line: 120, column: 33, scope: !15484)
!15489 = !DILocation(line: 121, column: 5, scope: !15484)
!15490 = !DILocation(line: 121, column: 11, scope: !15484)
!15491 = !DILocation(line: 121, column: 22, scope: !15484)
!15492 = distinct !DISubprogram(name: "fsetfilecon", scope: !15404, file: !15404, line: 123, type: !15493, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15493 = !DISubroutineType(types: !15494)
!15494 = !{!7, !7, !15408}
!15495 = !DILocalVariable(name: "fd", arg: 1, scope: !15492, file: !15404, line: 123, type: !7)
!15496 = !DILocation(line: 123, column: 18, scope: !15492)
!15497 = !DILocalVariable(name: "con", arg: 2, scope: !15492, file: !15404, line: 124, type: !15408)
!15498 = !DILocation(line: 124, column: 33, scope: !15492)
!15499 = !DILocation(line: 125, column: 5, scope: !15492)
!15500 = !DILocation(line: 125, column: 11, scope: !15492)
!15501 = !DILocation(line: 125, column: 22, scope: !15492)
!15502 = distinct !DISubprogram(name: "security_check_context", scope: !15404, file: !15404, line: 128, type: !15427, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15503 = !DILocalVariable(name: "con", arg: 1, scope: !15502, file: !15404, line: 128, type: !15408)
!15504 = !DILocation(line: 128, column: 44, scope: !15502)
!15505 = !DILocation(line: 129, column: 5, scope: !15502)
!15506 = !DILocation(line: 129, column: 11, scope: !15502)
!15507 = !DILocation(line: 129, column: 22, scope: !15502)
!15508 = distinct !DISubprogram(name: "security_check_context_raw", scope: !15404, file: !15404, line: 131, type: !15427, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15509 = !DILocalVariable(name: "con", arg: 1, scope: !15508, file: !15404, line: 131, type: !15408)
!15510 = !DILocation(line: 131, column: 48, scope: !15508)
!15511 = !DILocation(line: 132, column: 5, scope: !15508)
!15512 = !DILocation(line: 132, column: 11, scope: !15508)
!15513 = !DILocation(line: 132, column: 22, scope: !15508)
!15514 = distinct !DISubprogram(name: "setexeccon", scope: !15404, file: !15404, line: 134, type: !15427, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15515 = !DILocalVariable(name: "con", arg: 1, scope: !15514, file: !15404, line: 134, type: !15408)
!15516 = !DILocation(line: 134, column: 32, scope: !15514)
!15517 = !DILocation(line: 135, column: 5, scope: !15514)
!15518 = !DILocation(line: 135, column: 11, scope: !15514)
!15519 = !DILocation(line: 135, column: 22, scope: !15514)
!15520 = distinct !DISubprogram(name: "security_compute_create", scope: !15404, file: !15404, line: 137, type: !15521, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15521 = !DISubroutineType(types: !15522)
!15522 = !{!7, !15408, !15408, !15523, !15407}
!15523 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !15404, line: 82, baseType: !33)
!15524 = !DILocalVariable(name: "scon", arg: 1, scope: !15520, file: !15404, line: 137, type: !15408)
!15525 = !DILocation(line: 137, column: 45, scope: !15520)
!15526 = !DILocalVariable(name: "tcon", arg: 2, scope: !15520, file: !15404, line: 138, type: !15408)
!15527 = !DILocation(line: 138, column: 45, scope: !15520)
!15528 = !DILocalVariable(name: "tclass", arg: 3, scope: !15520, file: !15404, line: 139, type: !15523)
!15529 = !DILocation(line: 139, column: 43, scope: !15520)
!15530 = !DILocalVariable(name: "newcon", arg: 4, scope: !15520, file: !15404, line: 140, type: !15407)
!15531 = !DILocation(line: 140, column: 46, scope: !15520)
!15532 = !DILocation(line: 141, column: 5, scope: !15520)
!15533 = !DILocation(line: 141, column: 11, scope: !15520)
!15534 = !DILocation(line: 141, column: 22, scope: !15520)
!15535 = distinct !DISubprogram(name: "string_to_security_class", scope: !15404, file: !15404, line: 143, type: !15536, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15536 = !DISubroutineType(types: !15537)
!15537 = !{!15523, !116}
!15538 = !DILocalVariable(name: "name", arg: 1, scope: !15535, file: !15404, line: 143, type: !116)
!15539 = !DILocation(line: 143, column: 39, scope: !15535)
!15540 = !DILocation(line: 144, column: 5, scope: !15535)
!15541 = !DILocation(line: 144, column: 11, scope: !15535)
!15542 = !DILocation(line: 144, column: 22, scope: !15535)
!15543 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !15404, file: !15404, line: 146, type: !15544, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1387, retainedNodes: !216)
!15544 = !DISubroutineType(types: !15545)
!15545 = !{!7, !116, !116}
!15546 = !DILocalVariable(name: "path", arg: 1, scope: !15543, file: !15404, line: 146, type: !116)
!15547 = !DILocation(line: 146, column: 39, scope: !15543)
!15548 = !DILocalVariable(name: "prefix", arg: 2, scope: !15543, file: !15404, line: 147, type: !116)
!15549 = !DILocation(line: 147, column: 39, scope: !15543)
!15550 = !DILocation(line: 148, column: 5, scope: !15543)
!15551 = !DILocation(line: 148, column: 11, scope: !15543)
!15552 = !DILocation(line: 148, column: 22, scope: !15543)
!15553 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !15554, file: !15554, line: 66, type: !15555, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15554 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/software/coreutils-8.31")
!15555 = !DISubroutineType(types: !15556)
!15556 = !{!31, !15557}
!15557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15558, size: 64)
!15558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15559)
!15559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !15560)
!15560 = !{!15561, !15562, !15563, !15564, !15565, !15566, !15567, !15568, !15569, !15570, !15571, !15572, !15577, !15578, !15579}
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15559, file: !339, line: 48, baseType: !263, size: 64)
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15559, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15559, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15559, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15559, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15559, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15559, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15559, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15559, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15559, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15559, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15559, file: !339, line: 91, baseType: !15573, size: 128, offset: 576)
!15573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !15574)
!15574 = !{!15575, !15576}
!15575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15573, file: !358, line: 11, baseType: !361, size: 64)
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15573, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!15577 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15559, file: !339, line: 92, baseType: !15573, size: 128, offset: 704)
!15578 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15559, file: !339, line: 93, baseType: !15573, size: 128, offset: 832)
!15579 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15559, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!15580 = !DILocalVariable(name: "st", arg: 1, scope: !15553, file: !15554, line: 66, type: !15557)
!15581 = !DILocation(line: 66, column: 39, scope: !15553)
!15582 = !DILocation(line: 69, column: 10, scope: !15553)
!15583 = !DILocation(line: 69, column: 38, scope: !15553)
!15584 = !DILocation(line: 69, column: 3, scope: !15553)
!15585 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !15554, file: !15554, line: 79, type: !15555, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15586 = !DILocalVariable(name: "st", arg: 1, scope: !15585, file: !15554, line: 79, type: !15557)
!15587 = !DILocation(line: 79, column: 39, scope: !15585)
!15588 = !DILocation(line: 82, column: 10, scope: !15585)
!15589 = !DILocation(line: 82, column: 38, scope: !15585)
!15590 = !DILocation(line: 82, column: 3, scope: !15585)
!15591 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !15554, file: !15554, line: 92, type: !15555, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15592 = !DILocalVariable(name: "st", arg: 1, scope: !15591, file: !15554, line: 92, type: !15557)
!15593 = !DILocation(line: 92, column: 39, scope: !15591)
!15594 = !DILocation(line: 95, column: 10, scope: !15591)
!15595 = !DILocation(line: 95, column: 38, scope: !15591)
!15596 = !DILocation(line: 95, column: 3, scope: !15591)
!15597 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !15554, file: !15554, line: 105, type: !15555, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15598 = !DILocalVariable(name: "st", arg: 1, scope: !15597, file: !15554, line: 105, type: !15557)
!15599 = !DILocation(line: 105, column: 43, scope: !15597)
!15600 = !DILocation(line: 112, column: 3, scope: !15597)
!15601 = distinct !DISubprogram(name: "get_stat_atime", scope: !15554, file: !15554, line: 118, type: !15602, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15602 = !DISubroutineType(types: !15603)
!15603 = !{!15573, !15557}
!15604 = !DILocalVariable(name: "st", arg: 1, scope: !15601, file: !15554, line: 118, type: !15557)
!15605 = !DILocation(line: 118, column: 36, scope: !15601)
!15606 = !DILocation(line: 121, column: 10, scope: !15601)
!15607 = !DILocation(line: 121, column: 3, scope: !15601)
!15608 = distinct !DISubprogram(name: "get_stat_ctime", scope: !15554, file: !15554, line: 132, type: !15602, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15609 = !DILocalVariable(name: "st", arg: 1, scope: !15608, file: !15554, line: 132, type: !15557)
!15610 = !DILocation(line: 132, column: 36, scope: !15608)
!15611 = !DILocation(line: 135, column: 10, scope: !15608)
!15612 = !DILocation(line: 135, column: 3, scope: !15608)
!15613 = distinct !DISubprogram(name: "get_stat_mtime", scope: !15554, file: !15554, line: 146, type: !15602, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15614 = !DILocalVariable(name: "st", arg: 1, scope: !15613, file: !15554, line: 146, type: !15557)
!15615 = !DILocation(line: 146, column: 36, scope: !15613)
!15616 = !DILocation(line: 149, column: 10, scope: !15613)
!15617 = !DILocation(line: 149, column: 3, scope: !15613)
!15618 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !15554, file: !15554, line: 161, type: !15602, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15619 = !DILocalVariable(name: "st", arg: 1, scope: !15618, file: !15554, line: 161, type: !15557)
!15620 = !DILocation(line: 161, column: 40, scope: !15618)
!15621 = !DILocalVariable(name: "t", scope: !15618, file: !15554, line: 163, type: !15573)
!15622 = !DILocation(line: 163, column: 19, scope: !15618)
!15623 = !DILocation(line: 183, column: 5, scope: !15618)
!15624 = !DILocation(line: 183, column: 12, scope: !15618)
!15625 = !DILocation(line: 184, column: 5, scope: !15618)
!15626 = !DILocation(line: 184, column: 13, scope: !15618)
!15627 = !DILocation(line: 202, column: 3, scope: !15618)
!15628 = distinct !DISubprogram(name: "stat_time_normalize", scope: !15554, file: !15554, line: 211, type: !15629, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1389, retainedNodes: !216)
!15629 = !DISubroutineType(types: !15630)
!15630 = !{!7, !7, !15631}
!15631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15559, size: 64)
!15632 = !DILocalVariable(name: "result", arg: 1, scope: !15628, file: !15554, line: 211, type: !7)
!15633 = !DILocation(line: 211, column: 26, scope: !15628)
!15634 = !DILocalVariable(name: "st", arg: 2, scope: !15628, file: !15554, line: 211, type: !15631)
!15635 = !DILocation(line: 211, column: 47, scope: !15628)
!15636 = !DILocation(line: 243, column: 10, scope: !15628)
!15637 = !DILocation(line: 243, column: 3, scope: !15628)
!15638 = distinct !DISubprogram(name: "statat", scope: !15639, file: !15639, line: 102, type: !15640, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !216)
!15639 = !DIFile(filename: "./lib/openat.h", directory: "/home/mbarbar/software/coreutils-8.31")
!15640 = !DISubroutineType(types: !15641)
!15641 = !{!7, !7, !116, !15642}
!15642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15643, size: 64)
!15643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !15644)
!15644 = !{!15645, !15646, !15647, !15648, !15649, !15650, !15651, !15652, !15653, !15654, !15655, !15656, !15661, !15662, !15663}
!15645 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15643, file: !339, line: 48, baseType: !263, size: 64)
!15646 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15643, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!15647 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15643, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!15648 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15643, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!15649 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15643, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!15650 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15643, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!15651 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15643, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!15652 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15643, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!15653 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15643, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!15654 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15643, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!15655 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15643, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!15656 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15643, file: !339, line: 91, baseType: !15657, size: 128, offset: 576)
!15657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !15658)
!15658 = !{!15659, !15660}
!15659 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15657, file: !358, line: 11, baseType: !361, size: 64)
!15660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15657, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!15661 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15643, file: !339, line: 92, baseType: !15657, size: 128, offset: 704)
!15662 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15643, file: !339, line: 93, baseType: !15657, size: 128, offset: 832)
!15663 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15643, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!15664 = !DILocalVariable(name: "fd", arg: 1, scope: !15638, file: !15639, line: 102, type: !7)
!15665 = !DILocation(line: 102, column: 13, scope: !15638)
!15666 = !DILocalVariable(name: "name", arg: 2, scope: !15638, file: !15639, line: 102, type: !116)
!15667 = !DILocation(line: 102, column: 29, scope: !15638)
!15668 = !DILocalVariable(name: "st", arg: 3, scope: !15638, file: !15639, line: 102, type: !15642)
!15669 = !DILocation(line: 102, column: 48, scope: !15638)
!15670 = !DILocation(line: 104, column: 19, scope: !15638)
!15671 = !DILocation(line: 104, column: 23, scope: !15638)
!15672 = !DILocation(line: 104, column: 29, scope: !15638)
!15673 = !DILocation(line: 104, column: 10, scope: !15638)
!15674 = !DILocation(line: 104, column: 3, scope: !15638)
!15675 = distinct !DISubprogram(name: "lstatat", scope: !15639, file: !15639, line: 108, type: !15640, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1392, retainedNodes: !216)
!15676 = !DILocalVariable(name: "fd", arg: 1, scope: !15675, file: !15639, line: 108, type: !7)
!15677 = !DILocation(line: 108, column: 14, scope: !15675)
!15678 = !DILocalVariable(name: "name", arg: 2, scope: !15675, file: !15639, line: 108, type: !116)
!15679 = !DILocation(line: 108, column: 30, scope: !15675)
!15680 = !DILocalVariable(name: "st", arg: 3, scope: !15675, file: !15639, line: 108, type: !15642)
!15681 = !DILocation(line: 108, column: 49, scope: !15675)
!15682 = !DILocation(line: 110, column: 19, scope: !15675)
!15683 = !DILocation(line: 110, column: 23, scope: !15675)
!15684 = !DILocation(line: 110, column: 29, scope: !15675)
!15685 = !DILocation(line: 110, column: 10, scope: !15675)
!15686 = !DILocation(line: 110, column: 3, scope: !15675)
!15687 = distinct !DISubprogram(name: "try_tempname_len", scope: !900, file: !900, line: 188, type: !15688, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15688 = !DISubroutineType(types: !15689)
!15689 = !{!7, !9, !7, !53, !892, !55}
!15690 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15687, file: !900, line: 188, type: !9)
!15691 = !DILocation(line: 188, column: 25, scope: !15687)
!15692 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15687, file: !900, line: 188, type: !7)
!15693 = !DILocation(line: 188, column: 35, scope: !15687)
!15694 = !DILocalVariable(name: "args", arg: 3, scope: !15687, file: !900, line: 188, type: !53)
!15695 = !DILocation(line: 188, column: 52, scope: !15687)
!15696 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !15687, file: !900, line: 189, type: !892)
!15697 = !DILocation(line: 189, column: 25, scope: !15687)
!15698 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !15687, file: !900, line: 189, type: !55)
!15699 = !DILocation(line: 189, column: 59, scope: !15687)
!15700 = !DILocalVariable(name: "len", scope: !15687, file: !900, line: 191, type: !55)
!15701 = !DILocation(line: 191, column: 10, scope: !15687)
!15702 = !DILocalVariable(name: "XXXXXX", scope: !15687, file: !900, line: 192, type: !9)
!15703 = !DILocation(line: 192, column: 9, scope: !15687)
!15704 = !DILocalVariable(name: "count", scope: !15687, file: !900, line: 193, type: !70)
!15705 = !DILocation(line: 193, column: 16, scope: !15687)
!15706 = !DILocalVariable(name: "fd", scope: !15687, file: !900, line: 194, type: !7)
!15707 = !DILocation(line: 194, column: 7, scope: !15687)
!15708 = !DILocalVariable(name: "save_errno", scope: !15687, file: !900, line: 195, type: !7)
!15709 = !DILocation(line: 195, column: 7, scope: !15687)
!15710 = !DILocation(line: 195, column: 20, scope: !15687)
!15711 = !DILocalVariable(name: "rand_src", scope: !15687, file: !900, line: 196, type: !888)
!15712 = !DILocation(line: 196, column: 26, scope: !15687)
!15713 = !DILocalVariable(name: "attempts", scope: !15687, file: !900, line: 212, type: !70)
!15714 = !DILocation(line: 212, column: 16, scope: !15687)
!15715 = !DILocation(line: 215, column: 17, scope: !15687)
!15716 = !DILocation(line: 215, column: 9, scope: !15687)
!15717 = !DILocation(line: 215, column: 7, scope: !15687)
!15718 = !DILocation(line: 216, column: 7, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15687, file: !900, line: 216, column: 7)
!15720 = !DILocation(line: 216, column: 13, scope: !15719)
!15721 = !DILocation(line: 216, column: 28, scope: !15719)
!15722 = !DILocation(line: 216, column: 26, scope: !15719)
!15723 = !DILocation(line: 216, column: 11, scope: !15719)
!15724 = !DILocation(line: 217, column: 7, scope: !15719)
!15725 = !DILocation(line: 217, column: 29, scope: !15719)
!15726 = !DILocation(line: 217, column: 34, scope: !15719)
!15727 = !DILocation(line: 217, column: 40, scope: !15719)
!15728 = !DILocation(line: 217, column: 38, scope: !15719)
!15729 = !DILocation(line: 217, column: 55, scope: !15719)
!15730 = !DILocation(line: 217, column: 53, scope: !15719)
!15731 = !DILocation(line: 218, column: 28, scope: !15719)
!15732 = !DILocation(line: 217, column: 12, scope: !15719)
!15733 = !DILocation(line: 216, column: 7, scope: !15687)
!15734 = !DILocation(line: 220, column: 7, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15719, file: !900, line: 219, column: 5)
!15736 = !DILocation(line: 221, column: 7, scope: !15735)
!15737 = !DILocation(line: 225, column: 13, scope: !15687)
!15738 = !DILocation(line: 225, column: 18, scope: !15687)
!15739 = !DILocation(line: 225, column: 24, scope: !15687)
!15740 = !DILocation(line: 225, column: 22, scope: !15687)
!15741 = !DILocation(line: 225, column: 39, scope: !15687)
!15742 = !DILocation(line: 225, column: 37, scope: !15687)
!15743 = !DILocation(line: 225, column: 10, scope: !15687)
!15744 = !DILocation(line: 228, column: 37, scope: !15687)
!15745 = !DILocation(line: 228, column: 14, scope: !15687)
!15746 = !DILocation(line: 228, column: 12, scope: !15687)
!15747 = !DILocation(line: 229, column: 9, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15687, file: !900, line: 229, column: 7)
!15749 = !DILocation(line: 229, column: 7, scope: !15687)
!15750 = !DILocation(line: 230, column: 5, scope: !15748)
!15751 = !DILocation(line: 232, column: 14, scope: !15752)
!15752 = distinct !DILexicalBlock(scope: !15687, file: !900, line: 232, column: 3)
!15753 = !DILocation(line: 232, column: 8, scope: !15752)
!15754 = !DILocation(line: 232, column: 19, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15752, file: !900, line: 232, column: 3)
!15756 = !DILocation(line: 232, column: 27, scope: !15755)
!15757 = !DILocation(line: 232, column: 25, scope: !15755)
!15758 = !DILocation(line: 232, column: 3, scope: !15752)
!15759 = !DILocalVariable(name: "i", scope: !15760, file: !900, line: 234, type: !55)
!15760 = distinct !DILexicalBlock(scope: !15755, file: !900, line: 233, column: 5)
!15761 = !DILocation(line: 234, column: 14, scope: !15760)
!15762 = !DILocation(line: 236, column: 14, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15760, file: !900, line: 236, column: 7)
!15764 = !DILocation(line: 236, column: 12, scope: !15763)
!15765 = !DILocation(line: 236, column: 19, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15763, file: !900, line: 236, column: 7)
!15767 = !DILocation(line: 236, column: 23, scope: !15766)
!15768 = !DILocation(line: 236, column: 21, scope: !15766)
!15769 = !DILocation(line: 236, column: 7, scope: !15763)
!15770 = !DILocation(line: 237, column: 45, scope: !15766)
!15771 = !DILocation(line: 237, column: 29, scope: !15766)
!15772 = !DILocation(line: 237, column: 21, scope: !15766)
!15773 = !DILocation(line: 237, column: 9, scope: !15766)
!15774 = !DILocation(line: 237, column: 16, scope: !15766)
!15775 = !DILocation(line: 237, column: 19, scope: !15766)
!15776 = !DILocation(line: 236, column: 38, scope: !15766)
!15777 = !DILocation(line: 236, column: 7, scope: !15766)
!15778 = distinct !{!15778, !15769, !15779}
!15779 = !DILocation(line: 237, column: 74, scope: !15763)
!15780 = !DILocation(line: 239, column: 12, scope: !15760)
!15781 = !DILocation(line: 239, column: 21, scope: !15760)
!15782 = !DILocation(line: 239, column: 27, scope: !15760)
!15783 = !DILocation(line: 239, column: 10, scope: !15760)
!15784 = !DILocation(line: 240, column: 11, scope: !15785)
!15785 = distinct !DILexicalBlock(scope: !15760, file: !900, line: 240, column: 11)
!15786 = !DILocation(line: 240, column: 14, scope: !15785)
!15787 = !DILocation(line: 240, column: 11, scope: !15760)
!15788 = !DILocation(line: 242, column: 11, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15785, file: !900, line: 241, column: 9)
!15790 = !DILocation(line: 243, column: 11, scope: !15789)
!15791 = !DILocation(line: 245, column: 16, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15785, file: !900, line: 245, column: 16)
!15793 = !DILocation(line: 245, column: 22, scope: !15792)
!15794 = !DILocation(line: 245, column: 16, scope: !15785)
!15795 = !DILocation(line: 247, column: 14, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15792, file: !900, line: 246, column: 9)
!15797 = !DILocation(line: 248, column: 11, scope: !15796)
!15798 = !DILocation(line: 250, column: 5, scope: !15760)
!15799 = !DILocation(line: 232, column: 37, scope: !15755)
!15800 = !DILocation(line: 232, column: 3, scope: !15755)
!15801 = distinct !{!15801, !15758, !15802}
!15802 = !DILocation(line: 250, column: 5, scope: !15752)
!15803 = !DILocation(line: 252, column: 21, scope: !15687)
!15804 = !DILocation(line: 252, column: 3, scope: !15687)
!15805 = !DILocation(line: 255, column: 3, scope: !15687)
!15806 = !DILocation(line: 256, column: 3, scope: !15687)
!15807 = !DILabel(scope: !15687, name: "done", file: !900, line: 258)
!15808 = !DILocation(line: 258, column: 2, scope: !15687)
!15809 = !DILocalVariable(name: "saved_errno", scope: !15810, file: !900, line: 260, type: !7)
!15810 = distinct !DILexicalBlock(scope: !15687, file: !900, line: 259, column: 3)
!15811 = !DILocation(line: 260, column: 9, scope: !15810)
!15812 = !DILocation(line: 260, column: 23, scope: !15810)
!15813 = !DILocation(line: 261, column: 23, scope: !15810)
!15814 = !DILocation(line: 261, column: 5, scope: !15810)
!15815 = !DILocation(line: 262, column: 5, scope: !15810)
!15816 = !DILocation(line: 264, column: 10, scope: !15687)
!15817 = !DILocation(line: 264, column: 3, scope: !15687)
!15818 = !DILocation(line: 265, column: 1, scope: !15687)
!15819 = distinct !DISubprogram(name: "check_x_suffix", scope: !900, file: !900, line: 178, type: !15820, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15820 = !DISubroutineType(types: !15821)
!15821 = !{!142, !116, !55}
!15822 = !DILocalVariable(name: "s", arg: 1, scope: !15819, file: !900, line: 178, type: !116)
!15823 = !DILocation(line: 178, column: 29, scope: !15819)
!15824 = !DILocalVariable(name: "len", arg: 2, scope: !15819, file: !900, line: 178, type: !55)
!15825 = !DILocation(line: 178, column: 39, scope: !15819)
!15826 = !DILocation(line: 180, column: 10, scope: !15819)
!15827 = !DILocation(line: 180, column: 25, scope: !15819)
!15828 = !DILocation(line: 180, column: 17, scope: !15819)
!15829 = !DILocation(line: 180, column: 14, scope: !15819)
!15830 = !DILocation(line: 180, column: 3, scope: !15819)
!15831 = distinct !DISubprogram(name: "gen_tempname_len", scope: !900, file: !900, line: 307, type: !15832, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15832 = !DISubroutineType(types: !15833)
!15833 = !{!7, !9, !7, !7, !7, !55}
!15834 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15831, file: !900, line: 307, type: !9)
!15835 = !DILocation(line: 307, column: 25, scope: !15831)
!15836 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15831, file: !900, line: 307, type: !7)
!15837 = !DILocation(line: 307, column: 35, scope: !15831)
!15838 = !DILocalVariable(name: "flags", arg: 3, scope: !15831, file: !900, line: 307, type: !7)
!15839 = !DILocation(line: 307, column: 50, scope: !15831)
!15840 = !DILocalVariable(name: "kind", arg: 4, scope: !15831, file: !900, line: 307, type: !7)
!15841 = !DILocation(line: 307, column: 61, scope: !15831)
!15842 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !15831, file: !900, line: 308, type: !55)
!15843 = !DILocation(line: 308, column: 26, scope: !15831)
!15844 = !DILocalVariable(name: "tryfunc", scope: !15831, file: !900, line: 310, type: !892)
!15845 = !DILocation(line: 310, column: 9, scope: !15831)
!15846 = !DILocation(line: 312, column: 11, scope: !15831)
!15847 = !DILocation(line: 312, column: 3, scope: !15831)
!15848 = !DILocation(line: 315, column: 15, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15831, file: !900, line: 313, column: 5)
!15850 = !DILocation(line: 316, column: 7, scope: !15849)
!15851 = !DILocation(line: 319, column: 15, scope: !15849)
!15852 = !DILocation(line: 320, column: 7, scope: !15849)
!15853 = !DILocation(line: 323, column: 15, scope: !15849)
!15854 = !DILocation(line: 324, column: 7, scope: !15849)
!15855 = !DILocation(line: 327, column: 7, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15857, file: !900, line: 327, column: 7)
!15857 = distinct !DILexicalBlock(scope: !15849, file: !900, line: 327, column: 7)
!15858 = !DILocation(line: 330, column: 28, scope: !15831)
!15859 = !DILocation(line: 330, column: 34, scope: !15831)
!15860 = !DILocation(line: 330, column: 45, scope: !15831)
!15861 = !DILocation(line: 330, column: 53, scope: !15831)
!15862 = !DILocation(line: 330, column: 62, scope: !15831)
!15863 = !DILocation(line: 330, column: 10, scope: !15831)
!15864 = !DILocation(line: 330, column: 3, scope: !15831)
!15865 = distinct !DISubprogram(name: "try_file", scope: !900, file: !900, line: 268, type: !893, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15866 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15865, file: !900, line: 268, type: !9)
!15867 = !DILocation(line: 268, column: 17, scope: !15865)
!15868 = !DILocalVariable(name: "flags", arg: 2, scope: !15865, file: !900, line: 268, type: !53)
!15869 = !DILocation(line: 268, column: 29, scope: !15865)
!15870 = !DILocalVariable(name: "openflags", scope: !15865, file: !900, line: 270, type: !161)
!15871 = !DILocation(line: 270, column: 8, scope: !15865)
!15872 = !DILocation(line: 270, column: 20, scope: !15865)
!15873 = !DILocation(line: 271, column: 18, scope: !15865)
!15874 = !DILocation(line: 272, column: 20, scope: !15865)
!15875 = !DILocation(line: 272, column: 19, scope: !15865)
!15876 = !DILocation(line: 272, column: 30, scope: !15865)
!15877 = !DILocation(line: 273, column: 18, scope: !15865)
!15878 = !DILocation(line: 273, column: 27, scope: !15865)
!15879 = !DILocation(line: 273, column: 37, scope: !15865)
!15880 = !DILocation(line: 271, column: 10, scope: !15865)
!15881 = !DILocation(line: 271, column: 3, scope: !15865)
!15882 = distinct !DISubprogram(name: "try_dir", scope: !900, file: !900, line: 277, type: !893, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15883 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15882, file: !900, line: 277, type: !9)
!15884 = !DILocation(line: 277, column: 16, scope: !15882)
!15885 = !DILocalVariable(name: "flags", arg: 2, scope: !15882, file: !900, line: 277, type: !53)
!15886 = !DILocation(line: 277, column: 28, scope: !15882)
!15887 = !DILocation(line: 279, column: 19, scope: !15882)
!15888 = !DILocation(line: 279, column: 10, scope: !15882)
!15889 = !DILocation(line: 279, column: 3, scope: !15882)
!15890 = distinct !DISubprogram(name: "try_nocreate", scope: !900, file: !900, line: 283, type: !893, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !15892)
!15892 = !{!15893, !15894, !15895, !15896, !15897, !15898, !15899, !15900, !15901, !15902, !15903, !15904, !15909, !15910, !15911}
!15893 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15891, file: !339, line: 48, baseType: !263, size: 64)
!15894 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15891, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!15895 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15891, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!15896 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15891, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!15897 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15891, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!15898 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15891, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!15899 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15891, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!15900 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15891, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!15901 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15891, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!15902 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15891, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!15903 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15891, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!15904 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15891, file: !339, line: 91, baseType: !15905, size: 128, offset: 576)
!15905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !15906)
!15906 = !{!15907, !15908}
!15907 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15905, file: !358, line: 11, baseType: !361, size: 64)
!15908 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15905, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!15909 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15891, file: !339, line: 92, baseType: !15905, size: 128, offset: 704)
!15910 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15891, file: !339, line: 93, baseType: !15905, size: 128, offset: 832)
!15911 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15891, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!15912 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15890, file: !900, line: 283, type: !9)
!15913 = !DILocation(line: 283, column: 21, scope: !15890)
!15914 = !DILocalVariable(name: "flags", arg: 2, scope: !15890, file: !900, line: 283, type: !53)
!15915 = !DILocation(line: 283, column: 33, scope: !15890)
!15916 = !DILocalVariable(name: "st", scope: !15890, file: !900, line: 285, type: !15891)
!15917 = !DILocation(line: 285, column: 17, scope: !15890)
!15918 = !DILocation(line: 287, column: 7, scope: !15919)
!15919 = distinct !DILexicalBlock(scope: !15890, file: !900, line: 287, column: 7)
!15920 = !DILocation(line: 287, column: 41, scope: !15919)
!15921 = !DILocation(line: 287, column: 46, scope: !15919)
!15922 = !DILocation(line: 287, column: 49, scope: !15919)
!15923 = !DILocation(line: 287, column: 55, scope: !15919)
!15924 = !DILocation(line: 287, column: 7, scope: !15890)
!15925 = !DILocation(line: 288, column: 5, scope: !15919)
!15926 = !DILocation(line: 289, column: 10, scope: !15890)
!15927 = !DILocation(line: 289, column: 16, scope: !15890)
!15928 = !DILocation(line: 289, column: 3, scope: !15890)
!15929 = distinct !DISubprogram(name: "gen_tempname", scope: !900, file: !900, line: 334, type: !15930, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15930 = !DISubroutineType(types: !15931)
!15931 = !{!7, !9, !7, !7, !7}
!15932 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15929, file: !900, line: 334, type: !9)
!15933 = !DILocation(line: 334, column: 23, scope: !15929)
!15934 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15929, file: !900, line: 334, type: !7)
!15935 = !DILocation(line: 334, column: 33, scope: !15929)
!15936 = !DILocalVariable(name: "flags", arg: 3, scope: !15929, file: !900, line: 334, type: !7)
!15937 = !DILocation(line: 334, column: 48, scope: !15929)
!15938 = !DILocalVariable(name: "kind", arg: 4, scope: !15929, file: !900, line: 334, type: !7)
!15939 = !DILocation(line: 334, column: 59, scope: !15929)
!15940 = !DILocation(line: 336, column: 28, scope: !15929)
!15941 = !DILocation(line: 336, column: 34, scope: !15929)
!15942 = !DILocation(line: 336, column: 45, scope: !15929)
!15943 = !DILocation(line: 336, column: 52, scope: !15929)
!15944 = !DILocation(line: 336, column: 10, scope: !15929)
!15945 = !DILocation(line: 336, column: 3, scope: !15929)
!15946 = distinct !DISubprogram(name: "try_tempname", scope: !900, file: !900, line: 340, type: !15947, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !885, retainedNodes: !216)
!15947 = !DISubroutineType(types: !15948)
!15948 = !{!7, !9, !7, !53, !892}
!15949 = !DILocalVariable(name: "tmpl", arg: 1, scope: !15946, file: !900, line: 340, type: !9)
!15950 = !DILocation(line: 340, column: 23, scope: !15946)
!15951 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !15946, file: !900, line: 340, type: !7)
!15952 = !DILocation(line: 340, column: 33, scope: !15946)
!15953 = !DILocalVariable(name: "args", arg: 3, scope: !15946, file: !900, line: 340, type: !53)
!15954 = !DILocation(line: 340, column: 50, scope: !15946)
!15955 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !15946, file: !900, line: 341, type: !892)
!15956 = !DILocation(line: 341, column: 23, scope: !15946)
!15957 = !DILocation(line: 343, column: 28, scope: !15946)
!15958 = !DILocation(line: 343, column: 34, scope: !15946)
!15959 = !DILocation(line: 343, column: 45, scope: !15946)
!15960 = !DILocation(line: 343, column: 51, scope: !15946)
!15961 = !DILocation(line: 343, column: 10, scope: !15946)
!15962 = !DILocation(line: 343, column: 3, scope: !15946)
!15963 = distinct !DISubprogram(name: "fd_safer", scope: !15964, file: !15964, line: 37, type: !14875, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1394, retainedNodes: !216)
!15964 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15965 = !DILocalVariable(name: "fd", arg: 1, scope: !15963, file: !15964, line: 37, type: !7)
!15966 = !DILocation(line: 37, column: 15, scope: !15963)
!15967 = !DILocation(line: 39, column: 23, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15963, file: !15964, line: 39, column: 7)
!15969 = !DILocation(line: 39, column: 20, scope: !15968)
!15970 = !DILocation(line: 39, column: 26, scope: !15968)
!15971 = !DILocation(line: 39, column: 29, scope: !15968)
!15972 = !DILocation(line: 39, column: 32, scope: !15968)
!15973 = !DILocation(line: 39, column: 7, scope: !15963)
!15974 = !DILocalVariable(name: "f", scope: !15975, file: !15964, line: 41, type: !7)
!15975 = distinct !DILexicalBlock(scope: !15968, file: !15964, line: 40, column: 5)
!15976 = !DILocation(line: 41, column: 11, scope: !15975)
!15977 = !DILocation(line: 41, column: 26, scope: !15975)
!15978 = !DILocation(line: 41, column: 15, scope: !15975)
!15979 = !DILocalVariable(name: "e", scope: !15975, file: !15964, line: 42, type: !7)
!15980 = !DILocation(line: 42, column: 11, scope: !15975)
!15981 = !DILocation(line: 42, column: 15, scope: !15975)
!15982 = !DILocation(line: 43, column: 14, scope: !15975)
!15983 = !DILocation(line: 43, column: 7, scope: !15975)
!15984 = !DILocation(line: 44, column: 15, scope: !15975)
!15985 = !DILocation(line: 44, column: 7, scope: !15975)
!15986 = !DILocation(line: 44, column: 13, scope: !15975)
!15987 = !DILocation(line: 45, column: 12, scope: !15975)
!15988 = !DILocation(line: 45, column: 10, scope: !15975)
!15989 = !DILocation(line: 46, column: 5, scope: !15975)
!15990 = !DILocation(line: 48, column: 10, scope: !15963)
!15991 = !DILocation(line: 48, column: 3, scope: !15963)
!15992 = distinct !DISubprogram(name: "utimecmp", scope: !904, file: !904, line: 123, type: !15993, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !930, retainedNodes: !216)
!15993 = !DISubroutineType(types: !15994)
!15994 = !{!7, !116, !907, !907, !7}
!15995 = !DILocalVariable(name: "dst_name", arg: 1, scope: !15992, file: !904, line: 123, type: !116)
!15996 = !DILocation(line: 123, column: 23, scope: !15992)
!15997 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !15992, file: !904, line: 124, type: !907)
!15998 = !DILocation(line: 124, column: 30, scope: !15992)
!15999 = !DILocalVariable(name: "src_stat", arg: 3, scope: !15992, file: !904, line: 125, type: !907)
!16000 = !DILocation(line: 125, column: 30, scope: !15992)
!16001 = !DILocalVariable(name: "options", arg: 4, scope: !15992, file: !904, line: 126, type: !7)
!16002 = !DILocation(line: 126, column: 15, scope: !15992)
!16003 = !DILocation(line: 128, column: 32, scope: !15992)
!16004 = !DILocation(line: 128, column: 42, scope: !15992)
!16005 = !DILocation(line: 128, column: 52, scope: !15992)
!16006 = !DILocation(line: 128, column: 62, scope: !15992)
!16007 = !DILocation(line: 128, column: 10, scope: !15992)
!16008 = !DILocation(line: 128, column: 3, scope: !15992)
!16009 = !DILocalVariable(name: "dfd", arg: 1, scope: !903, file: !904, line: 132, type: !7)
!16010 = !DILocation(line: 132, column: 17, scope: !903)
!16011 = !DILocalVariable(name: "dst_name", arg: 2, scope: !903, file: !904, line: 132, type: !116)
!16012 = !DILocation(line: 132, column: 34, scope: !903)
!16013 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !903, file: !904, line: 133, type: !907)
!16014 = !DILocation(line: 133, column: 32, scope: !903)
!16015 = !DILocalVariable(name: "src_stat", arg: 4, scope: !903, file: !904, line: 134, type: !907)
!16016 = !DILocation(line: 134, column: 32, scope: !903)
!16017 = !DILocalVariable(name: "options", arg: 5, scope: !903, file: !904, line: 135, type: !7)
!16018 = !DILocation(line: 135, column: 17, scope: !903)
!16019 = !DILocalVariable(name: "dst_s", scope: !903, file: !904, line: 153, type: !933)
!16020 = !DILocation(line: 153, column: 10, scope: !903)
!16021 = !DILocation(line: 153, column: 18, scope: !903)
!16022 = !DILocation(line: 153, column: 28, scope: !903)
!16023 = !DILocalVariable(name: "src_s", scope: !903, file: !904, line: 154, type: !933)
!16024 = !DILocation(line: 154, column: 10, scope: !903)
!16025 = !DILocation(line: 154, column: 18, scope: !903)
!16026 = !DILocation(line: 154, column: 28, scope: !903)
!16027 = !DILocalVariable(name: "dst_ns", scope: !903, file: !904, line: 155, type: !7)
!16028 = !DILocation(line: 155, column: 7, scope: !903)
!16029 = !DILocation(line: 155, column: 35, scope: !903)
!16030 = !DILocation(line: 155, column: 16, scope: !903)
!16031 = !DILocalVariable(name: "src_ns", scope: !903, file: !904, line: 156, type: !7)
!16032 = !DILocation(line: 156, column: 7, scope: !903)
!16033 = !DILocation(line: 156, column: 35, scope: !903)
!16034 = !DILocation(line: 156, column: 16, scope: !903)
!16035 = !DILocation(line: 158, column: 7, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !903, file: !904, line: 158, column: 7)
!16037 = !DILocation(line: 158, column: 15, scope: !16036)
!16038 = !DILocation(line: 158, column: 7, scope: !903)
!16039 = !DILocalVariable(name: "dst_res", scope: !16040, file: !904, line: 167, type: !935)
!16040 = distinct !DILexicalBlock(scope: !16036, file: !904, line: 159, column: 5)
!16041 = !DILocation(line: 167, column: 22, scope: !16040)
!16042 = !DILocalVariable(name: "tmp_dst_res", scope: !16040, file: !904, line: 168, type: !936)
!16043 = !DILocation(line: 168, column: 21, scope: !16040)
!16044 = !DILocalVariable(name: "res", scope: !16040, file: !904, line: 171, type: !7)
!16045 = !DILocation(line: 171, column: 11, scope: !16040)
!16046 = !DILocation(line: 176, column: 11, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16040, file: !904, line: 176, column: 11)
!16048 = !DILocation(line: 176, column: 20, scope: !16047)
!16049 = !DILocation(line: 176, column: 17, scope: !16047)
!16050 = !DILocation(line: 176, column: 26, scope: !16047)
!16051 = !DILocation(line: 176, column: 29, scope: !16047)
!16052 = !DILocation(line: 176, column: 39, scope: !16047)
!16053 = !DILocation(line: 176, column: 36, scope: !16047)
!16054 = !DILocation(line: 176, column: 11, scope: !16040)
!16055 = !DILocation(line: 177, column: 9, scope: !16047)
!16056 = !DILocation(line: 178, column: 11, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16040, file: !904, line: 178, column: 11)
!16058 = !DILocation(line: 178, column: 20, scope: !16057)
!16059 = !DILocation(line: 178, column: 26, scope: !16057)
!16060 = !DILocation(line: 178, column: 17, scope: !16057)
!16061 = !DILocation(line: 178, column: 11, scope: !16040)
!16062 = !DILocation(line: 179, column: 9, scope: !16057)
!16063 = !DILocation(line: 180, column: 11, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !16040, file: !904, line: 180, column: 11)
!16065 = !DILocation(line: 180, column: 20, scope: !16064)
!16066 = !DILocation(line: 180, column: 26, scope: !16064)
!16067 = !DILocation(line: 180, column: 17, scope: !16064)
!16068 = !DILocation(line: 180, column: 11, scope: !16040)
!16069 = !DILocation(line: 181, column: 9, scope: !16064)
!16070 = !DILocation(line: 185, column: 13, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16040, file: !904, line: 185, column: 11)
!16072 = !DILocation(line: 185, column: 11, scope: !16040)
!16073 = !DILocation(line: 186, column: 14, scope: !16071)
!16074 = !DILocation(line: 186, column: 12, scope: !16071)
!16075 = !DILocation(line: 186, column: 9, scope: !16071)
!16076 = !DILocation(line: 187, column: 11, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16040, file: !904, line: 187, column: 11)
!16078 = !DILocation(line: 187, column: 11, scope: !16040)
!16079 = !DILocation(line: 189, column: 17, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !904, line: 189, column: 15)
!16081 = distinct !DILexicalBlock(scope: !16077, file: !904, line: 188, column: 9)
!16082 = !DILocation(line: 189, column: 15, scope: !16081)
!16083 = !DILocation(line: 191, column: 29, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16080, file: !904, line: 190, column: 13)
!16085 = !DILocation(line: 191, column: 27, scope: !16084)
!16086 = !DILocation(line: 192, column: 20, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16084, file: !904, line: 192, column: 19)
!16088 = !DILocation(line: 192, column: 19, scope: !16084)
!16089 = !DILocation(line: 193, column: 17, scope: !16087)
!16090 = !DILocation(line: 194, column: 15, scope: !16084)
!16091 = !DILocation(line: 194, column: 28, scope: !16084)
!16092 = !DILocation(line: 194, column: 39, scope: !16084)
!16093 = !DILocation(line: 195, column: 15, scope: !16084)
!16094 = !DILocation(line: 195, column: 28, scope: !16084)
!16095 = !DILocation(line: 195, column: 34, scope: !16084)
!16096 = !DILocation(line: 196, column: 13, scope: !16084)
!16097 = !DILocation(line: 197, column: 30, scope: !16081)
!16098 = !DILocation(line: 197, column: 40, scope: !16081)
!16099 = !DILocation(line: 197, column: 11, scope: !16081)
!16100 = !DILocation(line: 197, column: 24, scope: !16081)
!16101 = !DILocation(line: 197, column: 28, scope: !16081)
!16102 = !DILocation(line: 198, column: 34, scope: !16081)
!16103 = !DILocation(line: 198, column: 38, scope: !16081)
!16104 = !DILocation(line: 198, column: 21, scope: !16081)
!16105 = !DILocation(line: 198, column: 19, scope: !16081)
!16106 = !DILocation(line: 199, column: 17, scope: !16107)
!16107 = distinct !DILexicalBlock(scope: !16081, file: !904, line: 199, column: 15)
!16108 = !DILocation(line: 199, column: 15, scope: !16081)
!16109 = !DILocation(line: 200, column: 13, scope: !16107)
!16110 = !DILocation(line: 202, column: 15, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16081, file: !904, line: 202, column: 15)
!16112 = !DILocation(line: 202, column: 26, scope: !16111)
!16113 = !DILocation(line: 202, column: 23, scope: !16111)
!16114 = !DILocation(line: 202, column: 15, scope: !16081)
!16115 = !DILocation(line: 206, column: 27, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16111, file: !904, line: 203, column: 13)
!16117 = !DILocation(line: 207, column: 13, scope: !16116)
!16118 = !DILocation(line: 208, column: 9, scope: !16081)
!16119 = !DILocation(line: 210, column: 9, scope: !16077)
!16120 = !DILabel(scope: !16121, name: "low_memory", file: !904, line: 211)
!16121 = distinct !DILexicalBlock(scope: !16077, file: !904, line: 210, column: 9)
!16122 = !DILocation(line: 211, column: 9, scope: !16121)
!16123 = !DILocation(line: 212, column: 15, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16121, file: !904, line: 212, column: 15)
!16125 = !DILocation(line: 212, column: 15, scope: !16121)
!16126 = !DILocation(line: 214, column: 33, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16124, file: !904, line: 213, column: 13)
!16128 = !DILocation(line: 214, column: 43, scope: !16127)
!16129 = !DILocation(line: 214, column: 27, scope: !16127)
!16130 = !DILocation(line: 214, column: 31, scope: !16127)
!16131 = !DILocation(line: 215, column: 38, scope: !16127)
!16132 = !DILocation(line: 215, column: 42, scope: !16127)
!16133 = !DILocation(line: 215, column: 25, scope: !16127)
!16134 = !DILocation(line: 215, column: 23, scope: !16127)
!16135 = !DILocation(line: 216, column: 13, scope: !16127)
!16136 = !DILocation(line: 217, column: 16, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16121, file: !904, line: 217, column: 15)
!16138 = !DILocation(line: 217, column: 15, scope: !16121)
!16139 = !DILocation(line: 219, column: 23, scope: !16140)
!16140 = distinct !DILexicalBlock(scope: !16137, file: !904, line: 218, column: 13)
!16141 = !DILocation(line: 220, column: 15, scope: !16140)
!16142 = !DILocation(line: 220, column: 24, scope: !16140)
!16143 = !DILocation(line: 220, column: 35, scope: !16140)
!16144 = !DILocation(line: 221, column: 15, scope: !16140)
!16145 = !DILocation(line: 221, column: 24, scope: !16140)
!16146 = !DILocation(line: 221, column: 30, scope: !16140)
!16147 = !DILocation(line: 222, column: 13, scope: !16140)
!16148 = !DILocation(line: 225, column: 13, scope: !16040)
!16149 = !DILocation(line: 225, column: 22, scope: !16040)
!16150 = !DILocation(line: 225, column: 11, scope: !16040)
!16151 = !DILocation(line: 257, column: 13, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16040, file: !904, line: 257, column: 11)
!16153 = !DILocation(line: 257, column: 22, scope: !16152)
!16154 = !DILocation(line: 257, column: 11, scope: !16040)
!16155 = !DILocalVariable(name: "dst_a_s", scope: !16156, file: !904, line: 262, type: !933)
!16156 = distinct !DILexicalBlock(scope: !16152, file: !904, line: 258, column: 9)
!16157 = !DILocation(line: 262, column: 18, scope: !16156)
!16158 = !DILocation(line: 262, column: 28, scope: !16156)
!16159 = !DILocation(line: 262, column: 38, scope: !16156)
!16160 = !DILocalVariable(name: "dst_c_s", scope: !16156, file: !904, line: 263, type: !933)
!16161 = !DILocation(line: 263, column: 18, scope: !16156)
!16162 = !DILocation(line: 263, column: 28, scope: !16156)
!16163 = !DILocation(line: 263, column: 38, scope: !16156)
!16164 = !DILocalVariable(name: "dst_m_s", scope: !16156, file: !904, line: 264, type: !933)
!16165 = !DILocation(line: 264, column: 18, scope: !16156)
!16166 = !DILocation(line: 264, column: 28, scope: !16156)
!16167 = !DILocalVariable(name: "dst_a_ns", scope: !16156, file: !904, line: 265, type: !7)
!16168 = !DILocation(line: 265, column: 15, scope: !16156)
!16169 = !DILocation(line: 265, column: 45, scope: !16156)
!16170 = !DILocation(line: 265, column: 26, scope: !16156)
!16171 = !DILocalVariable(name: "dst_c_ns", scope: !16156, file: !904, line: 266, type: !7)
!16172 = !DILocation(line: 266, column: 15, scope: !16156)
!16173 = !DILocation(line: 266, column: 45, scope: !16156)
!16174 = !DILocation(line: 266, column: 26, scope: !16156)
!16175 = !DILocalVariable(name: "dst_m_ns", scope: !16156, file: !904, line: 267, type: !7)
!16176 = !DILocation(line: 267, column: 15, scope: !16156)
!16177 = !DILocation(line: 267, column: 26, scope: !16156)
!16178 = !DILocalVariable(name: "odd_second", scope: !16179, file: !904, line: 276, type: !142)
!16179 = distinct !DILexicalBlock(scope: !16156, file: !904, line: 275, column: 11)
!16180 = !DILocation(line: 276, column: 18, scope: !16179)
!16181 = !DILocation(line: 276, column: 32, scope: !16179)
!16182 = !DILocation(line: 276, column: 42, scope: !16179)
!16183 = !DILocation(line: 276, column: 40, scope: !16179)
!16184 = !DILocation(line: 276, column: 52, scope: !16179)
!16185 = !DILocation(line: 276, column: 50, scope: !16179)
!16186 = !DILocation(line: 276, column: 61, scope: !16179)
!16187 = !DILocation(line: 276, column: 31, scope: !16179)
!16188 = !DILocalVariable(name: "a", scope: !16189, file: !904, line: 285, type: !7)
!16189 = distinct !DILexicalBlock(scope: !16190, file: !904, line: 284, column: 15)
!16190 = distinct !DILexicalBlock(scope: !16179, file: !904, line: 278, column: 17)
!16191 = !DILocation(line: 285, column: 21, scope: !16189)
!16192 = !DILocation(line: 285, column: 25, scope: !16189)
!16193 = !DILocalVariable(name: "c", scope: !16189, file: !904, line: 286, type: !7)
!16194 = !DILocation(line: 286, column: 21, scope: !16189)
!16195 = !DILocation(line: 286, column: 25, scope: !16189)
!16196 = !DILocalVariable(name: "m", scope: !16189, file: !904, line: 287, type: !7)
!16197 = !DILocation(line: 287, column: 21, scope: !16189)
!16198 = !DILocation(line: 287, column: 25, scope: !16189)
!16199 = !DILocalVariable(name: "SR10", scope: !16189, file: !904, line: 291, type: !7)
!16200 = !DILocation(line: 291, column: 21, scope: !16189)
!16201 = !DILocation(line: 291, column: 54, scope: !16189)
!16202 = !DILocation(line: 293, column: 22, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16189, file: !904, line: 293, column: 21)
!16204 = !DILocation(line: 293, column: 26, scope: !16203)
!16205 = !DILocation(line: 293, column: 24, scope: !16203)
!16206 = !DILocation(line: 293, column: 33, scope: !16203)
!16207 = !DILocation(line: 293, column: 37, scope: !16203)
!16208 = !DILocation(line: 293, column: 35, scope: !16203)
!16209 = !DILocation(line: 293, column: 31, scope: !16203)
!16210 = !DILocation(line: 293, column: 44, scope: !16203)
!16211 = !DILocation(line: 293, column: 48, scope: !16203)
!16212 = !DILocation(line: 293, column: 46, scope: !16203)
!16213 = !DILocation(line: 293, column: 42, scope: !16203)
!16214 = !DILocation(line: 293, column: 54, scope: !16203)
!16215 = !DILocation(line: 293, column: 21, scope: !16189)
!16216 = !DILocation(line: 294, column: 23, scope: !16203)
!16217 = !DILocation(line: 294, column: 19, scope: !16203)
!16218 = !DILocation(line: 296, column: 30, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16203, file: !904, line: 296, column: 19)
!16220 = !DILocation(line: 296, column: 28, scope: !16219)
!16221 = !DILocation(line: 296, column: 41, scope: !16219)
!16222 = !DILocation(line: 296, column: 38, scope: !16219)
!16223 = !DILocation(line: 296, column: 52, scope: !16219)
!16224 = !DILocation(line: 296, column: 49, scope: !16219)
!16225 = !DILocation(line: 296, column: 63, scope: !16219)
!16226 = !DILocation(line: 296, column: 60, scope: !16219)
!16227 = !DILocation(line: 296, column: 24, scope: !16219)
!16228 = !DILocation(line: 297, column: 25, scope: !16229)
!16229 = distinct !DILexicalBlock(scope: !16219, file: !904, line: 296, column: 19)
!16230 = !DILocation(line: 297, column: 31, scope: !16229)
!16231 = !DILocation(line: 297, column: 40, scope: !16229)
!16232 = !DILocation(line: 297, column: 29, scope: !16229)
!16233 = !DILocation(line: 298, column: 25, scope: !16229)
!16234 = !DILocation(line: 298, column: 29, scope: !16229)
!16235 = !DILocation(line: 298, column: 31, scope: !16229)
!16236 = !DILocation(line: 298, column: 38, scope: !16229)
!16237 = !DILocation(line: 298, column: 40, scope: !16229)
!16238 = !DILocation(line: 298, column: 36, scope: !16229)
!16239 = !DILocation(line: 298, column: 47, scope: !16229)
!16240 = !DILocation(line: 298, column: 49, scope: !16229)
!16241 = !DILocation(line: 298, column: 45, scope: !16229)
!16242 = !DILocation(line: 298, column: 55, scope: !16229)
!16243 = !DILocation(line: 0, scope: !16229)
!16244 = !DILocation(line: 296, column: 19, scope: !16219)
!16245 = !DILocation(line: 300, column: 25, scope: !16246)
!16246 = distinct !DILexicalBlock(scope: !16229, file: !904, line: 300, column: 25)
!16247 = !DILocation(line: 300, column: 29, scope: !16246)
!16248 = !DILocation(line: 300, column: 25, scope: !16229)
!16249 = !DILocation(line: 302, column: 31, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16251, file: !904, line: 302, column: 29)
!16251 = distinct !DILexicalBlock(scope: !16246, file: !904, line: 301, column: 23)
!16252 = !DILocation(line: 302, column: 29, scope: !16251)
!16253 = !DILocation(line: 303, column: 31, scope: !16250)
!16254 = !DILocation(line: 303, column: 27, scope: !16250)
!16255 = !DILocation(line: 304, column: 25, scope: !16251)
!16256 = !DILocation(line: 300, column: 32, scope: !16246)
!16257 = !DILocation(line: 299, column: 28, scope: !16229)
!16258 = !DILocation(line: 299, column: 37, scope: !16229)
!16259 = !DILocation(line: 299, column: 46, scope: !16229)
!16260 = !DILocation(line: 299, column: 55, scope: !16229)
!16261 = !DILocation(line: 296, column: 19, scope: !16229)
!16262 = distinct !{!16262, !16244, !16263}
!16263 = !DILocation(line: 305, column: 23, scope: !16219)
!16264 = !DILocation(line: 308, column: 35, scope: !16179)
!16265 = !DILocation(line: 308, column: 13, scope: !16179)
!16266 = !DILocation(line: 308, column: 22, scope: !16179)
!16267 = !DILocation(line: 308, column: 33, scope: !16179)
!16268 = !DILocation(line: 311, column: 36, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16156, file: !904, line: 311, column: 15)
!16270 = !DILocation(line: 311, column: 34, scope: !16269)
!16271 = !DILocation(line: 311, column: 15, scope: !16156)
!16272 = !DILocalVariable(name: "timespec", scope: !16273, file: !904, line: 313, type: !941)
!16273 = distinct !DILexicalBlock(scope: !16269, file: !904, line: 312, column: 13)
!16274 = !DILocation(line: 313, column: 31, scope: !16273)
!16275 = !DILocalVariable(name: "dst_status", scope: !16273, file: !904, line: 314, type: !909)
!16276 = !DILocation(line: 314, column: 27, scope: !16273)
!16277 = !DILocation(line: 318, column: 25, scope: !16273)
!16278 = !DILocation(line: 318, column: 32, scope: !16273)
!16279 = !DILocation(line: 318, column: 22, scope: !16273)
!16280 = !DILocalVariable(name: "s", scope: !16281, file: !904, line: 324, type: !933)
!16281 = distinct !DILexicalBlock(scope: !16273, file: !904, line: 323, column: 15)
!16282 = !DILocation(line: 324, column: 24, scope: !16281)
!16283 = !DILocation(line: 324, column: 28, scope: !16281)
!16284 = !DILocation(line: 324, column: 39, scope: !16281)
!16285 = !DILocation(line: 324, column: 43, scope: !16281)
!16286 = !DILocation(line: 324, column: 36, scope: !16281)
!16287 = !DILocation(line: 324, column: 34, scope: !16281)
!16288 = !DILocation(line: 325, column: 21, scope: !16289)
!16289 = distinct !DILexicalBlock(scope: !16281, file: !904, line: 325, column: 21)
!16290 = !DILocation(line: 325, column: 29, scope: !16289)
!16291 = !DILocation(line: 325, column: 27, scope: !16289)
!16292 = !DILocation(line: 325, column: 35, scope: !16289)
!16293 = !DILocation(line: 325, column: 39, scope: !16289)
!16294 = !DILocation(line: 325, column: 48, scope: !16289)
!16295 = !DILocation(line: 325, column: 45, scope: !16289)
!16296 = !DILocation(line: 325, column: 54, scope: !16289)
!16297 = !DILocation(line: 325, column: 57, scope: !16289)
!16298 = !DILocation(line: 325, column: 67, scope: !16289)
!16299 = !DILocation(line: 325, column: 64, scope: !16289)
!16300 = !DILocation(line: 325, column: 21, scope: !16281)
!16301 = !DILocation(line: 326, column: 19, scope: !16289)
!16302 = !DILocation(line: 327, column: 21, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16281, file: !904, line: 327, column: 21)
!16304 = !DILocation(line: 327, column: 29, scope: !16303)
!16305 = !DILocation(line: 327, column: 27, scope: !16303)
!16306 = !DILocation(line: 328, column: 21, scope: !16303)
!16307 = !DILocation(line: 328, column: 25, scope: !16303)
!16308 = !DILocation(line: 328, column: 34, scope: !16303)
!16309 = !DILocation(line: 328, column: 31, scope: !16303)
!16310 = !DILocation(line: 328, column: 36, scope: !16303)
!16311 = !DILocation(line: 328, column: 39, scope: !16303)
!16312 = !DILocation(line: 328, column: 48, scope: !16303)
!16313 = !DILocation(line: 328, column: 57, scope: !16303)
!16314 = !DILocation(line: 328, column: 66, scope: !16303)
!16315 = !DILocation(line: 328, column: 64, scope: !16303)
!16316 = !DILocation(line: 328, column: 55, scope: !16303)
!16317 = !DILocation(line: 328, column: 46, scope: !16303)
!16318 = !DILocation(line: 327, column: 21, scope: !16281)
!16319 = !DILocation(line: 329, column: 19, scope: !16303)
!16320 = !DILocation(line: 338, column: 36, scope: !16273)
!16321 = !DILocation(line: 338, column: 15, scope: !16273)
!16322 = !DILocation(line: 338, column: 27, scope: !16273)
!16323 = !DILocation(line: 338, column: 34, scope: !16273)
!16324 = !DILocation(line: 339, column: 37, scope: !16273)
!16325 = !DILocation(line: 339, column: 15, scope: !16273)
!16326 = !DILocation(line: 339, column: 27, scope: !16273)
!16327 = !DILocation(line: 339, column: 35, scope: !16273)
!16328 = !DILocation(line: 340, column: 36, scope: !16273)
!16329 = !DILocation(line: 340, column: 47, scope: !16273)
!16330 = !DILocation(line: 340, column: 51, scope: !16273)
!16331 = !DILocation(line: 340, column: 46, scope: !16273)
!16332 = !DILocation(line: 340, column: 44, scope: !16273)
!16333 = !DILocation(line: 340, column: 15, scope: !16273)
!16334 = !DILocation(line: 340, column: 27, scope: !16273)
!16335 = !DILocation(line: 340, column: 34, scope: !16273)
!16336 = !DILocation(line: 341, column: 37, scope: !16273)
!16337 = !DILocation(line: 341, column: 48, scope: !16273)
!16338 = !DILocation(line: 341, column: 52, scope: !16273)
!16339 = !DILocation(line: 341, column: 46, scope: !16273)
!16340 = !DILocation(line: 341, column: 15, scope: !16273)
!16341 = !DILocation(line: 341, column: 27, scope: !16273)
!16342 = !DILocation(line: 341, column: 35, scope: !16273)
!16343 = !DILocation(line: 343, column: 30, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16273, file: !904, line: 343, column: 19)
!16345 = !DILocation(line: 343, column: 35, scope: !16344)
!16346 = !DILocation(line: 343, column: 45, scope: !16344)
!16347 = !DILocation(line: 343, column: 19, scope: !16344)
!16348 = !DILocation(line: 343, column: 19, scope: !16273)
!16349 = !DILocation(line: 344, column: 17, scope: !16344)
!16350 = !DILocalVariable(name: "stat_result", scope: !16351, file: !904, line: 348, type: !7)
!16351 = distinct !DILexicalBlock(scope: !16273, file: !904, line: 347, column: 15)
!16352 = !DILocation(line: 348, column: 21, scope: !16351)
!16353 = !DILocation(line: 349, column: 30, scope: !16351)
!16354 = !DILocation(line: 349, column: 35, scope: !16351)
!16355 = !DILocation(line: 349, column: 21, scope: !16351)
!16356 = !DILocation(line: 351, column: 21, scope: !16357)
!16357 = distinct !DILexicalBlock(scope: !16351, file: !904, line: 351, column: 21)
!16358 = !DILocation(line: 352, column: 35, scope: !16357)
!16359 = !DILocation(line: 352, column: 46, scope: !16357)
!16360 = !DILocation(line: 352, column: 44, scope: !16357)
!16361 = !DILocation(line: 352, column: 21, scope: !16357)
!16362 = !DILocation(line: 353, column: 24, scope: !16357)
!16363 = !DILocation(line: 353, column: 58, scope: !16357)
!16364 = !DILocation(line: 353, column: 56, scope: !16357)
!16365 = !DILocation(line: 353, column: 21, scope: !16357)
!16366 = !DILocation(line: 351, column: 21, scope: !16351)
!16367 = !DILocation(line: 357, column: 42, scope: !16368)
!16368 = distinct !DILexicalBlock(scope: !16357, file: !904, line: 354, column: 19)
!16369 = !DILocation(line: 357, column: 21, scope: !16368)
!16370 = !DILocation(line: 357, column: 33, scope: !16368)
!16371 = !DILocation(line: 357, column: 40, scope: !16368)
!16372 = !DILocation(line: 358, column: 43, scope: !16368)
!16373 = !DILocation(line: 358, column: 21, scope: !16368)
!16374 = !DILocation(line: 358, column: 33, scope: !16368)
!16375 = !DILocation(line: 358, column: 41, scope: !16368)
!16376 = !DILocation(line: 359, column: 32, scope: !16368)
!16377 = !DILocation(line: 359, column: 37, scope: !16368)
!16378 = !DILocation(line: 359, column: 47, scope: !16368)
!16379 = !DILocation(line: 359, column: 21, scope: !16368)
!16380 = !DILocation(line: 360, column: 19, scope: !16368)
!16381 = !DILocation(line: 362, column: 21, scope: !16382)
!16382 = distinct !DILexicalBlock(scope: !16351, file: !904, line: 362, column: 21)
!16383 = !DILocation(line: 362, column: 33, scope: !16382)
!16384 = !DILocation(line: 362, column: 21, scope: !16351)
!16385 = !DILocation(line: 363, column: 19, scope: !16382)
!16386 = !DILocalVariable(name: "old_res", scope: !16387, file: !904, line: 369, type: !7)
!16387 = distinct !DILexicalBlock(scope: !16273, file: !904, line: 368, column: 15)
!16388 = !DILocation(line: 369, column: 21, scope: !16387)
!16389 = !DILocation(line: 369, column: 31, scope: !16387)
!16390 = !DILocalVariable(name: "a", scope: !16387, file: !904, line: 370, type: !7)
!16391 = !DILocation(line: 370, column: 21, scope: !16387)
!16392 = !DILocation(line: 370, column: 48, scope: !16387)
!16393 = !DILocation(line: 370, column: 57, scope: !16387)
!16394 = !DILocation(line: 370, column: 34, scope: !16387)
!16395 = !DILocation(line: 371, column: 28, scope: !16387)
!16396 = !DILocation(line: 371, column: 26, scope: !16387)
!16397 = !DILocation(line: 370, column: 25, scope: !16387)
!16398 = !DILocation(line: 373, column: 21, scope: !16387)
!16399 = !DILocation(line: 375, column: 27, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16387, file: !904, line: 375, column: 17)
!16401 = !DILocation(line: 375, column: 24, scope: !16400)
!16402 = !DILocation(line: 375, column: 22, scope: !16400)
!16403 = !DILocation(line: 375, column: 32, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16400, file: !904, line: 375, column: 17)
!16405 = !DILocation(line: 375, column: 34, scope: !16404)
!16406 = !DILocation(line: 375, column: 39, scope: !16404)
!16407 = !DILocation(line: 375, column: 17, scope: !16400)
!16408 = !DILocation(line: 377, column: 25, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16410, file: !904, line: 377, column: 25)
!16410 = distinct !DILexicalBlock(scope: !16404, file: !904, line: 376, column: 19)
!16411 = !DILocation(line: 377, column: 29, scope: !16409)
!16412 = !DILocation(line: 377, column: 25, scope: !16410)
!16413 = !DILocation(line: 379, column: 29, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16409, file: !904, line: 378, column: 23)
!16415 = !DILocation(line: 380, column: 25, scope: !16414)
!16416 = !DILocation(line: 382, column: 25, scope: !16410)
!16417 = !DILocation(line: 383, column: 25, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16410, file: !904, line: 383, column: 25)
!16419 = !DILocation(line: 383, column: 32, scope: !16418)
!16420 = !DILocation(line: 383, column: 29, scope: !16418)
!16421 = !DILocation(line: 383, column: 25, scope: !16410)
!16422 = !DILocation(line: 384, column: 23, scope: !16418)
!16423 = !DILocation(line: 385, column: 19, scope: !16410)
!16424 = !DILocation(line: 375, column: 47, scope: !16404)
!16425 = !DILocation(line: 375, column: 17, scope: !16404)
!16426 = distinct !{!16426, !16407, !16427}
!16427 = !DILocation(line: 385, column: 19, scope: !16400)
!16428 = !DILocation(line: 387, column: 13, scope: !16273)
!16429 = !DILocation(line: 389, column: 33, scope: !16156)
!16430 = !DILocation(line: 389, column: 11, scope: !16156)
!16431 = !DILocation(line: 389, column: 20, scope: !16156)
!16432 = !DILocation(line: 389, column: 31, scope: !16156)
!16433 = !DILocation(line: 390, column: 11, scope: !16156)
!16434 = !DILocation(line: 390, column: 20, scope: !16156)
!16435 = !DILocation(line: 390, column: 26, scope: !16156)
!16436 = !DILocation(line: 391, column: 9, scope: !16156)
!16437 = !DILocation(line: 394, column: 19, scope: !16040)
!16438 = !DILocation(line: 394, column: 23, scope: !16040)
!16439 = !DILocation(line: 394, column: 16, scope: !16040)
!16440 = !DILocation(line: 394, column: 13, scope: !16040)
!16441 = !DILocation(line: 395, column: 17, scope: !16040)
!16442 = !DILocation(line: 395, column: 26, scope: !16040)
!16443 = !DILocation(line: 395, column: 24, scope: !16040)
!16444 = !DILocation(line: 395, column: 14, scope: !16040)
!16445 = !DILocation(line: 396, column: 5, scope: !16040)
!16446 = !DILocation(line: 399, column: 11, scope: !903)
!16447 = !DILocation(line: 399, column: 19, scope: !903)
!16448 = !DILocation(line: 399, column: 17, scope: !903)
!16449 = !DILocation(line: 400, column: 13, scope: !903)
!16450 = !DILocation(line: 400, column: 21, scope: !903)
!16451 = !DILocation(line: 400, column: 19, scope: !903)
!16452 = !DILocation(line: 401, column: 13, scope: !903)
!16453 = !DILocation(line: 401, column: 22, scope: !903)
!16454 = !DILocation(line: 401, column: 20, scope: !903)
!16455 = !DILocation(line: 402, column: 13, scope: !903)
!16456 = !DILocation(line: 402, column: 22, scope: !903)
!16457 = !DILocation(line: 402, column: 20, scope: !903)
!16458 = !DILocation(line: 399, column: 3, scope: !903)
!16459 = !DILocation(line: 403, column: 1, scope: !903)
!16460 = distinct !DISubprogram(name: "dev_info_hash", scope: !904, file: !904, line: 85, type: !707, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !930, retainedNodes: !216)
!16461 = !DILocalVariable(name: "x", arg: 1, scope: !16460, file: !904, line: 85, type: !709)
!16462 = !DILocation(line: 85, column: 28, scope: !16460)
!16463 = !DILocalVariable(name: "table_size", arg: 2, scope: !16460, file: !904, line: 85, type: !55)
!16464 = !DILocation(line: 85, column: 38, scope: !16460)
!16465 = !DILocalVariable(name: "p", scope: !16460, file: !904, line: 87, type: !942)
!16466 = !DILocation(line: 87, column: 24, scope: !16460)
!16467 = !DILocation(line: 87, column: 28, scope: !16460)
!16468 = !DILocation(line: 96, column: 10, scope: !16460)
!16469 = !DILocation(line: 96, column: 13, scope: !16460)
!16470 = !DILocation(line: 96, column: 19, scope: !16460)
!16471 = !DILocation(line: 96, column: 17, scope: !16460)
!16472 = !DILocation(line: 96, column: 3, scope: !16460)
!16473 = distinct !DISubprogram(name: "dev_info_compare", scope: !904, file: !904, line: 101, type: !714, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !930, retainedNodes: !216)
!16474 = !DILocalVariable(name: "x", arg: 1, scope: !16473, file: !904, line: 101, type: !709)
!16475 = !DILocation(line: 101, column: 31, scope: !16473)
!16476 = !DILocalVariable(name: "y", arg: 2, scope: !16473, file: !904, line: 101, type: !709)
!16477 = !DILocation(line: 101, column: 46, scope: !16473)
!16478 = !DILocalVariable(name: "a", scope: !16473, file: !904, line: 103, type: !942)
!16479 = !DILocation(line: 103, column: 24, scope: !16473)
!16480 = !DILocation(line: 103, column: 28, scope: !16473)
!16481 = !DILocalVariable(name: "b", scope: !16473, file: !904, line: 104, type: !942)
!16482 = !DILocation(line: 104, column: 24, scope: !16473)
!16483 = !DILocation(line: 104, column: 28, scope: !16473)
!16484 = !DILocation(line: 105, column: 10, scope: !16473)
!16485 = !DILocation(line: 105, column: 13, scope: !16473)
!16486 = !DILocation(line: 105, column: 20, scope: !16473)
!16487 = !DILocation(line: 105, column: 23, scope: !16473)
!16488 = !DILocation(line: 105, column: 17, scope: !16473)
!16489 = !DILocation(line: 105, column: 3, scope: !16473)
!16490 = distinct !DISubprogram(name: "lutimensat", scope: !16491, file: !16491, line: 42, type: !16492, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !949, retainedNodes: !216)
!16491 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16492 = !DISubroutineType(types: !16493)
!16493 = !{!7, !7, !116, !16494}
!16494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16495, size: 64)
!16495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!16496 = !DILocalVariable(name: "dir", arg: 1, scope: !16490, file: !16491, line: 42, type: !7)
!16497 = !DILocation(line: 42, column: 17, scope: !16490)
!16498 = !DILocalVariable(name: "file", arg: 2, scope: !16490, file: !16491, line: 42, type: !116)
!16499 = !DILocation(line: 42, column: 34, scope: !16490)
!16500 = !DILocalVariable(name: "times", arg: 3, scope: !16490, file: !16491, line: 42, type: !16494)
!16501 = !DILocation(line: 42, column: 62, scope: !16490)
!16502 = !DILocation(line: 44, column: 21, scope: !16490)
!16503 = !DILocation(line: 44, column: 26, scope: !16490)
!16504 = !DILocation(line: 44, column: 32, scope: !16490)
!16505 = !DILocation(line: 44, column: 10, scope: !16490)
!16506 = !DILocation(line: 44, column: 3, scope: !16490)
!16507 = distinct !DISubprogram(name: "fdutimens", scope: !969, file: !969, line: 170, type: !16492, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !949, retainedNodes: !216)
!16508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !16509)
!16509 = !{!16510, !16511, !16512, !16513, !16514, !16515, !16516, !16517, !16518, !16519, !16520, !16521, !16522, !16523, !16524}
!16510 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16508, file: !339, line: 48, baseType: !263, size: 64)
!16511 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16508, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!16512 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16508, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!16513 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16508, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!16514 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16508, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!16515 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16508, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!16516 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16508, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!16517 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16508, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!16518 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16508, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!16519 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16508, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!16520 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16508, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!16521 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16508, file: !339, line: 91, baseType: !953, size: 128, offset: 576)
!16522 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16508, file: !339, line: 92, baseType: !953, size: 128, offset: 704)
!16523 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16508, file: !339, line: 93, baseType: !953, size: 128, offset: 832)
!16524 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16508, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!16525 = !DILocalVariable(name: "fd", arg: 1, scope: !16507, file: !969, line: 170, type: !7)
!16526 = !DILocation(line: 170, column: 16, scope: !16507)
!16527 = !DILocalVariable(name: "file", arg: 2, scope: !16507, file: !969, line: 170, type: !116)
!16528 = !DILocation(line: 170, column: 32, scope: !16507)
!16529 = !DILocalVariable(name: "timespec", arg: 3, scope: !16507, file: !969, line: 170, type: !16494)
!16530 = !DILocation(line: 170, column: 60, scope: !16507)
!16531 = !DILocalVariable(name: "adjusted_timespec", scope: !16507, file: !969, line: 172, type: !952)
!16532 = !DILocation(line: 172, column: 19, scope: !16507)
!16533 = !DILocalVariable(name: "ts", scope: !16507, file: !969, line: 173, type: !957)
!16534 = !DILocation(line: 173, column: 20, scope: !16507)
!16535 = !DILocation(line: 173, column: 25, scope: !16507)
!16536 = !DILocation(line: 173, column: 36, scope: !16507)
!16537 = !DILocalVariable(name: "adjustment_needed", scope: !16507, file: !969, line: 174, type: !7)
!16538 = !DILocation(line: 174, column: 7, scope: !16507)
!16539 = !DILocalVariable(name: "st", scope: !16507, file: !969, line: 175, type: !16508)
!16540 = !DILocation(line: 175, column: 15, scope: !16507)
!16541 = !DILocation(line: 177, column: 7, scope: !16542)
!16542 = distinct !DILexicalBlock(scope: !16507, file: !969, line: 177, column: 7)
!16543 = !DILocation(line: 177, column: 7, scope: !16507)
!16544 = !DILocation(line: 179, column: 7, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16542, file: !969, line: 178, column: 5)
!16546 = !DILocation(line: 179, column: 30, scope: !16545)
!16547 = !DILocation(line: 180, column: 7, scope: !16545)
!16548 = !DILocation(line: 180, column: 30, scope: !16545)
!16549 = !DILocation(line: 181, column: 46, scope: !16545)
!16550 = !DILocation(line: 181, column: 27, scope: !16545)
!16551 = !DILocation(line: 181, column: 25, scope: !16545)
!16552 = !DILocation(line: 182, column: 5, scope: !16545)
!16553 = !DILocation(line: 183, column: 7, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16507, file: !969, line: 183, column: 7)
!16555 = !DILocation(line: 183, column: 25, scope: !16554)
!16556 = !DILocation(line: 183, column: 7, scope: !16507)
!16557 = !DILocation(line: 184, column: 5, scope: !16554)
!16558 = !DILocation(line: 189, column: 7, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16507, file: !969, line: 189, column: 7)
!16560 = !DILocation(line: 189, column: 10, scope: !16559)
!16561 = !DILocation(line: 189, column: 14, scope: !16559)
!16562 = !DILocation(line: 189, column: 18, scope: !16559)
!16563 = !DILocation(line: 189, column: 7, scope: !16507)
!16564 = !DILocation(line: 191, column: 7, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16559, file: !969, line: 190, column: 5)
!16566 = !DILocation(line: 191, column: 13, scope: !16565)
!16567 = !DILocation(line: 192, column: 7, scope: !16565)
!16568 = !DILocation(line: 218, column: 12, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16507, file: !969, line: 218, column: 7)
!16570 = !DILocation(line: 218, column: 9, scope: !16569)
!16571 = !DILocation(line: 218, column: 7, scope: !16507)
!16572 = !DILocalVariable(name: "result", scope: !16573, file: !969, line: 220, type: !7)
!16573 = distinct !DILexicalBlock(scope: !16569, file: !969, line: 219, column: 5)
!16574 = !DILocation(line: 220, column: 11, scope: !16573)
!16575 = !DILocation(line: 234, column: 11, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16573, file: !969, line: 234, column: 11)
!16577 = !DILocation(line: 234, column: 29, scope: !16576)
!16578 = !DILocation(line: 234, column: 11, scope: !16573)
!16579 = !DILocation(line: 236, column: 15, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16581, file: !969, line: 236, column: 15)
!16581 = distinct !DILexicalBlock(scope: !16576, file: !969, line: 235, column: 9)
!16582 = !DILocation(line: 236, column: 18, scope: !16580)
!16583 = !DILocation(line: 236, column: 15, scope: !16581)
!16584 = !DILocation(line: 236, column: 30, scope: !16580)
!16585 = !DILocation(line: 236, column: 24, scope: !16580)
!16586 = !DILocation(line: 236, column: 50, scope: !16580)
!16587 = !DILocation(line: 236, column: 43, scope: !16580)
!16588 = !DILocation(line: 237, column: 13, scope: !16580)
!16589 = !DILocation(line: 238, column: 15, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16581, file: !969, line: 238, column: 15)
!16591 = !DILocation(line: 238, column: 21, scope: !16590)
!16592 = !DILocation(line: 238, column: 29, scope: !16590)
!16593 = !DILocation(line: 238, column: 15, scope: !16581)
!16594 = !DILocation(line: 239, column: 13, scope: !16590)
!16595 = !DILocation(line: 239, column: 21, scope: !16590)
!16596 = !DILocation(line: 240, column: 20, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16590, file: !969, line: 240, column: 20)
!16598 = !DILocation(line: 240, column: 26, scope: !16597)
!16599 = !DILocation(line: 240, column: 34, scope: !16597)
!16600 = !DILocation(line: 240, column: 20, scope: !16590)
!16601 = !DILocation(line: 241, column: 13, scope: !16597)
!16602 = !DILocation(line: 241, column: 21, scope: !16597)
!16603 = !DILocation(line: 243, column: 28, scope: !16581)
!16604 = !DILocation(line: 244, column: 9, scope: !16581)
!16605 = !DILocation(line: 247, column: 11, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16573, file: !969, line: 247, column: 11)
!16607 = !DILocation(line: 247, column: 14, scope: !16606)
!16608 = !DILocation(line: 247, column: 11, scope: !16573)
!16609 = !DILocation(line: 249, column: 41, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16606, file: !969, line: 248, column: 9)
!16611 = !DILocation(line: 249, column: 47, scope: !16610)
!16612 = !DILocation(line: 249, column: 20, scope: !16610)
!16613 = !DILocation(line: 249, column: 18, scope: !16610)
!16614 = !DILocation(line: 258, column: 19, scope: !16615)
!16615 = distinct !DILexicalBlock(scope: !16610, file: !969, line: 258, column: 15)
!16616 = !DILocation(line: 258, column: 17, scope: !16615)
!16617 = !DILocation(line: 258, column: 15, scope: !16610)
!16618 = !DILocation(line: 259, column: 13, scope: !16615)
!16619 = !DILocation(line: 259, column: 19, scope: !16615)
!16620 = !DILocation(line: 261, column: 15, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16610, file: !969, line: 261, column: 15)
!16622 = !DILocation(line: 261, column: 22, scope: !16621)
!16623 = !DILocation(line: 261, column: 27, scope: !16621)
!16624 = !DILocation(line: 261, column: 30, scope: !16621)
!16625 = !DILocation(line: 261, column: 36, scope: !16621)
!16626 = !DILocation(line: 261, column: 15, scope: !16610)
!16627 = !DILocation(line: 263, column: 38, scope: !16628)
!16628 = distinct !DILexicalBlock(scope: !16621, file: !969, line: 262, column: 13)
!16629 = !DILocation(line: 264, column: 22, scope: !16628)
!16630 = !DILocation(line: 264, column: 15, scope: !16628)
!16631 = !DILocation(line: 266, column: 9, scope: !16610)
!16632 = !DILocation(line: 269, column: 16, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16573, file: !969, line: 269, column: 11)
!16634 = !DILocation(line: 269, column: 13, scope: !16633)
!16635 = !DILocation(line: 269, column: 11, scope: !16573)
!16636 = !DILocation(line: 271, column: 30, scope: !16637)
!16637 = distinct !DILexicalBlock(scope: !16633, file: !969, line: 270, column: 9)
!16638 = !DILocation(line: 271, column: 34, scope: !16637)
!16639 = !DILocation(line: 271, column: 20, scope: !16637)
!16640 = !DILocation(line: 271, column: 18, scope: !16637)
!16641 = !DILocation(line: 274, column: 19, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16637, file: !969, line: 274, column: 15)
!16643 = !DILocation(line: 274, column: 17, scope: !16642)
!16644 = !DILocation(line: 274, column: 15, scope: !16637)
!16645 = !DILocation(line: 275, column: 13, scope: !16642)
!16646 = !DILocation(line: 275, column: 19, scope: !16642)
!16647 = !DILocation(line: 277, column: 15, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16637, file: !969, line: 277, column: 15)
!16649 = !DILocation(line: 277, column: 22, scope: !16648)
!16650 = !DILocation(line: 277, column: 27, scope: !16648)
!16651 = !DILocation(line: 277, column: 30, scope: !16648)
!16652 = !DILocation(line: 277, column: 36, scope: !16648)
!16653 = !DILocation(line: 277, column: 15, scope: !16637)
!16654 = !DILocation(line: 279, column: 38, scope: !16655)
!16655 = distinct !DILexicalBlock(scope: !16648, file: !969, line: 278, column: 13)
!16656 = !DILocation(line: 280, column: 22, scope: !16655)
!16657 = !DILocation(line: 280, column: 15, scope: !16655)
!16658 = !DILocation(line: 282, column: 9, scope: !16637)
!16659 = !DILocation(line: 284, column: 5, scope: !16573)
!16660 = !DILocation(line: 285, column: 26, scope: !16507)
!16661 = !DILocation(line: 286, column: 27, scope: !16507)
!16662 = !DILocation(line: 377, column: 7, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16507, file: !969, line: 377, column: 7)
!16664 = !DILocation(line: 377, column: 7, scope: !16507)
!16665 = !DILocation(line: 379, column: 11, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16667, file: !969, line: 379, column: 11)
!16667 = distinct !DILexicalBlock(scope: !16663, file: !969, line: 378, column: 5)
!16668 = !DILocation(line: 379, column: 29, scope: !16666)
!16669 = !DILocation(line: 380, column: 11, scope: !16666)
!16670 = !DILocation(line: 380, column: 15, scope: !16666)
!16671 = !DILocation(line: 380, column: 18, scope: !16666)
!16672 = !DILocation(line: 379, column: 11, scope: !16667)
!16673 = !DILocation(line: 380, column: 30, scope: !16666)
!16674 = !DILocation(line: 380, column: 24, scope: !16666)
!16675 = !DILocation(line: 380, column: 50, scope: !16666)
!16676 = !DILocation(line: 380, column: 43, scope: !16666)
!16677 = !DILocation(line: 381, column: 9, scope: !16666)
!16678 = !DILocation(line: 382, column: 11, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16667, file: !969, line: 382, column: 11)
!16680 = !DILocation(line: 382, column: 14, scope: !16679)
!16681 = !DILocation(line: 382, column: 17, scope: !16679)
!16682 = !DILocation(line: 382, column: 11, scope: !16667)
!16683 = !DILocation(line: 383, column: 9, scope: !16679)
!16684 = !DILocation(line: 384, column: 5, scope: !16667)
!16685 = !DILocalVariable(name: "timeval", scope: !16686, file: !969, line: 388, type: !958)
!16686 = distinct !DILexicalBlock(scope: !16507, file: !969, line: 386, column: 3)
!16687 = !DILocation(line: 388, column: 20, scope: !16686)
!16688 = !DILocalVariable(name: "t", scope: !16686, file: !969, line: 389, type: !965)
!16689 = !DILocation(line: 389, column: 21, scope: !16686)
!16690 = !DILocation(line: 390, column: 9, scope: !16691)
!16691 = distinct !DILexicalBlock(scope: !16686, file: !969, line: 390, column: 9)
!16692 = !DILocation(line: 390, column: 9, scope: !16686)
!16693 = !DILocation(line: 392, column: 29, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16691, file: !969, line: 391, column: 7)
!16695 = !DILocation(line: 392, column: 35, scope: !16694)
!16696 = !DILocation(line: 392, column: 9, scope: !16694)
!16697 = !DILocation(line: 392, column: 20, scope: !16694)
!16698 = !DILocation(line: 392, column: 27, scope: !16694)
!16699 = !DILocation(line: 393, column: 30, scope: !16694)
!16700 = !DILocation(line: 393, column: 36, scope: !16694)
!16701 = !DILocation(line: 393, column: 44, scope: !16694)
!16702 = !DILocation(line: 393, column: 9, scope: !16694)
!16703 = !DILocation(line: 393, column: 20, scope: !16694)
!16704 = !DILocation(line: 393, column: 28, scope: !16694)
!16705 = !DILocation(line: 394, column: 29, scope: !16694)
!16706 = !DILocation(line: 394, column: 35, scope: !16694)
!16707 = !DILocation(line: 394, column: 9, scope: !16694)
!16708 = !DILocation(line: 394, column: 20, scope: !16694)
!16709 = !DILocation(line: 394, column: 27, scope: !16694)
!16710 = !DILocation(line: 395, column: 30, scope: !16694)
!16711 = !DILocation(line: 395, column: 36, scope: !16694)
!16712 = !DILocation(line: 395, column: 44, scope: !16694)
!16713 = !DILocation(line: 395, column: 9, scope: !16694)
!16714 = !DILocation(line: 395, column: 20, scope: !16694)
!16715 = !DILocation(line: 395, column: 28, scope: !16694)
!16716 = !DILocation(line: 396, column: 13, scope: !16694)
!16717 = !DILocation(line: 396, column: 11, scope: !16694)
!16718 = !DILocation(line: 397, column: 7, scope: !16694)
!16719 = !DILocation(line: 399, column: 9, scope: !16691)
!16720 = !DILocation(line: 401, column: 9, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16686, file: !969, line: 401, column: 9)
!16722 = !DILocation(line: 401, column: 12, scope: !16721)
!16723 = !DILocation(line: 401, column: 9, scope: !16686)
!16724 = !DILocation(line: 404, column: 37, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16721, file: !969, line: 402, column: 7)
!16726 = !DILocation(line: 404, column: 43, scope: !16725)
!16727 = !DILocation(line: 404, column: 16, scope: !16725)
!16728 = !DILocation(line: 404, column: 9, scope: !16725)
!16729 = !DILocation(line: 425, column: 13, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16731, file: !969, line: 425, column: 13)
!16731 = distinct !DILexicalBlock(scope: !16721, file: !969, line: 408, column: 7)
!16732 = !DILocation(line: 425, column: 29, scope: !16730)
!16733 = !DILocation(line: 425, column: 13, scope: !16731)
!16734 = !DILocation(line: 433, column: 17, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16736, file: !969, line: 433, column: 17)
!16736 = distinct !DILexicalBlock(scope: !16730, file: !969, line: 426, column: 11)
!16737 = !DILocation(line: 433, column: 17, scope: !16736)
!16738 = !DILocalVariable(name: "abig", scope: !16739, file: !969, line: 435, type: !142)
!16739 = distinct !DILexicalBlock(scope: !16735, file: !969, line: 434, column: 15)
!16740 = !DILocation(line: 435, column: 22, scope: !16739)
!16741 = !DILocation(line: 435, column: 39, scope: !16739)
!16742 = !DILocation(line: 435, column: 44, scope: !16739)
!16743 = !DILocation(line: 435, column: 36, scope: !16739)
!16744 = !DILocalVariable(name: "mbig", scope: !16739, file: !969, line: 436, type: !142)
!16745 = !DILocation(line: 436, column: 22, scope: !16739)
!16746 = !DILocation(line: 436, column: 39, scope: !16739)
!16747 = !DILocation(line: 436, column: 44, scope: !16739)
!16748 = !DILocation(line: 436, column: 36, scope: !16739)
!16749 = !DILocation(line: 437, column: 22, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16739, file: !969, line: 437, column: 21)
!16751 = !DILocation(line: 437, column: 29, scope: !16750)
!16752 = !DILocation(line: 437, column: 27, scope: !16750)
!16753 = !DILocation(line: 437, column: 35, scope: !16750)
!16754 = !DILocation(line: 437, column: 45, scope: !16750)
!16755 = !DILocation(line: 437, column: 38, scope: !16750)
!16756 = !DILocation(line: 437, column: 54, scope: !16750)
!16757 = !DILocation(line: 437, column: 21, scope: !16739)
!16758 = !DILocalVariable(name: "adiff", scope: !16759, file: !969, line: 441, type: !933)
!16759 = distinct !DILexicalBlock(scope: !16750, file: !969, line: 438, column: 19)
!16760 = !DILocation(line: 441, column: 28, scope: !16759)
!16761 = !DILocation(line: 441, column: 39, scope: !16759)
!16762 = !DILocation(line: 441, column: 50, scope: !16759)
!16763 = !DILocation(line: 441, column: 55, scope: !16759)
!16764 = !DILocation(line: 441, column: 48, scope: !16759)
!16765 = !DILocalVariable(name: "mdiff", scope: !16759, file: !969, line: 442, type: !933)
!16766 = !DILocation(line: 442, column: 28, scope: !16759)
!16767 = !DILocation(line: 442, column: 39, scope: !16759)
!16768 = !DILocation(line: 442, column: 50, scope: !16759)
!16769 = !DILocation(line: 442, column: 55, scope: !16759)
!16770 = !DILocation(line: 442, column: 48, scope: !16759)
!16771 = !DILocalVariable(name: "tt", scope: !16759, file: !969, line: 444, type: !965)
!16772 = !DILocation(line: 444, column: 37, scope: !16759)
!16773 = !DILocalVariable(name: "truncated_timeval", scope: !16759, file: !969, line: 445, type: !958)
!16774 = !DILocation(line: 445, column: 36, scope: !16759)
!16775 = !DILocation(line: 446, column: 21, scope: !16759)
!16776 = !DILocation(line: 446, column: 44, scope: !16759)
!16777 = !DILocation(line: 447, column: 21, scope: !16759)
!16778 = !DILocation(line: 447, column: 44, scope: !16759)
!16779 = !DILocation(line: 448, column: 25, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16759, file: !969, line: 448, column: 25)
!16781 = !DILocation(line: 448, column: 30, scope: !16780)
!16782 = !DILocation(line: 448, column: 33, scope: !16780)
!16783 = !DILocation(line: 448, column: 39, scope: !16780)
!16784 = !DILocation(line: 448, column: 44, scope: !16780)
!16785 = !DILocation(line: 448, column: 47, scope: !16780)
!16786 = !DILocation(line: 448, column: 71, scope: !16780)
!16787 = !DILocation(line: 448, column: 25, scope: !16759)
!16788 = !DILocation(line: 450, column: 30, scope: !16789)
!16789 = distinct !DILexicalBlock(scope: !16780, file: !969, line: 449, column: 23)
!16790 = !DILocation(line: 450, column: 28, scope: !16789)
!16791 = !DILocation(line: 451, column: 25, scope: !16789)
!16792 = !DILocation(line: 451, column: 31, scope: !16789)
!16793 = !DILocation(line: 451, column: 39, scope: !16789)
!16794 = !DILocation(line: 452, column: 23, scope: !16789)
!16795 = !DILocation(line: 453, column: 25, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16759, file: !969, line: 453, column: 25)
!16797 = !DILocation(line: 453, column: 30, scope: !16796)
!16798 = !DILocation(line: 453, column: 33, scope: !16796)
!16799 = !DILocation(line: 453, column: 39, scope: !16796)
!16800 = !DILocation(line: 453, column: 44, scope: !16796)
!16801 = !DILocation(line: 453, column: 47, scope: !16796)
!16802 = !DILocation(line: 453, column: 71, scope: !16796)
!16803 = !DILocation(line: 453, column: 25, scope: !16759)
!16804 = !DILocation(line: 455, column: 30, scope: !16805)
!16805 = distinct !DILexicalBlock(scope: !16796, file: !969, line: 454, column: 23)
!16806 = !DILocation(line: 455, column: 28, scope: !16805)
!16807 = !DILocation(line: 456, column: 25, scope: !16805)
!16808 = !DILocation(line: 456, column: 31, scope: !16805)
!16809 = !DILocation(line: 456, column: 39, scope: !16805)
!16810 = !DILocation(line: 457, column: 23, scope: !16805)
!16811 = !DILocation(line: 458, column: 25, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16759, file: !969, line: 458, column: 25)
!16813 = !DILocation(line: 458, column: 25, scope: !16759)
!16814 = !DILocation(line: 459, column: 23, scope: !16812)
!16815 = !DILocation(line: 460, column: 19, scope: !16759)
!16816 = !DILocation(line: 461, column: 15, scope: !16739)
!16817 = !DILocation(line: 464, column: 13, scope: !16736)
!16818 = !DILocation(line: 470, column: 10, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16686, file: !969, line: 470, column: 9)
!16820 = !DILocation(line: 470, column: 9, scope: !16686)
!16821 = !DILocation(line: 476, column: 9, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16819, file: !969, line: 471, column: 7)
!16823 = !DILocation(line: 482, column: 20, scope: !16686)
!16824 = !DILocation(line: 482, column: 26, scope: !16686)
!16825 = !DILocation(line: 482, column: 12, scope: !16686)
!16826 = !DILocation(line: 482, column: 5, scope: !16686)
!16827 = !DILocation(line: 500, column: 1, scope: !16507)
!16828 = distinct !DISubprogram(name: "validate_timespec", scope: !969, file: !969, line: 87, type: !16829, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !949, retainedNodes: !216)
!16829 = !DISubroutineType(types: !16830)
!16830 = !{!7, !957}
!16831 = !DILocalVariable(name: "timespec", arg: 1, scope: !16828, file: !969, line: 87, type: !957)
!16832 = !DILocation(line: 87, column: 36, scope: !16828)
!16833 = !DILocalVariable(name: "result", scope: !16828, file: !969, line: 89, type: !7)
!16834 = !DILocation(line: 89, column: 7, scope: !16828)
!16835 = !DILocalVariable(name: "utime_omit_count", scope: !16828, file: !969, line: 90, type: !7)
!16836 = !DILocation(line: 90, column: 7, scope: !16828)
!16837 = !DILocation(line: 91, column: 8, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16828, file: !969, line: 91, column: 7)
!16839 = !DILocation(line: 91, column: 20, scope: !16838)
!16840 = !DILocation(line: 91, column: 28, scope: !16838)
!16841 = !DILocation(line: 92, column: 8, scope: !16838)
!16842 = !DILocation(line: 92, column: 11, scope: !16838)
!16843 = !DILocation(line: 92, column: 23, scope: !16838)
!16844 = !DILocation(line: 92, column: 31, scope: !16838)
!16845 = !DILocation(line: 93, column: 8, scope: !16838)
!16846 = !DILocation(line: 93, column: 19, scope: !16838)
!16847 = !DILocation(line: 93, column: 31, scope: !16838)
!16848 = !DILocation(line: 93, column: 16, scope: !16838)
!16849 = !DILocation(line: 94, column: 14, scope: !16838)
!16850 = !DILocation(line: 94, column: 17, scope: !16838)
!16851 = !DILocation(line: 94, column: 29, scope: !16838)
!16852 = !DILocation(line: 94, column: 37, scope: !16838)
!16853 = !DILocation(line: 95, column: 7, scope: !16838)
!16854 = !DILocation(line: 95, column: 11, scope: !16838)
!16855 = !DILocation(line: 95, column: 23, scope: !16838)
!16856 = !DILocation(line: 95, column: 31, scope: !16838)
!16857 = !DILocation(line: 96, column: 11, scope: !16838)
!16858 = !DILocation(line: 96, column: 14, scope: !16838)
!16859 = !DILocation(line: 96, column: 26, scope: !16838)
!16860 = !DILocation(line: 96, column: 34, scope: !16838)
!16861 = !DILocation(line: 97, column: 11, scope: !16838)
!16862 = !DILocation(line: 97, column: 22, scope: !16838)
!16863 = !DILocation(line: 97, column: 34, scope: !16838)
!16864 = !DILocation(line: 97, column: 19, scope: !16838)
!16865 = !DILocation(line: 98, column: 17, scope: !16838)
!16866 = !DILocation(line: 98, column: 20, scope: !16838)
!16867 = !DILocation(line: 98, column: 32, scope: !16838)
!16868 = !DILocation(line: 98, column: 40, scope: !16838)
!16869 = !DILocation(line: 91, column: 7, scope: !16828)
!16870 = !DILocation(line: 100, column: 7, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16838, file: !969, line: 99, column: 5)
!16872 = !DILocation(line: 100, column: 13, scope: !16871)
!16873 = !DILocation(line: 101, column: 7, scope: !16871)
!16874 = !DILocation(line: 107, column: 7, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16828, file: !969, line: 107, column: 7)
!16876 = !DILocation(line: 107, column: 19, scope: !16875)
!16877 = !DILocation(line: 107, column: 27, scope: !16875)
!16878 = !DILocation(line: 108, column: 7, scope: !16875)
!16879 = !DILocation(line: 108, column: 10, scope: !16875)
!16880 = !DILocation(line: 108, column: 22, scope: !16875)
!16881 = !DILocation(line: 108, column: 30, scope: !16875)
!16882 = !DILocation(line: 107, column: 7, scope: !16828)
!16883 = !DILocation(line: 110, column: 7, scope: !16884)
!16884 = distinct !DILexicalBlock(scope: !16875, file: !969, line: 109, column: 5)
!16885 = !DILocation(line: 110, column: 19, scope: !16884)
!16886 = !DILocation(line: 110, column: 26, scope: !16884)
!16887 = !DILocation(line: 111, column: 14, scope: !16884)
!16888 = !DILocation(line: 112, column: 11, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16884, file: !969, line: 112, column: 11)
!16890 = !DILocation(line: 112, column: 23, scope: !16889)
!16891 = !DILocation(line: 112, column: 31, scope: !16889)
!16892 = !DILocation(line: 112, column: 11, scope: !16884)
!16893 = !DILocation(line: 113, column: 25, scope: !16889)
!16894 = !DILocation(line: 113, column: 9, scope: !16889)
!16895 = !DILocation(line: 114, column: 5, scope: !16884)
!16896 = !DILocation(line: 115, column: 7, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16828, file: !969, line: 115, column: 7)
!16898 = !DILocation(line: 115, column: 19, scope: !16897)
!16899 = !DILocation(line: 115, column: 27, scope: !16897)
!16900 = !DILocation(line: 116, column: 7, scope: !16897)
!16901 = !DILocation(line: 116, column: 10, scope: !16897)
!16902 = !DILocation(line: 116, column: 22, scope: !16897)
!16903 = !DILocation(line: 116, column: 30, scope: !16897)
!16904 = !DILocation(line: 115, column: 7, scope: !16828)
!16905 = !DILocation(line: 118, column: 7, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16897, file: !969, line: 117, column: 5)
!16907 = !DILocation(line: 118, column: 19, scope: !16906)
!16908 = !DILocation(line: 118, column: 26, scope: !16906)
!16909 = !DILocation(line: 119, column: 14, scope: !16906)
!16910 = !DILocation(line: 120, column: 11, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16906, file: !969, line: 120, column: 11)
!16912 = !DILocation(line: 120, column: 23, scope: !16911)
!16913 = !DILocation(line: 120, column: 31, scope: !16911)
!16914 = !DILocation(line: 120, column: 11, scope: !16906)
!16915 = !DILocation(line: 121, column: 25, scope: !16911)
!16916 = !DILocation(line: 121, column: 9, scope: !16911)
!16917 = !DILocation(line: 122, column: 5, scope: !16906)
!16918 = !DILocation(line: 123, column: 10, scope: !16828)
!16919 = !DILocation(line: 123, column: 20, scope: !16828)
!16920 = !DILocation(line: 123, column: 37, scope: !16828)
!16921 = !DILocation(line: 123, column: 17, scope: !16828)
!16922 = !DILocation(line: 123, column: 3, scope: !16828)
!16923 = !DILocation(line: 124, column: 1, scope: !16828)
!16924 = distinct !DISubprogram(name: "update_timespec", scope: !969, file: !969, line: 133, type: !16925, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !949, retainedNodes: !216)
!16925 = !DISubroutineType(types: !16926)
!16926 = !{!142, !16927, !16929}
!16927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16928, size: 64)
!16928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16508)
!16929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!16930 = !DILocalVariable(name: "statbuf", arg: 1, scope: !16924, file: !969, line: 133, type: !16927)
!16931 = !DILocation(line: 133, column: 37, scope: !16924)
!16932 = !DILocalVariable(name: "ts", arg: 2, scope: !16924, file: !969, line: 133, type: !16929)
!16933 = !DILocation(line: 133, column: 63, scope: !16924)
!16934 = !DILocalVariable(name: "timespec", scope: !16924, file: !969, line: 135, type: !957)
!16935 = !DILocation(line: 135, column: 20, scope: !16924)
!16936 = !DILocation(line: 135, column: 32, scope: !16924)
!16937 = !DILocation(line: 135, column: 31, scope: !16924)
!16938 = !DILocation(line: 136, column: 7, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16924, file: !969, line: 136, column: 7)
!16940 = !DILocation(line: 136, column: 19, scope: !16939)
!16941 = !DILocation(line: 136, column: 27, scope: !16939)
!16942 = !DILocation(line: 137, column: 7, scope: !16939)
!16943 = !DILocation(line: 137, column: 10, scope: !16939)
!16944 = !DILocation(line: 137, column: 22, scope: !16939)
!16945 = !DILocation(line: 137, column: 30, scope: !16939)
!16946 = !DILocation(line: 136, column: 7, scope: !16924)
!16947 = !DILocation(line: 138, column: 5, scope: !16939)
!16948 = !DILocation(line: 139, column: 7, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16924, file: !969, line: 139, column: 7)
!16950 = !DILocation(line: 139, column: 19, scope: !16949)
!16951 = !DILocation(line: 139, column: 27, scope: !16949)
!16952 = !DILocation(line: 140, column: 7, scope: !16949)
!16953 = !DILocation(line: 140, column: 10, scope: !16949)
!16954 = !DILocation(line: 140, column: 22, scope: !16949)
!16955 = !DILocation(line: 140, column: 30, scope: !16949)
!16956 = !DILocation(line: 139, column: 7, scope: !16924)
!16957 = !DILocation(line: 142, column: 8, scope: !16958)
!16958 = distinct !DILexicalBlock(scope: !16949, file: !969, line: 141, column: 5)
!16959 = !DILocation(line: 142, column: 11, scope: !16958)
!16960 = !DILocation(line: 143, column: 7, scope: !16958)
!16961 = !DILocation(line: 146, column: 7, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16924, file: !969, line: 146, column: 7)
!16963 = !DILocation(line: 146, column: 19, scope: !16962)
!16964 = !DILocation(line: 146, column: 27, scope: !16962)
!16965 = !DILocation(line: 146, column: 7, scope: !16924)
!16966 = !DILocation(line: 147, column: 5, scope: !16962)
!16967 = !DILocation(line: 147, column: 35, scope: !16962)
!16968 = !DILocation(line: 147, column: 19, scope: !16962)
!16969 = !DILocation(line: 148, column: 12, scope: !16970)
!16970 = distinct !DILexicalBlock(scope: !16962, file: !969, line: 148, column: 12)
!16971 = !DILocation(line: 148, column: 24, scope: !16970)
!16972 = !DILocation(line: 148, column: 32, scope: !16970)
!16973 = !DILocation(line: 148, column: 12, scope: !16962)
!16974 = !DILocation(line: 149, column: 15, scope: !16970)
!16975 = !DILocation(line: 149, column: 5, scope: !16970)
!16976 = !DILocation(line: 151, column: 7, scope: !16977)
!16977 = distinct !DILexicalBlock(scope: !16924, file: !969, line: 151, column: 7)
!16978 = !DILocation(line: 151, column: 19, scope: !16977)
!16979 = !DILocation(line: 151, column: 27, scope: !16977)
!16980 = !DILocation(line: 151, column: 7, scope: !16924)
!16981 = !DILocation(line: 152, column: 5, scope: !16977)
!16982 = !DILocation(line: 152, column: 35, scope: !16977)
!16983 = !DILocation(line: 152, column: 19, scope: !16977)
!16984 = !DILocation(line: 153, column: 12, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16977, file: !969, line: 153, column: 12)
!16986 = !DILocation(line: 153, column: 24, scope: !16985)
!16987 = !DILocation(line: 153, column: 32, scope: !16985)
!16988 = !DILocation(line: 153, column: 12, scope: !16977)
!16989 = !DILocation(line: 154, column: 15, scope: !16985)
!16990 = !DILocation(line: 154, column: 5, scope: !16985)
!16991 = !DILocation(line: 156, column: 3, scope: !16924)
!16992 = !DILocation(line: 157, column: 1, scope: !16924)
!16993 = distinct !DISubprogram(name: "utimens", scope: !969, file: !969, line: 505, type: !16994, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !949, retainedNodes: !216)
!16994 = !DISubroutineType(types: !16995)
!16995 = !{!7, !116, !16494}
!16996 = !DILocalVariable(name: "file", arg: 1, scope: !16993, file: !969, line: 505, type: !116)
!16997 = !DILocation(line: 505, column: 22, scope: !16993)
!16998 = !DILocalVariable(name: "timespec", arg: 2, scope: !16993, file: !969, line: 505, type: !16494)
!16999 = !DILocation(line: 505, column: 50, scope: !16993)
!17000 = !DILocation(line: 507, column: 25, scope: !16993)
!17001 = !DILocation(line: 507, column: 31, scope: !16993)
!17002 = !DILocation(line: 507, column: 10, scope: !16993)
!17003 = !DILocation(line: 507, column: 3, scope: !16993)
!17004 = distinct !DISubprogram(name: "lutimens", scope: !969, file: !969, line: 515, type: !16994, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !949, retainedNodes: !216)
!17005 = !DILocalVariable(name: "file", arg: 1, scope: !17004, file: !969, line: 515, type: !116)
!17006 = !DILocation(line: 515, column: 23, scope: !17004)
!17007 = !DILocalVariable(name: "timespec", arg: 2, scope: !17004, file: !969, line: 515, type: !16494)
!17008 = !DILocation(line: 515, column: 51, scope: !17004)
!17009 = !DILocalVariable(name: "adjusted_timespec", scope: !17004, file: !969, line: 517, type: !952)
!17010 = !DILocation(line: 517, column: 19, scope: !17004)
!17011 = !DILocalVariable(name: "ts", scope: !17004, file: !969, line: 518, type: !957)
!17012 = !DILocation(line: 518, column: 20, scope: !17004)
!17013 = !DILocation(line: 518, column: 25, scope: !17004)
!17014 = !DILocation(line: 518, column: 36, scope: !17004)
!17015 = !DILocalVariable(name: "adjustment_needed", scope: !17004, file: !969, line: 519, type: !7)
!17016 = !DILocation(line: 519, column: 7, scope: !17004)
!17017 = !DILocalVariable(name: "st", scope: !17004, file: !969, line: 520, type: !16508)
!17018 = !DILocation(line: 520, column: 15, scope: !17004)
!17019 = !DILocation(line: 522, column: 7, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !17004, file: !969, line: 522, column: 7)
!17021 = !DILocation(line: 522, column: 7, scope: !17004)
!17022 = !DILocation(line: 524, column: 7, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17020, file: !969, line: 523, column: 5)
!17024 = !DILocation(line: 524, column: 30, scope: !17023)
!17025 = !DILocation(line: 525, column: 7, scope: !17023)
!17026 = !DILocation(line: 525, column: 30, scope: !17023)
!17027 = !DILocation(line: 526, column: 46, scope: !17023)
!17028 = !DILocation(line: 526, column: 27, scope: !17023)
!17029 = !DILocation(line: 526, column: 25, scope: !17023)
!17030 = !DILocation(line: 527, column: 5, scope: !17023)
!17031 = !DILocation(line: 528, column: 7, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !17004, file: !969, line: 528, column: 7)
!17033 = !DILocation(line: 528, column: 25, scope: !17032)
!17034 = !DILocation(line: 528, column: 7, scope: !17004)
!17035 = !DILocation(line: 529, column: 5, scope: !17032)
!17036 = !DILocation(line: 537, column: 12, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17004, file: !969, line: 537, column: 7)
!17038 = !DILocation(line: 537, column: 9, scope: !17037)
!17039 = !DILocation(line: 537, column: 7, scope: !17004)
!17040 = !DILocalVariable(name: "result", scope: !17041, file: !969, line: 539, type: !7)
!17041 = distinct !DILexicalBlock(scope: !17037, file: !969, line: 538, column: 5)
!17042 = !DILocation(line: 539, column: 11, scope: !17041)
!17043 = !DILocation(line: 553, column: 11, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17041, file: !969, line: 553, column: 11)
!17045 = !DILocation(line: 553, column: 29, scope: !17044)
!17046 = !DILocation(line: 553, column: 11, scope: !17041)
!17047 = !DILocation(line: 555, column: 22, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17049, file: !969, line: 555, column: 15)
!17049 = distinct !DILexicalBlock(scope: !17044, file: !969, line: 554, column: 9)
!17050 = !DILocation(line: 555, column: 15, scope: !17048)
!17051 = !DILocation(line: 555, column: 15, scope: !17049)
!17052 = !DILocation(line: 556, column: 13, scope: !17048)
!17053 = !DILocation(line: 557, column: 15, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !17049, file: !969, line: 557, column: 15)
!17055 = !DILocation(line: 557, column: 21, scope: !17054)
!17056 = !DILocation(line: 557, column: 29, scope: !17054)
!17057 = !DILocation(line: 557, column: 15, scope: !17049)
!17058 = !DILocation(line: 558, column: 13, scope: !17054)
!17059 = !DILocation(line: 558, column: 21, scope: !17054)
!17060 = !DILocation(line: 559, column: 20, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17054, file: !969, line: 559, column: 20)
!17062 = !DILocation(line: 559, column: 26, scope: !17061)
!17063 = !DILocation(line: 559, column: 34, scope: !17061)
!17064 = !DILocation(line: 559, column: 20, scope: !17054)
!17065 = !DILocation(line: 560, column: 13, scope: !17061)
!17066 = !DILocation(line: 560, column: 21, scope: !17061)
!17067 = !DILocation(line: 562, column: 28, scope: !17049)
!17068 = !DILocation(line: 563, column: 9, scope: !17049)
!17069 = !DILocation(line: 565, column: 37, scope: !17041)
!17070 = !DILocation(line: 565, column: 43, scope: !17041)
!17071 = !DILocation(line: 565, column: 16, scope: !17041)
!17072 = !DILocation(line: 565, column: 14, scope: !17041)
!17073 = !DILocation(line: 574, column: 15, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17041, file: !969, line: 574, column: 11)
!17075 = !DILocation(line: 574, column: 13, scope: !17074)
!17076 = !DILocation(line: 574, column: 11, scope: !17041)
!17077 = !DILocation(line: 575, column: 9, scope: !17074)
!17078 = !DILocation(line: 575, column: 15, scope: !17074)
!17079 = !DILocation(line: 577, column: 11, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17041, file: !969, line: 577, column: 11)
!17081 = !DILocation(line: 577, column: 18, scope: !17080)
!17082 = !DILocation(line: 577, column: 23, scope: !17080)
!17083 = !DILocation(line: 577, column: 26, scope: !17080)
!17084 = !DILocation(line: 577, column: 32, scope: !17080)
!17085 = !DILocation(line: 577, column: 11, scope: !17041)
!17086 = !DILocation(line: 579, column: 34, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !17080, file: !969, line: 578, column: 9)
!17088 = !DILocation(line: 580, column: 35, scope: !17087)
!17089 = !DILocation(line: 581, column: 18, scope: !17087)
!17090 = !DILocation(line: 581, column: 11, scope: !17087)
!17091 = !DILocation(line: 583, column: 5, scope: !17041)
!17092 = !DILocation(line: 584, column: 27, scope: !17004)
!17093 = !DILocation(line: 591, column: 7, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17004, file: !969, line: 591, column: 7)
!17095 = !DILocation(line: 591, column: 7, scope: !17004)
!17096 = !DILocation(line: 593, column: 11, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17098, file: !969, line: 593, column: 11)
!17098 = distinct !DILexicalBlock(scope: !17094, file: !969, line: 592, column: 5)
!17099 = !DILocation(line: 593, column: 29, scope: !17097)
!17100 = !DILocation(line: 593, column: 34, scope: !17097)
!17101 = !DILocation(line: 593, column: 44, scope: !17097)
!17102 = !DILocation(line: 593, column: 37, scope: !17097)
!17103 = !DILocation(line: 593, column: 11, scope: !17098)
!17104 = !DILocation(line: 594, column: 9, scope: !17097)
!17105 = !DILocation(line: 595, column: 11, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17098, file: !969, line: 595, column: 11)
!17107 = !DILocation(line: 595, column: 14, scope: !17106)
!17108 = !DILocation(line: 595, column: 17, scope: !17106)
!17109 = !DILocation(line: 595, column: 11, scope: !17098)
!17110 = !DILocation(line: 596, column: 9, scope: !17106)
!17111 = !DILocation(line: 597, column: 5, scope: !17098)
!17112 = !DILocation(line: 624, column: 9, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17004, file: !969, line: 624, column: 7)
!17114 = !DILocation(line: 624, column: 54, scope: !17113)
!17115 = !DILocation(line: 624, column: 64, scope: !17113)
!17116 = !DILocation(line: 624, column: 57, scope: !17113)
!17117 = !DILocation(line: 624, column: 7, scope: !17004)
!17118 = !DILocation(line: 625, column: 5, scope: !17113)
!17119 = !DILocation(line: 626, column: 8, scope: !17120)
!17120 = distinct !DILexicalBlock(scope: !17004, file: !969, line: 626, column: 7)
!17121 = !DILocation(line: 626, column: 7, scope: !17004)
!17122 = !DILocation(line: 627, column: 27, scope: !17120)
!17123 = !DILocation(line: 627, column: 33, scope: !17120)
!17124 = !DILocation(line: 627, column: 12, scope: !17120)
!17125 = !DILocation(line: 627, column: 5, scope: !17120)
!17126 = !DILocation(line: 628, column: 3, scope: !17004)
!17127 = !DILocation(line: 628, column: 9, scope: !17004)
!17128 = !DILocation(line: 629, column: 3, scope: !17004)
!17129 = !DILocation(line: 630, column: 1, scope: !17004)
!17130 = distinct !DISubprogram(name: "verror", scope: !17131, file: !17131, line: 43, type: !17132, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1396, retainedNodes: !216)
!17131 = !DIFile(filename: "lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17132 = !DISubroutineType(types: !17133)
!17133 = !{null, !7, !7, !116, !17134}
!17134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17135, size: 64)
!17135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1397, size: 192, elements: !17136)
!17136 = !{!17137, !17138, !17139, !17140}
!17137 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !17135, file: !1397, baseType: !70, size: 32)
!17138 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !17135, file: !1397, baseType: !70, size: 32, offset: 32)
!17139 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !17135, file: !1397, baseType: !53, size: 64, offset: 64)
!17140 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !17135, file: !1397, baseType: !53, size: 64, offset: 128)
!17141 = !DILocalVariable(name: "status", arg: 1, scope: !17130, file: !17131, line: 43, type: !7)
!17142 = !DILocation(line: 43, column: 13, scope: !17130)
!17143 = !DILocalVariable(name: "errnum", arg: 2, scope: !17130, file: !17131, line: 43, type: !7)
!17144 = !DILocation(line: 43, column: 25, scope: !17130)
!17145 = !DILocalVariable(name: "format", arg: 3, scope: !17130, file: !17131, line: 43, type: !116)
!17146 = !DILocation(line: 43, column: 45, scope: !17130)
!17147 = !DILocalVariable(name: "args", arg: 4, scope: !17130, file: !17131, line: 43, type: !17134)
!17148 = !DILocation(line: 43, column: 61, scope: !17130)
!17149 = !DILocation(line: 45, column: 19, scope: !17130)
!17150 = !DILocation(line: 45, column: 27, scope: !17130)
!17151 = !DILocation(line: 45, column: 44, scope: !17130)
!17152 = !DILocation(line: 45, column: 52, scope: !17130)
!17153 = !DILocation(line: 45, column: 3, scope: !17130)
!17154 = !DILocation(line: 46, column: 1, scope: !17130)
!17155 = distinct !DISubprogram(name: "verror_at_line", scope: !17131, file: !17131, line: 55, type: !17156, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1396, retainedNodes: !216)
!17156 = !DISubroutineType(types: !17157)
!17157 = !{null, !7, !7, !116, !70, !116, !17134}
!17158 = !DILocalVariable(name: "status", arg: 1, scope: !17155, file: !17131, line: 55, type: !7)
!17159 = !DILocation(line: 55, column: 21, scope: !17155)
!17160 = !DILocalVariable(name: "errnum", arg: 2, scope: !17155, file: !17131, line: 55, type: !7)
!17161 = !DILocation(line: 55, column: 33, scope: !17155)
!17162 = !DILocalVariable(name: "file", arg: 3, scope: !17155, file: !17131, line: 55, type: !116)
!17163 = !DILocation(line: 55, column: 53, scope: !17155)
!17164 = !DILocalVariable(name: "line_number", arg: 4, scope: !17155, file: !17131, line: 56, type: !70)
!17165 = !DILocation(line: 56, column: 30, scope: !17155)
!17166 = !DILocalVariable(name: "format", arg: 5, scope: !17155, file: !17131, line: 56, type: !116)
!17167 = !DILocation(line: 56, column: 55, scope: !17155)
!17168 = !DILocalVariable(name: "args", arg: 6, scope: !17155, file: !17131, line: 56, type: !17134)
!17169 = !DILocation(line: 56, column: 71, scope: !17155)
!17170 = !DILocalVariable(name: "message", scope: !17155, file: !17131, line: 58, type: !9)
!17171 = !DILocation(line: 58, column: 9, scope: !17155)
!17172 = !DILocation(line: 58, column: 31, scope: !17155)
!17173 = !DILocation(line: 58, column: 39, scope: !17155)
!17174 = !DILocation(line: 58, column: 19, scope: !17155)
!17175 = !DILocation(line: 59, column: 7, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17155, file: !17131, line: 59, column: 7)
!17177 = !DILocation(line: 59, column: 7, scope: !17155)
!17178 = !DILocation(line: 64, column: 11, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17180, file: !17131, line: 64, column: 11)
!17180 = distinct !DILexicalBlock(scope: !17176, file: !17131, line: 60, column: 5)
!17181 = !DILocation(line: 64, column: 11, scope: !17180)
!17182 = !DILocation(line: 65, column: 24, scope: !17179)
!17183 = !DILocation(line: 65, column: 32, scope: !17179)
!17184 = !DILocation(line: 65, column: 40, scope: !17179)
!17185 = !DILocation(line: 65, column: 46, scope: !17179)
!17186 = !DILocation(line: 65, column: 65, scope: !17179)
!17187 = !DILocation(line: 65, column: 9, scope: !17179)
!17188 = !DILocation(line: 67, column: 16, scope: !17179)
!17189 = !DILocation(line: 67, column: 24, scope: !17179)
!17190 = !DILocation(line: 67, column: 38, scope: !17179)
!17191 = !DILocation(line: 67, column: 9, scope: !17179)
!17192 = !DILocation(line: 68, column: 5, scope: !17180)
!17193 = !DILocation(line: 73, column: 17, scope: !17194)
!17194 = distinct !DILexicalBlock(scope: !17176, file: !17131, line: 70, column: 5)
!17195 = !DILocation(line: 73, column: 24, scope: !17194)
!17196 = !DILocation(line: 73, column: 7, scope: !17194)
!17197 = !DILocation(line: 74, column: 7, scope: !17194)
!17198 = !DILocation(line: 76, column: 9, scope: !17155)
!17199 = !DILocation(line: 76, column: 3, scope: !17155)
!17200 = !DILocation(line: 77, column: 1, scope: !17155)
!17201 = distinct !DISubprogram(name: "version_etc_arn", scope: !17202, file: !17202, line: 61, type: !17203, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1399, retainedNodes: !216)
!17202 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17203 = !DISubroutineType(types: !17204)
!17204 = !{null, !1423, !116, !116, !116, !993, !55}
!17205 = !DILocalVariable(name: "stream", arg: 1, scope: !17201, file: !17202, line: 61, type: !1423)
!17206 = !DILocation(line: 61, column: 24, scope: !17201)
!17207 = !DILocalVariable(name: "command_name", arg: 2, scope: !17201, file: !17202, line: 62, type: !116)
!17208 = !DILocation(line: 62, column: 30, scope: !17201)
!17209 = !DILocalVariable(name: "package", arg: 3, scope: !17201, file: !17202, line: 62, type: !116)
!17210 = !DILocation(line: 62, column: 56, scope: !17201)
!17211 = !DILocalVariable(name: "version", arg: 4, scope: !17201, file: !17202, line: 63, type: !116)
!17212 = !DILocation(line: 63, column: 30, scope: !17201)
!17213 = !DILocalVariable(name: "authors", arg: 5, scope: !17201, file: !17202, line: 64, type: !993)
!17214 = !DILocation(line: 64, column: 39, scope: !17201)
!17215 = !DILocalVariable(name: "n_authors", arg: 6, scope: !17201, file: !17202, line: 64, type: !55)
!17216 = !DILocation(line: 64, column: 55, scope: !17201)
!17217 = !DILocation(line: 66, column: 7, scope: !17218)
!17218 = distinct !DILexicalBlock(scope: !17201, file: !17202, line: 66, column: 7)
!17219 = !DILocation(line: 66, column: 7, scope: !17201)
!17220 = !DILocation(line: 67, column: 14, scope: !17218)
!17221 = !DILocation(line: 67, column: 38, scope: !17218)
!17222 = !DILocation(line: 67, column: 52, scope: !17218)
!17223 = !DILocation(line: 67, column: 61, scope: !17218)
!17224 = !DILocation(line: 67, column: 5, scope: !17218)
!17225 = !DILocation(line: 69, column: 14, scope: !17218)
!17226 = !DILocation(line: 69, column: 33, scope: !17218)
!17227 = !DILocation(line: 69, column: 42, scope: !17218)
!17228 = !DILocation(line: 69, column: 5, scope: !17218)
!17229 = !DILocation(line: 83, column: 12, scope: !17201)
!17230 = !DILocation(line: 83, column: 43, scope: !17201)
!17231 = !DILocation(line: 83, column: 3, scope: !17201)
!17232 = !DILocation(line: 85, column: 3, scope: !17201)
!17233 = !DILocation(line: 94, column: 11, scope: !17201)
!17234 = !DILocation(line: 94, column: 3, scope: !17201)
!17235 = !DILocation(line: 99, column: 7, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17201, file: !17202, line: 95, column: 5)
!17237 = !DILocation(line: 102, column: 16, scope: !17236)
!17238 = !DILocation(line: 102, column: 24, scope: !17236)
!17239 = !DILocation(line: 102, column: 47, scope: !17236)
!17240 = !DILocation(line: 102, column: 7, scope: !17236)
!17241 = !DILocation(line: 103, column: 7, scope: !17236)
!17242 = !DILocation(line: 106, column: 16, scope: !17236)
!17243 = !DILocation(line: 106, column: 24, scope: !17236)
!17244 = !DILocation(line: 106, column: 54, scope: !17236)
!17245 = !DILocation(line: 106, column: 66, scope: !17236)
!17246 = !DILocation(line: 106, column: 7, scope: !17236)
!17247 = !DILocation(line: 107, column: 7, scope: !17236)
!17248 = !DILocation(line: 110, column: 16, scope: !17236)
!17249 = !DILocation(line: 110, column: 24, scope: !17236)
!17250 = !DILocation(line: 111, column: 16, scope: !17236)
!17251 = !DILocation(line: 111, column: 28, scope: !17236)
!17252 = !DILocation(line: 111, column: 40, scope: !17236)
!17253 = !DILocation(line: 110, column: 7, scope: !17236)
!17254 = !DILocation(line: 112, column: 7, scope: !17236)
!17255 = !DILocation(line: 117, column: 16, scope: !17236)
!17256 = !DILocation(line: 117, column: 24, scope: !17236)
!17257 = !DILocation(line: 118, column: 16, scope: !17236)
!17258 = !DILocation(line: 118, column: 28, scope: !17236)
!17259 = !DILocation(line: 118, column: 40, scope: !17236)
!17260 = !DILocation(line: 118, column: 52, scope: !17236)
!17261 = !DILocation(line: 117, column: 7, scope: !17236)
!17262 = !DILocation(line: 119, column: 7, scope: !17236)
!17263 = !DILocation(line: 124, column: 16, scope: !17236)
!17264 = !DILocation(line: 124, column: 24, scope: !17236)
!17265 = !DILocation(line: 125, column: 16, scope: !17236)
!17266 = !DILocation(line: 125, column: 28, scope: !17236)
!17267 = !DILocation(line: 125, column: 40, scope: !17236)
!17268 = !DILocation(line: 125, column: 52, scope: !17236)
!17269 = !DILocation(line: 125, column: 64, scope: !17236)
!17270 = !DILocation(line: 124, column: 7, scope: !17236)
!17271 = !DILocation(line: 126, column: 7, scope: !17236)
!17272 = !DILocation(line: 131, column: 16, scope: !17236)
!17273 = !DILocation(line: 131, column: 24, scope: !17236)
!17274 = !DILocation(line: 132, column: 16, scope: !17236)
!17275 = !DILocation(line: 132, column: 28, scope: !17236)
!17276 = !DILocation(line: 132, column: 40, scope: !17236)
!17277 = !DILocation(line: 132, column: 52, scope: !17236)
!17278 = !DILocation(line: 132, column: 64, scope: !17236)
!17279 = !DILocation(line: 133, column: 16, scope: !17236)
!17280 = !DILocation(line: 131, column: 7, scope: !17236)
!17281 = !DILocation(line: 134, column: 7, scope: !17236)
!17282 = !DILocation(line: 139, column: 16, scope: !17236)
!17283 = !DILocation(line: 139, column: 24, scope: !17236)
!17284 = !DILocation(line: 140, column: 16, scope: !17236)
!17285 = !DILocation(line: 140, column: 28, scope: !17236)
!17286 = !DILocation(line: 140, column: 40, scope: !17236)
!17287 = !DILocation(line: 140, column: 52, scope: !17236)
!17288 = !DILocation(line: 140, column: 64, scope: !17236)
!17289 = !DILocation(line: 141, column: 16, scope: !17236)
!17290 = !DILocation(line: 141, column: 28, scope: !17236)
!17291 = !DILocation(line: 139, column: 7, scope: !17236)
!17292 = !DILocation(line: 142, column: 7, scope: !17236)
!17293 = !DILocation(line: 147, column: 16, scope: !17236)
!17294 = !DILocation(line: 147, column: 24, scope: !17236)
!17295 = !DILocation(line: 149, column: 17, scope: !17236)
!17296 = !DILocation(line: 149, column: 29, scope: !17236)
!17297 = !DILocation(line: 149, column: 41, scope: !17236)
!17298 = !DILocation(line: 149, column: 53, scope: !17236)
!17299 = !DILocation(line: 149, column: 65, scope: !17236)
!17300 = !DILocation(line: 150, column: 17, scope: !17236)
!17301 = !DILocation(line: 150, column: 29, scope: !17236)
!17302 = !DILocation(line: 150, column: 41, scope: !17236)
!17303 = !DILocation(line: 147, column: 7, scope: !17236)
!17304 = !DILocation(line: 151, column: 7, scope: !17236)
!17305 = !DILocation(line: 156, column: 16, scope: !17236)
!17306 = !DILocation(line: 156, column: 24, scope: !17236)
!17307 = !DILocation(line: 158, column: 16, scope: !17236)
!17308 = !DILocation(line: 158, column: 28, scope: !17236)
!17309 = !DILocation(line: 158, column: 40, scope: !17236)
!17310 = !DILocation(line: 158, column: 52, scope: !17236)
!17311 = !DILocation(line: 158, column: 64, scope: !17236)
!17312 = !DILocation(line: 159, column: 16, scope: !17236)
!17313 = !DILocation(line: 159, column: 28, scope: !17236)
!17314 = !DILocation(line: 159, column: 40, scope: !17236)
!17315 = !DILocation(line: 159, column: 52, scope: !17236)
!17316 = !DILocation(line: 156, column: 7, scope: !17236)
!17317 = !DILocation(line: 160, column: 7, scope: !17236)
!17318 = !DILocation(line: 167, column: 16, scope: !17236)
!17319 = !DILocation(line: 167, column: 24, scope: !17236)
!17320 = !DILocation(line: 169, column: 17, scope: !17236)
!17321 = !DILocation(line: 169, column: 29, scope: !17236)
!17322 = !DILocation(line: 169, column: 41, scope: !17236)
!17323 = !DILocation(line: 169, column: 53, scope: !17236)
!17324 = !DILocation(line: 169, column: 65, scope: !17236)
!17325 = !DILocation(line: 170, column: 17, scope: !17236)
!17326 = !DILocation(line: 170, column: 29, scope: !17236)
!17327 = !DILocation(line: 170, column: 41, scope: !17236)
!17328 = !DILocation(line: 170, column: 53, scope: !17236)
!17329 = !DILocation(line: 167, column: 7, scope: !17236)
!17330 = !DILocation(line: 171, column: 7, scope: !17236)
!17331 = !DILocation(line: 173, column: 1, scope: !17201)
!17332 = distinct !DISubprogram(name: "version_etc_ar", scope: !17202, file: !17202, line: 180, type: !17333, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1399, retainedNodes: !216)
!17333 = !DISubroutineType(types: !17334)
!17334 = !{null, !1423, !116, !116, !116, !993}
!17335 = !DILocalVariable(name: "stream", arg: 1, scope: !17332, file: !17202, line: 180, type: !1423)
!17336 = !DILocation(line: 180, column: 23, scope: !17332)
!17337 = !DILocalVariable(name: "command_name", arg: 2, scope: !17332, file: !17202, line: 181, type: !116)
!17338 = !DILocation(line: 181, column: 29, scope: !17332)
!17339 = !DILocalVariable(name: "package", arg: 3, scope: !17332, file: !17202, line: 181, type: !116)
!17340 = !DILocation(line: 181, column: 55, scope: !17332)
!17341 = !DILocalVariable(name: "version", arg: 4, scope: !17332, file: !17202, line: 182, type: !116)
!17342 = !DILocation(line: 182, column: 29, scope: !17332)
!17343 = !DILocalVariable(name: "authors", arg: 5, scope: !17332, file: !17202, line: 182, type: !993)
!17344 = !DILocation(line: 182, column: 59, scope: !17332)
!17345 = !DILocalVariable(name: "n_authors", scope: !17332, file: !17202, line: 184, type: !55)
!17346 = !DILocation(line: 184, column: 10, scope: !17332)
!17347 = !DILocation(line: 186, column: 18, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17332, file: !17202, line: 186, column: 3)
!17349 = !DILocation(line: 186, column: 8, scope: !17348)
!17350 = !DILocation(line: 186, column: 23, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17348, file: !17202, line: 186, column: 3)
!17352 = !DILocation(line: 186, column: 31, scope: !17351)
!17353 = !DILocation(line: 186, column: 3, scope: !17348)
!17354 = !DILocation(line: 186, column: 52, scope: !17351)
!17355 = !DILocation(line: 186, column: 3, scope: !17351)
!17356 = distinct !{!17356, !17353, !17357}
!17357 = !DILocation(line: 187, column: 5, scope: !17348)
!17358 = !DILocation(line: 188, column: 20, scope: !17332)
!17359 = !DILocation(line: 188, column: 28, scope: !17332)
!17360 = !DILocation(line: 188, column: 42, scope: !17332)
!17361 = !DILocation(line: 188, column: 51, scope: !17332)
!17362 = !DILocation(line: 188, column: 60, scope: !17332)
!17363 = !DILocation(line: 188, column: 69, scope: !17332)
!17364 = !DILocation(line: 188, column: 3, scope: !17332)
!17365 = !DILocation(line: 189, column: 1, scope: !17332)
!17366 = distinct !DISubprogram(name: "version_etc_va", scope: !17202, file: !17202, line: 196, type: !17367, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1399, retainedNodes: !216)
!17367 = !DISubroutineType(types: !17368)
!17368 = !{null, !1423, !116, !116, !116, !17369}
!17369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!17370 = !DILocalVariable(name: "stream", arg: 1, scope: !17366, file: !17202, line: 196, type: !1423)
!17371 = !DILocation(line: 196, column: 23, scope: !17366)
!17372 = !DILocalVariable(name: "command_name", arg: 2, scope: !17366, file: !17202, line: 197, type: !116)
!17373 = !DILocation(line: 197, column: 29, scope: !17366)
!17374 = !DILocalVariable(name: "package", arg: 3, scope: !17366, file: !17202, line: 197, type: !116)
!17375 = !DILocation(line: 197, column: 55, scope: !17366)
!17376 = !DILocalVariable(name: "version", arg: 4, scope: !17366, file: !17202, line: 198, type: !116)
!17377 = !DILocation(line: 198, column: 29, scope: !17366)
!17378 = !DILocalVariable(name: "authors", arg: 5, scope: !17366, file: !17202, line: 198, type: !17369)
!17379 = !DILocation(line: 198, column: 46, scope: !17366)
!17380 = !DILocalVariable(name: "n_authors", scope: !17366, file: !17202, line: 200, type: !55)
!17381 = !DILocation(line: 200, column: 10, scope: !17366)
!17382 = !DILocalVariable(name: "authtab", scope: !17366, file: !17202, line: 201, type: !1409)
!17383 = !DILocation(line: 201, column: 15, scope: !17366)
!17384 = !DILocation(line: 203, column: 18, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17366, file: !17202, line: 203, column: 3)
!17386 = !DILocation(line: 203, column: 8, scope: !17385)
!17387 = !DILocation(line: 204, column: 8, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17385, file: !17202, line: 203, column: 3)
!17389 = !DILocation(line: 204, column: 18, scope: !17388)
!17390 = !DILocation(line: 205, column: 10, scope: !17388)
!17391 = !DILocation(line: 205, column: 35, scope: !17388)
!17392 = !DILocation(line: 205, column: 22, scope: !17388)
!17393 = !DILocation(line: 205, column: 14, scope: !17388)
!17394 = !DILocation(line: 205, column: 33, scope: !17388)
!17395 = !DILocation(line: 205, column: 67, scope: !17388)
!17396 = !DILocation(line: 0, scope: !17388)
!17397 = !DILocation(line: 203, column: 3, scope: !17385)
!17398 = !DILocation(line: 206, column: 17, scope: !17388)
!17399 = !DILocation(line: 203, column: 3, scope: !17388)
!17400 = distinct !{!17400, !17397, !17401}
!17401 = !DILocation(line: 207, column: 5, scope: !17385)
!17402 = !DILocation(line: 208, column: 20, scope: !17366)
!17403 = !DILocation(line: 208, column: 28, scope: !17366)
!17404 = !DILocation(line: 208, column: 42, scope: !17366)
!17405 = !DILocation(line: 208, column: 51, scope: !17366)
!17406 = !DILocation(line: 209, column: 20, scope: !17366)
!17407 = !DILocation(line: 209, column: 29, scope: !17366)
!17408 = !DILocation(line: 208, column: 3, scope: !17366)
!17409 = !DILocation(line: 210, column: 1, scope: !17366)
!17410 = distinct !DISubprogram(name: "version_etc", scope: !17202, file: !17202, line: 227, type: !17411, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1399, retainedNodes: !216)
!17411 = !DISubroutineType(types: !17412)
!17412 = !{null, !1423, !116, !116, !116, null}
!17413 = !DILocalVariable(name: "stream", arg: 1, scope: !17410, file: !17202, line: 227, type: !1423)
!17414 = !DILocation(line: 227, column: 20, scope: !17410)
!17415 = !DILocalVariable(name: "command_name", arg: 2, scope: !17410, file: !17202, line: 228, type: !116)
!17416 = !DILocation(line: 228, column: 26, scope: !17410)
!17417 = !DILocalVariable(name: "package", arg: 3, scope: !17410, file: !17202, line: 228, type: !116)
!17418 = !DILocation(line: 228, column: 52, scope: !17410)
!17419 = !DILocalVariable(name: "version", arg: 4, scope: !17410, file: !17202, line: 229, type: !116)
!17420 = !DILocation(line: 229, column: 26, scope: !17410)
!17421 = !DILocalVariable(name: "authors", scope: !17410, file: !17202, line: 231, type: !1410)
!17422 = !DILocation(line: 231, column: 11, scope: !17410)
!17423 = !DILocation(line: 233, column: 3, scope: !17410)
!17424 = !DILocation(line: 234, column: 19, scope: !17410)
!17425 = !DILocation(line: 234, column: 27, scope: !17410)
!17426 = !DILocation(line: 234, column: 41, scope: !17410)
!17427 = !DILocation(line: 234, column: 50, scope: !17410)
!17428 = !DILocation(line: 234, column: 59, scope: !17410)
!17429 = !DILocation(line: 234, column: 3, scope: !17410)
!17430 = !DILocation(line: 235, column: 3, scope: !17410)
!17431 = !DILocation(line: 236, column: 1, scope: !17410)
!17432 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !17202, file: !17202, line: 239, type: !571, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1399, retainedNodes: !216)
!17433 = !DILocation(line: 245, column: 11, scope: !17432)
!17434 = !DILocation(line: 245, column: 3, scope: !17432)
!17435 = !DILocation(line: 251, column: 11, scope: !17432)
!17436 = !DILocation(line: 251, column: 3, scope: !17432)
!17437 = !DILocation(line: 256, column: 3, scope: !17432)
!17438 = !DILocation(line: 258, column: 1, scope: !17432)
!17439 = !DILocation(line: 37, column: 9, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !979, file: !980, line: 37, column: 7)
!17441 = !DILocation(line: 37, column: 7, scope: !979)
!17442 = !DILocalVariable(name: "can", scope: !17443, file: !980, line: 39, type: !142)
!17443 = distinct !DILexicalBlock(scope: !17440, file: !980, line: 38, column: 5)
!17444 = !DILocation(line: 39, column: 12, scope: !17443)
!17445 = !DILocation(line: 44, column: 14, scope: !17443)
!17446 = !DILocation(line: 44, column: 25, scope: !17443)
!17447 = !DILocation(line: 44, column: 11, scope: !17443)
!17448 = !DILocation(line: 46, column: 19, scope: !17443)
!17449 = !DILocation(line: 46, column: 17, scope: !17443)
!17450 = !DILocation(line: 47, column: 19, scope: !17443)
!17451 = !DILocation(line: 48, column: 5, scope: !17443)
!17452 = !DILocation(line: 50, column: 10, scope: !979)
!17453 = !DILocation(line: 50, column: 3, scope: !979)
!17454 = distinct !DISubprogram(name: "xnmalloc", scope: !17455, file: !17455, line: 99, type: !17456, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17455 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/software/coreutils-8.31")
!17456 = !DISubroutineType(types: !17457)
!17457 = !{!53, !55, !55}
!17458 = !DILocalVariable(name: "n", arg: 1, scope: !17454, file: !17455, line: 99, type: !55)
!17459 = !DILocation(line: 99, column: 18, scope: !17454)
!17460 = !DILocalVariable(name: "s", arg: 2, scope: !17454, file: !17455, line: 99, type: !55)
!17461 = !DILocation(line: 99, column: 28, scope: !17454)
!17462 = !DILocation(line: 101, column: 7, scope: !17463)
!17463 = distinct !DILexicalBlock(scope: !17454, file: !17455, line: 101, column: 7)
!17464 = !DILocation(line: 101, column: 7, scope: !17454)
!17465 = !DILocation(line: 102, column: 5, scope: !17463)
!17466 = !DILocation(line: 103, column: 19, scope: !17454)
!17467 = !DILocation(line: 103, column: 23, scope: !17454)
!17468 = !DILocation(line: 103, column: 21, scope: !17454)
!17469 = !DILocation(line: 103, column: 10, scope: !17454)
!17470 = !DILocation(line: 103, column: 3, scope: !17454)
!17471 = distinct !DISubprogram(name: "xmalloc", scope: !17472, file: !17472, line: 39, type: !17473, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17472 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17473 = !DISubroutineType(types: !17474)
!17474 = !{!53, !55}
!17475 = !DILocalVariable(name: "n", arg: 1, scope: !17471, file: !17472, line: 39, type: !55)
!17476 = !DILocation(line: 39, column: 17, scope: !17471)
!17477 = !DILocalVariable(name: "p", scope: !17471, file: !17472, line: 41, type: !53)
!17478 = !DILocation(line: 41, column: 9, scope: !17471)
!17479 = !DILocation(line: 41, column: 21, scope: !17471)
!17480 = !DILocation(line: 41, column: 13, scope: !17471)
!17481 = !DILocation(line: 42, column: 8, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17471, file: !17472, line: 42, column: 7)
!17483 = !DILocation(line: 42, column: 10, scope: !17482)
!17484 = !DILocation(line: 42, column: 13, scope: !17482)
!17485 = !DILocation(line: 42, column: 15, scope: !17482)
!17486 = !DILocation(line: 42, column: 7, scope: !17471)
!17487 = !DILocation(line: 43, column: 5, scope: !17482)
!17488 = !DILocation(line: 44, column: 10, scope: !17471)
!17489 = !DILocation(line: 44, column: 3, scope: !17471)
!17490 = distinct !DISubprogram(name: "xnrealloc", scope: !17455, file: !17455, line: 112, type: !17491, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17491 = !DISubroutineType(types: !17492)
!17492 = !{!53, !53, !55, !55}
!17493 = !DILocalVariable(name: "p", arg: 1, scope: !17490, file: !17455, line: 112, type: !53)
!17494 = !DILocation(line: 112, column: 18, scope: !17490)
!17495 = !DILocalVariable(name: "n", arg: 2, scope: !17490, file: !17455, line: 112, type: !55)
!17496 = !DILocation(line: 112, column: 28, scope: !17490)
!17497 = !DILocalVariable(name: "s", arg: 3, scope: !17490, file: !17455, line: 112, type: !55)
!17498 = !DILocation(line: 112, column: 38, scope: !17490)
!17499 = !DILocation(line: 114, column: 7, scope: !17500)
!17500 = distinct !DILexicalBlock(scope: !17490, file: !17455, line: 114, column: 7)
!17501 = !DILocation(line: 114, column: 7, scope: !17490)
!17502 = !DILocation(line: 115, column: 5, scope: !17500)
!17503 = !DILocation(line: 116, column: 20, scope: !17490)
!17504 = !DILocation(line: 116, column: 23, scope: !17490)
!17505 = !DILocation(line: 116, column: 27, scope: !17490)
!17506 = !DILocation(line: 116, column: 25, scope: !17490)
!17507 = !DILocation(line: 116, column: 10, scope: !17490)
!17508 = !DILocation(line: 116, column: 3, scope: !17490)
!17509 = distinct !DISubprogram(name: "xrealloc", scope: !17472, file: !17472, line: 51, type: !17510, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17510 = !DISubroutineType(types: !17511)
!17511 = !{!53, !53, !55}
!17512 = !DILocalVariable(name: "p", arg: 1, scope: !17509, file: !17472, line: 51, type: !53)
!17513 = !DILocation(line: 51, column: 17, scope: !17509)
!17514 = !DILocalVariable(name: "n", arg: 2, scope: !17509, file: !17472, line: 51, type: !55)
!17515 = !DILocation(line: 51, column: 27, scope: !17509)
!17516 = !DILocation(line: 53, column: 8, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17509, file: !17472, line: 53, column: 7)
!17518 = !DILocation(line: 53, column: 10, scope: !17517)
!17519 = !DILocation(line: 53, column: 13, scope: !17517)
!17520 = !DILocation(line: 53, column: 7, scope: !17509)
!17521 = !DILocation(line: 57, column: 13, scope: !17522)
!17522 = distinct !DILexicalBlock(scope: !17517, file: !17472, line: 54, column: 5)
!17523 = !DILocation(line: 57, column: 7, scope: !17522)
!17524 = !DILocation(line: 58, column: 7, scope: !17522)
!17525 = !DILocation(line: 61, column: 16, scope: !17509)
!17526 = !DILocation(line: 61, column: 19, scope: !17509)
!17527 = !DILocation(line: 61, column: 7, scope: !17509)
!17528 = !DILocation(line: 61, column: 5, scope: !17509)
!17529 = !DILocation(line: 62, column: 8, scope: !17530)
!17530 = distinct !DILexicalBlock(scope: !17509, file: !17472, line: 62, column: 7)
!17531 = !DILocation(line: 62, column: 10, scope: !17530)
!17532 = !DILocation(line: 62, column: 13, scope: !17530)
!17533 = !DILocation(line: 62, column: 7, scope: !17509)
!17534 = !DILocation(line: 63, column: 5, scope: !17530)
!17535 = !DILocation(line: 64, column: 10, scope: !17509)
!17536 = !DILocation(line: 64, column: 3, scope: !17509)
!17537 = !DILocation(line: 65, column: 1, scope: !17509)
!17538 = distinct !DISubprogram(name: "x2nrealloc", scope: !17455, file: !17455, line: 174, type: !17539, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17539 = !DISubroutineType(types: !17540)
!17540 = !{!53, !53, !9741, !55}
!17541 = !DILocalVariable(name: "p", arg: 1, scope: !17538, file: !17455, line: 174, type: !53)
!17542 = !DILocation(line: 174, column: 19, scope: !17538)
!17543 = !DILocalVariable(name: "pn", arg: 2, scope: !17538, file: !17455, line: 174, type: !9741)
!17544 = !DILocation(line: 174, column: 30, scope: !17538)
!17545 = !DILocalVariable(name: "s", arg: 3, scope: !17538, file: !17455, line: 174, type: !55)
!17546 = !DILocation(line: 174, column: 41, scope: !17538)
!17547 = !DILocalVariable(name: "n", scope: !17538, file: !17455, line: 176, type: !55)
!17548 = !DILocation(line: 176, column: 10, scope: !17538)
!17549 = !DILocation(line: 176, column: 15, scope: !17538)
!17550 = !DILocation(line: 176, column: 14, scope: !17538)
!17551 = !DILocation(line: 178, column: 9, scope: !17552)
!17552 = distinct !DILexicalBlock(scope: !17538, file: !17455, line: 178, column: 7)
!17553 = !DILocation(line: 178, column: 7, scope: !17538)
!17554 = !DILocation(line: 180, column: 13, scope: !17555)
!17555 = distinct !DILexicalBlock(scope: !17556, file: !17455, line: 180, column: 11)
!17556 = distinct !DILexicalBlock(scope: !17552, file: !17455, line: 179, column: 5)
!17557 = !DILocation(line: 180, column: 11, scope: !17556)
!17558 = !DILocation(line: 188, column: 32, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17555, file: !17455, line: 181, column: 9)
!17560 = !DILocation(line: 188, column: 30, scope: !17559)
!17561 = !DILocation(line: 188, column: 13, scope: !17559)
!17562 = !DILocation(line: 189, column: 17, scope: !17559)
!17563 = !DILocation(line: 189, column: 16, scope: !17559)
!17564 = !DILocation(line: 189, column: 13, scope: !17559)
!17565 = !DILocation(line: 190, column: 9, scope: !17559)
!17566 = !DILocation(line: 191, column: 11, scope: !17567)
!17567 = distinct !DILexicalBlock(scope: !17556, file: !17455, line: 191, column: 11)
!17568 = !DILocation(line: 191, column: 11, scope: !17556)
!17569 = !DILocation(line: 192, column: 9, scope: !17567)
!17570 = !DILocation(line: 193, column: 5, scope: !17556)
!17571 = !DILocation(line: 200, column: 71, scope: !17572)
!17572 = distinct !DILexicalBlock(scope: !17573, file: !17455, line: 200, column: 11)
!17573 = distinct !DILexicalBlock(scope: !17552, file: !17455, line: 195, column: 5)
!17574 = !DILocation(line: 200, column: 69, scope: !17572)
!17575 = !DILocation(line: 201, column: 14, scope: !17572)
!17576 = !DILocation(line: 201, column: 11, scope: !17572)
!17577 = !DILocation(line: 200, column: 11, scope: !17573)
!17578 = !DILocation(line: 202, column: 9, scope: !17572)
!17579 = !DILocation(line: 203, column: 12, scope: !17573)
!17580 = !DILocation(line: 203, column: 14, scope: !17573)
!17581 = !DILocation(line: 203, column: 18, scope: !17573)
!17582 = !DILocation(line: 203, column: 9, scope: !17573)
!17583 = !DILocation(line: 206, column: 9, scope: !17538)
!17584 = !DILocation(line: 206, column: 4, scope: !17538)
!17585 = !DILocation(line: 206, column: 7, scope: !17538)
!17586 = !DILocation(line: 207, column: 20, scope: !17538)
!17587 = !DILocation(line: 207, column: 23, scope: !17538)
!17588 = !DILocation(line: 207, column: 27, scope: !17538)
!17589 = !DILocation(line: 207, column: 25, scope: !17538)
!17590 = !DILocation(line: 207, column: 10, scope: !17538)
!17591 = !DILocation(line: 207, column: 3, scope: !17538)
!17592 = distinct !DISubprogram(name: "xcharalloc", scope: !17455, file: !17455, line: 216, type: !17593, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17593 = !DISubroutineType(types: !17594)
!17594 = !{!9, !55}
!17595 = !DILocalVariable(name: "n", arg: 1, scope: !17592, file: !17455, line: 216, type: !55)
!17596 = !DILocation(line: 216, column: 20, scope: !17592)
!17597 = !DILocation(line: 218, column: 10, scope: !17592)
!17598 = !DILocation(line: 218, column: 3, scope: !17592)
!17599 = distinct !DISubprogram(name: "x2realloc", scope: !17472, file: !17472, line: 74, type: !17600, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17600 = !DISubroutineType(types: !17601)
!17601 = !{!53, !53, !9741}
!17602 = !DILocalVariable(name: "p", arg: 1, scope: !17599, file: !17472, line: 74, type: !53)
!17603 = !DILocation(line: 74, column: 18, scope: !17599)
!17604 = !DILocalVariable(name: "pn", arg: 2, scope: !17599, file: !17472, line: 74, type: !9741)
!17605 = !DILocation(line: 74, column: 29, scope: !17599)
!17606 = !DILocation(line: 76, column: 22, scope: !17599)
!17607 = !DILocation(line: 76, column: 25, scope: !17599)
!17608 = !DILocation(line: 76, column: 10, scope: !17599)
!17609 = !DILocation(line: 76, column: 3, scope: !17599)
!17610 = distinct !DISubprogram(name: "xzalloc", scope: !17472, file: !17472, line: 84, type: !17473, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17611 = !DILocalVariable(name: "s", arg: 1, scope: !17610, file: !17472, line: 84, type: !55)
!17612 = !DILocation(line: 84, column: 17, scope: !17610)
!17613 = !DILocation(line: 86, column: 27, scope: !17610)
!17614 = !DILocation(line: 86, column: 18, scope: !17610)
!17615 = !DILocation(line: 86, column: 34, scope: !17610)
!17616 = !DILocation(line: 86, column: 10, scope: !17610)
!17617 = !DILocation(line: 86, column: 3, scope: !17610)
!17618 = distinct !DISubprogram(name: "xcalloc", scope: !17472, file: !17472, line: 93, type: !17456, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17619 = !DILocalVariable(name: "n", arg: 1, scope: !17618, file: !17472, line: 93, type: !55)
!17620 = !DILocation(line: 93, column: 17, scope: !17618)
!17621 = !DILocalVariable(name: "s", arg: 2, scope: !17618, file: !17472, line: 93, type: !55)
!17622 = !DILocation(line: 93, column: 27, scope: !17618)
!17623 = !DILocalVariable(name: "p", scope: !17618, file: !17472, line: 95, type: !53)
!17624 = !DILocation(line: 95, column: 9, scope: !17618)
!17625 = !DILocation(line: 100, column: 7, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17618, file: !17472, line: 100, column: 7)
!17627 = !DILocation(line: 101, column: 7, scope: !17626)
!17628 = !DILocation(line: 101, column: 26, scope: !17626)
!17629 = !DILocation(line: 101, column: 29, scope: !17626)
!17630 = !DILocation(line: 101, column: 18, scope: !17626)
!17631 = !DILocation(line: 101, column: 16, scope: !17626)
!17632 = !DILocation(line: 100, column: 7, scope: !17618)
!17633 = !DILocation(line: 102, column: 5, scope: !17626)
!17634 = !DILocation(line: 103, column: 10, scope: !17618)
!17635 = !DILocation(line: 103, column: 3, scope: !17618)
!17636 = distinct !DISubprogram(name: "xmemdup", scope: !17472, file: !17472, line: 111, type: !7552, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17637 = !DILocalVariable(name: "p", arg: 1, scope: !17636, file: !17472, line: 111, type: !709)
!17638 = !DILocation(line: 111, column: 22, scope: !17636)
!17639 = !DILocalVariable(name: "s", arg: 2, scope: !17636, file: !17472, line: 111, type: !55)
!17640 = !DILocation(line: 111, column: 32, scope: !17636)
!17641 = !DILocation(line: 113, column: 27, scope: !17636)
!17642 = !DILocation(line: 113, column: 18, scope: !17636)
!17643 = !DILocation(line: 113, column: 31, scope: !17636)
!17644 = !DILocation(line: 113, column: 34, scope: !17636)
!17645 = !DILocation(line: 113, column: 10, scope: !17636)
!17646 = !DILocation(line: 113, column: 3, scope: !17636)
!17647 = distinct !DISubprogram(name: "xstrdup", scope: !17472, file: !17472, line: 119, type: !10123, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !216)
!17648 = !DILocalVariable(name: "string", arg: 1, scope: !17647, file: !17472, line: 119, type: !116)
!17649 = !DILocation(line: 119, column: 22, scope: !17647)
!17650 = !DILocation(line: 121, column: 19, scope: !17647)
!17651 = !DILocation(line: 121, column: 35, scope: !17647)
!17652 = !DILocation(line: 121, column: 27, scope: !17647)
!17653 = !DILocation(line: 121, column: 43, scope: !17647)
!17654 = !DILocation(line: 121, column: 10, scope: !17647)
!17655 = !DILocation(line: 121, column: 3, scope: !17647)
!17656 = distinct !DISubprogram(name: "xalloc_die", scope: !17657, file: !17657, line: 32, type: !571, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1460, retainedNodes: !216)
!17657 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17658 = !DILocation(line: 34, column: 10, scope: !17656)
!17659 = !DILocation(line: 34, column: 33, scope: !17656)
!17660 = !DILocation(line: 34, column: 3, scope: !17656)
!17661 = !DILocation(line: 40, column: 3, scope: !17656)
!17662 = distinct !DISubprogram(name: "xfts_open", scope: !17663, file: !17663, line: 33, type: !17664, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1463, retainedNodes: !216)
!17663 = !DIFile(filename: "lib/xfts.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17664 = !DISubroutineType(types: !17665)
!17665 = !{!1466, !2815, !7, !17666}
!17666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17667, size: 64)
!17667 = !DISubroutineType(types: !17668)
!17668 = !{!7, !17669, !17669}
!17669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17670, size: 64)
!17670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!17671 = !DILocalVariable(name: "argv", arg: 1, scope: !17662, file: !17663, line: 33, type: !2815)
!17672 = !DILocation(line: 33, column: 26, scope: !17662)
!17673 = !DILocalVariable(name: "options", arg: 2, scope: !17662, file: !17663, line: 33, type: !7)
!17674 = !DILocation(line: 33, column: 36, scope: !17662)
!17675 = !DILocalVariable(name: "compar", arg: 3, scope: !17662, file: !17663, line: 34, type: !17666)
!17676 = !DILocation(line: 34, column: 18, scope: !17662)
!17677 = !DILocalVariable(name: "fts", scope: !17662, file: !17663, line: 36, type: !1466)
!17678 = !DILocation(line: 36, column: 8, scope: !17662)
!17679 = !DILocation(line: 36, column: 24, scope: !17662)
!17680 = !DILocation(line: 36, column: 30, scope: !17662)
!17681 = !DILocation(line: 36, column: 38, scope: !17662)
!17682 = !DILocation(line: 36, column: 51, scope: !17662)
!17683 = !DILocation(line: 36, column: 14, scope: !17662)
!17684 = !DILocation(line: 37, column: 7, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17662, file: !17663, line: 37, column: 7)
!17686 = !DILocation(line: 37, column: 11, scope: !17685)
!17687 = !DILocation(line: 37, column: 7, scope: !17662)
!17688 = !DILocation(line: 41, column: 7, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17690, file: !17663, line: 41, column: 7)
!17690 = distinct !DILexicalBlock(scope: !17691, file: !17663, line: 41, column: 7)
!17691 = distinct !DILexicalBlock(scope: !17685, file: !17663, line: 38, column: 5)
!17692 = !DILocation(line: 41, column: 7, scope: !17690)
!17693 = !DILocation(line: 42, column: 7, scope: !17691)
!17694 = !DILocation(line: 45, column: 10, scope: !17662)
!17695 = !DILocation(line: 45, column: 3, scope: !17662)
!17696 = distinct !DISubprogram(name: "cycle_warning_required", scope: !17663, file: !17663, line: 56, type: !17697, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1463, retainedNodes: !216)
!17697 = !DISubroutineType(types: !17698)
!17698 = !{!142, !17699, !17670}
!17699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!17700 = !DILocalVariable(name: "fts", arg: 1, scope: !17696, file: !17663, line: 56, type: !17699)
!17701 = !DILocation(line: 56, column: 36, scope: !17696)
!17702 = !DILocalVariable(name: "ent", arg: 2, scope: !17696, file: !17663, line: 56, type: !17670)
!17703 = !DILocation(line: 56, column: 55, scope: !17696)
!17704 = !DILocation(line: 62, column: 12, scope: !17696)
!17705 = !DILocation(line: 62, column: 38, scope: !17696)
!17706 = !DILocation(line: 62, column: 42, scope: !17696)
!17707 = !DILocation(line: 63, column: 11, scope: !17696)
!17708 = !DILocation(line: 63, column: 15, scope: !17696)
!17709 = !DILocation(line: 63, column: 41, scope: !17696)
!17710 = !DILocation(line: 63, column: 44, scope: !17696)
!17711 = !DILocation(line: 64, column: 15, scope: !17696)
!17712 = !DILocation(line: 64, column: 18, scope: !17696)
!17713 = !DILocation(line: 64, column: 23, scope: !17696)
!17714 = !DILocation(line: 64, column: 33, scope: !17696)
!17715 = !DILocation(line: 0, scope: !17696)
!17716 = !DILocation(line: 62, column: 3, scope: !17696)
!17717 = distinct !DISubprogram(name: "xvasprintf", scope: !17718, file: !17718, line: 76, type: !17719, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1554, retainedNodes: !216)
!17718 = !DIFile(filename: "lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17719 = !DISubroutineType(types: !17720)
!17720 = !{!9, !116, !17721}
!17721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!17722 = !DILocalVariable(name: "format", arg: 1, scope: !17717, file: !17718, line: 76, type: !116)
!17723 = !DILocation(line: 76, column: 25, scope: !17717)
!17724 = !DILocalVariable(name: "args", arg: 2, scope: !17717, file: !17718, line: 76, type: !17721)
!17725 = !DILocation(line: 76, column: 41, scope: !17717)
!17726 = !DILocalVariable(name: "result", scope: !17717, file: !17718, line: 78, type: !9)
!17727 = !DILocation(line: 78, column: 9, scope: !17717)
!17728 = !DILocalVariable(name: "argcount", scope: !17729, file: !17718, line: 84, type: !55)
!17729 = distinct !DILexicalBlock(scope: !17717, file: !17718, line: 83, column: 3)
!17730 = !DILocation(line: 84, column: 12, scope: !17729)
!17731 = !DILocalVariable(name: "f", scope: !17729, file: !17718, line: 85, type: !116)
!17732 = !DILocation(line: 85, column: 17, scope: !17729)
!17733 = !DILocation(line: 87, column: 14, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17729, file: !17718, line: 87, column: 5)
!17735 = !DILocation(line: 87, column: 12, scope: !17734)
!17736 = !DILocation(line: 87, column: 10, scope: !17734)
!17737 = !DILocation(line: 89, column: 14, scope: !17738)
!17738 = distinct !DILexicalBlock(scope: !17739, file: !17718, line: 89, column: 13)
!17739 = distinct !DILexicalBlock(scope: !17740, file: !17718, line: 88, column: 7)
!17740 = distinct !DILexicalBlock(scope: !17734, file: !17718, line: 87, column: 5)
!17741 = !DILocation(line: 89, column: 13, scope: !17738)
!17742 = !DILocation(line: 89, column: 16, scope: !17738)
!17743 = !DILocation(line: 89, column: 13, scope: !17739)
!17744 = !DILocation(line: 91, column: 27, scope: !17738)
!17745 = !DILocation(line: 91, column: 37, scope: !17738)
!17746 = !DILocation(line: 91, column: 18, scope: !17738)
!17747 = !DILocation(line: 91, column: 11, scope: !17738)
!17748 = !DILocation(line: 92, column: 14, scope: !17749)
!17749 = distinct !DILexicalBlock(scope: !17739, file: !17718, line: 92, column: 13)
!17750 = !DILocation(line: 92, column: 13, scope: !17749)
!17751 = !DILocation(line: 92, column: 16, scope: !17749)
!17752 = !DILocation(line: 92, column: 13, scope: !17739)
!17753 = !DILocation(line: 93, column: 11, scope: !17749)
!17754 = !DILocation(line: 94, column: 10, scope: !17739)
!17755 = !DILocation(line: 95, column: 14, scope: !17756)
!17756 = distinct !DILexicalBlock(scope: !17739, file: !17718, line: 95, column: 13)
!17757 = !DILocation(line: 95, column: 13, scope: !17756)
!17758 = !DILocation(line: 95, column: 16, scope: !17756)
!17759 = !DILocation(line: 95, column: 13, scope: !17739)
!17760 = !DILocation(line: 96, column: 11, scope: !17756)
!17761 = !DILocation(line: 97, column: 10, scope: !17739)
!17762 = !DILocation(line: 98, column: 17, scope: !17739)
!17763 = !DILocation(line: 87, column: 5, scope: !17740)
!17764 = distinct !{!17764, !17765, !17766}
!17765 = !DILocation(line: 87, column: 5, scope: !17734)
!17766 = !DILocation(line: 99, column: 7, scope: !17734)
!17767 = !DILocation(line: 102, column: 27, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17717, file: !17718, line: 102, column: 7)
!17769 = !DILocation(line: 102, column: 35, scope: !17768)
!17770 = !DILocation(line: 102, column: 7, scope: !17768)
!17771 = !DILocation(line: 102, column: 41, scope: !17768)
!17772 = !DILocation(line: 102, column: 7, scope: !17717)
!17773 = !DILocation(line: 104, column: 11, scope: !17774)
!17774 = distinct !DILexicalBlock(scope: !17775, file: !17718, line: 104, column: 11)
!17775 = distinct !DILexicalBlock(scope: !17768, file: !17718, line: 103, column: 5)
!17776 = !DILocation(line: 104, column: 17, scope: !17774)
!17777 = !DILocation(line: 104, column: 11, scope: !17775)
!17778 = !DILocation(line: 105, column: 9, scope: !17774)
!17779 = !DILocation(line: 106, column: 7, scope: !17775)
!17780 = !DILocation(line: 109, column: 10, scope: !17717)
!17781 = !DILocation(line: 109, column: 3, scope: !17717)
!17782 = !DILocation(line: 110, column: 1, scope: !17717)
!17783 = distinct !DISubprogram(name: "xstrcat", scope: !17718, file: !17718, line: 33, type: !17784, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1554, retainedNodes: !216)
!17784 = !DISubroutineType(types: !17785)
!17785 = !{!9, !55, !17721}
!17786 = !DILocalVariable(name: "argcount", arg: 1, scope: !17783, file: !17718, line: 33, type: !55)
!17787 = !DILocation(line: 33, column: 17, scope: !17783)
!17788 = !DILocalVariable(name: "args", arg: 2, scope: !17783, file: !17718, line: 33, type: !17721)
!17789 = !DILocation(line: 33, column: 35, scope: !17783)
!17790 = !DILocalVariable(name: "result", scope: !17783, file: !17718, line: 35, type: !9)
!17791 = !DILocation(line: 35, column: 9, scope: !17783)
!17792 = !DILocalVariable(name: "ap", scope: !17783, file: !17718, line: 36, type: !1557)
!17793 = !DILocation(line: 36, column: 11, scope: !17783)
!17794 = !DILocalVariable(name: "totalsize", scope: !17783, file: !17718, line: 37, type: !55)
!17795 = !DILocation(line: 37, column: 10, scope: !17783)
!17796 = !DILocalVariable(name: "i", scope: !17783, file: !17718, line: 38, type: !55)
!17797 = !DILocation(line: 38, column: 10, scope: !17783)
!17798 = !DILocalVariable(name: "p", scope: !17783, file: !17718, line: 39, type: !9)
!17799 = !DILocation(line: 39, column: 9, scope: !17783)
!17800 = !DILocation(line: 42, column: 13, scope: !17783)
!17801 = !DILocation(line: 43, column: 3, scope: !17783)
!17802 = !DILocation(line: 44, column: 12, scope: !17803)
!17803 = distinct !DILexicalBlock(scope: !17783, file: !17718, line: 44, column: 3)
!17804 = !DILocation(line: 44, column: 10, scope: !17803)
!17805 = !DILocation(line: 44, column: 8, scope: !17803)
!17806 = !DILocation(line: 44, column: 22, scope: !17807)
!17807 = distinct !DILexicalBlock(scope: !17803, file: !17718, line: 44, column: 3)
!17808 = !DILocation(line: 44, column: 24, scope: !17807)
!17809 = !DILocation(line: 44, column: 3, scope: !17803)
!17810 = !DILocalVariable(name: "next", scope: !17811, file: !17718, line: 46, type: !116)
!17811 = distinct !DILexicalBlock(scope: !17807, file: !17718, line: 45, column: 5)
!17812 = !DILocation(line: 46, column: 19, scope: !17811)
!17813 = !DILocation(line: 46, column: 26, scope: !17811)
!17814 = !DILocation(line: 47, column: 25, scope: !17811)
!17815 = !DILocation(line: 47, column: 44, scope: !17811)
!17816 = !DILocation(line: 47, column: 36, scope: !17811)
!17817 = !DILocation(line: 47, column: 19, scope: !17811)
!17818 = !DILocation(line: 47, column: 17, scope: !17811)
!17819 = !DILocation(line: 48, column: 5, scope: !17811)
!17820 = !DILocation(line: 44, column: 30, scope: !17807)
!17821 = !DILocation(line: 44, column: 3, scope: !17807)
!17822 = distinct !{!17822, !17809, !17823}
!17823 = !DILocation(line: 48, column: 5, scope: !17803)
!17824 = !DILocation(line: 49, column: 3, scope: !17783)
!17825 = !DILocation(line: 54, column: 7, scope: !17826)
!17826 = distinct !DILexicalBlock(scope: !17783, file: !17718, line: 54, column: 7)
!17827 = !DILocation(line: 54, column: 17, scope: !17826)
!17828 = !DILocation(line: 54, column: 29, scope: !17826)
!17829 = !DILocation(line: 54, column: 32, scope: !17826)
!17830 = !DILocation(line: 54, column: 42, scope: !17826)
!17831 = !DILocation(line: 54, column: 7, scope: !17783)
!17832 = !DILocation(line: 56, column: 7, scope: !17833)
!17833 = distinct !DILexicalBlock(scope: !17826, file: !17718, line: 55, column: 5)
!17834 = !DILocation(line: 56, column: 13, scope: !17833)
!17835 = !DILocation(line: 57, column: 7, scope: !17833)
!17836 = !DILocation(line: 61, column: 12, scope: !17783)
!17837 = !DILocation(line: 61, column: 10, scope: !17783)
!17838 = !DILocation(line: 62, column: 7, scope: !17783)
!17839 = !DILocation(line: 62, column: 5, scope: !17783)
!17840 = !DILocation(line: 63, column: 12, scope: !17841)
!17841 = distinct !DILexicalBlock(scope: !17783, file: !17718, line: 63, column: 3)
!17842 = !DILocation(line: 63, column: 10, scope: !17841)
!17843 = !DILocation(line: 63, column: 8, scope: !17841)
!17844 = !DILocation(line: 63, column: 22, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17841, file: !17718, line: 63, column: 3)
!17846 = !DILocation(line: 63, column: 24, scope: !17845)
!17847 = !DILocation(line: 63, column: 3, scope: !17841)
!17848 = !DILocalVariable(name: "next", scope: !17849, file: !17718, line: 65, type: !116)
!17849 = distinct !DILexicalBlock(scope: !17845, file: !17718, line: 64, column: 5)
!17850 = !DILocation(line: 65, column: 19, scope: !17849)
!17851 = !DILocation(line: 65, column: 26, scope: !17849)
!17852 = !DILocalVariable(name: "len", scope: !17849, file: !17718, line: 66, type: !55)
!17853 = !DILocation(line: 66, column: 14, scope: !17849)
!17854 = !DILocation(line: 66, column: 28, scope: !17849)
!17855 = !DILocation(line: 66, column: 20, scope: !17849)
!17856 = !DILocation(line: 67, column: 15, scope: !17849)
!17857 = !DILocation(line: 67, column: 18, scope: !17849)
!17858 = !DILocation(line: 67, column: 24, scope: !17849)
!17859 = !DILocation(line: 67, column: 7, scope: !17849)
!17860 = !DILocation(line: 68, column: 12, scope: !17849)
!17861 = !DILocation(line: 68, column: 9, scope: !17849)
!17862 = !DILocation(line: 69, column: 5, scope: !17849)
!17863 = !DILocation(line: 63, column: 30, scope: !17845)
!17864 = !DILocation(line: 63, column: 3, scope: !17845)
!17865 = distinct !{!17865, !17847, !17866}
!17866 = !DILocation(line: 69, column: 5, scope: !17841)
!17867 = !DILocation(line: 70, column: 4, scope: !17783)
!17868 = !DILocation(line: 70, column: 6, scope: !17783)
!17869 = !DILocation(line: 72, column: 10, scope: !17783)
!17870 = !DILocation(line: 72, column: 3, scope: !17783)
!17871 = !DILocation(line: 73, column: 1, scope: !17783)
!17872 = distinct !DISubprogram(name: "yesno", scope: !17873, file: !17873, line: 32, type: !981, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1567, retainedNodes: !216)
!17873 = !DIFile(filename: "lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17874 = !DILocalVariable(name: "yes", scope: !17872, file: !17873, line: 34, type: !142)
!17875 = !DILocation(line: 34, column: 8, scope: !17872)
!17876 = !DILocalVariable(name: "response", scope: !17872, file: !17873, line: 37, type: !9)
!17877 = !DILocation(line: 37, column: 9, scope: !17872)
!17878 = !DILocalVariable(name: "response_size", scope: !17872, file: !17873, line: 38, type: !55)
!17879 = !DILocation(line: 38, column: 10, scope: !17872)
!17880 = !DILocalVariable(name: "response_len", scope: !17872, file: !17873, line: 39, type: !540)
!17881 = !DILocation(line: 39, column: 11, scope: !17872)
!17882 = !DILocation(line: 39, column: 62, scope: !17872)
!17883 = !DILocation(line: 39, column: 26, scope: !17872)
!17884 = !DILocation(line: 41, column: 7, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17872, file: !17873, line: 41, column: 7)
!17886 = !DILocation(line: 41, column: 20, scope: !17885)
!17887 = !DILocation(line: 41, column: 7, scope: !17872)
!17888 = !DILocation(line: 42, column: 9, scope: !17885)
!17889 = !DILocation(line: 42, column: 5, scope: !17885)
!17890 = !DILocation(line: 47, column: 11, scope: !17891)
!17891 = distinct !DILexicalBlock(scope: !17892, file: !17873, line: 47, column: 11)
!17892 = distinct !DILexicalBlock(scope: !17885, file: !17873, line: 44, column: 5)
!17893 = !DILocation(line: 47, column: 20, scope: !17891)
!17894 = !DILocation(line: 47, column: 33, scope: !17891)
!17895 = !DILocation(line: 47, column: 38, scope: !17891)
!17896 = !DILocation(line: 47, column: 11, scope: !17892)
!17897 = !DILocation(line: 48, column: 9, scope: !17891)
!17898 = !DILocation(line: 48, column: 18, scope: !17891)
!17899 = !DILocation(line: 48, column: 31, scope: !17891)
!17900 = !DILocation(line: 48, column: 36, scope: !17891)
!17901 = !DILocation(line: 49, column: 27, scope: !17892)
!17902 = !DILocation(line: 49, column: 18, scope: !17892)
!17903 = !DILocation(line: 49, column: 16, scope: !17892)
!17904 = !DILocation(line: 49, column: 11, scope: !17892)
!17905 = !DILocation(line: 52, column: 9, scope: !17872)
!17906 = !DILocation(line: 52, column: 3, scope: !17872)
!17907 = !DILocation(line: 62, column: 10, scope: !17872)
!17908 = !DILocation(line: 62, column: 3, scope: !17872)
!17909 = distinct !DISubprogram(name: "rpl_fflush", scope: !17910, file: !17910, line: 129, type: !17911, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1604, retainedNodes: !216)
!17910 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17911 = !DISubroutineType(types: !17912)
!17912 = !{!7, !17913}
!17913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!17914 = !DILocalVariable(name: "stream", arg: 1, scope: !17909, file: !17910, line: 129, type: !17913)
!17915 = !DILocation(line: 129, column: 19, scope: !17909)
!17916 = !DILocation(line: 150, column: 7, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17909, file: !17910, line: 150, column: 7)
!17918 = !DILocation(line: 150, column: 14, scope: !17917)
!17919 = !DILocation(line: 150, column: 22, scope: !17917)
!17920 = !DILocation(line: 150, column: 27, scope: !17917)
!17921 = !DILocation(line: 150, column: 7, scope: !17909)
!17922 = !DILocation(line: 151, column: 20, scope: !17917)
!17923 = !DILocation(line: 151, column: 12, scope: !17917)
!17924 = !DILocation(line: 151, column: 5, scope: !17917)
!17925 = !DILocation(line: 156, column: 44, scope: !17909)
!17926 = !DILocation(line: 156, column: 3, scope: !17909)
!17927 = !DILocation(line: 158, column: 18, scope: !17909)
!17928 = !DILocation(line: 158, column: 10, scope: !17909)
!17929 = !DILocation(line: 158, column: 3, scope: !17909)
!17930 = !DILocation(line: 232, column: 1, scope: !17909)
!17931 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !17910, file: !17910, line: 41, type: !17932, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1604, retainedNodes: !216)
!17932 = !DISubroutineType(types: !17933)
!17933 = !{null, !17913}
!17934 = !DILocalVariable(name: "fp", arg: 1, scope: !17931, file: !17910, line: 41, type: !17913)
!17935 = !DILocation(line: 41, column: 48, scope: !17931)
!17936 = !DILocation(line: 43, column: 7, scope: !17937)
!17937 = distinct !DILexicalBlock(scope: !17931, file: !17910, line: 43, column: 7)
!17938 = !DILocation(line: 43, column: 11, scope: !17937)
!17939 = !DILocation(line: 43, column: 18, scope: !17937)
!17940 = !DILocation(line: 43, column: 7, scope: !17931)
!17941 = !DILocation(line: 45, column: 13, scope: !17937)
!17942 = !DILocation(line: 45, column: 5, scope: !17937)
!17943 = !DILocation(line: 46, column: 1, scope: !17931)
!17944 = distinct !DISubprogram(name: "freadahead", scope: !17945, file: !17945, line: 34, type: !17946, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1640, retainedNodes: !216)
!17945 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17946 = !DISubroutineType(types: !17947)
!17947 = !{!55, !17948}
!17948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!17949 = !DILocalVariable(name: "fp", arg: 1, scope: !17944, file: !17945, line: 34, type: !17948)
!17950 = !DILocation(line: 34, column: 19, scope: !17944)
!17951 = !DILocation(line: 38, column: 7, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !17944, file: !17945, line: 38, column: 7)
!17953 = !DILocation(line: 38, column: 11, scope: !17952)
!17954 = !DILocation(line: 38, column: 27, scope: !17952)
!17955 = !DILocation(line: 38, column: 31, scope: !17952)
!17956 = !DILocation(line: 38, column: 25, scope: !17952)
!17957 = !DILocation(line: 38, column: 7, scope: !17944)
!17958 = !DILocation(line: 39, column: 5, scope: !17952)
!17959 = !DILocation(line: 40, column: 11, scope: !17944)
!17960 = !DILocation(line: 40, column: 15, scope: !17944)
!17961 = !DILocation(line: 40, column: 30, scope: !17944)
!17962 = !DILocation(line: 40, column: 34, scope: !17944)
!17963 = !DILocation(line: 40, column: 28, scope: !17944)
!17964 = !DILocation(line: 41, column: 13, scope: !17944)
!17965 = !DILocation(line: 41, column: 17, scope: !17944)
!17966 = !DILocation(line: 41, column: 24, scope: !17944)
!17967 = !DILocation(line: 41, column: 42, scope: !17944)
!17968 = !DILocation(line: 41, column: 46, scope: !17944)
!17969 = !DILocation(line: 41, column: 61, scope: !17944)
!17970 = !DILocation(line: 41, column: 65, scope: !17944)
!17971 = !DILocation(line: 41, column: 59, scope: !17944)
!17972 = !DILocation(line: 41, column: 10, scope: !17944)
!17973 = !DILocation(line: 40, column: 3, scope: !17944)
!17974 = !DILocation(line: 103, column: 1, scope: !17944)
!17975 = distinct !DISubprogram(name: "rpl_fseeko", scope: !17976, file: !17976, line: 28, type: !17977, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1676, retainedNodes: !216)
!17976 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17977 = !DISubroutineType(types: !17978)
!17978 = !{!7, !17979, !295, !7}
!17979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!17980 = !DILocalVariable(name: "fp", arg: 1, scope: !17975, file: !17976, line: 28, type: !17979)
!17981 = !DILocation(line: 28, column: 15, scope: !17975)
!17982 = !DILocalVariable(name: "offset", arg: 2, scope: !17975, file: !17976, line: 28, type: !295)
!17983 = !DILocation(line: 28, column: 25, scope: !17975)
!17984 = !DILocalVariable(name: "whence", arg: 3, scope: !17975, file: !17976, line: 28, type: !7)
!17985 = !DILocation(line: 28, column: 37, scope: !17975)
!17986 = !DILocation(line: 52, column: 7, scope: !17987)
!17987 = distinct !DILexicalBlock(scope: !17975, file: !17976, line: 52, column: 7)
!17988 = !DILocation(line: 52, column: 11, scope: !17987)
!17989 = !DILocation(line: 52, column: 27, scope: !17987)
!17990 = !DILocation(line: 52, column: 31, scope: !17987)
!17991 = !DILocation(line: 52, column: 24, scope: !17987)
!17992 = !DILocation(line: 53, column: 7, scope: !17987)
!17993 = !DILocation(line: 53, column: 10, scope: !17987)
!17994 = !DILocation(line: 53, column: 14, scope: !17987)
!17995 = !DILocation(line: 53, column: 31, scope: !17987)
!17996 = !DILocation(line: 53, column: 35, scope: !17987)
!17997 = !DILocation(line: 53, column: 28, scope: !17987)
!17998 = !DILocation(line: 54, column: 7, scope: !17987)
!17999 = !DILocation(line: 54, column: 10, scope: !17987)
!18000 = !DILocation(line: 54, column: 14, scope: !17987)
!18001 = !DILocation(line: 54, column: 28, scope: !17987)
!18002 = !DILocation(line: 52, column: 7, scope: !17975)
!18003 = !DILocalVariable(name: "pos", scope: !18004, file: !17976, line: 117, type: !295)
!18004 = distinct !DILexicalBlock(scope: !17987, file: !17976, line: 113, column: 5)
!18005 = !DILocation(line: 117, column: 13, scope: !18004)
!18006 = !DILocation(line: 117, column: 34, scope: !18004)
!18007 = !DILocation(line: 117, column: 26, scope: !18004)
!18008 = !DILocation(line: 117, column: 39, scope: !18004)
!18009 = !DILocation(line: 117, column: 47, scope: !18004)
!18010 = !DILocation(line: 117, column: 19, scope: !18004)
!18011 = !DILocation(line: 118, column: 11, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !18004, file: !17976, line: 118, column: 11)
!18013 = !DILocation(line: 118, column: 15, scope: !18012)
!18014 = !DILocation(line: 118, column: 11, scope: !18004)
!18015 = !DILocation(line: 124, column: 11, scope: !18016)
!18016 = distinct !DILexicalBlock(scope: !18012, file: !17976, line: 119, column: 9)
!18017 = !DILocation(line: 129, column: 7, scope: !18004)
!18018 = !DILocation(line: 129, column: 11, scope: !18004)
!18019 = !DILocation(line: 129, column: 18, scope: !18004)
!18020 = !DILocation(line: 130, column: 21, scope: !18004)
!18021 = !DILocation(line: 130, column: 7, scope: !18004)
!18022 = !DILocation(line: 130, column: 11, scope: !18004)
!18023 = !DILocation(line: 130, column: 19, scope: !18004)
!18024 = !DILocation(line: 161, column: 7, scope: !18004)
!18025 = !DILocation(line: 163, column: 18, scope: !17975)
!18026 = !DILocation(line: 163, column: 22, scope: !17975)
!18027 = !DILocation(line: 163, column: 30, scope: !17975)
!18028 = !DILocation(line: 163, column: 10, scope: !17975)
!18029 = !DILocation(line: 163, column: 3, scope: !17975)
!18030 = !DILocation(line: 164, column: 1, scope: !17975)
!18031 = distinct !DISubprogram(name: "rpl_fts_open", scope: !1716, file: !1716, line: 358, type: !18032, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18032 = !DISubroutineType(types: !18033)
!18033 = !{!1741, !2815, !7, !18034}
!18034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18035, size: 64)
!18035 = !DISubroutineType(types: !18036)
!18036 = !{!7, !1722, !1722}
!18037 = !DILocalVariable(name: "argv", arg: 1, scope: !18031, file: !1716, line: 358, type: !2815)
!18038 = !DILocation(line: 358, column: 25, scope: !18031)
!18039 = !DILocalVariable(name: "options", arg: 2, scope: !18031, file: !1716, line: 359, type: !7)
!18040 = !DILocation(line: 359, column: 24, scope: !18031)
!18041 = !DILocalVariable(name: "compar", arg: 3, scope: !18031, file: !1716, line: 360, type: !18034)
!18042 = !DILocation(line: 360, column: 17, scope: !18031)
!18043 = !DILocalVariable(name: "sp", scope: !18031, file: !1716, line: 362, type: !1741)
!18044 = !DILocation(line: 362, column: 23, scope: !18031)
!18045 = !DILocalVariable(name: "p", scope: !18031, file: !1716, line: 363, type: !1819)
!18046 = !DILocation(line: 363, column: 26, scope: !18031)
!18047 = !DILocalVariable(name: "root", scope: !18031, file: !1716, line: 363, type: !1819)
!18048 = !DILocation(line: 363, column: 30, scope: !18031)
!18049 = !DILocalVariable(name: "nitems", scope: !18031, file: !1716, line: 364, type: !55)
!18050 = !DILocation(line: 364, column: 25, scope: !18031)
!18051 = !DILocalVariable(name: "parent", scope: !18031, file: !1716, line: 365, type: !1819)
!18052 = !DILocation(line: 365, column: 17, scope: !18031)
!18053 = !DILocalVariable(name: "tmp", scope: !18031, file: !1716, line: 366, type: !1819)
!18054 = !DILocation(line: 366, column: 17, scope: !18031)
!18055 = !DILocalVariable(name: "defer_stat", scope: !18031, file: !1716, line: 367, type: !142)
!18056 = !DILocation(line: 367, column: 14, scope: !18031)
!18057 = !DILocation(line: 370, column: 13, scope: !18058)
!18058 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 370, column: 13)
!18059 = !DILocation(line: 370, column: 21, scope: !18058)
!18060 = !DILocation(line: 370, column: 13, scope: !18031)
!18061 = !DILocation(line: 371, column: 17, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !18058, file: !1716, line: 370, column: 40)
!18063 = !DILocation(line: 372, column: 17, scope: !18062)
!18064 = !DILocation(line: 374, column: 14, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 374, column: 13)
!18066 = !DILocation(line: 374, column: 22, scope: !18065)
!18067 = !DILocation(line: 374, column: 37, scope: !18065)
!18068 = !DILocation(line: 374, column: 41, scope: !18065)
!18069 = !DILocation(line: 374, column: 49, scope: !18065)
!18070 = !DILocation(line: 374, column: 13, scope: !18031)
!18071 = !DILocation(line: 375, column: 17, scope: !18072)
!18072 = distinct !DILexicalBlock(scope: !18065, file: !1716, line: 374, column: 63)
!18073 = !DILocation(line: 376, column: 17, scope: !18072)
!18074 = !DILocation(line: 378, column: 17, scope: !18075)
!18075 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 378, column: 14)
!18076 = !DILocation(line: 378, column: 25, scope: !18075)
!18077 = !DILocation(line: 378, column: 14, scope: !18031)
!18078 = !DILocation(line: 379, column: 17, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18075, file: !1716, line: 378, column: 58)
!18080 = !DILocation(line: 380, column: 17, scope: !18079)
!18081 = !DILocation(line: 384, column: 19, scope: !18082)
!18082 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 384, column: 13)
!18083 = !DILocation(line: 384, column: 17, scope: !18082)
!18084 = !DILocation(line: 384, column: 40, scope: !18082)
!18085 = !DILocation(line: 384, column: 13, scope: !18031)
!18086 = !DILocation(line: 385, column: 17, scope: !18082)
!18087 = !DILocation(line: 386, column: 16, scope: !18031)
!18088 = !DILocation(line: 386, column: 9, scope: !18031)
!18089 = !DILocation(line: 387, column: 26, scope: !18031)
!18090 = !DILocation(line: 387, column: 9, scope: !18031)
!18091 = !DILocation(line: 387, column: 13, scope: !18031)
!18092 = !DILocation(line: 387, column: 24, scope: !18031)
!18093 = !DILocation(line: 388, column: 27, scope: !18031)
!18094 = !DILocation(line: 388, column: 9, scope: !18031)
!18095 = !DILocation(line: 388, column: 13, scope: !18031)
!18096 = !DILocation(line: 388, column: 25, scope: !18031)
!18097 = !DILocation(line: 391, column: 13, scope: !18098)
!18098 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 391, column: 13)
!18099 = !DILocation(line: 391, column: 13, scope: !18031)
!18100 = !DILocation(line: 392, column: 17, scope: !18101)
!18101 = distinct !DILexicalBlock(scope: !18098, file: !1716, line: 391, column: 33)
!18102 = !DILocation(line: 393, column: 17, scope: !18101)
!18103 = !DILocation(line: 394, column: 9, scope: !18101)
!18104 = !DILocation(line: 397, column: 9, scope: !18031)
!18105 = !DILocation(line: 397, column: 13, scope: !18031)
!18106 = !DILocation(line: 397, column: 24, scope: !18031)
!18107 = !DILocation(line: 398, column: 14, scope: !18108)
!18108 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 398, column: 14)
!18109 = !DILocation(line: 398, column: 31, scope: !18108)
!18110 = !DILocation(line: 398, column: 14, scope: !18031)
!18111 = !DILocalVariable(name: "fd", scope: !18112, file: !1716, line: 404, type: !7)
!18112 = distinct !DILexicalBlock(scope: !18108, file: !1716, line: 399, column: 11)
!18113 = !DILocation(line: 404, column: 17, scope: !18112)
!18114 = !DILocation(line: 404, column: 22, scope: !18112)
!18115 = !DILocation(line: 405, column: 17, scope: !18116)
!18116 = distinct !DILexicalBlock(scope: !18112, file: !1716, line: 405, column: 17)
!18117 = !DILocation(line: 405, column: 20, scope: !18116)
!18118 = !DILocation(line: 405, column: 17, scope: !18112)
!18119 = !DILocation(line: 423, column: 15, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !18116, file: !1716, line: 406, column: 15)
!18121 = !DILocation(line: 426, column: 24, scope: !18122)
!18122 = distinct !DILexicalBlock(scope: !18116, file: !1716, line: 425, column: 15)
!18123 = !DILocation(line: 426, column: 17, scope: !18122)
!18124 = !DILocation(line: 428, column: 11, scope: !18112)
!18125 = !DILocalVariable(name: "maxarglen", scope: !18126, file: !1716, line: 438, type: !55)
!18126 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 437, column: 9)
!18127 = !DILocation(line: 438, column: 18, scope: !18126)
!18128 = !DILocation(line: 438, column: 44, scope: !18126)
!18129 = !DILocation(line: 438, column: 30, scope: !18126)
!18130 = !DILocation(line: 439, column: 28, scope: !18131)
!18131 = distinct !DILexicalBlock(scope: !18126, file: !1716, line: 439, column: 15)
!18132 = !DILocation(line: 439, column: 32, scope: !18131)
!18133 = !DILocation(line: 439, column: 17, scope: !18131)
!18134 = !DILocation(line: 439, column: 15, scope: !18126)
!18135 = !DILocation(line: 440, column: 19, scope: !18131)
!18136 = !DILocation(line: 444, column: 14, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 444, column: 13)
!18138 = !DILocation(line: 444, column: 13, scope: !18137)
!18139 = !DILocation(line: 444, column: 19, scope: !18137)
!18140 = !DILocation(line: 444, column: 13, scope: !18031)
!18141 = !DILocation(line: 445, column: 41, scope: !18142)
!18142 = distinct !DILexicalBlock(scope: !18143, file: !1716, line: 445, column: 21)
!18143 = distinct !DILexicalBlock(scope: !18137, file: !1716, line: 444, column: 28)
!18144 = !DILocation(line: 445, column: 31, scope: !18142)
!18145 = !DILocation(line: 445, column: 29, scope: !18142)
!18146 = !DILocation(line: 445, column: 53, scope: !18142)
!18147 = !DILocation(line: 445, column: 21, scope: !18143)
!18148 = !DILocation(line: 446, column: 25, scope: !18142)
!18149 = !DILocation(line: 447, column: 17, scope: !18143)
!18150 = !DILocation(line: 447, column: 25, scope: !18143)
!18151 = !DILocation(line: 447, column: 35, scope: !18143)
!18152 = !DILocation(line: 448, column: 17, scope: !18143)
!18153 = !DILocation(line: 448, column: 25, scope: !18143)
!18154 = !DILocation(line: 448, column: 46, scope: !18143)
!18155 = !DILocation(line: 449, column: 11, scope: !18143)
!18156 = !DILocation(line: 462, column: 23, scope: !18031)
!18157 = !DILocation(line: 462, column: 30, scope: !18031)
!18158 = !DILocation(line: 462, column: 38, scope: !18031)
!18159 = !DILocation(line: 462, column: 41, scope: !18031)
!18160 = !DILocation(line: 462, column: 20, scope: !18031)
!18161 = !DILocation(line: 465, column: 19, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 465, column: 9)
!18163 = !DILocation(line: 465, column: 34, scope: !18162)
!18164 = !DILocation(line: 465, column: 14, scope: !18162)
!18165 = !DILocation(line: 465, column: 40, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18162, file: !1716, line: 465, column: 9)
!18167 = !DILocation(line: 465, column: 39, scope: !18166)
!18168 = !DILocation(line: 465, column: 45, scope: !18166)
!18169 = !DILocation(line: 465, column: 9, scope: !18162)
!18170 = !DILocalVariable(name: "len", scope: !18171, file: !1716, line: 467, type: !55)
!18171 = distinct !DILexicalBlock(scope: !18166, file: !1716, line: 465, column: 72)
!18172 = !DILocation(line: 467, column: 24, scope: !18171)
!18173 = !DILocation(line: 467, column: 38, scope: !18171)
!18174 = !DILocation(line: 467, column: 37, scope: !18171)
!18175 = !DILocation(line: 467, column: 30, scope: !18171)
!18176 = !DILocation(line: 469, column: 25, scope: !18177)
!18177 = distinct !DILexicalBlock(scope: !18171, file: !1716, line: 469, column: 22)
!18178 = !DILocation(line: 469, column: 33, scope: !18177)
!18179 = !DILocation(line: 469, column: 22, scope: !18171)
!18180 = !DILocalVariable(name: "v", scope: !18181, file: !1716, line: 473, type: !116)
!18181 = distinct !DILexicalBlock(scope: !18177, file: !1716, line: 470, column: 19)
!18182 = !DILocation(line: 473, column: 33, scope: !18181)
!18183 = !DILocation(line: 473, column: 38, scope: !18181)
!18184 = !DILocation(line: 473, column: 37, scope: !18181)
!18185 = !DILocation(line: 474, column: 29, scope: !18186)
!18186 = distinct !DILexicalBlock(scope: !18181, file: !1716, line: 474, column: 25)
!18187 = !DILocation(line: 474, column: 27, scope: !18186)
!18188 = !DILocation(line: 474, column: 33, scope: !18186)
!18189 = !DILocation(line: 474, column: 36, scope: !18186)
!18190 = !DILocation(line: 474, column: 38, scope: !18186)
!18191 = !DILocation(line: 474, column: 42, scope: !18186)
!18192 = !DILocation(line: 474, column: 47, scope: !18186)
!18193 = !DILocation(line: 474, column: 25, scope: !18181)
!18194 = !DILocation(line: 475, column: 23, scope: !18186)
!18195 = !DILocation(line: 475, column: 34, scope: !18186)
!18196 = !DILocation(line: 475, column: 32, scope: !18186)
!18197 = !DILocation(line: 475, column: 38, scope: !18186)
!18198 = !DILocation(line: 475, column: 41, scope: !18186)
!18199 = !DILocation(line: 475, column: 43, scope: !18186)
!18200 = !DILocation(line: 475, column: 47, scope: !18186)
!18201 = !DILocation(line: 475, column: 52, scope: !18186)
!18202 = !DILocation(line: 0, scope: !18186)
!18203 = !DILocation(line: 476, column: 25, scope: !18186)
!18204 = distinct !{!18204, !18194, !18205}
!18205 = !DILocation(line: 476, column: 27, scope: !18186)
!18206 = !DILocation(line: 477, column: 19, scope: !18181)
!18207 = !DILocation(line: 479, column: 36, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18171, file: !1716, line: 479, column: 21)
!18209 = !DILocation(line: 479, column: 41, scope: !18208)
!18210 = !DILocation(line: 479, column: 40, scope: !18208)
!18211 = !DILocation(line: 479, column: 47, scope: !18208)
!18212 = !DILocation(line: 479, column: 26, scope: !18208)
!18213 = !DILocation(line: 479, column: 24, scope: !18208)
!18214 = !DILocation(line: 479, column: 53, scope: !18208)
!18215 = !DILocation(line: 479, column: 21, scope: !18171)
!18216 = !DILocation(line: 480, column: 25, scope: !18208)
!18217 = !DILocation(line: 481, column: 17, scope: !18171)
!18218 = !DILocation(line: 481, column: 20, scope: !18171)
!18219 = !DILocation(line: 481, column: 30, scope: !18171)
!18220 = !DILocation(line: 482, column: 33, scope: !18171)
!18221 = !DILocation(line: 482, column: 17, scope: !18171)
!18222 = !DILocation(line: 482, column: 20, scope: !18171)
!18223 = !DILocation(line: 482, column: 31, scope: !18171)
!18224 = !DILocation(line: 483, column: 34, scope: !18171)
!18225 = !DILocation(line: 483, column: 37, scope: !18171)
!18226 = !DILocation(line: 483, column: 17, scope: !18171)
!18227 = !DILocation(line: 483, column: 20, scope: !18171)
!18228 = !DILocation(line: 483, column: 32, scope: !18171)
!18229 = !DILocation(line: 487, column: 21, scope: !18230)
!18230 = distinct !DILexicalBlock(scope: !18171, file: !1716, line: 487, column: 21)
!18231 = !DILocation(line: 487, column: 32, scope: !18230)
!18232 = !DILocation(line: 487, column: 35, scope: !18230)
!18233 = !DILocation(line: 487, column: 40, scope: !18230)
!18234 = !DILocation(line: 487, column: 21, scope: !18171)
!18235 = !DILocation(line: 488, column: 25, scope: !18236)
!18236 = distinct !DILexicalBlock(scope: !18230, file: !1716, line: 487, column: 49)
!18237 = !DILocation(line: 488, column: 28, scope: !18236)
!18238 = !DILocation(line: 488, column: 37, scope: !18236)
!18239 = !DILocation(line: 489, column: 47, scope: !18236)
!18240 = !DILocation(line: 489, column: 25, scope: !18236)
!18241 = !DILocation(line: 490, column: 17, scope: !18236)
!18242 = !DILocation(line: 491, column: 48, scope: !18243)
!18243 = distinct !DILexicalBlock(scope: !18230, file: !1716, line: 490, column: 24)
!18244 = !DILocation(line: 491, column: 52, scope: !18243)
!18245 = !DILocation(line: 491, column: 39, scope: !18243)
!18246 = !DILocation(line: 491, column: 25, scope: !18243)
!18247 = !DILocation(line: 491, column: 28, scope: !18243)
!18248 = !DILocation(line: 491, column: 37, scope: !18243)
!18249 = !DILocation(line: 498, column: 21, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18171, file: !1716, line: 498, column: 21)
!18251 = !DILocation(line: 498, column: 21, scope: !18171)
!18252 = !DILocation(line: 499, column: 39, scope: !18253)
!18253 = distinct !DILexicalBlock(scope: !18250, file: !1716, line: 498, column: 29)
!18254 = !DILocation(line: 499, column: 25, scope: !18253)
!18255 = !DILocation(line: 499, column: 28, scope: !18253)
!18256 = !DILocation(line: 499, column: 37, scope: !18253)
!18257 = !DILocation(line: 500, column: 32, scope: !18253)
!18258 = !DILocation(line: 500, column: 30, scope: !18253)
!18259 = !DILocation(line: 501, column: 17, scope: !18253)
!18260 = !DILocation(line: 502, column: 25, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18250, file: !1716, line: 501, column: 24)
!18262 = !DILocation(line: 502, column: 28, scope: !18261)
!18263 = !DILocation(line: 502, column: 37, scope: !18261)
!18264 = !DILocation(line: 503, column: 29, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18261, file: !1716, line: 503, column: 29)
!18266 = !DILocation(line: 503, column: 34, scope: !18265)
!18267 = !DILocation(line: 503, column: 29, scope: !18261)
!18268 = !DILocation(line: 504, column: 46, scope: !18265)
!18269 = !DILocation(line: 504, column: 44, scope: !18265)
!18270 = !DILocation(line: 504, column: 37, scope: !18265)
!18271 = !DILocation(line: 504, column: 33, scope: !18265)
!18272 = !DILocation(line: 506, column: 49, scope: !18273)
!18273 = distinct !DILexicalBlock(scope: !18265, file: !1716, line: 505, column: 30)
!18274 = !DILocation(line: 506, column: 33, scope: !18273)
!18275 = !DILocation(line: 506, column: 38, scope: !18273)
!18276 = !DILocation(line: 506, column: 47, scope: !18273)
!18277 = !DILocation(line: 507, column: 39, scope: !18273)
!18278 = !DILocation(line: 507, column: 37, scope: !18273)
!18279 = !DILocation(line: 510, column: 9, scope: !18171)
!18280 = !DILocation(line: 465, column: 54, scope: !18166)
!18281 = !DILocation(line: 465, column: 62, scope: !18166)
!18282 = !DILocation(line: 465, column: 9, scope: !18166)
!18283 = distinct !{!18283, !18169, !18284}
!18284 = !DILocation(line: 510, column: 9, scope: !18162)
!18285 = !DILocation(line: 511, column: 13, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 511, column: 13)
!18287 = !DILocation(line: 511, column: 20, scope: !18286)
!18288 = !DILocation(line: 511, column: 23, scope: !18286)
!18289 = !DILocation(line: 511, column: 30, scope: !18286)
!18290 = !DILocation(line: 511, column: 13, scope: !18031)
!18291 = !DILocation(line: 512, column: 33, scope: !18286)
!18292 = !DILocation(line: 512, column: 37, scope: !18286)
!18293 = !DILocation(line: 512, column: 43, scope: !18286)
!18294 = !DILocation(line: 512, column: 24, scope: !18286)
!18295 = !DILocation(line: 512, column: 22, scope: !18286)
!18296 = !DILocation(line: 512, column: 17, scope: !18286)
!18297 = !DILocation(line: 519, column: 38, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 519, column: 13)
!18299 = !DILocation(line: 519, column: 28, scope: !18298)
!18300 = !DILocation(line: 519, column: 14, scope: !18298)
!18301 = !DILocation(line: 519, column: 18, scope: !18298)
!18302 = !DILocation(line: 519, column: 26, scope: !18298)
!18303 = !DILocation(line: 519, column: 50, scope: !18298)
!18304 = !DILocation(line: 519, column: 13, scope: !18031)
!18305 = !DILocation(line: 520, column: 17, scope: !18298)
!18306 = !DILocation(line: 521, column: 33, scope: !18031)
!18307 = !DILocation(line: 521, column: 9, scope: !18031)
!18308 = !DILocation(line: 521, column: 13, scope: !18031)
!18309 = !DILocation(line: 521, column: 22, scope: !18031)
!18310 = !DILocation(line: 521, column: 31, scope: !18031)
!18311 = !DILocation(line: 522, column: 9, scope: !18031)
!18312 = !DILocation(line: 522, column: 13, scope: !18031)
!18313 = !DILocation(line: 522, column: 22, scope: !18031)
!18314 = !DILocation(line: 522, column: 31, scope: !18031)
!18315 = !DILocation(line: 523, column: 9, scope: !18031)
!18316 = !DILocation(line: 523, column: 13, scope: !18031)
!18317 = !DILocation(line: 523, column: 22, scope: !18031)
!18318 = !DILocation(line: 523, column: 32, scope: !18031)
!18319 = !DILocation(line: 524, column: 26, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 524, column: 13)
!18321 = !DILocation(line: 524, column: 15, scope: !18320)
!18322 = !DILocation(line: 524, column: 13, scope: !18031)
!18323 = !DILocation(line: 525, column: 17, scope: !18320)
!18324 = !DILocation(line: 534, column: 14, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18031, file: !1716, line: 534, column: 13)
!18326 = !DILocation(line: 534, column: 33, scope: !18325)
!18327 = !DILocation(line: 534, column: 37, scope: !18325)
!18328 = !DILocation(line: 535, column: 13, scope: !18325)
!18329 = !DILocation(line: 535, column: 40, scope: !18325)
!18330 = !DILocation(line: 535, column: 31, scope: !18325)
!18331 = !DILocation(line: 535, column: 17, scope: !18325)
!18332 = !DILocation(line: 535, column: 21, scope: !18325)
!18333 = !DILocation(line: 535, column: 29, scope: !18325)
!18334 = !DILocation(line: 535, column: 50, scope: !18325)
!18335 = !DILocation(line: 534, column: 13, scope: !18031)
!18336 = !DILocation(line: 536, column: 17, scope: !18325)
!18337 = !DILocation(line: 538, column: 23, scope: !18031)
!18338 = !DILocation(line: 538, column: 27, scope: !18031)
!18339 = !DILocation(line: 538, column: 9, scope: !18031)
!18340 = !DILocation(line: 539, column: 17, scope: !18031)
!18341 = !DILocation(line: 539, column: 9, scope: !18031)
!18342 = !DILabel(scope: !18031, name: "mem3", file: !1716, line: 541)
!18343 = !DILocation(line: 541, column: 1, scope: !18031)
!18344 = !DILocation(line: 541, column: 19, scope: !18031)
!18345 = !DILocation(line: 541, column: 9, scope: !18031)
!18346 = !DILocation(line: 542, column: 14, scope: !18031)
!18347 = !DILocation(line: 542, column: 9, scope: !18031)
!18348 = !DILabel(scope: !18031, name: "mem2", file: !1716, line: 543)
!18349 = !DILocation(line: 543, column: 1, scope: !18031)
!18350 = !DILocation(line: 543, column: 14, scope: !18031)
!18351 = !DILocation(line: 543, column: 18, scope: !18031)
!18352 = !DILocation(line: 543, column: 9, scope: !18031)
!18353 = !DILabel(scope: !18031, name: "mem1", file: !1716, line: 544)
!18354 = !DILocation(line: 544, column: 1, scope: !18031)
!18355 = !DILocation(line: 544, column: 14, scope: !18031)
!18356 = !DILocation(line: 544, column: 9, scope: !18031)
!18357 = !DILocation(line: 545, column: 9, scope: !18031)
!18358 = !DILocation(line: 546, column: 1, scope: !18031)
!18359 = distinct !DISubprogram(name: "fts_maxarglen", scope: !1716, file: !1716, line: 2022, type: !18360, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18360 = !DISubroutineType(types: !18361)
!18361 = !{!55, !2815}
!18362 = !DILocalVariable(name: "argv", arg: 1, scope: !18359, file: !1716, line: 2022, type: !2815)
!18363 = !DILocation(line: 2022, column: 30, scope: !18359)
!18364 = !DILocalVariable(name: "len", scope: !18359, file: !1716, line: 2024, type: !55)
!18365 = !DILocation(line: 2024, column: 16, scope: !18359)
!18366 = !DILocalVariable(name: "max", scope: !18359, file: !1716, line: 2024, type: !55)
!18367 = !DILocation(line: 2024, column: 21, scope: !18359)
!18368 = !DILocation(line: 2026, column: 18, scope: !18369)
!18369 = distinct !DILexicalBlock(scope: !18359, file: !1716, line: 2026, column: 9)
!18370 = !DILocation(line: 2026, column: 14, scope: !18369)
!18371 = !DILocation(line: 2026, column: 24, scope: !18372)
!18372 = distinct !DILexicalBlock(scope: !18369, file: !1716, line: 2026, column: 9)
!18373 = !DILocation(line: 2026, column: 23, scope: !18372)
!18374 = !DILocation(line: 2026, column: 9, scope: !18369)
!18375 = !DILocation(line: 2027, column: 36, scope: !18376)
!18376 = distinct !DILexicalBlock(scope: !18372, file: !1716, line: 2027, column: 21)
!18377 = !DILocation(line: 2027, column: 35, scope: !18376)
!18378 = !DILocation(line: 2027, column: 28, scope: !18376)
!18379 = !DILocation(line: 2027, column: 26, scope: !18376)
!18380 = !DILocation(line: 2027, column: 45, scope: !18376)
!18381 = !DILocation(line: 2027, column: 43, scope: !18376)
!18382 = !DILocation(line: 2027, column: 21, scope: !18372)
!18383 = !DILocation(line: 2028, column: 31, scope: !18376)
!18384 = !DILocation(line: 2028, column: 29, scope: !18376)
!18385 = !DILocation(line: 2028, column: 25, scope: !18376)
!18386 = !DILocation(line: 2026, column: 30, scope: !18372)
!18387 = !DILocation(line: 2026, column: 9, scope: !18372)
!18388 = distinct !{!18388, !18374, !18389}
!18389 = !DILocation(line: 2028, column: 31, scope: !18369)
!18390 = !DILocation(line: 2029, column: 17, scope: !18359)
!18391 = !DILocation(line: 2029, column: 21, scope: !18359)
!18392 = !DILocation(line: 2029, column: 9, scope: !18359)
!18393 = distinct !DISubprogram(name: "fts_palloc", scope: !1716, file: !1716, line: 1966, type: !18394, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18394 = !DISubroutineType(types: !18395)
!18395 = !{!142, !1741, !55}
!18396 = !DILocalVariable(name: "sp", arg: 1, scope: !18393, file: !1716, line: 1966, type: !1741)
!18397 = !DILocation(line: 1966, column: 18, scope: !18393)
!18398 = !DILocalVariable(name: "more", arg: 2, scope: !18393, file: !1716, line: 1966, type: !55)
!18399 = !DILocation(line: 1966, column: 29, scope: !18393)
!18400 = !DILocalVariable(name: "p", scope: !18393, file: !1716, line: 1968, type: !9)
!18401 = !DILocation(line: 1968, column: 15, scope: !18393)
!18402 = !DILocalVariable(name: "new_len", scope: !18393, file: !1716, line: 1969, type: !55)
!18403 = !DILocation(line: 1969, column: 16, scope: !18393)
!18404 = !DILocation(line: 1969, column: 26, scope: !18393)
!18405 = !DILocation(line: 1969, column: 30, scope: !18393)
!18406 = !DILocation(line: 1969, column: 44, scope: !18393)
!18407 = !DILocation(line: 1969, column: 42, scope: !18393)
!18408 = !DILocation(line: 1969, column: 49, scope: !18393)
!18409 = !DILocation(line: 1974, column: 13, scope: !18410)
!18410 = distinct !DILexicalBlock(scope: !18393, file: !1716, line: 1974, column: 13)
!18411 = !DILocation(line: 1974, column: 23, scope: !18410)
!18412 = !DILocation(line: 1974, column: 27, scope: !18410)
!18413 = !DILocation(line: 1974, column: 21, scope: !18410)
!18414 = !DILocation(line: 1974, column: 13, scope: !18393)
!18415 = !DILocation(line: 1975, column: 22, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18410, file: !1716, line: 1974, column: 40)
!18417 = !DILocation(line: 1975, column: 26, scope: !18416)
!18418 = !DILocation(line: 1975, column: 17, scope: !18416)
!18419 = !DILocation(line: 1976, column: 17, scope: !18416)
!18420 = !DILocation(line: 1976, column: 21, scope: !18416)
!18421 = !DILocation(line: 1976, column: 30, scope: !18416)
!18422 = !DILocation(line: 1977, column: 17, scope: !18416)
!18423 = !DILocation(line: 1978, column: 17, scope: !18416)
!18424 = !DILocation(line: 1980, column: 27, scope: !18393)
!18425 = !DILocation(line: 1980, column: 9, scope: !18393)
!18426 = !DILocation(line: 1980, column: 13, scope: !18393)
!18427 = !DILocation(line: 1980, column: 25, scope: !18393)
!18428 = !DILocation(line: 1981, column: 21, scope: !18393)
!18429 = !DILocation(line: 1981, column: 25, scope: !18393)
!18430 = !DILocation(line: 1981, column: 35, scope: !18393)
!18431 = !DILocation(line: 1981, column: 39, scope: !18393)
!18432 = !DILocation(line: 1981, column: 13, scope: !18393)
!18433 = !DILocation(line: 1981, column: 11, scope: !18393)
!18434 = !DILocation(line: 1982, column: 13, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18393, file: !1716, line: 1982, column: 13)
!18436 = !DILocation(line: 1982, column: 15, scope: !18435)
!18437 = !DILocation(line: 1982, column: 13, scope: !18393)
!18438 = !DILocation(line: 1983, column: 22, scope: !18439)
!18439 = distinct !DILexicalBlock(scope: !18435, file: !1716, line: 1982, column: 24)
!18440 = !DILocation(line: 1983, column: 26, scope: !18439)
!18441 = !DILocation(line: 1983, column: 17, scope: !18439)
!18442 = !DILocation(line: 1984, column: 17, scope: !18439)
!18443 = !DILocation(line: 1984, column: 21, scope: !18439)
!18444 = !DILocation(line: 1984, column: 30, scope: !18439)
!18445 = !DILocation(line: 1985, column: 17, scope: !18439)
!18446 = !DILocation(line: 1987, column: 24, scope: !18393)
!18447 = !DILocation(line: 1987, column: 9, scope: !18393)
!18448 = !DILocation(line: 1987, column: 13, scope: !18393)
!18449 = !DILocation(line: 1987, column: 22, scope: !18393)
!18450 = !DILocation(line: 1988, column: 9, scope: !18393)
!18451 = !DILocation(line: 1989, column: 1, scope: !18393)
!18452 = distinct !DISubprogram(name: "fts_alloc", scope: !1716, file: !1716, line: 1913, type: !18453, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18453 = !DISubroutineType(types: !18454)
!18454 = !{!1819, !1741, !116, !55}
!18455 = !DILocalVariable(name: "sp", arg: 1, scope: !18452, file: !1716, line: 1913, type: !1741)
!18456 = !DILocation(line: 1913, column: 17, scope: !18452)
!18457 = !DILocalVariable(name: "name", arg: 2, scope: !18452, file: !1716, line: 1913, type: !116)
!18458 = !DILocation(line: 1913, column: 33, scope: !18452)
!18459 = !DILocalVariable(name: "namelen", arg: 3, scope: !18452, file: !1716, line: 1913, type: !55)
!18460 = !DILocation(line: 1913, column: 55, scope: !18452)
!18461 = !DILocalVariable(name: "p", scope: !18452, file: !1716, line: 1915, type: !1819)
!18462 = !DILocation(line: 1915, column: 26, scope: !18452)
!18463 = !DILocalVariable(name: "len", scope: !18452, file: !1716, line: 1916, type: !55)
!18464 = !DILocation(line: 1916, column: 16, scope: !18452)
!18465 = !DILocation(line: 1922, column: 15, scope: !18452)
!18466 = !DILocation(line: 1922, column: 13, scope: !18452)
!18467 = !DILocation(line: 1923, column: 25, scope: !18468)
!18468 = distinct !DILexicalBlock(scope: !18452, file: !1716, line: 1923, column: 13)
!18469 = !DILocation(line: 1923, column: 18, scope: !18468)
!18470 = !DILocation(line: 1923, column: 16, scope: !18468)
!18471 = !DILocation(line: 1923, column: 31, scope: !18468)
!18472 = !DILocation(line: 1923, column: 13, scope: !18452)
!18473 = !DILocation(line: 1924, column: 17, scope: !18468)
!18474 = !DILocation(line: 1927, column: 16, scope: !18452)
!18475 = !DILocation(line: 1927, column: 19, scope: !18452)
!18476 = !DILocation(line: 1927, column: 9, scope: !18452)
!18477 = !DILocation(line: 1927, column: 29, scope: !18452)
!18478 = !DILocation(line: 1927, column: 35, scope: !18452)
!18479 = !DILocation(line: 1928, column: 9, scope: !18452)
!18480 = !DILocation(line: 1928, column: 12, scope: !18452)
!18481 = !DILocation(line: 1928, column: 21, scope: !18452)
!18482 = !DILocation(line: 1928, column: 30, scope: !18452)
!18483 = !DILocation(line: 1930, column: 26, scope: !18452)
!18484 = !DILocation(line: 1930, column: 9, scope: !18452)
!18485 = !DILocation(line: 1930, column: 12, scope: !18452)
!18486 = !DILocation(line: 1930, column: 24, scope: !18452)
!18487 = !DILocation(line: 1931, column: 22, scope: !18452)
!18488 = !DILocation(line: 1931, column: 9, scope: !18452)
!18489 = !DILocation(line: 1931, column: 12, scope: !18452)
!18490 = !DILocation(line: 1931, column: 20, scope: !18452)
!18491 = !DILocation(line: 1932, column: 23, scope: !18452)
!18492 = !DILocation(line: 1932, column: 27, scope: !18452)
!18493 = !DILocation(line: 1932, column: 9, scope: !18452)
!18494 = !DILocation(line: 1932, column: 12, scope: !18452)
!18495 = !DILocation(line: 1932, column: 21, scope: !18452)
!18496 = !DILocation(line: 1933, column: 9, scope: !18452)
!18497 = !DILocation(line: 1933, column: 12, scope: !18452)
!18498 = !DILocation(line: 1933, column: 22, scope: !18452)
!18499 = !DILocation(line: 1934, column: 9, scope: !18452)
!18500 = !DILocation(line: 1934, column: 12, scope: !18452)
!18501 = !DILocation(line: 1934, column: 21, scope: !18452)
!18502 = !DILocation(line: 1935, column: 9, scope: !18452)
!18503 = !DILocation(line: 1935, column: 12, scope: !18452)
!18504 = !DILocation(line: 1935, column: 22, scope: !18452)
!18505 = !DILocation(line: 1936, column: 9, scope: !18452)
!18506 = !DILocation(line: 1936, column: 12, scope: !18452)
!18507 = !DILocation(line: 1936, column: 22, scope: !18452)
!18508 = !DILocation(line: 1937, column: 9, scope: !18452)
!18509 = !DILocation(line: 1937, column: 12, scope: !18452)
!18510 = !DILocation(line: 1937, column: 23, scope: !18452)
!18511 = !DILocation(line: 1938, column: 9, scope: !18452)
!18512 = !DILocation(line: 1938, column: 12, scope: !18452)
!18513 = !DILocation(line: 1938, column: 24, scope: !18452)
!18514 = !DILocation(line: 1939, column: 17, scope: !18452)
!18515 = !DILocation(line: 1939, column: 9, scope: !18452)
!18516 = !DILocation(line: 1940, column: 1, scope: !18452)
!18517 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !1716, file: !1716, line: 290, type: !18518, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18518 = !DISubroutineType(types: !18519)
!18519 = !{null, !1819, !142}
!18520 = !DILocalVariable(name: "p", arg: 1, scope: !18517, file: !1716, line: 290, type: !1819)
!18521 = !DILocation(line: 290, column: 32, scope: !18517)
!18522 = !DILocalVariable(name: "required", arg: 2, scope: !18517, file: !1716, line: 290, type: !142)
!18523 = !DILocation(line: 290, column: 40, scope: !18517)
!18524 = !DILocation(line: 292, column: 3, scope: !18517)
!18525 = !DILocation(line: 292, column: 3, scope: !18526)
!18526 = distinct !DILexicalBlock(scope: !18527, file: !1716, line: 292, column: 3)
!18527 = distinct !DILexicalBlock(scope: !18517, file: !1716, line: 292, column: 3)
!18528 = !DILocation(line: 292, column: 3, scope: !18527)
!18529 = !DILocation(line: 293, column: 28, scope: !18517)
!18530 = !DILocation(line: 293, column: 27, scope: !18517)
!18531 = !DILocation(line: 293, column: 3, scope: !18517)
!18532 = !DILocation(line: 293, column: 6, scope: !18517)
!18533 = !DILocation(line: 293, column: 17, scope: !18517)
!18534 = !DILocation(line: 293, column: 25, scope: !18517)
!18535 = !DILocation(line: 296, column: 1, scope: !18517)
!18536 = distinct !DISubprogram(name: "fts_stat", scope: !1716, file: !1716, line: 1799, type: !18537, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18537 = !DISubroutineType(types: !18538)
!18538 = !{!33, !1741, !1819, !142}
!18539 = !DILocalVariable(name: "sp", arg: 1, scope: !18536, file: !1716, line: 1799, type: !1741)
!18540 = !DILocation(line: 1799, column: 15, scope: !18536)
!18541 = !DILocalVariable(name: "p", arg: 2, scope: !18536, file: !1716, line: 1799, type: !1819)
!18542 = !DILocation(line: 1799, column: 36, scope: !18536)
!18543 = !DILocalVariable(name: "follow", arg: 3, scope: !18536, file: !1716, line: 1799, type: !142)
!18544 = !DILocation(line: 1799, column: 44, scope: !18536)
!18545 = !DILocalVariable(name: "sbp", scope: !18536, file: !1716, line: 1801, type: !1852)
!18546 = !DILocation(line: 1801, column: 22, scope: !18536)
!18547 = !DILocation(line: 1801, column: 28, scope: !18536)
!18548 = !DILocation(line: 1801, column: 31, scope: !18536)
!18549 = !DILocation(line: 1803, column: 13, scope: !18550)
!18550 = distinct !DILexicalBlock(scope: !18536, file: !1716, line: 1803, column: 13)
!18551 = !DILocation(line: 1803, column: 16, scope: !18550)
!18552 = !DILocation(line: 1803, column: 26, scope: !18550)
!18553 = !DILocation(line: 1803, column: 43, scope: !18550)
!18554 = !DILocation(line: 1803, column: 46, scope: !18550)
!18555 = !DILocation(line: 1803, column: 13, scope: !18536)
!18556 = !DILocation(line: 1804, column: 24, scope: !18550)
!18557 = !DILocation(line: 1804, column: 17, scope: !18550)
!18558 = !DILocation(line: 1811, column: 13, scope: !18559)
!18559 = distinct !DILexicalBlock(scope: !18536, file: !1716, line: 1811, column: 13)
!18560 = !DILocation(line: 1811, column: 32, scope: !18559)
!18561 = !DILocation(line: 1811, column: 35, scope: !18559)
!18562 = !DILocation(line: 1811, column: 13, scope: !18536)
!18563 = !DILocation(line: 1812, column: 26, scope: !18564)
!18564 = distinct !DILexicalBlock(scope: !18565, file: !1716, line: 1812, column: 21)
!18565 = distinct !DILexicalBlock(scope: !18559, file: !1716, line: 1811, column: 43)
!18566 = !DILocation(line: 1812, column: 29, scope: !18564)
!18567 = !DILocation(line: 1812, column: 42, scope: !18564)
!18568 = !DILocation(line: 1812, column: 21, scope: !18564)
!18569 = !DILocation(line: 1812, column: 21, scope: !18565)
!18570 = !DILocation(line: 1813, column: 29, scope: !18571)
!18571 = distinct !DILexicalBlock(scope: !18572, file: !1716, line: 1813, column: 29)
!18572 = distinct !DILexicalBlock(scope: !18564, file: !1716, line: 1812, column: 48)
!18573 = !DILocation(line: 1813, column: 35, scope: !18571)
!18574 = !DILocation(line: 1814, column: 29, scope: !18571)
!18575 = !DILocation(line: 1814, column: 38, scope: !18571)
!18576 = !DILocation(line: 1814, column: 41, scope: !18571)
!18577 = !DILocation(line: 1814, column: 54, scope: !18571)
!18578 = !DILocation(line: 1814, column: 32, scope: !18571)
!18579 = !DILocation(line: 1814, column: 59, scope: !18571)
!18580 = !DILocation(line: 1813, column: 29, scope: !18572)
!18581 = !DILocation(line: 1815, column: 33, scope: !18582)
!18582 = distinct !DILexicalBlock(scope: !18571, file: !1716, line: 1814, column: 65)
!18583 = !DILocation(line: 1816, column: 33, scope: !18582)
!18584 = !DILocation(line: 1818, column: 40, scope: !18572)
!18585 = !DILocation(line: 1818, column: 25, scope: !18572)
!18586 = !DILocation(line: 1818, column: 28, scope: !18572)
!18587 = !DILocation(line: 1818, column: 38, scope: !18572)
!18588 = !DILocation(line: 1819, column: 25, scope: !18572)
!18589 = !DILocation(line: 1821, column: 9, scope: !18565)
!18590 = !DILocation(line: 1821, column: 28, scope: !18591)
!18591 = distinct !DILexicalBlock(scope: !18559, file: !1716, line: 1821, column: 20)
!18592 = !DILocation(line: 1821, column: 32, scope: !18591)
!18593 = !DILocation(line: 1821, column: 44, scope: !18591)
!18594 = !DILocation(line: 1821, column: 47, scope: !18591)
!18595 = !DILocation(line: 1821, column: 60, scope: !18591)
!18596 = !DILocation(line: 1821, column: 20, scope: !18591)
!18597 = !DILocation(line: 1821, column: 20, scope: !18559)
!18598 = !DILocation(line: 1823, column: 32, scope: !18599)
!18599 = distinct !DILexicalBlock(scope: !18591, file: !1716, line: 1822, column: 50)
!18600 = !DILocation(line: 1823, column: 17, scope: !18599)
!18601 = !DILocation(line: 1823, column: 20, scope: !18599)
!18602 = !DILocation(line: 1823, column: 30, scope: !18599)
!18603 = !DILabel(scope: !18599, name: "err", file: !1716, line: 1824)
!18604 = !DILocation(line: 1824, column: 1, scope: !18599)
!18605 = !DILocation(line: 1824, column: 24, scope: !18599)
!18606 = !DILocation(line: 1824, column: 17, scope: !18599)
!18607 = !DILocation(line: 1825, column: 17, scope: !18599)
!18608 = !DILocation(line: 1828, column: 13, scope: !18609)
!18609 = distinct !DILexicalBlock(scope: !18536, file: !1716, line: 1828, column: 13)
!18610 = !DILocation(line: 1828, column: 13, scope: !18536)
!18611 = !DILocation(line: 1830, column: 23, scope: !18612)
!18612 = distinct !DILexicalBlock(scope: !18609, file: !1716, line: 1828, column: 36)
!18613 = !DILocation(line: 1830, column: 28, scope: !18612)
!18614 = !DILocation(line: 1830, column: 37, scope: !18612)
!18615 = !DILocation(line: 1831, column: 23, scope: !18612)
!18616 = !DILocation(line: 1831, column: 26, scope: !18612)
!18617 = !DILocation(line: 1831, column: 29, scope: !18612)
!18618 = !DILocation(line: 1831, column: 39, scope: !18612)
!18619 = !DILocation(line: 1830, column: 22, scope: !18612)
!18620 = !DILocation(line: 1833, column: 24, scope: !18612)
!18621 = !DILocation(line: 1833, column: 29, scope: !18612)
!18622 = !DILocation(line: 1833, column: 41, scope: !18612)
!18623 = !DILocation(line: 1833, column: 40, scope: !18612)
!18624 = !DILocation(line: 1833, column: 38, scope: !18612)
!18625 = !DILocation(line: 1829, column: 17, scope: !18612)
!18626 = !DILocation(line: 1829, column: 20, scope: !18612)
!18627 = !DILocation(line: 1830, column: 19, scope: !18612)
!18628 = !DILocation(line: 1834, column: 21, scope: !18629)
!18629 = distinct !DILexicalBlock(scope: !18612, file: !1716, line: 1834, column: 21)
!18630 = !DILocation(line: 1834, column: 21, scope: !18612)
!18631 = !DILocation(line: 1836, column: 33, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18629, file: !1716, line: 1834, column: 41)
!18633 = !DILocation(line: 1836, column: 36, scope: !18632)
!18634 = !DILocation(line: 1836, column: 46, scope: !18632)
!18635 = !DILocation(line: 1836, column: 32, scope: !18632)
!18636 = !DILocation(line: 1836, column: 25, scope: !18632)
!18637 = !DILocation(line: 1839, column: 17, scope: !18612)
!18638 = !DILocation(line: 1841, column: 13, scope: !18639)
!18639 = distinct !DILexicalBlock(scope: !18536, file: !1716, line: 1841, column: 13)
!18640 = !DILocation(line: 1841, column: 13, scope: !18536)
!18641 = !DILocation(line: 1842, column: 17, scope: !18639)
!18642 = !DILocation(line: 1843, column: 13, scope: !18643)
!18643 = distinct !DILexicalBlock(scope: !18536, file: !1716, line: 1843, column: 13)
!18644 = !DILocation(line: 1843, column: 13, scope: !18536)
!18645 = !DILocation(line: 1844, column: 17, scope: !18643)
!18646 = !DILocation(line: 1845, column: 9, scope: !18536)
!18647 = !DILocation(line: 1846, column: 1, scope: !18536)
!18648 = distinct !DISubprogram(name: "fts_sort", scope: !1716, file: !1716, line: 1863, type: !18649, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18649 = !DISubroutineType(types: !18650)
!18650 = !{!1819, !1741, !1819, !55}
!18651 = !DILocalVariable(name: "sp", arg: 1, scope: !18648, file: !1716, line: 1863, type: !1741)
!18652 = !DILocation(line: 1863, column: 16, scope: !18648)
!18653 = !DILocalVariable(name: "head", arg: 2, scope: !18648, file: !1716, line: 1863, type: !1819)
!18654 = !DILocation(line: 1863, column: 28, scope: !18648)
!18655 = !DILocalVariable(name: "nitems", arg: 3, scope: !18648, file: !1716, line: 1863, type: !55)
!18656 = !DILocation(line: 1863, column: 50, scope: !18648)
!18657 = !DILocalVariable(name: "ap", scope: !18648, file: !1716, line: 1865, type: !1853)
!18658 = !DILocation(line: 1865, column: 27, scope: !18648)
!18659 = !DILocalVariable(name: "p", scope: !18648, file: !1716, line: 1865, type: !1819)
!18660 = !DILocation(line: 1865, column: 32, scope: !18648)
!18661 = !DILocalVariable(name: "dummy", scope: !18648, file: !1716, line: 1874, type: !1819)
!18662 = !DILocation(line: 1874, column: 17, scope: !18648)
!18663 = !DILocalVariable(name: "compare", scope: !18648, file: !1716, line: 1875, type: !865)
!18664 = !DILocation(line: 1875, column: 15, scope: !18648)
!18665 = !DILocation(line: 1877, column: 16, scope: !18648)
!18666 = !DILocation(line: 1877, column: 48, scope: !18648)
!18667 = !DILocation(line: 1877, column: 37, scope: !18648)
!18668 = !DILocation(line: 1877, column: 34, scope: !18648)
!18669 = !DILocation(line: 1876, column: 12, scope: !18648)
!18670 = !DILocation(line: 1878, column: 53, scope: !18648)
!18671 = !DILocation(line: 1878, column: 57, scope: !18648)
!18672 = !DILocation(line: 1878, column: 14, scope: !18648)
!18673 = !DILocation(line: 1888, column: 13, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18648, file: !1716, line: 1888, column: 13)
!18675 = !DILocation(line: 1888, column: 22, scope: !18674)
!18676 = !DILocation(line: 1888, column: 26, scope: !18674)
!18677 = !DILocation(line: 1888, column: 20, scope: !18674)
!18678 = !DILocation(line: 1888, column: 13, scope: !18648)
!18679 = !DILocalVariable(name: "a", scope: !18680, file: !1716, line: 1889, type: !1853)
!18680 = distinct !DILexicalBlock(scope: !18674, file: !1716, line: 1888, column: 38)
!18681 = !DILocation(line: 1889, column: 26, scope: !18680)
!18682 = !DILocation(line: 1891, column: 34, scope: !18680)
!18683 = !DILocation(line: 1891, column: 41, scope: !18680)
!18684 = !DILocation(line: 1891, column: 17, scope: !18680)
!18685 = !DILocation(line: 1891, column: 21, scope: !18680)
!18686 = !DILocation(line: 1891, column: 32, scope: !18680)
!18687 = !DILocation(line: 1892, column: 44, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18680, file: !1716, line: 1892, column: 21)
!18689 = !DILocation(line: 1892, column: 48, scope: !18688)
!18690 = !DILocation(line: 1892, column: 42, scope: !18688)
!18691 = !DILocation(line: 1893, column: 21, scope: !18688)
!18692 = !DILocation(line: 1893, column: 40, scope: !18688)
!18693 = !DILocation(line: 1893, column: 44, scope: !18688)
!18694 = !DILocation(line: 1894, column: 40, scope: !18688)
!18695 = !DILocation(line: 1894, column: 44, scope: !18688)
!18696 = !DILocation(line: 1894, column: 55, scope: !18688)
!18697 = !DILocation(line: 1893, column: 31, scope: !18688)
!18698 = !DILocation(line: 1893, column: 29, scope: !18688)
!18699 = !DILocation(line: 1892, column: 21, scope: !18680)
!18700 = !DILocation(line: 1895, column: 30, scope: !18701)
!18701 = distinct !DILexicalBlock(scope: !18688, file: !1716, line: 1894, column: 70)
!18702 = !DILocation(line: 1895, column: 34, scope: !18701)
!18703 = !DILocation(line: 1895, column: 25, scope: !18701)
!18704 = !DILocation(line: 1896, column: 25, scope: !18701)
!18705 = !DILocation(line: 1896, column: 29, scope: !18701)
!18706 = !DILocation(line: 1896, column: 39, scope: !18701)
!18707 = !DILocation(line: 1897, column: 25, scope: !18701)
!18708 = !DILocation(line: 1897, column: 29, scope: !18701)
!18709 = !DILocation(line: 1897, column: 40, scope: !18701)
!18710 = !DILocation(line: 1898, column: 33, scope: !18701)
!18711 = !DILocation(line: 1898, column: 25, scope: !18701)
!18712 = !DILocation(line: 1900, column: 33, scope: !18680)
!18713 = !DILocation(line: 1900, column: 17, scope: !18680)
!18714 = !DILocation(line: 1900, column: 21, scope: !18680)
!18715 = !DILocation(line: 1900, column: 31, scope: !18680)
!18716 = !DILocation(line: 1901, column: 9, scope: !18680)
!18717 = !DILocation(line: 1902, column: 19, scope: !18718)
!18718 = distinct !DILexicalBlock(scope: !18648, file: !1716, line: 1902, column: 9)
!18719 = !DILocation(line: 1902, column: 23, scope: !18718)
!18720 = !DILocation(line: 1902, column: 17, scope: !18718)
!18721 = !DILocation(line: 1902, column: 38, scope: !18718)
!18722 = !DILocation(line: 1902, column: 36, scope: !18718)
!18723 = !DILocation(line: 1902, column: 14, scope: !18718)
!18724 = !DILocation(line: 1902, column: 44, scope: !18725)
!18725 = distinct !DILexicalBlock(scope: !18718, file: !1716, line: 1902, column: 9)
!18726 = !DILocation(line: 1902, column: 9, scope: !18718)
!18727 = !DILocation(line: 1903, column: 25, scope: !18725)
!18728 = !DILocation(line: 1903, column: 20, scope: !18725)
!18729 = !DILocation(line: 1903, column: 23, scope: !18725)
!18730 = !DILocation(line: 1903, column: 17, scope: !18725)
!18731 = !DILocation(line: 1902, column: 51, scope: !18725)
!18732 = !DILocation(line: 1902, column: 54, scope: !18725)
!18733 = !DILocation(line: 1902, column: 49, scope: !18725)
!18734 = !DILocation(line: 1902, column: 9, scope: !18725)
!18735 = distinct !{!18735, !18726, !18736}
!18736 = !DILocation(line: 1903, column: 25, scope: !18718)
!18737 = !DILocation(line: 1904, column: 23, scope: !18648)
!18738 = !DILocation(line: 1904, column: 27, scope: !18648)
!18739 = !DILocation(line: 1904, column: 15, scope: !18648)
!18740 = !DILocation(line: 1904, column: 38, scope: !18648)
!18741 = !DILocation(line: 1904, column: 64, scope: !18648)
!18742 = !DILocation(line: 1904, column: 9, scope: !18648)
!18743 = !DILocation(line: 1905, column: 28, scope: !18744)
!18744 = distinct !DILexicalBlock(scope: !18648, file: !1716, line: 1905, column: 9)
!18745 = !DILocation(line: 1905, column: 32, scope: !18744)
!18746 = !DILocation(line: 1905, column: 26, scope: !18744)
!18747 = !DILocation(line: 1905, column: 21, scope: !18744)
!18748 = !DILocation(line: 1905, column: 19, scope: !18744)
!18749 = !DILocation(line: 1905, column: 14, scope: !18744)
!18750 = !DILocation(line: 1905, column: 44, scope: !18751)
!18751 = distinct !DILexicalBlock(scope: !18744, file: !1716, line: 1905, column: 9)
!18752 = !DILocation(line: 1905, column: 9, scope: !18744)
!18753 = !DILocation(line: 1906, column: 35, scope: !18751)
!18754 = !DILocation(line: 1906, column: 17, scope: !18751)
!18755 = !DILocation(line: 1906, column: 24, scope: !18751)
!18756 = !DILocation(line: 1906, column: 33, scope: !18751)
!18757 = !DILocation(line: 1905, column: 54, scope: !18751)
!18758 = !DILocation(line: 1905, column: 9, scope: !18751)
!18759 = distinct !{!18759, !18752, !18760}
!18760 = !DILocation(line: 1906, column: 39, scope: !18744)
!18761 = !DILocation(line: 1907, column: 9, scope: !18648)
!18762 = !DILocation(line: 1907, column: 16, scope: !18648)
!18763 = !DILocation(line: 1907, column: 25, scope: !18648)
!18764 = !DILocation(line: 1908, column: 17, scope: !18648)
!18765 = !DILocation(line: 1908, column: 9, scope: !18648)
!18766 = !DILocation(line: 1909, column: 1, scope: !18648)
!18767 = distinct !DISubprogram(name: "setup_dir", scope: !1823, file: !1823, line: 50, type: !18768, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18768 = !DISubroutineType(types: !18769)
!18769 = !{!142, !1741}
!18770 = !DILocalVariable(name: "fts", arg: 1, scope: !18767, file: !1823, line: 50, type: !1741)
!18771 = !DILocation(line: 50, column: 17, scope: !18767)
!18772 = !DILocation(line: 52, column: 7, scope: !18773)
!18773 = distinct !DILexicalBlock(scope: !18767, file: !1823, line: 52, column: 7)
!18774 = !DILocation(line: 52, column: 12, scope: !18773)
!18775 = !DILocation(line: 52, column: 24, scope: !18773)
!18776 = !DILocation(line: 52, column: 7, scope: !18767)
!18777 = !DILocation(line: 55, column: 27, scope: !18778)
!18778 = distinct !DILexicalBlock(scope: !18773, file: !1823, line: 53, column: 5)
!18779 = !DILocation(line: 55, column: 7, scope: !18778)
!18780 = !DILocation(line: 55, column: 12, scope: !18778)
!18781 = !DILocation(line: 55, column: 22, scope: !18778)
!18782 = !DILocation(line: 55, column: 25, scope: !18778)
!18783 = !DILocation(line: 57, column: 13, scope: !18784)
!18784 = distinct !DILexicalBlock(scope: !18778, file: !1823, line: 57, column: 11)
!18785 = !DILocation(line: 57, column: 18, scope: !18784)
!18786 = !DILocation(line: 57, column: 28, scope: !18784)
!18787 = !DILocation(line: 57, column: 11, scope: !18778)
!18788 = !DILocation(line: 58, column: 9, scope: !18784)
!18789 = !DILocation(line: 59, column: 5, scope: !18778)
!18790 = !DILocation(line: 62, column: 30, scope: !18791)
!18791 = distinct !DILexicalBlock(scope: !18773, file: !1823, line: 61, column: 5)
!18792 = !DILocation(line: 62, column: 7, scope: !18791)
!18793 = !DILocation(line: 62, column: 12, scope: !18791)
!18794 = !DILocation(line: 62, column: 22, scope: !18791)
!18795 = !DILocation(line: 62, column: 28, scope: !18791)
!18796 = !DILocation(line: 63, column: 13, scope: !18797)
!18797 = distinct !DILexicalBlock(scope: !18791, file: !1823, line: 63, column: 11)
!18798 = !DILocation(line: 63, column: 18, scope: !18797)
!18799 = !DILocation(line: 63, column: 28, scope: !18797)
!18800 = !DILocation(line: 63, column: 11, scope: !18791)
!18801 = !DILocation(line: 64, column: 9, scope: !18797)
!18802 = !DILocation(line: 65, column: 25, scope: !18791)
!18803 = !DILocation(line: 65, column: 30, scope: !18791)
!18804 = !DILocation(line: 65, column: 40, scope: !18791)
!18805 = !DILocation(line: 65, column: 7, scope: !18791)
!18806 = !DILocation(line: 68, column: 3, scope: !18767)
!18807 = !DILocation(line: 69, column: 1, scope: !18767)
!18808 = distinct !DISubprogram(name: "diropen", scope: !1716, file: !1716, line: 346, type: !18809, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18809 = !DISubroutineType(types: !18810)
!18810 = !{!7, !18811, !116}
!18811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!18812 = !DILocalVariable(name: "sp", arg: 1, scope: !18808, file: !1716, line: 346, type: !18811)
!18813 = !DILocation(line: 346, column: 21, scope: !18808)
!18814 = !DILocalVariable(name: "dir", arg: 2, scope: !18808, file: !1716, line: 346, type: !116)
!18815 = !DILocation(line: 346, column: 37, scope: !18808)
!18816 = !DILocalVariable(name: "open_flags", scope: !18808, file: !1716, line: 348, type: !7)
!18817 = !DILocation(line: 348, column: 7, scope: !18808)
!18818 = !DILocation(line: 349, column: 24, scope: !18808)
!18819 = !DILocation(line: 349, column: 21, scope: !18808)
!18820 = !DILocalVariable(name: "fd", scope: !18808, file: !1716, line: 351, type: !7)
!18821 = !DILocation(line: 351, column: 7, scope: !18808)
!18822 = !DILocation(line: 351, column: 13, scope: !18808)
!18823 = !DILocation(line: 352, column: 23, scope: !18808)
!18824 = !DILocation(line: 352, column: 27, scope: !18808)
!18825 = !DILocation(line: 352, column: 39, scope: !18808)
!18826 = !DILocation(line: 352, column: 44, scope: !18808)
!18827 = !DILocation(line: 352, column: 15, scope: !18808)
!18828 = !DILocation(line: 353, column: 21, scope: !18808)
!18829 = !DILocation(line: 353, column: 26, scope: !18808)
!18830 = !DILocation(line: 353, column: 15, scope: !18808)
!18831 = !DILocation(line: 354, column: 10, scope: !18808)
!18832 = !DILocation(line: 354, column: 3, scope: !18808)
!18833 = distinct !DISubprogram(name: "fts_lfree", scope: !1716, file: !1716, line: 1944, type: !18834, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18834 = !DISubroutineType(types: !18835)
!18835 = !{null, !1819}
!18836 = !DILocalVariable(name: "head", arg: 1, scope: !18833, file: !1716, line: 1944, type: !1819)
!18837 = !DILocation(line: 1944, column: 29, scope: !18833)
!18838 = !DILocalVariable(name: "p", scope: !18833, file: !1716, line: 1946, type: !1819)
!18839 = !DILocation(line: 1946, column: 26, scope: !18833)
!18840 = !DILocation(line: 1949, column: 9, scope: !18833)
!18841 = !DILocation(line: 1949, column: 21, scope: !18833)
!18842 = !DILocation(line: 1949, column: 19, scope: !18833)
!18843 = !DILocation(line: 1950, column: 24, scope: !18844)
!18844 = distinct !DILexicalBlock(scope: !18833, file: !1716, line: 1949, column: 28)
!18845 = !DILocation(line: 1950, column: 30, scope: !18844)
!18846 = !DILocation(line: 1950, column: 22, scope: !18844)
!18847 = !DILocation(line: 1951, column: 21, scope: !18848)
!18848 = distinct !DILexicalBlock(scope: !18844, file: !1716, line: 1951, column: 21)
!18849 = !DILocation(line: 1951, column: 24, scope: !18848)
!18850 = !DILocation(line: 1951, column: 21, scope: !18844)
!18851 = !DILocation(line: 1952, column: 35, scope: !18848)
!18852 = !DILocation(line: 1952, column: 38, scope: !18848)
!18853 = !DILocation(line: 1952, column: 25, scope: !18848)
!18854 = !DILocation(line: 1953, column: 22, scope: !18844)
!18855 = !DILocation(line: 1953, column: 17, scope: !18844)
!18856 = distinct !{!18856, !18840, !18857}
!18857 = !DILocation(line: 1954, column: 9, scope: !18833)
!18858 = !DILocation(line: 1955, column: 1, scope: !18833)
!18859 = distinct !DISubprogram(name: "AD_hash", scope: !1823, file: !1823, line: 41, type: !707, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18860 = !DILocalVariable(name: "x", arg: 1, scope: !18859, file: !1823, line: 41, type: !709)
!18861 = !DILocation(line: 41, column: 22, scope: !18859)
!18862 = !DILocalVariable(name: "table_size", arg: 2, scope: !18859, file: !1823, line: 41, type: !55)
!18863 = !DILocation(line: 41, column: 32, scope: !18859)
!18864 = !DILocalVariable(name: "ax", scope: !18859, file: !1823, line: 43, type: !1820)
!18865 = !DILocation(line: 43, column: 28, scope: !18859)
!18866 = !DILocation(line: 43, column: 33, scope: !18859)
!18867 = !DILocation(line: 44, column: 22, scope: !18859)
!18868 = !DILocation(line: 44, column: 26, scope: !18859)
!18869 = !DILocation(line: 44, column: 32, scope: !18859)
!18870 = !DILocation(line: 44, column: 30, scope: !18859)
!18871 = !DILocation(line: 44, column: 3, scope: !18859)
!18872 = distinct !DISubprogram(name: "AD_compare", scope: !1823, file: !1823, line: 32, type: !714, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18873 = !DILocalVariable(name: "x", arg: 1, scope: !18872, file: !1823, line: 32, type: !709)
!18874 = !DILocation(line: 32, column: 25, scope: !18872)
!18875 = !DILocalVariable(name: "y", arg: 2, scope: !18872, file: !1823, line: 32, type: !709)
!18876 = !DILocation(line: 32, column: 40, scope: !18872)
!18877 = !DILocalVariable(name: "ax", scope: !18872, file: !1823, line: 34, type: !1820)
!18878 = !DILocation(line: 34, column: 28, scope: !18872)
!18879 = !DILocation(line: 34, column: 33, scope: !18872)
!18880 = !DILocalVariable(name: "ay", scope: !18872, file: !1823, line: 35, type: !1820)
!18881 = !DILocation(line: 35, column: 28, scope: !18872)
!18882 = !DILocation(line: 35, column: 33, scope: !18872)
!18883 = !DILocation(line: 36, column: 10, scope: !18872)
!18884 = !DILocation(line: 36, column: 14, scope: !18872)
!18885 = !DILocation(line: 36, column: 21, scope: !18872)
!18886 = !DILocation(line: 36, column: 25, scope: !18872)
!18887 = !DILocation(line: 36, column: 18, scope: !18872)
!18888 = !DILocation(line: 37, column: 7, scope: !18872)
!18889 = !DILocation(line: 37, column: 10, scope: !18872)
!18890 = !DILocation(line: 37, column: 14, scope: !18872)
!18891 = !DILocation(line: 37, column: 21, scope: !18872)
!18892 = !DILocation(line: 37, column: 25, scope: !18872)
!18893 = !DILocation(line: 37, column: 18, scope: !18872)
!18894 = !DILocation(line: 0, scope: !18872)
!18895 = !DILocation(line: 36, column: 3, scope: !18872)
!18896 = distinct !DISubprogram(name: "fts_compar", scope: !1716, file: !1716, line: 1849, type: !866, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18897 = !DILocalVariable(name: "a", arg: 1, scope: !18896, file: !1716, line: 1849, type: !709)
!18898 = !DILocation(line: 1849, column: 25, scope: !18896)
!18899 = !DILocalVariable(name: "b", arg: 2, scope: !18896, file: !1716, line: 1849, type: !709)
!18900 = !DILocation(line: 1849, column: 40, scope: !18896)
!18901 = !DILocalVariable(name: "pa", scope: !18896, file: !1716, line: 1856, type: !1722)
!18902 = !DILocation(line: 1856, column: 18, scope: !18896)
!18903 = !DILocation(line: 1856, column: 41, scope: !18896)
!18904 = !DILocation(line: 1856, column: 23, scope: !18896)
!18905 = !DILocalVariable(name: "pb", scope: !18896, file: !1716, line: 1857, type: !1722)
!18906 = !DILocation(line: 1857, column: 18, scope: !18896)
!18907 = !DILocation(line: 1857, column: 41, scope: !18896)
!18908 = !DILocation(line: 1857, column: 23, scope: !18896)
!18909 = !DILocation(line: 1858, column: 10, scope: !18896)
!18910 = !DILocation(line: 1858, column: 17, scope: !18896)
!18911 = !DILocation(line: 1858, column: 26, scope: !18896)
!18912 = !DILocation(line: 1858, column: 38, scope: !18896)
!18913 = !DILocation(line: 1858, column: 42, scope: !18896)
!18914 = !DILocation(line: 1858, column: 3, scope: !18896)
!18915 = distinct !DISubprogram(name: "rpl_fts_close", scope: !1716, file: !1716, line: 573, type: !18916, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!18916 = !DISubroutineType(types: !18917)
!18917 = !{!7, !1741}
!18918 = !DILocalVariable(name: "sp", arg: 1, scope: !18915, file: !1716, line: 573, type: !1741)
!18919 = !DILocation(line: 573, column: 17, scope: !18915)
!18920 = !DILocalVariable(name: "freep", scope: !18915, file: !1716, line: 575, type: !1819)
!18921 = !DILocation(line: 575, column: 26, scope: !18915)
!18922 = !DILocalVariable(name: "p", scope: !18915, file: !1716, line: 575, type: !1819)
!18923 = !DILocation(line: 575, column: 34, scope: !18915)
!18924 = !DILocalVariable(name: "saved_errno", scope: !18915, file: !1716, line: 576, type: !7)
!18925 = !DILocation(line: 576, column: 13, scope: !18915)
!18926 = !DILocation(line: 583, column: 13, scope: !18927)
!18927 = distinct !DILexicalBlock(scope: !18915, file: !1716, line: 583, column: 13)
!18928 = !DILocation(line: 583, column: 17, scope: !18927)
!18929 = !DILocation(line: 583, column: 13, scope: !18915)
!18930 = !DILocation(line: 584, column: 26, scope: !18931)
!18931 = distinct !DILexicalBlock(scope: !18932, file: !1716, line: 584, column: 17)
!18932 = distinct !DILexicalBlock(scope: !18927, file: !1716, line: 583, column: 26)
!18933 = !DILocation(line: 584, column: 30, scope: !18931)
!18934 = !DILocation(line: 584, column: 24, scope: !18931)
!18935 = !DILocation(line: 584, column: 22, scope: !18931)
!18936 = !DILocation(line: 584, column: 39, scope: !18937)
!18937 = distinct !DILexicalBlock(scope: !18931, file: !1716, line: 584, column: 17)
!18938 = !DILocation(line: 584, column: 42, scope: !18937)
!18939 = !DILocation(line: 584, column: 52, scope: !18937)
!18940 = !DILocation(line: 584, column: 17, scope: !18931)
!18941 = !DILocation(line: 585, column: 33, scope: !18942)
!18942 = distinct !DILexicalBlock(scope: !18937, file: !1716, line: 584, column: 71)
!18943 = !DILocation(line: 585, column: 31, scope: !18942)
!18944 = !DILocation(line: 586, column: 29, scope: !18942)
!18945 = !DILocation(line: 586, column: 32, scope: !18942)
!18946 = !DILocation(line: 586, column: 41, scope: !18942)
!18947 = !DILocation(line: 586, column: 51, scope: !18942)
!18948 = !DILocation(line: 586, column: 54, scope: !18942)
!18949 = !DILocation(line: 586, column: 65, scope: !18942)
!18950 = !DILocation(line: 586, column: 68, scope: !18942)
!18951 = !DILocation(line: 586, column: 27, scope: !18942)
!18952 = !DILocation(line: 587, column: 30, scope: !18942)
!18953 = !DILocation(line: 587, column: 25, scope: !18942)
!18954 = !DILocation(line: 584, column: 17, scope: !18937)
!18955 = distinct !{!18955, !18940, !18956}
!18956 = !DILocation(line: 588, column: 17, scope: !18931)
!18957 = !DILocation(line: 589, column: 22, scope: !18932)
!18958 = !DILocation(line: 589, column: 17, scope: !18932)
!18959 = !DILocation(line: 590, column: 9, scope: !18932)
!18960 = !DILocation(line: 593, column: 13, scope: !18961)
!18961 = distinct !DILexicalBlock(scope: !18915, file: !1716, line: 593, column: 13)
!18962 = !DILocation(line: 593, column: 17, scope: !18961)
!18963 = !DILocation(line: 593, column: 13, scope: !18915)
!18964 = !DILocation(line: 594, column: 27, scope: !18961)
!18965 = !DILocation(line: 594, column: 31, scope: !18961)
!18966 = !DILocation(line: 594, column: 17, scope: !18961)
!18967 = !DILocation(line: 595, column: 14, scope: !18915)
!18968 = !DILocation(line: 595, column: 18, scope: !18915)
!18969 = !DILocation(line: 595, column: 9, scope: !18915)
!18970 = !DILocation(line: 596, column: 14, scope: !18915)
!18971 = !DILocation(line: 596, column: 18, scope: !18915)
!18972 = !DILocation(line: 596, column: 9, scope: !18915)
!18973 = !DILocation(line: 598, column: 13, scope: !18974)
!18974 = distinct !DILexicalBlock(scope: !18915, file: !1716, line: 598, column: 13)
!18975 = !DILocation(line: 598, column: 13, scope: !18915)
!18976 = !DILocation(line: 600, column: 22, scope: !18977)
!18977 = distinct !DILexicalBlock(scope: !18978, file: !1716, line: 600, column: 17)
!18978 = distinct !DILexicalBlock(scope: !18974, file: !1716, line: 599, column: 11)
!18979 = !DILocation(line: 600, column: 26, scope: !18977)
!18980 = !DILocation(line: 600, column: 19, scope: !18977)
!18981 = !DILocation(line: 600, column: 17, scope: !18978)
!18982 = !DILocation(line: 601, column: 26, scope: !18983)
!18983 = distinct !DILexicalBlock(scope: !18977, file: !1716, line: 601, column: 19)
!18984 = !DILocation(line: 601, column: 30, scope: !18983)
!18985 = !DILocation(line: 601, column: 19, scope: !18983)
!18986 = !DILocation(line: 601, column: 19, scope: !18977)
!18987 = !DILocation(line: 602, column: 31, scope: !18983)
!18988 = !DILocation(line: 602, column: 29, scope: !18983)
!18989 = !DILocation(line: 602, column: 17, scope: !18983)
!18990 = !DILocation(line: 601, column: 40, scope: !18983)
!18991 = !DILocation(line: 603, column: 11, scope: !18978)
!18992 = !DILocation(line: 604, column: 19, scope: !18993)
!18993 = distinct !DILexicalBlock(scope: !18974, file: !1716, line: 604, column: 18)
!18994 = !DILocation(line: 604, column: 18, scope: !18974)
!18995 = !DILocation(line: 607, column: 24, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18997, file: !1716, line: 607, column: 17)
!18997 = distinct !DILexicalBlock(scope: !18993, file: !1716, line: 605, column: 11)
!18998 = !DILocation(line: 607, column: 28, scope: !18996)
!18999 = !DILocation(line: 607, column: 17, scope: !18996)
!19000 = !DILocation(line: 607, column: 17, scope: !18997)
!19001 = !DILocation(line: 608, column: 29, scope: !18996)
!19002 = !DILocation(line: 608, column: 27, scope: !18996)
!19003 = !DILocation(line: 608, column: 15, scope: !18996)
!19004 = !DILocation(line: 612, column: 24, scope: !19005)
!19005 = distinct !DILexicalBlock(scope: !18997, file: !1716, line: 612, column: 17)
!19006 = !DILocation(line: 612, column: 28, scope: !19005)
!19007 = !DILocation(line: 612, column: 17, scope: !19005)
!19008 = !DILocation(line: 612, column: 17, scope: !18997)
!19009 = !DILocation(line: 613, column: 19, scope: !19010)
!19010 = distinct !DILexicalBlock(scope: !19005, file: !1716, line: 613, column: 19)
!19011 = !DILocation(line: 613, column: 31, scope: !19010)
!19012 = !DILocation(line: 613, column: 19, scope: !19005)
!19013 = !DILocation(line: 614, column: 31, scope: !19010)
!19014 = !DILocation(line: 614, column: 29, scope: !19010)
!19015 = !DILocation(line: 614, column: 17, scope: !19010)
!19016 = !DILocation(line: 613, column: 34, scope: !19010)
!19017 = !DILocation(line: 615, column: 11, scope: !18997)
!19018 = !DILocation(line: 617, column: 25, scope: !18915)
!19019 = !DILocation(line: 617, column: 29, scope: !18915)
!19020 = !DILocation(line: 617, column: 9, scope: !18915)
!19021 = !DILocation(line: 619, column: 13, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !18915, file: !1716, line: 619, column: 13)
!19023 = !DILocation(line: 619, column: 17, scope: !19022)
!19024 = !DILocation(line: 619, column: 13, scope: !18915)
!19025 = !DILocation(line: 620, column: 22, scope: !19022)
!19026 = !DILocation(line: 620, column: 26, scope: !19022)
!19027 = !DILocation(line: 620, column: 11, scope: !19022)
!19028 = !DILocation(line: 622, column: 19, scope: !18915)
!19029 = !DILocation(line: 622, column: 9, scope: !18915)
!19030 = !DILocation(line: 625, column: 14, scope: !18915)
!19031 = !DILocation(line: 625, column: 9, scope: !18915)
!19032 = !DILocation(line: 628, column: 13, scope: !19033)
!19033 = distinct !DILexicalBlock(scope: !18915, file: !1716, line: 628, column: 13)
!19034 = !DILocation(line: 628, column: 13, scope: !18915)
!19035 = !DILocation(line: 629, column: 17, scope: !19036)
!19036 = distinct !DILexicalBlock(scope: !19033, file: !1716, line: 628, column: 26)
!19037 = !DILocation(line: 630, column: 17, scope: !19036)
!19038 = !DILocation(line: 633, column: 9, scope: !18915)
!19039 = !DILocation(line: 634, column: 1, scope: !18915)
!19040 = distinct !DISubprogram(name: "fd_ring_clear", scope: !1716, file: !1716, line: 276, type: !19041, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!19041 = !DISubroutineType(types: !19042)
!19042 = !{null, !19043}
!19043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!19044 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !19040, file: !1716, line: 276, type: !19043)
!19045 = !DILocation(line: 276, column: 24, scope: !19040)
!19046 = !DILocation(line: 278, column: 3, scope: !19040)
!19047 = !DILocation(line: 278, column: 27, scope: !19040)
!19048 = !DILocation(line: 278, column: 13, scope: !19040)
!19049 = !DILocation(line: 278, column: 11, scope: !19040)
!19050 = !DILocalVariable(name: "fd", scope: !19051, file: !1716, line: 280, type: !7)
!19051 = distinct !DILexicalBlock(scope: !19040, file: !1716, line: 279, column: 5)
!19052 = !DILocation(line: 280, column: 11, scope: !19051)
!19053 = !DILocation(line: 280, column: 28, scope: !19051)
!19054 = !DILocation(line: 280, column: 16, scope: !19051)
!19055 = !DILocation(line: 281, column: 16, scope: !19056)
!19056 = distinct !DILexicalBlock(scope: !19051, file: !1716, line: 281, column: 11)
!19057 = !DILocation(line: 281, column: 13, scope: !19056)
!19058 = !DILocation(line: 281, column: 11, scope: !19051)
!19059 = !DILocation(line: 282, column: 16, scope: !19056)
!19060 = !DILocation(line: 282, column: 9, scope: !19056)
!19061 = distinct !{!19061, !19046, !19062}
!19062 = !DILocation(line: 283, column: 5, scope: !19040)
!19063 = !DILocation(line: 284, column: 1, scope: !19040)
!19064 = distinct !DISubprogram(name: "free_dir", scope: !1823, file: !1823, line: 151, type: !19065, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!19065 = !DISubroutineType(types: !19066)
!19066 = !{null, !1741}
!19067 = !DILocalVariable(name: "sp", arg: 1, scope: !19064, file: !1823, line: 151, type: !1741)
!19068 = !DILocation(line: 151, column: 16, scope: !19064)
!19069 = !DILocation(line: 153, column: 7, scope: !19070)
!19070 = distinct !DILexicalBlock(scope: !19064, file: !1823, line: 153, column: 7)
!19071 = !DILocation(line: 153, column: 11, scope: !19070)
!19072 = !DILocation(line: 153, column: 23, scope: !19070)
!19073 = !DILocation(line: 153, column: 7, scope: !19064)
!19074 = !DILocation(line: 155, column: 11, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19076, file: !1823, line: 155, column: 11)
!19076 = distinct !DILexicalBlock(scope: !19070, file: !1823, line: 154, column: 5)
!19077 = !DILocation(line: 155, column: 15, scope: !19075)
!19078 = !DILocation(line: 155, column: 25, scope: !19075)
!19079 = !DILocation(line: 155, column: 11, scope: !19076)
!19080 = !DILocation(line: 156, column: 20, scope: !19075)
!19081 = !DILocation(line: 156, column: 24, scope: !19075)
!19082 = !DILocation(line: 156, column: 34, scope: !19075)
!19083 = !DILocation(line: 156, column: 9, scope: !19075)
!19084 = !DILocation(line: 157, column: 5, scope: !19076)
!19085 = !DILocation(line: 159, column: 11, scope: !19070)
!19086 = !DILocation(line: 159, column: 15, scope: !19070)
!19087 = !DILocation(line: 159, column: 25, scope: !19070)
!19088 = !DILocation(line: 159, column: 5, scope: !19070)
!19089 = !DILocation(line: 160, column: 1, scope: !19064)
!19090 = distinct !DISubprogram(name: "rpl_fts_read", scope: !1716, file: !1716, line: 852, type: !19091, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!19091 = !DISubroutineType(types: !19092)
!19092 = !{!1819, !1741}
!19093 = !DILocalVariable(name: "sp", arg: 1, scope: !19090, file: !1716, line: 852, type: !1741)
!19094 = !DILocation(line: 852, column: 25, scope: !19090)
!19095 = !DILocalVariable(name: "p", scope: !19090, file: !1716, line: 854, type: !1819)
!19096 = !DILocation(line: 854, column: 26, scope: !19090)
!19097 = !DILocalVariable(name: "tmp", scope: !19090, file: !1716, line: 854, type: !1819)
!19098 = !DILocation(line: 854, column: 30, scope: !19090)
!19099 = !DILocalVariable(name: "instr", scope: !19090, file: !1716, line: 855, type: !33)
!19100 = !DILocation(line: 855, column: 37, scope: !19090)
!19101 = !DILocalVariable(name: "t", scope: !19090, file: !1716, line: 856, type: !9)
!19102 = !DILocation(line: 856, column: 24, scope: !19090)
!19103 = !DILocation(line: 859, column: 13, scope: !19104)
!19104 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 859, column: 13)
!19105 = !DILocation(line: 859, column: 17, scope: !19104)
!19106 = !DILocation(line: 859, column: 25, scope: !19104)
!19107 = !DILocation(line: 859, column: 33, scope: !19104)
!19108 = !DILocation(line: 859, column: 36, scope: !19104)
!19109 = !DILocation(line: 859, column: 13, scope: !19090)
!19110 = !DILocation(line: 860, column: 17, scope: !19104)
!19111 = !DILocation(line: 863, column: 13, scope: !19090)
!19112 = !DILocation(line: 863, column: 17, scope: !19090)
!19113 = !DILocation(line: 863, column: 11, scope: !19090)
!19114 = !DILocation(line: 866, column: 17, scope: !19090)
!19115 = !DILocation(line: 866, column: 20, scope: !19090)
!19116 = !DILocation(line: 866, column: 15, scope: !19090)
!19117 = !DILocation(line: 867, column: 9, scope: !19090)
!19118 = !DILocation(line: 867, column: 12, scope: !19090)
!19119 = !DILocation(line: 867, column: 22, scope: !19090)
!19120 = !DILocation(line: 870, column: 13, scope: !19121)
!19121 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 870, column: 13)
!19122 = !DILocation(line: 870, column: 19, scope: !19121)
!19123 = !DILocation(line: 870, column: 13, scope: !19090)
!19124 = !DILocation(line: 871, column: 40, scope: !19125)
!19125 = distinct !DILexicalBlock(scope: !19121, file: !1716, line: 870, column: 33)
!19126 = !DILocation(line: 871, column: 44, scope: !19125)
!19127 = !DILocation(line: 871, column: 31, scope: !19125)
!19128 = !DILocation(line: 871, column: 17, scope: !19125)
!19129 = !DILocation(line: 871, column: 20, scope: !19125)
!19130 = !DILocation(line: 871, column: 29, scope: !19125)
!19131 = !DILocation(line: 872, column: 25, scope: !19125)
!19132 = !DILocation(line: 872, column: 17, scope: !19125)
!19133 = !DILocation(line: 883, column: 13, scope: !19134)
!19134 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 883, column: 13)
!19135 = !DILocation(line: 883, column: 19, scope: !19134)
!19136 = !DILocation(line: 883, column: 33, scope: !19134)
!19137 = !DILocation(line: 884, column: 14, scope: !19134)
!19138 = !DILocation(line: 884, column: 17, scope: !19134)
!19139 = !DILocation(line: 884, column: 26, scope: !19134)
!19140 = !DILocation(line: 884, column: 36, scope: !19134)
!19141 = !DILocation(line: 884, column: 39, scope: !19134)
!19142 = !DILocation(line: 884, column: 42, scope: !19134)
!19143 = !DILocation(line: 884, column: 51, scope: !19134)
!19144 = !DILocation(line: 883, column: 13, scope: !19090)
!19145 = !DILocation(line: 885, column: 40, scope: !19146)
!19146 = distinct !DILexicalBlock(scope: !19134, file: !1716, line: 884, column: 67)
!19147 = !DILocation(line: 885, column: 44, scope: !19146)
!19148 = !DILocation(line: 885, column: 31, scope: !19146)
!19149 = !DILocation(line: 885, column: 17, scope: !19146)
!19150 = !DILocation(line: 885, column: 20, scope: !19146)
!19151 = !DILocation(line: 885, column: 29, scope: !19146)
!19152 = !DILocation(line: 886, column: 21, scope: !19153)
!19153 = distinct !DILexicalBlock(scope: !19146, file: !1716, line: 886, column: 21)
!19154 = !DILocation(line: 886, column: 24, scope: !19153)
!19155 = !DILocation(line: 886, column: 33, scope: !19153)
!19156 = !DILocation(line: 886, column: 42, scope: !19153)
!19157 = !DILocation(line: 886, column: 46, scope: !19153)
!19158 = !DILocation(line: 886, column: 21, scope: !19146)
!19159 = !DILocation(line: 887, column: 54, scope: !19160)
!19160 = distinct !DILexicalBlock(scope: !19161, file: !1716, line: 887, column: 29)
!19161 = distinct !DILexicalBlock(scope: !19153, file: !1716, line: 886, column: 66)
!19162 = !DILocation(line: 887, column: 45, scope: !19160)
!19163 = !DILocation(line: 887, column: 30, scope: !19160)
!19164 = !DILocation(line: 887, column: 33, scope: !19160)
!19165 = !DILocation(line: 887, column: 43, scope: !19160)
!19166 = !DILocation(line: 887, column: 64, scope: !19160)
!19167 = !DILocation(line: 887, column: 29, scope: !19161)
!19168 = !DILocation(line: 888, column: 48, scope: !19169)
!19169 = distinct !DILexicalBlock(scope: !19160, file: !1716, line: 887, column: 69)
!19170 = !DILocation(line: 888, column: 33, scope: !19169)
!19171 = !DILocation(line: 888, column: 36, scope: !19169)
!19172 = !DILocation(line: 888, column: 46, scope: !19169)
!19173 = !DILocation(line: 889, column: 33, scope: !19169)
!19174 = !DILocation(line: 889, column: 36, scope: !19169)
!19175 = !DILocation(line: 889, column: 45, scope: !19169)
!19176 = !DILocation(line: 890, column: 25, scope: !19169)
!19177 = !DILocation(line: 891, column: 33, scope: !19160)
!19178 = !DILocation(line: 891, column: 36, scope: !19160)
!19179 = !DILocation(line: 891, column: 46, scope: !19160)
!19180 = !DILocation(line: 892, column: 17, scope: !19161)
!19181 = !DILocation(line: 893, column: 17, scope: !19146)
!19182 = !DILocation(line: 897, column: 13, scope: !19183)
!19183 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 897, column: 13)
!19184 = !DILocation(line: 897, column: 16, scope: !19183)
!19185 = !DILocation(line: 897, column: 25, scope: !19183)
!19186 = !DILocation(line: 897, column: 13, scope: !19090)
!19187 = !DILocation(line: 899, column: 21, scope: !19188)
!19188 = distinct !DILexicalBlock(scope: !19189, file: !1716, line: 899, column: 21)
!19189 = distinct !DILexicalBlock(scope: !19183, file: !1716, line: 897, column: 35)
!19190 = !DILocation(line: 899, column: 27, scope: !19188)
!19191 = !DILocation(line: 899, column: 39, scope: !19188)
!19192 = !DILocation(line: 900, column: 22, scope: !19188)
!19193 = !DILocation(line: 900, column: 38, scope: !19188)
!19194 = !DILocation(line: 900, column: 41, scope: !19188)
!19195 = !DILocation(line: 900, column: 44, scope: !19188)
!19196 = !DILocation(line: 900, column: 55, scope: !19188)
!19197 = !DILocation(line: 900, column: 65, scope: !19188)
!19198 = !DILocation(line: 900, column: 69, scope: !19188)
!19199 = !DILocation(line: 900, column: 62, scope: !19188)
!19200 = !DILocation(line: 899, column: 21, scope: !19189)
!19201 = !DILocation(line: 901, column: 29, scope: !19202)
!19202 = distinct !DILexicalBlock(scope: !19203, file: !1716, line: 901, column: 29)
!19203 = distinct !DILexicalBlock(scope: !19188, file: !1716, line: 900, column: 79)
!19204 = !DILocation(line: 901, column: 32, scope: !19202)
!19205 = !DILocation(line: 901, column: 42, scope: !19202)
!19206 = !DILocation(line: 901, column: 29, scope: !19203)
!19207 = !DILocation(line: 902, column: 45, scope: !19202)
!19208 = !DILocation(line: 902, column: 48, scope: !19202)
!19209 = !DILocation(line: 902, column: 39, scope: !19202)
!19210 = !DILocation(line: 902, column: 33, scope: !19202)
!19211 = !DILocation(line: 903, column: 29, scope: !19212)
!19212 = distinct !DILexicalBlock(scope: !19203, file: !1716, line: 903, column: 29)
!19213 = !DILocation(line: 903, column: 33, scope: !19212)
!19214 = !DILocation(line: 903, column: 29, scope: !19203)
!19215 = !DILocation(line: 904, column: 43, scope: !19216)
!19216 = distinct !DILexicalBlock(scope: !19212, file: !1716, line: 903, column: 44)
!19217 = !DILocation(line: 904, column: 47, scope: !19216)
!19218 = !DILocation(line: 904, column: 33, scope: !19216)
!19219 = !DILocation(line: 905, column: 33, scope: !19216)
!19220 = !DILocation(line: 905, column: 37, scope: !19216)
!19221 = !DILocation(line: 905, column: 47, scope: !19216)
!19222 = !DILocation(line: 906, column: 25, scope: !19216)
!19223 = !DILocation(line: 907, column: 25, scope: !19203)
!19224 = !DILocation(line: 907, column: 28, scope: !19203)
!19225 = !DILocation(line: 907, column: 37, scope: !19203)
!19226 = !DILocation(line: 908, column: 25, scope: !19203)
!19227 = !DILocation(line: 908, column: 25, scope: !19228)
!19228 = distinct !DILexicalBlock(scope: !19203, file: !1716, line: 908, column: 25)
!19229 = !DILocation(line: 909, column: 33, scope: !19203)
!19230 = !DILocation(line: 909, column: 25, scope: !19203)
!19231 = !DILocation(line: 913, column: 21, scope: !19232)
!19232 = distinct !DILexicalBlock(scope: !19189, file: !1716, line: 913, column: 21)
!19233 = !DILocation(line: 913, column: 25, scope: !19232)
!19234 = !DILocation(line: 913, column: 35, scope: !19232)
!19235 = !DILocation(line: 913, column: 43, scope: !19232)
!19236 = !DILocation(line: 913, column: 46, scope: !19232)
!19237 = !DILocation(line: 913, column: 21, scope: !19189)
!19238 = !DILocation(line: 914, column: 25, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19232, file: !1716, line: 913, column: 67)
!19240 = !DILocation(line: 915, column: 35, scope: !19239)
!19241 = !DILocation(line: 915, column: 39, scope: !19239)
!19242 = !DILocation(line: 915, column: 25, scope: !19239)
!19243 = !DILocation(line: 916, column: 25, scope: !19239)
!19244 = !DILocation(line: 916, column: 29, scope: !19239)
!19245 = !DILocation(line: 916, column: 39, scope: !19239)
!19246 = !DILocation(line: 917, column: 17, scope: !19239)
!19247 = !DILocation(line: 931, column: 21, scope: !19248)
!19248 = distinct !DILexicalBlock(scope: !19189, file: !1716, line: 931, column: 21)
!19249 = !DILocation(line: 931, column: 25, scope: !19248)
!19250 = !DILocation(line: 931, column: 35, scope: !19248)
!19251 = !DILocation(line: 931, column: 21, scope: !19189)
!19252 = !DILocation(line: 932, column: 48, scope: !19253)
!19253 = distinct !DILexicalBlock(scope: !19254, file: !1716, line: 932, column: 29)
!19254 = distinct !DILexicalBlock(scope: !19248, file: !1716, line: 931, column: 44)
!19255 = !DILocation(line: 932, column: 52, scope: !19253)
!19256 = !DILocation(line: 932, column: 59, scope: !19253)
!19257 = !DILocation(line: 932, column: 62, scope: !19253)
!19258 = !DILocation(line: 932, column: 29, scope: !19253)
!19259 = !DILocation(line: 932, column: 29, scope: !19254)
!19260 = !DILocation(line: 933, column: 48, scope: !19261)
!19261 = distinct !DILexicalBlock(scope: !19253, file: !1716, line: 932, column: 76)
!19262 = !DILocation(line: 933, column: 33, scope: !19261)
!19263 = !DILocation(line: 933, column: 36, scope: !19261)
!19264 = !DILocation(line: 933, column: 46, scope: !19261)
!19265 = !DILocation(line: 934, column: 33, scope: !19261)
!19266 = !DILocation(line: 934, column: 36, scope: !19261)
!19267 = !DILocation(line: 934, column: 46, scope: !19261)
!19268 = !DILocation(line: 935, column: 42, scope: !19269)
!19269 = distinct !DILexicalBlock(scope: !19261, file: !1716, line: 935, column: 33)
!19270 = !DILocation(line: 935, column: 46, scope: !19269)
!19271 = !DILocation(line: 935, column: 40, scope: !19269)
!19272 = !DILocation(line: 935, column: 38, scope: !19269)
!19273 = !DILocation(line: 935, column: 57, scope: !19274)
!19274 = distinct !DILexicalBlock(scope: !19269, file: !1716, line: 935, column: 33)
!19275 = !DILocation(line: 935, column: 59, scope: !19274)
!19276 = !DILocation(line: 935, column: 33, scope: !19269)
!19277 = !DILocation(line: 938, column: 45, scope: !19274)
!19278 = !DILocation(line: 938, column: 48, scope: !19274)
!19279 = !DILocation(line: 938, column: 60, scope: !19274)
!19280 = !DILocation(line: 937, column: 41, scope: !19274)
!19281 = !DILocation(line: 937, column: 44, scope: !19274)
!19282 = !DILocation(line: 937, column: 56, scope: !19274)
!19283 = !DILocation(line: 936, column: 42, scope: !19274)
!19284 = !DILocation(line: 936, column: 45, scope: !19274)
!19285 = !DILocation(line: 936, column: 40, scope: !19274)
!19286 = !DILocation(line: 935, column: 33, scope: !19274)
!19287 = distinct !{!19287, !19276, !19288}
!19288 = !DILocation(line: 938, column: 60, scope: !19269)
!19289 = !DILocation(line: 939, column: 25, scope: !19261)
!19290 = !DILocation(line: 940, column: 17, scope: !19254)
!19291 = !DILocation(line: 940, column: 55, scope: !19292)
!19292 = distinct !DILexicalBlock(scope: !19248, file: !1716, line: 940, column: 28)
!19293 = !DILocation(line: 940, column: 45, scope: !19292)
!19294 = !DILocation(line: 940, column: 29, scope: !19292)
!19295 = !DILocation(line: 940, column: 33, scope: !19292)
!19296 = !DILocation(line: 940, column: 43, scope: !19292)
!19297 = !DILocation(line: 940, column: 67, scope: !19292)
!19298 = !DILocation(line: 940, column: 28, scope: !19248)
!19299 = !DILocation(line: 941, column: 29, scope: !19300)
!19300 = distinct !DILexicalBlock(scope: !19301, file: !1716, line: 941, column: 29)
!19301 = distinct !DILexicalBlock(scope: !19292, file: !1716, line: 940, column: 76)
!19302 = !DILocation(line: 941, column: 29, scope: !19301)
!19303 = !DILocation(line: 942, column: 33, scope: !19300)
!19304 = !DILocation(line: 946, column: 29, scope: !19305)
!19305 = distinct !DILexicalBlock(scope: !19301, file: !1716, line: 946, column: 29)
!19306 = !DILocation(line: 946, column: 32, scope: !19305)
!19307 = !DILocation(line: 946, column: 42, scope: !19305)
!19308 = !DILocation(line: 946, column: 45, scope: !19305)
!19309 = !DILocation(line: 946, column: 48, scope: !19305)
!19310 = !DILocation(line: 946, column: 57, scope: !19305)
!19311 = !DILocation(line: 946, column: 29, scope: !19301)
!19312 = !DILocation(line: 947, column: 33, scope: !19305)
!19313 = !DILocation(line: 947, column: 36, scope: !19305)
!19314 = !DILocation(line: 947, column: 45, scope: !19305)
!19315 = !DILocation(line: 948, column: 25, scope: !19301)
!19316 = !DILocation(line: 948, column: 25, scope: !19317)
!19317 = distinct !DILexicalBlock(scope: !19301, file: !1716, line: 948, column: 25)
!19318 = !DILocation(line: 949, column: 33, scope: !19301)
!19319 = !DILocation(line: 949, column: 25, scope: !19301)
!19320 = !DILocation(line: 951, column: 21, scope: !19189)
!19321 = !DILocation(line: 951, column: 25, scope: !19189)
!19322 = !DILocation(line: 951, column: 19, scope: !19189)
!19323 = !DILocation(line: 952, column: 17, scope: !19189)
!19324 = !DILocation(line: 952, column: 21, scope: !19189)
!19325 = !DILocation(line: 952, column: 31, scope: !19189)
!19326 = !DILocation(line: 953, column: 17, scope: !19189)
!19327 = !DILocation(line: 897, column: 28, scope: !19183)
!19328 = !DILabel(scope: !19090, name: "next", file: !1716, line: 957)
!19329 = !DILocation(line: 957, column: 1, scope: !19090)
!19330 = !DILocation(line: 957, column: 15, scope: !19090)
!19331 = !DILocation(line: 957, column: 13, scope: !19090)
!19332 = !DILocation(line: 962, column: 13, scope: !19333)
!19333 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 962, column: 13)
!19334 = !DILocation(line: 962, column: 16, scope: !19333)
!19335 = !DILocation(line: 962, column: 25, scope: !19333)
!19336 = !DILocation(line: 962, column: 33, scope: !19333)
!19337 = !DILocation(line: 962, column: 36, scope: !19333)
!19338 = !DILocation(line: 962, column: 39, scope: !19333)
!19339 = !DILocation(line: 962, column: 51, scope: !19333)
!19340 = !DILocation(line: 962, column: 13, scope: !19090)
!19341 = !DILocation(line: 964, column: 17, scope: !19342)
!19342 = distinct !DILexicalBlock(scope: !19333, file: !1716, line: 963, column: 11)
!19343 = !DILocation(line: 964, column: 22, scope: !19342)
!19344 = !DILocation(line: 964, column: 15, scope: !19342)
!19345 = !DILocation(line: 965, column: 27, scope: !19342)
!19346 = !DILocation(line: 965, column: 13, scope: !19342)
!19347 = !DILocation(line: 965, column: 17, scope: !19342)
!19348 = !DILocation(line: 965, column: 25, scope: !19342)
!19349 = !DILocation(line: 966, column: 13, scope: !19342)
!19350 = !DILocation(line: 966, column: 17, scope: !19342)
!19351 = !DILocation(line: 966, column: 26, scope: !19342)
!19352 = !DILocation(line: 966, column: 29, scope: !19342)
!19353 = !DILocation(line: 966, column: 42, scope: !19342)
!19354 = !DILocation(line: 968, column: 33, scope: !19355)
!19355 = distinct !DILexicalBlock(scope: !19342, file: !1716, line: 968, column: 17)
!19356 = !DILocation(line: 968, column: 22, scope: !19355)
!19357 = !DILocation(line: 968, column: 20, scope: !19355)
!19358 = !DILocation(line: 968, column: 45, scope: !19355)
!19359 = !DILocation(line: 968, column: 17, scope: !19342)
!19360 = !DILocation(line: 970, column: 21, scope: !19361)
!19361 = distinct !DILexicalBlock(scope: !19362, file: !1716, line: 970, column: 21)
!19362 = distinct !DILexicalBlock(scope: !19355, file: !1716, line: 969, column: 15)
!19363 = !DILocation(line: 970, column: 21, scope: !19362)
!19364 = !DILocation(line: 971, column: 19, scope: !19361)
!19365 = !DILocation(line: 972, column: 17, scope: !19362)
!19366 = !DILocation(line: 975, column: 18, scope: !19342)
!19367 = !DILocation(line: 975, column: 13, scope: !19342)
!19368 = !DILocation(line: 976, column: 13, scope: !19342)
!19369 = !DILocation(line: 979, column: 18, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 979, column: 13)
!19371 = !DILocation(line: 979, column: 21, scope: !19370)
!19372 = !DILocation(line: 979, column: 16, scope: !19370)
!19373 = !DILocation(line: 979, column: 31, scope: !19370)
!19374 = !DILocation(line: 979, column: 13, scope: !19090)
!19375 = !DILocation(line: 980, column: 31, scope: !19376)
!19376 = distinct !DILexicalBlock(scope: !19370, file: !1716, line: 979, column: 40)
!19377 = !DILocation(line: 980, column: 17, scope: !19376)
!19378 = !DILocation(line: 980, column: 21, scope: !19376)
!19379 = !DILocation(line: 980, column: 29, scope: !19376)
!19380 = !DILocation(line: 981, column: 22, scope: !19376)
!19381 = !DILocation(line: 981, column: 17, scope: !19376)
!19382 = !DILocation(line: 988, column: 21, scope: !19383)
!19383 = distinct !DILexicalBlock(scope: !19376, file: !1716, line: 988, column: 21)
!19384 = !DILocation(line: 988, column: 24, scope: !19383)
!19385 = !DILocation(line: 988, column: 34, scope: !19383)
!19386 = !DILocation(line: 988, column: 21, scope: !19376)
!19387 = !DILocation(line: 989, column: 49, scope: !19388)
!19388 = distinct !DILexicalBlock(scope: !19389, file: !1716, line: 989, column: 29)
!19389 = distinct !DILexicalBlock(scope: !19383, file: !1716, line: 988, column: 52)
!19390 = !DILocation(line: 989, column: 29, scope: !19388)
!19391 = !DILocation(line: 989, column: 29, scope: !19389)
!19392 = !DILocation(line: 990, column: 33, scope: !19393)
!19393 = distinct !DILexicalBlock(scope: !19388, file: !1716, line: 989, column: 54)
!19394 = !DILocation(line: 991, column: 33, scope: !19393)
!19395 = !DILocation(line: 993, column: 34, scope: !19389)
!19396 = !DILocation(line: 993, column: 25, scope: !19389)
!19397 = !DILocation(line: 994, column: 34, scope: !19389)
!19398 = !DILocation(line: 994, column: 38, scope: !19389)
!19399 = !DILocation(line: 994, column: 25, scope: !19389)
!19400 = !DILocation(line: 995, column: 35, scope: !19389)
!19401 = !DILocation(line: 995, column: 25, scope: !19389)
!19402 = !DILocation(line: 996, column: 25, scope: !19389)
!19403 = !DILocation(line: 1004, column: 21, scope: !19404)
!19404 = distinct !DILexicalBlock(scope: !19376, file: !1716, line: 1004, column: 21)
!19405 = !DILocation(line: 1004, column: 24, scope: !19404)
!19406 = !DILocation(line: 1004, column: 34, scope: !19404)
!19407 = !DILocation(line: 1004, column: 21, scope: !19376)
!19408 = !DILocation(line: 1005, column: 25, scope: !19404)
!19409 = !DILocation(line: 1006, column: 21, scope: !19410)
!19410 = distinct !DILexicalBlock(scope: !19376, file: !1716, line: 1006, column: 21)
!19411 = !DILocation(line: 1006, column: 24, scope: !19410)
!19412 = !DILocation(line: 1006, column: 34, scope: !19410)
!19413 = !DILocation(line: 1006, column: 21, scope: !19376)
!19414 = !DILocation(line: 1007, column: 48, scope: !19415)
!19415 = distinct !DILexicalBlock(scope: !19410, file: !1716, line: 1006, column: 49)
!19416 = !DILocation(line: 1007, column: 52, scope: !19415)
!19417 = !DILocation(line: 1007, column: 39, scope: !19415)
!19418 = !DILocation(line: 1007, column: 25, scope: !19415)
!19419 = !DILocation(line: 1007, column: 28, scope: !19415)
!19420 = !DILocation(line: 1007, column: 37, scope: !19415)
!19421 = !DILocation(line: 1008, column: 29, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19415, file: !1716, line: 1008, column: 29)
!19423 = !DILocation(line: 1008, column: 32, scope: !19422)
!19424 = !DILocation(line: 1008, column: 41, scope: !19422)
!19425 = !DILocation(line: 1008, column: 50, scope: !19422)
!19426 = !DILocation(line: 1008, column: 54, scope: !19422)
!19427 = !DILocation(line: 1008, column: 29, scope: !19415)
!19428 = !DILocation(line: 1009, column: 62, scope: !19429)
!19429 = distinct !DILexicalBlock(scope: !19430, file: !1716, line: 1009, column: 37)
!19430 = distinct !DILexicalBlock(scope: !19422, file: !1716, line: 1008, column: 74)
!19431 = !DILocation(line: 1009, column: 53, scope: !19429)
!19432 = !DILocation(line: 1009, column: 38, scope: !19429)
!19433 = !DILocation(line: 1009, column: 41, scope: !19429)
!19434 = !DILocation(line: 1009, column: 51, scope: !19429)
!19435 = !DILocation(line: 1009, column: 72, scope: !19429)
!19436 = !DILocation(line: 1009, column: 37, scope: !19430)
!19437 = !DILocation(line: 1010, column: 56, scope: !19438)
!19438 = distinct !DILexicalBlock(scope: !19429, file: !1716, line: 1009, column: 77)
!19439 = !DILocation(line: 1010, column: 41, scope: !19438)
!19440 = !DILocation(line: 1010, column: 44, scope: !19438)
!19441 = !DILocation(line: 1010, column: 54, scope: !19438)
!19442 = !DILocation(line: 1011, column: 41, scope: !19438)
!19443 = !DILocation(line: 1011, column: 44, scope: !19438)
!19444 = !DILocation(line: 1011, column: 53, scope: !19438)
!19445 = !DILocation(line: 1012, column: 33, scope: !19438)
!19446 = !DILocation(line: 1013, column: 41, scope: !19429)
!19447 = !DILocation(line: 1013, column: 44, scope: !19429)
!19448 = !DILocation(line: 1013, column: 54, scope: !19429)
!19449 = !DILocation(line: 1014, column: 25, scope: !19430)
!19450 = !DILocation(line: 1015, column: 25, scope: !19415)
!19451 = !DILocation(line: 1015, column: 28, scope: !19415)
!19452 = !DILocation(line: 1015, column: 38, scope: !19415)
!19453 = !DILocation(line: 1016, column: 17, scope: !19415)
!19454 = !DILocation(line: 1006, column: 37, scope: !19410)
!19455 = !DILabel(scope: !19376, name: "name", file: !1716, line: 1018)
!19456 = !DILocation(line: 1018, column: 1, scope: !19376)
!19457 = !DILocation(line: 1018, column: 21, scope: !19376)
!19458 = !DILocation(line: 1018, column: 25, scope: !19376)
!19459 = !DILocation(line: 1018, column: 36, scope: !19376)
!19460 = !DILocation(line: 1018, column: 34, scope: !19376)
!19461 = !DILocation(line: 1018, column: 19, scope: !19376)
!19462 = !DILocation(line: 1019, column: 19, scope: !19376)
!19463 = !DILocation(line: 1019, column: 22, scope: !19376)
!19464 = !DILocation(line: 1020, column: 25, scope: !19376)
!19465 = !DILocation(line: 1020, column: 28, scope: !19376)
!19466 = !DILocation(line: 1020, column: 31, scope: !19376)
!19467 = !DILocation(line: 1020, column: 17, scope: !19376)
!19468 = !DILocation(line: 1020, column: 41, scope: !19376)
!19469 = !DILocation(line: 1020, column: 44, scope: !19376)
!19470 = !DILocation(line: 1020, column: 56, scope: !19376)
!19471 = !DILabel(scope: !19376, name: "check_for_dir", file: !1716, line: 1021)
!19472 = !DILocation(line: 1021, column: 1, scope: !19376)
!19473 = !DILocation(line: 1022, column: 31, scope: !19376)
!19474 = !DILocation(line: 1022, column: 17, scope: !19376)
!19475 = !DILocation(line: 1022, column: 21, scope: !19376)
!19476 = !DILocation(line: 1022, column: 29, scope: !19376)
!19477 = !DILocation(line: 1023, column: 21, scope: !19478)
!19478 = distinct !DILexicalBlock(scope: !19376, file: !1716, line: 1023, column: 21)
!19479 = !DILocation(line: 1023, column: 24, scope: !19478)
!19480 = !DILocation(line: 1023, column: 33, scope: !19478)
!19481 = !DILocation(line: 1023, column: 21, scope: !19376)
!19482 = !DILocation(line: 1025, column: 25, scope: !19483)
!19483 = distinct !DILexicalBlock(scope: !19484, file: !1716, line: 1025, column: 25)
!19484 = distinct !DILexicalBlock(scope: !19478, file: !1716, line: 1024, column: 19)
!19485 = !DILocation(line: 1025, column: 28, scope: !19483)
!19486 = !DILocation(line: 1025, column: 39, scope: !19483)
!19487 = !DILocation(line: 1025, column: 47, scope: !19483)
!19488 = !DILocation(line: 1025, column: 25, scope: !19484)
!19489 = !DILocalVariable(name: "parent", scope: !19490, file: !1716, line: 1027, type: !1819)
!19490 = distinct !DILexicalBlock(scope: !19483, file: !1716, line: 1026, column: 23)
!19491 = !DILocation(line: 1027, column: 33, scope: !19490)
!19492 = !DILocation(line: 1027, column: 42, scope: !19490)
!19493 = !DILocation(line: 1027, column: 45, scope: !19490)
!19494 = !DILocation(line: 1028, column: 29, scope: !19495)
!19495 = distinct !DILexicalBlock(scope: !19490, file: !1716, line: 1028, column: 29)
!19496 = !DILocation(line: 1028, column: 37, scope: !19495)
!19497 = !DILocation(line: 1028, column: 58, scope: !19495)
!19498 = !DILocation(line: 1029, column: 29, scope: !19495)
!19499 = !DILocation(line: 1029, column: 32, scope: !19495)
!19500 = !DILocation(line: 1030, column: 29, scope: !19495)
!19501 = !DILocation(line: 1030, column: 32, scope: !19495)
!19502 = !DILocation(line: 1031, column: 29, scope: !19495)
!19503 = !DILocation(line: 1031, column: 52, scope: !19495)
!19504 = !DILocation(line: 1031, column: 60, scope: !19495)
!19505 = !DILocation(line: 1031, column: 64, scope: !19495)
!19506 = !DILocation(line: 1031, column: 33, scope: !19495)
!19507 = !DILocation(line: 1032, column: 33, scope: !19495)
!19508 = !DILocation(line: 1028, column: 29, scope: !19490)
!19509 = !DILocation(line: 1035, column: 27, scope: !19510)
!19510 = distinct !DILexicalBlock(scope: !19495, file: !1716, line: 1033, column: 27)
!19511 = !DILocation(line: 1038, column: 52, scope: !19512)
!19512 = distinct !DILexicalBlock(scope: !19495, file: !1716, line: 1037, column: 27)
!19513 = !DILocation(line: 1038, column: 56, scope: !19512)
!19514 = !DILocation(line: 1038, column: 43, scope: !19512)
!19515 = !DILocation(line: 1038, column: 29, scope: !19512)
!19516 = !DILocation(line: 1038, column: 32, scope: !19512)
!19517 = !DILocation(line: 1038, column: 41, scope: !19512)
!19518 = !DILocation(line: 1039, column: 33, scope: !19519)
!19519 = distinct !DILexicalBlock(scope: !19512, file: !1716, line: 1039, column: 33)
!19520 = !DILocation(line: 1040, column: 33, scope: !19519)
!19521 = !DILocation(line: 1040, column: 36, scope: !19519)
!19522 = !DILocation(line: 1040, column: 39, scope: !19519)
!19523 = !DILocation(line: 1040, column: 49, scope: !19519)
!19524 = !DILocation(line: 1041, column: 33, scope: !19519)
!19525 = !DILocation(line: 1041, column: 40, scope: !19519)
!19526 = !DILocation(line: 1041, column: 48, scope: !19519)
!19527 = !DILocation(line: 1041, column: 38, scope: !19519)
!19528 = !DILocation(line: 1042, column: 33, scope: !19519)
!19529 = !DILocation(line: 1042, column: 36, scope: !19519)
!19530 = !DILocation(line: 1042, column: 44, scope: !19519)
!19531 = !DILocation(line: 1042, column: 65, scope: !19519)
!19532 = !DILocation(line: 1039, column: 33, scope: !19512)
!19533 = !DILocation(line: 1043, column: 35, scope: !19519)
!19534 = !DILocation(line: 1043, column: 43, scope: !19519)
!19535 = !DILocation(line: 1043, column: 63, scope: !19519)
!19536 = !DILocation(line: 1045, column: 23, scope: !19490)
!19537 = !DILocation(line: 1047, column: 23, scope: !19483)
!19538 = !DILocation(line: 1047, column: 23, scope: !19539)
!19539 = distinct !DILexicalBlock(scope: !19540, file: !1716, line: 1047, column: 23)
!19540 = distinct !DILexicalBlock(scope: !19483, file: !1716, line: 1047, column: 23)
!19541 = !DILocation(line: 1047, column: 23, scope: !19540)
!19542 = !DILocation(line: 1048, column: 19, scope: !19484)
!19543 = !DILocation(line: 1050, column: 21, scope: !19544)
!19544 = distinct !DILexicalBlock(scope: !19376, file: !1716, line: 1050, column: 21)
!19545 = !DILocation(line: 1050, column: 24, scope: !19544)
!19546 = !DILocation(line: 1050, column: 33, scope: !19544)
!19547 = !DILocation(line: 1050, column: 21, scope: !19376)
!19548 = !DILocation(line: 1055, column: 25, scope: !19549)
!19549 = distinct !DILexicalBlock(scope: !19550, file: !1716, line: 1055, column: 25)
!19550 = distinct !DILexicalBlock(scope: !19544, file: !1716, line: 1051, column: 19)
!19551 = !DILocation(line: 1055, column: 28, scope: !19549)
!19552 = !DILocation(line: 1055, column: 38, scope: !19549)
!19553 = !DILocation(line: 1055, column: 25, scope: !19550)
!19554 = !DILocation(line: 1056, column: 37, scope: !19549)
!19555 = !DILocation(line: 1056, column: 40, scope: !19549)
!19556 = !DILocation(line: 1056, column: 51, scope: !19549)
!19557 = !DILocation(line: 1056, column: 23, scope: !19549)
!19558 = !DILocation(line: 1056, column: 27, scope: !19549)
!19559 = !DILocation(line: 1056, column: 35, scope: !19549)
!19560 = !DILocation(line: 1058, column: 38, scope: !19561)
!19561 = distinct !DILexicalBlock(scope: !19550, file: !1716, line: 1058, column: 25)
!19562 = !DILocation(line: 1058, column: 42, scope: !19561)
!19563 = !DILocation(line: 1058, column: 27, scope: !19561)
!19564 = !DILocation(line: 1058, column: 25, scope: !19550)
!19565 = !DILocation(line: 1060, column: 25, scope: !19566)
!19566 = distinct !DILexicalBlock(scope: !19561, file: !1716, line: 1059, column: 23)
!19567 = !DILocation(line: 1061, column: 25, scope: !19566)
!19568 = !DILocation(line: 1063, column: 19, scope: !19550)
!19569 = !DILocation(line: 1064, column: 24, scope: !19376)
!19570 = !DILocation(line: 1064, column: 17, scope: !19376)
!19571 = !DILocation(line: 979, column: 34, scope: !19370)
!19572 = !DILabel(scope: !19090, name: "cd_dot_dot", file: !1716, line: 1066)
!19573 = !DILocation(line: 1066, column: 1, scope: !19090)
!19574 = !DILocation(line: 1069, column: 13, scope: !19090)
!19575 = !DILocation(line: 1069, column: 18, scope: !19090)
!19576 = !DILocation(line: 1069, column: 11, scope: !19090)
!19577 = !DILocation(line: 1070, column: 23, scope: !19090)
!19578 = !DILocation(line: 1070, column: 9, scope: !19090)
!19579 = !DILocation(line: 1070, column: 13, scope: !19090)
!19580 = !DILocation(line: 1070, column: 21, scope: !19090)
!19581 = !DILocation(line: 1071, column: 14, scope: !19090)
!19582 = !DILocation(line: 1071, column: 9, scope: !19090)
!19583 = !DILocation(line: 1073, column: 13, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 1073, column: 13)
!19585 = !DILocation(line: 1073, column: 16, scope: !19584)
!19586 = !DILocation(line: 1073, column: 26, scope: !19584)
!19587 = !DILocation(line: 1073, column: 13, scope: !19090)
!19588 = !DILocation(line: 1078, column: 22, scope: !19589)
!19589 = distinct !DILexicalBlock(scope: !19584, file: !1716, line: 1073, column: 50)
!19590 = !DILocation(line: 1078, column: 17, scope: !19589)
!19591 = !DILocation(line: 1079, column: 17, scope: !19589)
!19592 = !DILocation(line: 1080, column: 25, scope: !19589)
!19593 = !DILocation(line: 1080, column: 29, scope: !19589)
!19594 = !DILocation(line: 1080, column: 37, scope: !19589)
!19595 = !DILocation(line: 1080, column: 17, scope: !19589)
!19596 = !DILocation(line: 1083, column: 9, scope: !19090)
!19597 = !DILocation(line: 1083, column: 9, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19599, file: !1716, line: 1083, column: 9)
!19599 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 1083, column: 9)
!19600 = !DILocation(line: 1083, column: 9, scope: !19599)
!19601 = !DILocation(line: 1086, column: 9, scope: !19090)
!19602 = !DILocation(line: 1086, column: 13, scope: !19090)
!19603 = !DILocation(line: 1086, column: 22, scope: !19090)
!19604 = !DILocation(line: 1086, column: 25, scope: !19090)
!19605 = !DILocation(line: 1086, column: 38, scope: !19090)
!19606 = !DILocation(line: 1094, column: 13, scope: !19607)
!19607 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 1094, column: 13)
!19608 = !DILocation(line: 1094, column: 16, scope: !19607)
!19609 = !DILocation(line: 1094, column: 26, scope: !19607)
!19610 = !DILocation(line: 1094, column: 13, scope: !19090)
!19611 = !DILocation(line: 1095, column: 41, scope: !19612)
!19612 = distinct !DILexicalBlock(scope: !19613, file: !1716, line: 1095, column: 21)
!19613 = distinct !DILexicalBlock(scope: !19607, file: !1716, line: 1094, column: 44)
!19614 = !DILocation(line: 1095, column: 21, scope: !19612)
!19615 = !DILocation(line: 1095, column: 21, scope: !19613)
!19616 = !DILocation(line: 1096, column: 40, scope: !19617)
!19617 = distinct !DILexicalBlock(scope: !19612, file: !1716, line: 1095, column: 46)
!19618 = !DILocation(line: 1096, column: 25, scope: !19617)
!19619 = !DILocation(line: 1096, column: 28, scope: !19617)
!19620 = !DILocation(line: 1096, column: 38, scope: !19617)
!19621 = !DILocation(line: 1097, column: 25, scope: !19617)
!19622 = !DILocation(line: 1098, column: 17, scope: !19617)
!19623 = !DILocation(line: 1099, column: 9, scope: !19613)
!19624 = !DILocation(line: 1099, column: 20, scope: !19625)
!19625 = distinct !DILexicalBlock(scope: !19607, file: !1716, line: 1099, column: 20)
!19626 = !DILocation(line: 1099, column: 23, scope: !19625)
!19627 = !DILocation(line: 1099, column: 33, scope: !19625)
!19628 = !DILocation(line: 1099, column: 20, scope: !19607)
!19629 = !DILocation(line: 1100, column: 21, scope: !19630)
!19630 = distinct !DILexicalBlock(scope: !19631, file: !1716, line: 1100, column: 21)
!19631 = distinct !DILexicalBlock(scope: !19625, file: !1716, line: 1099, column: 50)
!19632 = !DILocation(line: 1100, column: 21, scope: !19631)
!19633 = !DILocation(line: 1101, column: 40, scope: !19634)
!19634 = distinct !DILexicalBlock(scope: !19630, file: !1716, line: 1100, column: 47)
!19635 = !DILocation(line: 1101, column: 25, scope: !19634)
!19636 = !DILocation(line: 1101, column: 28, scope: !19634)
!19637 = !DILocation(line: 1101, column: 38, scope: !19634)
!19638 = !DILocation(line: 1102, column: 25, scope: !19634)
!19639 = !DILocation(line: 1103, column: 17, scope: !19634)
!19640 = !DILocation(line: 1104, column: 29, scope: !19631)
!19641 = !DILocation(line: 1104, column: 32, scope: !19631)
!19642 = !DILocation(line: 1104, column: 23, scope: !19631)
!19643 = !DILocation(line: 1105, column: 9, scope: !19631)
!19644 = !DILocation(line: 1105, column: 22, scope: !19645)
!19645 = distinct !DILexicalBlock(scope: !19625, file: !1716, line: 1105, column: 20)
!19646 = !DILocation(line: 1105, column: 25, scope: !19645)
!19647 = !DILocation(line: 1105, column: 35, scope: !19645)
!19648 = !DILocation(line: 1105, column: 52, scope: !19645)
!19649 = !DILocation(line: 1106, column: 39, scope: !19645)
!19650 = !DILocation(line: 1106, column: 43, scope: !19645)
!19651 = !DILocation(line: 1106, column: 46, scope: !19645)
!19652 = !DILocation(line: 1106, column: 20, scope: !19645)
!19653 = !DILocation(line: 1105, column: 20, scope: !19625)
!19654 = !DILocation(line: 1107, column: 32, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19645, file: !1716, line: 1106, column: 69)
!19656 = !DILocation(line: 1107, column: 17, scope: !19655)
!19657 = !DILocation(line: 1107, column: 20, scope: !19655)
!19658 = !DILocation(line: 1107, column: 30, scope: !19655)
!19659 = !DILocation(line: 1108, column: 17, scope: !19655)
!19660 = !DILocation(line: 1109, column: 9, scope: !19655)
!19661 = !DILocation(line: 1114, column: 13, scope: !19662)
!19662 = distinct !DILexicalBlock(scope: !19090, file: !1716, line: 1114, column: 13)
!19663 = !DILocation(line: 1114, column: 16, scope: !19662)
!19664 = !DILocation(line: 1114, column: 25, scope: !19662)
!19665 = !DILocation(line: 1114, column: 13, scope: !19090)
!19666 = !DILocation(line: 1115, column: 31, scope: !19667)
!19667 = distinct !DILexicalBlock(scope: !19662, file: !1716, line: 1114, column: 36)
!19668 = !DILocation(line: 1115, column: 34, scope: !19667)
!19669 = !DILocation(line: 1115, column: 17, scope: !19667)
!19670 = !DILocation(line: 1115, column: 20, scope: !19667)
!19671 = !DILocation(line: 1115, column: 29, scope: !19667)
!19672 = !DILocation(line: 1116, column: 21, scope: !19673)
!19673 = distinct !DILexicalBlock(scope: !19667, file: !1716, line: 1116, column: 21)
!19674 = !DILocation(line: 1116, column: 24, scope: !19673)
!19675 = !DILocation(line: 1116, column: 34, scope: !19673)
!19676 = !DILocation(line: 1116, column: 21, scope: !19667)
!19677 = !DILocation(line: 1117, column: 25, scope: !19673)
!19678 = !DILocation(line: 1117, column: 25, scope: !19679)
!19679 = distinct !DILexicalBlock(scope: !19673, file: !1716, line: 1117, column: 25)
!19680 = !DILocation(line: 1118, column: 9, scope: !19667)
!19681 = !DILocation(line: 1119, column: 16, scope: !19090)
!19682 = !DILocation(line: 1119, column: 41, scope: !19090)
!19683 = !DILocation(line: 1119, column: 9, scope: !19090)
!19684 = !DILocation(line: 1120, column: 1, scope: !19090)
!19685 = distinct !DISubprogram(name: "leave_dir", scope: !1823, file: !1823, line: 125, type: !19686, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!19686 = !DISubroutineType(types: !19687)
!19687 = !{null, !1741, !1819}
!19688 = !DILocalVariable(name: "fts", arg: 1, scope: !19685, file: !1823, line: 125, type: !1741)
!19689 = !DILocation(line: 125, column: 17, scope: !19685)
!19690 = !DILocalVariable(name: "ent", arg: 2, scope: !19685, file: !1823, line: 125, type: !1819)
!19691 = !DILocation(line: 125, column: 30, scope: !19685)
!19692 = !DILocalVariable(name: "st", scope: !19685, file: !1823, line: 127, type: !1829)
!19693 = !DILocation(line: 127, column: 22, scope: !19685)
!19694 = !DILocation(line: 127, column: 27, scope: !19685)
!19695 = !DILocation(line: 127, column: 32, scope: !19685)
!19696 = !DILocation(line: 128, column: 7, scope: !19697)
!19697 = distinct !DILexicalBlock(scope: !19685, file: !1823, line: 128, column: 7)
!19698 = !DILocation(line: 128, column: 12, scope: !19697)
!19699 = !DILocation(line: 128, column: 24, scope: !19697)
!19700 = !DILocation(line: 128, column: 7, scope: !19685)
!19701 = !DILocalVariable(name: "obj", scope: !19702, file: !1823, line: 130, type: !1822)
!19702 = distinct !DILexicalBlock(scope: !19697, file: !1823, line: 129, column: 5)
!19703 = !DILocation(line: 130, column: 25, scope: !19702)
!19704 = !DILocalVariable(name: "found", scope: !19702, file: !1823, line: 131, type: !53)
!19705 = !DILocation(line: 131, column: 13, scope: !19702)
!19706 = !DILocation(line: 132, column: 17, scope: !19702)
!19707 = !DILocation(line: 132, column: 21, scope: !19702)
!19708 = !DILocation(line: 132, column: 11, scope: !19702)
!19709 = !DILocation(line: 132, column: 15, scope: !19702)
!19710 = !DILocation(line: 133, column: 17, scope: !19702)
!19711 = !DILocation(line: 133, column: 21, scope: !19702)
!19712 = !DILocation(line: 133, column: 11, scope: !19702)
!19713 = !DILocation(line: 133, column: 15, scope: !19702)
!19714 = !DILocation(line: 134, column: 28, scope: !19702)
!19715 = !DILocation(line: 134, column: 33, scope: !19702)
!19716 = !DILocation(line: 134, column: 43, scope: !19702)
!19717 = !DILocation(line: 134, column: 47, scope: !19702)
!19718 = !DILocation(line: 134, column: 15, scope: !19702)
!19719 = !DILocation(line: 134, column: 13, scope: !19702)
!19720 = !DILocation(line: 135, column: 12, scope: !19721)
!19721 = distinct !DILexicalBlock(scope: !19702, file: !1823, line: 135, column: 11)
!19722 = !DILocation(line: 135, column: 11, scope: !19702)
!19723 = !DILocation(line: 136, column: 9, scope: !19721)
!19724 = !DILocation(line: 137, column: 13, scope: !19702)
!19725 = !DILocation(line: 137, column: 7, scope: !19702)
!19726 = !DILocation(line: 138, column: 5, scope: !19702)
!19727 = !DILocalVariable(name: "parent", scope: !19728, file: !1823, line: 141, type: !1819)
!19728 = distinct !DILexicalBlock(scope: !19697, file: !1823, line: 140, column: 5)
!19729 = !DILocation(line: 141, column: 15, scope: !19728)
!19730 = !DILocation(line: 141, column: 24, scope: !19728)
!19731 = !DILocation(line: 141, column: 29, scope: !19728)
!19732 = !DILocation(line: 142, column: 11, scope: !19733)
!19733 = distinct !DILexicalBlock(scope: !19728, file: !1823, line: 142, column: 11)
!19734 = !DILocation(line: 142, column: 18, scope: !19733)
!19735 = !DILocation(line: 142, column: 26, scope: !19733)
!19736 = !DILocation(line: 142, column: 34, scope: !19733)
!19737 = !DILocation(line: 142, column: 42, scope: !19733)
!19738 = !DILocation(line: 142, column: 31, scope: !19733)
!19739 = !DILocation(line: 142, column: 11, scope: !19728)
!19740 = !DILocation(line: 143, column: 9, scope: !19733)
!19741 = !DILocation(line: 143, column: 9, scope: !19742)
!19742 = distinct !DILexicalBlock(scope: !19743, file: !1823, line: 143, column: 9)
!19743 = distinct !DILexicalBlock(scope: !19733, file: !1823, line: 143, column: 9)
!19744 = !DILocation(line: 143, column: 9, scope: !19743)
!19745 = !DILocation(line: 143, column: 9, scope: !19746)
!19746 = distinct !DILexicalBlock(scope: !19743, file: !1823, line: 143, column: 9)
!19747 = !DILocation(line: 143, column: 9, scope: !19748)
!19748 = distinct !DILexicalBlock(scope: !19746, file: !1823, line: 143, column: 9)
!19749 = !DILocation(line: 146, column: 1, scope: !19685)
!19750 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !1716, file: !1716, line: 2043, type: !19751, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!19751 = !DISubroutineType(types: !19752)
!19752 = !{!7, !1741, !1819, !7, !116}
!19753 = !DILocalVariable(name: "sp", arg: 1, scope: !19750, file: !1716, line: 2043, type: !1741)
!19754 = !DILocation(line: 2043, column: 26, scope: !19750)
!19755 = !DILocalVariable(name: "p", arg: 2, scope: !19750, file: !1716, line: 2043, type: !1819)
!19756 = !DILocation(line: 2043, column: 38, scope: !19750)
!19757 = !DILocalVariable(name: "fd", arg: 3, scope: !19750, file: !1716, line: 2043, type: !7)
!19758 = !DILocation(line: 2043, column: 45, scope: !19750)
!19759 = !DILocalVariable(name: "dir", arg: 4, scope: !19750, file: !1716, line: 2043, type: !116)
!19760 = !DILocation(line: 2043, column: 61, scope: !19750)
!19761 = !DILocalVariable(name: "ret", scope: !19750, file: !1716, line: 2045, type: !7)
!19762 = !DILocation(line: 2045, column: 13, scope: !19750)
!19763 = !DILocalVariable(name: "is_dotdot", scope: !19750, file: !1716, line: 2046, type: !142)
!19764 = !DILocation(line: 2046, column: 14, scope: !19750)
!19765 = !DILocation(line: 2046, column: 26, scope: !19750)
!19766 = !DILocation(line: 2046, column: 30, scope: !19750)
!19767 = !DILocation(line: 2046, column: 33, scope: !19750)
!19768 = !DILocation(line: 0, scope: !19750)
!19769 = !DILocalVariable(name: "newfd", scope: !19750, file: !1716, line: 2047, type: !7)
!19770 = !DILocation(line: 2047, column: 13, scope: !19750)
!19771 = !DILocation(line: 2053, column: 13, scope: !19772)
!19772 = distinct !DILexicalBlock(scope: !19750, file: !1716, line: 2053, column: 13)
!19773 = !DILocation(line: 2053, column: 13, scope: !19750)
!19774 = !DILocation(line: 2055, column: 17, scope: !19775)
!19775 = distinct !DILexicalBlock(scope: !19776, file: !1716, line: 2055, column: 17)
!19776 = distinct !DILexicalBlock(scope: !19772, file: !1716, line: 2054, column: 11)
!19777 = !DILocation(line: 2055, column: 35, scope: !19775)
!19778 = !DILocation(line: 2055, column: 43, scope: !19775)
!19779 = !DILocation(line: 2055, column: 40, scope: !19775)
!19780 = !DILocation(line: 2055, column: 17, scope: !19776)
!19781 = !DILocation(line: 2056, column: 22, scope: !19775)
!19782 = !DILocation(line: 2056, column: 15, scope: !19775)
!19783 = !DILocation(line: 2057, column: 13, scope: !19776)
!19784 = !DILocation(line: 2060, column: 13, scope: !19785)
!19785 = distinct !DILexicalBlock(scope: !19750, file: !1716, line: 2060, column: 13)
!19786 = !DILocation(line: 2060, column: 16, scope: !19785)
!19787 = !DILocation(line: 2060, column: 20, scope: !19785)
!19788 = !DILocation(line: 2060, column: 23, scope: !19785)
!19789 = !DILocation(line: 2060, column: 33, scope: !19785)
!19790 = !DILocation(line: 2060, column: 36, scope: !19785)
!19791 = !DILocation(line: 2060, column: 13, scope: !19750)
!19792 = !DILocation(line: 2067, column: 35, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19794, file: !1716, line: 2067, column: 18)
!19794 = distinct !DILexicalBlock(scope: !19785, file: !1716, line: 2061, column: 11)
!19795 = !DILocation(line: 2067, column: 39, scope: !19793)
!19796 = !DILocation(line: 2067, column: 20, scope: !19793)
!19797 = !DILocation(line: 2067, column: 18, scope: !19794)
!19798 = !DILocalVariable(name: "parent_fd", scope: !19799, file: !1716, line: 2069, type: !7)
!19799 = distinct !DILexicalBlock(scope: !19793, file: !1716, line: 2068, column: 15)
!19800 = !DILocation(line: 2069, column: 21, scope: !19799)
!19801 = !DILocation(line: 2071, column: 42, scope: !19799)
!19802 = !DILocation(line: 2071, column: 46, scope: !19799)
!19803 = !DILocation(line: 2071, column: 29, scope: !19799)
!19804 = !DILocation(line: 2071, column: 27, scope: !19799)
!19805 = !DILocation(line: 2072, column: 27, scope: !19799)
!19806 = !DILocation(line: 2073, column: 26, scope: !19807)
!19807 = distinct !DILexicalBlock(scope: !19799, file: !1716, line: 2073, column: 21)
!19808 = !DILocation(line: 2073, column: 23, scope: !19807)
!19809 = !DILocation(line: 2073, column: 21, scope: !19799)
!19810 = !DILocation(line: 2075, column: 26, scope: !19811)
!19811 = distinct !DILexicalBlock(scope: !19807, file: !1716, line: 2074, column: 19)
!19812 = !DILocation(line: 2075, column: 24, scope: !19811)
!19813 = !DILocation(line: 2076, column: 25, scope: !19811)
!19814 = !DILocation(line: 2077, column: 19, scope: !19811)
!19815 = !DILocation(line: 2078, column: 15, scope: !19799)
!19816 = !DILocation(line: 2079, column: 11, scope: !19794)
!19817 = !DILocation(line: 2081, column: 17, scope: !19750)
!19818 = !DILocation(line: 2081, column: 15, scope: !19750)
!19819 = !DILocation(line: 2082, column: 13, scope: !19820)
!19820 = distinct !DILexicalBlock(scope: !19750, file: !1716, line: 2082, column: 13)
!19821 = !DILocation(line: 2082, column: 16, scope: !19820)
!19822 = !DILocation(line: 2082, column: 20, scope: !19820)
!19823 = !DILocation(line: 2082, column: 41, scope: !19820)
!19824 = !DILocation(line: 2082, column: 45, scope: !19820)
!19825 = !DILocation(line: 2082, column: 32, scope: !19820)
!19826 = !DILocation(line: 2082, column: 30, scope: !19820)
!19827 = !DILocation(line: 2082, column: 51, scope: !19820)
!19828 = !DILocation(line: 2082, column: 13, scope: !19750)
!19829 = !DILocation(line: 2083, column: 11, scope: !19820)
!19830 = !DILocation(line: 2092, column: 13, scope: !19831)
!19831 = distinct !DILexicalBlock(scope: !19750, file: !1716, line: 2092, column: 13)
!19832 = !DILocation(line: 2093, column: 13, scope: !19831)
!19833 = !DILocation(line: 2093, column: 17, scope: !19831)
!19834 = !DILocation(line: 2093, column: 21, scope: !19831)
!19835 = !DILocation(line: 2093, column: 24, scope: !19831)
!19836 = !DILocation(line: 2092, column: 13, scope: !19750)
!19837 = !DILocalVariable(name: "sb", scope: !19838, file: !1716, line: 2095, type: !1797)
!19838 = distinct !DILexicalBlock(scope: !19831, file: !1716, line: 2094, column: 11)
!19839 = !DILocation(line: 2095, column: 25, scope: !19838)
!19840 = !DILocation(line: 2096, column: 23, scope: !19841)
!19841 = distinct !DILexicalBlock(scope: !19838, file: !1716, line: 2096, column: 17)
!19842 = !DILocation(line: 2096, column: 17, scope: !19841)
!19843 = !DILocation(line: 2096, column: 17, scope: !19838)
!19844 = !DILocation(line: 2098, column: 21, scope: !19845)
!19845 = distinct !DILexicalBlock(scope: !19841, file: !1716, line: 2097, column: 15)
!19846 = !DILocation(line: 2099, column: 17, scope: !19845)
!19847 = !DILocation(line: 2101, column: 17, scope: !19848)
!19848 = distinct !DILexicalBlock(scope: !19838, file: !1716, line: 2101, column: 17)
!19849 = !DILocation(line: 2101, column: 20, scope: !19848)
!19850 = !DILocation(line: 2101, column: 31, scope: !19848)
!19851 = !DILocation(line: 2101, column: 44, scope: !19848)
!19852 = !DILocation(line: 2101, column: 38, scope: !19848)
!19853 = !DILocation(line: 2102, column: 17, scope: !19848)
!19854 = !DILocation(line: 2102, column: 20, scope: !19848)
!19855 = !DILocation(line: 2102, column: 23, scope: !19848)
!19856 = !DILocation(line: 2102, column: 34, scope: !19848)
!19857 = !DILocation(line: 2102, column: 47, scope: !19848)
!19858 = !DILocation(line: 2102, column: 41, scope: !19848)
!19859 = !DILocation(line: 2101, column: 17, scope: !19838)
!19860 = !DILocation(line: 2104, column: 17, scope: !19861)
!19861 = distinct !DILexicalBlock(scope: !19848, file: !1716, line: 2103, column: 15)
!19862 = !DILocation(line: 2105, column: 21, scope: !19861)
!19863 = !DILocation(line: 2106, column: 17, scope: !19861)
!19864 = !DILocation(line: 2108, column: 11, scope: !19838)
!19865 = !DILocation(line: 2110, column: 13, scope: !19866)
!19866 = distinct !DILexicalBlock(scope: !19750, file: !1716, line: 2110, column: 13)
!19867 = !DILocation(line: 2110, column: 13, scope: !19750)
!19868 = !DILocation(line: 2112, column: 29, scope: !19869)
!19869 = distinct !DILexicalBlock(scope: !19866, file: !1716, line: 2111, column: 11)
!19870 = !DILocation(line: 2112, column: 33, scope: !19869)
!19871 = !DILocation(line: 2112, column: 42, scope: !19869)
!19872 = !DILocation(line: 2112, column: 40, scope: !19869)
!19873 = !DILocation(line: 2112, column: 13, scope: !19869)
!19874 = !DILocation(line: 2113, column: 13, scope: !19869)
!19875 = !DILocation(line: 2116, column: 22, scope: !19750)
!19876 = !DILocation(line: 2116, column: 15, scope: !19750)
!19877 = !DILocation(line: 2116, column: 13, scope: !19750)
!19878 = !DILocation(line: 2116, column: 9, scope: !19750)
!19879 = !DILabel(scope: !19750, name: "bail", file: !1716, line: 2117)
!19880 = !DILocation(line: 2117, column: 1, scope: !19750)
!19881 = !DILocation(line: 2118, column: 13, scope: !19882)
!19882 = distinct !DILexicalBlock(scope: !19750, file: !1716, line: 2118, column: 13)
!19883 = !DILocation(line: 2118, column: 16, scope: !19882)
!19884 = !DILocation(line: 2118, column: 13, scope: !19750)
!19885 = !DILocalVariable(name: "oerrno", scope: !19886, file: !1716, line: 2120, type: !7)
!19886 = distinct !DILexicalBlock(scope: !19882, file: !1716, line: 2119, column: 11)
!19887 = !DILocation(line: 2120, column: 17, scope: !19886)
!19888 = !DILocation(line: 2120, column: 26, scope: !19886)
!19889 = !DILocation(line: 2121, column: 25, scope: !19886)
!19890 = !DILocation(line: 2121, column: 19, scope: !19886)
!19891 = !DILocation(line: 2122, column: 13, scope: !19886)
!19892 = !DILocation(line: 2123, column: 11, scope: !19886)
!19893 = !DILocation(line: 2124, column: 16, scope: !19750)
!19894 = !DILocation(line: 2124, column: 9, scope: !19750)
!19895 = !DILocation(line: 2125, column: 1, scope: !19750)
!19896 = distinct !DISubprogram(name: "fts_build", scope: !1716, file: !1716, line: 1300, type: !19897, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!19897 = !DISubroutineType(types: !19898)
!19898 = !{!1819, !1741, !7}
!19899 = !DILocalVariable(name: "sp", arg: 1, scope: !19896, file: !1716, line: 1300, type: !1741)
!19900 = !DILocation(line: 1300, column: 26, scope: !19896)
!19901 = !DILocalVariable(name: "type", arg: 2, scope: !19896, file: !1716, line: 1300, type: !7)
!19902 = !DILocation(line: 1300, column: 34, scope: !19896)
!19903 = !DILocalVariable(name: "p", scope: !19896, file: !1716, line: 1302, type: !1819)
!19904 = !DILocation(line: 1302, column: 26, scope: !19896)
!19905 = !DILocalVariable(name: "head", scope: !19896, file: !1716, line: 1302, type: !1819)
!19906 = !DILocation(line: 1302, column: 30, scope: !19896)
!19907 = !DILocalVariable(name: "nitems", scope: !19896, file: !1716, line: 1303, type: !55)
!19908 = !DILocation(line: 1303, column: 25, scope: !19896)
!19909 = !DILocalVariable(name: "tail", scope: !19896, file: !1716, line: 1304, type: !1819)
!19910 = !DILocation(line: 1304, column: 17, scope: !19896)
!19911 = !DILocalVariable(name: "oldaddr", scope: !19896, file: !1716, line: 1305, type: !53)
!19912 = !DILocation(line: 1305, column: 15, scope: !19896)
!19913 = !DILocalVariable(name: "saved_errno", scope: !19896, file: !1716, line: 1306, type: !7)
!19914 = !DILocation(line: 1306, column: 13, scope: !19896)
!19915 = !DILocalVariable(name: "descend", scope: !19896, file: !1716, line: 1307, type: !142)
!19916 = !DILocation(line: 1307, column: 14, scope: !19896)
!19917 = !DILocalVariable(name: "doadjust", scope: !19896, file: !1716, line: 1308, type: !142)
!19918 = !DILocation(line: 1308, column: 14, scope: !19896)
!19919 = !DILocalVariable(name: "level", scope: !19896, file: !1716, line: 1309, type: !506)
!19920 = !DILocation(line: 1309, column: 19, scope: !19896)
!19921 = !DILocalVariable(name: "len", scope: !19896, file: !1716, line: 1310, type: !55)
!19922 = !DILocation(line: 1310, column: 16, scope: !19896)
!19923 = !DILocalVariable(name: "maxlen", scope: !19896, file: !1716, line: 1310, type: !55)
!19924 = !DILocation(line: 1310, column: 21, scope: !19896)
!19925 = !DILocalVariable(name: "new_len", scope: !19896, file: !1716, line: 1310, type: !55)
!19926 = !DILocation(line: 1310, column: 29, scope: !19896)
!19927 = !DILocalVariable(name: "cp", scope: !19896, file: !1716, line: 1311, type: !9)
!19928 = !DILocation(line: 1311, column: 15, scope: !19896)
!19929 = !DILocalVariable(name: "dir_fd", scope: !19896, file: !1716, line: 1312, type: !7)
!19930 = !DILocation(line: 1312, column: 13, scope: !19896)
!19931 = !DILocalVariable(name: "cur", scope: !19896, file: !1716, line: 1313, type: !1819)
!19932 = !DILocation(line: 1313, column: 17, scope: !19896)
!19933 = !DILocation(line: 1313, column: 23, scope: !19896)
!19934 = !DILocation(line: 1313, column: 27, scope: !19896)
!19935 = !DILocalVariable(name: "continue_readdir", scope: !19896, file: !1716, line: 1314, type: !142)
!19936 = !DILocation(line: 1314, column: 14, scope: !19896)
!19937 = !DILocation(line: 1314, column: 35, scope: !19896)
!19938 = !DILocation(line: 1314, column: 40, scope: !19896)
!19939 = !DILocation(line: 1314, column: 34, scope: !19896)
!19940 = !DILocation(line: 1314, column: 33, scope: !19896)
!19941 = !DILocalVariable(name: "sort_by_inode", scope: !19896, file: !1716, line: 1315, type: !142)
!19942 = !DILocation(line: 1315, column: 14, scope: !19896)
!19943 = !DILocalVariable(name: "max_entries", scope: !19896, file: !1716, line: 1316, type: !55)
!19944 = !DILocation(line: 1316, column: 16, scope: !19896)
!19945 = !DILocation(line: 1321, column: 13, scope: !19946)
!19946 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1321, column: 13)
!19947 = !DILocation(line: 1321, column: 13, scope: !19896)
!19948 = !DILocalVariable(name: "dp", scope: !19949, file: !1716, line: 1323, type: !541)
!19949 = distinct !DILexicalBlock(scope: !19946, file: !1716, line: 1322, column: 11)
!19950 = !DILocation(line: 1323, column: 18, scope: !19949)
!19951 = !DILocation(line: 1323, column: 23, scope: !19949)
!19952 = !DILocation(line: 1323, column: 28, scope: !19949)
!19953 = !DILocation(line: 1324, column: 29, scope: !19949)
!19954 = !DILocation(line: 1324, column: 22, scope: !19949)
!19955 = !DILocation(line: 1324, column: 20, scope: !19949)
!19956 = !DILocation(line: 1325, column: 17, scope: !19957)
!19957 = distinct !DILexicalBlock(scope: !19949, file: !1716, line: 1325, column: 17)
!19958 = !DILocation(line: 1325, column: 24, scope: !19957)
!19959 = !DILocation(line: 1325, column: 17, scope: !19949)
!19960 = !DILocation(line: 1327, column: 17, scope: !19961)
!19961 = distinct !DILexicalBlock(scope: !19957, file: !1716, line: 1326, column: 15)
!19962 = !DILocation(line: 1327, column: 17, scope: !19963)
!19963 = distinct !DILexicalBlock(scope: !19961, file: !1716, line: 1327, column: 17)
!19964 = !DILocation(line: 1328, column: 21, scope: !19965)
!19965 = distinct !DILexicalBlock(scope: !19961, file: !1716, line: 1328, column: 21)
!19966 = !DILocation(line: 1328, column: 26, scope: !19965)
!19967 = !DILocation(line: 1328, column: 21, scope: !19961)
!19968 = !DILocation(line: 1330, column: 21, scope: !19969)
!19969 = distinct !DILexicalBlock(scope: !19965, file: !1716, line: 1329, column: 19)
!19970 = !DILocation(line: 1330, column: 26, scope: !19969)
!19971 = !DILocation(line: 1330, column: 35, scope: !19969)
!19972 = !DILocation(line: 1331, column: 38, scope: !19969)
!19973 = !DILocation(line: 1331, column: 21, scope: !19969)
!19974 = !DILocation(line: 1331, column: 26, scope: !19969)
!19975 = !DILocation(line: 1331, column: 36, scope: !19969)
!19976 = !DILocation(line: 1332, column: 19, scope: !19969)
!19977 = !DILocation(line: 1333, column: 17, scope: !19961)
!19978 = !DILocation(line: 1335, column: 11, scope: !19949)
!19979 = !DILocation(line: 1340, column: 34, scope: !19980)
!19980 = distinct !DILexicalBlock(scope: !19981, file: !1716, line: 1340, column: 17)
!19981 = distinct !DILexicalBlock(scope: !19946, file: !1716, line: 1337, column: 11)
!19982 = !DILocation(line: 0, scope: !19980)
!19983 = !DILocation(line: 1340, column: 18, scope: !19980)
!19984 = !DILocation(line: 1340, column: 23, scope: !19980)
!19985 = !DILocation(line: 1340, column: 32, scope: !19980)
!19986 = !DILocation(line: 1340, column: 74, scope: !19980)
!19987 = !DILocation(line: 1340, column: 17, scope: !19981)
!19988 = !DILocation(line: 1342, column: 21, scope: !19989)
!19989 = distinct !DILexicalBlock(scope: !19990, file: !1716, line: 1342, column: 21)
!19990 = distinct !DILexicalBlock(scope: !19980, file: !1716, line: 1341, column: 15)
!19991 = !DILocation(line: 1342, column: 26, scope: !19989)
!19992 = !DILocation(line: 1342, column: 21, scope: !19990)
!19993 = !DILocation(line: 1344, column: 21, scope: !19994)
!19994 = distinct !DILexicalBlock(scope: !19989, file: !1716, line: 1343, column: 19)
!19995 = !DILocation(line: 1344, column: 26, scope: !19994)
!19996 = !DILocation(line: 1344, column: 35, scope: !19994)
!19997 = !DILocation(line: 1345, column: 38, scope: !19994)
!19998 = !DILocation(line: 1345, column: 21, scope: !19994)
!19999 = !DILocation(line: 1345, column: 26, scope: !19994)
!20000 = !DILocation(line: 1345, column: 36, scope: !19994)
!20001 = !DILocation(line: 1346, column: 19, scope: !19994)
!20002 = !DILocation(line: 1347, column: 17, scope: !19990)
!20003 = !DILocation(line: 1352, column: 17, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !19981, file: !1716, line: 1352, column: 17)
!20005 = !DILocation(line: 1352, column: 22, scope: !20004)
!20006 = !DILocation(line: 1352, column: 31, scope: !20004)
!20007 = !DILocation(line: 1352, column: 17, scope: !19981)
!20008 = !DILocation(line: 1353, column: 40, scope: !20004)
!20009 = !DILocation(line: 1353, column: 44, scope: !20004)
!20010 = !DILocation(line: 1353, column: 31, scope: !20004)
!20011 = !DILocation(line: 1353, column: 15, scope: !20004)
!20012 = !DILocation(line: 1353, column: 20, scope: !20004)
!20013 = !DILocation(line: 1353, column: 29, scope: !20004)
!20014 = !DILocation(line: 1354, column: 22, scope: !20015)
!20015 = distinct !DILexicalBlock(scope: !20004, file: !1716, line: 1354, column: 22)
!20016 = !DILocation(line: 1354, column: 26, scope: !20015)
!20017 = !DILocation(line: 1354, column: 38, scope: !20015)
!20018 = !DILocation(line: 1354, column: 22, scope: !20004)
!20019 = !DILocation(line: 1361, column: 17, scope: !20020)
!20020 = distinct !DILexicalBlock(scope: !20015, file: !1716, line: 1355, column: 15)
!20021 = !DILocation(line: 1361, column: 17, scope: !20022)
!20022 = distinct !DILexicalBlock(scope: !20020, file: !1716, line: 1361, column: 17)
!20023 = !DILocation(line: 1362, column: 27, scope: !20020)
!20024 = !DILocation(line: 1362, column: 31, scope: !20020)
!20025 = !DILocation(line: 1362, column: 17, scope: !20020)
!20026 = !DILocation(line: 1363, column: 34, scope: !20027)
!20027 = distinct !DILexicalBlock(scope: !20020, file: !1716, line: 1363, column: 21)
!20028 = !DILocation(line: 1363, column: 38, scope: !20027)
!20029 = !DILocation(line: 1363, column: 23, scope: !20027)
!20030 = !DILocation(line: 1363, column: 21, scope: !20020)
!20031 = !DILocation(line: 1365, column: 21, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20027, file: !1716, line: 1364, column: 19)
!20033 = !DILocation(line: 1366, column: 21, scope: !20032)
!20034 = !DILocation(line: 1368, column: 15, scope: !20020)
!20035 = !DILocation(line: 1378, column: 23, scope: !19896)
!20036 = !DILocation(line: 1378, column: 27, scope: !19896)
!20037 = !DILocation(line: 1378, column: 21, scope: !19896)
!20038 = !DILocation(line: 1395, column: 13, scope: !20039)
!20039 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1395, column: 13)
!20040 = !DILocation(line: 1395, column: 13, scope: !19896)
!20041 = !DILocation(line: 1399, column: 21, scope: !20042)
!20042 = distinct !DILexicalBlock(scope: !20039, file: !1716, line: 1396, column: 11)
!20043 = !DILocation(line: 1400, column: 11, scope: !20042)
!20044 = !DILocation(line: 1405, column: 24, scope: !20045)
!20045 = distinct !DILexicalBlock(scope: !20039, file: !1716, line: 1402, column: 11)
!20046 = !DILocation(line: 1405, column: 29, scope: !20045)
!20047 = !DILocation(line: 1406, column: 24, scope: !20045)
!20048 = !DILocation(line: 1406, column: 30, scope: !20045)
!20049 = !DILocation(line: 1406, column: 49, scope: !20045)
!20050 = !DILocation(line: 1406, column: 52, scope: !20045)
!20051 = !DILocation(line: 1407, column: 30, scope: !20045)
!20052 = !DILocation(line: 1407, column: 35, scope: !20045)
!20053 = !DILocation(line: 1408, column: 30, scope: !20045)
!20054 = !DILocation(line: 1408, column: 33, scope: !20045)
!20055 = !DILocation(line: 1408, column: 38, scope: !20045)
!20056 = !DILocation(line: 1408, column: 49, scope: !20045)
!20057 = !DILocation(line: 1408, column: 58, scope: !20045)
!20058 = !DILocation(line: 1409, column: 30, scope: !20045)
!20059 = !DILocation(line: 1409, column: 53, scope: !20045)
!20060 = !DILocation(line: 1409, column: 58, scope: !20045)
!20061 = !DILocation(line: 1409, column: 34, scope: !20045)
!20062 = !DILocation(line: 1410, column: 34, scope: !20045)
!20063 = !DILocation(line: 0, scope: !20045)
!20064 = !DILocation(line: 1406, column: 27, scope: !20045)
!20065 = !DILocation(line: 1405, column: 21, scope: !20045)
!20066 = !DILocation(line: 1411, column: 17, scope: !20067)
!20067 = distinct !DILexicalBlock(scope: !20045, file: !1716, line: 1411, column: 17)
!20068 = !DILocation(line: 1411, column: 25, scope: !20067)
!20069 = !DILocation(line: 1411, column: 28, scope: !20067)
!20070 = !DILocation(line: 1411, column: 33, scope: !20067)
!20071 = !DILocation(line: 1411, column: 17, scope: !20045)
!20072 = !DILocation(line: 1413, column: 21, scope: !20073)
!20073 = distinct !DILexicalBlock(scope: !20074, file: !1716, line: 1413, column: 21)
!20074 = distinct !DILexicalBlock(scope: !20067, file: !1716, line: 1412, column: 15)
!20075 = !DILocation(line: 1413, column: 21, scope: !20074)
!20076 = !DILocation(line: 1414, column: 35, scope: !20073)
!20077 = !DILocation(line: 1414, column: 28, scope: !20073)
!20078 = !DILocation(line: 1414, column: 26, scope: !20073)
!20079 = !DILocation(line: 1414, column: 19, scope: !20073)
!20080 = !DILocation(line: 1415, column: 21, scope: !20081)
!20081 = distinct !DILexicalBlock(scope: !20074, file: !1716, line: 1415, column: 21)
!20082 = !DILocation(line: 1415, column: 28, scope: !20081)
!20083 = !DILocation(line: 1415, column: 32, scope: !20081)
!20084 = !DILocation(line: 1415, column: 54, scope: !20081)
!20085 = !DILocation(line: 1415, column: 58, scope: !20081)
!20086 = !DILocation(line: 1415, column: 63, scope: !20081)
!20087 = !DILocation(line: 1415, column: 35, scope: !20081)
!20088 = !DILocation(line: 1415, column: 21, scope: !20074)
!20089 = !DILocation(line: 1416, column: 29, scope: !20090)
!20090 = distinct !DILexicalBlock(scope: !20091, file: !1716, line: 1416, column: 29)
!20091 = distinct !DILexicalBlock(scope: !20081, file: !1716, line: 1415, column: 78)
!20092 = !DILocation(line: 1416, column: 37, scope: !20090)
!20093 = !DILocation(line: 1416, column: 40, scope: !20090)
!20094 = !DILocation(line: 1416, column: 45, scope: !20090)
!20095 = !DILocation(line: 1416, column: 29, scope: !20091)
!20096 = !DILocation(line: 1417, column: 50, scope: !20090)
!20097 = !DILocation(line: 1417, column: 33, scope: !20090)
!20098 = !DILocation(line: 1417, column: 38, scope: !20090)
!20099 = !DILocation(line: 1417, column: 48, scope: !20090)
!20100 = !DILocation(line: 1418, column: 25, scope: !20091)
!20101 = !DILocation(line: 1418, column: 30, scope: !20091)
!20102 = !DILocation(line: 1418, column: 40, scope: !20091)
!20103 = !DILocation(line: 1419, column: 33, scope: !20091)
!20104 = !DILocation(line: 1420, column: 25, scope: !20091)
!20105 = !DILocation(line: 1420, column: 25, scope: !20106)
!20106 = distinct !DILexicalBlock(scope: !20091, file: !1716, line: 1420, column: 25)
!20107 = !DILocation(line: 1421, column: 29, scope: !20108)
!20108 = distinct !DILexicalBlock(scope: !20091, file: !1716, line: 1421, column: 29)
!20109 = !DILocation(line: 1421, column: 46, scope: !20108)
!20110 = !DILocation(line: 1421, column: 54, scope: !20108)
!20111 = !DILocation(line: 1421, column: 51, scope: !20108)
!20112 = !DILocation(line: 1421, column: 29, scope: !20091)
!20113 = !DILocation(line: 1422, column: 40, scope: !20108)
!20114 = !DILocation(line: 1422, column: 33, scope: !20108)
!20115 = !DILocation(line: 1423, column: 25, scope: !20091)
!20116 = !DILocation(line: 1423, column: 30, scope: !20091)
!20117 = !DILocation(line: 1423, column: 39, scope: !20091)
!20118 = !DILocation(line: 1424, column: 17, scope: !20091)
!20119 = !DILocation(line: 1425, column: 33, scope: !20081)
!20120 = !DILocation(line: 1426, column: 15, scope: !20074)
!20121 = !DILocation(line: 1439, column: 15, scope: !19896)
!20122 = !DILocation(line: 1439, column: 13, scope: !19896)
!20123 = !DILocation(line: 1440, column: 13, scope: !20124)
!20124 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1440, column: 13)
!20125 = !DILocation(line: 1440, column: 13, scope: !19896)
!20126 = !DILocation(line: 1441, column: 22, scope: !20127)
!20127 = distinct !DILexicalBlock(scope: !20124, file: !1716, line: 1440, column: 33)
!20128 = !DILocation(line: 1441, column: 26, scope: !20127)
!20129 = !DILocation(line: 1441, column: 37, scope: !20127)
!20130 = !DILocation(line: 1441, column: 35, scope: !20127)
!20131 = !DILocation(line: 1441, column: 20, scope: !20127)
!20132 = !DILocation(line: 1442, column: 20, scope: !20127)
!20133 = !DILocation(line: 1442, column: 23, scope: !20127)
!20134 = !DILocation(line: 1443, column: 9, scope: !20127)
!20135 = !DILocation(line: 1445, column: 20, scope: !20136)
!20136 = distinct !DILexicalBlock(scope: !20124, file: !1716, line: 1443, column: 16)
!20137 = !DILocation(line: 1447, column: 12, scope: !19896)
!20138 = !DILocation(line: 1448, column: 18, scope: !19896)
!20139 = !DILocation(line: 1448, column: 22, scope: !19896)
!20140 = !DILocation(line: 1448, column: 36, scope: !19896)
!20141 = !DILocation(line: 1448, column: 34, scope: !19896)
!20142 = !DILocation(line: 1448, column: 16, scope: !19896)
!20143 = !DILocation(line: 1450, column: 17, scope: !19896)
!20144 = !DILocation(line: 1450, column: 22, scope: !19896)
!20145 = !DILocation(line: 1450, column: 32, scope: !19896)
!20146 = !DILocation(line: 1450, column: 15, scope: !19896)
!20147 = !DILocation(line: 1453, column: 18, scope: !19896)
!20148 = !DILocation(line: 1454, column: 14, scope: !19896)
!20149 = !DILocation(line: 1455, column: 14, scope: !19896)
!20150 = !DILocation(line: 1456, column: 16, scope: !19896)
!20151 = !DILocation(line: 1457, column: 9, scope: !19896)
!20152 = !DILocation(line: 1457, column: 16, scope: !19896)
!20153 = !DILocation(line: 1457, column: 21, scope: !19896)
!20154 = !DILocalVariable(name: "d_namelen", scope: !20155, file: !1716, line: 1458, type: !55)
!20155 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1457, column: 31)
!20156 = !DILocation(line: 1458, column: 24, scope: !20155)
!20157 = !DILocation(line: 1459, column: 17, scope: !20155)
!20158 = !DILocalVariable(name: "dp", scope: !20155, file: !1716, line: 1460, type: !1844)
!20159 = !DILocation(line: 1460, column: 32, scope: !20155)
!20160 = !DILocation(line: 1460, column: 45, scope: !20155)
!20161 = !DILocation(line: 1460, column: 50, scope: !20155)
!20162 = !DILocation(line: 1460, column: 37, scope: !20155)
!20163 = !DILocation(line: 1461, column: 21, scope: !20164)
!20164 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1461, column: 21)
!20165 = !DILocation(line: 1461, column: 24, scope: !20164)
!20166 = !DILocation(line: 1461, column: 21, scope: !20155)
!20167 = !DILocation(line: 1462, column: 29, scope: !20168)
!20168 = distinct !DILexicalBlock(scope: !20169, file: !1716, line: 1462, column: 29)
!20169 = distinct !DILexicalBlock(scope: !20164, file: !1716, line: 1461, column: 33)
!20170 = !DILocation(line: 1462, column: 29, scope: !20169)
!20171 = !DILocation(line: 1463, column: 50, scope: !20172)
!20172 = distinct !DILexicalBlock(scope: !20168, file: !1716, line: 1462, column: 36)
!20173 = !DILocation(line: 1463, column: 33, scope: !20172)
!20174 = !DILocation(line: 1463, column: 38, scope: !20172)
!20175 = !DILocation(line: 1463, column: 48, scope: !20172)
!20176 = !DILocation(line: 1466, column: 50, scope: !20172)
!20177 = !DILocation(line: 1466, column: 67, scope: !20172)
!20178 = !DILocation(line: 1466, column: 70, scope: !20172)
!20179 = !DILocation(line: 1466, column: 49, scope: !20172)
!20180 = !DILocation(line: 1466, column: 33, scope: !20172)
!20181 = !DILocation(line: 1466, column: 38, scope: !20172)
!20182 = !DILocation(line: 1466, column: 47, scope: !20172)
!20183 = !DILocation(line: 1468, column: 25, scope: !20172)
!20184 = !DILocation(line: 1469, column: 25, scope: !20169)
!20185 = !DILocation(line: 1471, column: 22, scope: !20186)
!20186 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1471, column: 21)
!20187 = !DILocation(line: 1471, column: 40, scope: !20186)
!20188 = !DILocation(line: 1471, column: 43, scope: !20186)
!20189 = !DILocation(line: 1471, column: 21, scope: !20155)
!20190 = !DILocation(line: 1472, column: 25, scope: !20186)
!20191 = distinct !{!20191, !20151, !20192}
!20192 = !DILocation(line: 1590, column: 9, scope: !19896)
!20193 = !DILocation(line: 1474, column: 29, scope: !20155)
!20194 = !DILocation(line: 1474, column: 27, scope: !20155)
!20195 = !DILocation(line: 1475, column: 32, scope: !20155)
!20196 = !DILocation(line: 1475, column: 36, scope: !20155)
!20197 = !DILocation(line: 1475, column: 40, scope: !20155)
!20198 = !DILocation(line: 1475, column: 48, scope: !20155)
!20199 = !DILocation(line: 1475, column: 21, scope: !20155)
!20200 = !DILocation(line: 1475, column: 19, scope: !20155)
!20201 = !DILocation(line: 1476, column: 22, scope: !20202)
!20202 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1476, column: 21)
!20203 = !DILocation(line: 1476, column: 21, scope: !20155)
!20204 = !DILocation(line: 1477, column: 25, scope: !20202)
!20205 = !DILocation(line: 1478, column: 21, scope: !20206)
!20206 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1478, column: 21)
!20207 = !DILocation(line: 1478, column: 34, scope: !20206)
!20208 = !DILocation(line: 1478, column: 31, scope: !20206)
!20209 = !DILocation(line: 1478, column: 21, scope: !20155)
!20210 = !DILocation(line: 1480, column: 35, scope: !20211)
!20211 = distinct !DILexicalBlock(scope: !20206, file: !1716, line: 1478, column: 42)
!20212 = !DILocation(line: 1480, column: 39, scope: !20211)
!20213 = !DILocation(line: 1480, column: 33, scope: !20211)
!20214 = !DILocation(line: 1481, column: 42, scope: !20215)
!20215 = distinct !DILexicalBlock(scope: !20211, file: !1716, line: 1481, column: 29)
!20216 = !DILocation(line: 1481, column: 46, scope: !20215)
!20217 = !DILocation(line: 1481, column: 58, scope: !20215)
!20218 = !DILocation(line: 1481, column: 56, scope: !20215)
!20219 = !DILocation(line: 1481, column: 62, scope: !20215)
!20220 = !DILocation(line: 1481, column: 31, scope: !20215)
!20221 = !DILocation(line: 1481, column: 29, scope: !20211)
!20222 = !DILocation(line: 1481, column: 68, scope: !20215)
!20223 = !DILabel(scope: !20224, name: "mem1", file: !1716, line: 1487)
!20224 = distinct !DILexicalBlock(scope: !20215, file: !1716, line: 1481, column: 68)
!20225 = !DILocation(line: 1487, column: 1, scope: !20224)
!20226 = !DILocation(line: 1487, column: 47, scope: !20224)
!20227 = !DILocation(line: 1487, column: 45, scope: !20224)
!20228 = !DILocation(line: 1488, column: 38, scope: !20224)
!20229 = !DILocation(line: 1488, column: 33, scope: !20224)
!20230 = !DILocation(line: 1489, column: 43, scope: !20224)
!20231 = !DILocation(line: 1489, column: 33, scope: !20224)
!20232 = !DILocation(line: 1490, column: 33, scope: !20224)
!20233 = !DILocation(line: 1490, column: 33, scope: !20234)
!20234 = distinct !DILexicalBlock(scope: !20224, file: !1716, line: 1490, column: 33)
!20235 = !DILocation(line: 1491, column: 33, scope: !20224)
!20236 = !DILocation(line: 1491, column: 38, scope: !20224)
!20237 = !DILocation(line: 1491, column: 47, scope: !20224)
!20238 = !DILocation(line: 1492, column: 33, scope: !20224)
!20239 = !DILocation(line: 1493, column: 33, scope: !20224)
!20240 = !DILocation(line: 1494, column: 33, scope: !20224)
!20241 = !DILocation(line: 1497, column: 29, scope: !20242)
!20242 = distinct !DILexicalBlock(scope: !20211, file: !1716, line: 1497, column: 29)
!20243 = !DILocation(line: 1497, column: 40, scope: !20242)
!20244 = !DILocation(line: 1497, column: 44, scope: !20242)
!20245 = !DILocation(line: 1497, column: 37, scope: !20242)
!20246 = !DILocation(line: 1497, column: 29, scope: !20211)
!20247 = !DILocation(line: 1498, column: 42, scope: !20248)
!20248 = distinct !DILexicalBlock(scope: !20242, file: !1716, line: 1497, column: 54)
!20249 = !DILocation(line: 1499, column: 37, scope: !20250)
!20250 = distinct !DILexicalBlock(scope: !20248, file: !1716, line: 1499, column: 37)
!20251 = !DILocation(line: 1499, column: 37, scope: !20248)
!20252 = !DILocation(line: 1500, column: 46, scope: !20250)
!20253 = !DILocation(line: 1500, column: 50, scope: !20250)
!20254 = !DILocation(line: 1500, column: 61, scope: !20250)
!20255 = !DILocation(line: 1500, column: 59, scope: !20250)
!20256 = !DILocation(line: 1500, column: 44, scope: !20250)
!20257 = !DILocation(line: 1500, column: 41, scope: !20250)
!20258 = !DILocation(line: 1501, column: 25, scope: !20248)
!20259 = !DILocation(line: 1502, column: 34, scope: !20211)
!20260 = !DILocation(line: 1502, column: 38, scope: !20211)
!20261 = !DILocation(line: 1502, column: 52, scope: !20211)
!20262 = !DILocation(line: 1502, column: 50, scope: !20211)
!20263 = !DILocation(line: 1502, column: 32, scope: !20211)
!20264 = !DILocation(line: 1503, column: 17, scope: !20211)
!20265 = !DILocation(line: 1505, column: 27, scope: !20155)
!20266 = !DILocation(line: 1505, column: 33, scope: !20155)
!20267 = !DILocation(line: 1505, column: 31, scope: !20155)
!20268 = !DILocation(line: 1505, column: 25, scope: !20155)
!20269 = !DILocation(line: 1506, column: 21, scope: !20270)
!20270 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1506, column: 21)
!20271 = !DILocation(line: 1506, column: 31, scope: !20270)
!20272 = !DILocation(line: 1506, column: 29, scope: !20270)
!20273 = !DILocation(line: 1506, column: 21, scope: !20155)
!20274 = !DILocation(line: 1513, column: 30, scope: !20275)
!20275 = distinct !DILexicalBlock(scope: !20270, file: !1716, line: 1506, column: 36)
!20276 = !DILocation(line: 1513, column: 25, scope: !20275)
!20277 = !DILocation(line: 1514, column: 35, scope: !20275)
!20278 = !DILocation(line: 1514, column: 25, scope: !20275)
!20279 = !DILocation(line: 1515, column: 25, scope: !20275)
!20280 = !DILocation(line: 1515, column: 25, scope: !20281)
!20281 = distinct !DILexicalBlock(scope: !20275, file: !1716, line: 1515, column: 25)
!20282 = !DILocation(line: 1516, column: 25, scope: !20275)
!20283 = !DILocation(line: 1516, column: 30, scope: !20275)
!20284 = !DILocation(line: 1516, column: 39, scope: !20275)
!20285 = !DILocation(line: 1517, column: 25, scope: !20275)
!20286 = !DILocation(line: 1518, column: 25, scope: !20275)
!20287 = !DILocation(line: 1519, column: 25, scope: !20275)
!20288 = !DILocation(line: 1521, column: 32, scope: !20155)
!20289 = !DILocation(line: 1521, column: 17, scope: !20155)
!20290 = !DILocation(line: 1521, column: 20, scope: !20155)
!20291 = !DILocation(line: 1521, column: 30, scope: !20155)
!20292 = !DILocation(line: 1522, column: 33, scope: !20155)
!20293 = !DILocation(line: 1522, column: 37, scope: !20155)
!20294 = !DILocation(line: 1522, column: 17, scope: !20155)
!20295 = !DILocation(line: 1522, column: 20, scope: !20155)
!20296 = !DILocation(line: 1522, column: 31, scope: !20155)
!20297 = !DILocation(line: 1523, column: 34, scope: !20155)
!20298 = !DILocation(line: 1523, column: 17, scope: !20155)
!20299 = !DILocation(line: 1523, column: 20, scope: !20155)
!20300 = !DILocation(line: 1523, column: 32, scope: !20155)
!20301 = !DILocation(line: 1527, column: 40, scope: !20155)
!20302 = !DILocation(line: 1527, column: 17, scope: !20155)
!20303 = !DILocation(line: 1527, column: 20, scope: !20155)
!20304 = !DILocation(line: 1527, column: 31, scope: !20155)
!20305 = !DILocation(line: 1527, column: 38, scope: !20155)
!20306 = !DILocation(line: 1530, column: 21, scope: !20307)
!20307 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1530, column: 21)
!20308 = !DILocation(line: 1530, column: 21, scope: !20155)
!20309 = !DILocation(line: 1531, column: 42, scope: !20310)
!20310 = distinct !DILexicalBlock(scope: !20307, file: !1716, line: 1530, column: 41)
!20311 = !DILocation(line: 1531, column: 45, scope: !20310)
!20312 = !DILocation(line: 1531, column: 25, scope: !20310)
!20313 = !DILocation(line: 1531, column: 28, scope: !20310)
!20314 = !DILocation(line: 1531, column: 40, scope: !20310)
!20315 = !DILocation(line: 1532, column: 33, scope: !20310)
!20316 = !DILocation(line: 1532, column: 37, scope: !20310)
!20317 = !DILocation(line: 1532, column: 40, scope: !20310)
!20318 = !DILocation(line: 1532, column: 25, scope: !20310)
!20319 = !DILocation(line: 1532, column: 50, scope: !20310)
!20320 = !DILocation(line: 1532, column: 53, scope: !20310)
!20321 = !DILocation(line: 1532, column: 65, scope: !20310)
!20322 = !DILocation(line: 1533, column: 17, scope: !20310)
!20323 = !DILocation(line: 1534, column: 42, scope: !20307)
!20324 = !DILocation(line: 1534, column: 45, scope: !20307)
!20325 = !DILocation(line: 1534, column: 25, scope: !20307)
!20326 = !DILocation(line: 1534, column: 28, scope: !20307)
!20327 = !DILocation(line: 1534, column: 40, scope: !20307)
!20328 = !DILocation(line: 1536, column: 21, scope: !20329)
!20329 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1536, column: 21)
!20330 = !DILocation(line: 1536, column: 25, scope: !20329)
!20331 = !DILocation(line: 1536, column: 36, scope: !20329)
!20332 = !DILocation(line: 1536, column: 44, scope: !20329)
!20333 = !DILocation(line: 1536, column: 47, scope: !20329)
!20334 = !DILocation(line: 1536, column: 21, scope: !20155)
!20335 = !DILocalVariable(name: "skip_stat", scope: !20336, file: !1716, line: 1549, type: !142)
!20336 = distinct !DILexicalBlock(scope: !20329, file: !1716, line: 1536, column: 70)
!20337 = !DILocation(line: 1549, column: 30, scope: !20336)
!20338 = !DILocation(line: 1549, column: 43, scope: !20336)
!20339 = !DILocation(line: 1550, column: 43, scope: !20336)
!20340 = !DILocation(line: 1550, column: 46, scope: !20336)
!20341 = !DILocation(line: 1551, column: 43, scope: !20336)
!20342 = !DILocation(line: 1551, column: 46, scope: !20336)
!20343 = !DILocation(line: 1552, column: 43, scope: !20336)
!20344 = !DILocation(line: 1552, column: 48, scope: !20336)
!20345 = !DILocation(line: 1552, column: 46, scope: !20336)
!20346 = !DILocation(line: 0, scope: !20336)
!20347 = !DILocation(line: 1553, column: 25, scope: !20336)
!20348 = !DILocation(line: 1553, column: 28, scope: !20336)
!20349 = !DILocation(line: 1553, column: 37, scope: !20336)
!20350 = !DILocation(line: 1556, column: 40, scope: !20336)
!20351 = !DILocation(line: 1556, column: 43, scope: !20336)
!20352 = !DILocation(line: 1556, column: 54, scope: !20336)
!20353 = !DILocation(line: 1556, column: 25, scope: !20336)
!20354 = !DILocation(line: 1557, column: 47, scope: !20336)
!20355 = !DILocation(line: 1557, column: 51, scope: !20336)
!20356 = !DILocation(line: 1557, column: 50, scope: !20336)
!20357 = !DILocation(line: 1557, column: 25, scope: !20336)
!20358 = !DILocation(line: 1558, column: 17, scope: !20336)
!20359 = !DILocation(line: 1559, column: 48, scope: !20360)
!20360 = distinct !DILexicalBlock(scope: !20329, file: !1716, line: 1558, column: 24)
!20361 = !DILocation(line: 1559, column: 52, scope: !20360)
!20362 = !DILocation(line: 1559, column: 39, scope: !20360)
!20363 = !DILocation(line: 1559, column: 25, scope: !20360)
!20364 = !DILocation(line: 1559, column: 28, scope: !20360)
!20365 = !DILocation(line: 1559, column: 37, scope: !20360)
!20366 = !DILocation(line: 1563, column: 17, scope: !20155)
!20367 = !DILocation(line: 1563, column: 20, scope: !20155)
!20368 = !DILocation(line: 1563, column: 29, scope: !20155)
!20369 = !DILocation(line: 1564, column: 21, scope: !20370)
!20370 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1564, column: 21)
!20371 = !DILocation(line: 1564, column: 26, scope: !20370)
!20372 = !DILocation(line: 1564, column: 21, scope: !20155)
!20373 = !DILocation(line: 1565, column: 39, scope: !20370)
!20374 = !DILocation(line: 1565, column: 37, scope: !20370)
!20375 = !DILocation(line: 1565, column: 30, scope: !20370)
!20376 = !DILocation(line: 1565, column: 25, scope: !20370)
!20377 = !DILocation(line: 1567, column: 42, scope: !20378)
!20378 = distinct !DILexicalBlock(scope: !20370, file: !1716, line: 1566, column: 22)
!20379 = !DILocation(line: 1567, column: 25, scope: !20378)
!20380 = !DILocation(line: 1567, column: 31, scope: !20378)
!20381 = !DILocation(line: 1567, column: 40, scope: !20378)
!20382 = !DILocation(line: 1568, column: 32, scope: !20378)
!20383 = !DILocation(line: 1568, column: 30, scope: !20378)
!20384 = !DILocation(line: 1579, column: 21, scope: !20385)
!20385 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1579, column: 21)
!20386 = !DILocation(line: 1579, column: 28, scope: !20385)
!20387 = !DILocation(line: 1580, column: 21, scope: !20385)
!20388 = !DILocation(line: 1580, column: 25, scope: !20385)
!20389 = !DILocation(line: 1580, column: 29, scope: !20385)
!20390 = !DILocation(line: 1579, column: 21, scope: !20155)
!20391 = !DILocation(line: 1581, column: 68, scope: !20385)
!20392 = !DILocation(line: 1581, column: 73, scope: !20385)
!20393 = !DILocation(line: 1581, column: 35, scope: !20385)
!20394 = !DILocation(line: 1581, column: 33, scope: !20385)
!20395 = !DILocation(line: 1581, column: 19, scope: !20385)
!20396 = !DILocation(line: 1583, column: 17, scope: !20155)
!20397 = !DILocation(line: 1584, column: 21, scope: !20398)
!20398 = distinct !DILexicalBlock(scope: !20155, file: !1716, line: 1584, column: 21)
!20399 = !DILocation(line: 1584, column: 36, scope: !20398)
!20400 = !DILocation(line: 1584, column: 33, scope: !20398)
!20401 = !DILocation(line: 1584, column: 21, scope: !20155)
!20402 = !DILocation(line: 1588, column: 25, scope: !20403)
!20403 = distinct !DILexicalBlock(scope: !20398, file: !1716, line: 1584, column: 44)
!20404 = !DILocation(line: 1592, column: 13, scope: !20405)
!20405 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1592, column: 13)
!20406 = !DILocation(line: 1592, column: 18, scope: !20405)
!20407 = !DILocation(line: 1592, column: 13, scope: !19896)
!20408 = !DILocation(line: 1593, column: 17, scope: !20405)
!20409 = !DILocation(line: 1593, column: 17, scope: !20410)
!20410 = distinct !DILexicalBlock(scope: !20405, file: !1716, line: 1593, column: 17)
!20411 = !DILabel(scope: !19896, name: "break_without_closedir", file: !1716, line: 1595)
!20412 = !DILocation(line: 1595, column: 2, scope: !19896)
!20413 = !DILocation(line: 1601, column: 13, scope: !20414)
!20414 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1601, column: 13)
!20415 = !DILocation(line: 1601, column: 13, scope: !19896)
!20416 = !DILocation(line: 1602, column: 29, scope: !20414)
!20417 = !DILocation(line: 1602, column: 33, scope: !20414)
!20418 = !DILocation(line: 1602, column: 17, scope: !20414)
!20419 = !DILocation(line: 1608, column: 13, scope: !20420)
!20420 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1608, column: 13)
!20421 = !DILocation(line: 1608, column: 13, scope: !19896)
!20422 = !DILocation(line: 1609, column: 21, scope: !20423)
!20423 = distinct !DILexicalBlock(scope: !20424, file: !1716, line: 1609, column: 21)
!20424 = distinct !DILexicalBlock(scope: !20420, file: !1716, line: 1608, column: 33)
!20425 = !DILocation(line: 1609, column: 28, scope: !20423)
!20426 = !DILocation(line: 1609, column: 32, scope: !20423)
!20427 = !DILocation(line: 1609, column: 25, scope: !20423)
!20428 = !DILocation(line: 1609, column: 44, scope: !20423)
!20429 = !DILocation(line: 1609, column: 47, scope: !20423)
!20430 = !DILocation(line: 1609, column: 54, scope: !20423)
!20431 = !DILocation(line: 1609, column: 21, scope: !20424)
!20432 = !DILocation(line: 1610, column: 25, scope: !20423)
!20433 = !DILocation(line: 1611, column: 18, scope: !20424)
!20434 = !DILocation(line: 1611, column: 21, scope: !20424)
!20435 = !DILocation(line: 1612, column: 9, scope: !20424)
!20436 = !DILocation(line: 1621, column: 14, scope: !20437)
!20437 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1621, column: 13)
!20438 = !DILocation(line: 1621, column: 31, scope: !20437)
!20439 = !DILocation(line: 1621, column: 34, scope: !20437)
!20440 = !DILocation(line: 1621, column: 42, scope: !20437)
!20441 = !DILocation(line: 1621, column: 46, scope: !20437)
!20442 = !DILocation(line: 1621, column: 51, scope: !20437)
!20443 = !DILocation(line: 1621, column: 61, scope: !20437)
!20444 = !DILocation(line: 1621, column: 65, scope: !20437)
!20445 = !DILocation(line: 1621, column: 73, scope: !20437)
!20446 = !DILocation(line: 1622, column: 14, scope: !20437)
!20447 = !DILocation(line: 1622, column: 19, scope: !20437)
!20448 = !DILocation(line: 1622, column: 29, scope: !20437)
!20449 = !DILocation(line: 1621, column: 13, scope: !19896)
!20450 = !DILocation(line: 1623, column: 36, scope: !20437)
!20451 = !DILocation(line: 1623, column: 16, scope: !20437)
!20452 = !DILocation(line: 1624, column: 35, scope: !20437)
!20453 = !DILocation(line: 1624, column: 39, scope: !20437)
!20454 = !DILocation(line: 1624, column: 44, scope: !20437)
!20455 = !DILocation(line: 1624, column: 16, scope: !20437)
!20456 = !DILocation(line: 1625, column: 17, scope: !20457)
!20457 = distinct !DILexicalBlock(scope: !20437, file: !1716, line: 1624, column: 68)
!20458 = !DILocation(line: 1625, column: 22, scope: !20457)
!20459 = !DILocation(line: 1625, column: 31, scope: !20457)
!20460 = !DILocation(line: 1626, column: 17, scope: !20457)
!20461 = !DILocation(line: 1627, column: 27, scope: !20457)
!20462 = !DILocation(line: 1627, column: 17, scope: !20457)
!20463 = !DILocation(line: 1628, column: 17, scope: !20457)
!20464 = !DILocation(line: 1632, column: 14, scope: !20465)
!20465 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1632, column: 13)
!20466 = !DILocation(line: 1632, column: 13, scope: !19896)
!20467 = !DILocation(line: 1633, column: 21, scope: !20468)
!20468 = distinct !DILexicalBlock(scope: !20469, file: !1716, line: 1633, column: 21)
!20469 = distinct !DILexicalBlock(scope: !20465, file: !1716, line: 1632, column: 22)
!20470 = !DILocation(line: 1633, column: 26, scope: !20468)
!20471 = !DILocation(line: 1634, column: 21, scope: !20468)
!20472 = !DILocation(line: 1634, column: 24, scope: !20468)
!20473 = !DILocation(line: 1634, column: 29, scope: !20468)
!20474 = !DILocation(line: 1634, column: 38, scope: !20468)
!20475 = !DILocation(line: 1634, column: 49, scope: !20468)
!20476 = !DILocation(line: 1634, column: 52, scope: !20468)
!20477 = !DILocation(line: 1634, column: 57, scope: !20468)
!20478 = !DILocation(line: 1634, column: 66, scope: !20468)
!20479 = !DILocation(line: 1633, column: 21, scope: !20469)
!20480 = !DILocation(line: 1635, column: 25, scope: !20468)
!20481 = !DILocation(line: 1635, column: 30, scope: !20468)
!20482 = !DILocation(line: 1635, column: 39, scope: !20468)
!20483 = !DILocation(line: 1636, column: 27, scope: !20469)
!20484 = !DILocation(line: 1636, column: 17, scope: !20469)
!20485 = !DILocation(line: 1637, column: 17, scope: !20469)
!20486 = !DILocation(line: 1640, column: 13, scope: !20487)
!20487 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1640, column: 13)
!20488 = !DILocation(line: 1640, column: 13, scope: !19896)
!20489 = !DILocation(line: 1641, column: 17, scope: !20490)
!20490 = distinct !DILexicalBlock(scope: !20487, file: !1716, line: 1640, column: 28)
!20491 = !DILocation(line: 1641, column: 21, scope: !20490)
!20492 = !DILocation(line: 1641, column: 32, scope: !20490)
!20493 = !DILocation(line: 1642, column: 34, scope: !20490)
!20494 = !DILocation(line: 1642, column: 38, scope: !20490)
!20495 = !DILocation(line: 1642, column: 44, scope: !20490)
!20496 = !DILocation(line: 1642, column: 24, scope: !20490)
!20497 = !DILocation(line: 1642, column: 22, scope: !20490)
!20498 = !DILocation(line: 1643, column: 17, scope: !20490)
!20499 = !DILocation(line: 1643, column: 21, scope: !20490)
!20500 = !DILocation(line: 1643, column: 32, scope: !20490)
!20501 = !DILocation(line: 1644, column: 9, scope: !20490)
!20502 = !DILocation(line: 1647, column: 13, scope: !20503)
!20503 = distinct !DILexicalBlock(scope: !19896, file: !1716, line: 1647, column: 13)
!20504 = !DILocation(line: 1647, column: 17, scope: !20503)
!20505 = !DILocation(line: 1647, column: 28, scope: !20503)
!20506 = !DILocation(line: 1647, column: 31, scope: !20503)
!20507 = !DILocation(line: 1647, column: 38, scope: !20503)
!20508 = !DILocation(line: 1647, column: 13, scope: !19896)
!20509 = !DILocation(line: 1648, column: 33, scope: !20503)
!20510 = !DILocation(line: 1648, column: 37, scope: !20503)
!20511 = !DILocation(line: 1648, column: 43, scope: !20503)
!20512 = !DILocation(line: 1648, column: 24, scope: !20503)
!20513 = !DILocation(line: 1648, column: 22, scope: !20503)
!20514 = !DILocation(line: 1648, column: 17, scope: !20503)
!20515 = !DILocation(line: 1649, column: 17, scope: !19896)
!20516 = !DILocation(line: 1649, column: 9, scope: !19896)
!20517 = !DILocation(line: 1650, column: 1, scope: !19896)
!20518 = distinct !DISubprogram(name: "restore_initial_cwd", scope: !1716, file: !1716, line: 333, type: !18916, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20519 = !DILocalVariable(name: "sp", arg: 1, scope: !20518, file: !1716, line: 333, type: !1741)
!20520 = !DILocation(line: 333, column: 27, scope: !20518)
!20521 = !DILocalVariable(name: "fail", scope: !20518, file: !1716, line: 335, type: !7)
!20522 = !DILocation(line: 335, column: 7, scope: !20518)
!20523 = !DILocation(line: 335, column: 14, scope: !20518)
!20524 = !DILocation(line: 0, scope: !20518)
!20525 = !DILocation(line: 336, column: 20, scope: !20518)
!20526 = !DILocation(line: 336, column: 24, scope: !20518)
!20527 = !DILocation(line: 336, column: 3, scope: !20518)
!20528 = !DILocation(line: 337, column: 10, scope: !20518)
!20529 = !DILocation(line: 337, column: 3, scope: !20518)
!20530 = distinct !DISubprogram(name: "fts_load", scope: !1716, file: !1716, line: 550, type: !19686, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20531 = !DILocalVariable(name: "sp", arg: 1, scope: !20530, file: !1716, line: 550, type: !1741)
!20532 = !DILocation(line: 550, column: 16, scope: !20530)
!20533 = !DILocalVariable(name: "p", arg: 2, scope: !20530, file: !1716, line: 550, type: !1819)
!20534 = !DILocation(line: 550, column: 37, scope: !20530)
!20535 = !DILocalVariable(name: "len", scope: !20530, file: !1716, line: 552, type: !55)
!20536 = !DILocation(line: 552, column: 25, scope: !20530)
!20537 = !DILocalVariable(name: "cp", scope: !20530, file: !1716, line: 553, type: !9)
!20538 = !DILocation(line: 553, column: 24, scope: !20530)
!20539 = !DILocation(line: 562, column: 32, scope: !20530)
!20540 = !DILocation(line: 562, column: 35, scope: !20530)
!20541 = !DILocation(line: 562, column: 15, scope: !20530)
!20542 = !DILocation(line: 562, column: 18, scope: !20530)
!20543 = !DILocation(line: 562, column: 30, scope: !20530)
!20544 = !DILocation(line: 562, column: 13, scope: !20530)
!20545 = !DILocation(line: 563, column: 17, scope: !20530)
!20546 = !DILocation(line: 563, column: 21, scope: !20530)
!20547 = !DILocation(line: 563, column: 31, scope: !20530)
!20548 = !DILocation(line: 563, column: 34, scope: !20530)
!20549 = !DILocation(line: 563, column: 9, scope: !20530)
!20550 = !DILocation(line: 563, column: 44, scope: !20530)
!20551 = !DILocation(line: 563, column: 48, scope: !20530)
!20552 = !DILocation(line: 564, column: 27, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20530, file: !1716, line: 564, column: 13)
!20554 = !DILocation(line: 564, column: 30, scope: !20553)
!20555 = !DILocation(line: 564, column: 19, scope: !20553)
!20556 = !DILocation(line: 564, column: 17, scope: !20553)
!20557 = !DILocation(line: 564, column: 46, scope: !20553)
!20558 = !DILocation(line: 564, column: 50, scope: !20553)
!20559 = !DILocation(line: 564, column: 56, scope: !20553)
!20560 = !DILocation(line: 564, column: 59, scope: !20553)
!20561 = !DILocation(line: 564, column: 53, scope: !20553)
!20562 = !DILocation(line: 564, column: 68, scope: !20553)
!20563 = !DILocation(line: 564, column: 71, scope: !20553)
!20564 = !DILocation(line: 564, column: 13, scope: !20530)
!20565 = !DILocation(line: 565, column: 30, scope: !20566)
!20566 = distinct !DILexicalBlock(scope: !20553, file: !1716, line: 564, column: 79)
!20567 = !DILocation(line: 565, column: 23, scope: !20566)
!20568 = !DILocation(line: 565, column: 21, scope: !20566)
!20569 = !DILocation(line: 566, column: 25, scope: !20566)
!20570 = !DILocation(line: 566, column: 28, scope: !20566)
!20571 = !DILocation(line: 566, column: 17, scope: !20566)
!20572 = !DILocation(line: 566, column: 38, scope: !20566)
!20573 = !DILocation(line: 566, column: 42, scope: !20566)
!20574 = !DILocation(line: 566, column: 46, scope: !20566)
!20575 = !DILocation(line: 567, column: 34, scope: !20566)
!20576 = !DILocation(line: 567, column: 17, scope: !20566)
!20577 = !DILocation(line: 567, column: 20, scope: !20566)
!20578 = !DILocation(line: 567, column: 32, scope: !20566)
!20579 = !DILocation(line: 568, column: 9, scope: !20566)
!20580 = !DILocation(line: 569, column: 40, scope: !20530)
!20581 = !DILocation(line: 569, column: 44, scope: !20530)
!20582 = !DILocation(line: 569, column: 26, scope: !20530)
!20583 = !DILocation(line: 569, column: 29, scope: !20530)
!20584 = !DILocation(line: 569, column: 38, scope: !20530)
!20585 = !DILocation(line: 569, column: 9, scope: !20530)
!20586 = !DILocation(line: 569, column: 12, scope: !20530)
!20587 = !DILocation(line: 569, column: 24, scope: !20530)
!20588 = !DILocation(line: 570, column: 1, scope: !20530)
!20589 = distinct !DISubprogram(name: "leaf_optimization", scope: !1716, file: !1716, line: 792, type: !20590, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20590 = !DISubroutineType(types: !20591)
!20591 = !{!1715, !1723, !7}
!20592 = !DILocalVariable(name: "p", arg: 1, scope: !20589, file: !1716, line: 792, type: !1723)
!20593 = !DILocation(line: 792, column: 34, scope: !20589)
!20594 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20589, file: !1716, line: 792, type: !7)
!20595 = !DILocation(line: 792, column: 41, scope: !20589)
!20596 = !DILocation(line: 794, column: 28, scope: !20589)
!20597 = !DILocation(line: 794, column: 31, scope: !20589)
!20598 = !DILocation(line: 794, column: 11, scope: !20589)
!20599 = !DILocation(line: 794, column: 3, scope: !20589)
!20600 = !DILocation(line: 800, column: 7, scope: !20601)
!20601 = distinct !DILexicalBlock(scope: !20589, file: !1716, line: 795, column: 5)
!20602 = !DILocation(line: 804, column: 7, scope: !20601)
!20603 = !DILocation(line: 808, column: 7, scope: !20601)
!20604 = !DILocation(line: 812, column: 7, scope: !20601)
!20605 = !DILocation(line: 818, column: 7, scope: !20601)
!20606 = !DILocation(line: 822, column: 7, scope: !20601)
!20607 = !DILocation(line: 825, column: 7, scope: !20601)
!20608 = !DILocation(line: 827, column: 1, scope: !20589)
!20609 = distinct !DISubprogram(name: "enter_dir", scope: !1823, file: !1823, line: 74, type: !20610, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20610 = !DISubroutineType(types: !20611)
!20611 = !{!142, !1741, !1819}
!20612 = !DILocalVariable(name: "fts", arg: 1, scope: !20609, file: !1823, line: 74, type: !1741)
!20613 = !DILocation(line: 74, column: 17, scope: !20609)
!20614 = !DILocalVariable(name: "ent", arg: 2, scope: !20609, file: !1823, line: 74, type: !1819)
!20615 = !DILocation(line: 74, column: 30, scope: !20609)
!20616 = !DILocation(line: 76, column: 7, scope: !20617)
!20617 = distinct !DILexicalBlock(scope: !20609, file: !1823, line: 76, column: 7)
!20618 = !DILocation(line: 76, column: 12, scope: !20617)
!20619 = !DILocation(line: 76, column: 24, scope: !20617)
!20620 = !DILocation(line: 76, column: 7, scope: !20609)
!20621 = !DILocalVariable(name: "st", scope: !20622, file: !1823, line: 78, type: !1829)
!20622 = distinct !DILexicalBlock(scope: !20617, file: !1823, line: 77, column: 5)
!20623 = !DILocation(line: 78, column: 26, scope: !20622)
!20624 = !DILocation(line: 78, column: 31, scope: !20622)
!20625 = !DILocation(line: 78, column: 36, scope: !20622)
!20626 = !DILocalVariable(name: "ad", scope: !20622, file: !1823, line: 79, type: !1843)
!20627 = !DILocation(line: 79, column: 26, scope: !20622)
!20628 = !DILocation(line: 79, column: 31, scope: !20622)
!20629 = !DILocalVariable(name: "ad_from_table", scope: !20622, file: !1823, line: 80, type: !1843)
!20630 = !DILocation(line: 80, column: 26, scope: !20622)
!20631 = !DILocation(line: 82, column: 12, scope: !20632)
!20632 = distinct !DILexicalBlock(scope: !20622, file: !1823, line: 82, column: 11)
!20633 = !DILocation(line: 82, column: 11, scope: !20622)
!20634 = !DILocation(line: 83, column: 9, scope: !20632)
!20635 = !DILocation(line: 85, column: 17, scope: !20622)
!20636 = !DILocation(line: 85, column: 21, scope: !20622)
!20637 = !DILocation(line: 85, column: 7, scope: !20622)
!20638 = !DILocation(line: 85, column: 11, scope: !20622)
!20639 = !DILocation(line: 85, column: 15, scope: !20622)
!20640 = !DILocation(line: 86, column: 17, scope: !20622)
!20641 = !DILocation(line: 86, column: 21, scope: !20622)
!20642 = !DILocation(line: 86, column: 7, scope: !20622)
!20643 = !DILocation(line: 86, column: 11, scope: !20622)
!20644 = !DILocation(line: 86, column: 15, scope: !20622)
!20645 = !DILocation(line: 87, column: 21, scope: !20622)
!20646 = !DILocation(line: 87, column: 7, scope: !20622)
!20647 = !DILocation(line: 87, column: 11, scope: !20622)
!20648 = !DILocation(line: 87, column: 19, scope: !20622)
!20649 = !DILocation(line: 92, column: 36, scope: !20622)
!20650 = !DILocation(line: 92, column: 41, scope: !20622)
!20651 = !DILocation(line: 92, column: 51, scope: !20622)
!20652 = !DILocation(line: 92, column: 55, scope: !20622)
!20653 = !DILocation(line: 92, column: 23, scope: !20622)
!20654 = !DILocation(line: 92, column: 21, scope: !20622)
!20655 = !DILocation(line: 94, column: 11, scope: !20656)
!20656 = distinct !DILexicalBlock(scope: !20622, file: !1823, line: 94, column: 11)
!20657 = !DILocation(line: 94, column: 28, scope: !20656)
!20658 = !DILocation(line: 94, column: 25, scope: !20656)
!20659 = !DILocation(line: 94, column: 11, scope: !20622)
!20660 = !DILocation(line: 96, column: 17, scope: !20661)
!20661 = distinct !DILexicalBlock(scope: !20656, file: !1823, line: 95, column: 9)
!20662 = !DILocation(line: 96, column: 11, scope: !20661)
!20663 = !DILocation(line: 97, column: 16, scope: !20664)
!20664 = distinct !DILexicalBlock(scope: !20661, file: !1823, line: 97, column: 15)
!20665 = !DILocation(line: 97, column: 15, scope: !20661)
!20666 = !DILocation(line: 98, column: 13, scope: !20664)
!20667 = !DILocation(line: 102, column: 28, scope: !20661)
!20668 = !DILocation(line: 102, column: 43, scope: !20661)
!20669 = !DILocation(line: 102, column: 11, scope: !20661)
!20670 = !DILocation(line: 102, column: 16, scope: !20661)
!20671 = !DILocation(line: 102, column: 26, scope: !20661)
!20672 = !DILocation(line: 103, column: 11, scope: !20661)
!20673 = !DILocation(line: 103, column: 16, scope: !20661)
!20674 = !DILocation(line: 103, column: 25, scope: !20661)
!20675 = !DILocation(line: 104, column: 9, scope: !20661)
!20676 = !DILocation(line: 105, column: 5, scope: !20622)
!20677 = !DILocation(line: 108, column: 24, scope: !20678)
!20678 = distinct !DILexicalBlock(scope: !20679, file: !1823, line: 108, column: 11)
!20679 = distinct !DILexicalBlock(scope: !20617, file: !1823, line: 107, column: 5)
!20680 = !DILocation(line: 108, column: 29, scope: !20678)
!20681 = !DILocation(line: 108, column: 39, scope: !20678)
!20682 = !DILocation(line: 108, column: 46, scope: !20678)
!20683 = !DILocation(line: 108, column: 51, scope: !20678)
!20684 = !DILocation(line: 108, column: 11, scope: !20678)
!20685 = !DILocation(line: 108, column: 11, scope: !20679)
!20686 = !DILocation(line: 114, column: 28, scope: !20687)
!20687 = distinct !DILexicalBlock(scope: !20678, file: !1823, line: 109, column: 9)
!20688 = !DILocation(line: 114, column: 11, scope: !20687)
!20689 = !DILocation(line: 114, column: 16, scope: !20687)
!20690 = !DILocation(line: 114, column: 26, scope: !20687)
!20691 = !DILocation(line: 115, column: 11, scope: !20687)
!20692 = !DILocation(line: 115, column: 16, scope: !20687)
!20693 = !DILocation(line: 115, column: 25, scope: !20687)
!20694 = !DILocation(line: 116, column: 9, scope: !20687)
!20695 = !DILocation(line: 119, column: 3, scope: !20609)
!20696 = !DILocation(line: 120, column: 1, scope: !20609)
!20697 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !1716, file: !1716, line: 305, type: !20698, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20698 = !DISubroutineType(types: !20699)
!20699 = !{null, !1741, !7, !142}
!20700 = !DILocalVariable(name: "sp", arg: 1, scope: !20697, file: !1716, line: 305, type: !1741)
!20701 = !DILocation(line: 305, column: 22, scope: !20697)
!20702 = !DILocalVariable(name: "fd", arg: 2, scope: !20697, file: !1716, line: 305, type: !7)
!20703 = !DILocation(line: 305, column: 30, scope: !20697)
!20704 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !20697, file: !1716, line: 305, type: !142)
!20705 = !DILocation(line: 305, column: 39, scope: !20697)
!20706 = !DILocalVariable(name: "old", scope: !20697, file: !1716, line: 307, type: !7)
!20707 = !DILocation(line: 307, column: 7, scope: !20697)
!20708 = !DILocation(line: 307, column: 13, scope: !20697)
!20709 = !DILocation(line: 307, column: 17, scope: !20697)
!20710 = !DILocation(line: 308, column: 3, scope: !20697)
!20711 = !DILocation(line: 308, column: 3, scope: !20712)
!20712 = distinct !DILexicalBlock(scope: !20713, file: !1716, line: 308, column: 3)
!20713 = distinct !DILexicalBlock(scope: !20697, file: !1716, line: 308, column: 3)
!20714 = !DILocation(line: 308, column: 3, scope: !20713)
!20715 = !DILocation(line: 310, column: 7, scope: !20716)
!20716 = distinct !DILexicalBlock(scope: !20697, file: !1716, line: 310, column: 7)
!20717 = !DILocation(line: 310, column: 7, scope: !20697)
!20718 = !DILocalVariable(name: "prev_fd_in_slot", scope: !20719, file: !1716, line: 314, type: !7)
!20719 = distinct !DILexicalBlock(scope: !20716, file: !1716, line: 311, column: 5)
!20720 = !DILocation(line: 314, column: 11, scope: !20719)
!20721 = !DILocation(line: 314, column: 43, scope: !20719)
!20722 = !DILocation(line: 314, column: 47, scope: !20719)
!20723 = !DILocation(line: 314, column: 60, scope: !20719)
!20724 = !DILocation(line: 314, column: 29, scope: !20719)
!20725 = !DILocation(line: 316, column: 16, scope: !20726)
!20726 = distinct !DILexicalBlock(scope: !20719, file: !1716, line: 316, column: 11)
!20727 = !DILocation(line: 316, column: 13, scope: !20726)
!20728 = !DILocation(line: 316, column: 11, scope: !20719)
!20729 = !DILocation(line: 317, column: 16, scope: !20726)
!20730 = !DILocation(line: 317, column: 9, scope: !20726)
!20731 = !DILocation(line: 318, column: 5, scope: !20719)
!20732 = !DILocation(line: 319, column: 15, scope: !20733)
!20733 = distinct !DILexicalBlock(scope: !20716, file: !1716, line: 319, column: 13)
!20734 = !DILocation(line: 319, column: 13, scope: !20716)
!20735 = !DILocation(line: 321, column: 16, scope: !20736)
!20736 = distinct !DILexicalBlock(scope: !20737, file: !1716, line: 321, column: 11)
!20737 = distinct !DILexicalBlock(scope: !20733, file: !1716, line: 320, column: 5)
!20738 = !DILocation(line: 321, column: 13, scope: !20736)
!20739 = !DILocation(line: 321, column: 11, scope: !20737)
!20740 = !DILocation(line: 322, column: 16, scope: !20736)
!20741 = !DILocation(line: 322, column: 9, scope: !20736)
!20742 = !DILocation(line: 323, column: 5, scope: !20737)
!20743 = !DILocation(line: 325, column: 20, scope: !20697)
!20744 = !DILocation(line: 325, column: 3, scope: !20697)
!20745 = !DILocation(line: 325, column: 7, scope: !20697)
!20746 = !DILocation(line: 325, column: 18, scope: !20697)
!20747 = !DILocation(line: 326, column: 1, scope: !20697)
!20748 = distinct !DISubprogram(name: "filesystem_type", scope: !1716, file: !1716, line: 709, type: !20749, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20749 = !DISubroutineType(types: !20750)
!20750 = !{!1838, !1723, !7}
!20751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !20752, line: 24, size: 960, elements: !20753)
!20752 = !DIFile(filename: "/usr/include/bits/statfs.h", directory: "")
!20753 = !{!20754, !20755, !20756, !20758, !20759, !20760, !20762, !20763, !20769, !20770, !20771, !20772}
!20754 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !20751, file: !20752, line: 26, baseType: !1839, size: 64)
!20755 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !20751, file: !20752, line: 27, baseType: !1839, size: 64, offset: 64)
!20756 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !20751, file: !20752, line: 29, baseType: !20757, size: 64, offset: 128)
!20757 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !30, line: 183, baseType: !57)
!20758 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !20751, file: !20752, line: 30, baseType: !20757, size: 64, offset: 192)
!20759 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !20751, file: !20752, line: 31, baseType: !20757, size: 64, offset: 256)
!20760 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !20751, file: !20752, line: 32, baseType: !20761, size: 64, offset: 320)
!20761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !30, line: 187, baseType: !57)
!20762 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !20751, file: !20752, line: 33, baseType: !20761, size: 64, offset: 384)
!20763 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !20751, file: !20752, line: 41, baseType: !20764, size: 64, offset: 448)
!20764 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !30, line: 155, baseType: !20765)
!20765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !30, line: 155, size: 64, elements: !20766)
!20766 = !{!20767}
!20767 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !20765, file: !30, line: 155, baseType: !20768, size: 64)
!20768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !246)
!20769 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !20751, file: !20752, line: 42, baseType: !1839, size: 64, offset: 512)
!20770 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !20751, file: !20752, line: 43, baseType: !1839, size: 64, offset: 576)
!20771 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !20751, file: !20752, line: 44, baseType: !1839, size: 64, offset: 640)
!20772 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !20751, file: !20752, line: 45, baseType: !20773, size: 256, offset: 704)
!20773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 256, elements: !228)
!20774 = !DILocalVariable(name: "p", arg: 1, scope: !20748, file: !1716, line: 709, type: !1723)
!20775 = !DILocation(line: 709, column: 32, scope: !20748)
!20776 = !DILocalVariable(name: "fd", arg: 2, scope: !20748, file: !1716, line: 709, type: !7)
!20777 = !DILocation(line: 709, column: 39, scope: !20748)
!20778 = !DILocalVariable(name: "sp", scope: !20748, file: !1716, line: 711, type: !1741)
!20779 = !DILocation(line: 711, column: 8, scope: !20748)
!20780 = !DILocation(line: 711, column: 13, scope: !20748)
!20781 = !DILocation(line: 711, column: 16, scope: !20748)
!20782 = !DILocalVariable(name: "h", scope: !20748, file: !1716, line: 712, type: !1831)
!20783 = !DILocation(line: 712, column: 15, scope: !20748)
!20784 = !DILocation(line: 712, column: 19, scope: !20748)
!20785 = !DILocation(line: 712, column: 23, scope: !20748)
!20786 = !DILocalVariable(name: "ent", scope: !20748, file: !1716, line: 713, type: !1833)
!20787 = !DILocation(line: 713, column: 20, scope: !20748)
!20788 = !DILocalVariable(name: "fs_buf", scope: !20748, file: !1716, line: 714, type: !20751)
!20789 = !DILocation(line: 714, column: 17, scope: !20748)
!20790 = !DILocation(line: 718, column: 8, scope: !20791)
!20791 = distinct !DILexicalBlock(scope: !20748, file: !1716, line: 718, column: 7)
!20792 = !DILocation(line: 718, column: 7, scope: !20748)
!20793 = !DILocation(line: 719, column: 5, scope: !20791)
!20794 = !DILocation(line: 721, column: 9, scope: !20795)
!20795 = distinct !DILexicalBlock(scope: !20748, file: !1716, line: 721, column: 7)
!20796 = !DILocation(line: 721, column: 7, scope: !20748)
!20797 = !DILocation(line: 723, column: 9, scope: !20795)
!20798 = !DILocation(line: 722, column: 9, scope: !20795)
!20799 = !DILocation(line: 722, column: 13, scope: !20795)
!20800 = !DILocation(line: 723, column: 7, scope: !20795)
!20801 = !DILocation(line: 722, column: 7, scope: !20795)
!20802 = !DILocation(line: 722, column: 5, scope: !20795)
!20803 = !DILocation(line: 725, column: 7, scope: !20804)
!20804 = distinct !DILexicalBlock(scope: !20748, file: !1716, line: 725, column: 7)
!20805 = !DILocation(line: 725, column: 7, scope: !20748)
!20806 = !DILocalVariable(name: "tmp", scope: !20807, file: !1716, line: 727, type: !1834)
!20807 = distinct !DILexicalBlock(scope: !20804, file: !1716, line: 726, column: 5)
!20808 = !DILocation(line: 727, column: 23, scope: !20807)
!20809 = !DILocation(line: 728, column: 20, scope: !20807)
!20810 = !DILocation(line: 728, column: 23, scope: !20807)
!20811 = !DILocation(line: 728, column: 34, scope: !20807)
!20812 = !DILocation(line: 728, column: 11, scope: !20807)
!20813 = !DILocation(line: 728, column: 18, scope: !20807)
!20814 = !DILocation(line: 729, column: 26, scope: !20807)
!20815 = !DILocation(line: 729, column: 29, scope: !20807)
!20816 = !DILocation(line: 729, column: 13, scope: !20807)
!20817 = !DILocation(line: 729, column: 11, scope: !20807)
!20818 = !DILocation(line: 730, column: 11, scope: !20819)
!20819 = distinct !DILexicalBlock(scope: !20807, file: !1716, line: 730, column: 11)
!20820 = !DILocation(line: 730, column: 11, scope: !20807)
!20821 = !DILocation(line: 731, column: 16, scope: !20819)
!20822 = !DILocation(line: 731, column: 21, scope: !20819)
!20823 = !DILocation(line: 731, column: 9, scope: !20819)
!20824 = !DILocation(line: 732, column: 5, scope: !20807)
!20825 = !DILocation(line: 735, column: 7, scope: !20826)
!20826 = distinct !DILexicalBlock(scope: !20748, file: !1716, line: 735, column: 7)
!20827 = !DILocation(line: 735, column: 10, scope: !20826)
!20828 = !DILocation(line: 735, column: 14, scope: !20826)
!20829 = !DILocation(line: 735, column: 26, scope: !20826)
!20830 = !DILocation(line: 735, column: 17, scope: !20826)
!20831 = !DILocation(line: 735, column: 39, scope: !20826)
!20832 = !DILocation(line: 735, column: 7, scope: !20748)
!20833 = !DILocation(line: 736, column: 5, scope: !20826)
!20834 = !DILocation(line: 738, column: 7, scope: !20835)
!20835 = distinct !DILexicalBlock(scope: !20748, file: !1716, line: 738, column: 7)
!20836 = !DILocation(line: 738, column: 7, scope: !20748)
!20837 = !DILocalVariable(name: "t2", scope: !20838, file: !1716, line: 740, type: !1833)
!20838 = distinct !DILexicalBlock(scope: !20835, file: !1716, line: 739, column: 5)
!20839 = !DILocation(line: 740, column: 24, scope: !20838)
!20840 = !DILocation(line: 740, column: 29, scope: !20838)
!20841 = !DILocation(line: 741, column: 11, scope: !20842)
!20842 = distinct !DILexicalBlock(scope: !20838, file: !1716, line: 741, column: 11)
!20843 = !DILocation(line: 741, column: 11, scope: !20838)
!20844 = !DILocation(line: 743, column: 24, scope: !20845)
!20845 = distinct !DILexicalBlock(scope: !20842, file: !1716, line: 742, column: 9)
!20846 = !DILocation(line: 743, column: 27, scope: !20845)
!20847 = !DILocation(line: 743, column: 38, scope: !20845)
!20848 = !DILocation(line: 743, column: 11, scope: !20845)
!20849 = !DILocation(line: 743, column: 15, scope: !20845)
!20850 = !DILocation(line: 743, column: 22, scope: !20845)
!20851 = !DILocation(line: 744, column: 31, scope: !20845)
!20852 = !DILocation(line: 744, column: 11, scope: !20845)
!20853 = !DILocation(line: 744, column: 15, scope: !20845)
!20854 = !DILocation(line: 744, column: 22, scope: !20845)
!20855 = !DILocation(line: 746, column: 30, scope: !20845)
!20856 = !DILocation(line: 746, column: 33, scope: !20845)
!20857 = !DILocation(line: 746, column: 17, scope: !20845)
!20858 = !DILocation(line: 746, column: 15, scope: !20845)
!20859 = !DILocation(line: 747, column: 15, scope: !20860)
!20860 = distinct !DILexicalBlock(scope: !20845, file: !1716, line: 747, column: 15)
!20861 = !DILocation(line: 747, column: 15, scope: !20845)
!20862 = !DILocation(line: 748, column: 13, scope: !20860)
!20863 = !DILocation(line: 748, column: 13, scope: !20864)
!20864 = distinct !DILexicalBlock(scope: !20865, file: !1716, line: 748, column: 13)
!20865 = distinct !DILexicalBlock(scope: !20860, file: !1716, line: 748, column: 13)
!20866 = !DILocation(line: 748, column: 13, scope: !20865)
!20867 = !DILocation(line: 750, column: 19, scope: !20860)
!20868 = !DILocation(line: 750, column: 13, scope: !20860)
!20869 = !DILocation(line: 751, column: 9, scope: !20845)
!20870 = !DILocation(line: 752, column: 5, scope: !20838)
!20871 = !DILocation(line: 754, column: 17, scope: !20748)
!20872 = !DILocation(line: 754, column: 3, scope: !20748)
!20873 = !DILocation(line: 755, column: 1, scope: !20748)
!20874 = distinct !DISubprogram(name: "dev_type_hash", scope: !1716, file: !1716, line: 689, type: !707, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20875 = !DILocalVariable(name: "x", arg: 1, scope: !20874, file: !1716, line: 689, type: !709)
!20876 = !DILocation(line: 689, column: 28, scope: !20874)
!20877 = !DILocalVariable(name: "table_size", arg: 2, scope: !20874, file: !1716, line: 689, type: !55)
!20878 = !DILocation(line: 689, column: 38, scope: !20874)
!20879 = !DILocalVariable(name: "ax", scope: !20874, file: !1716, line: 691, type: !1841)
!20880 = !DILocation(line: 691, column: 26, scope: !20874)
!20881 = !DILocation(line: 691, column: 31, scope: !20874)
!20882 = !DILocalVariable(name: "dev", scope: !20874, file: !1716, line: 692, type: !486)
!20883 = !DILocation(line: 692, column: 13, scope: !20874)
!20884 = !DILocation(line: 692, column: 19, scope: !20874)
!20885 = !DILocation(line: 692, column: 23, scope: !20874)
!20886 = !DILocation(line: 693, column: 10, scope: !20874)
!20887 = !DILocation(line: 693, column: 16, scope: !20874)
!20888 = !DILocation(line: 693, column: 14, scope: !20874)
!20889 = !DILocation(line: 693, column: 3, scope: !20874)
!20890 = distinct !DISubprogram(name: "dev_type_compare", scope: !1716, file: !1716, line: 697, type: !714, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20891 = !DILocalVariable(name: "x", arg: 1, scope: !20890, file: !1716, line: 697, type: !709)
!20892 = !DILocation(line: 697, column: 31, scope: !20890)
!20893 = !DILocalVariable(name: "y", arg: 2, scope: !20890, file: !1716, line: 697, type: !709)
!20894 = !DILocation(line: 697, column: 46, scope: !20890)
!20895 = !DILocalVariable(name: "ax", scope: !20890, file: !1716, line: 699, type: !1841)
!20896 = !DILocation(line: 699, column: 26, scope: !20890)
!20897 = !DILocation(line: 699, column: 31, scope: !20890)
!20898 = !DILocalVariable(name: "ay", scope: !20890, file: !1716, line: 700, type: !1841)
!20899 = !DILocation(line: 700, column: 26, scope: !20890)
!20900 = !DILocation(line: 700, column: 31, scope: !20890)
!20901 = !DILocation(line: 701, column: 10, scope: !20890)
!20902 = !DILocation(line: 701, column: 14, scope: !20890)
!20903 = !DILocation(line: 701, column: 24, scope: !20890)
!20904 = !DILocation(line: 701, column: 28, scope: !20890)
!20905 = !DILocation(line: 701, column: 21, scope: !20890)
!20906 = !DILocation(line: 701, column: 3, scope: !20890)
!20907 = distinct !DISubprogram(name: "set_stat_type", scope: !1716, file: !1716, line: 1234, type: !20908, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20908 = !DISubroutineType(types: !20909)
!20909 = !{null, !1852, !70}
!20910 = !DILocalVariable(name: "st", arg: 1, scope: !20907, file: !1716, line: 1234, type: !1852)
!20911 = !DILocation(line: 1234, column: 29, scope: !20907)
!20912 = !DILocalVariable(name: "dtype", arg: 2, scope: !20907, file: !1716, line: 1234, type: !70)
!20913 = !DILocation(line: 1234, column: 46, scope: !20907)
!20914 = !DILocalVariable(name: "type", scope: !20907, file: !1716, line: 1236, type: !239)
!20915 = !DILocation(line: 1236, column: 10, scope: !20907)
!20916 = !DILocation(line: 1237, column: 11, scope: !20907)
!20917 = !DILocation(line: 1237, column: 3, scope: !20907)
!20918 = !DILocation(line: 1240, column: 12, scope: !20919)
!20919 = distinct !DILexicalBlock(scope: !20907, file: !1716, line: 1238, column: 5)
!20920 = !DILocation(line: 1241, column: 7, scope: !20919)
!20921 = !DILocation(line: 1243, column: 12, scope: !20919)
!20922 = !DILocation(line: 1244, column: 7, scope: !20919)
!20923 = !DILocation(line: 1246, column: 12, scope: !20919)
!20924 = !DILocation(line: 1247, column: 7, scope: !20919)
!20925 = !DILocation(line: 1249, column: 12, scope: !20919)
!20926 = !DILocation(line: 1250, column: 7, scope: !20919)
!20927 = !DILocation(line: 1252, column: 12, scope: !20919)
!20928 = !DILocation(line: 1253, column: 7, scope: !20919)
!20929 = !DILocation(line: 1255, column: 12, scope: !20919)
!20930 = !DILocation(line: 1256, column: 7, scope: !20919)
!20931 = !DILocation(line: 1258, column: 12, scope: !20919)
!20932 = !DILocation(line: 1259, column: 7, scope: !20919)
!20933 = !DILocation(line: 1261, column: 12, scope: !20919)
!20934 = !DILocation(line: 1262, column: 5, scope: !20919)
!20935 = !DILocation(line: 1263, column: 17, scope: !20907)
!20936 = !DILocation(line: 1263, column: 3, scope: !20907)
!20937 = !DILocation(line: 1263, column: 7, scope: !20907)
!20938 = !DILocation(line: 1263, column: 15, scope: !20907)
!20939 = !DILocation(line: 1264, column: 1, scope: !20907)
!20940 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !1716, file: !1716, line: 762, type: !20941, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20941 = !DISubroutineType(types: !20942)
!20942 = !{!142, !1723, !7}
!20943 = !DILocalVariable(name: "p", arg: 1, scope: !20940, file: !1716, line: 762, type: !1723)
!20944 = !DILocation(line: 762, column: 48, scope: !20940)
!20945 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20940, file: !1716, line: 762, type: !7)
!20946 = !DILocation(line: 762, column: 55, scope: !20940)
!20947 = !DILocation(line: 770, column: 28, scope: !20940)
!20948 = !DILocation(line: 770, column: 31, scope: !20940)
!20949 = !DILocation(line: 770, column: 11, scope: !20940)
!20950 = !DILocation(line: 770, column: 3, scope: !20940)
!20951 = !DILocation(line: 777, column: 7, scope: !20952)
!20952 = distinct !DILexicalBlock(scope: !20940, file: !1716, line: 771, column: 5)
!20953 = !DILocation(line: 780, column: 7, scope: !20952)
!20954 = !DILocation(line: 782, column: 1, scope: !20940)
!20955 = distinct !DISubprogram(name: "fts_padjust", scope: !1716, file: !1716, line: 1997, type: !19686, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!20956 = !DILocalVariable(name: "sp", arg: 1, scope: !20955, file: !1716, line: 1997, type: !1741)
!20957 = !DILocation(line: 1997, column: 19, scope: !20955)
!20958 = !DILocalVariable(name: "head", arg: 2, scope: !20955, file: !1716, line: 1997, type: !1819)
!20959 = !DILocation(line: 1997, column: 31, scope: !20955)
!20960 = !DILocalVariable(name: "p", scope: !20955, file: !1716, line: 1999, type: !1819)
!20961 = !DILocation(line: 1999, column: 17, scope: !20955)
!20962 = !DILocalVariable(name: "addr", scope: !20955, file: !1716, line: 2000, type: !9)
!20963 = !DILocation(line: 2000, column: 15, scope: !20955)
!20964 = !DILocation(line: 2000, column: 22, scope: !20955)
!20965 = !DILocation(line: 2000, column: 26, scope: !20955)
!20966 = !DILocation(line: 2010, column: 18, scope: !20967)
!20967 = distinct !DILexicalBlock(scope: !20955, file: !1716, line: 2010, column: 9)
!20968 = !DILocation(line: 2010, column: 22, scope: !20967)
!20969 = !DILocation(line: 2010, column: 16, scope: !20967)
!20970 = !DILocation(line: 2010, column: 14, scope: !20967)
!20971 = !DILocation(line: 2010, column: 33, scope: !20972)
!20972 = distinct !DILexicalBlock(scope: !20967, file: !1716, line: 2010, column: 9)
!20973 = !DILocation(line: 2010, column: 9, scope: !20967)
!20974 = !DILocation(line: 2011, column: 17, scope: !20972)
!20975 = !DILocation(line: 2011, column: 17, scope: !20976)
!20976 = distinct !DILexicalBlock(scope: !20977, file: !1716, line: 2011, column: 17)
!20977 = distinct !DILexicalBlock(scope: !20972, file: !1716, line: 2011, column: 17)
!20978 = !DILocation(line: 2011, column: 17, scope: !20977)
!20979 = !DILocation(line: 2011, column: 17, scope: !20980)
!20980 = distinct !DILexicalBlock(scope: !20976, file: !1716, line: 2011, column: 17)
!20981 = !DILocation(line: 2010, column: 40, scope: !20972)
!20982 = !DILocation(line: 2010, column: 43, scope: !20972)
!20983 = !DILocation(line: 2010, column: 38, scope: !20972)
!20984 = !DILocation(line: 2010, column: 9, scope: !20972)
!20985 = distinct !{!20985, !20973, !20986}
!20986 = !DILocation(line: 2011, column: 17, scope: !20967)
!20987 = !DILocation(line: 2014, column: 18, scope: !20988)
!20988 = distinct !DILexicalBlock(scope: !20955, file: !1716, line: 2014, column: 9)
!20989 = !DILocation(line: 2014, column: 16, scope: !20988)
!20990 = !DILocation(line: 2014, column: 14, scope: !20988)
!20991 = !DILocation(line: 2014, column: 24, scope: !20992)
!20992 = distinct !DILexicalBlock(scope: !20988, file: !1716, line: 2014, column: 9)
!20993 = !DILocation(line: 2014, column: 27, scope: !20992)
!20994 = !DILocation(line: 2014, column: 37, scope: !20992)
!20995 = !DILocation(line: 2014, column: 9, scope: !20988)
!20996 = !DILocation(line: 2015, column: 17, scope: !20997)
!20997 = distinct !DILexicalBlock(scope: !20992, file: !1716, line: 2014, column: 56)
!20998 = !DILocation(line: 2015, column: 17, scope: !20999)
!20999 = distinct !DILexicalBlock(scope: !21000, file: !1716, line: 2015, column: 17)
!21000 = distinct !DILexicalBlock(scope: !20997, file: !1716, line: 2015, column: 17)
!21001 = !DILocation(line: 2015, column: 17, scope: !21000)
!21002 = !DILocation(line: 2015, column: 17, scope: !21003)
!21003 = distinct !DILexicalBlock(scope: !20999, file: !1716, line: 2015, column: 17)
!21004 = !DILocation(line: 2016, column: 21, scope: !20997)
!21005 = !DILocation(line: 2016, column: 24, scope: !20997)
!21006 = !DILocation(line: 2016, column: 35, scope: !20997)
!21007 = !DILocation(line: 2016, column: 38, scope: !20997)
!21008 = !DILocation(line: 2016, column: 49, scope: !20997)
!21009 = !DILocation(line: 2016, column: 52, scope: !20997)
!21010 = !DILocation(line: 2016, column: 19, scope: !20997)
!21011 = !DILocation(line: 2014, column: 9, scope: !20992)
!21012 = distinct !{!21012, !20995, !21013}
!21013 = !DILocation(line: 2017, column: 9, scope: !20988)
!21014 = !DILocation(line: 2018, column: 1, scope: !20955)
!21015 = distinct !DISubprogram(name: "fts_compare_ino", scope: !1716, file: !1716, line: 1225, type: !1757, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!21016 = !DILocalVariable(name: "a", arg: 1, scope: !21015, file: !1716, line: 1225, type: !1759)
!21017 = !DILocation(line: 1225, column: 41, scope: !21015)
!21018 = !DILocalVariable(name: "b", arg: 2, scope: !21015, file: !1716, line: 1225, type: !1759)
!21019 = !DILocation(line: 1225, column: 67, scope: !21015)
!21020 = !DILocation(line: 1227, column: 11, scope: !21015)
!21021 = !DILocation(line: 1227, column: 17, scope: !21015)
!21022 = !DILocation(line: 1227, column: 28, scope: !21015)
!21023 = !DILocation(line: 1227, column: 37, scope: !21015)
!21024 = !DILocation(line: 1227, column: 43, scope: !21015)
!21025 = !DILocation(line: 1227, column: 54, scope: !21015)
!21026 = !DILocation(line: 1227, column: 35, scope: !21015)
!21027 = !DILocation(line: 1228, column: 13, scope: !21015)
!21028 = !DILocation(line: 1228, column: 19, scope: !21015)
!21029 = !DILocation(line: 1228, column: 30, scope: !21015)
!21030 = !DILocation(line: 1228, column: 39, scope: !21015)
!21031 = !DILocation(line: 1228, column: 45, scope: !21015)
!21032 = !DILocation(line: 1228, column: 56, scope: !21015)
!21033 = !DILocation(line: 1228, column: 37, scope: !21015)
!21034 = !DILocation(line: 1227, column: 3, scope: !21015)
!21035 = distinct !DISubprogram(name: "rpl_fts_set", scope: !1716, file: !1716, line: 1130, type: !21036, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!21036 = !DISubroutineType(types: !21037)
!21037 = !{!7, !1741, !1819, !7}
!21038 = !DILocalVariable(name: "sp", arg: 1, scope: !21035, file: !1716, line: 1130, type: !1741)
!21039 = !DILocation(line: 1130, column: 14, scope: !21035)
!21040 = !DILocalVariable(name: "p", arg: 2, scope: !21035, file: !1716, line: 1130, type: !1819)
!21041 = !DILocation(line: 1130, column: 37, scope: !21035)
!21042 = !DILocalVariable(name: "instr", arg: 3, scope: !21035, file: !1716, line: 1130, type: !7)
!21043 = !DILocation(line: 1130, column: 44, scope: !21035)
!21044 = !DILocation(line: 1132, column: 13, scope: !21045)
!21045 = distinct !DILexicalBlock(scope: !21035, file: !1716, line: 1132, column: 13)
!21046 = !DILocation(line: 1132, column: 19, scope: !21045)
!21047 = !DILocation(line: 1132, column: 24, scope: !21045)
!21048 = !DILocation(line: 1132, column: 27, scope: !21045)
!21049 = !DILocation(line: 1132, column: 33, scope: !21045)
!21050 = !DILocation(line: 1132, column: 46, scope: !21045)
!21051 = !DILocation(line: 1132, column: 49, scope: !21045)
!21052 = !DILocation(line: 1132, column: 55, scope: !21045)
!21053 = !DILocation(line: 1132, column: 69, scope: !21045)
!21054 = !DILocation(line: 1133, column: 13, scope: !21045)
!21055 = !DILocation(line: 1133, column: 19, scope: !21045)
!21056 = !DILocation(line: 1133, column: 34, scope: !21045)
!21057 = !DILocation(line: 1133, column: 37, scope: !21045)
!21058 = !DILocation(line: 1133, column: 43, scope: !21045)
!21059 = !DILocation(line: 1132, column: 13, scope: !21035)
!21060 = !DILocation(line: 1134, column: 17, scope: !21061)
!21061 = distinct !DILexicalBlock(scope: !21045, file: !1716, line: 1133, column: 56)
!21062 = !DILocation(line: 1135, column: 17, scope: !21061)
!21063 = !DILocation(line: 1137, column: 24, scope: !21035)
!21064 = !DILocation(line: 1137, column: 9, scope: !21035)
!21065 = !DILocation(line: 1137, column: 12, scope: !21035)
!21066 = !DILocation(line: 1137, column: 22, scope: !21035)
!21067 = !DILocation(line: 1138, column: 9, scope: !21035)
!21068 = !DILocation(line: 1139, column: 1, scope: !21035)
!21069 = distinct !DISubprogram(name: "rpl_fts_children", scope: !1716, file: !1716, line: 1142, type: !19897, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1712, retainedNodes: !216)
!21070 = !DILocalVariable(name: "sp", arg: 1, scope: !21069, file: !1716, line: 1142, type: !1741)
!21071 = !DILocation(line: 1142, column: 29, scope: !21069)
!21072 = !DILocalVariable(name: "instr", arg: 2, scope: !21069, file: !1716, line: 1142, type: !7)
!21073 = !DILocation(line: 1142, column: 37, scope: !21069)
!21074 = !DILocalVariable(name: "p", scope: !21069, file: !1716, line: 1144, type: !1819)
!21075 = !DILocation(line: 1144, column: 26, scope: !21069)
!21076 = !DILocalVariable(name: "fd", scope: !21069, file: !1716, line: 1145, type: !7)
!21077 = !DILocation(line: 1145, column: 13, scope: !21069)
!21078 = !DILocation(line: 1147, column: 13, scope: !21079)
!21079 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1147, column: 13)
!21080 = !DILocation(line: 1147, column: 19, scope: !21079)
!21081 = !DILocation(line: 1147, column: 24, scope: !21079)
!21082 = !DILocation(line: 1147, column: 27, scope: !21079)
!21083 = !DILocation(line: 1147, column: 33, scope: !21079)
!21084 = !DILocation(line: 1147, column: 13, scope: !21069)
!21085 = !DILocation(line: 1148, column: 17, scope: !21086)
!21086 = distinct !DILexicalBlock(scope: !21079, file: !1716, line: 1147, column: 50)
!21087 = !DILocation(line: 1149, column: 17, scope: !21086)
!21088 = !DILocation(line: 1153, column: 13, scope: !21069)
!21089 = !DILocation(line: 1153, column: 17, scope: !21069)
!21090 = !DILocation(line: 1153, column: 11, scope: !21069)
!21091 = !DILocation(line: 1159, column: 9, scope: !21069)
!21092 = !DILocation(line: 1162, column: 13, scope: !21093)
!21093 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1162, column: 13)
!21094 = !DILocation(line: 1162, column: 13, scope: !21069)
!21095 = !DILocation(line: 1163, column: 17, scope: !21093)
!21096 = !DILocation(line: 1166, column: 13, scope: !21097)
!21097 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1166, column: 13)
!21098 = !DILocation(line: 1166, column: 16, scope: !21097)
!21099 = !DILocation(line: 1166, column: 25, scope: !21097)
!21100 = !DILocation(line: 1166, column: 13, scope: !21069)
!21101 = !DILocation(line: 1167, column: 25, scope: !21097)
!21102 = !DILocation(line: 1167, column: 28, scope: !21097)
!21103 = !DILocation(line: 1167, column: 17, scope: !21097)
!21104 = !DILocation(line: 1174, column: 13, scope: !21105)
!21105 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1174, column: 13)
!21106 = !DILocation(line: 1174, column: 16, scope: !21105)
!21107 = !DILocation(line: 1174, column: 25, scope: !21105)
!21108 = !DILocation(line: 1174, column: 13, scope: !21069)
!21109 = !DILocation(line: 1175, column: 17, scope: !21105)
!21110 = !DILocation(line: 1178, column: 13, scope: !21111)
!21111 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1178, column: 13)
!21112 = !DILocation(line: 1178, column: 17, scope: !21111)
!21113 = !DILocation(line: 1178, column: 27, scope: !21111)
!21114 = !DILocation(line: 1178, column: 13, scope: !21069)
!21115 = !DILocation(line: 1179, column: 27, scope: !21111)
!21116 = !DILocation(line: 1179, column: 31, scope: !21111)
!21117 = !DILocation(line: 1179, column: 17, scope: !21111)
!21118 = !DILocation(line: 1181, column: 13, scope: !21119)
!21119 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1181, column: 13)
!21120 = !DILocation(line: 1181, column: 19, scope: !21119)
!21121 = !DILocation(line: 1181, column: 13, scope: !21069)
!21122 = !DILocation(line: 1182, column: 17, scope: !21123)
!21123 = distinct !DILexicalBlock(scope: !21119, file: !1716, line: 1181, column: 36)
!21124 = !DILocation(line: 1183, column: 23, scope: !21123)
!21125 = !DILocation(line: 1184, column: 9, scope: !21123)
!21126 = !DILocation(line: 1185, column: 23, scope: !21119)
!21127 = !DILocation(line: 1194, column: 13, scope: !21128)
!21128 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1194, column: 13)
!21129 = !DILocation(line: 1194, column: 16, scope: !21128)
!21130 = !DILocation(line: 1194, column: 26, scope: !21128)
!21131 = !DILocation(line: 1194, column: 43, scope: !21128)
!21132 = !DILocation(line: 1194, column: 46, scope: !21128)
!21133 = !DILocation(line: 1194, column: 49, scope: !21128)
!21134 = !DILocation(line: 1194, column: 64, scope: !21128)
!21135 = !DILocation(line: 1194, column: 71, scope: !21128)
!21136 = !DILocation(line: 1195, column: 13, scope: !21128)
!21137 = !DILocation(line: 1194, column: 13, scope: !21069)
!21138 = !DILocation(line: 1196, column: 51, scope: !21128)
!21139 = !DILocation(line: 1196, column: 55, scope: !21128)
!21140 = !DILocation(line: 1196, column: 41, scope: !21128)
!21141 = !DILocation(line: 1196, column: 25, scope: !21128)
!21142 = !DILocation(line: 1196, column: 29, scope: !21128)
!21143 = !DILocation(line: 1196, column: 39, scope: !21128)
!21144 = !DILocation(line: 1196, column: 17, scope: !21128)
!21145 = !DILocation(line: 1198, column: 28, scope: !21146)
!21146 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1198, column: 13)
!21147 = !DILocation(line: 1198, column: 19, scope: !21146)
!21148 = !DILocation(line: 1198, column: 17, scope: !21146)
!21149 = !DILocation(line: 1198, column: 38, scope: !21146)
!21150 = !DILocation(line: 1198, column: 13, scope: !21069)
!21151 = !DILocation(line: 1199, column: 25, scope: !21146)
!21152 = !DILocation(line: 1199, column: 29, scope: !21146)
!21153 = !DILocation(line: 1199, column: 39, scope: !21146)
!21154 = !DILocation(line: 1199, column: 17, scope: !21146)
!21155 = !DILocation(line: 1200, column: 35, scope: !21069)
!21156 = !DILocation(line: 1200, column: 39, scope: !21069)
!21157 = !DILocation(line: 1200, column: 25, scope: !21069)
!21158 = !DILocation(line: 1200, column: 9, scope: !21069)
!21159 = !DILocation(line: 1200, column: 13, scope: !21069)
!21160 = !DILocation(line: 1200, column: 23, scope: !21069)
!21161 = !DILocation(line: 1201, column: 13, scope: !21162)
!21162 = distinct !DILexicalBlock(scope: !21069, file: !1716, line: 1201, column: 13)
!21163 = !DILocation(line: 1201, column: 13, scope: !21069)
!21164 = !DILocation(line: 1203, column: 29, scope: !21165)
!21165 = distinct !DILexicalBlock(scope: !21162, file: !1716, line: 1202, column: 11)
!21166 = !DILocation(line: 1203, column: 33, scope: !21165)
!21167 = !DILocation(line: 1203, column: 13, scope: !21165)
!21168 = !DILocation(line: 1204, column: 11, scope: !21165)
!21169 = !DILocation(line: 1207, column: 24, scope: !21170)
!21170 = distinct !DILexicalBlock(scope: !21171, file: !1716, line: 1207, column: 17)
!21171 = distinct !DILexicalBlock(scope: !21162, file: !1716, line: 1206, column: 11)
!21172 = !DILocation(line: 1207, column: 17, scope: !21170)
!21173 = !DILocation(line: 1207, column: 17, scope: !21171)
!21174 = !DILocalVariable(name: "saved_errno", scope: !21175, file: !1716, line: 1209, type: !7)
!21175 = distinct !DILexicalBlock(scope: !21170, file: !1716, line: 1208, column: 15)
!21176 = !DILocation(line: 1209, column: 21, scope: !21175)
!21177 = !DILocation(line: 1209, column: 35, scope: !21175)
!21178 = !DILocation(line: 1210, column: 24, scope: !21175)
!21179 = !DILocation(line: 1210, column: 17, scope: !21175)
!21180 = !DILocation(line: 1211, column: 17, scope: !21175)
!21181 = !DILocation(line: 1212, column: 17, scope: !21175)
!21182 = !DILocation(line: 1214, column: 20, scope: !21171)
!21183 = !DILocation(line: 1214, column: 13, scope: !21171)
!21184 = !DILocation(line: 1216, column: 17, scope: !21069)
!21185 = !DILocation(line: 1216, column: 21, scope: !21069)
!21186 = !DILocation(line: 1216, column: 9, scope: !21069)
!21187 = !DILocation(line: 1217, column: 1, scope: !21069)
!21188 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !21189, file: !21189, line: 385, type: !21190, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1854, retainedNodes: !216)
!21189 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21190 = !DISubroutineType(types: !21191)
!21191 = !{!55, !21192, !116, !55, !21193}
!21192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!21193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21194, size: 64)
!21194 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !811, line: 6, baseType: !21195)
!21195 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !813, line: 21, baseType: !21196)
!21196 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !813, line: 13, size: 64, elements: !21197)
!21197 = !{!21198, !21199}
!21198 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !21196, file: !813, line: 15, baseType: !7, size: 32)
!21199 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !21196, file: !813, line: 20, baseType: !21200, size: 32, offset: 32)
!21200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !21196, file: !813, line: 16, size: 32, elements: !21201)
!21201 = !{!21202, !21203}
!21202 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !21200, file: !813, line: 18, baseType: !70, size: 32)
!21203 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !21200, file: !813, line: 19, baseType: !227, size: 32)
!21204 = !DILocalVariable(name: "pwc", arg: 1, scope: !21188, file: !21189, line: 385, type: !21192)
!21205 = !DILocation(line: 385, column: 23, scope: !21188)
!21206 = !DILocalVariable(name: "s", arg: 2, scope: !21188, file: !21189, line: 385, type: !116)
!21207 = !DILocation(line: 385, column: 40, scope: !21188)
!21208 = !DILocalVariable(name: "n", arg: 3, scope: !21188, file: !21189, line: 385, type: !55)
!21209 = !DILocation(line: 385, column: 50, scope: !21188)
!21210 = !DILocalVariable(name: "ps", arg: 4, scope: !21188, file: !21189, line: 385, type: !21193)
!21211 = !DILocation(line: 385, column: 64, scope: !21188)
!21212 = !DILocalVariable(name: "ret", scope: !21188, file: !21189, line: 387, type: !55)
!21213 = !DILocation(line: 387, column: 10, scope: !21188)
!21214 = !DILocalVariable(name: "wc", scope: !21188, file: !21189, line: 388, type: !822)
!21215 = !DILocation(line: 388, column: 11, scope: !21188)
!21216 = !DILocation(line: 404, column: 9, scope: !21217)
!21217 = distinct !DILexicalBlock(scope: !21188, file: !21189, line: 404, column: 7)
!21218 = !DILocation(line: 404, column: 7, scope: !21188)
!21219 = !DILocation(line: 405, column: 9, scope: !21217)
!21220 = !DILocation(line: 405, column: 5, scope: !21217)
!21221 = !DILocation(line: 439, column: 18, scope: !21188)
!21222 = !DILocation(line: 439, column: 23, scope: !21188)
!21223 = !DILocation(line: 439, column: 26, scope: !21188)
!21224 = !DILocation(line: 439, column: 29, scope: !21188)
!21225 = !DILocation(line: 439, column: 9, scope: !21188)
!21226 = !DILocation(line: 439, column: 7, scope: !21188)
!21227 = !DILocation(line: 447, column: 22, scope: !21228)
!21228 = distinct !DILexicalBlock(scope: !21188, file: !21189, line: 447, column: 7)
!21229 = !DILocation(line: 447, column: 19, scope: !21228)
!21230 = !DILocation(line: 447, column: 26, scope: !21228)
!21231 = !DILocation(line: 447, column: 29, scope: !21228)
!21232 = !DILocation(line: 447, column: 31, scope: !21228)
!21233 = !DILocation(line: 447, column: 36, scope: !21228)
!21234 = !DILocation(line: 447, column: 41, scope: !21228)
!21235 = !DILocation(line: 447, column: 7, scope: !21188)
!21236 = !DILocalVariable(name: "uc", scope: !21237, file: !21189, line: 449, type: !450)
!21237 = distinct !DILexicalBlock(scope: !21228, file: !21189, line: 448, column: 5)
!21238 = !DILocation(line: 449, column: 21, scope: !21237)
!21239 = !DILocation(line: 449, column: 27, scope: !21237)
!21240 = !DILocation(line: 449, column: 26, scope: !21237)
!21241 = !DILocation(line: 450, column: 14, scope: !21237)
!21242 = !DILocation(line: 450, column: 8, scope: !21237)
!21243 = !DILocation(line: 450, column: 12, scope: !21237)
!21244 = !DILocation(line: 451, column: 7, scope: !21237)
!21245 = !DILocation(line: 455, column: 10, scope: !21188)
!21246 = !DILocation(line: 455, column: 3, scope: !21188)
!21247 = !DILocation(line: 456, column: 1, scope: !21188)
!21248 = distinct !DISubprogram(name: "acl_access_nontrivial", scope: !21249, file: !21249, line: 47, type: !21250, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1857, retainedNodes: !216)
!21249 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21250 = !DISubroutineType(types: !21251)
!21251 = !{!7, !1865}
!21252 = !DILocalVariable(name: "acl", arg: 1, scope: !21248, file: !21249, line: 47, type: !1865)
!21253 = !DILocation(line: 47, column: 30, scope: !21248)
!21254 = !DILocalVariable(name: "ace", scope: !21248, file: !21249, line: 56, type: !1860)
!21255 = !DILocation(line: 56, column: 15, scope: !21248)
!21256 = !DILocalVariable(name: "got_one", scope: !21248, file: !21249, line: 57, type: !7)
!21257 = !DILocation(line: 57, column: 7, scope: !21248)
!21258 = !DILocation(line: 59, column: 33, scope: !21259)
!21259 = distinct !DILexicalBlock(scope: !21248, file: !21249, line: 59, column: 3)
!21260 = !DILocation(line: 59, column: 18, scope: !21259)
!21261 = !DILocation(line: 59, column: 16, scope: !21259)
!21262 = !DILocation(line: 59, column: 8, scope: !21259)
!21263 = !DILocation(line: 60, column: 8, scope: !21264)
!21264 = distinct !DILexicalBlock(scope: !21259, file: !21249, line: 59, column: 3)
!21265 = !DILocation(line: 60, column: 16, scope: !21264)
!21266 = !DILocation(line: 59, column: 3, scope: !21259)
!21267 = !DILocalVariable(name: "tag", scope: !21268, file: !21249, line: 63, type: !1864)
!21268 = distinct !DILexicalBlock(scope: !21264, file: !21249, line: 62, column: 5)
!21269 = !DILocation(line: 63, column: 17, scope: !21268)
!21270 = !DILocation(line: 64, column: 29, scope: !21271)
!21271 = distinct !DILexicalBlock(scope: !21268, file: !21249, line: 64, column: 11)
!21272 = !DILocation(line: 64, column: 11, scope: !21271)
!21273 = !DILocation(line: 64, column: 40, scope: !21271)
!21274 = !DILocation(line: 64, column: 11, scope: !21268)
!21275 = !DILocation(line: 65, column: 9, scope: !21271)
!21276 = !DILocation(line: 66, column: 13, scope: !21277)
!21277 = distinct !DILexicalBlock(scope: !21268, file: !21249, line: 66, column: 11)
!21278 = !DILocation(line: 66, column: 17, scope: !21277)
!21279 = !DILocation(line: 66, column: 33, scope: !21277)
!21280 = !DILocation(line: 66, column: 36, scope: !21277)
!21281 = !DILocation(line: 66, column: 40, scope: !21277)
!21282 = !DILocation(line: 66, column: 57, scope: !21277)
!21283 = !DILocation(line: 66, column: 60, scope: !21277)
!21284 = !DILocation(line: 66, column: 64, scope: !21277)
!21285 = !DILocation(line: 66, column: 11, scope: !21268)
!21286 = !DILocation(line: 67, column: 9, scope: !21277)
!21287 = !DILocation(line: 68, column: 5, scope: !21268)
!21288 = !DILocation(line: 61, column: 33, scope: !21264)
!21289 = !DILocation(line: 61, column: 18, scope: !21264)
!21290 = !DILocation(line: 61, column: 16, scope: !21264)
!21291 = !DILocation(line: 59, column: 3, scope: !21264)
!21292 = distinct !{!21292, !21266, !21293}
!21293 = !DILocation(line: 68, column: 5, scope: !21259)
!21294 = !DILocation(line: 69, column: 10, scope: !21248)
!21295 = !DILocation(line: 69, column: 3, scope: !21248)
!21296 = !DILocation(line: 116, column: 1, scope: !21248)
!21297 = distinct !DISubprogram(name: "acl_default_nontrivial", scope: !21249, file: !21249, line: 119, type: !21250, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1857, retainedNodes: !216)
!21298 = !DILocalVariable(name: "acl", arg: 1, scope: !21297, file: !21249, line: 119, type: !1865)
!21299 = !DILocation(line: 119, column: 31, scope: !21297)
!21300 = !DILocation(line: 122, column: 24, scope: !21297)
!21301 = !DILocation(line: 122, column: 11, scope: !21297)
!21302 = !DILocation(line: 122, column: 29, scope: !21297)
!21303 = !DILocation(line: 122, column: 3, scope: !21297)
!21304 = distinct !DISubprogram(name: "free_permission_context", scope: !21249, file: !21249, line: 479, type: !21305, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1857, retainedNodes: !216)
!21305 = !DISubroutineType(types: !21306)
!21306 = !{null, !21307}
!21307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21308, size: 64)
!21308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12928, line: 260, size: 256, elements: !21309)
!21309 = !{!21310, !21311, !21312, !21313}
!21310 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !21308, file: !12928, line: 261, baseType: !239, size: 32)
!21311 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !21308, file: !12928, line: 264, baseType: !1865, size: 64, offset: 64)
!21312 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !21308, file: !12928, line: 266, baseType: !1865, size: 64, offset: 128)
!21313 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !21308, file: !12928, line: 268, baseType: !142, size: 8, offset: 192)
!21314 = !DILocalVariable(name: "ctx", arg: 1, scope: !21304, file: !21249, line: 479, type: !21307)
!21315 = !DILocation(line: 479, column: 53, scope: !21304)
!21316 = !DILocation(line: 483, column: 7, scope: !21317)
!21317 = distinct !DILexicalBlock(scope: !21304, file: !21249, line: 483, column: 7)
!21318 = !DILocation(line: 483, column: 12, scope: !21317)
!21319 = !DILocation(line: 483, column: 7, scope: !21304)
!21320 = !DILocation(line: 484, column: 15, scope: !21317)
!21321 = !DILocation(line: 484, column: 20, scope: !21317)
!21322 = !DILocation(line: 484, column: 5, scope: !21317)
!21323 = !DILocation(line: 486, column: 7, scope: !21324)
!21324 = distinct !DILexicalBlock(scope: !21304, file: !21249, line: 486, column: 7)
!21325 = !DILocation(line: 486, column: 12, scope: !21324)
!21326 = !DILocation(line: 486, column: 7, scope: !21304)
!21327 = !DILocation(line: 487, column: 15, scope: !21324)
!21328 = !DILocation(line: 487, column: 20, scope: !21324)
!21329 = !DILocation(line: 487, column: 5, scope: !21324)
!21330 = !DILocation(line: 507, column: 1, scope: !21304)
!21331 = distinct !DISubprogram(name: "get_permissions", scope: !21332, file: !21332, line: 33, type: !21333, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1868, retainedNodes: !216)
!21332 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21333 = !DISubroutineType(types: !21334)
!21334 = !{!7, !116, !7, !239, !21335}
!21335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21336, size: 64)
!21336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12928, line: 260, size: 256, elements: !21337)
!21337 = !{!21338, !21339, !21340, !21341}
!21338 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !21336, file: !12928, line: 261, baseType: !239, size: 32)
!21339 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !21336, file: !12928, line: 264, baseType: !1865, size: 64, offset: 64)
!21340 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !21336, file: !12928, line: 266, baseType: !1865, size: 64, offset: 128)
!21341 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !21336, file: !12928, line: 268, baseType: !142, size: 8, offset: 192)
!21342 = !DILocalVariable(name: "name", arg: 1, scope: !21331, file: !21332, line: 33, type: !116)
!21343 = !DILocation(line: 33, column: 30, scope: !21331)
!21344 = !DILocalVariable(name: "desc", arg: 2, scope: !21331, file: !21332, line: 33, type: !7)
!21345 = !DILocation(line: 33, column: 40, scope: !21331)
!21346 = !DILocalVariable(name: "mode", arg: 3, scope: !21331, file: !21332, line: 33, type: !239)
!21347 = !DILocation(line: 33, column: 53, scope: !21331)
!21348 = !DILocalVariable(name: "ctx", arg: 4, scope: !21331, file: !21332, line: 34, type: !21335)
!21349 = !DILocation(line: 34, column: 45, scope: !21331)
!21350 = !DILocation(line: 36, column: 11, scope: !21331)
!21351 = !DILocation(line: 36, column: 3, scope: !21331)
!21352 = !DILocation(line: 37, column: 15, scope: !21331)
!21353 = !DILocation(line: 37, column: 3, scope: !21331)
!21354 = !DILocation(line: 37, column: 8, scope: !21331)
!21355 = !DILocation(line: 37, column: 13, scope: !21331)
!21356 = !DILocation(line: 45, column: 26, scope: !21357)
!21357 = distinct !DILexicalBlock(scope: !21331, file: !21332, line: 45, column: 7)
!21358 = !DILocation(line: 45, column: 31, scope: !21357)
!21359 = !DILocation(line: 45, column: 7, scope: !21331)
!21360 = !DILocation(line: 46, column: 28, scope: !21357)
!21361 = !DILocation(line: 46, column: 16, scope: !21357)
!21362 = !DILocation(line: 46, column: 5, scope: !21357)
!21363 = !DILocation(line: 46, column: 10, scope: !21357)
!21364 = !DILocation(line: 46, column: 14, scope: !21357)
!21365 = !DILocation(line: 48, column: 30, scope: !21357)
!21366 = !DILocation(line: 48, column: 16, scope: !21357)
!21367 = !DILocation(line: 48, column: 5, scope: !21357)
!21368 = !DILocation(line: 48, column: 10, scope: !21357)
!21369 = !DILocation(line: 48, column: 14, scope: !21357)
!21370 = !DILocation(line: 49, column: 7, scope: !21371)
!21371 = distinct !DILexicalBlock(scope: !21331, file: !21332, line: 49, column: 7)
!21372 = !DILocation(line: 49, column: 12, scope: !21371)
!21373 = !DILocation(line: 49, column: 16, scope: !21371)
!21374 = !DILocation(line: 49, column: 7, scope: !21331)
!21375 = !DILocation(line: 50, column: 29, scope: !21371)
!21376 = !DILocation(line: 50, column: 12, scope: !21371)
!21377 = !DILocation(line: 50, column: 5, scope: !21371)
!21378 = !DILocation(line: 56, column: 7, scope: !21379)
!21379 = distinct !DILexicalBlock(scope: !21331, file: !21332, line: 56, column: 7)
!21380 = !DILocation(line: 56, column: 7, scope: !21331)
!21381 = !DILocation(line: 58, column: 40, scope: !21382)
!21382 = distinct !DILexicalBlock(scope: !21379, file: !21332, line: 57, column: 5)
!21383 = !DILocation(line: 58, column: 26, scope: !21382)
!21384 = !DILocation(line: 58, column: 7, scope: !21382)
!21385 = !DILocation(line: 58, column: 12, scope: !21382)
!21386 = !DILocation(line: 58, column: 24, scope: !21382)
!21387 = !DILocation(line: 59, column: 11, scope: !21388)
!21388 = distinct !DILexicalBlock(scope: !21382, file: !21332, line: 59, column: 11)
!21389 = !DILocation(line: 59, column: 16, scope: !21388)
!21390 = !DILocation(line: 59, column: 28, scope: !21388)
!21391 = !DILocation(line: 59, column: 11, scope: !21382)
!21392 = !DILocation(line: 60, column: 9, scope: !21388)
!21393 = !DILocation(line: 61, column: 5, scope: !21382)
!21394 = !DILocation(line: 289, column: 3, scope: !21331)
!21395 = !DILocation(line: 291, column: 1, scope: !21331)
!21396 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !21397, file: !21397, line: 760, type: !9170, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1871, retainedNodes: !216)
!21397 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21398 = !DILocalVariable(name: "name", arg: 1, scope: !21396, file: !21397, line: 760, type: !116)
!21399 = !DILocation(line: 760, column: 30, scope: !21396)
!21400 = !DILocalVariable(name: "desc", arg: 2, scope: !21396, file: !21397, line: 760, type: !7)
!21401 = !DILocation(line: 760, column: 40, scope: !21396)
!21402 = !DILocalVariable(name: "mode", arg: 3, scope: !21396, file: !21397, line: 760, type: !239)
!21403 = !DILocation(line: 760, column: 53, scope: !21396)
!21404 = !DILocation(line: 762, column: 22, scope: !21405)
!21405 = distinct !DILexicalBlock(scope: !21396, file: !21397, line: 762, column: 7)
!21406 = !DILocation(line: 762, column: 27, scope: !21405)
!21407 = !DILocation(line: 762, column: 7, scope: !21396)
!21408 = !DILocation(line: 763, column: 20, scope: !21405)
!21409 = !DILocation(line: 763, column: 26, scope: !21405)
!21410 = !DILocation(line: 763, column: 12, scope: !21405)
!21411 = !DILocation(line: 763, column: 5, scope: !21405)
!21412 = !DILocation(line: 765, column: 19, scope: !21405)
!21413 = !DILocation(line: 765, column: 25, scope: !21405)
!21414 = !DILocation(line: 765, column: 12, scope: !21405)
!21415 = !DILocation(line: 765, column: 5, scope: !21405)
!21416 = !DILocation(line: 766, column: 1, scope: !21396)
!21417 = distinct !DISubprogram(name: "set_permissions", scope: !21397, file: !21397, line: 776, type: !21418, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1871, retainedNodes: !216)
!21418 = !DISubroutineType(types: !21419)
!21419 = !{!7, !21420, !116, !7}
!21420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21421, size: 64)
!21421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !12928, line: 260, size: 256, elements: !21422)
!21422 = !{!21423, !21424, !21425, !21426}
!21423 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !21421, file: !12928, line: 261, baseType: !239, size: 32)
!21424 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !21421, file: !12928, line: 264, baseType: !1865, size: 64, offset: 64)
!21425 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !21421, file: !12928, line: 266, baseType: !1865, size: 64, offset: 128)
!21426 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !21421, file: !12928, line: 268, baseType: !142, size: 8, offset: 192)
!21427 = !DILocalVariable(name: "ctx", arg: 1, scope: !21417, file: !21397, line: 776, type: !21420)
!21428 = !DILocation(line: 776, column: 45, scope: !21417)
!21429 = !DILocalVariable(name: "name", arg: 2, scope: !21417, file: !21397, line: 776, type: !116)
!21430 = !DILocation(line: 776, column: 62, scope: !21417)
!21431 = !DILocalVariable(name: "desc", arg: 3, scope: !21417, file: !21397, line: 776, type: !7)
!21432 = !DILocation(line: 776, column: 72, scope: !21417)
!21433 = !DILocalVariable(name: "acls_set", scope: !21417, file: !21397, line: 778, type: !142)
!21434 = !DILocation(line: 778, column: 8, scope: !21417)
!21435 = !DILocalVariable(name: "early_chmod", scope: !21417, file: !21397, line: 779, type: !142)
!21436 = !DILocation(line: 779, column: 8, scope: !21417)
!21437 = !DILocalVariable(name: "must_chmod", scope: !21417, file: !21397, line: 780, type: !142)
!21438 = !DILocation(line: 780, column: 8, scope: !21417)
!21439 = !DILocalVariable(name: "ret", scope: !21417, file: !21397, line: 781, type: !7)
!21440 = !DILocation(line: 781, column: 7, scope: !21417)
!21441 = !DILocation(line: 796, column: 40, scope: !21417)
!21442 = !DILocation(line: 796, column: 45, scope: !21417)
!21443 = !DILocation(line: 796, column: 50, scope: !21417)
!21444 = !DILocation(line: 796, column: 36, scope: !21417)
!21445 = !DILocation(line: 796, column: 15, scope: !21417)
!21446 = !DILocation(line: 804, column: 7, scope: !21447)
!21447 = distinct !DILexicalBlock(scope: !21417, file: !21397, line: 804, column: 7)
!21448 = !DILocation(line: 804, column: 7, scope: !21417)
!21449 = !DILocation(line: 806, column: 30, scope: !21450)
!21450 = distinct !DILexicalBlock(scope: !21447, file: !21397, line: 805, column: 5)
!21451 = !DILocation(line: 806, column: 36, scope: !21450)
!21452 = !DILocation(line: 806, column: 42, scope: !21450)
!21453 = !DILocation(line: 806, column: 47, scope: !21450)
!21454 = !DILocation(line: 806, column: 13, scope: !21450)
!21455 = !DILocation(line: 806, column: 11, scope: !21450)
!21456 = !DILocation(line: 807, column: 11, scope: !21457)
!21457 = distinct !DILexicalBlock(scope: !21450, file: !21397, line: 807, column: 11)
!21458 = !DILocation(line: 807, column: 15, scope: !21457)
!21459 = !DILocation(line: 807, column: 11, scope: !21450)
!21460 = !DILocation(line: 808, column: 9, scope: !21457)
!21461 = !DILocation(line: 809, column: 5, scope: !21450)
!21462 = !DILocation(line: 812, column: 19, scope: !21417)
!21463 = !DILocation(line: 812, column: 24, scope: !21417)
!21464 = !DILocation(line: 812, column: 30, scope: !21417)
!21465 = !DILocation(line: 812, column: 9, scope: !21417)
!21466 = !DILocation(line: 812, column: 7, scope: !21417)
!21467 = !DILocation(line: 813, column: 9, scope: !21468)
!21468 = distinct !DILexicalBlock(scope: !21417, file: !21397, line: 813, column: 7)
!21469 = !DILocation(line: 813, column: 7, scope: !21417)
!21470 = !DILocalVariable(name: "saved_errno", scope: !21471, file: !21397, line: 815, type: !7)
!21471 = distinct !DILexicalBlock(scope: !21468, file: !21397, line: 814, column: 5)
!21472 = !DILocation(line: 815, column: 11, scope: !21471)
!21473 = !DILocation(line: 815, column: 25, scope: !21471)
!21474 = !DILocation(line: 815, column: 31, scope: !21471)
!21475 = !DILocation(line: 821, column: 23, scope: !21471)
!21476 = !DILocation(line: 821, column: 28, scope: !21471)
!21477 = !DILocation(line: 821, column: 34, scope: !21471)
!21478 = !DILocation(line: 821, column: 13, scope: !21471)
!21479 = !DILocation(line: 821, column: 11, scope: !21471)
!21480 = !DILocation(line: 822, column: 13, scope: !21481)
!21481 = distinct !DILexicalBlock(scope: !21471, file: !21397, line: 822, column: 11)
!21482 = !DILocation(line: 822, column: 11, scope: !21471)
!21483 = !DILocation(line: 823, column: 20, scope: !21481)
!21484 = !DILocation(line: 823, column: 9, scope: !21481)
!21485 = !DILocation(line: 825, column: 11, scope: !21486)
!21486 = distinct !DILexicalBlock(scope: !21471, file: !21397, line: 825, column: 11)
!21487 = !DILocation(line: 825, column: 11, scope: !21471)
!21488 = !DILocation(line: 827, column: 19, scope: !21489)
!21489 = distinct !DILexicalBlock(scope: !21486, file: !21397, line: 826, column: 9)
!21490 = !DILocation(line: 827, column: 11, scope: !21489)
!21491 = !DILocation(line: 827, column: 17, scope: !21489)
!21492 = !DILocation(line: 828, column: 15, scope: !21489)
!21493 = !DILocation(line: 829, column: 9, scope: !21489)
!21494 = !DILocation(line: 830, column: 5, scope: !21471)
!21495 = !DILocation(line: 833, column: 7, scope: !21496)
!21496 = distinct !DILexicalBlock(scope: !21417, file: !21397, line: 833, column: 7)
!21497 = !DILocation(line: 833, column: 18, scope: !21496)
!21498 = !DILocation(line: 833, column: 23, scope: !21496)
!21499 = !DILocation(line: 833, column: 7, scope: !21417)
!21500 = !DILocalVariable(name: "saved_errno", scope: !21501, file: !21397, line: 835, type: !7)
!21501 = distinct !DILexicalBlock(scope: !21496, file: !21397, line: 834, column: 5)
!21502 = !DILocation(line: 835, column: 11, scope: !21501)
!21503 = !DILocation(line: 835, column: 25, scope: !21501)
!21504 = !DILocation(line: 835, column: 31, scope: !21501)
!21505 = !DILocation(line: 837, column: 30, scope: !21501)
!21506 = !DILocation(line: 837, column: 36, scope: !21501)
!21507 = !DILocation(line: 837, column: 42, scope: !21501)
!21508 = !DILocation(line: 837, column: 47, scope: !21501)
!21509 = !DILocation(line: 837, column: 13, scope: !21501)
!21510 = !DILocation(line: 837, column: 11, scope: !21501)
!21511 = !DILocation(line: 839, column: 11, scope: !21512)
!21512 = distinct !DILexicalBlock(scope: !21501, file: !21397, line: 839, column: 11)
!21513 = !DILocation(line: 839, column: 11, scope: !21501)
!21514 = !DILocation(line: 841, column: 19, scope: !21515)
!21515 = distinct !DILexicalBlock(scope: !21512, file: !21397, line: 840, column: 9)
!21516 = !DILocation(line: 841, column: 11, scope: !21515)
!21517 = !DILocation(line: 841, column: 17, scope: !21515)
!21518 = !DILocation(line: 842, column: 15, scope: !21515)
!21519 = !DILocation(line: 843, column: 9, scope: !21515)
!21520 = !DILocation(line: 844, column: 5, scope: !21501)
!21521 = !DILocation(line: 846, column: 10, scope: !21417)
!21522 = !DILocation(line: 846, column: 3, scope: !21417)
!21523 = !DILocation(line: 847, column: 1, scope: !21417)
!21524 = distinct !DISubprogram(name: "set_acls", scope: !21397, file: !21397, line: 485, type: !21525, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1871, retainedNodes: !216)
!21525 = !DISubroutineType(types: !21526)
!21526 = !{!7, !21420, !116, !7, !7, !4011, !4011}
!21527 = !DILocalVariable(name: "ctx", arg: 1, scope: !21524, file: !21397, line: 485, type: !21420)
!21528 = !DILocation(line: 485, column: 38, scope: !21524)
!21529 = !DILocalVariable(name: "name", arg: 2, scope: !21524, file: !21397, line: 485, type: !116)
!21530 = !DILocation(line: 485, column: 55, scope: !21524)
!21531 = !DILocalVariable(name: "desc", arg: 3, scope: !21524, file: !21397, line: 485, type: !7)
!21532 = !DILocation(line: 485, column: 65, scope: !21524)
!21533 = !DILocalVariable(name: "from_mode", arg: 4, scope: !21524, file: !21397, line: 486, type: !7)
!21534 = !DILocation(line: 486, column: 15, scope: !21524)
!21535 = !DILocalVariable(name: "must_chmod", arg: 5, scope: !21524, file: !21397, line: 486, type: !4011)
!21536 = !DILocation(line: 486, column: 32, scope: !21524)
!21537 = !DILocalVariable(name: "acls_set", arg: 6, scope: !21524, file: !21397, line: 486, type: !4011)
!21538 = !DILocation(line: 486, column: 50, scope: !21524)
!21539 = !DILocalVariable(name: "ret", scope: !21524, file: !21397, line: 488, type: !7)
!21540 = !DILocation(line: 488, column: 7, scope: !21524)
!21541 = !DILocation(line: 503, column: 9, scope: !21542)
!21542 = distinct !DILexicalBlock(scope: !21524, file: !21397, line: 503, column: 7)
!21543 = !DILocation(line: 503, column: 14, scope: !21542)
!21544 = !DILocation(line: 503, column: 7, scope: !21524)
!21545 = !DILocation(line: 505, column: 11, scope: !21546)
!21546 = distinct !DILexicalBlock(scope: !21547, file: !21397, line: 505, column: 11)
!21547 = distinct !DILexicalBlock(scope: !21542, file: !21397, line: 504, column: 5)
!21548 = !DILocation(line: 505, column: 15, scope: !21546)
!21549 = !DILocation(line: 505, column: 20, scope: !21546)
!21550 = !DILocation(line: 505, column: 23, scope: !21546)
!21551 = !DILocation(line: 505, column: 11, scope: !21547)
!21552 = !DILocation(line: 507, column: 15, scope: !21553)
!21553 = distinct !DILexicalBlock(scope: !21554, file: !21397, line: 507, column: 15)
!21554 = distinct !DILexicalBlock(scope: !21546, file: !21397, line: 506, column: 9)
!21555 = !DILocation(line: 507, column: 20, scope: !21553)
!21556 = !DILocation(line: 507, column: 15, scope: !21554)
!21557 = !DILocation(line: 508, column: 23, scope: !21553)
!21558 = !DILocation(line: 508, column: 28, scope: !21553)
!21559 = !DILocation(line: 508, column: 13, scope: !21553)
!21560 = !DILocation(line: 509, column: 37, scope: !21554)
!21561 = !DILocation(line: 509, column: 42, scope: !21554)
!21562 = !DILocation(line: 509, column: 22, scope: !21554)
!21563 = !DILocation(line: 509, column: 11, scope: !21554)
!21564 = !DILocation(line: 509, column: 16, scope: !21554)
!21565 = !DILocation(line: 509, column: 20, scope: !21554)
!21566 = !DILocation(line: 510, column: 15, scope: !21567)
!21567 = distinct !DILexicalBlock(scope: !21554, file: !21397, line: 510, column: 15)
!21568 = !DILocation(line: 510, column: 20, scope: !21567)
!21569 = !DILocation(line: 510, column: 24, scope: !21567)
!21570 = !DILocation(line: 510, column: 15, scope: !21554)
!21571 = !DILocation(line: 511, column: 17, scope: !21567)
!21572 = !DILocation(line: 511, column: 13, scope: !21567)
!21573 = !DILocation(line: 512, column: 9, scope: !21554)
!21574 = !DILocation(line: 514, column: 11, scope: !21575)
!21575 = distinct !DILexicalBlock(scope: !21547, file: !21397, line: 514, column: 11)
!21576 = !DILocation(line: 514, column: 15, scope: !21575)
!21577 = !DILocation(line: 514, column: 20, scope: !21575)
!21578 = !DILocation(line: 514, column: 23, scope: !21575)
!21579 = !DILocation(line: 514, column: 28, scope: !21575)
!21580 = !DILocation(line: 514, column: 11, scope: !21547)
!21581 = !DILocation(line: 516, column: 34, scope: !21582)
!21582 = distinct !DILexicalBlock(scope: !21583, file: !21397, line: 516, column: 15)
!21583 = distinct !DILexicalBlock(scope: !21575, file: !21397, line: 515, column: 9)
!21584 = !DILocation(line: 516, column: 39, scope: !21582)
!21585 = !DILocation(line: 516, column: 15, scope: !21583)
!21586 = !DILocation(line: 517, column: 31, scope: !21582)
!21587 = !DILocation(line: 517, column: 37, scope: !21582)
!21588 = !DILocation(line: 517, column: 42, scope: !21582)
!21589 = !DILocation(line: 517, column: 19, scope: !21582)
!21590 = !DILocation(line: 517, column: 17, scope: !21582)
!21591 = !DILocation(line: 517, column: 13, scope: !21582)
!21592 = !DILocation(line: 519, column: 33, scope: !21582)
!21593 = !DILocation(line: 519, column: 56, scope: !21582)
!21594 = !DILocation(line: 519, column: 61, scope: !21582)
!21595 = !DILocation(line: 519, column: 19, scope: !21582)
!21596 = !DILocation(line: 519, column: 17, scope: !21582)
!21597 = !DILocation(line: 520, column: 15, scope: !21598)
!21598 = distinct !DILexicalBlock(scope: !21583, file: !21397, line: 520, column: 15)
!21599 = !DILocation(line: 520, column: 19, scope: !21598)
!21600 = !DILocation(line: 520, column: 15, scope: !21583)
!21601 = !DILocation(line: 522, column: 38, scope: !21602)
!21602 = distinct !DILexicalBlock(scope: !21603, file: !21397, line: 522, column: 19)
!21603 = distinct !DILexicalBlock(scope: !21598, file: !21397, line: 521, column: 13)
!21604 = !DILocation(line: 522, column: 21, scope: !21602)
!21605 = !DILocation(line: 522, column: 19, scope: !21603)
!21606 = !DILocation(line: 524, column: 19, scope: !21607)
!21607 = distinct !DILexicalBlock(scope: !21602, file: !21397, line: 523, column: 17)
!21608 = !DILocation(line: 524, column: 24, scope: !21607)
!21609 = !DILocation(line: 524, column: 43, scope: !21607)
!21610 = !DILocation(line: 525, column: 23, scope: !21611)
!21611 = distinct !DILexicalBlock(scope: !21607, file: !21397, line: 525, column: 23)
!21612 = !DILocation(line: 525, column: 33, scope: !21611)
!21613 = !DILocation(line: 525, column: 59, scope: !21611)
!21614 = !DILocation(line: 525, column: 64, scope: !21611)
!21615 = !DILocation(line: 525, column: 36, scope: !21611)
!21616 = !DILocation(line: 525, column: 69, scope: !21611)
!21617 = !DILocation(line: 525, column: 23, scope: !21607)
!21618 = !DILocation(line: 526, column: 25, scope: !21611)
!21619 = !DILocation(line: 526, column: 21, scope: !21611)
!21620 = !DILocation(line: 527, column: 17, scope: !21607)
!21621 = !DILocation(line: 528, column: 13, scope: !21603)
!21622 = !DILocation(line: 531, column: 16, scope: !21623)
!21623 = distinct !DILexicalBlock(scope: !21598, file: !21397, line: 530, column: 13)
!21624 = !DILocation(line: 531, column: 25, scope: !21623)
!21625 = !DILocation(line: 532, column: 19, scope: !21626)
!21626 = distinct !DILexicalBlock(scope: !21623, file: !21397, line: 532, column: 19)
!21627 = !DILocation(line: 532, column: 19, scope: !21623)
!21628 = !DILocation(line: 534, column: 25, scope: !21629)
!21629 = distinct !DILexicalBlock(scope: !21630, file: !21397, line: 534, column: 23)
!21630 = distinct !DILexicalBlock(scope: !21626, file: !21397, line: 533, column: 17)
!21631 = !DILocation(line: 534, column: 35, scope: !21629)
!21632 = !DILocation(line: 534, column: 38, scope: !21629)
!21633 = !DILocation(line: 534, column: 43, scope: !21629)
!21634 = !DILocation(line: 534, column: 55, scope: !21629)
!21635 = !DILocation(line: 535, column: 47, scope: !21629)
!21636 = !DILocation(line: 535, column: 52, scope: !21629)
!21637 = !DILocation(line: 535, column: 23, scope: !21629)
!21638 = !DILocation(line: 534, column: 23, scope: !21630)
!21639 = !DILocation(line: 536, column: 41, scope: !21629)
!21640 = !DILocation(line: 537, column: 41, scope: !21629)
!21641 = !DILocation(line: 537, column: 46, scope: !21629)
!21642 = !DILocation(line: 536, column: 27, scope: !21629)
!21643 = !DILocation(line: 536, column: 25, scope: !21629)
!21644 = !DILocation(line: 536, column: 21, scope: !21629)
!21645 = !DILocation(line: 539, column: 48, scope: !21629)
!21646 = !DILocation(line: 539, column: 27, scope: !21629)
!21647 = !DILocation(line: 539, column: 25, scope: !21629)
!21648 = !DILocation(line: 540, column: 17, scope: !21630)
!21649 = !DILocation(line: 542, column: 9, scope: !21583)
!21650 = !DILocation(line: 543, column: 5, scope: !21547)
!21651 = !DILocation(line: 749, column: 10, scope: !21524)
!21652 = !DILocation(line: 749, column: 3, scope: !21524)
!21653 = distinct !DISubprogram(name: "__argmatch_die", scope: !1029, file: !1029, line: 62, type: !571, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !990, retainedNodes: !216)
!21654 = !DILocation(line: 64, column: 3, scope: !21653)
!21655 = !DILocation(line: 65, column: 1, scope: !21653)
!21656 = distinct !DISubprogram(name: "argmatch", scope: !1029, file: !1029, line: 84, type: !21657, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !990, retainedNodes: !216)
!21657 = !DISubroutineType(types: !21658)
!21658 = !{!506, !116, !993, !116, !55}
!21659 = !DILocalVariable(name: "arg", arg: 1, scope: !21656, file: !1029, line: 84, type: !116)
!21660 = !DILocation(line: 84, column: 23, scope: !21656)
!21661 = !DILocalVariable(name: "arglist", arg: 2, scope: !21656, file: !1029, line: 84, type: !993)
!21662 = !DILocation(line: 84, column: 47, scope: !21656)
!21663 = !DILocalVariable(name: "vallist", arg: 3, scope: !21656, file: !1029, line: 85, type: !116)
!21664 = !DILocation(line: 85, column: 23, scope: !21656)
!21665 = !DILocalVariable(name: "valsize", arg: 4, scope: !21656, file: !1029, line: 85, type: !55)
!21666 = !DILocation(line: 85, column: 39, scope: !21656)
!21667 = !DILocalVariable(name: "i", scope: !21656, file: !1029, line: 87, type: !55)
!21668 = !DILocation(line: 87, column: 10, scope: !21656)
!21669 = !DILocalVariable(name: "arglen", scope: !21656, file: !1029, line: 88, type: !55)
!21670 = !DILocation(line: 88, column: 10, scope: !21656)
!21671 = !DILocalVariable(name: "matchind", scope: !21656, file: !1029, line: 89, type: !506)
!21672 = !DILocation(line: 89, column: 13, scope: !21656)
!21673 = !DILocalVariable(name: "ambiguous", scope: !21656, file: !1029, line: 90, type: !142)
!21674 = !DILocation(line: 90, column: 8, scope: !21656)
!21675 = !DILocation(line: 92, column: 20, scope: !21656)
!21676 = !DILocation(line: 92, column: 12, scope: !21656)
!21677 = !DILocation(line: 92, column: 10, scope: !21656)
!21678 = !DILocation(line: 95, column: 10, scope: !21679)
!21679 = distinct !DILexicalBlock(scope: !21656, file: !1029, line: 95, column: 3)
!21680 = !DILocation(line: 95, column: 8, scope: !21679)
!21681 = !DILocation(line: 95, column: 15, scope: !21682)
!21682 = distinct !DILexicalBlock(scope: !21679, file: !1029, line: 95, column: 3)
!21683 = !DILocation(line: 95, column: 23, scope: !21682)
!21684 = !DILocation(line: 95, column: 3, scope: !21679)
!21685 = !DILocation(line: 97, column: 21, scope: !21686)
!21686 = distinct !DILexicalBlock(scope: !21687, file: !1029, line: 97, column: 11)
!21687 = distinct !DILexicalBlock(scope: !21682, file: !1029, line: 96, column: 5)
!21688 = !DILocation(line: 97, column: 29, scope: !21686)
!21689 = !DILocation(line: 97, column: 33, scope: !21686)
!21690 = !DILocation(line: 97, column: 38, scope: !21686)
!21691 = !DILocation(line: 97, column: 12, scope: !21686)
!21692 = !DILocation(line: 97, column: 11, scope: !21687)
!21693 = !DILocation(line: 99, column: 23, scope: !21694)
!21694 = distinct !DILexicalBlock(scope: !21695, file: !1029, line: 99, column: 15)
!21695 = distinct !DILexicalBlock(scope: !21686, file: !1029, line: 98, column: 9)
!21696 = !DILocation(line: 99, column: 31, scope: !21694)
!21697 = !DILocation(line: 99, column: 15, scope: !21694)
!21698 = !DILocation(line: 99, column: 38, scope: !21694)
!21699 = !DILocation(line: 99, column: 35, scope: !21694)
!21700 = !DILocation(line: 99, column: 15, scope: !21695)
!21701 = !DILocation(line: 101, column: 20, scope: !21694)
!21702 = !DILocation(line: 101, column: 13, scope: !21694)
!21703 = !DILocation(line: 102, column: 20, scope: !21704)
!21704 = distinct !DILexicalBlock(scope: !21694, file: !1029, line: 102, column: 20)
!21705 = !DILocation(line: 102, column: 29, scope: !21704)
!21706 = !DILocation(line: 102, column: 20, scope: !21694)
!21707 = !DILocation(line: 104, column: 24, scope: !21704)
!21708 = !DILocation(line: 104, column: 22, scope: !21704)
!21709 = !DILocation(line: 104, column: 13, scope: !21704)
!21710 = !DILocation(line: 108, column: 19, scope: !21711)
!21711 = distinct !DILexicalBlock(scope: !21712, file: !1029, line: 108, column: 19)
!21712 = distinct !DILexicalBlock(scope: !21704, file: !1029, line: 106, column: 13)
!21713 = !DILocation(line: 108, column: 27, scope: !21711)
!21714 = !DILocation(line: 109, column: 19, scope: !21711)
!21715 = !DILocation(line: 109, column: 30, scope: !21711)
!21716 = !DILocation(line: 109, column: 40, scope: !21711)
!21717 = !DILocation(line: 109, column: 50, scope: !21711)
!21718 = !DILocation(line: 109, column: 48, scope: !21711)
!21719 = !DILocation(line: 109, column: 38, scope: !21711)
!21720 = !DILocation(line: 110, column: 30, scope: !21711)
!21721 = !DILocation(line: 110, column: 40, scope: !21711)
!21722 = !DILocation(line: 110, column: 50, scope: !21711)
!21723 = !DILocation(line: 110, column: 48, scope: !21711)
!21724 = !DILocation(line: 110, column: 38, scope: !21711)
!21725 = !DILocation(line: 110, column: 53, scope: !21711)
!21726 = !DILocation(line: 109, column: 22, scope: !21711)
!21727 = !DILocation(line: 108, column: 19, scope: !21712)
!21728 = !DILocation(line: 114, column: 29, scope: !21729)
!21729 = distinct !DILexicalBlock(scope: !21711, file: !1029, line: 111, column: 17)
!21730 = !DILocation(line: 115, column: 17, scope: !21729)
!21731 = !DILocation(line: 117, column: 9, scope: !21695)
!21732 = !DILocation(line: 118, column: 5, scope: !21687)
!21733 = !DILocation(line: 95, column: 28, scope: !21682)
!21734 = !DILocation(line: 95, column: 3, scope: !21682)
!21735 = distinct !{!21735, !21684, !21736}
!21736 = !DILocation(line: 118, column: 5, scope: !21679)
!21737 = !DILocation(line: 119, column: 7, scope: !21738)
!21738 = distinct !DILexicalBlock(scope: !21656, file: !1029, line: 119, column: 7)
!21739 = !DILocation(line: 119, column: 7, scope: !21656)
!21740 = !DILocation(line: 120, column: 5, scope: !21738)
!21741 = !DILocation(line: 122, column: 12, scope: !21738)
!21742 = !DILocation(line: 122, column: 5, scope: !21738)
!21743 = !DILocation(line: 123, column: 1, scope: !21656)
!21744 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1029, file: !1029, line: 131, type: !21745, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !990, retainedNodes: !216)
!21745 = !DISubroutineType(types: !21746)
!21746 = !{null, !116, !116, !506}
!21747 = !DILocalVariable(name: "context", arg: 1, scope: !21744, file: !1029, line: 131, type: !116)
!21748 = !DILocation(line: 131, column: 31, scope: !21744)
!21749 = !DILocalVariable(name: "value", arg: 2, scope: !21744, file: !1029, line: 131, type: !116)
!21750 = !DILocation(line: 131, column: 52, scope: !21744)
!21751 = !DILocalVariable(name: "problem", arg: 3, scope: !21744, file: !1029, line: 131, type: !506)
!21752 = !DILocation(line: 131, column: 69, scope: !21744)
!21753 = !DILocalVariable(name: "format", scope: !21744, file: !1029, line: 133, type: !116)
!21754 = !DILocation(line: 133, column: 15, scope: !21744)
!21755 = !DILocation(line: 133, column: 25, scope: !21744)
!21756 = !DILocation(line: 133, column: 33, scope: !21744)
!21757 = !DILocation(line: 134, column: 27, scope: !21744)
!21758 = !DILocation(line: 135, column: 27, scope: !21744)
!21759 = !DILocation(line: 137, column: 16, scope: !21744)
!21760 = !DILocation(line: 137, column: 69, scope: !21744)
!21761 = !DILocation(line: 137, column: 24, scope: !21744)
!21762 = !DILocation(line: 138, column: 22, scope: !21744)
!21763 = !DILocation(line: 138, column: 10, scope: !21744)
!21764 = !DILocation(line: 137, column: 3, scope: !21744)
!21765 = !DILocation(line: 139, column: 1, scope: !21744)
!21766 = distinct !DISubprogram(name: "argmatch_valid", scope: !1029, file: !1029, line: 146, type: !21767, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !990, retainedNodes: !216)
!21767 = !DISubroutineType(types: !21768)
!21768 = !{null, !993, !116, !55}
!21769 = !DILocalVariable(name: "arglist", arg: 1, scope: !21766, file: !1029, line: 146, type: !993)
!21770 = !DILocation(line: 146, column: 36, scope: !21766)
!21771 = !DILocalVariable(name: "vallist", arg: 2, scope: !21766, file: !1029, line: 147, type: !116)
!21772 = !DILocation(line: 147, column: 29, scope: !21766)
!21773 = !DILocalVariable(name: "valsize", arg: 3, scope: !21766, file: !1029, line: 147, type: !55)
!21774 = !DILocation(line: 147, column: 45, scope: !21766)
!21775 = !DILocalVariable(name: "i", scope: !21766, file: !1029, line: 149, type: !55)
!21776 = !DILocation(line: 149, column: 10, scope: !21766)
!21777 = !DILocalVariable(name: "last_val", scope: !21766, file: !1029, line: 150, type: !116)
!21778 = !DILocation(line: 150, column: 15, scope: !21766)
!21779 = !DILocation(line: 154, column: 3, scope: !21766)
!21780 = !DILocation(line: 155, column: 10, scope: !21781)
!21781 = distinct !DILexicalBlock(scope: !21766, file: !1029, line: 155, column: 3)
!21782 = !DILocation(line: 155, column: 8, scope: !21781)
!21783 = !DILocation(line: 155, column: 15, scope: !21784)
!21784 = distinct !DILexicalBlock(scope: !21781, file: !1029, line: 155, column: 3)
!21785 = !DILocation(line: 155, column: 23, scope: !21784)
!21786 = !DILocation(line: 155, column: 3, scope: !21781)
!21787 = !DILocation(line: 156, column: 10, scope: !21788)
!21788 = distinct !DILexicalBlock(scope: !21784, file: !1029, line: 156, column: 9)
!21789 = !DILocation(line: 156, column: 12, scope: !21788)
!21790 = !DILocation(line: 157, column: 9, scope: !21788)
!21791 = !DILocation(line: 157, column: 20, scope: !21788)
!21792 = !DILocation(line: 157, column: 30, scope: !21788)
!21793 = !DILocation(line: 157, column: 40, scope: !21788)
!21794 = !DILocation(line: 157, column: 50, scope: !21788)
!21795 = !DILocation(line: 157, column: 48, scope: !21788)
!21796 = !DILocation(line: 157, column: 38, scope: !21788)
!21797 = !DILocation(line: 157, column: 53, scope: !21788)
!21798 = !DILocation(line: 157, column: 12, scope: !21788)
!21799 = !DILocation(line: 156, column: 9, scope: !21784)
!21800 = !DILocation(line: 159, column: 18, scope: !21801)
!21801 = distinct !DILexicalBlock(scope: !21788, file: !1029, line: 158, column: 7)
!21802 = !DILocation(line: 159, column: 45, scope: !21801)
!21803 = !DILocation(line: 159, column: 53, scope: !21801)
!21804 = !DILocation(line: 159, column: 38, scope: !21801)
!21805 = !DILocation(line: 159, column: 9, scope: !21801)
!21806 = !DILocation(line: 160, column: 20, scope: !21801)
!21807 = !DILocation(line: 160, column: 30, scope: !21801)
!21808 = !DILocation(line: 160, column: 40, scope: !21801)
!21809 = !DILocation(line: 160, column: 38, scope: !21801)
!21810 = !DILocation(line: 160, column: 28, scope: !21801)
!21811 = !DILocation(line: 160, column: 18, scope: !21801)
!21812 = !DILocation(line: 161, column: 7, scope: !21801)
!21813 = !DILocation(line: 164, column: 18, scope: !21814)
!21814 = distinct !DILexicalBlock(scope: !21788, file: !1029, line: 163, column: 7)
!21815 = !DILocation(line: 164, column: 41, scope: !21814)
!21816 = !DILocation(line: 164, column: 49, scope: !21814)
!21817 = !DILocation(line: 164, column: 34, scope: !21814)
!21818 = !DILocation(line: 164, column: 9, scope: !21814)
!21819 = !DILocation(line: 157, column: 60, scope: !21788)
!21820 = !DILocation(line: 155, column: 28, scope: !21784)
!21821 = !DILocation(line: 155, column: 3, scope: !21784)
!21822 = distinct !{!21822, !21786, !21823}
!21823 = !DILocation(line: 165, column: 7, scope: !21781)
!21824 = !DILocation(line: 166, column: 3, scope: !21766)
!21825 = !DILocation(line: 167, column: 1, scope: !21766)
!21826 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1029, file: !1029, line: 176, type: !21827, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !990, retainedNodes: !216)
!21827 = !DISubroutineType(types: !21828)
!21828 = !{!506, !116, !116, !993, !116, !55, !568}
!21829 = !DILocalVariable(name: "context", arg: 1, scope: !21826, file: !1029, line: 176, type: !116)
!21830 = !DILocation(line: 176, column: 35, scope: !21826)
!21831 = !DILocalVariable(name: "arg", arg: 2, scope: !21826, file: !1029, line: 177, type: !116)
!21832 = !DILocation(line: 177, column: 35, scope: !21826)
!21833 = !DILocalVariable(name: "arglist", arg: 3, scope: !21826, file: !1029, line: 177, type: !993)
!21834 = !DILocation(line: 177, column: 59, scope: !21826)
!21835 = !DILocalVariable(name: "vallist", arg: 4, scope: !21826, file: !1029, line: 178, type: !116)
!21836 = !DILocation(line: 178, column: 35, scope: !21826)
!21837 = !DILocalVariable(name: "valsize", arg: 5, scope: !21826, file: !1029, line: 178, type: !55)
!21838 = !DILocation(line: 178, column: 51, scope: !21826)
!21839 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !21826, file: !1029, line: 179, type: !568)
!21840 = !DILocation(line: 179, column: 40, scope: !21826)
!21841 = !DILocalVariable(name: "res", scope: !21826, file: !1029, line: 181, type: !506)
!21842 = !DILocation(line: 181, column: 13, scope: !21826)
!21843 = !DILocation(line: 181, column: 29, scope: !21826)
!21844 = !DILocation(line: 181, column: 34, scope: !21826)
!21845 = !DILocation(line: 181, column: 43, scope: !21826)
!21846 = !DILocation(line: 181, column: 52, scope: !21826)
!21847 = !DILocation(line: 181, column: 19, scope: !21826)
!21848 = !DILocation(line: 182, column: 7, scope: !21849)
!21849 = distinct !DILexicalBlock(scope: !21826, file: !1029, line: 182, column: 7)
!21850 = !DILocation(line: 182, column: 11, scope: !21849)
!21851 = !DILocation(line: 182, column: 7, scope: !21826)
!21852 = !DILocation(line: 184, column: 12, scope: !21849)
!21853 = !DILocation(line: 184, column: 5, scope: !21849)
!21854 = !DILocation(line: 187, column: 21, scope: !21826)
!21855 = !DILocation(line: 187, column: 30, scope: !21826)
!21856 = !DILocation(line: 187, column: 35, scope: !21826)
!21857 = !DILocation(line: 187, column: 3, scope: !21826)
!21858 = !DILocation(line: 188, column: 19, scope: !21826)
!21859 = !DILocation(line: 188, column: 28, scope: !21826)
!21860 = !DILocation(line: 188, column: 37, scope: !21826)
!21861 = !DILocation(line: 188, column: 3, scope: !21826)
!21862 = !DILocation(line: 189, column: 5, scope: !21826)
!21863 = !DILocation(line: 189, column: 3, scope: !21826)
!21864 = !DILocation(line: 191, column: 3, scope: !21826)
!21865 = !DILocation(line: 192, column: 1, scope: !21826)
!21866 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1029, file: !1029, line: 197, type: !21867, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !990, retainedNodes: !216)
!21867 = !DISubroutineType(types: !21868)
!21868 = !{!116, !116, !993, !116, !55}
!21869 = !DILocalVariable(name: "value", arg: 1, scope: !21866, file: !1029, line: 197, type: !116)
!21870 = !DILocation(line: 197, column: 35, scope: !21866)
!21871 = !DILocalVariable(name: "arglist", arg: 2, scope: !21866, file: !1029, line: 198, type: !993)
!21872 = !DILocation(line: 198, column: 42, scope: !21866)
!21873 = !DILocalVariable(name: "vallist", arg: 3, scope: !21866, file: !1029, line: 199, type: !116)
!21874 = !DILocation(line: 199, column: 35, scope: !21866)
!21875 = !DILocalVariable(name: "valsize", arg: 4, scope: !21866, file: !1029, line: 199, type: !55)
!21876 = !DILocation(line: 199, column: 51, scope: !21866)
!21877 = !DILocalVariable(name: "i", scope: !21866, file: !1029, line: 201, type: !55)
!21878 = !DILocation(line: 201, column: 10, scope: !21866)
!21879 = !DILocation(line: 203, column: 10, scope: !21880)
!21880 = distinct !DILexicalBlock(scope: !21866, file: !1029, line: 203, column: 3)
!21881 = !DILocation(line: 203, column: 8, scope: !21880)
!21882 = !DILocation(line: 203, column: 15, scope: !21883)
!21883 = distinct !DILexicalBlock(scope: !21880, file: !1029, line: 203, column: 3)
!21884 = !DILocation(line: 203, column: 23, scope: !21883)
!21885 = !DILocation(line: 203, column: 3, scope: !21880)
!21886 = !DILocation(line: 204, column: 18, scope: !21887)
!21887 = distinct !DILexicalBlock(scope: !21883, file: !1029, line: 204, column: 9)
!21888 = !DILocation(line: 204, column: 25, scope: !21887)
!21889 = !DILocation(line: 204, column: 35, scope: !21887)
!21890 = !DILocation(line: 204, column: 45, scope: !21887)
!21891 = !DILocation(line: 204, column: 43, scope: !21887)
!21892 = !DILocation(line: 204, column: 33, scope: !21887)
!21893 = !DILocation(line: 204, column: 48, scope: !21887)
!21894 = !DILocation(line: 204, column: 10, scope: !21887)
!21895 = !DILocation(line: 204, column: 9, scope: !21883)
!21896 = !DILocation(line: 205, column: 14, scope: !21887)
!21897 = !DILocation(line: 205, column: 22, scope: !21887)
!21898 = !DILocation(line: 205, column: 7, scope: !21887)
!21899 = !DILocation(line: 204, column: 55, scope: !21887)
!21900 = !DILocation(line: 203, column: 28, scope: !21883)
!21901 = !DILocation(line: 203, column: 3, scope: !21883)
!21902 = distinct !{!21902, !21885, !21903}
!21903 = !DILocation(line: 205, column: 23, scope: !21880)
!21904 = !DILocation(line: 206, column: 3, scope: !21866)
!21905 = !DILocation(line: 207, column: 1, scope: !21866)
!21906 = distinct !DISubprogram(name: "rotl64", scope: !21907, file: !21907, line: 39, type: !21908, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!21907 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/software/coreutils-8.31")
!21908 = !DISubroutineType(types: !21909)
!21909 = !{!1241, !1241, !7}
!21910 = !DILocalVariable(name: "x", arg: 1, scope: !21906, file: !21907, line: 39, type: !1241)
!21911 = !DILocation(line: 39, column: 18, scope: !21906)
!21912 = !DILocalVariable(name: "n", arg: 2, scope: !21906, file: !21907, line: 39, type: !7)
!21913 = !DILocation(line: 39, column: 25, scope: !21906)
!21914 = !DILocation(line: 41, column: 12, scope: !21906)
!21915 = !DILocation(line: 41, column: 17, scope: !21906)
!21916 = !DILocation(line: 41, column: 14, scope: !21906)
!21917 = !DILocation(line: 41, column: 23, scope: !21906)
!21918 = !DILocation(line: 41, column: 34, scope: !21906)
!21919 = !DILocation(line: 41, column: 32, scope: !21906)
!21920 = !DILocation(line: 41, column: 25, scope: !21906)
!21921 = !DILocation(line: 41, column: 20, scope: !21906)
!21922 = !DILocation(line: 41, column: 3, scope: !21906)
!21923 = distinct !DISubprogram(name: "rotr64", scope: !21907, file: !21907, line: 48, type: !21908, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!21924 = !DILocalVariable(name: "x", arg: 1, scope: !21923, file: !21907, line: 48, type: !1241)
!21925 = !DILocation(line: 48, column: 18, scope: !21923)
!21926 = !DILocalVariable(name: "n", arg: 2, scope: !21923, file: !21907, line: 48, type: !7)
!21927 = !DILocation(line: 48, column: 25, scope: !21923)
!21928 = !DILocation(line: 50, column: 12, scope: !21923)
!21929 = !DILocation(line: 50, column: 17, scope: !21923)
!21930 = !DILocation(line: 50, column: 14, scope: !21923)
!21931 = !DILocation(line: 50, column: 23, scope: !21923)
!21932 = !DILocation(line: 50, column: 34, scope: !21923)
!21933 = !DILocation(line: 50, column: 32, scope: !21923)
!21934 = !DILocation(line: 50, column: 25, scope: !21923)
!21935 = !DILocation(line: 50, column: 20, scope: !21923)
!21936 = !DILocation(line: 50, column: 3, scope: !21923)
!21937 = distinct !DISubprogram(name: "rotl32", scope: !21907, file: !21907, line: 58, type: !21938, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!21938 = !DISubroutineType(types: !21939)
!21939 = !{!1246, !1246, !7}
!21940 = !DILocalVariable(name: "x", arg: 1, scope: !21937, file: !21907, line: 58, type: !1246)
!21941 = !DILocation(line: 58, column: 18, scope: !21937)
!21942 = !DILocalVariable(name: "n", arg: 2, scope: !21937, file: !21907, line: 58, type: !7)
!21943 = !DILocation(line: 58, column: 25, scope: !21937)
!21944 = !DILocation(line: 60, column: 12, scope: !21937)
!21945 = !DILocation(line: 60, column: 17, scope: !21937)
!21946 = !DILocation(line: 60, column: 14, scope: !21937)
!21947 = !DILocation(line: 60, column: 23, scope: !21937)
!21948 = !DILocation(line: 60, column: 34, scope: !21937)
!21949 = !DILocation(line: 60, column: 32, scope: !21937)
!21950 = !DILocation(line: 60, column: 25, scope: !21937)
!21951 = !DILocation(line: 60, column: 20, scope: !21937)
!21952 = !DILocation(line: 60, column: 3, scope: !21937)
!21953 = distinct !DISubprogram(name: "rotr32", scope: !21907, file: !21907, line: 67, type: !21938, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!21954 = !DILocalVariable(name: "x", arg: 1, scope: !21953, file: !21907, line: 67, type: !1246)
!21955 = !DILocation(line: 67, column: 18, scope: !21953)
!21956 = !DILocalVariable(name: "n", arg: 2, scope: !21953, file: !21907, line: 67, type: !7)
!21957 = !DILocation(line: 67, column: 25, scope: !21953)
!21958 = !DILocation(line: 69, column: 12, scope: !21953)
!21959 = !DILocation(line: 69, column: 17, scope: !21953)
!21960 = !DILocation(line: 69, column: 14, scope: !21953)
!21961 = !DILocation(line: 69, column: 23, scope: !21953)
!21962 = !DILocation(line: 69, column: 34, scope: !21953)
!21963 = !DILocation(line: 69, column: 32, scope: !21953)
!21964 = !DILocation(line: 69, column: 25, scope: !21953)
!21965 = !DILocation(line: 69, column: 20, scope: !21953)
!21966 = !DILocation(line: 69, column: 3, scope: !21953)
!21967 = distinct !DISubprogram(name: "rotl_sz", scope: !21907, file: !21907, line: 76, type: !21968, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!21968 = !DISubroutineType(types: !21969)
!21969 = !{!55, !55, !7}
!21970 = !DILocalVariable(name: "x", arg: 1, scope: !21967, file: !21907, line: 76, type: !55)
!21971 = !DILocation(line: 76, column: 17, scope: !21967)
!21972 = !DILocalVariable(name: "n", arg: 2, scope: !21967, file: !21907, line: 76, type: !7)
!21973 = !DILocation(line: 76, column: 24, scope: !21967)
!21974 = !DILocation(line: 78, column: 12, scope: !21967)
!21975 = !DILocation(line: 78, column: 17, scope: !21967)
!21976 = !DILocation(line: 78, column: 14, scope: !21967)
!21977 = !DILocation(line: 78, column: 23, scope: !21967)
!21978 = !DILocation(line: 78, column: 53, scope: !21967)
!21979 = !DILocation(line: 78, column: 51, scope: !21967)
!21980 = !DILocation(line: 78, column: 25, scope: !21967)
!21981 = !DILocation(line: 78, column: 20, scope: !21967)
!21982 = !DILocation(line: 78, column: 3, scope: !21967)
!21983 = distinct !DISubprogram(name: "rotr_sz", scope: !21907, file: !21907, line: 85, type: !21968, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!21984 = !DILocalVariable(name: "x", arg: 1, scope: !21983, file: !21907, line: 85, type: !55)
!21985 = !DILocation(line: 85, column: 17, scope: !21983)
!21986 = !DILocalVariable(name: "n", arg: 2, scope: !21983, file: !21907, line: 85, type: !7)
!21987 = !DILocation(line: 85, column: 24, scope: !21983)
!21988 = !DILocation(line: 87, column: 12, scope: !21983)
!21989 = !DILocation(line: 87, column: 17, scope: !21983)
!21990 = !DILocation(line: 87, column: 14, scope: !21983)
!21991 = !DILocation(line: 87, column: 23, scope: !21983)
!21992 = !DILocation(line: 87, column: 53, scope: !21983)
!21993 = !DILocation(line: 87, column: 51, scope: !21983)
!21994 = !DILocation(line: 87, column: 25, scope: !21983)
!21995 = !DILocation(line: 87, column: 20, scope: !21983)
!21996 = !DILocation(line: 87, column: 3, scope: !21983)
!21997 = distinct !DISubprogram(name: "rotl16", scope: !21907, file: !21907, line: 96, type: !21998, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!21998 = !DISubroutineType(types: !21999)
!21999 = !{!22000, !22000, !7}
!22000 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1242, line: 25, baseType: !22001)
!22001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !30, line: 40, baseType: !33)
!22002 = !DILocalVariable(name: "x", arg: 1, scope: !21997, file: !21907, line: 96, type: !22000)
!22003 = !DILocation(line: 96, column: 18, scope: !21997)
!22004 = !DILocalVariable(name: "n", arg: 2, scope: !21997, file: !21907, line: 96, type: !7)
!22005 = !DILocation(line: 96, column: 25, scope: !21997)
!22006 = !DILocation(line: 98, column: 12, scope: !21997)
!22007 = !DILocation(line: 98, column: 17, scope: !21997)
!22008 = !DILocation(line: 98, column: 14, scope: !21997)
!22009 = !DILocation(line: 98, column: 23, scope: !21997)
!22010 = !DILocation(line: 98, column: 34, scope: !21997)
!22011 = !DILocation(line: 98, column: 32, scope: !21997)
!22012 = !DILocation(line: 98, column: 25, scope: !21997)
!22013 = !DILocation(line: 98, column: 20, scope: !21997)
!22014 = !DILocation(line: 98, column: 39, scope: !21997)
!22015 = !DILocation(line: 98, column: 10, scope: !21997)
!22016 = !DILocation(line: 98, column: 3, scope: !21997)
!22017 = distinct !DISubprogram(name: "rotr16", scope: !21907, file: !21907, line: 107, type: !21998, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!22018 = !DILocalVariable(name: "x", arg: 1, scope: !22017, file: !21907, line: 107, type: !22000)
!22019 = !DILocation(line: 107, column: 18, scope: !22017)
!22020 = !DILocalVariable(name: "n", arg: 2, scope: !22017, file: !21907, line: 107, type: !7)
!22021 = !DILocation(line: 107, column: 25, scope: !22017)
!22022 = !DILocation(line: 109, column: 12, scope: !22017)
!22023 = !DILocation(line: 109, column: 17, scope: !22017)
!22024 = !DILocation(line: 109, column: 14, scope: !22017)
!22025 = !DILocation(line: 109, column: 23, scope: !22017)
!22026 = !DILocation(line: 109, column: 34, scope: !22017)
!22027 = !DILocation(line: 109, column: 32, scope: !22017)
!22028 = !DILocation(line: 109, column: 25, scope: !22017)
!22029 = !DILocation(line: 109, column: 20, scope: !22017)
!22030 = !DILocation(line: 109, column: 39, scope: !22017)
!22031 = !DILocation(line: 109, column: 10, scope: !22017)
!22032 = !DILocation(line: 109, column: 3, scope: !22017)
!22033 = distinct !DISubprogram(name: "rotl8", scope: !21907, file: !21907, line: 118, type: !22034, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!22034 = !DISubroutineType(types: !22035)
!22035 = !{!22036, !22036, !7}
!22036 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1242, line: 24, baseType: !22037)
!22037 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !30, line: 38, baseType: !450)
!22038 = !DILocalVariable(name: "x", arg: 1, scope: !22033, file: !21907, line: 118, type: !22036)
!22039 = !DILocation(line: 118, column: 16, scope: !22033)
!22040 = !DILocalVariable(name: "n", arg: 2, scope: !22033, file: !21907, line: 118, type: !7)
!22041 = !DILocation(line: 118, column: 23, scope: !22033)
!22042 = !DILocation(line: 120, column: 12, scope: !22033)
!22043 = !DILocation(line: 120, column: 17, scope: !22033)
!22044 = !DILocation(line: 120, column: 14, scope: !22033)
!22045 = !DILocation(line: 120, column: 23, scope: !22033)
!22046 = !DILocation(line: 120, column: 33, scope: !22033)
!22047 = !DILocation(line: 120, column: 31, scope: !22033)
!22048 = !DILocation(line: 120, column: 25, scope: !22033)
!22049 = !DILocation(line: 120, column: 20, scope: !22033)
!22050 = !DILocation(line: 120, column: 38, scope: !22033)
!22051 = !DILocation(line: 120, column: 10, scope: !22033)
!22052 = !DILocation(line: 120, column: 3, scope: !22033)
!22053 = distinct !DISubprogram(name: "rotr8", scope: !21907, file: !21907, line: 129, type: !22034, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1874, retainedNodes: !216)
!22054 = !DILocalVariable(name: "x", arg: 1, scope: !22053, file: !21907, line: 129, type: !22036)
!22055 = !DILocation(line: 129, column: 16, scope: !22053)
!22056 = !DILocalVariable(name: "n", arg: 2, scope: !22053, file: !21907, line: 129, type: !7)
!22057 = !DILocation(line: 129, column: 23, scope: !22053)
!22058 = !DILocation(line: 131, column: 12, scope: !22053)
!22059 = !DILocation(line: 131, column: 17, scope: !22053)
!22060 = !DILocation(line: 131, column: 14, scope: !22053)
!22061 = !DILocation(line: 131, column: 23, scope: !22053)
!22062 = !DILocation(line: 131, column: 33, scope: !22053)
!22063 = !DILocation(line: 131, column: 31, scope: !22053)
!22064 = !DILocation(line: 131, column: 25, scope: !22053)
!22065 = !DILocation(line: 131, column: 20, scope: !22053)
!22066 = !DILocation(line: 131, column: 38, scope: !22053)
!22067 = !DILocation(line: 131, column: 10, scope: !22053)
!22068 = !DILocation(line: 131, column: 3, scope: !22053)
!22069 = distinct !DISubprogram(name: "c_strcasecmp", scope: !22070, file: !22070, line: 27, type: !15544, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1876, retainedNodes: !216)
!22070 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22071 = !DILocalVariable(name: "s1", arg: 1, scope: !22069, file: !22070, line: 27, type: !116)
!22072 = !DILocation(line: 27, column: 27, scope: !22069)
!22073 = !DILocalVariable(name: "s2", arg: 2, scope: !22069, file: !22070, line: 27, type: !116)
!22074 = !DILocation(line: 27, column: 43, scope: !22069)
!22075 = !DILocalVariable(name: "p1", scope: !22069, file: !22070, line: 29, type: !448)
!22076 = !DILocation(line: 29, column: 33, scope: !22069)
!22077 = !DILocation(line: 29, column: 62, scope: !22069)
!22078 = !DILocalVariable(name: "p2", scope: !22069, file: !22070, line: 30, type: !448)
!22079 = !DILocation(line: 30, column: 33, scope: !22069)
!22080 = !DILocation(line: 30, column: 62, scope: !22069)
!22081 = !DILocalVariable(name: "c1", scope: !22069, file: !22070, line: 31, type: !450)
!22082 = !DILocation(line: 31, column: 17, scope: !22069)
!22083 = !DILocalVariable(name: "c2", scope: !22069, file: !22070, line: 31, type: !450)
!22084 = !DILocation(line: 31, column: 21, scope: !22069)
!22085 = !DILocation(line: 33, column: 7, scope: !22086)
!22086 = distinct !DILexicalBlock(scope: !22069, file: !22070, line: 33, column: 7)
!22087 = !DILocation(line: 33, column: 13, scope: !22086)
!22088 = !DILocation(line: 33, column: 10, scope: !22086)
!22089 = !DILocation(line: 33, column: 7, scope: !22069)
!22090 = !DILocation(line: 34, column: 5, scope: !22086)
!22091 = !DILocation(line: 36, column: 3, scope: !22069)
!22092 = !DILocation(line: 38, column: 24, scope: !22093)
!22093 = distinct !DILexicalBlock(scope: !22069, file: !22070, line: 37, column: 5)
!22094 = !DILocation(line: 38, column: 23, scope: !22093)
!22095 = !DILocation(line: 38, column: 12, scope: !22093)
!22096 = !DILocation(line: 38, column: 10, scope: !22093)
!22097 = !DILocation(line: 39, column: 24, scope: !22093)
!22098 = !DILocation(line: 39, column: 23, scope: !22093)
!22099 = !DILocation(line: 39, column: 12, scope: !22093)
!22100 = !DILocation(line: 39, column: 10, scope: !22093)
!22101 = !DILocation(line: 41, column: 11, scope: !22102)
!22102 = distinct !DILexicalBlock(scope: !22093, file: !22070, line: 41, column: 11)
!22103 = !DILocation(line: 41, column: 14, scope: !22102)
!22104 = !DILocation(line: 41, column: 11, scope: !22093)
!22105 = !DILocation(line: 42, column: 9, scope: !22102)
!22106 = !DILocation(line: 44, column: 7, scope: !22093)
!22107 = !DILocation(line: 45, column: 7, scope: !22093)
!22108 = !DILocation(line: 46, column: 5, scope: !22093)
!22109 = !DILocation(line: 47, column: 10, scope: !22069)
!22110 = !DILocation(line: 47, column: 16, scope: !22069)
!22111 = !DILocation(line: 47, column: 13, scope: !22069)
!22112 = distinct !{!22112, !22091, !22113}
!22113 = !DILocation(line: 47, column: 18, scope: !22069)
!22114 = !DILocation(line: 50, column: 12, scope: !22115)
!22115 = distinct !DILexicalBlock(scope: !22069, file: !22070, line: 49, column: 7)
!22116 = !DILocation(line: 50, column: 17, scope: !22115)
!22117 = !DILocation(line: 50, column: 15, scope: !22115)
!22118 = !DILocation(line: 50, column: 5, scope: !22115)
!22119 = !DILocation(line: 56, column: 1, scope: !22069)
!22120 = distinct !DISubprogram(name: "close_stream", scope: !22121, file: !22121, line: 56, type: !22122, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !216)
!22121 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22122 = !DISubroutineType(types: !22123)
!22123 = !{!7, !22124}
!22124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22125, size: 64)
!22125 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !22126)
!22126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !22127)
!22127 = !{!22128, !22129, !22130, !22131, !22132, !22133, !22134, !22135, !22136, !22137, !22138, !22139, !22140, !22141, !22143, !22144, !22145, !22146, !22147, !22148, !22149, !22150, !22151, !22152, !22153, !22154, !22155, !22156, !22157}
!22128 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !22126, file: !4, line: 51, baseType: !7, size: 32)
!22129 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !22126, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!22130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !22126, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!22131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !22126, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!22132 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !22126, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!22133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !22126, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!22134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !22126, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!22135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !22126, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!22136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !22126, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!22137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !22126, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!22138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !22126, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!22139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !22126, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!22140 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !22126, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22141 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !22126, file: !4, line: 70, baseType: !22142, size: 64, offset: 832)
!22142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22126, size: 64)
!22143 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !22126, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!22144 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !22126, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!22145 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !22126, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!22146 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !22126, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!22147 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !22126, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!22148 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !22126, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!22149 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !22126, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!22150 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !22126, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!22151 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !22126, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!22152 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !22126, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!22153 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !22126, file: !4, line: 93, baseType: !22142, size: 64, offset: 1344)
!22154 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !22126, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!22155 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !22126, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!22156 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !22126, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!22157 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !22126, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!22158 = !DILocalVariable(name: "stream", arg: 1, scope: !22120, file: !22121, line: 56, type: !22124)
!22159 = !DILocation(line: 56, column: 21, scope: !22120)
!22160 = !DILocalVariable(name: "some_pending", scope: !22120, file: !22121, line: 58, type: !1882)
!22161 = !DILocation(line: 58, column: 14, scope: !22120)
!22162 = !DILocation(line: 58, column: 42, scope: !22120)
!22163 = !DILocation(line: 58, column: 30, scope: !22120)
!22164 = !DILocation(line: 58, column: 50, scope: !22120)
!22165 = !DILocalVariable(name: "prev_fail", scope: !22120, file: !22121, line: 59, type: !1882)
!22166 = !DILocation(line: 59, column: 14, scope: !22120)
!22167 = !DILocation(line: 59, column: 27, scope: !22120)
!22168 = !DILocation(line: 59, column: 43, scope: !22120)
!22169 = !DILocalVariable(name: "fclose_fail", scope: !22120, file: !22121, line: 60, type: !1882)
!22170 = !DILocation(line: 60, column: 14, scope: !22120)
!22171 = !DILocation(line: 60, column: 37, scope: !22120)
!22172 = !DILocation(line: 60, column: 29, scope: !22120)
!22173 = !DILocation(line: 60, column: 45, scope: !22120)
!22174 = !DILocation(line: 70, column: 7, scope: !22175)
!22175 = distinct !DILexicalBlock(scope: !22120, file: !22121, line: 70, column: 7)
!22176 = !DILocation(line: 70, column: 17, scope: !22175)
!22177 = !DILocation(line: 70, column: 21, scope: !22175)
!22178 = !DILocation(line: 70, column: 33, scope: !22175)
!22179 = !DILocation(line: 70, column: 37, scope: !22175)
!22180 = !DILocation(line: 70, column: 50, scope: !22175)
!22181 = !DILocation(line: 70, column: 53, scope: !22175)
!22182 = !DILocation(line: 70, column: 59, scope: !22175)
!22183 = !DILocation(line: 70, column: 7, scope: !22120)
!22184 = !DILocation(line: 72, column: 13, scope: !22185)
!22185 = distinct !DILexicalBlock(scope: !22186, file: !22121, line: 72, column: 11)
!22186 = distinct !DILexicalBlock(scope: !22175, file: !22121, line: 71, column: 5)
!22187 = !DILocation(line: 72, column: 11, scope: !22186)
!22188 = !DILocation(line: 73, column: 9, scope: !22185)
!22189 = !DILocation(line: 73, column: 15, scope: !22185)
!22190 = !DILocation(line: 74, column: 7, scope: !22186)
!22191 = !DILocation(line: 77, column: 3, scope: !22120)
!22192 = !DILocation(line: 78, column: 1, scope: !22120)
!22193 = distinct !DISubprogram(name: "cycle_check_init", scope: !22194, file: !22194, line: 43, type: !22195, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1883, retainedNodes: !216)
!22194 = !DIFile(filename: "lib/cycle-check.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22195 = !DISubroutineType(types: !22196)
!22196 = !{null, !22197}
!22197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22198, size: 64)
!22198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1771, line: 28, size: 256, elements: !22199)
!22199 = !{!22200, !22205, !22206}
!22200 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !22198, file: !1771, line: 30, baseType: !22201, size: 128)
!22201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !256, line: 7, size: 128, elements: !22202)
!22202 = !{!22203, !22204}
!22203 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !22201, file: !256, line: 9, baseType: !259, size: 64)
!22204 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !22201, file: !256, line: 10, baseType: !262, size: 64, offset: 64)
!22205 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !22198, file: !1771, line: 31, baseType: !486, size: 64, offset: 128)
!22206 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !22198, file: !1771, line: 32, baseType: !7, size: 32, offset: 192)
!22207 = !DILocalVariable(name: "state", arg: 1, scope: !22193, file: !22194, line: 43, type: !22197)
!22208 = !DILocation(line: 43, column: 45, scope: !22193)
!22209 = !DILocation(line: 45, column: 3, scope: !22193)
!22210 = !DILocation(line: 45, column: 10, scope: !22193)
!22211 = !DILocation(line: 45, column: 24, scope: !22193)
!22212 = !DILocation(line: 46, column: 3, scope: !22193)
!22213 = !DILocation(line: 46, column: 10, scope: !22193)
!22214 = !DILocation(line: 46, column: 16, scope: !22193)
!22215 = !DILocation(line: 47, column: 1, scope: !22193)
!22216 = distinct !DISubprogram(name: "cycle_check", scope: !22194, file: !22194, line: 58, type: !22217, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1883, retainedNodes: !216)
!22217 = !DISubroutineType(types: !22218)
!22218 = !{!142, !22197, !22219}
!22219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22220, size: 64)
!22220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22221)
!22221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !339, line: 46, size: 1152, elements: !22222)
!22222 = !{!22223, !22224, !22225, !22226, !22227, !22228, !22229, !22230, !22231, !22232, !22233, !22234, !22239, !22240, !22241}
!22223 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !22221, file: !339, line: 48, baseType: !263, size: 64)
!22224 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !22221, file: !339, line: 53, baseType: !260, size: 64, offset: 64)
!22225 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !22221, file: !339, line: 61, baseType: !336, size: 64, offset: 128)
!22226 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !22221, file: !339, line: 62, baseType: !168, size: 32, offset: 192)
!22227 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !22221, file: !339, line: 64, baseType: !346, size: 32, offset: 224)
!22228 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !22221, file: !339, line: 65, baseType: !348, size: 32, offset: 256)
!22229 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !22221, file: !339, line: 67, baseType: !7, size: 32, offset: 288)
!22230 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !22221, file: !339, line: 69, baseType: !263, size: 64, offset: 320)
!22231 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !22221, file: !339, line: 74, baseType: !29, size: 64, offset: 384)
!22232 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !22221, file: !339, line: 78, baseType: !353, size: 64, offset: 448)
!22233 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !22221, file: !339, line: 80, baseType: !355, size: 64, offset: 512)
!22234 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !22221, file: !339, line: 91, baseType: !22235, size: 128, offset: 576)
!22235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !22236)
!22236 = !{!22237, !22238}
!22237 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !22235, file: !358, line: 11, baseType: !361, size: 64)
!22238 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !22235, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!22239 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !22221, file: !339, line: 92, baseType: !22235, size: 128, offset: 704)
!22240 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !22221, file: !339, line: 93, baseType: !22235, size: 128, offset: 832)
!22241 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !22221, file: !339, line: 106, baseType: !367, size: 192, offset: 960)
!22242 = !DILocalVariable(name: "state", arg: 1, scope: !22216, file: !22194, line: 58, type: !22197)
!22243 = !DILocation(line: 58, column: 40, scope: !22216)
!22244 = !DILocalVariable(name: "sb", arg: 2, scope: !22216, file: !22194, line: 58, type: !22219)
!22245 = !DILocation(line: 58, column: 66, scope: !22216)
!22246 = !DILocation(line: 60, column: 3, scope: !22247)
!22247 = distinct !DILexicalBlock(scope: !22248, file: !22194, line: 60, column: 3)
!22248 = distinct !DILexicalBlock(scope: !22216, file: !22194, line: 60, column: 3)
!22249 = !DILocation(line: 60, column: 3, scope: !22248)
!22250 = !DILocation(line: 65, column: 7, scope: !22251)
!22251 = distinct !DILexicalBlock(scope: !22216, file: !22194, line: 65, column: 7)
!22252 = !DILocation(line: 65, column: 14, scope: !22251)
!22253 = !DILocation(line: 65, column: 28, scope: !22251)
!22254 = !DILocation(line: 65, column: 31, scope: !22251)
!22255 = !DILocation(line: 65, column: 7, scope: !22216)
!22256 = !DILocation(line: 66, column: 5, scope: !22251)
!22257 = !DILocation(line: 70, column: 35, scope: !22258)
!22258 = distinct !DILexicalBlock(scope: !22216, file: !22194, line: 70, column: 7)
!22259 = !DILocation(line: 70, column: 42, scope: !22258)
!22260 = !DILocation(line: 70, column: 32, scope: !22258)
!22261 = !DILocation(line: 70, column: 7, scope: !22258)
!22262 = !DILocation(line: 70, column: 7, scope: !22216)
!22263 = !DILocation(line: 77, column: 11, scope: !22264)
!22264 = distinct !DILexicalBlock(scope: !22265, file: !22194, line: 77, column: 11)
!22265 = distinct !DILexicalBlock(scope: !22258, file: !22194, line: 71, column: 5)
!22266 = !DILocation(line: 77, column: 18, scope: !22264)
!22267 = !DILocation(line: 77, column: 32, scope: !22264)
!22268 = !DILocation(line: 77, column: 11, scope: !22265)
!22269 = !DILocation(line: 78, column: 9, scope: !22264)
!22270 = !DILocation(line: 80, column: 31, scope: !22265)
!22271 = !DILocation(line: 80, column: 35, scope: !22265)
!22272 = !DILocation(line: 80, column: 7, scope: !22265)
!22273 = !DILocation(line: 80, column: 14, scope: !22265)
!22274 = !DILocation(line: 80, column: 22, scope: !22265)
!22275 = !DILocation(line: 80, column: 29, scope: !22265)
!22276 = !DILocation(line: 81, column: 31, scope: !22265)
!22277 = !DILocation(line: 81, column: 35, scope: !22265)
!22278 = !DILocation(line: 81, column: 7, scope: !22265)
!22279 = !DILocation(line: 81, column: 14, scope: !22265)
!22280 = !DILocation(line: 81, column: 22, scope: !22265)
!22281 = !DILocation(line: 81, column: 29, scope: !22265)
!22282 = !DILocation(line: 82, column: 5, scope: !22265)
!22283 = !DILocation(line: 84, column: 3, scope: !22216)
!22284 = !DILocation(line: 85, column: 1, scope: !22216)
!22285 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !22194, file: !22194, line: 37, type: !22286, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1883, retainedNodes: !216)
!22286 = !DISubroutineType(types: !22287)
!22287 = !{!142, !486}
!22288 = !DILocalVariable(name: "i", arg: 1, scope: !22285, file: !22194, line: 37, type: !486)
!22289 = !DILocation(line: 37, column: 36, scope: !22285)
!22290 = !DILocation(line: 39, column: 11, scope: !22285)
!22291 = !DILocation(line: 39, column: 16, scope: !22285)
!22292 = !DILocation(line: 39, column: 18, scope: !22285)
!22293 = !DILocation(line: 39, column: 13, scope: !22285)
!22294 = !DILocation(line: 39, column: 24, scope: !22285)
!22295 = !DILocation(line: 39, column: 3, scope: !22285)
!22296 = distinct !DISubprogram(name: "opendir_safer", scope: !22297, file: !22297, line: 31, type: !22298, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1889, retainedNodes: !216)
!22297 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22298 = !DISubroutineType(types: !22299)
!22299 = !{!541, !116}
!22300 = !DILocalVariable(name: "name", arg: 1, scope: !22296, file: !22297, line: 31, type: !116)
!22301 = !DILocation(line: 31, column: 28, scope: !22296)
!22302 = !DILocalVariable(name: "dp", scope: !22296, file: !22297, line: 33, type: !541)
!22303 = !DILocation(line: 33, column: 8, scope: !22296)
!22304 = !DILocation(line: 33, column: 22, scope: !22296)
!22305 = !DILocation(line: 33, column: 13, scope: !22296)
!22306 = !DILocation(line: 35, column: 7, scope: !22307)
!22307 = distinct !DILexicalBlock(scope: !22296, file: !22297, line: 35, column: 7)
!22308 = !DILocation(line: 35, column: 7, scope: !22296)
!22309 = !DILocalVariable(name: "fd", scope: !22310, file: !22297, line: 37, type: !7)
!22310 = distinct !DILexicalBlock(scope: !22307, file: !22297, line: 36, column: 5)
!22311 = !DILocation(line: 37, column: 11, scope: !22310)
!22312 = !DILocation(line: 37, column: 23, scope: !22310)
!22313 = !DILocation(line: 37, column: 16, scope: !22310)
!22314 = !DILocation(line: 39, column: 16, scope: !22315)
!22315 = distinct !DILexicalBlock(scope: !22310, file: !22297, line: 39, column: 11)
!22316 = !DILocation(line: 39, column: 13, scope: !22315)
!22317 = !DILocation(line: 39, column: 19, scope: !22315)
!22318 = !DILocation(line: 39, column: 22, scope: !22315)
!22319 = !DILocation(line: 39, column: 25, scope: !22315)
!22320 = !DILocation(line: 39, column: 11, scope: !22310)
!22321 = !DILocalVariable(name: "newdp", scope: !22322, file: !22297, line: 49, type: !541)
!22322 = distinct !DILexicalBlock(scope: !22315, file: !22297, line: 40, column: 9)
!22323 = !DILocation(line: 49, column: 16, scope: !22322)
!22324 = !DILocalVariable(name: "e", scope: !22322, file: !22297, line: 50, type: !7)
!22325 = !DILocation(line: 50, column: 15, scope: !22322)
!22326 = !DILocalVariable(name: "f", scope: !22322, file: !22297, line: 52, type: !7)
!22327 = !DILocation(line: 52, column: 15, scope: !22322)
!22328 = !DILocation(line: 52, column: 26, scope: !22322)
!22329 = !DILocation(line: 52, column: 19, scope: !22322)
!22330 = !DILocation(line: 53, column: 15, scope: !22331)
!22331 = distinct !DILexicalBlock(scope: !22322, file: !22297, line: 53, column: 15)
!22332 = !DILocation(line: 53, column: 17, scope: !22331)
!22333 = !DILocation(line: 53, column: 15, scope: !22322)
!22334 = !DILocation(line: 55, column: 19, scope: !22335)
!22335 = distinct !DILexicalBlock(scope: !22331, file: !22297, line: 54, column: 13)
!22336 = !DILocation(line: 55, column: 17, scope: !22335)
!22337 = !DILocation(line: 56, column: 21, scope: !22335)
!22338 = !DILocation(line: 57, column: 13, scope: !22335)
!22339 = !DILocation(line: 60, column: 34, scope: !22340)
!22340 = distinct !DILexicalBlock(scope: !22331, file: !22297, line: 59, column: 13)
!22341 = !DILocation(line: 60, column: 23, scope: !22340)
!22342 = !DILocation(line: 60, column: 21, scope: !22340)
!22343 = !DILocation(line: 61, column: 19, scope: !22340)
!22344 = !DILocation(line: 61, column: 17, scope: !22340)
!22345 = !DILocation(line: 62, column: 21, scope: !22346)
!22346 = distinct !DILexicalBlock(scope: !22340, file: !22297, line: 62, column: 19)
!22347 = !DILocation(line: 62, column: 19, scope: !22340)
!22348 = !DILocation(line: 63, column: 24, scope: !22346)
!22349 = !DILocation(line: 63, column: 17, scope: !22346)
!22350 = !DILocation(line: 69, column: 21, scope: !22322)
!22351 = !DILocation(line: 69, column: 11, scope: !22322)
!22352 = !DILocation(line: 70, column: 19, scope: !22322)
!22353 = !DILocation(line: 70, column: 11, scope: !22322)
!22354 = !DILocation(line: 70, column: 17, scope: !22322)
!22355 = !DILocation(line: 71, column: 16, scope: !22322)
!22356 = !DILocation(line: 71, column: 14, scope: !22322)
!22357 = !DILocation(line: 72, column: 9, scope: !22322)
!22358 = !DILocation(line: 73, column: 5, scope: !22310)
!22359 = !DILocation(line: 75, column: 10, scope: !22296)
!22360 = !DILocation(line: 75, column: 3, scope: !22296)
!22361 = distinct !DISubprogram(name: "gettime", scope: !22362, file: !22362, line: 29, type: !22363, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1892, retainedNodes: !216)
!22362 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22363 = !DISubroutineType(types: !22364)
!22364 = !{null, !22365}
!22365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22366, size: 64)
!22366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !358, line: 9, size: 128, elements: !22367)
!22367 = !{!22368, !22369}
!22368 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !22366, file: !358, line: 11, baseType: !361, size: 64)
!22369 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !22366, file: !358, line: 12, baseType: !363, size: 64, offset: 64)
!22370 = !DILocalVariable(name: "ts", arg: 1, scope: !22361, file: !22362, line: 29, type: !22365)
!22371 = !DILocation(line: 29, column: 27, scope: !22361)
!22372 = !DILocation(line: 32, column: 34, scope: !22361)
!22373 = !DILocation(line: 32, column: 3, scope: !22361)
!22374 = !DILocation(line: 39, column: 1, scope: !22361)
!22375 = distinct !DISubprogram(name: "current_timespec", scope: !22362, file: !22362, line: 44, type: !22376, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1892, retainedNodes: !216)
!22376 = !DISubroutineType(types: !22377)
!22377 = !{!22366}
!22378 = !DILocalVariable(name: "ts", scope: !22375, file: !22362, line: 46, type: !22366)
!22379 = !DILocation(line: 46, column: 19, scope: !22375)
!22380 = !DILocation(line: 47, column: 3, scope: !22375)
!22381 = !DILocation(line: 48, column: 3, scope: !22375)
!22382 = distinct !DISubprogram(name: "hard_locale", scope: !22383, file: !22383, line: 38, type: !3614, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1894, retainedNodes: !216)
!22383 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22384 = !DILocalVariable(name: "category", arg: 1, scope: !22382, file: !22383, line: 38, type: !7)
!22385 = !DILocation(line: 38, column: 18, scope: !22382)
!22386 = !DILocalVariable(name: "hard", scope: !22382, file: !22383, line: 40, type: !142)
!22387 = !DILocation(line: 40, column: 8, scope: !22382)
!22388 = !DILocalVariable(name: "p", scope: !22382, file: !22383, line: 41, type: !116)
!22389 = !DILocation(line: 41, column: 15, scope: !22382)
!22390 = !DILocation(line: 41, column: 30, scope: !22382)
!22391 = !DILocation(line: 41, column: 19, scope: !22382)
!22392 = !DILocation(line: 43, column: 7, scope: !22393)
!22393 = distinct !DILexicalBlock(scope: !22382, file: !22383, line: 43, column: 7)
!22394 = !DILocation(line: 43, column: 7, scope: !22382)
!22395 = !DILocation(line: 47, column: 23, scope: !22396)
!22396 = distinct !DILexicalBlock(scope: !22397, file: !22383, line: 47, column: 15)
!22397 = distinct !DILexicalBlock(scope: !22398, file: !22383, line: 46, column: 9)
!22398 = distinct !DILexicalBlock(scope: !22399, file: !22383, line: 45, column: 11)
!22399 = distinct !DILexicalBlock(scope: !22393, file: !22383, line: 44, column: 5)
!22400 = !DILocation(line: 47, column: 15, scope: !22396)
!22401 = !DILocation(line: 47, column: 31, scope: !22396)
!22402 = !DILocation(line: 47, column: 36, scope: !22396)
!22403 = !DILocation(line: 47, column: 47, scope: !22396)
!22404 = !DILocation(line: 47, column: 39, scope: !22396)
!22405 = !DILocation(line: 47, column: 59, scope: !22396)
!22406 = !DILocation(line: 47, column: 15, scope: !22397)
!22407 = !DILocation(line: 48, column: 18, scope: !22396)
!22408 = !DILocation(line: 48, column: 13, scope: !22396)
!22409 = !DILocation(line: 69, column: 5, scope: !22399)
!22410 = !DILocation(line: 71, column: 10, scope: !22382)
!22411 = !DILocation(line: 71, column: 3, scope: !22382)
!22412 = distinct !DISubprogram(name: "hash_pjw", scope: !22413, file: !22413, line: 31, type: !707, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1897, retainedNodes: !216)
!22413 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22414 = !DILocalVariable(name: "x", arg: 1, scope: !22412, file: !22413, line: 31, type: !709)
!22415 = !DILocation(line: 31, column: 23, scope: !22412)
!22416 = !DILocalVariable(name: "tablesize", arg: 2, scope: !22412, file: !22413, line: 31, type: !55)
!22417 = !DILocation(line: 31, column: 33, scope: !22412)
!22418 = !DILocalVariable(name: "s", scope: !22412, file: !22413, line: 33, type: !116)
!22419 = !DILocation(line: 33, column: 15, scope: !22412)
!22420 = !DILocalVariable(name: "h", scope: !22412, file: !22413, line: 34, type: !55)
!22421 = !DILocation(line: 34, column: 10, scope: !22412)
!22422 = !DILocation(line: 36, column: 12, scope: !22423)
!22423 = distinct !DILexicalBlock(scope: !22412, file: !22413, line: 36, column: 3)
!22424 = !DILocation(line: 36, column: 10, scope: !22423)
!22425 = !DILocation(line: 36, column: 8, scope: !22423)
!22426 = !DILocation(line: 36, column: 16, scope: !22427)
!22427 = distinct !DILexicalBlock(scope: !22423, file: !22413, line: 36, column: 3)
!22428 = !DILocation(line: 36, column: 15, scope: !22427)
!22429 = !DILocation(line: 36, column: 3, scope: !22423)
!22430 = !DILocation(line: 37, column: 10, scope: !22427)
!22431 = !DILocation(line: 37, column: 9, scope: !22427)
!22432 = !DILocation(line: 37, column: 16, scope: !22427)
!22433 = !DILocation(line: 37, column: 18, scope: !22427)
!22434 = !DILocation(line: 37, column: 27, scope: !22427)
!22435 = !DILocation(line: 37, column: 29, scope: !22427)
!22436 = !DILocation(line: 37, column: 24, scope: !22427)
!22437 = !DILocation(line: 37, column: 12, scope: !22427)
!22438 = !DILocation(line: 37, column: 7, scope: !22427)
!22439 = !DILocation(line: 37, column: 5, scope: !22427)
!22440 = !DILocation(line: 36, column: 20, scope: !22427)
!22441 = !DILocation(line: 36, column: 3, scope: !22427)
!22442 = distinct !{!22442, !22429, !22443}
!22443 = !DILocation(line: 37, column: 48, scope: !22423)
!22444 = !DILocation(line: 39, column: 10, scope: !22412)
!22445 = !DILocation(line: 39, column: 14, scope: !22412)
!22446 = !DILocation(line: 39, column: 12, scope: !22412)
!22447 = !DILocation(line: 39, column: 3, scope: !22412)
!22448 = distinct !DISubprogram(name: "i_ring_init", scope: !22449, file: !22449, line: 25, type: !22450, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !216)
!22449 = !DIFile(filename: "lib/i-ring.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22450 = !DISubroutineType(types: !22451)
!22451 = !{null, !22452, !7}
!22452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!22453 = !DILocalVariable(name: "ir", arg: 1, scope: !22448, file: !22449, line: 25, type: !22452)
!22454 = !DILocation(line: 25, column: 22, scope: !22448)
!22455 = !DILocalVariable(name: "default_val", arg: 2, scope: !22448, file: !22449, line: 25, type: !7)
!22456 = !DILocation(line: 25, column: 30, scope: !22448)
!22457 = !DILocalVariable(name: "i", scope: !22448, file: !22449, line: 27, type: !7)
!22458 = !DILocation(line: 27, column: 7, scope: !22448)
!22459 = !DILocation(line: 28, column: 3, scope: !22448)
!22460 = !DILocation(line: 28, column: 7, scope: !22448)
!22461 = !DILocation(line: 28, column: 16, scope: !22448)
!22462 = !DILocation(line: 29, column: 3, scope: !22448)
!22463 = !DILocation(line: 29, column: 7, scope: !22448)
!22464 = !DILocation(line: 29, column: 16, scope: !22448)
!22465 = !DILocation(line: 30, column: 3, scope: !22448)
!22466 = !DILocation(line: 30, column: 7, scope: !22448)
!22467 = !DILocation(line: 30, column: 15, scope: !22448)
!22468 = !DILocation(line: 31, column: 10, scope: !22469)
!22469 = distinct !DILexicalBlock(scope: !22448, file: !22449, line: 31, column: 3)
!22470 = !DILocation(line: 31, column: 8, scope: !22469)
!22471 = !DILocation(line: 31, column: 15, scope: !22472)
!22472 = distinct !DILexicalBlock(scope: !22469, file: !22449, line: 31, column: 3)
!22473 = !DILocation(line: 31, column: 17, scope: !22472)
!22474 = !DILocation(line: 31, column: 3, scope: !22469)
!22475 = !DILocation(line: 32, column: 22, scope: !22472)
!22476 = !DILocation(line: 32, column: 5, scope: !22472)
!22477 = !DILocation(line: 32, column: 9, scope: !22472)
!22478 = !DILocation(line: 32, column: 17, scope: !22472)
!22479 = !DILocation(line: 32, column: 20, scope: !22472)
!22480 = !DILocation(line: 31, column: 33, scope: !22472)
!22481 = !DILocation(line: 31, column: 3, scope: !22472)
!22482 = distinct !{!22482, !22474, !22483}
!22483 = !DILocation(line: 32, column: 22, scope: !22469)
!22484 = !DILocation(line: 33, column: 24, scope: !22448)
!22485 = !DILocation(line: 33, column: 3, scope: !22448)
!22486 = !DILocation(line: 33, column: 7, scope: !22448)
!22487 = !DILocation(line: 33, column: 22, scope: !22448)
!22488 = !DILocation(line: 34, column: 1, scope: !22448)
!22489 = distinct !DISubprogram(name: "i_ring_empty", scope: !22449, file: !22449, line: 37, type: !22490, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !216)
!22490 = !DISubroutineType(types: !22491)
!22491 = !{!142, !22492}
!22492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!22493 = !DILocalVariable(name: "ir", arg: 1, scope: !22489, file: !22449, line: 37, type: !22492)
!22494 = !DILocation(line: 37, column: 29, scope: !22489)
!22495 = !DILocation(line: 39, column: 10, scope: !22489)
!22496 = !DILocation(line: 39, column: 14, scope: !22489)
!22497 = !DILocation(line: 39, column: 3, scope: !22489)
!22498 = distinct !DISubprogram(name: "i_ring_push", scope: !22449, file: !22449, line: 43, type: !22499, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !216)
!22499 = !DISubroutineType(types: !22500)
!22500 = !{!7, !22452, !7}
!22501 = !DILocalVariable(name: "ir", arg: 1, scope: !22498, file: !22449, line: 43, type: !22452)
!22502 = !DILocation(line: 43, column: 22, scope: !22498)
!22503 = !DILocalVariable(name: "val", arg: 2, scope: !22498, file: !22449, line: 43, type: !7)
!22504 = !DILocation(line: 43, column: 30, scope: !22498)
!22505 = !DILocalVariable(name: "dest_idx", scope: !22498, file: !22449, line: 45, type: !70)
!22506 = !DILocation(line: 45, column: 16, scope: !22498)
!22507 = !DILocation(line: 45, column: 28, scope: !22498)
!22508 = !DILocation(line: 45, column: 32, scope: !22498)
!22509 = !DILocation(line: 45, column: 44, scope: !22498)
!22510 = !DILocation(line: 45, column: 48, scope: !22498)
!22511 = !DILocation(line: 45, column: 43, scope: !22498)
!22512 = !DILocation(line: 45, column: 41, scope: !22498)
!22513 = !DILocation(line: 45, column: 58, scope: !22498)
!22514 = !DILocalVariable(name: "old_val", scope: !22498, file: !22449, line: 46, type: !7)
!22515 = !DILocation(line: 46, column: 7, scope: !22498)
!22516 = !DILocation(line: 46, column: 17, scope: !22498)
!22517 = !DILocation(line: 46, column: 21, scope: !22498)
!22518 = !DILocation(line: 46, column: 29, scope: !22498)
!22519 = !DILocation(line: 47, column: 27, scope: !22498)
!22520 = !DILocation(line: 47, column: 3, scope: !22498)
!22521 = !DILocation(line: 47, column: 7, scope: !22498)
!22522 = !DILocation(line: 47, column: 15, scope: !22498)
!22523 = !DILocation(line: 47, column: 25, scope: !22498)
!22524 = !DILocation(line: 48, column: 18, scope: !22498)
!22525 = !DILocation(line: 48, column: 3, scope: !22498)
!22526 = !DILocation(line: 48, column: 7, scope: !22498)
!22527 = !DILocation(line: 48, column: 16, scope: !22498)
!22528 = !DILocation(line: 49, column: 7, scope: !22529)
!22529 = distinct !DILexicalBlock(scope: !22498, file: !22449, line: 49, column: 7)
!22530 = !DILocation(line: 49, column: 19, scope: !22529)
!22531 = !DILocation(line: 49, column: 23, scope: !22529)
!22532 = !DILocation(line: 49, column: 16, scope: !22529)
!22533 = !DILocation(line: 49, column: 7, scope: !22498)
!22534 = !DILocation(line: 50, column: 20, scope: !22529)
!22535 = !DILocation(line: 50, column: 24, scope: !22529)
!22536 = !DILocation(line: 50, column: 35, scope: !22529)
!22537 = !DILocation(line: 50, column: 39, scope: !22529)
!22538 = !DILocation(line: 50, column: 34, scope: !22529)
!22539 = !DILocation(line: 50, column: 32, scope: !22529)
!22540 = !DILocation(line: 50, column: 49, scope: !22529)
!22541 = !DILocation(line: 50, column: 5, scope: !22529)
!22542 = !DILocation(line: 50, column: 9, scope: !22529)
!22543 = !DILocation(line: 50, column: 17, scope: !22529)
!22544 = !DILocation(line: 51, column: 3, scope: !22498)
!22545 = !DILocation(line: 51, column: 7, scope: !22498)
!22546 = !DILocation(line: 51, column: 16, scope: !22498)
!22547 = !DILocation(line: 52, column: 10, scope: !22498)
!22548 = !DILocation(line: 52, column: 3, scope: !22498)
!22549 = distinct !DISubprogram(name: "i_ring_pop", scope: !22449, file: !22449, line: 56, type: !22550, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !216)
!22550 = !DISubroutineType(types: !22551)
!22551 = !{!7, !22452}
!22552 = !DILocalVariable(name: "ir", arg: 1, scope: !22549, file: !22449, line: 56, type: !22452)
!22553 = !DILocation(line: 56, column: 21, scope: !22549)
!22554 = !DILocalVariable(name: "top_val", scope: !22549, file: !22449, line: 58, type: !7)
!22555 = !DILocation(line: 58, column: 7, scope: !22549)
!22556 = !DILocation(line: 59, column: 21, scope: !22557)
!22557 = distinct !DILexicalBlock(scope: !22549, file: !22449, line: 59, column: 7)
!22558 = !DILocation(line: 59, column: 7, scope: !22557)
!22559 = !DILocation(line: 59, column: 7, scope: !22549)
!22560 = !DILocation(line: 60, column: 5, scope: !22557)
!22561 = !DILocation(line: 61, column: 13, scope: !22549)
!22562 = !DILocation(line: 61, column: 17, scope: !22549)
!22563 = !DILocation(line: 61, column: 25, scope: !22549)
!22564 = !DILocation(line: 61, column: 29, scope: !22549)
!22565 = !DILocation(line: 61, column: 11, scope: !22549)
!22566 = !DILocation(line: 62, column: 31, scope: !22549)
!22567 = !DILocation(line: 62, column: 35, scope: !22549)
!22568 = !DILocation(line: 62, column: 3, scope: !22549)
!22569 = !DILocation(line: 62, column: 7, scope: !22549)
!22570 = !DILocation(line: 62, column: 15, scope: !22549)
!22571 = !DILocation(line: 62, column: 19, scope: !22549)
!22572 = !DILocation(line: 62, column: 29, scope: !22549)
!22573 = !DILocation(line: 63, column: 7, scope: !22574)
!22574 = distinct !DILexicalBlock(scope: !22549, file: !22449, line: 63, column: 7)
!22575 = !DILocation(line: 63, column: 11, scope: !22574)
!22576 = !DILocation(line: 63, column: 23, scope: !22574)
!22577 = !DILocation(line: 63, column: 27, scope: !22574)
!22578 = !DILocation(line: 63, column: 20, scope: !22574)
!22579 = !DILocation(line: 63, column: 7, scope: !22549)
!22580 = !DILocation(line: 64, column: 5, scope: !22574)
!22581 = !DILocation(line: 64, column: 9, scope: !22574)
!22582 = !DILocation(line: 64, column: 18, scope: !22574)
!22583 = !DILocation(line: 66, column: 22, scope: !22574)
!22584 = !DILocation(line: 66, column: 26, scope: !22574)
!22585 = !DILocation(line: 66, column: 35, scope: !22574)
!22586 = !DILocation(line: 66, column: 49, scope: !22574)
!22587 = !DILocation(line: 66, column: 54, scope: !22574)
!22588 = !DILocation(line: 66, column: 5, scope: !22574)
!22589 = !DILocation(line: 66, column: 9, scope: !22574)
!22590 = !DILocation(line: 66, column: 18, scope: !22574)
!22591 = !DILocation(line: 67, column: 10, scope: !22549)
!22592 = !DILocation(line: 67, column: 3, scope: !22549)
!22593 = distinct !DISubprogram(name: "locale_charset", scope: !22594, file: !22594, line: 687, type: !22595, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1912, retainedNodes: !216)
!22594 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22595 = !DISubroutineType(types: !525)
!22596 = !DILocalVariable(name: "codeset", scope: !22593, file: !22594, line: 689, type: !116)
!22597 = !DILocation(line: 689, column: 15, scope: !22593)
!22598 = !DILocation(line: 696, column: 13, scope: !22593)
!22599 = !DILocation(line: 696, column: 11, scope: !22593)
!22600 = !DILocation(line: 754, column: 7, scope: !22601)
!22601 = distinct !DILexicalBlock(scope: !22593, file: !22594, line: 754, column: 7)
!22602 = !DILocation(line: 754, column: 15, scope: !22601)
!22603 = !DILocation(line: 754, column: 7, scope: !22593)
!22604 = !DILocation(line: 756, column: 13, scope: !22601)
!22605 = !DILocation(line: 756, column: 5, scope: !22601)
!22606 = !DILocation(line: 907, column: 13, scope: !22607)
!22607 = distinct !DILexicalBlock(scope: !22608, file: !22594, line: 907, column: 13)
!22608 = distinct !DILexicalBlock(scope: !22609, file: !22594, line: 897, column: 7)
!22609 = distinct !DILexicalBlock(scope: !22593, file: !22594, line: 856, column: 3)
!22610 = !DILocation(line: 907, column: 24, scope: !22607)
!22611 = !DILocation(line: 907, column: 13, scope: !22608)
!22612 = !DILocation(line: 908, column: 19, scope: !22607)
!22613 = !DILocation(line: 908, column: 11, scope: !22607)
!22614 = !DILocation(line: 995, column: 10, scope: !22593)
!22615 = !DILocation(line: 995, column: 3, scope: !22593)
!22616 = distinct !DISubprogram(name: "openat_safer", scope: !22617, file: !22617, line: 29, type: !22618, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1915, retainedNodes: !216)
!22617 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!22618 = !DISubroutineType(types: !22619)
!22619 = !{!7, !7, !116, !7, null}
!22620 = !DILocalVariable(name: "fd", arg: 1, scope: !22616, file: !22617, line: 29, type: !7)
!22621 = !DILocation(line: 29, column: 19, scope: !22616)
!22622 = !DILocalVariable(name: "file", arg: 2, scope: !22616, file: !22617, line: 29, type: !116)
!22623 = !DILocation(line: 29, column: 35, scope: !22616)
!22624 = !DILocalVariable(name: "flags", arg: 3, scope: !22616, file: !22617, line: 29, type: !7)
!22625 = !DILocation(line: 29, column: 45, scope: !22616)
!22626 = !DILocalVariable(name: "mode", scope: !22616, file: !22617, line: 31, type: !239)
!22627 = !DILocation(line: 31, column: 10, scope: !22616)
!22628 = !DILocation(line: 33, column: 7, scope: !22629)
!22629 = distinct !DILexicalBlock(scope: !22616, file: !22617, line: 33, column: 7)
!22630 = !DILocation(line: 33, column: 13, scope: !22629)
!22631 = !DILocation(line: 33, column: 7, scope: !22616)
!22632 = !DILocalVariable(name: "ap", scope: !22633, file: !22617, line: 35, type: !1918)
!22633 = distinct !DILexicalBlock(scope: !22629, file: !22617, line: 34, column: 5)
!22634 = !DILocation(line: 35, column: 15, scope: !22633)
!22635 = !DILocation(line: 36, column: 7, scope: !22633)
!22636 = !DILocation(line: 40, column: 14, scope: !22633)
!22637 = !DILocation(line: 40, column: 12, scope: !22633)
!22638 = !DILocation(line: 42, column: 7, scope: !22633)
!22639 = !DILocation(line: 43, column: 5, scope: !22633)
!22640 = !DILocation(line: 45, column: 28, scope: !22616)
!22641 = !DILocation(line: 45, column: 32, scope: !22616)
!22642 = !DILocation(line: 45, column: 38, scope: !22616)
!22643 = !DILocation(line: 45, column: 45, scope: !22616)
!22644 = !DILocation(line: 45, column: 20, scope: !22616)
!22645 = !DILocation(line: 45, column: 10, scope: !22616)
!22646 = !DILocation(line: 45, column: 3, scope: !22616)
!22647 = distinct !DISubprogram(name: "randint_new", scope: !1932, file: !1932, line: 71, type: !22648, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1927, retainedNodes: !216)
!22648 = !DISubroutineType(types: !22649)
!22649 = !{!1930, !1935}
!22650 = !DILocalVariable(name: "source", arg: 1, scope: !22647, file: !1932, line: 71, type: !1935)
!22651 = !DILocation(line: 71, column: 38, scope: !22647)
!22652 = !DILocalVariable(name: "s", scope: !22647, file: !1932, line: 73, type: !1930)
!22653 = !DILocation(line: 73, column: 26, scope: !22647)
!22654 = !DILocation(line: 73, column: 30, scope: !22647)
!22655 = !DILocation(line: 74, column: 15, scope: !22647)
!22656 = !DILocation(line: 74, column: 3, scope: !22647)
!22657 = !DILocation(line: 74, column: 6, scope: !22647)
!22658 = !DILocation(line: 74, column: 13, scope: !22647)
!22659 = !DILocation(line: 75, column: 16, scope: !22647)
!22660 = !DILocation(line: 75, column: 19, scope: !22647)
!22661 = !DILocation(line: 75, column: 27, scope: !22647)
!22662 = !DILocation(line: 75, column: 3, scope: !22647)
!22663 = !DILocation(line: 75, column: 6, scope: !22647)
!22664 = !DILocation(line: 75, column: 14, scope: !22647)
!22665 = !DILocation(line: 76, column: 10, scope: !22647)
!22666 = !DILocation(line: 76, column: 3, scope: !22647)
!22667 = distinct !DISubprogram(name: "randint_all_new", scope: !1932, file: !1932, line: 84, type: !22668, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1927, retainedNodes: !216)
!22668 = !DISubroutineType(types: !22669)
!22669 = !{!1930, !116, !55}
!22670 = !DILocalVariable(name: "name", arg: 1, scope: !22667, file: !1932, line: 84, type: !116)
!22671 = !DILocation(line: 84, column: 30, scope: !22667)
!22672 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22667, file: !1932, line: 84, type: !55)
!22673 = !DILocation(line: 84, column: 43, scope: !22667)
!22674 = !DILocalVariable(name: "source", scope: !22667, file: !1932, line: 86, type: !1935)
!22675 = !DILocation(line: 86, column: 27, scope: !22667)
!22676 = !DILocation(line: 86, column: 50, scope: !22667)
!22677 = !DILocation(line: 86, column: 56, scope: !22667)
!22678 = !DILocation(line: 86, column: 36, scope: !22667)
!22679 = !DILocation(line: 87, column: 11, scope: !22667)
!22680 = !DILocation(line: 87, column: 33, scope: !22667)
!22681 = !DILocation(line: 87, column: 20, scope: !22667)
!22682 = !DILocation(line: 87, column: 3, scope: !22667)
!22683 = distinct !DISubprogram(name: "randint_get_source", scope: !1932, file: !1932, line: 93, type: !22684, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1927, retainedNodes: !216)
!22684 = !DISubroutineType(types: !22685)
!22685 = !{!1935, !22686}
!22686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22687, size: 64)
!22687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!22688 = !DILocalVariable(name: "s", arg: 1, scope: !22683, file: !1932, line: 93, type: !22686)
!22689 = !DILocation(line: 93, column: 50, scope: !22683)
!22690 = !DILocation(line: 95, column: 10, scope: !22683)
!22691 = !DILocation(line: 95, column: 13, scope: !22683)
!22692 = !DILocation(line: 95, column: 3, scope: !22683)
!22693 = distinct !DISubprogram(name: "randint_genmax", scope: !1932, file: !1932, line: 114, type: !22694, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1927, retainedNodes: !216)
!22694 = !DISubroutineType(types: !22695)
!22695 = !{!1939, !1930, !1939}
!22696 = !DILocalVariable(name: "s", arg: 1, scope: !22693, file: !1932, line: 114, type: !1930)
!22697 = !DILocation(line: 114, column: 40, scope: !22693)
!22698 = !DILocalVariable(name: "genmax", arg: 2, scope: !22693, file: !1932, line: 114, type: !1939)
!22699 = !DILocation(line: 114, column: 51, scope: !22693)
!22700 = !DILocalVariable(name: "source", scope: !22693, file: !1932, line: 116, type: !1935)
!22701 = !DILocation(line: 116, column: 27, scope: !22693)
!22702 = !DILocation(line: 116, column: 36, scope: !22693)
!22703 = !DILocation(line: 116, column: 39, scope: !22693)
!22704 = !DILocalVariable(name: "randnum", scope: !22693, file: !1932, line: 117, type: !1939)
!22705 = !DILocation(line: 117, column: 11, scope: !22693)
!22706 = !DILocation(line: 117, column: 21, scope: !22693)
!22707 = !DILocation(line: 117, column: 24, scope: !22693)
!22708 = !DILocalVariable(name: "randmax", scope: !22693, file: !1932, line: 118, type: !1939)
!22709 = !DILocation(line: 118, column: 11, scope: !22693)
!22710 = !DILocation(line: 118, column: 21, scope: !22693)
!22711 = !DILocation(line: 118, column: 24, scope: !22693)
!22712 = !DILocalVariable(name: "choices", scope: !22693, file: !1932, line: 119, type: !1939)
!22713 = !DILocation(line: 119, column: 11, scope: !22693)
!22714 = !DILocation(line: 119, column: 21, scope: !22693)
!22715 = !DILocation(line: 119, column: 28, scope: !22693)
!22716 = !DILocation(line: 121, column: 3, scope: !22693)
!22717 = !DILocation(line: 123, column: 11, scope: !22718)
!22718 = distinct !DILexicalBlock(scope: !22719, file: !1932, line: 123, column: 11)
!22719 = distinct !DILexicalBlock(scope: !22693, file: !1932, line: 122, column: 5)
!22720 = !DILocation(line: 123, column: 21, scope: !22718)
!22721 = !DILocation(line: 123, column: 19, scope: !22718)
!22722 = !DILocation(line: 123, column: 11, scope: !22719)
!22723 = !DILocalVariable(name: "i", scope: !22724, file: !1932, line: 128, type: !55)
!22724 = distinct !DILexicalBlock(scope: !22718, file: !1932, line: 124, column: 9)
!22725 = !DILocation(line: 128, column: 18, scope: !22724)
!22726 = !DILocalVariable(name: "rmax", scope: !22724, file: !1932, line: 129, type: !1939)
!22727 = !DILocation(line: 129, column: 19, scope: !22724)
!22728 = !DILocation(line: 129, column: 26, scope: !22724)
!22729 = !DILocalVariable(name: "buf", scope: !22724, file: !1932, line: 130, type: !1941)
!22730 = !DILocation(line: 130, column: 25, scope: !22724)
!22731 = !DILocation(line: 132, column: 11, scope: !22724)
!22732 = !DILocation(line: 134, column: 34, scope: !22733)
!22733 = distinct !DILexicalBlock(scope: !22724, file: !1932, line: 133, column: 13)
!22734 = !DILocation(line: 134, column: 22, scope: !22733)
!22735 = !DILocation(line: 134, column: 40, scope: !22733)
!22736 = !DILocation(line: 134, column: 20, scope: !22733)
!22737 = !DILocation(line: 135, column: 16, scope: !22733)
!22738 = !DILocation(line: 136, column: 13, scope: !22733)
!22739 = !DILocation(line: 137, column: 18, scope: !22724)
!22740 = !DILocation(line: 137, column: 25, scope: !22724)
!22741 = !DILocation(line: 137, column: 23, scope: !22724)
!22742 = distinct !{!22742, !22731, !22743}
!22743 = !DILocation(line: 137, column: 31, scope: !22724)
!22744 = !DILocation(line: 139, column: 21, scope: !22724)
!22745 = !DILocation(line: 139, column: 29, scope: !22724)
!22746 = !DILocation(line: 139, column: 34, scope: !22724)
!22747 = !DILocation(line: 139, column: 11, scope: !22724)
!22748 = !DILocation(line: 148, column: 13, scope: !22724)
!22749 = !DILocation(line: 150, column: 11, scope: !22724)
!22750 = !DILocation(line: 152, column: 37, scope: !22751)
!22751 = distinct !DILexicalBlock(scope: !22724, file: !1932, line: 151, column: 13)
!22752 = !DILocation(line: 152, column: 25, scope: !22751)
!22753 = !DILocation(line: 152, column: 52, scope: !22751)
!22754 = !DILocation(line: 152, column: 48, scope: !22751)
!22755 = !DILocation(line: 152, column: 46, scope: !22751)
!22756 = !DILocation(line: 152, column: 23, scope: !22751)
!22757 = !DILocation(line: 153, column: 37, scope: !22751)
!22758 = !DILocation(line: 153, column: 25, scope: !22751)
!22759 = !DILocation(line: 153, column: 46, scope: !22751)
!22760 = !DILocation(line: 153, column: 23, scope: !22751)
!22761 = !DILocation(line: 154, column: 16, scope: !22751)
!22762 = !DILocation(line: 155, column: 13, scope: !22751)
!22763 = !DILocation(line: 156, column: 18, scope: !22724)
!22764 = !DILocation(line: 156, column: 28, scope: !22724)
!22765 = !DILocation(line: 156, column: 26, scope: !22724)
!22766 = distinct !{!22766, !22749, !22767}
!22767 = !DILocation(line: 156, column: 34, scope: !22724)
!22768 = !DILocation(line: 157, column: 9, scope: !22724)
!22769 = !DILocation(line: 159, column: 11, scope: !22770)
!22770 = distinct !DILexicalBlock(scope: !22719, file: !1932, line: 159, column: 11)
!22771 = !DILocation(line: 159, column: 22, scope: !22770)
!22772 = !DILocation(line: 159, column: 19, scope: !22770)
!22773 = !DILocation(line: 159, column: 11, scope: !22719)
!22774 = !DILocation(line: 161, column: 24, scope: !22775)
!22775 = distinct !DILexicalBlock(scope: !22770, file: !1932, line: 160, column: 9)
!22776 = !DILocation(line: 161, column: 27, scope: !22775)
!22777 = !DILocation(line: 161, column: 35, scope: !22775)
!22778 = !DILocation(line: 161, column: 11, scope: !22775)
!22779 = !DILocation(line: 161, column: 14, scope: !22775)
!22780 = !DILocation(line: 161, column: 22, scope: !22775)
!22781 = !DILocation(line: 162, column: 18, scope: !22775)
!22782 = !DILocation(line: 162, column: 11, scope: !22775)
!22783 = !DILocalVariable(name: "excess_choices", scope: !22784, file: !1932, line: 176, type: !1939)
!22784 = distinct !DILexicalBlock(scope: !22770, file: !1932, line: 165, column: 9)
!22785 = !DILocation(line: 176, column: 19, scope: !22784)
!22786 = !DILocation(line: 176, column: 36, scope: !22784)
!22787 = !DILocation(line: 176, column: 46, scope: !22784)
!22788 = !DILocation(line: 176, column: 44, scope: !22784)
!22789 = !DILocalVariable(name: "unusable_choices", scope: !22784, file: !1932, line: 177, type: !1939)
!22790 = !DILocation(line: 177, column: 19, scope: !22784)
!22791 = !DILocation(line: 177, column: 38, scope: !22784)
!22792 = !DILocation(line: 177, column: 55, scope: !22784)
!22793 = !DILocation(line: 177, column: 53, scope: !22784)
!22794 = !DILocalVariable(name: "last_usable_choice", scope: !22784, file: !1932, line: 178, type: !1939)
!22795 = !DILocation(line: 178, column: 19, scope: !22784)
!22796 = !DILocation(line: 178, column: 40, scope: !22784)
!22797 = !DILocation(line: 178, column: 50, scope: !22784)
!22798 = !DILocation(line: 178, column: 48, scope: !22784)
!22799 = !DILocalVariable(name: "reduced_randnum", scope: !22784, file: !1932, line: 179, type: !1939)
!22800 = !DILocation(line: 179, column: 19, scope: !22784)
!22801 = !DILocation(line: 179, column: 37, scope: !22784)
!22802 = !DILocation(line: 179, column: 47, scope: !22784)
!22803 = !DILocation(line: 179, column: 45, scope: !22784)
!22804 = !DILocation(line: 181, column: 15, scope: !22805)
!22805 = distinct !DILexicalBlock(scope: !22784, file: !1932, line: 181, column: 15)
!22806 = !DILocation(line: 181, column: 26, scope: !22805)
!22807 = !DILocation(line: 181, column: 23, scope: !22805)
!22808 = !DILocation(line: 181, column: 15, scope: !22784)
!22809 = !DILocation(line: 183, column: 28, scope: !22810)
!22810 = distinct !DILexicalBlock(scope: !22805, file: !1932, line: 182, column: 13)
!22811 = !DILocation(line: 183, column: 38, scope: !22810)
!22812 = !DILocation(line: 183, column: 36, scope: !22810)
!22813 = !DILocation(line: 183, column: 15, scope: !22810)
!22814 = !DILocation(line: 183, column: 18, scope: !22810)
!22815 = !DILocation(line: 183, column: 26, scope: !22810)
!22816 = !DILocation(line: 184, column: 28, scope: !22810)
!22817 = !DILocation(line: 184, column: 45, scope: !22810)
!22818 = !DILocation(line: 184, column: 43, scope: !22810)
!22819 = !DILocation(line: 184, column: 15, scope: !22810)
!22820 = !DILocation(line: 184, column: 18, scope: !22810)
!22821 = !DILocation(line: 184, column: 26, scope: !22810)
!22822 = !DILocation(line: 185, column: 22, scope: !22810)
!22823 = !DILocation(line: 185, column: 15, scope: !22810)
!22824 = !DILocation(line: 190, column: 21, scope: !22784)
!22825 = !DILocation(line: 190, column: 19, scope: !22784)
!22826 = !DILocation(line: 191, column: 21, scope: !22784)
!22827 = !DILocation(line: 191, column: 38, scope: !22784)
!22828 = !DILocation(line: 191, column: 19, scope: !22784)
!22829 = distinct !{!22829, !22716, !22830}
!22830 = !DILocation(line: 193, column: 5, scope: !22693)
!22831 = !DILocation(line: 194, column: 1, scope: !22693)
!22832 = distinct !DISubprogram(name: "shift_left", scope: !1932, file: !1932, line: 104, type: !22833, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1927, retainedNodes: !216)
!22833 = !DISubroutineType(types: !22834)
!22834 = !{!1939, !1939}
!22835 = !DILocalVariable(name: "x", arg: 1, scope: !22832, file: !1932, line: 104, type: !1939)
!22836 = !DILocation(line: 104, column: 43, scope: !22832)
!22837 = !DILocation(line: 106, column: 27, scope: !22832)
!22838 = !DILocation(line: 106, column: 29, scope: !22832)
!22839 = !DILocation(line: 106, column: 3, scope: !22832)
!22840 = distinct !DISubprogram(name: "randint_free", scope: !1932, file: !1932, line: 199, type: !22841, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1927, retainedNodes: !216)
!22841 = !DISubroutineType(types: !22842)
!22842 = !{null, !1930}
!22843 = !DILocalVariable(name: "s", arg: 1, scope: !22840, file: !1932, line: 199, type: !1930)
!22844 = !DILocation(line: 199, column: 38, scope: !22840)
!22845 = !DILocation(line: 201, column: 19, scope: !22840)
!22846 = !DILocation(line: 201, column: 3, scope: !22840)
!22847 = !DILocation(line: 202, column: 9, scope: !22840)
!22848 = !DILocation(line: 202, column: 3, scope: !22840)
!22849 = !DILocation(line: 203, column: 1, scope: !22840)
!22850 = distinct !DISubprogram(name: "randint_all_free", scope: !1932, file: !1932, line: 209, type: !22851, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1927, retainedNodes: !216)
!22851 = !DISubroutineType(types: !22852)
!22852 = !{!7, !1930}
!22853 = !DILocalVariable(name: "s", arg: 1, scope: !22850, file: !1932, line: 209, type: !1930)
!22854 = !DILocation(line: 209, column: 42, scope: !22850)
!22855 = !DILocalVariable(name: "r", scope: !22850, file: !1932, line: 211, type: !7)
!22856 = !DILocation(line: 211, column: 7, scope: !22850)
!22857 = !DILocation(line: 211, column: 26, scope: !22850)
!22858 = !DILocation(line: 211, column: 29, scope: !22850)
!22859 = !DILocation(line: 211, column: 11, scope: !22850)
!22860 = !DILocalVariable(name: "e", scope: !22850, file: !1932, line: 212, type: !7)
!22861 = !DILocation(line: 212, column: 7, scope: !22850)
!22862 = !DILocation(line: 212, column: 11, scope: !22850)
!22863 = !DILocation(line: 213, column: 17, scope: !22850)
!22864 = !DILocation(line: 213, column: 3, scope: !22850)
!22865 = !DILocation(line: 214, column: 11, scope: !22850)
!22866 = !DILocation(line: 214, column: 3, scope: !22850)
!22867 = !DILocation(line: 214, column: 9, scope: !22850)
!22868 = !DILocation(line: 215, column: 10, scope: !22850)
!22869 = !DILocation(line: 215, column: 3, scope: !22850)
!22870 = distinct !DISubprogram(name: "randread_new", scope: !1981, file: !1981, line: 204, type: !22871, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!22871 = !DISubroutineType(types: !22872)
!22872 = !{!1979, !116, !55}
!22873 = !DILocalVariable(name: "name", arg: 1, scope: !22870, file: !1981, line: 204, type: !116)
!22874 = !DILocation(line: 204, column: 27, scope: !22870)
!22875 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22870, file: !1981, line: 204, type: !55)
!22876 = !DILocation(line: 204, column: 40, scope: !22870)
!22877 = !DILocation(line: 206, column: 7, scope: !22878)
!22878 = distinct !DILexicalBlock(scope: !22870, file: !1981, line: 206, column: 7)
!22879 = !DILocation(line: 206, column: 19, scope: !22878)
!22880 = !DILocation(line: 206, column: 7, scope: !22870)
!22881 = !DILocation(line: 207, column: 12, scope: !22878)
!22882 = !DILocation(line: 207, column: 5, scope: !22878)
!22883 = !DILocalVariable(name: "source", scope: !22884, file: !1981, line: 210, type: !1945)
!22884 = distinct !DILexicalBlock(scope: !22878, file: !1981, line: 209, column: 5)
!22885 = !DILocation(line: 210, column: 13, scope: !22884)
!22886 = !DILocalVariable(name: "s", scope: !22884, file: !1981, line: 211, type: !1979)
!22887 = !DILocation(line: 211, column: 31, scope: !22884)
!22888 = !DILocation(line: 213, column: 11, scope: !22889)
!22889 = distinct !DILexicalBlock(scope: !22884, file: !1981, line: 213, column: 11)
!22890 = !DILocation(line: 213, column: 11, scope: !22884)
!22891 = !DILocation(line: 214, column: 38, scope: !22892)
!22892 = distinct !DILexicalBlock(scope: !22889, file: !1981, line: 214, column: 13)
!22893 = !DILocation(line: 214, column: 25, scope: !22892)
!22894 = !DILocation(line: 214, column: 23, scope: !22892)
!22895 = !DILocation(line: 214, column: 13, scope: !22889)
!22896 = !DILocation(line: 215, column: 11, scope: !22892)
!22897 = !DILocation(line: 214, column: 49, scope: !22892)
!22898 = !DILocation(line: 217, column: 23, scope: !22884)
!22899 = !DILocation(line: 217, column: 31, scope: !22884)
!22900 = !DILocation(line: 217, column: 11, scope: !22884)
!22901 = !DILocation(line: 217, column: 9, scope: !22884)
!22902 = !DILocation(line: 219, column: 11, scope: !22903)
!22903 = distinct !DILexicalBlock(scope: !22884, file: !1981, line: 219, column: 11)
!22904 = !DILocation(line: 219, column: 11, scope: !22884)
!22905 = !DILocation(line: 220, column: 18, scope: !22903)
!22906 = !DILocation(line: 220, column: 26, scope: !22903)
!22907 = !DILocation(line: 220, column: 29, scope: !22903)
!22908 = !DILocation(line: 220, column: 33, scope: !22903)
!22909 = !DILocation(line: 220, column: 44, scope: !22903)
!22910 = !DILocation(line: 220, column: 9, scope: !22903)
!22911 = !DILocation(line: 223, column: 11, scope: !22912)
!22912 = distinct !DILexicalBlock(scope: !22903, file: !1981, line: 222, column: 9)
!22913 = !DILocation(line: 223, column: 14, scope: !22912)
!22914 = !DILocation(line: 223, column: 18, scope: !22912)
!22915 = !DILocation(line: 223, column: 24, scope: !22912)
!22916 = !DILocation(line: 223, column: 33, scope: !22912)
!22917 = !DILocation(line: 224, column: 22, scope: !22912)
!22918 = !DILocation(line: 224, column: 25, scope: !22912)
!22919 = !DILocation(line: 224, column: 29, scope: !22912)
!22920 = !DILocation(line: 224, column: 35, scope: !22912)
!22921 = !DILocation(line: 224, column: 41, scope: !22912)
!22922 = !DILocation(line: 225, column: 22, scope: !22912)
!22923 = !DILocation(line: 224, column: 11, scope: !22912)
!22924 = !DILocation(line: 226, column: 24, scope: !22912)
!22925 = !DILocation(line: 226, column: 27, scope: !22912)
!22926 = !DILocation(line: 226, column: 31, scope: !22912)
!22927 = !DILocation(line: 226, column: 37, scope: !22912)
!22928 = !DILocation(line: 226, column: 11, scope: !22912)
!22929 = !DILocation(line: 229, column: 14, scope: !22884)
!22930 = !DILocation(line: 229, column: 7, scope: !22884)
!22931 = !DILocation(line: 231, column: 1, scope: !22870)
!22932 = distinct !DISubprogram(name: "simple_new", scope: !1981, file: !1981, line: 137, type: !22933, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!22933 = !DISubroutineType(types: !22934)
!22934 = !{!1979, !1945, !709}
!22935 = !DILocalVariable(name: "source", arg: 1, scope: !22932, file: !1981, line: 137, type: !1945)
!22936 = !DILocation(line: 137, column: 19, scope: !22932)
!22937 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !22932, file: !1981, line: 137, type: !709)
!22938 = !DILocation(line: 137, column: 39, scope: !22932)
!22939 = !DILocalVariable(name: "s", scope: !22932, file: !1981, line: 139, type: !1979)
!22940 = !DILocation(line: 139, column: 27, scope: !22932)
!22941 = !DILocation(line: 139, column: 31, scope: !22932)
!22942 = !DILocation(line: 140, column: 15, scope: !22932)
!22943 = !DILocation(line: 140, column: 3, scope: !22932)
!22944 = !DILocation(line: 140, column: 6, scope: !22932)
!22945 = !DILocation(line: 140, column: 13, scope: !22932)
!22946 = !DILocation(line: 141, column: 3, scope: !22932)
!22947 = !DILocation(line: 141, column: 6, scope: !22932)
!22948 = !DILocation(line: 141, column: 14, scope: !22932)
!22949 = !DILocation(line: 142, column: 20, scope: !22932)
!22950 = !DILocation(line: 142, column: 3, scope: !22932)
!22951 = !DILocation(line: 142, column: 6, scope: !22932)
!22952 = !DILocation(line: 142, column: 18, scope: !22932)
!22953 = !DILocation(line: 143, column: 10, scope: !22932)
!22954 = !DILocation(line: 143, column: 3, scope: !22932)
!22955 = distinct !DISubprogram(name: "get_nonce", scope: !1981, file: !1981, line: 151, type: !22956, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!22956 = !DISubroutineType(types: !22957)
!22957 = !{null, !53, !55, !55}
!22958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !960, line: 8, size: 128, elements: !22959)
!22959 = !{!22960, !22961}
!22960 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !22958, file: !960, line: 10, baseType: !361, size: 64)
!22961 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !22958, file: !960, line: 11, baseType: !964, size: 64, offset: 64)
!22962 = !DILocalVariable(name: "buffer", arg: 1, scope: !22955, file: !1981, line: 151, type: !53)
!22963 = !DILocation(line: 151, column: 18, scope: !22955)
!22964 = !DILocalVariable(name: "bufsize", arg: 2, scope: !22955, file: !1981, line: 151, type: !55)
!22965 = !DILocation(line: 151, column: 33, scope: !22955)
!22966 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !22955, file: !1981, line: 151, type: !55)
!22967 = !DILocation(line: 151, column: 49, scope: !22955)
!22968 = !DILocalVariable(name: "buf", scope: !22955, file: !1981, line: 153, type: !9)
!22969 = !DILocation(line: 153, column: 9, scope: !22955)
!22970 = !DILocation(line: 153, column: 15, scope: !22955)
!22971 = !DILocalVariable(name: "seeded", scope: !22955, file: !1981, line: 154, type: !540)
!22972 = !DILocation(line: 154, column: 11, scope: !22955)
!22973 = !DILocalVariable(name: "fd", scope: !22955, file: !1981, line: 157, type: !7)
!22974 = !DILocation(line: 157, column: 7, scope: !22955)
!22975 = !DILocation(line: 157, column: 12, scope: !22955)
!22976 = !DILocation(line: 158, column: 12, scope: !22977)
!22977 = distinct !DILexicalBlock(scope: !22955, file: !1981, line: 158, column: 7)
!22978 = !DILocation(line: 158, column: 9, scope: !22977)
!22979 = !DILocation(line: 158, column: 7, scope: !22955)
!22980 = !DILocation(line: 160, column: 22, scope: !22981)
!22981 = distinct !DILexicalBlock(scope: !22977, file: !1981, line: 159, column: 5)
!22982 = !DILocation(line: 160, column: 26, scope: !22981)
!22983 = !DILocation(line: 160, column: 31, scope: !22981)
!22984 = !DILocation(line: 160, column: 16, scope: !22981)
!22985 = !DILocation(line: 160, column: 14, scope: !22981)
!22986 = !DILocation(line: 161, column: 11, scope: !22987)
!22987 = distinct !DILexicalBlock(scope: !22981, file: !1981, line: 161, column: 11)
!22988 = !DILocation(line: 161, column: 18, scope: !22987)
!22989 = !DILocation(line: 161, column: 11, scope: !22981)
!22990 = !DILocation(line: 162, column: 16, scope: !22987)
!22991 = !DILocation(line: 162, column: 9, scope: !22987)
!22992 = !DILocation(line: 163, column: 14, scope: !22981)
!22993 = !DILocation(line: 163, column: 7, scope: !22981)
!22994 = !DILocation(line: 164, column: 5, scope: !22981)
!22995 = !DILocation(line: 177, column: 3, scope: !22996)
!22996 = distinct !DILexicalBlock(scope: !22955, file: !1981, line: 177, column: 3)
!22997 = !DILocation(line: 177, column: 3, scope: !22955)
!22998 = !DILocalVariable(name: "v", scope: !22999, file: !1981, line: 177, type: !22958)
!22999 = distinct !DILexicalBlock(scope: !22996, file: !1981, line: 177, column: 3)
!23000 = !DILocation(line: 177, column: 3, scope: !22999)
!23001 = !DILocalVariable(name: "nbytes", scope: !22999, file: !1981, line: 177, type: !55)
!23002 = !DILocation(line: 178, column: 3, scope: !23003)
!23003 = distinct !DILexicalBlock(scope: !22955, file: !1981, line: 178, column: 3)
!23004 = !DILocation(line: 178, column: 3, scope: !22955)
!23005 = !DILocalVariable(name: "v", scope: !23006, file: !1981, line: 178, type: !2020)
!23006 = distinct !DILexicalBlock(scope: !23003, file: !1981, line: 178, column: 3)
!23007 = !DILocation(line: 178, column: 3, scope: !23006)
!23008 = !DILocalVariable(name: "nbytes", scope: !23006, file: !1981, line: 178, type: !55)
!23009 = !DILocation(line: 179, column: 3, scope: !23010)
!23010 = distinct !DILexicalBlock(scope: !22955, file: !1981, line: 179, column: 3)
!23011 = !DILocation(line: 179, column: 3, scope: !22955)
!23012 = !DILocalVariable(name: "v", scope: !23013, file: !1981, line: 179, type: !2020)
!23013 = distinct !DILexicalBlock(scope: !23010, file: !1981, line: 179, column: 3)
!23014 = !DILocation(line: 179, column: 3, scope: !23013)
!23015 = !DILocalVariable(name: "nbytes", scope: !23013, file: !1981, line: 179, type: !55)
!23016 = !DILocation(line: 180, column: 3, scope: !23017)
!23017 = distinct !DILexicalBlock(scope: !22955, file: !1981, line: 180, column: 3)
!23018 = !DILocation(line: 180, column: 3, scope: !22955)
!23019 = !DILocalVariable(name: "v", scope: !23020, file: !1981, line: 180, type: !451)
!23020 = distinct !DILexicalBlock(scope: !23017, file: !1981, line: 180, column: 3)
!23021 = !DILocation(line: 180, column: 3, scope: !23020)
!23022 = !DILocalVariable(name: "nbytes", scope: !23020, file: !1981, line: 180, type: !55)
!23023 = !DILocation(line: 181, column: 3, scope: !23024)
!23024 = distinct !DILexicalBlock(scope: !22955, file: !1981, line: 181, column: 3)
!23025 = !DILocation(line: 181, column: 3, scope: !22955)
!23026 = !DILocalVariable(name: "v", scope: !23027, file: !1981, line: 181, type: !451)
!23027 = distinct !DILexicalBlock(scope: !23024, file: !1981, line: 181, column: 3)
!23028 = !DILocation(line: 181, column: 3, scope: !23027)
!23029 = !DILocalVariable(name: "nbytes", scope: !23027, file: !1981, line: 181, type: !55)
!23030 = !DILocation(line: 189, column: 1, scope: !22955)
!23031 = distinct !DISubprogram(name: "randread_error", scope: !1981, file: !1981, line: 124, type: !1986, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!23032 = !DILocalVariable(name: "file_name", arg: 1, scope: !23031, file: !1981, line: 124, type: !709)
!23033 = !DILocation(line: 124, column: 29, scope: !23031)
!23034 = !DILocation(line: 126, column: 7, scope: !23035)
!23035 = distinct !DILexicalBlock(scope: !23031, file: !1981, line: 126, column: 7)
!23036 = !DILocation(line: 126, column: 7, scope: !23031)
!23037 = !DILocation(line: 127, column: 12, scope: !23035)
!23038 = !DILocation(line: 127, column: 26, scope: !23035)
!23039 = !DILocation(line: 128, column: 12, scope: !23035)
!23040 = !DILocation(line: 128, column: 18, scope: !23035)
!23041 = !DILocation(line: 128, column: 25, scope: !23035)
!23042 = !DILocation(line: 128, column: 48, scope: !23035)
!23043 = !DILocation(line: 129, column: 19, scope: !23035)
!23044 = !DILocation(line: 129, column: 12, scope: !23035)
!23045 = !DILocation(line: 127, column: 5, scope: !23035)
!23046 = !DILocation(line: 130, column: 3, scope: !23031)
!23047 = distinct !DISubprogram(name: "randread_set_handler", scope: !1981, file: !1981, line: 242, type: !23048, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!23048 = !DISubroutineType(types: !23049)
!23049 = !{null, !1979, !1985}
!23050 = !DILocalVariable(name: "s", arg: 1, scope: !23047, file: !1981, line: 242, type: !1979)
!23051 = !DILocation(line: 242, column: 47, scope: !23047)
!23052 = !DILocalVariable(name: "handler", arg: 2, scope: !23047, file: !1981, line: 242, type: !1985)
!23053 = !DILocation(line: 242, column: 57, scope: !23047)
!23054 = !DILocation(line: 244, column: 16, scope: !23047)
!23055 = !DILocation(line: 244, column: 3, scope: !23047)
!23056 = !DILocation(line: 244, column: 6, scope: !23047)
!23057 = !DILocation(line: 244, column: 14, scope: !23047)
!23058 = !DILocation(line: 245, column: 1, scope: !23047)
!23059 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !1981, file: !1981, line: 248, type: !23060, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!23060 = !DISubroutineType(types: !23061)
!23061 = !{null, !1979, !709}
!23062 = !DILocalVariable(name: "s", arg: 1, scope: !23059, file: !1981, line: 248, type: !1979)
!23063 = !DILocation(line: 248, column: 51, scope: !23059)
!23064 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !23059, file: !1981, line: 248, type: !709)
!23065 = !DILocation(line: 248, column: 66, scope: !23059)
!23066 = !DILocation(line: 250, column: 20, scope: !23059)
!23067 = !DILocation(line: 250, column: 3, scope: !23059)
!23068 = !DILocation(line: 250, column: 6, scope: !23059)
!23069 = !DILocation(line: 250, column: 18, scope: !23059)
!23070 = !DILocation(line: 251, column: 1, scope: !23059)
!23071 = distinct !DISubprogram(name: "randread", scope: !1981, file: !1981, line: 326, type: !23072, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!23072 = !DISubroutineType(types: !23073)
!23073 = !{null, !1979, !53, !55}
!23074 = !DILocalVariable(name: "s", arg: 1, scope: !23071, file: !1981, line: 326, type: !1979)
!23075 = !DILocation(line: 326, column: 35, scope: !23071)
!23076 = !DILocalVariable(name: "buf", arg: 2, scope: !23071, file: !1981, line: 326, type: !53)
!23077 = !DILocation(line: 326, column: 44, scope: !23071)
!23078 = !DILocalVariable(name: "size", arg: 3, scope: !23071, file: !1981, line: 326, type: !55)
!23079 = !DILocation(line: 326, column: 56, scope: !23071)
!23080 = !DILocation(line: 328, column: 7, scope: !23081)
!23081 = distinct !DILexicalBlock(scope: !23071, file: !1981, line: 328, column: 7)
!23082 = !DILocation(line: 328, column: 10, scope: !23081)
!23083 = !DILocation(line: 328, column: 7, scope: !23071)
!23084 = !DILocation(line: 329, column: 17, scope: !23081)
!23085 = !DILocation(line: 329, column: 20, scope: !23081)
!23086 = !DILocation(line: 329, column: 25, scope: !23081)
!23087 = !DILocation(line: 329, column: 5, scope: !23081)
!23088 = !DILocation(line: 331, column: 17, scope: !23081)
!23089 = !DILocation(line: 331, column: 20, scope: !23081)
!23090 = !DILocation(line: 331, column: 24, scope: !23081)
!23091 = !DILocation(line: 331, column: 31, scope: !23081)
!23092 = !DILocation(line: 331, column: 36, scope: !23081)
!23093 = !DILocation(line: 331, column: 5, scope: !23081)
!23094 = !DILocation(line: 332, column: 1, scope: !23071)
!23095 = distinct !DISubprogram(name: "readsource", scope: !1981, file: !1981, line: 258, type: !23096, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!23096 = !DISubroutineType(types: !23097)
!23097 = !{null, !1979, !23098, !55}
!23098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!23099 = !DILocalVariable(name: "s", arg: 1, scope: !23095, file: !1981, line: 258, type: !1979)
!23100 = !DILocation(line: 258, column: 37, scope: !23095)
!23101 = !DILocalVariable(name: "p", arg: 2, scope: !23095, file: !1981, line: 258, type: !23098)
!23102 = !DILocation(line: 258, column: 55, scope: !23095)
!23103 = !DILocalVariable(name: "size", arg: 3, scope: !23095, file: !1981, line: 258, type: !55)
!23104 = !DILocation(line: 258, column: 65, scope: !23095)
!23105 = !DILocation(line: 260, column: 3, scope: !23095)
!23106 = !DILocalVariable(name: "inbytes", scope: !23107, file: !1981, line: 262, type: !55)
!23107 = distinct !DILexicalBlock(scope: !23095, file: !1981, line: 261, column: 5)
!23108 = !DILocation(line: 262, column: 14, scope: !23107)
!23109 = !DILocation(line: 262, column: 24, scope: !23107)
!23110 = !DILocalVariable(name: "fread_errno", scope: !23107, file: !1981, line: 263, type: !7)
!23111 = !DILocation(line: 263, column: 11, scope: !23107)
!23112 = !DILocation(line: 263, column: 25, scope: !23107)
!23113 = !DILocation(line: 264, column: 12, scope: !23107)
!23114 = !DILocation(line: 264, column: 9, scope: !23107)
!23115 = !DILocation(line: 265, column: 15, scope: !23107)
!23116 = !DILocation(line: 265, column: 12, scope: !23107)
!23117 = !DILocation(line: 266, column: 11, scope: !23118)
!23118 = distinct !DILexicalBlock(scope: !23107, file: !1981, line: 266, column: 11)
!23119 = !DILocation(line: 266, column: 16, scope: !23118)
!23120 = !DILocation(line: 266, column: 11, scope: !23107)
!23121 = !DILocation(line: 267, column: 9, scope: !23118)
!23122 = !DILocation(line: 268, column: 16, scope: !23107)
!23123 = !DILocation(line: 268, column: 37, scope: !23107)
!23124 = !DILocation(line: 268, column: 7, scope: !23107)
!23125 = !DILocation(line: 268, column: 13, scope: !23107)
!23126 = !DILocation(line: 269, column: 7, scope: !23107)
!23127 = !DILocation(line: 269, column: 10, scope: !23107)
!23128 = !DILocation(line: 269, column: 19, scope: !23107)
!23129 = !DILocation(line: 269, column: 22, scope: !23107)
!23130 = distinct !{!23130, !23105, !23131}
!23131 = !DILocation(line: 270, column: 5, scope: !23095)
!23132 = !DILocation(line: 271, column: 1, scope: !23095)
!23133 = distinct !DISubprogram(name: "readisaac", scope: !1981, file: !1981, line: 278, type: !23134, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!23134 = !DISubroutineType(types: !23135)
!23135 = !{null, !23136, !53, !55}
!23136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!23137 = !DILocalVariable(name: "isaac", arg: 1, scope: !23133, file: !1981, line: 278, type: !23136)
!23138 = !DILocation(line: 278, column: 26, scope: !23133)
!23139 = !DILocalVariable(name: "p", arg: 2, scope: !23133, file: !1981, line: 278, type: !53)
!23140 = !DILocation(line: 278, column: 39, scope: !23133)
!23141 = !DILocalVariable(name: "size", arg: 3, scope: !23133, file: !1981, line: 278, type: !55)
!23142 = !DILocation(line: 278, column: 49, scope: !23133)
!23143 = !DILocalVariable(name: "inbytes", scope: !23133, file: !1981, line: 280, type: !55)
!23144 = !DILocation(line: 280, column: 10, scope: !23133)
!23145 = !DILocation(line: 280, column: 20, scope: !23133)
!23146 = !DILocation(line: 280, column: 27, scope: !23133)
!23147 = !DILocation(line: 282, column: 3, scope: !23133)
!23148 = !DILocalVariable(name: "char_p", scope: !23149, file: !1981, line: 284, type: !9)
!23149 = distinct !DILexicalBlock(scope: !23133, file: !1981, line: 283, column: 5)
!23150 = !DILocation(line: 284, column: 13, scope: !23149)
!23151 = !DILocation(line: 284, column: 22, scope: !23149)
!23152 = !DILocation(line: 286, column: 11, scope: !23153)
!23153 = distinct !DILexicalBlock(scope: !23149, file: !1981, line: 286, column: 11)
!23154 = !DILocation(line: 286, column: 19, scope: !23153)
!23155 = !DILocation(line: 286, column: 16, scope: !23153)
!23156 = !DILocation(line: 286, column: 11, scope: !23149)
!23157 = !DILocation(line: 288, column: 19, scope: !23158)
!23158 = distinct !DILexicalBlock(scope: !23153, file: !1981, line: 287, column: 9)
!23159 = !DILocation(line: 288, column: 22, scope: !23158)
!23160 = !DILocation(line: 288, column: 29, scope: !23158)
!23161 = !DILocation(line: 288, column: 34, scope: !23158)
!23162 = !DILocation(line: 288, column: 36, scope: !23158)
!23163 = !DILocation(line: 288, column: 52, scope: !23158)
!23164 = !DILocation(line: 288, column: 50, scope: !23158)
!23165 = !DILocation(line: 288, column: 61, scope: !23158)
!23166 = !DILocation(line: 288, column: 11, scope: !23158)
!23167 = !DILocation(line: 289, column: 29, scope: !23158)
!23168 = !DILocation(line: 289, column: 39, scope: !23158)
!23169 = !DILocation(line: 289, column: 37, scope: !23158)
!23170 = !DILocation(line: 289, column: 11, scope: !23158)
!23171 = !DILocation(line: 289, column: 18, scope: !23158)
!23172 = !DILocation(line: 289, column: 27, scope: !23158)
!23173 = !DILocation(line: 290, column: 11, scope: !23158)
!23174 = !DILocation(line: 293, column: 15, scope: !23149)
!23175 = !DILocation(line: 293, column: 18, scope: !23149)
!23176 = !DILocation(line: 293, column: 25, scope: !23149)
!23177 = !DILocation(line: 293, column: 30, scope: !23149)
!23178 = !DILocation(line: 293, column: 32, scope: !23149)
!23179 = !DILocation(line: 293, column: 48, scope: !23149)
!23180 = !DILocation(line: 293, column: 46, scope: !23149)
!23181 = !DILocation(line: 293, column: 57, scope: !23149)
!23182 = !DILocation(line: 293, column: 7, scope: !23149)
!23183 = !DILocation(line: 294, column: 11, scope: !23149)
!23184 = !DILocation(line: 294, column: 20, scope: !23149)
!23185 = !DILocation(line: 294, column: 18, scope: !23149)
!23186 = !DILocation(line: 294, column: 9, scope: !23149)
!23187 = !DILocation(line: 295, column: 15, scope: !23149)
!23188 = !DILocation(line: 295, column: 12, scope: !23149)
!23189 = !DILocation(line: 299, column: 11, scope: !23190)
!23190 = distinct !DILexicalBlock(scope: !23149, file: !1981, line: 299, column: 11)
!23191 = !DILocation(line: 299, column: 11, scope: !23149)
!23192 = !DILocalVariable(name: "wp", scope: !23193, file: !1981, line: 301, type: !2022)
!23193 = distinct !DILexicalBlock(scope: !23190, file: !1981, line: 300, column: 9)
!23194 = !DILocation(line: 301, column: 23, scope: !23193)
!23195 = !DILocation(line: 301, column: 28, scope: !23193)
!23196 = !DILocation(line: 302, column: 11, scope: !23193)
!23197 = !DILocation(line: 302, column: 33, scope: !23193)
!23198 = !DILocation(line: 302, column: 30, scope: !23193)
!23199 = !DILocation(line: 304, column: 30, scope: !23200)
!23200 = distinct !DILexicalBlock(scope: !23193, file: !1981, line: 303, column: 13)
!23201 = !DILocation(line: 304, column: 37, scope: !23200)
!23202 = !DILocation(line: 304, column: 44, scope: !23200)
!23203 = !DILocation(line: 304, column: 15, scope: !23200)
!23204 = !DILocation(line: 305, column: 18, scope: !23200)
!23205 = !DILocation(line: 306, column: 20, scope: !23200)
!23206 = !DILocation(line: 307, column: 19, scope: !23207)
!23207 = distinct !DILexicalBlock(scope: !23200, file: !1981, line: 307, column: 19)
!23208 = !DILocation(line: 307, column: 24, scope: !23207)
!23209 = !DILocation(line: 307, column: 19, scope: !23200)
!23210 = !DILocation(line: 309, column: 19, scope: !23211)
!23211 = distinct !DILexicalBlock(scope: !23207, file: !1981, line: 308, column: 17)
!23212 = !DILocation(line: 309, column: 26, scope: !23211)
!23213 = !DILocation(line: 309, column: 35, scope: !23211)
!23214 = !DILocation(line: 310, column: 19, scope: !23211)
!23215 = distinct !{!23215, !23196, !23216}
!23216 = !DILocation(line: 312, column: 13, scope: !23193)
!23217 = !DILocation(line: 313, column: 15, scope: !23193)
!23218 = !DILocation(line: 313, column: 13, scope: !23193)
!23219 = !DILocation(line: 314, column: 9, scope: !23193)
!23220 = !DILocation(line: 316, column: 22, scope: !23149)
!23221 = !DILocation(line: 316, column: 29, scope: !23149)
!23222 = !DILocation(line: 316, column: 36, scope: !23149)
!23223 = !DILocation(line: 316, column: 43, scope: !23149)
!23224 = !DILocation(line: 316, column: 48, scope: !23149)
!23225 = !DILocation(line: 316, column: 7, scope: !23149)
!23226 = !DILocation(line: 317, column: 15, scope: !23149)
!23227 = distinct !{!23227, !23147, !23228}
!23228 = !DILocation(line: 318, column: 5, scope: !23133)
!23229 = !DILocation(line: 319, column: 1, scope: !23133)
!23230 = distinct !DISubprogram(name: "randread_free", scope: !1981, file: !1981, line: 341, type: !23231, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !216)
!23231 = !DISubroutineType(types: !23232)
!23232 = !{!7, !1979}
!23233 = !DILocalVariable(name: "s", arg: 1, scope: !23230, file: !1981, line: 341, type: !1979)
!23234 = !DILocation(line: 341, column: 40, scope: !23230)
!23235 = !DILocalVariable(name: "source", scope: !23230, file: !1981, line: 343, type: !1945)
!23236 = !DILocation(line: 343, column: 9, scope: !23230)
!23237 = !DILocation(line: 343, column: 18, scope: !23230)
!23238 = !DILocation(line: 343, column: 21, scope: !23230)
!23239 = !DILocation(line: 344, column: 19, scope: !23230)
!23240 = !DILocation(line: 344, column: 3, scope: !23230)
!23241 = !DILocation(line: 345, column: 9, scope: !23230)
!23242 = !DILocation(line: 345, column: 3, scope: !23230)
!23243 = !DILocation(line: 346, column: 11, scope: !23230)
!23244 = !DILocation(line: 346, column: 28, scope: !23230)
!23245 = !DILocation(line: 346, column: 20, scope: !23230)
!23246 = !DILocation(line: 346, column: 3, scope: !23230)
!23247 = distinct !DISubprogram(name: "isaac_refill", scope: !23248, file: !23248, line: 90, type: !23249, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2023, retainedNodes: !216)
!23248 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23249 = !DISubroutineType(types: !23250)
!23250 = !{null, !23251, !2022}
!23251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23252, size: 64)
!23252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2002, line: 56, size: 16576, elements: !23253)
!23253 = !{!23254, !23255, !23256, !23257}
!23254 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !23252, file: !2002, line: 58, baseType: !2005, size: 16384)
!23255 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !23252, file: !2002, line: 59, baseType: !2006, size: 64, offset: 16384)
!23256 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !23252, file: !2002, line: 59, baseType: !2006, size: 64, offset: 16448)
!23257 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !23252, file: !2002, line: 59, baseType: !2006, size: 64, offset: 16512)
!23258 = !DILocalVariable(name: "s", arg: 1, scope: !23247, file: !23248, line: 90, type: !23251)
!23259 = !DILocation(line: 90, column: 35, scope: !23247)
!23260 = !DILocalVariable(name: "result", arg: 2, scope: !23247, file: !23248, line: 90, type: !2022)
!23261 = !DILocation(line: 90, column: 49, scope: !23247)
!23262 = !DILocalVariable(name: "a", scope: !23247, file: !23248, line: 93, type: !2006)
!23263 = !DILocation(line: 93, column: 14, scope: !23247)
!23264 = !DILocation(line: 93, column: 18, scope: !23247)
!23265 = !DILocation(line: 93, column: 21, scope: !23247)
!23266 = !DILocalVariable(name: "b", scope: !23247, file: !23248, line: 94, type: !2006)
!23267 = !DILocation(line: 94, column: 14, scope: !23247)
!23268 = !DILocation(line: 94, column: 18, scope: !23247)
!23269 = !DILocation(line: 94, column: 21, scope: !23247)
!23270 = !DILocation(line: 94, column: 28, scope: !23247)
!23271 = !DILocation(line: 94, column: 31, scope: !23247)
!23272 = !DILocation(line: 94, column: 26, scope: !23247)
!23273 = !DILocation(line: 94, column: 23, scope: !23247)
!23274 = !DILocalVariable(name: "m", scope: !23247, file: !23248, line: 97, type: !2022)
!23275 = !DILocation(line: 97, column: 15, scope: !23247)
!23276 = !DILocation(line: 97, column: 19, scope: !23247)
!23277 = !DILocation(line: 97, column: 22, scope: !23247)
!23278 = !DILocalVariable(name: "r", scope: !23247, file: !23248, line: 98, type: !2022)
!23279 = !DILocation(line: 98, column: 15, scope: !23247)
!23280 = !DILocation(line: 98, column: 19, scope: !23247)
!23281 = !DILocation(line: 116, column: 3, scope: !23247)
!23282 = !DILocalVariable(name: "x", scope: !23283, file: !23248, line: 118, type: !2006)
!23283 = distinct !DILexicalBlock(scope: !23284, file: !23248, line: 118, column: 7)
!23284 = distinct !DILexicalBlock(scope: !23247, file: !23248, line: 117, column: 5)
!23285 = !DILocation(line: 118, column: 7, scope: !23283)
!23286 = !DILocalVariable(name: "y", scope: !23283, file: !23248, line: 118, type: !2006)
!23287 = !DILocalVariable(name: "x", scope: !23288, file: !23248, line: 119, type: !2006)
!23288 = distinct !DILexicalBlock(scope: !23284, file: !23248, line: 119, column: 7)
!23289 = !DILocation(line: 119, column: 7, scope: !23288)
!23290 = !DILocalVariable(name: "y", scope: !23288, file: !23248, line: 119, type: !2006)
!23291 = !DILocalVariable(name: "x", scope: !23292, file: !23248, line: 120, type: !2006)
!23292 = distinct !DILexicalBlock(scope: !23284, file: !23248, line: 120, column: 7)
!23293 = !DILocation(line: 120, column: 7, scope: !23292)
!23294 = !DILocalVariable(name: "y", scope: !23292, file: !23248, line: 120, type: !2006)
!23295 = !DILocalVariable(name: "x", scope: !23296, file: !23248, line: 121, type: !2006)
!23296 = distinct !DILexicalBlock(scope: !23284, file: !23248, line: 121, column: 7)
!23297 = !DILocation(line: 121, column: 7, scope: !23296)
!23298 = !DILocalVariable(name: "y", scope: !23296, file: !23248, line: 121, type: !2006)
!23299 = !DILocation(line: 122, column: 9, scope: !23284)
!23300 = !DILocation(line: 123, column: 5, scope: !23284)
!23301 = !DILocation(line: 124, column: 13, scope: !23247)
!23302 = !DILocation(line: 124, column: 21, scope: !23247)
!23303 = !DILocation(line: 124, column: 24, scope: !23247)
!23304 = !DILocation(line: 124, column: 26, scope: !23247)
!23305 = !DILocation(line: 124, column: 19, scope: !23247)
!23306 = distinct !{!23306, !23281, !23307}
!23307 = !DILocation(line: 124, column: 32, scope: !23247)
!23308 = !DILocation(line: 126, column: 3, scope: !23247)
!23309 = !DILocalVariable(name: "x", scope: !23310, file: !23248, line: 128, type: !2006)
!23310 = distinct !DILexicalBlock(scope: !23311, file: !23248, line: 128, column: 7)
!23311 = distinct !DILexicalBlock(scope: !23247, file: !23248, line: 127, column: 5)
!23312 = !DILocation(line: 128, column: 7, scope: !23310)
!23313 = !DILocalVariable(name: "y", scope: !23310, file: !23248, line: 128, type: !2006)
!23314 = !DILocalVariable(name: "x", scope: !23315, file: !23248, line: 129, type: !2006)
!23315 = distinct !DILexicalBlock(scope: !23311, file: !23248, line: 129, column: 7)
!23316 = !DILocation(line: 129, column: 7, scope: !23315)
!23317 = !DILocalVariable(name: "y", scope: !23315, file: !23248, line: 129, type: !2006)
!23318 = !DILocalVariable(name: "x", scope: !23319, file: !23248, line: 130, type: !2006)
!23319 = distinct !DILexicalBlock(scope: !23311, file: !23248, line: 130, column: 7)
!23320 = !DILocation(line: 130, column: 7, scope: !23319)
!23321 = !DILocalVariable(name: "y", scope: !23319, file: !23248, line: 130, type: !2006)
!23322 = !DILocalVariable(name: "x", scope: !23323, file: !23248, line: 131, type: !2006)
!23323 = distinct !DILexicalBlock(scope: !23311, file: !23248, line: 131, column: 7)
!23324 = !DILocation(line: 131, column: 7, scope: !23323)
!23325 = !DILocalVariable(name: "y", scope: !23323, file: !23248, line: 131, type: !2006)
!23326 = !DILocation(line: 132, column: 9, scope: !23311)
!23327 = !DILocation(line: 133, column: 5, scope: !23311)
!23328 = !DILocation(line: 134, column: 13, scope: !23247)
!23329 = !DILocation(line: 134, column: 21, scope: !23247)
!23330 = !DILocation(line: 134, column: 24, scope: !23247)
!23331 = !DILocation(line: 134, column: 26, scope: !23247)
!23332 = !DILocation(line: 134, column: 19, scope: !23247)
!23333 = distinct !{!23333, !23308, !23334}
!23334 = !DILocation(line: 134, column: 39, scope: !23247)
!23335 = !DILocation(line: 136, column: 10, scope: !23247)
!23336 = !DILocation(line: 136, column: 3, scope: !23247)
!23337 = !DILocation(line: 136, column: 6, scope: !23247)
!23338 = !DILocation(line: 136, column: 8, scope: !23247)
!23339 = !DILocation(line: 137, column: 10, scope: !23247)
!23340 = !DILocation(line: 137, column: 3, scope: !23247)
!23341 = !DILocation(line: 137, column: 6, scope: !23247)
!23342 = !DILocation(line: 137, column: 8, scope: !23247)
!23343 = !DILocation(line: 138, column: 1, scope: !23247)
!23344 = distinct !DISubprogram(name: "ind", scope: !23248, file: !23248, line: 68, type: !23345, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2023, retainedNodes: !216)
!23345 = !DISubroutineType(types: !23346)
!23346 = !{!2006, !2026, !2006}
!23347 = !DILocalVariable(name: "m", arg: 1, scope: !23344, file: !23248, line: 68, type: !2026)
!23348 = !DILocation(line: 68, column: 24, scope: !23344)
!23349 = !DILocalVariable(name: "x", arg: 2, scope: !23344, file: !23248, line: 68, type: !2006)
!23350 = !DILocation(line: 68, column: 38, scope: !23344)
!23351 = !DILocalVariable(name: "void_m", scope: !23352, file: !23248, line: 75, type: !709)
!23352 = distinct !DILexicalBlock(scope: !23353, file: !23248, line: 71, column: 5)
!23353 = distinct !DILexicalBlock(scope: !23344, file: !23248, line: 70, column: 7)
!23354 = !DILocation(line: 75, column: 19, scope: !23352)
!23355 = !DILocation(line: 75, column: 28, scope: !23352)
!23356 = !DILocalVariable(name: "base_p", scope: !23352, file: !23248, line: 76, type: !116)
!23357 = !DILocation(line: 76, column: 19, scope: !23352)
!23358 = !DILocation(line: 76, column: 28, scope: !23352)
!23359 = !DILocalVariable(name: "word_p", scope: !23352, file: !23248, line: 77, type: !709)
!23360 = !DILocation(line: 77, column: 19, scope: !23352)
!23361 = !DILocation(line: 77, column: 28, scope: !23352)
!23362 = !DILocation(line: 77, column: 38, scope: !23352)
!23363 = !DILocation(line: 77, column: 40, scope: !23352)
!23364 = !DILocation(line: 77, column: 35, scope: !23352)
!23365 = !DILocalVariable(name: "p", scope: !23352, file: !23248, line: 78, type: !2026)
!23366 = !DILocation(line: 78, column: 25, scope: !23352)
!23367 = !DILocation(line: 78, column: 29, scope: !23352)
!23368 = !DILocation(line: 79, column: 15, scope: !23352)
!23369 = !DILocation(line: 79, column: 14, scope: !23352)
!23370 = !DILocation(line: 79, column: 7, scope: !23352)
!23371 = distinct !DISubprogram(name: "just", scope: !23248, file: !23248, line: 60, type: !23372, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2023, retainedNodes: !216)
!23372 = !DISubroutineType(types: !23373)
!23373 = !{!2006, !2006}
!23374 = !DILocalVariable(name: "a", arg: 1, scope: !23371, file: !23248, line: 60, type: !2006)
!23375 = !DILocation(line: 60, column: 18, scope: !23371)
!23376 = !DILocalVariable(name: "desired_bits", scope: !23371, file: !23248, line: 62, type: !2006)
!23377 = !DILocation(line: 62, column: 14, scope: !23371)
!23378 = !DILocation(line: 63, column: 10, scope: !23371)
!23379 = !DILocation(line: 63, column: 14, scope: !23371)
!23380 = !DILocation(line: 63, column: 12, scope: !23371)
!23381 = !DILocation(line: 63, column: 3, scope: !23371)
!23382 = distinct !DISubprogram(name: "isaac_seed", scope: !23248, file: !23248, line: 248, type: !23383, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2023, retainedNodes: !216)
!23383 = !DISubroutineType(types: !23384)
!23384 = !{null, !23251}
!23385 = !DILocalVariable(name: "s", arg: 1, scope: !23382, file: !23248, line: 248, type: !23251)
!23386 = !DILocation(line: 248, column: 33, scope: !23382)
!23387 = !DILocalVariable(name: "a", scope: !23382, file: !23248, line: 250, type: !2006)
!23388 = !DILocation(line: 250, column: 14, scope: !23382)
!23389 = !DILocalVariable(name: "b", scope: !23382, file: !23248, line: 251, type: !2006)
!23390 = !DILocation(line: 251, column: 14, scope: !23382)
!23391 = !DILocalVariable(name: "c", scope: !23382, file: !23248, line: 252, type: !2006)
!23392 = !DILocation(line: 252, column: 14, scope: !23382)
!23393 = !DILocalVariable(name: "d", scope: !23382, file: !23248, line: 253, type: !2006)
!23394 = !DILocation(line: 253, column: 14, scope: !23382)
!23395 = !DILocalVariable(name: "e", scope: !23382, file: !23248, line: 254, type: !2006)
!23396 = !DILocation(line: 254, column: 14, scope: !23382)
!23397 = !DILocalVariable(name: "f", scope: !23382, file: !23248, line: 255, type: !2006)
!23398 = !DILocation(line: 255, column: 14, scope: !23382)
!23399 = !DILocalVariable(name: "g", scope: !23382, file: !23248, line: 256, type: !2006)
!23400 = !DILocation(line: 256, column: 14, scope: !23382)
!23401 = !DILocalVariable(name: "h", scope: !23382, file: !23248, line: 257, type: !2006)
!23402 = !DILocation(line: 257, column: 14, scope: !23382)
!23403 = !DILocalVariable(name: "i", scope: !23404, file: !23248, line: 269, type: !7)
!23404 = distinct !DILexicalBlock(scope: !23382, file: !23248, line: 269, column: 3)
!23405 = !DILocation(line: 269, column: 3, scope: !23404)
!23406 = !DILocation(line: 269, column: 3, scope: !23407)
!23407 = distinct !DILexicalBlock(scope: !23404, file: !23248, line: 269, column: 3)
!23408 = !DILocation(line: 269, column: 3, scope: !23409)
!23409 = distinct !DILexicalBlock(scope: !23407, file: !23248, line: 269, column: 3)
!23410 = !DILocation(line: 269, column: 3, scope: !23411)
!23411 = distinct !DILexicalBlock(scope: !23409, file: !23248, line: 269, column: 3)
!23412 = !DILocation(line: 269, column: 3, scope: !23413)
!23413 = distinct !DILexicalBlock(scope: !23411, file: !23248, line: 269, column: 3)
!23414 = distinct !{!23414, !23406, !23406}
!23415 = !DILocalVariable(name: "i", scope: !23416, file: !23248, line: 270, type: !7)
!23416 = distinct !DILexicalBlock(scope: !23382, file: !23248, line: 270, column: 3)
!23417 = !DILocation(line: 270, column: 3, scope: !23416)
!23418 = !DILocation(line: 270, column: 3, scope: !23419)
!23419 = distinct !DILexicalBlock(scope: !23416, file: !23248, line: 270, column: 3)
!23420 = !DILocation(line: 270, column: 3, scope: !23421)
!23421 = distinct !DILexicalBlock(scope: !23419, file: !23248, line: 270, column: 3)
!23422 = !DILocation(line: 270, column: 3, scope: !23423)
!23423 = distinct !DILexicalBlock(scope: !23421, file: !23248, line: 270, column: 3)
!23424 = !DILocation(line: 270, column: 3, scope: !23425)
!23425 = distinct !DILexicalBlock(scope: !23423, file: !23248, line: 270, column: 3)
!23426 = distinct !{!23426, !23418, !23418}
!23427 = !DILocation(line: 272, column: 17, scope: !23382)
!23428 = !DILocation(line: 272, column: 20, scope: !23382)
!23429 = !DILocation(line: 272, column: 22, scope: !23382)
!23430 = !DILocation(line: 272, column: 10, scope: !23382)
!23431 = !DILocation(line: 272, column: 13, scope: !23382)
!23432 = !DILocation(line: 272, column: 15, scope: !23382)
!23433 = !DILocation(line: 272, column: 3, scope: !23382)
!23434 = !DILocation(line: 272, column: 6, scope: !23382)
!23435 = !DILocation(line: 272, column: 8, scope: !23382)
!23436 = !DILocation(line: 273, column: 1, scope: !23382)
!23437 = distinct !DISubprogram(name: "dup_safer", scope: !23438, file: !23438, line: 31, type: !14875, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2028, retainedNodes: !216)
!23438 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23439 = !DILocalVariable(name: "fd", arg: 1, scope: !23437, file: !23438, line: 31, type: !7)
!23440 = !DILocation(line: 31, column: 16, scope: !23437)
!23441 = !DILocation(line: 33, column: 17, scope: !23437)
!23442 = !DILocation(line: 33, column: 10, scope: !23437)
!23443 = !DILocation(line: 33, column: 3, scope: !23437)
!23444 = distinct !DISubprogram(name: "xsum", scope: !23445, file: !23445, line: 63, type: !23446, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2030, retainedNodes: !216)
!23445 = !DIFile(filename: "./lib/xsize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!23446 = !DISubroutineType(types: !23447)
!23447 = !{!55, !55, !55}
!23448 = !DILocalVariable(name: "size1", arg: 1, scope: !23444, file: !23445, line: 63, type: !55)
!23449 = !DILocation(line: 63, column: 14, scope: !23444)
!23450 = !DILocalVariable(name: "size2", arg: 2, scope: !23444, file: !23445, line: 63, type: !55)
!23451 = !DILocation(line: 63, column: 28, scope: !23444)
!23452 = !DILocalVariable(name: "sum", scope: !23444, file: !23445, line: 65, type: !55)
!23453 = !DILocation(line: 65, column: 10, scope: !23444)
!23454 = !DILocation(line: 65, column: 16, scope: !23444)
!23455 = !DILocation(line: 65, column: 24, scope: !23444)
!23456 = !DILocation(line: 65, column: 22, scope: !23444)
!23457 = !DILocation(line: 66, column: 11, scope: !23444)
!23458 = !DILocation(line: 66, column: 18, scope: !23444)
!23459 = !DILocation(line: 66, column: 15, scope: !23444)
!23460 = !DILocation(line: 66, column: 26, scope: !23444)
!23461 = !DILocation(line: 66, column: 3, scope: !23444)
!23462 = distinct !DISubprogram(name: "xsum3", scope: !23445, file: !23445, line: 74, type: !9927, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2030, retainedNodes: !216)
!23463 = !DILocalVariable(name: "size1", arg: 1, scope: !23462, file: !23445, line: 74, type: !55)
!23464 = !DILocation(line: 74, column: 15, scope: !23462)
!23465 = !DILocalVariable(name: "size2", arg: 2, scope: !23462, file: !23445, line: 74, type: !55)
!23466 = !DILocation(line: 74, column: 29, scope: !23462)
!23467 = !DILocalVariable(name: "size3", arg: 3, scope: !23462, file: !23445, line: 74, type: !55)
!23468 = !DILocation(line: 74, column: 43, scope: !23462)
!23469 = !DILocation(line: 76, column: 22, scope: !23462)
!23470 = !DILocation(line: 76, column: 29, scope: !23462)
!23471 = !DILocation(line: 76, column: 16, scope: !23462)
!23472 = !DILocation(line: 76, column: 37, scope: !23462)
!23473 = !DILocation(line: 76, column: 10, scope: !23462)
!23474 = !DILocation(line: 76, column: 3, scope: !23462)
!23475 = distinct !DISubprogram(name: "xsum4", scope: !23445, file: !23445, line: 84, type: !23476, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2030, retainedNodes: !216)
!23476 = !DISubroutineType(types: !23477)
!23477 = !{!55, !55, !55, !55, !55}
!23478 = !DILocalVariable(name: "size1", arg: 1, scope: !23475, file: !23445, line: 84, type: !55)
!23479 = !DILocation(line: 84, column: 15, scope: !23475)
!23480 = !DILocalVariable(name: "size2", arg: 2, scope: !23475, file: !23445, line: 84, type: !55)
!23481 = !DILocation(line: 84, column: 29, scope: !23475)
!23482 = !DILocalVariable(name: "size3", arg: 3, scope: !23475, file: !23445, line: 84, type: !55)
!23483 = !DILocation(line: 84, column: 43, scope: !23475)
!23484 = !DILocalVariable(name: "size4", arg: 4, scope: !23475, file: !23445, line: 84, type: !55)
!23485 = !DILocation(line: 84, column: 57, scope: !23475)
!23486 = !DILocation(line: 86, column: 28, scope: !23475)
!23487 = !DILocation(line: 86, column: 35, scope: !23475)
!23488 = !DILocation(line: 86, column: 22, scope: !23475)
!23489 = !DILocation(line: 86, column: 43, scope: !23475)
!23490 = !DILocation(line: 86, column: 16, scope: !23475)
!23491 = !DILocation(line: 86, column: 51, scope: !23475)
!23492 = !DILocation(line: 86, column: 10, scope: !23475)
!23493 = !DILocation(line: 86, column: 3, scope: !23475)
!23494 = distinct !DISubprogram(name: "xmax", scope: !23445, file: !23445, line: 94, type: !23446, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2030, retainedNodes: !216)
!23495 = !DILocalVariable(name: "size1", arg: 1, scope: !23494, file: !23445, line: 94, type: !55)
!23496 = !DILocation(line: 94, column: 14, scope: !23494)
!23497 = !DILocalVariable(name: "size2", arg: 2, scope: !23494, file: !23445, line: 94, type: !55)
!23498 = !DILocation(line: 94, column: 28, scope: !23494)
!23499 = !DILocation(line: 98, column: 11, scope: !23494)
!23500 = !DILocation(line: 98, column: 20, scope: !23494)
!23501 = !DILocation(line: 98, column: 17, scope: !23494)
!23502 = !DILocation(line: 98, column: 28, scope: !23494)
!23503 = !DILocation(line: 98, column: 36, scope: !23494)
!23504 = !DILocation(line: 98, column: 3, scope: !23494)
!23505 = distinct !DISubprogram(name: "rpl_fclose", scope: !23506, file: !23506, line: 58, type: !23507, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2032, retainedNodes: !216)
!23506 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23507 = !DISubroutineType(types: !23508)
!23508 = !{!7, !23509}
!23509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23510, size: 64)
!23510 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !23511)
!23511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !23512)
!23512 = !{!23513, !23514, !23515, !23516, !23517, !23518, !23519, !23520, !23521, !23522, !23523, !23524, !23525, !23526, !23528, !23529, !23530, !23531, !23532, !23533, !23534, !23535, !23536, !23537, !23538, !23539, !23540, !23541, !23542}
!23513 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !23511, file: !4, line: 51, baseType: !7, size: 32)
!23514 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !23511, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!23515 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !23511, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!23516 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !23511, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!23517 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !23511, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!23518 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !23511, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!23519 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !23511, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!23520 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !23511, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!23521 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !23511, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!23522 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !23511, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!23523 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !23511, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!23524 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !23511, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!23525 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !23511, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!23526 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !23511, file: !4, line: 70, baseType: !23527, size: 64, offset: 832)
!23527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23511, size: 64)
!23528 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !23511, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!23529 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !23511, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!23530 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !23511, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!23531 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !23511, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!23532 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !23511, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!23533 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !23511, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!23534 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !23511, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!23535 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !23511, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!23536 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !23511, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!23537 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !23511, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!23538 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !23511, file: !4, line: 93, baseType: !23527, size: 64, offset: 1344)
!23539 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !23511, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!23540 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !23511, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!23541 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !23511, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!23542 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !23511, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!23543 = !DILocalVariable(name: "fp", arg: 1, scope: !23505, file: !23506, line: 58, type: !23509)
!23544 = !DILocation(line: 58, column: 19, scope: !23505)
!23545 = !DILocalVariable(name: "saved_errno", scope: !23505, file: !23506, line: 60, type: !7)
!23546 = !DILocation(line: 60, column: 7, scope: !23505)
!23547 = !DILocalVariable(name: "fd", scope: !23505, file: !23506, line: 61, type: !7)
!23548 = !DILocation(line: 61, column: 7, scope: !23505)
!23549 = !DILocalVariable(name: "result", scope: !23505, file: !23506, line: 62, type: !7)
!23550 = !DILocation(line: 62, column: 7, scope: !23505)
!23551 = !DILocation(line: 65, column: 16, scope: !23505)
!23552 = !DILocation(line: 65, column: 8, scope: !23505)
!23553 = !DILocation(line: 65, column: 6, scope: !23505)
!23554 = !DILocation(line: 66, column: 7, scope: !23555)
!23555 = distinct !DILexicalBlock(scope: !23505, file: !23506, line: 66, column: 7)
!23556 = !DILocation(line: 66, column: 10, scope: !23555)
!23557 = !DILocation(line: 66, column: 7, scope: !23505)
!23558 = !DILocation(line: 67, column: 28, scope: !23555)
!23559 = !DILocation(line: 67, column: 12, scope: !23555)
!23560 = !DILocation(line: 67, column: 5, scope: !23555)
!23561 = !DILocation(line: 72, column: 9, scope: !23562)
!23562 = distinct !DILexicalBlock(scope: !23505, file: !23506, line: 72, column: 7)
!23563 = !DILocation(line: 72, column: 23, scope: !23562)
!23564 = !DILocation(line: 72, column: 41, scope: !23562)
!23565 = !DILocation(line: 72, column: 33, scope: !23562)
!23566 = !DILocation(line: 72, column: 26, scope: !23562)
!23567 = !DILocation(line: 72, column: 59, scope: !23562)
!23568 = !DILocation(line: 73, column: 7, scope: !23562)
!23569 = !DILocation(line: 73, column: 18, scope: !23562)
!23570 = !DILocation(line: 73, column: 10, scope: !23562)
!23571 = !DILocation(line: 72, column: 7, scope: !23505)
!23572 = !DILocation(line: 74, column: 19, scope: !23562)
!23573 = !DILocation(line: 74, column: 17, scope: !23562)
!23574 = !DILocation(line: 74, column: 5, scope: !23562)
!23575 = !DILocation(line: 100, column: 28, scope: !23505)
!23576 = !DILocation(line: 100, column: 12, scope: !23505)
!23577 = !DILocation(line: 100, column: 10, scope: !23505)
!23578 = !DILocation(line: 105, column: 7, scope: !23579)
!23579 = distinct !DILexicalBlock(scope: !23505, file: !23506, line: 105, column: 7)
!23580 = !DILocation(line: 105, column: 19, scope: !23579)
!23581 = !DILocation(line: 105, column: 7, scope: !23505)
!23582 = !DILocation(line: 107, column: 15, scope: !23583)
!23583 = distinct !DILexicalBlock(scope: !23579, file: !23506, line: 106, column: 5)
!23584 = !DILocation(line: 107, column: 7, scope: !23583)
!23585 = !DILocation(line: 107, column: 13, scope: !23583)
!23586 = !DILocation(line: 108, column: 14, scope: !23583)
!23587 = !DILocation(line: 109, column: 5, scope: !23583)
!23588 = !DILocation(line: 111, column: 10, scope: !23505)
!23589 = !DILocation(line: 111, column: 3, scope: !23505)
!23590 = !DILocation(line: 112, column: 1, scope: !23505)
!23591 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1033, file: !1033, line: 201, type: !23592, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1036, retainedNodes: !216)
!23592 = !DISubroutineType(types: !23593)
!23593 = !{!7, !7, !7, null}
!23594 = !DILocalVariable(name: "fd", arg: 1, scope: !23591, file: !1033, line: 201, type: !7)
!23595 = !DILocation(line: 201, column: 12, scope: !23591)
!23596 = !DILocalVariable(name: "action", arg: 2, scope: !23591, file: !1033, line: 201, type: !7)
!23597 = !DILocation(line: 201, column: 20, scope: !23591)
!23598 = !DILocalVariable(name: "arg", scope: !23591, file: !1033, line: 207, type: !1039)
!23599 = !DILocation(line: 207, column: 11, scope: !23591)
!23600 = !DILocalVariable(name: "result", scope: !23591, file: !1033, line: 208, type: !7)
!23601 = !DILocation(line: 208, column: 7, scope: !23591)
!23602 = !DILocation(line: 209, column: 3, scope: !23591)
!23603 = !DILocation(line: 210, column: 11, scope: !23591)
!23604 = !DILocation(line: 210, column: 3, scope: !23591)
!23605 = !DILocalVariable(name: "target", scope: !23606, file: !1033, line: 214, type: !7)
!23606 = distinct !DILexicalBlock(scope: !23607, file: !1033, line: 213, column: 7)
!23607 = distinct !DILexicalBlock(scope: !23591, file: !1033, line: 211, column: 5)
!23608 = !DILocation(line: 214, column: 13, scope: !23606)
!23609 = !DILocation(line: 214, column: 22, scope: !23606)
!23610 = !DILocation(line: 215, column: 35, scope: !23606)
!23611 = !DILocation(line: 215, column: 39, scope: !23606)
!23612 = !DILocation(line: 215, column: 18, scope: !23606)
!23613 = !DILocation(line: 215, column: 16, scope: !23606)
!23614 = !DILocation(line: 216, column: 9, scope: !23606)
!23615 = !DILocalVariable(name: "target", scope: !23616, file: !1033, line: 221, type: !7)
!23616 = distinct !DILexicalBlock(scope: !23607, file: !1033, line: 220, column: 7)
!23617 = !DILocation(line: 221, column: 13, scope: !23616)
!23618 = !DILocation(line: 221, column: 22, scope: !23616)
!23619 = !DILocation(line: 222, column: 43, scope: !23616)
!23620 = !DILocation(line: 222, column: 47, scope: !23616)
!23621 = !DILocation(line: 222, column: 18, scope: !23616)
!23622 = !DILocation(line: 222, column: 16, scope: !23616)
!23623 = !DILocation(line: 223, column: 9, scope: !23616)
!23624 = !DILocation(line: 258, column: 17, scope: !23625)
!23625 = distinct !DILexicalBlock(scope: !23607, file: !1033, line: 256, column: 7)
!23626 = !DILocation(line: 258, column: 9, scope: !23625)
!23627 = !DILocation(line: 327, column: 29, scope: !23628)
!23628 = distinct !DILexicalBlock(scope: !23625, file: !1033, line: 259, column: 11)
!23629 = !DILocation(line: 327, column: 33, scope: !23628)
!23630 = !DILocation(line: 327, column: 22, scope: !23628)
!23631 = !DILocation(line: 327, column: 20, scope: !23628)
!23632 = !DILocation(line: 328, column: 13, scope: !23628)
!23633 = !DILocalVariable(name: "x", scope: !23634, file: !1033, line: 422, type: !7)
!23634 = distinct !DILexicalBlock(scope: !23628, file: !1033, line: 421, column: 13)
!23635 = !DILocation(line: 422, column: 19, scope: !23634)
!23636 = !DILocation(line: 422, column: 23, scope: !23634)
!23637 = !DILocation(line: 423, column: 31, scope: !23634)
!23638 = !DILocation(line: 423, column: 35, scope: !23634)
!23639 = !DILocation(line: 423, column: 43, scope: !23634)
!23640 = !DILocation(line: 423, column: 24, scope: !23634)
!23641 = !DILocation(line: 423, column: 22, scope: !23634)
!23642 = !DILocation(line: 425, column: 13, scope: !23628)
!23643 = !DILocalVariable(name: "p", scope: !23644, file: !1033, line: 430, type: !53)
!23644 = distinct !DILexicalBlock(scope: !23628, file: !1033, line: 429, column: 13)
!23645 = !DILocation(line: 430, column: 21, scope: !23644)
!23646 = !DILocation(line: 430, column: 25, scope: !23644)
!23647 = !DILocation(line: 431, column: 31, scope: !23644)
!23648 = !DILocation(line: 431, column: 35, scope: !23644)
!23649 = !DILocation(line: 431, column: 43, scope: !23644)
!23650 = !DILocation(line: 431, column: 24, scope: !23644)
!23651 = !DILocation(line: 431, column: 22, scope: !23644)
!23652 = !DILocation(line: 433, column: 13, scope: !23628)
!23653 = !DILocation(line: 438, column: 9, scope: !23625)
!23654 = !DILocation(line: 441, column: 3, scope: !23591)
!23655 = !DILocation(line: 442, column: 10, scope: !23591)
!23656 = !DILocation(line: 442, column: 3, scope: !23591)
!23657 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1033, file: !1033, line: 446, type: !1034, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1036, retainedNodes: !216)
!23658 = !DILocalVariable(name: "fd", arg: 1, scope: !23657, file: !1033, line: 446, type: !7)
!23659 = !DILocation(line: 446, column: 22, scope: !23657)
!23660 = !DILocalVariable(name: "target", arg: 2, scope: !23657, file: !1033, line: 446, type: !7)
!23661 = !DILocation(line: 446, column: 30, scope: !23657)
!23662 = !DILocalVariable(name: "result", scope: !23657, file: !1033, line: 448, type: !7)
!23663 = !DILocation(line: 448, column: 7, scope: !23657)
!23664 = !DILocation(line: 481, column: 19, scope: !23657)
!23665 = !DILocation(line: 481, column: 32, scope: !23657)
!23666 = !DILocation(line: 481, column: 12, scope: !23657)
!23667 = !DILocation(line: 481, column: 10, scope: !23657)
!23668 = !DILocation(line: 483, column: 10, scope: !23657)
!23669 = !DILocation(line: 483, column: 3, scope: !23657)
!23670 = !DILocalVariable(name: "fd", arg: 1, scope: !1032, file: !1033, line: 487, type: !7)
!23671 = !DILocation(line: 487, column: 30, scope: !1032)
!23672 = !DILocalVariable(name: "target", arg: 2, scope: !1032, file: !1033, line: 487, type: !7)
!23673 = !DILocation(line: 487, column: 38, scope: !1032)
!23674 = !DILocalVariable(name: "result", scope: !1032, file: !1033, line: 489, type: !7)
!23675 = !DILocation(line: 489, column: 7, scope: !1032)
!23676 = !DILocation(line: 507, column: 12, scope: !23677)
!23677 = distinct !DILexicalBlock(scope: !1032, file: !1033, line: 507, column: 7)
!23678 = !DILocation(line: 507, column: 9, scope: !23677)
!23679 = !DILocation(line: 507, column: 7, scope: !1032)
!23680 = !DILocation(line: 509, column: 23, scope: !23681)
!23681 = distinct !DILexicalBlock(scope: !23677, file: !1033, line: 508, column: 5)
!23682 = !DILocation(line: 509, column: 44, scope: !23681)
!23683 = !DILocation(line: 509, column: 16, scope: !23681)
!23684 = !DILocation(line: 509, column: 14, scope: !23681)
!23685 = !DILocation(line: 510, column: 16, scope: !23686)
!23686 = distinct !DILexicalBlock(scope: !23681, file: !1033, line: 510, column: 11)
!23687 = !DILocation(line: 510, column: 13, scope: !23686)
!23688 = !DILocation(line: 510, column: 23, scope: !23686)
!23689 = !DILocation(line: 510, column: 26, scope: !23686)
!23690 = !DILocation(line: 510, column: 32, scope: !23686)
!23691 = !DILocation(line: 510, column: 11, scope: !23681)
!23692 = !DILocation(line: 512, column: 30, scope: !23693)
!23693 = distinct !DILexicalBlock(scope: !23686, file: !1033, line: 511, column: 9)
!23694 = !DILocation(line: 517, column: 9, scope: !23693)
!23695 = !DILocation(line: 520, column: 37, scope: !23696)
!23696 = distinct !DILexicalBlock(scope: !23686, file: !1033, line: 519, column: 9)
!23697 = !DILocation(line: 520, column: 41, scope: !23696)
!23698 = !DILocation(line: 520, column: 20, scope: !23696)
!23699 = !DILocation(line: 520, column: 18, scope: !23696)
!23700 = !DILocation(line: 521, column: 15, scope: !23701)
!23701 = distinct !DILexicalBlock(scope: !23696, file: !1033, line: 521, column: 15)
!23702 = !DILocation(line: 521, column: 22, scope: !23701)
!23703 = !DILocation(line: 521, column: 15, scope: !23696)
!23704 = !DILocation(line: 522, column: 32, scope: !23701)
!23705 = !DILocation(line: 522, column: 13, scope: !23701)
!23706 = !DILocation(line: 524, column: 5, scope: !23681)
!23707 = !DILocation(line: 527, column: 31, scope: !23677)
!23708 = !DILocation(line: 527, column: 35, scope: !23677)
!23709 = !DILocation(line: 527, column: 14, scope: !23677)
!23710 = !DILocation(line: 527, column: 12, scope: !23677)
!23711 = !DILocation(line: 528, column: 12, scope: !23712)
!23712 = distinct !DILexicalBlock(scope: !1032, file: !1033, line: 528, column: 7)
!23713 = !DILocation(line: 528, column: 9, scope: !23712)
!23714 = !DILocation(line: 528, column: 19, scope: !23712)
!23715 = !DILocation(line: 528, column: 22, scope: !23712)
!23716 = !DILocation(line: 528, column: 41, scope: !23712)
!23717 = !DILocation(line: 528, column: 7, scope: !1032)
!23718 = !DILocalVariable(name: "flags", scope: !23719, file: !1033, line: 530, type: !7)
!23719 = distinct !DILexicalBlock(scope: !23712, file: !1033, line: 529, column: 5)
!23720 = !DILocation(line: 530, column: 11, scope: !23719)
!23721 = !DILocation(line: 530, column: 26, scope: !23719)
!23722 = !DILocation(line: 530, column: 19, scope: !23719)
!23723 = !DILocation(line: 531, column: 11, scope: !23724)
!23724 = distinct !DILexicalBlock(scope: !23719, file: !1033, line: 531, column: 11)
!23725 = !DILocation(line: 531, column: 17, scope: !23724)
!23726 = !DILocation(line: 531, column: 21, scope: !23724)
!23727 = !DILocation(line: 531, column: 31, scope: !23724)
!23728 = !DILocation(line: 531, column: 48, scope: !23724)
!23729 = !DILocation(line: 531, column: 54, scope: !23724)
!23730 = !DILocation(line: 531, column: 24, scope: !23724)
!23731 = !DILocation(line: 531, column: 68, scope: !23724)
!23732 = !DILocation(line: 531, column: 11, scope: !23719)
!23733 = !DILocalVariable(name: "saved_errno", scope: !23734, file: !1033, line: 533, type: !7)
!23734 = distinct !DILexicalBlock(scope: !23724, file: !1033, line: 532, column: 9)
!23735 = !DILocation(line: 533, column: 15, scope: !23734)
!23736 = !DILocation(line: 533, column: 29, scope: !23734)
!23737 = !DILocation(line: 534, column: 18, scope: !23734)
!23738 = !DILocation(line: 534, column: 11, scope: !23734)
!23739 = !DILocation(line: 535, column: 19, scope: !23734)
!23740 = !DILocation(line: 535, column: 11, scope: !23734)
!23741 = !DILocation(line: 535, column: 17, scope: !23734)
!23742 = !DILocation(line: 536, column: 18, scope: !23734)
!23743 = !DILocation(line: 537, column: 9, scope: !23734)
!23744 = !DILocation(line: 538, column: 5, scope: !23719)
!23745 = !DILocation(line: 540, column: 10, scope: !1032)
!23746 = !DILocation(line: 540, column: 3, scope: !1032)
!23747 = distinct !DISubprogram(name: "acl_errno_valid", scope: !23748, file: !23748, line: 30, type: !3614, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2034, retainedNodes: !216)
!23748 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23749 = !DILocalVariable(name: "errnum", arg: 1, scope: !23747, file: !23748, line: 30, type: !7)
!23750 = !DILocation(line: 30, column: 22, scope: !23747)
!23751 = !DILocation(line: 34, column: 11, scope: !23747)
!23752 = !DILocation(line: 34, column: 3, scope: !23747)
!23753 = !DILocation(line: 36, column: 17, scope: !23754)
!23754 = distinct !DILexicalBlock(scope: !23747, file: !23748, line: 35, column: 5)
!23755 = !DILocation(line: 37, column: 18, scope: !23754)
!23756 = !DILocation(line: 41, column: 18, scope: !23754)
!23757 = !DILocation(line: 49, column: 22, scope: !23754)
!23758 = !DILocation(line: 50, column: 14, scope: !23754)
!23759 = !DILocation(line: 52, column: 1, scope: !23747)
!23760 = distinct !DISubprogram(name: "c_isalnum", scope: !23761, file: !23761, line: 169, type: !3614, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23761 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/software/coreutils-8.31")
!23762 = !DILocalVariable(name: "c", arg: 1, scope: !23760, file: !23761, line: 169, type: !7)
!23763 = !DILocation(line: 169, column: 16, scope: !23760)
!23764 = !DILocation(line: 171, column: 11, scope: !23760)
!23765 = !DILocation(line: 171, column: 3, scope: !23760)
!23766 = !DILocation(line: 176, column: 7, scope: !23767)
!23767 = distinct !DILexicalBlock(scope: !23760, file: !23761, line: 172, column: 5)
!23768 = !DILocation(line: 178, column: 7, scope: !23767)
!23769 = !DILocation(line: 180, column: 1, scope: !23760)
!23770 = distinct !DISubprogram(name: "c_isalpha", scope: !23761, file: !23761, line: 183, type: !3614, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23771 = !DILocalVariable(name: "c", arg: 1, scope: !23770, file: !23761, line: 183, type: !7)
!23772 = !DILocation(line: 183, column: 16, scope: !23770)
!23773 = !DILocation(line: 185, column: 11, scope: !23770)
!23774 = !DILocation(line: 185, column: 3, scope: !23770)
!23775 = !DILocation(line: 189, column: 7, scope: !23776)
!23776 = distinct !DILexicalBlock(scope: !23770, file: !23761, line: 186, column: 5)
!23777 = !DILocation(line: 191, column: 7, scope: !23776)
!23778 = !DILocation(line: 193, column: 1, scope: !23770)
!23779 = distinct !DISubprogram(name: "c_isascii", scope: !23761, file: !23761, line: 198, type: !3614, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23780 = !DILocalVariable(name: "c", arg: 1, scope: !23779, file: !23761, line: 198, type: !7)
!23781 = !DILocation(line: 198, column: 16, scope: !23779)
!23782 = !DILocation(line: 200, column: 11, scope: !23779)
!23783 = !DILocation(line: 200, column: 3, scope: !23779)
!23784 = !DILocation(line: 208, column: 7, scope: !23785)
!23785 = distinct !DILexicalBlock(scope: !23779, file: !23761, line: 201, column: 5)
!23786 = !DILocation(line: 210, column: 7, scope: !23785)
!23787 = !DILocation(line: 212, column: 1, scope: !23779)
!23788 = distinct !DISubprogram(name: "c_isblank", scope: !23761, file: !23761, line: 215, type: !3614, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23789 = !DILocalVariable(name: "c", arg: 1, scope: !23788, file: !23761, line: 215, type: !7)
!23790 = !DILocation(line: 215, column: 16, scope: !23788)
!23791 = !DILocation(line: 217, column: 10, scope: !23788)
!23792 = !DILocation(line: 217, column: 12, scope: !23788)
!23793 = !DILocation(line: 217, column: 19, scope: !23788)
!23794 = !DILocation(line: 217, column: 22, scope: !23788)
!23795 = !DILocation(line: 217, column: 24, scope: !23788)
!23796 = !DILocation(line: 217, column: 3, scope: !23788)
!23797 = distinct !DISubprogram(name: "c_iscntrl", scope: !23761, file: !23761, line: 221, type: !3614, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23798 = !DILocalVariable(name: "c", arg: 1, scope: !23797, file: !23761, line: 221, type: !7)
!23799 = !DILocation(line: 221, column: 16, scope: !23797)
!23800 = !DILocation(line: 223, column: 11, scope: !23797)
!23801 = !DILocation(line: 223, column: 3, scope: !23797)
!23802 = !DILocation(line: 226, column: 7, scope: !23803)
!23803 = distinct !DILexicalBlock(scope: !23797, file: !23761, line: 224, column: 5)
!23804 = !DILocation(line: 228, column: 7, scope: !23803)
!23805 = !DILocation(line: 230, column: 1, scope: !23797)
!23806 = distinct !DISubprogram(name: "c_isdigit", scope: !23761, file: !23761, line: 233, type: !3614, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23807 = !DILocalVariable(name: "c", arg: 1, scope: !23806, file: !23761, line: 233, type: !7)
!23808 = !DILocation(line: 233, column: 16, scope: !23806)
!23809 = !DILocation(line: 235, column: 11, scope: !23806)
!23810 = !DILocation(line: 235, column: 3, scope: !23806)
!23811 = !DILocation(line: 238, column: 7, scope: !23812)
!23812 = distinct !DILexicalBlock(scope: !23806, file: !23761, line: 236, column: 5)
!23813 = !DILocation(line: 240, column: 7, scope: !23812)
!23814 = !DILocation(line: 242, column: 1, scope: !23806)
!23815 = distinct !DISubprogram(name: "c_isgraph", scope: !23761, file: !23761, line: 245, type: !3614, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23816 = !DILocalVariable(name: "c", arg: 1, scope: !23815, file: !23761, line: 245, type: !7)
!23817 = !DILocation(line: 245, column: 16, scope: !23815)
!23818 = !DILocation(line: 247, column: 11, scope: !23815)
!23819 = !DILocation(line: 247, column: 3, scope: !23815)
!23820 = !DILocation(line: 253, column: 7, scope: !23821)
!23821 = distinct !DILexicalBlock(scope: !23815, file: !23761, line: 248, column: 5)
!23822 = !DILocation(line: 255, column: 7, scope: !23821)
!23823 = !DILocation(line: 257, column: 1, scope: !23815)
!23824 = distinct !DISubprogram(name: "c_islower", scope: !23761, file: !23761, line: 260, type: !3614, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23825 = !DILocalVariable(name: "c", arg: 1, scope: !23824, file: !23761, line: 260, type: !7)
!23826 = !DILocation(line: 260, column: 16, scope: !23824)
!23827 = !DILocation(line: 262, column: 11, scope: !23824)
!23828 = !DILocation(line: 262, column: 3, scope: !23824)
!23829 = !DILocation(line: 265, column: 7, scope: !23830)
!23830 = distinct !DILexicalBlock(scope: !23824, file: !23761, line: 263, column: 5)
!23831 = !DILocation(line: 267, column: 7, scope: !23830)
!23832 = !DILocation(line: 269, column: 1, scope: !23824)
!23833 = distinct !DISubprogram(name: "c_isprint", scope: !23761, file: !23761, line: 272, type: !3614, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23834 = !DILocalVariable(name: "c", arg: 1, scope: !23833, file: !23761, line: 272, type: !7)
!23835 = !DILocation(line: 272, column: 16, scope: !23833)
!23836 = !DILocation(line: 274, column: 11, scope: !23833)
!23837 = !DILocation(line: 274, column: 3, scope: !23833)
!23838 = !DILocation(line: 281, column: 7, scope: !23839)
!23839 = distinct !DILexicalBlock(scope: !23833, file: !23761, line: 275, column: 5)
!23840 = !DILocation(line: 283, column: 7, scope: !23839)
!23841 = !DILocation(line: 285, column: 1, scope: !23833)
!23842 = distinct !DISubprogram(name: "c_ispunct", scope: !23761, file: !23761, line: 288, type: !3614, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23843 = !DILocalVariable(name: "c", arg: 1, scope: !23842, file: !23761, line: 288, type: !7)
!23844 = !DILocation(line: 288, column: 16, scope: !23842)
!23845 = !DILocation(line: 290, column: 11, scope: !23842)
!23846 = !DILocation(line: 290, column: 3, scope: !23842)
!23847 = !DILocation(line: 293, column: 7, scope: !23848)
!23848 = distinct !DILexicalBlock(scope: !23842, file: !23761, line: 291, column: 5)
!23849 = !DILocation(line: 295, column: 7, scope: !23848)
!23850 = !DILocation(line: 297, column: 1, scope: !23842)
!23851 = distinct !DISubprogram(name: "c_isspace", scope: !23761, file: !23761, line: 300, type: !3614, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23852 = !DILocalVariable(name: "c", arg: 1, scope: !23851, file: !23761, line: 300, type: !7)
!23853 = !DILocation(line: 300, column: 16, scope: !23851)
!23854 = !DILocation(line: 302, column: 11, scope: !23851)
!23855 = !DILocation(line: 302, column: 3, scope: !23851)
!23856 = !DILocation(line: 305, column: 7, scope: !23857)
!23857 = distinct !DILexicalBlock(scope: !23851, file: !23761, line: 303, column: 5)
!23858 = !DILocation(line: 307, column: 7, scope: !23857)
!23859 = !DILocation(line: 309, column: 1, scope: !23851)
!23860 = distinct !DISubprogram(name: "c_isupper", scope: !23761, file: !23761, line: 312, type: !3614, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23861 = !DILocalVariable(name: "c", arg: 1, scope: !23860, file: !23761, line: 312, type: !7)
!23862 = !DILocation(line: 312, column: 16, scope: !23860)
!23863 = !DILocation(line: 314, column: 11, scope: !23860)
!23864 = !DILocation(line: 314, column: 3, scope: !23860)
!23865 = !DILocation(line: 317, column: 7, scope: !23866)
!23866 = distinct !DILexicalBlock(scope: !23860, file: !23761, line: 315, column: 5)
!23867 = !DILocation(line: 319, column: 7, scope: !23866)
!23868 = !DILocation(line: 321, column: 1, scope: !23860)
!23869 = distinct !DISubprogram(name: "c_isxdigit", scope: !23761, file: !23761, line: 324, type: !3614, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23870 = !DILocalVariable(name: "c", arg: 1, scope: !23869, file: !23761, line: 324, type: !7)
!23871 = !DILocation(line: 324, column: 17, scope: !23869)
!23872 = !DILocation(line: 326, column: 11, scope: !23869)
!23873 = !DILocation(line: 326, column: 3, scope: !23869)
!23874 = !DILocation(line: 330, column: 7, scope: !23875)
!23875 = distinct !DILexicalBlock(scope: !23869, file: !23761, line: 327, column: 5)
!23876 = !DILocation(line: 332, column: 7, scope: !23875)
!23877 = !DILocation(line: 334, column: 1, scope: !23869)
!23878 = distinct !DISubprogram(name: "c_tolower", scope: !23761, file: !23761, line: 337, type: !14875, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23879 = !DILocalVariable(name: "c", arg: 1, scope: !23878, file: !23761, line: 337, type: !7)
!23880 = !DILocation(line: 337, column: 16, scope: !23878)
!23881 = !DILocation(line: 339, column: 11, scope: !23878)
!23882 = !DILocation(line: 339, column: 3, scope: !23878)
!23883 = !DILocation(line: 342, column: 14, scope: !23884)
!23884 = distinct !DILexicalBlock(scope: !23878, file: !23761, line: 340, column: 5)
!23885 = !DILocation(line: 342, column: 16, scope: !23884)
!23886 = !DILocation(line: 342, column: 22, scope: !23884)
!23887 = !DILocation(line: 342, column: 7, scope: !23884)
!23888 = !DILocation(line: 344, column: 14, scope: !23884)
!23889 = !DILocation(line: 344, column: 7, scope: !23884)
!23890 = !DILocation(line: 346, column: 1, scope: !23878)
!23891 = distinct !DISubprogram(name: "c_toupper", scope: !23761, file: !23761, line: 349, type: !14875, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !216)
!23892 = !DILocalVariable(name: "c", arg: 1, scope: !23891, file: !23761, line: 349, type: !7)
!23893 = !DILocation(line: 349, column: 16, scope: !23891)
!23894 = !DILocation(line: 351, column: 11, scope: !23891)
!23895 = !DILocation(line: 351, column: 3, scope: !23891)
!23896 = !DILocation(line: 354, column: 14, scope: !23897)
!23897 = distinct !DILexicalBlock(scope: !23891, file: !23761, line: 352, column: 5)
!23898 = !DILocation(line: 354, column: 16, scope: !23897)
!23899 = !DILocation(line: 354, column: 22, scope: !23897)
!23900 = !DILocation(line: 354, column: 7, scope: !23897)
!23901 = !DILocation(line: 356, column: 14, scope: !23897)
!23902 = !DILocation(line: 356, column: 7, scope: !23897)
!23903 = !DILocation(line: 358, column: 1, scope: !23891)
!23904 = distinct !DISubprogram(name: "fopen_safer", scope: !23905, file: !23905, line: 31, type: !23906, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2038, retainedNodes: !216)
!23905 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!23906 = !DISubroutineType(types: !23907)
!23907 = !{!2041, !116, !116}
!23908 = !DILocalVariable(name: "file", arg: 1, scope: !23904, file: !23905, line: 31, type: !116)
!23909 = !DILocation(line: 31, column: 26, scope: !23904)
!23910 = !DILocalVariable(name: "mode", arg: 2, scope: !23904, file: !23905, line: 31, type: !116)
!23911 = !DILocation(line: 31, column: 44, scope: !23904)
!23912 = !DILocalVariable(name: "fp", scope: !23904, file: !23905, line: 33, type: !2041)
!23913 = !DILocation(line: 33, column: 9, scope: !23904)
!23914 = !DILocation(line: 33, column: 21, scope: !23904)
!23915 = !DILocation(line: 33, column: 27, scope: !23904)
!23916 = !DILocation(line: 33, column: 14, scope: !23904)
!23917 = !DILocation(line: 35, column: 7, scope: !23918)
!23918 = distinct !DILexicalBlock(scope: !23904, file: !23905, line: 35, column: 7)
!23919 = !DILocation(line: 35, column: 7, scope: !23904)
!23920 = !DILocalVariable(name: "fd", scope: !23921, file: !23905, line: 37, type: !7)
!23921 = distinct !DILexicalBlock(scope: !23918, file: !23905, line: 36, column: 5)
!23922 = !DILocation(line: 37, column: 11, scope: !23921)
!23923 = !DILocation(line: 37, column: 24, scope: !23921)
!23924 = !DILocation(line: 37, column: 16, scope: !23921)
!23925 = !DILocation(line: 39, column: 16, scope: !23926)
!23926 = distinct !DILexicalBlock(scope: !23921, file: !23905, line: 39, column: 11)
!23927 = !DILocation(line: 39, column: 13, scope: !23926)
!23928 = !DILocation(line: 39, column: 19, scope: !23926)
!23929 = !DILocation(line: 39, column: 22, scope: !23926)
!23930 = !DILocation(line: 39, column: 25, scope: !23926)
!23931 = !DILocation(line: 39, column: 11, scope: !23921)
!23932 = !DILocalVariable(name: "f", scope: !23933, file: !23905, line: 41, type: !7)
!23933 = distinct !DILexicalBlock(scope: !23926, file: !23905, line: 40, column: 9)
!23934 = !DILocation(line: 41, column: 15, scope: !23933)
!23935 = !DILocation(line: 41, column: 30, scope: !23933)
!23936 = !DILocation(line: 41, column: 19, scope: !23933)
!23937 = !DILocation(line: 43, column: 15, scope: !23938)
!23938 = distinct !DILexicalBlock(scope: !23933, file: !23905, line: 43, column: 15)
!23939 = !DILocation(line: 43, column: 17, scope: !23938)
!23940 = !DILocation(line: 43, column: 15, scope: !23933)
!23941 = !DILocalVariable(name: "e", scope: !23942, file: !23905, line: 45, type: !7)
!23942 = distinct !DILexicalBlock(scope: !23938, file: !23905, line: 44, column: 13)
!23943 = !DILocation(line: 45, column: 19, scope: !23942)
!23944 = !DILocation(line: 45, column: 23, scope: !23942)
!23945 = !DILocation(line: 46, column: 23, scope: !23942)
!23946 = !DILocation(line: 46, column: 15, scope: !23942)
!23947 = !DILocation(line: 47, column: 23, scope: !23942)
!23948 = !DILocation(line: 47, column: 15, scope: !23942)
!23949 = !DILocation(line: 47, column: 21, scope: !23942)
!23950 = !DILocation(line: 48, column: 15, scope: !23942)
!23951 = !DILocation(line: 51, column: 23, scope: !23952)
!23952 = distinct !DILexicalBlock(scope: !23933, file: !23905, line: 51, column: 15)
!23953 = !DILocation(line: 51, column: 15, scope: !23952)
!23954 = !DILocation(line: 51, column: 27, scope: !23952)
!23955 = !DILocation(line: 52, column: 15, scope: !23952)
!23956 = !DILocation(line: 52, column: 34, scope: !23952)
!23957 = !DILocation(line: 52, column: 37, scope: !23952)
!23958 = !DILocation(line: 52, column: 26, scope: !23952)
!23959 = !DILocation(line: 52, column: 24, scope: !23952)
!23960 = !DILocation(line: 51, column: 15, scope: !23933)
!23961 = !DILocalVariable(name: "e", scope: !23962, file: !23905, line: 54, type: !7)
!23962 = distinct !DILexicalBlock(scope: !23952, file: !23905, line: 53, column: 13)
!23963 = !DILocation(line: 54, column: 19, scope: !23962)
!23964 = !DILocation(line: 54, column: 23, scope: !23962)
!23965 = !DILocation(line: 55, column: 22, scope: !23962)
!23966 = !DILocation(line: 55, column: 15, scope: !23962)
!23967 = !DILocation(line: 56, column: 23, scope: !23962)
!23968 = !DILocation(line: 56, column: 15, scope: !23962)
!23969 = !DILocation(line: 56, column: 21, scope: !23962)
!23970 = !DILocation(line: 57, column: 15, scope: !23962)
!23971 = !DILocation(line: 59, column: 9, scope: !23933)
!23972 = !DILocation(line: 60, column: 5, scope: !23921)
!23973 = !DILocation(line: 62, column: 10, scope: !23904)
!23974 = !DILocation(line: 62, column: 3, scope: !23904)
!23975 = !DILocation(line: 63, column: 1, scope: !23904)
