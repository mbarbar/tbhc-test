; ModuleID = 'mv.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.timespec = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rm_options = type { i8, i32, i8, i8, i8, %struct.timespec*, i8, i8, i8, i8 }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, %struct.__dirstream*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [0 x i8] }
%struct.__dirstream = type opaque
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.error_context = type { void (%struct.error_context*, i8*, ...)*, i8* (%struct.error_context*, i8*)*, void (%struct.error_context*, i8*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.20 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32, %struct.__acl_ext*, %struct.__acl_ext*, i8 }
%struct.__acl_ext = type opaque
%struct.__mbstate_t = type { i32, %union.anon.57 }
%union.anon.57 = type { i32 }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.147 }
%union.anon.147 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.cycle_check_state = type { %struct.timespec, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.__acl_entry_ext = type opaque
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [418 x i8] c"      --backup[=CONTROL]       make a backup of each existing destination file\0A  -b                           like --backup but does not accept an argument\0A  -f, --force                  do not prompt before overwriting\0A  -i, --interactive            prompt before overwrite\0A  -n, --no-clobber             do not overwrite an existing file\0AIf you specify more than one of -i, -f, -n, only the final one takes effect.\0A\00", align 1
@.str.4 = private unnamed_addr constant [184 x i8] c"      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A\00", align 1
@.str.5 = private unnamed_addr constant [527 x i8] c"  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory    treat DEST as a normal file\0A  -u, --update                 move only when the SOURCE file is newer\0A                                 than the destination file or when the\0A                                 destination file is missing\0A  -v, --verbose                explain what is being done\0A  -Z, --context                set SELinux security context of destination\0A                                 file to default type\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.39 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.42 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.29 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.28 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"bfint:uvS:TZ\00", align 1
@long_options = internal constant [14 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !63, !ctir !121
@optarg = external dso_local global i8*, align 8, !ctir !9
@remove_trailing_slashes = internal global i8 0, align 1, !dbg !237, !ctir !120
@.str.13 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Mike Parker\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external dso_local global i32, align 4, !ctir !7
@.str.20 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"2 <= n_files\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"src/mv.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"options --backup and --no-clobber are mutually exclusive\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"VALID_STATUS (status)\00", align 1
@__PRETTY_FUNCTION__.do_move = private unnamed_addr constant [69 x i8] c"_Bool do_move(const char *, const char *, const struct cp_options *)\00", align 1
@rm_option_init.dev_ino_buf = internal global %struct.timespec zeroinitializer, align 8, !dbg !239
@.str.60 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"no-clobber\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.63 = private unnamed_addr constant [17 x i8] c"VALID_STATUS (s)\00", align 1
@.str.2.64 = private unnamed_addr constant [13 x i8] c"src/remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [60 x i8] c"enum RM_status rm(char *const *, const struct rm_options *)\00", align 1
@.str.3.65 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.4.66 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.5.67 = private unnamed_addr constant [51 x i8] c"refusing to remove %s or %s directory: skipping %s\00", align 1
@.str.6.68 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7.69 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.8.70 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.9.71 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.10.72 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.11.73 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.12.74 = private unnamed_addr constant [31 x i8] c"failed to stat %s: skipping %s\00", align 1
@.str.13.75 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str.14.76 = private unnamed_addr constant [37 x i8] c"and --preserve-root=all is in effect\00", align 1
@.str.15.77 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.16.78 = private unnamed_addr constant [21 x i8] c"traversal failed: %s\00", align 1
@.str.17.79 = private unnamed_addr constant [56 x i8] c"unexpected failure: fts_info=%d: %s\0Aplease report to %s\00", align 1
@.str.18.80 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.23.81 = private unnamed_addr constant [22 x i8] c"removed directory %s\0A\00", align 1
@.str.24.82 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.19.83 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str.20.84 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str.21.85 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str.22.86 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@.str.87 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.88 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.89 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.90 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.95 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.96 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !242, !ctir !115
@top_level_dst_name = internal global i8* null, align 8, !dbg !516, !ctir !115
@.str.12.97 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.98 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.99 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.100 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.101 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.102 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.103 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.104 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.105 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.107 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.108 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.109 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.110 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.111 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.112 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.113 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.114 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.115 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.116 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.117 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.118 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.119 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.120 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.121 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.122 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.123 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.124 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.125 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.126 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.127 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.128 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.129 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.130 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.131 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.132 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.133 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.134 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.135 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.136 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.137 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !513
@.str.77 = private unnamed_addr constant [17 x i8] c"security.selinux\00", align 1
@.str.76 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.138 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.139 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.140 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !518
@write_zeros.nz = internal global i64 131072, align 8, !dbg !521
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !523
@.str.59.141 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.142 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.143 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.144 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.145 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.146 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.147 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.148 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.149 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.150 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.151 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.152 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.153 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.154 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !528, !ctir !195
@.str.169 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.170 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.171 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !554, !ctir !569
@Version = dso_local global i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.178, i32 0, i32 0), align 8, !dbg !587, !ctir !115
@.str.178 = private unnamed_addr constant [15 x i8] c"8.31.48-f2dfea\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.182 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.185 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !593, !ctir !115
@.str.192 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.193 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.194 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.195 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.205, i32 0, i32 0), i8* null], align 16, !dbg !630, !ctir !644
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !650, !ctir !640
@.str.2.198 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.199 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.200 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.201 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.202 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.203 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.204 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.205 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.208 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.209 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !653, !ctir !115
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !658
@.str.214 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.215 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.216 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.217 = internal global i8* null, align 8, !dbg !695, !ctir !115
@ignore_EPIPE = internal global i8 0, align 1, !dbg !737, !ctir !120
@.str.220 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.221 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.222 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !740, !ctir !692
@.str.245 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str.1.246 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str.2.247 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.3.248 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str.4.249 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str.5.250 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str.6.251 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str.7.252 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str.8.253 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str.9.254 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.10.255 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.11.256 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str.265 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.266 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.267 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.268 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !747, !ctir !774
@program_name = dso_local global i8* null, align 8, !dbg !882, !ctir !115
@.str.295 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.297 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !9
@program_invocation_name = external dso_local global i8*, align 8, !ctir !9
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.303, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.305, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.306, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.307, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.311, i32 0, i32 0), i8* null], align 16, !dbg !923, !ctir !943
@.str.302 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.303 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.304 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.305 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.306 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.307 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.308 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.309 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.310 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.311 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1051, !ctir !946
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1053, !ctir !953
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1055, !ctir !953
@.str.10.312 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.313 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.314 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.315 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.316 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.317 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.318 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.319 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.320 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1059, !ctir !981
@nslots = internal global i32 1, align 4, !dbg !1061, !ctir !7
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1057, !ctir !561
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1063, !ctir !982
@.str.335 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.340 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !1065, !ctir !1092
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1108, !ctir !1119
@.str.2.357 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.358 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.359 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1132
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1178
@utimensat_works_really = internal global i32 0, align 4, !dbg !1180, !ctir !7
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1230, !ctir !7
@.str.372 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.373 = private unnamed_addr constant [32 x i8] c"unable to display error message\00", align 1
@.str.374 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.375 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.376 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.377 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.378 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.379 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.380 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.381 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.382 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.383 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.384 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.385 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.386 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.387 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.388 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.389 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.392 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.393 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.394 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.395 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.396 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.397 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.398 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1233, !ctir !1238
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1243
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1253
@.str.1.419 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.420 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.423 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.424 = private unnamed_addr constant [11 x i8] c"lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.437 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.438 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.443 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1255, !ctir !646
@.str.456 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.457 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.458 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.459 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.460 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.473 = private unnamed_addr constant [24 x i8] c"state->magic == 9827862\00", align 1
@.str.1.474 = private unnamed_addr constant [18 x i8] c"lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@.str.481 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.482 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.495 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.496 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.507 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.508 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.509 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.510 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1307

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2984 !ctir !113 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2989, metadata !DIExpression()), !dbg !2990
  %0 = load i32, i32* %status.addr, align 4, !dbg !2991, !tbaa !2985
  %cmp = icmp ne i32 %0, 0, !dbg !2993
  br i1 %cmp, label %if.then, label %if.else, !dbg !2994

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2995

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2996, !tbaa !2998
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #10, !dbg !2996
  %2 = load i8*, i8** @program_name, align 8, !dbg !2996, !tbaa !2998
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2996
  br label %do.end, !dbg !2996

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2996

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1, i64 0, i64 0)) #10, !dbg !3000
  %3 = load i8*, i8** @program_name, align 8, !dbg !3002, !tbaa !2998
  %4 = load i8*, i8** @program_name, align 8, !dbg !3003, !tbaa !2998
  %5 = load i8*, i8** @program_name, align 8, !dbg !3004, !tbaa !2998
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5), !dbg !3005
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !3006
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3006, !tbaa !2998
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %6), !dbg !3006
  call void @emit_mandatory_arg_note(), !dbg !3007
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([418 x i8], [418 x i8]* @.str.3, i64 0, i64 0)) #10, !dbg !3008
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3008, !tbaa !2998
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %7), !dbg !3008
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !3009
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3009, !tbaa !2998
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %8), !dbg !3009
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([527 x i8], [527 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !3010
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3010, !tbaa !2998
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %9), !dbg !3010
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !3011
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3011, !tbaa !2998
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %10), !dbg !3011
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !3012
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3012, !tbaa !2998
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %11), !dbg !3012
  call void @emit_backup_suffix_note(), !dbg !3013
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)), !dbg !3014
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %12 = load i32, i32* %status.addr, align 4, !dbg !3015, !tbaa !2985
  call void @exit(i32 %12) #13, !dbg !3016
  unreachable, !dbg !3016
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !3017 !ctir !134 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.28, i64 0, i64 0)) #10, !dbg !3018
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3018, !tbaa !2998
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !3018
  ret void, !dbg !3019
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !3020 !ctir !134 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !3021
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3021, !tbaa !2998
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !3021
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !3022
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3022, !tbaa !2998
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !3022
  ret void, !dbg !3023
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !142 !ctir !136 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !138
  %node = alloca i8*, align 8, !ctir !115
  %map_prog = alloca %struct.infomap*, align 8, !ctir !149
  %lc_messages = alloca i8*, align 8, !ctir !115
  store i8* %program, i8** %program.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !3024, metadata !DIExpression()), !dbg !3025
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !3026, metadata !DIExpression()), !dbg !3027
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !3027
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !3027
  call void @llvm.dbg.declare(metadata i8** %node, metadata !3028, metadata !DIExpression()), !dbg !3029
  %1 = load i8*, i8** %program.addr, align 8, !dbg !3030, !tbaa !2998
  store i8* %1, i8** %node, align 8, !dbg !3029, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !3031, metadata !DIExpression()), !dbg !3032
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !3033
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !3032, !tbaa !2998
  br label %while.cond, !dbg !3034

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3035, !tbaa !2998
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !3036, !ctir !139
  %3 = load i8*, i8** %program1, align 8, !dbg !3036, !tbaa !3037, !ctir !115
  %tobool = icmp ne i8* %3, null, !dbg !3035
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3039

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !3040, !tbaa !2998
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3040, !tbaa !2998
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !3040, !ctir !139
  %6 = load i8*, i8** %program2, align 8, !dbg !3040, !tbaa !3037, !ctir !115
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !3040
  %cmp = icmp eq i32 %call, 0, !dbg !3040
  %lnot = xor i1 %cmp, true, !dbg !3041
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !3042
  br i1 %7, label %while.body, label %while.end, !dbg !3034

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3043, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !3043
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !3043, !tbaa !2998
  br label %while.cond, !dbg !3034, !llvm.loop !3044

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3045, !tbaa !2998
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !3047, !ctir !139
  %10 = load i8*, i8** %node3, align 8, !dbg !3047, !tbaa !3048, !ctir !115
  %tobool4 = icmp ne i8* %10, null, !dbg !3045
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3049

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3050, !tbaa !2998
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !3051, !ctir !139
  %12 = load i8*, i8** %node5, align 8, !dbg !3051, !tbaa !3048, !ctir !115
  store i8* %12, i8** %node, align 8, !dbg !3052, !tbaa !2998
  br label %if.end, !dbg !3053

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !3054
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0)), !dbg !3055
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !3056, metadata !DIExpression()), !dbg !3057
  %call8 = call i8* @setlocale(i32 5, i8* null) #10, !dbg !3058
  store i8* %call8, i8** %lc_messages, align 8, !dbg !3057, !tbaa !2998
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !3059, !tbaa !2998
  %tobool9 = icmp ne i8* %13, null, !dbg !3059
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !3061

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !3062, !tbaa !2998
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #14, !dbg !3062
  %tobool11 = icmp ne i32 %call10, 0, !dbg !3062
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !3063

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.42, i64 0, i64 0)) #10, !dbg !3064
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3064, !tbaa !2998
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !3064
  br label %if.end15, !dbg !3066

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !3067
  %16 = load i8*, i8** %program.addr, align 8, !dbg !3068, !tbaa !2998
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0), i8* %16), !dbg !3069
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !3070
  %17 = load i8*, i8** %node, align 8, !dbg !3071, !tbaa !2998
  %18 = load i8*, i8** %node, align 8, !dbg !3072, !tbaa !2998
  %19 = load i8*, i8** %program.addr, align 8, !dbg !3073, !tbaa !2998
  %cmp19 = icmp eq i8* %18, %19, !dbg !3074
  %20 = zext i1 %cmp19 to i64, !dbg !3072
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), !dbg !3072
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !3075
  ret void, !dbg !3076
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !3077 !ctir !117 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %c = alloca i32, align 4, !ctir !7
  %ok = alloca i8, align 1, !ctir !120
  %make_backups = alloca i8, align 1, !ctir !120
  %backup_suffix = alloca i8*, align 8, !ctir !115
  %version_control_string = alloca i8*, align 8, !ctir !9
  %x = alloca %struct.cp_options, align 8, !ctir !153
  %target_directory = alloca i8*, align 8, !ctir !9
  %no_target_directory = alloca i8, align 1, !ctir !120
  %n_files = alloca i32, align 4, !ctir !7
  %file = alloca i8**, align 8, !ctir !119
  %selinux_enabled = alloca i8, align 1, !ctir !120
  %st = alloca %struct.stat, align 8, !ctir !3078
  %i = alloca i32, align 4, !ctir !7
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !3099, metadata !DIExpression()), !dbg !3100
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !3101, metadata !DIExpression()), !dbg !3102
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3103, metadata !DIExpression()), !dbg !3104
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3105, metadata !DIExpression()), !dbg !3106
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !3107, metadata !DIExpression()), !dbg !3108
  store i8 0, i8* %make_backups, align 1, !dbg !3108, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !3111, metadata !DIExpression()), !dbg !3112
  store i8* null, i8** %backup_suffix, align 8, !dbg !3112, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !3113, metadata !DIExpression()), !dbg !3114
  store i8* null, i8** %version_control_string, align 8, !dbg !3114, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !3115, metadata !DIExpression()), !dbg !3116
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !3117, metadata !DIExpression()), !dbg !3118
  store i8* null, i8** %target_directory, align 8, !dbg !3118, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !3119, metadata !DIExpression()), !dbg !3120
  store i8 0, i8* %no_target_directory, align 1, !dbg !3120, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !3121, metadata !DIExpression()), !dbg !3122
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !3123, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !3125, metadata !DIExpression()), !dbg !3126
  store i8 0, i8* %selinux_enabled, align 1, !dbg !3126, !tbaa !3109
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !3127, !tbaa !2998
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !3127, !ctir !119
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !3127, !tbaa !2998
  call void @set_program_name(i8* %1), !dbg !3128
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0)) #10, !dbg !3129
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !3130
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #10, !dbg !3131
  %call3 = call i32 @atexit(void ()* @close_stdin) #10, !dbg !3132
  call void @cp_option_init(%struct.cp_options* %x), !dbg !3133
  %call4 = call i32 @priv_set_remove_linkdir(), !dbg !3134
  br label %while.cond, !dbg !3135

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !3136, !tbaa !2985
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !3137, !tbaa !2998
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), %struct.option* getelementptr inbounds ([14 x %struct.option], [14 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #10, !dbg !3138
  store i32 %call5, i32* %c, align 4, !dbg !3139, !tbaa !2985
  %cmp = icmp ne i32 %call5, -1, !dbg !3140
  br i1 %cmp, label %while.body, label %while.end, !dbg !3135

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %c, align 4, !dbg !3141, !tbaa !2985
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 102, label %sw.bb6
    i32 105, label %sw.bb7
    i32 110, label %sw.bb9
    i32 128, label %sw.bb11
    i32 116, label %sw.bb12
    i32 84, label %sw.bb29
    i32 117, label %sw.bb30
    i32 118, label %sw.bb31
    i32 83, label %sw.bb32
    i32 90, label %sw.bb33
    i32 -130, label %sw.bb37
    i32 -131, label %sw.bb38
  ], !dbg !3143

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !3144, !tbaa !3109
  %5 = load i8*, i8** @optarg, align 8, !dbg !3146, !tbaa !2998
  %tobool = icmp ne i8* %5, null, !dbg !3146
  br i1 %tobool, label %if.then, label %if.end, !dbg !3148

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !3149, !tbaa !2998
  store i8* %6, i8** %version_control_string, align 8, !dbg !3150, !tbaa !2998
  br label %if.end, !dbg !3151

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !3152

sw.bb6:                                           ; preds = %while.body
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3153, !ctir !153
  store i32 1, i32* %interactive, align 8, !dbg !3154, !tbaa !3155, !ctir !83
  br label %sw.epilog, !dbg !3157

sw.bb7:                                           ; preds = %while.body
  %interactive8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3158, !ctir !153
  store i32 3, i32* %interactive8, align 8, !dbg !3159, !tbaa !3155, !ctir !83
  br label %sw.epilog, !dbg !3160

sw.bb9:                                           ; preds = %while.body
  %interactive10 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3161, !ctir !153
  store i32 2, i32* %interactive10, align 8, !dbg !3162, !tbaa !3155, !ctir !83
  br label %sw.epilog, !dbg !3163

sw.bb11:                                          ; preds = %while.body
  store i8 1, i8* @remove_trailing_slashes, align 1, !dbg !3164, !tbaa !3109
  br label %sw.epilog, !dbg !3165

sw.bb12:                                          ; preds = %while.body
  %7 = load i8*, i8** %target_directory, align 8, !dbg !3166, !tbaa !2998
  %tobool13 = icmp ne i8* %7, null, !dbg !3166
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !3168

if.then14:                                        ; preds = %sw.bb12
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !3169
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call15), !dbg !3169
  unreachable, !dbg !3169

if.else:                                          ; preds = %sw.bb12
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3170, metadata !DIExpression()), !dbg !3172
  %8 = load i8*, i8** @optarg, align 8, !dbg !3173, !tbaa !2998
  %call16 = call i32 @stat(i8* %8, %struct.stat* %st) #10, !dbg !3175
  %cmp17 = icmp ne i32 %call16, 0, !dbg !3176
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !3177

if.then18:                                        ; preds = %if.else
  %call19 = call i32* @__errno_location() #15, !dbg !3178
  %9 = load i32, i32* %call19, align 4, !dbg !3178, !tbaa !2985, !ctir !7
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !3178
  %10 = load i8*, i8** @optarg, align 8, !dbg !3178, !tbaa !2998
  %call21 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3178
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %9, i8* %call20, i8* %call21), !dbg !3178
  unreachable, !dbg !3178

if.end22:                                         ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3179, !ctir !3078
  %11 = load i32, i32* %st_mode, align 8, !dbg !3179, !tbaa !3181, !ctir !133
  %and = and i32 %11, 61440, !dbg !3179
  %cmp23 = icmp eq i32 %and, 16384, !dbg !3179
  br i1 %cmp23, label %if.end27, label %if.then24, !dbg !3185

if.then24:                                        ; preds = %if.end22
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !3186
  %12 = load i8*, i8** @optarg, align 8, !dbg !3186, !tbaa !2998
  %call26 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !3186
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !3186
  unreachable, !dbg !3186

if.end27:                                         ; preds = %if.end22
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  %13 = load i8*, i8** @optarg, align 8, !dbg !3187, !tbaa !2998
  store i8* %13, i8** %target_directory, align 8, !dbg !3188, !tbaa !2998
  br label %sw.epilog, !dbg !3189

sw.bb29:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !3190, !tbaa !3109
  br label %sw.epilog, !dbg !3191

sw.bb30:                                          ; preds = %while.body
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !3192, !ctir !153
  store i8 1, i8* %update, align 1, !dbg !3193, !tbaa !3194, !ctir !120
  br label %sw.epilog, !dbg !3195

sw.bb31:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !3196, !ctir !153
  store i8 1, i8* %verbose, align 2, !dbg !3197, !tbaa !3198, !ctir !120
  br label %sw.epilog, !dbg !3199

sw.bb32:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !3200, !tbaa !3109
  %14 = load i8*, i8** @optarg, align 8, !dbg !3201, !tbaa !2998
  store i8* %14, i8** %backup_suffix, align 8, !dbg !3202, !tbaa !2998
  br label %sw.epilog, !dbg !3203

sw.bb33:                                          ; preds = %while.body
  %15 = load i8, i8* %selinux_enabled, align 1, !dbg !3204, !tbaa !3109
  %tobool34 = trunc i8 %15 to i1, !dbg !3204
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !3206

if.then35:                                        ; preds = %sw.bb33
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !3207, !ctir !153
  store i8 0, i8* %preserve_security_context, align 1, !dbg !3209, !tbaa !3210, !ctir !120
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !3211, !ctir !153
  store i8 1, i8* %set_security_context, align 1, !dbg !3212, !tbaa !3213, !ctir !120
  br label %if.end36, !dbg !3214

if.end36:                                         ; preds = %if.then35, %sw.bb33
  br label %sw.epilog, !dbg !3215

sw.bb37:                                          ; preds = %while.body
  call void @usage(i32 0) #16, !dbg !3216
  unreachable, !dbg !3216

sw.bb38:                                          ; preds = %while.body
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3217, !tbaa !2998
  %17 = load i8*, i8** @Version, align 8, !dbg !3217, !tbaa !2998
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8* null), !dbg !3217
  call void @exit(i32 0) #13, !dbg !3217
  unreachable, !dbg !3217

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #16, !dbg !3218
  unreachable, !dbg !3218

sw.epilog:                                        ; preds = %if.end36, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %if.end28, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !3135, !llvm.loop !3219

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* %argc.addr, align 4, !dbg !3221, !tbaa !2985
  %19 = load i32, i32* @optind, align 4, !dbg !3222, !tbaa !2985
  %sub = sub nsw i32 %18, %19, !dbg !3223
  store i32 %sub, i32* %n_files, align 4, !dbg !3224, !tbaa !2985
  %20 = load i8**, i8*** %argv.addr, align 8, !dbg !3225, !tbaa !2998
  %21 = load i32, i32* @optind, align 4, !dbg !3226, !tbaa !2985
  %idx.ext = sext i32 %21 to i64, !dbg !3227
  %add.ptr = getelementptr inbounds i8*, i8** %20, i64 %idx.ext, !dbg !3227
  store i8** %add.ptr, i8*** %file, align 8, !dbg !3228, !tbaa !2998
  %22 = load i32, i32* %n_files, align 4, !dbg !3229, !tbaa !2985
  %23 = load i8*, i8** %target_directory, align 8, !dbg !3231, !tbaa !2998
  %tobool39 = icmp ne i8* %23, null, !dbg !3232
  %lnot = xor i1 %tobool39, true, !dbg !3232
  %lnot.ext = zext i1 %lnot to i32, !dbg !3232
  %cmp40 = icmp sle i32 %22, %lnot.ext, !dbg !3233
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !3234

if.then41:                                        ; preds = %while.end
  %24 = load i32, i32* %n_files, align 4, !dbg !3235, !tbaa !2985
  %cmp42 = icmp sle i32 %24, 0, !dbg !3238
  br i1 %cmp42, label %if.then43, label %if.else45, !dbg !3239

if.then43:                                        ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #10, !dbg !3240
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44), !dbg !3241
  br label %if.end49, !dbg !3241

if.else45:                                        ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)) #10, !dbg !3242
  %25 = load i8**, i8*** %file, align 8, !dbg !3243, !tbaa !2998
  %arrayidx47 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !3243, !ctir !119
  %26 = load i8*, i8** %arrayidx47, align 8, !dbg !3243, !tbaa !2998
  %call48 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !3243
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46, i8* %call48), !dbg !3244
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then43
  call void @usage(i32 1) #16, !dbg !3245
  unreachable, !dbg !3245

if.end50:                                         ; preds = %while.end
  %27 = load i8, i8* %no_target_directory, align 1, !dbg !3246, !tbaa !3109
  %tobool51 = trunc i8 %27 to i1, !dbg !3246
  br i1 %tobool51, label %if.then52, label %if.else63, !dbg !3248

if.then52:                                        ; preds = %if.end50
  %28 = load i8*, i8** %target_directory, align 8, !dbg !3249, !tbaa !2998
  %tobool53 = icmp ne i8* %28, null, !dbg !3249
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !3252

if.then54:                                        ; preds = %if.then52
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !3253
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call55), !dbg !3253
  unreachable, !dbg !3253

if.end56:                                         ; preds = %if.then52
  %29 = load i32, i32* %n_files, align 4, !dbg !3254, !tbaa !2985
  %cmp57 = icmp slt i32 2, %29, !dbg !3256
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !3257

if.then58:                                        ; preds = %if.end56
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !3258
  %30 = load i8**, i8*** %file, align 8, !dbg !3260, !tbaa !2998
  %arrayidx60 = getelementptr inbounds i8*, i8** %30, i64 2, !dbg !3260, !ctir !119
  %31 = load i8*, i8** %arrayidx60, align 8, !dbg !3260, !tbaa !2998
  %call61 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !3260
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call61), !dbg !3261
  call void @usage(i32 1) #16, !dbg !3262
  unreachable, !dbg !3262

if.end62:                                         ; preds = %if.end56
  br label %if.end98, !dbg !3263

if.else63:                                        ; preds = %if.end50
  %32 = load i8*, i8** %target_directory, align 8, !dbg !3264, !tbaa !2998
  %tobool64 = icmp ne i8* %32, null, !dbg !3264
  br i1 %tobool64, label %if.end97, label %if.then65, !dbg !3266

if.then65:                                        ; preds = %if.else63
  %33 = load i32, i32* %n_files, align 4, !dbg !3267, !tbaa !2985
  %cmp66 = icmp sle i32 2, %33, !dbg !3267
  br i1 %cmp66, label %if.then67, label %if.else68, !dbg !3271

if.then67:                                        ; preds = %if.then65
  br label %if.end69, !dbg !3271

if.else68:                                        ; preds = %if.then65
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 457, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !3267
  unreachable, !dbg !3267

if.end69:                                         ; preds = %if.then67
  %34 = load i32, i32* %n_files, align 4, !dbg !3272, !tbaa !2985
  %cmp70 = icmp eq i32 %34, 2, !dbg !3274
  br i1 %cmp70, label %if.then71, label %if.end77, !dbg !3275

if.then71:                                        ; preds = %if.end69
  %35 = load i8**, i8*** %file, align 8, !dbg !3276, !tbaa !2998
  %arrayidx72 = getelementptr inbounds i8*, i8** %35, i64 0, !dbg !3276, !ctir !119
  %36 = load i8*, i8** %arrayidx72, align 8, !dbg !3276, !tbaa !2998
  %37 = load i8**, i8*** %file, align 8, !dbg !3277, !tbaa !2998
  %arrayidx73 = getelementptr inbounds i8*, i8** %37, i64 1, !dbg !3277, !ctir !119
  %38 = load i8*, i8** %arrayidx73, align 8, !dbg !3277, !tbaa !2998
  %call74 = call i32 @renameatu(i32 -100, i8* %36, i32 -100, i8* %38, i32 1), !dbg !3278
  %tobool75 = icmp ne i32 %call74, 0, !dbg !3278
  br i1 %tobool75, label %cond.true, label %cond.false, !dbg !3278

cond.true:                                        ; preds = %if.then71
  %call76 = call i32* @__errno_location() #15, !dbg !3279
  %39 = load i32, i32* %call76, align 4, !dbg !3279, !tbaa !2985, !ctir !7
  br label %cond.end, !dbg !3278

cond.false:                                       ; preds = %if.then71
  br label %cond.end, !dbg !3278

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ 0, %cond.false ], !dbg !3278
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3280, !ctir !153
  store i32 %cond, i32* %rename_errno, align 4, !dbg !3281, !tbaa !3282, !ctir !7
  br label %if.end77, !dbg !3283

if.end77:                                         ; preds = %cond.end, %if.end69
  %rename_errno78 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3284, !ctir !153
  %40 = load i32, i32* %rename_errno78, align 4, !dbg !3284, !tbaa !3282, !ctir !7
  %cmp79 = icmp ne i32 %40, 0, !dbg !3286
  br i1 %cmp79, label %land.lhs.true, label %if.else87, !dbg !3287

land.lhs.true:                                    ; preds = %if.end77
  %41 = load i8**, i8*** %file, align 8, !dbg !3288, !tbaa !2998
  %42 = load i32, i32* %n_files, align 4, !dbg !3289, !tbaa !2985
  %sub80 = sub nsw i32 %42, 1, !dbg !3290
  %idxprom = sext i32 %sub80 to i64, !dbg !3288
  %arrayidx81 = getelementptr inbounds i8*, i8** %41, i64 %idxprom, !dbg !3288, !ctir !119
  %43 = load i8*, i8** %arrayidx81, align 8, !dbg !3288, !tbaa !2998
  %call82 = call zeroext i1 @target_directory_operand(i8* %43), !dbg !3291
  br i1 %call82, label %if.then83, label %if.else87, !dbg !3292

if.then83:                                        ; preds = %land.lhs.true
  %rename_errno84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3293, !ctir !153
  store i32 -1, i32* %rename_errno84, align 4, !dbg !3295, !tbaa !3282, !ctir !7
  %44 = load i8**, i8*** %file, align 8, !dbg !3296, !tbaa !2998
  %45 = load i32, i32* %n_files, align 4, !dbg !3297, !tbaa !2985
  %dec = add nsw i32 %45, -1, !dbg !3297
  store i32 %dec, i32* %n_files, align 4, !dbg !3297, !tbaa !2985
  %idxprom85 = sext i32 %dec to i64, !dbg !3296
  %arrayidx86 = getelementptr inbounds i8*, i8** %44, i64 %idxprom85, !dbg !3296, !ctir !119
  %46 = load i8*, i8** %arrayidx86, align 8, !dbg !3296, !tbaa !2998
  store i8* %46, i8** %target_directory, align 8, !dbg !3298, !tbaa !2998
  br label %if.end96, !dbg !3299

if.else87:                                        ; preds = %land.lhs.true, %if.end77
  %47 = load i32, i32* %n_files, align 4, !dbg !3300, !tbaa !2985
  %cmp88 = icmp slt i32 2, %47, !dbg !3302
  br i1 %cmp88, label %if.then89, label %if.end95, !dbg !3303

if.then89:                                        ; preds = %if.else87
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !3304
  %48 = load i8**, i8*** %file, align 8, !dbg !3304, !tbaa !2998
  %49 = load i32, i32* %n_files, align 4, !dbg !3304, !tbaa !2985
  %sub91 = sub nsw i32 %49, 1, !dbg !3304
  %idxprom92 = sext i32 %sub91 to i64, !dbg !3304
  %arrayidx93 = getelementptr inbounds i8*, i8** %48, i64 %idxprom92, !dbg !3304, !ctir !119
  %50 = load i8*, i8** %arrayidx93, align 8, !dbg !3304, !tbaa !2998
  %call94 = call i8* @quotearg_style(i32 4, i8* %50), !dbg !3304
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call90, i8* %call94), !dbg !3304
  unreachable, !dbg !3304

if.end95:                                         ; preds = %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then83
  br label %if.end97, !dbg !3305

if.end97:                                         ; preds = %if.end96, %if.else63
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end62
  %interactive99 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3306, !ctir !153
  %51 = load i32, i32* %interactive99, align 8, !dbg !3306, !tbaa !3155, !ctir !83
  %cmp100 = icmp eq i32 %51, 2, !dbg !3308
  br i1 %cmp100, label %if.then101, label %if.end103, !dbg !3309

if.then101:                                       ; preds = %if.end98
  %update102 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !3310, !ctir !153
  store i8 0, i8* %update102, align 1, !dbg !3311, !tbaa !3194, !ctir !120
  br label %if.end103, !dbg !3312

if.end103:                                        ; preds = %if.then101, %if.end98
  %52 = load i8, i8* %make_backups, align 1, !dbg !3313, !tbaa !3109
  %tobool104 = trunc i8 %52 to i1, !dbg !3313
  br i1 %tobool104, label %land.lhs.true105, label %if.end110, !dbg !3315

land.lhs.true105:                                 ; preds = %if.end103
  %interactive106 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3316, !ctir !153
  %53 = load i32, i32* %interactive106, align 8, !dbg !3316, !tbaa !3155, !ctir !83
  %cmp107 = icmp eq i32 %53, 2, !dbg !3317
  br i1 %cmp107, label %if.then108, label %if.end110, !dbg !3318

if.then108:                                       ; preds = %land.lhs.true105
  %call109 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !3319
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call109), !dbg !3321
  call void @usage(i32 1) #16, !dbg !3322
  unreachable, !dbg !3322

if.end110:                                        ; preds = %land.lhs.true105, %if.end103
  %54 = load i8, i8* %make_backups, align 1, !dbg !3323, !tbaa !3109
  %tobool111 = trunc i8 %54 to i1, !dbg !3323
  br i1 %tobool111, label %cond.true112, label %cond.false115, !dbg !3323

cond.true112:                                     ; preds = %if.end110
  %call113 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #10, !dbg !3324
  %55 = load i8*, i8** %version_control_string, align 8, !dbg !3325, !tbaa !2998
  %call114 = call i32 @xget_version(i8* %call113, i8* %55), !dbg !3326
  br label %cond.end116, !dbg !3323

cond.false115:                                    ; preds = %if.end110
  br label %cond.end116, !dbg !3323

cond.end116:                                      ; preds = %cond.false115, %cond.true112
  %cond117 = phi i32 [ %call114, %cond.true112 ], [ 0, %cond.false115 ], !dbg !3323
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !3327, !ctir !153
  store i32 %cond117, i32* %backup_type, align 8, !dbg !3328, !tbaa !3329, !ctir !68
  %56 = load i8*, i8** %backup_suffix, align 8, !dbg !3330, !tbaa !2998
  call void @set_simple_backup_suffix(i8* %56), !dbg !3331
  call void @hash_init(), !dbg !3332
  %57 = load i8*, i8** %target_directory, align 8, !dbg !3333, !tbaa !2998
  %tobool118 = icmp ne i8* %57, null, !dbg !3333
  br i1 %tobool118, label %if.then119, label %if.else133, !dbg !3335

if.then119:                                       ; preds = %cond.end116
  %58 = load i32, i32* %n_files, align 4, !dbg !3336, !tbaa !2985
  %cmp120 = icmp sle i32 2, %58, !dbg !3339
  br i1 %cmp120, label %if.then121, label %if.end122, !dbg !3340

if.then121:                                       ; preds = %if.then119
  call void @dest_info_init(%struct.cp_options* %x), !dbg !3341
  br label %if.end122, !dbg !3341

if.end122:                                        ; preds = %if.then121, %if.then119
  store i8 1, i8* %ok, align 1, !dbg !3342, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3343, metadata !DIExpression()), !dbg !3345
  store i32 0, i32* %i, align 4, !dbg !3345, !tbaa !2985
  br label %for.cond, !dbg !3346

for.cond:                                         ; preds = %for.inc, %if.end122
  %59 = load i32, i32* %i, align 4, !dbg !3347, !tbaa !2985
  %60 = load i32, i32* %n_files, align 4, !dbg !3349, !tbaa !2985
  %cmp123 = icmp slt i32 %59, %60, !dbg !3350
  br i1 %cmp123, label %for.body, label %for.end, !dbg !3351

for.body:                                         ; preds = %for.cond
  %61 = load i32, i32* %i, align 4, !dbg !3352, !tbaa !2985
  %add = add nsw i32 %61, 1, !dbg !3354
  %62 = load i32, i32* %n_files, align 4, !dbg !3355, !tbaa !2985
  %cmp124 = icmp eq i32 %add, %62, !dbg !3356
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !3357, !ctir !153
  %frombool = zext i1 %cmp124 to i8, !dbg !3358
  store i8 %frombool, i8* %last_file, align 1, !dbg !3358, !tbaa !3359, !ctir !120
  %63 = load i8**, i8*** %file, align 8, !dbg !3360, !tbaa !2998
  %64 = load i32, i32* %i, align 4, !dbg !3361, !tbaa !2985
  %idxprom125 = sext i32 %64 to i64, !dbg !3360
  %arrayidx126 = getelementptr inbounds i8*, i8** %63, i64 %idxprom125, !dbg !3360, !ctir !119
  %65 = load i8*, i8** %arrayidx126, align 8, !dbg !3360, !tbaa !2998
  %66 = load i8*, i8** %target_directory, align 8, !dbg !3362, !tbaa !2998
  %call127 = call zeroext i1 @movefile(i8* %65, i8* %66, i1 zeroext true, %struct.cp_options* %x), !dbg !3363
  %conv = zext i1 %call127 to i32, !dbg !3363
  %67 = load i8, i8* %ok, align 1, !dbg !3364, !tbaa !3109
  %tobool128 = trunc i8 %67 to i1, !dbg !3364
  %conv129 = zext i1 %tobool128 to i32, !dbg !3364
  %and130 = and i32 %conv129, %conv, !dbg !3364
  %tobool131 = icmp ne i32 %and130, 0, !dbg !3364
  %frombool132 = zext i1 %tobool131 to i8, !dbg !3364
  store i8 %frombool132, i8* %ok, align 1, !dbg !3364, !tbaa !3109
  br label %for.inc, !dbg !3365

for.inc:                                          ; preds = %for.body
  %68 = load i32, i32* %i, align 4, !dbg !3366, !tbaa !2985
  %inc = add nsw i32 %68, 1, !dbg !3366
  store i32 %inc, i32* %i, align 4, !dbg !3366, !tbaa !2985
  br label %for.cond, !dbg !3367, !llvm.loop !3368

for.end:                                          ; preds = %for.cond
  br label %if.end139, !dbg !3370

if.else133:                                       ; preds = %cond.end116
  %last_file134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !3371, !ctir !153
  store i8 1, i8* %last_file134, align 1, !dbg !3373, !tbaa !3359, !ctir !120
  %69 = load i8**, i8*** %file, align 8, !dbg !3374, !tbaa !2998
  %arrayidx135 = getelementptr inbounds i8*, i8** %69, i64 0, !dbg !3374, !ctir !119
  %70 = load i8*, i8** %arrayidx135, align 8, !dbg !3374, !tbaa !2998
  %71 = load i8**, i8*** %file, align 8, !dbg !3375, !tbaa !2998
  %arrayidx136 = getelementptr inbounds i8*, i8** %71, i64 1, !dbg !3375, !ctir !119
  %72 = load i8*, i8** %arrayidx136, align 8, !dbg !3375, !tbaa !2998
  %call137 = call zeroext i1 @movefile(i8* %70, i8* %72, i1 zeroext false, %struct.cp_options* %x), !dbg !3376
  %frombool138 = zext i1 %call137 to i8, !dbg !3377
  store i8 %frombool138, i8* %ok, align 1, !dbg !3377, !tbaa !3109
  br label %if.end139

if.end139:                                        ; preds = %if.else133, %for.end
  %73 = load i8, i8* %ok, align 1, !dbg !3378, !tbaa !3109
  %tobool140 = trunc i8 %73 to i1, !dbg !3378
  %74 = zext i1 %tobool140 to i64, !dbg !3378
  %cond142 = select i1 %tobool140, i32 0, i32 1, !dbg !3378
  ret i32 %cond142, !dbg !3379
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !3380 !ctir !150 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %selinux_enabled = alloca i8, align 1, !ctir !120
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3381, metadata !DIExpression()), !dbg !3382
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !3383, metadata !DIExpression()), !dbg !3384
  store i8 0, i8* %selinux_enabled, align 1, !dbg !3384, !tbaa !3109
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3385, !tbaa !2998
  call void @cp_options_default(%struct.cp_options* %0), !dbg !3386
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3387, !tbaa !2998
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !3388, !ctir !153
  store i8 0, i8* %copy_as_regular, align 4, !dbg !3389, !tbaa !3390, !ctir !120
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3391, !tbaa !2998
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !3392, !ctir !153
  store i32 1, i32* %reflink_mode, align 8, !dbg !3393, !tbaa !3394, !ctir !95
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3395, !tbaa !2998
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !3396, !ctir !153
  store i32 2, i32* %dereference, align 4, !dbg !3397, !tbaa !3398, !ctir !76
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3399, !tbaa !2998
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !3400, !ctir !153
  store i8 0, i8* %unlink_dest_before_opening, align 1, !dbg !3401, !tbaa !3402, !ctir !120
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3403, !tbaa !2998
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !3404, !ctir !153
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !3405, !tbaa !3406, !ctir !120
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3407, !tbaa !2998
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !3408, !ctir !153
  store i8 0, i8* %hard_link, align 1, !dbg !3409, !tbaa !3410, !ctir !120
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3411, !tbaa !2998
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !3412, !ctir !153
  store i32 4, i32* %interactive, align 8, !dbg !3413, !tbaa !3155, !ctir !83
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3414, !tbaa !2998
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !3415, !ctir !153
  store i8 1, i8* %move_mode, align 8, !dbg !3416, !tbaa !3417, !ctir !120
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3418, !tbaa !2998
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !3419, !ctir !153
  store i8 0, i8* %install_mode, align 1, !dbg !3420, !tbaa !3421, !ctir !120
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3422, !tbaa !2998
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !3423, !ctir !153
  store i8 0, i8* %one_file_system, align 4, !dbg !3424, !tbaa !3425, !ctir !120
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3426, !tbaa !2998
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !3427, !ctir !153
  store i8 1, i8* %preserve_ownership, align 1, !dbg !3428, !tbaa !3429, !ctir !120
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3430, !tbaa !2998
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !3431, !ctir !153
  store i8 1, i8* %preserve_links, align 2, !dbg !3432, !tbaa !3433, !ctir !120
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3434, !tbaa !2998
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !3435, !ctir !153
  store i8 1, i8* %preserve_mode, align 2, !dbg !3436, !tbaa !3437, !ctir !120
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3438, !tbaa !2998
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !3439, !ctir !153
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !3440, !tbaa !3441, !ctir !120
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3442, !tbaa !2998
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !3443, !ctir !153
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !3444, !tbaa !3445, !ctir !120
  %16 = load i8, i8* %selinux_enabled, align 1, !dbg !3446, !tbaa !3109
  %tobool = trunc i8 %16 to i1, !dbg !3446
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3447, !tbaa !2998
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 22, !dbg !3448, !ctir !153
  %frombool = zext i1 %tobool to i8, !dbg !3449
  store i8 %frombool, i8* %preserve_security_context, align 1, !dbg !3449, !tbaa !3210, !ctir !120
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3450, !tbaa !2998
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 18, !dbg !3451, !ctir !153
  store i8 0, i8* %set_security_context, align 1, !dbg !3452, !tbaa !3213, !ctir !120
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3453, !tbaa !2998
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 26, !dbg !3454, !ctir !153
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !3455, !tbaa !3456, !ctir !120
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3457, !tbaa !2998
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 20, !dbg !3458, !ctir !153
  store i8 1, i8* %data_copy_required, align 1, !dbg !3459, !tbaa !3460, !ctir !120
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3461, !tbaa !2998
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 21, !dbg !3462, !ctir !153
  store i8 0, i8* %require_preserve, align 4, !dbg !3463, !tbaa !3464, !ctir !120
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3465, !tbaa !2998
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 23, !dbg !3466, !ctir !153
  store i8 0, i8* %require_preserve_context, align 2, !dbg !3467, !tbaa !3468, !ctir !120
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3469, !tbaa !2998
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 24, !dbg !3470, !ctir !153
  store i8 1, i8* %preserve_xattr, align 1, !dbg !3471, !tbaa !3472, !ctir !120
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3473, !tbaa !2998
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 25, !dbg !3474, !ctir !153
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !3475, !tbaa !3476, !ctir !120
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3477, !tbaa !2998
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 27, !dbg !3478, !ctir !153
  store i8 1, i8* %recursive, align 2, !dbg !3479, !tbaa !3480, !ctir !120
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3481, !tbaa !2998
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !3482, !ctir !153
  store i32 2, i32* %sparse_mode, align 4, !dbg !3483, !tbaa !3484, !ctir !89
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3485, !tbaa !2998
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 29, !dbg !3486, !ctir !153
  store i8 0, i8* %symbolic_link, align 4, !dbg !3487, !tbaa !3488, !ctir !120
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3489, !tbaa !2998
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 28, !dbg !3490, !ctir !153
  store i8 0, i8* %set_mode, align 1, !dbg !3491, !tbaa !3492, !ctir !120
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3493, !tbaa !2998
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 4, !dbg !3494, !ctir !153
  store i32 0, i32* %mode, align 8, !dbg !3495, !tbaa !3496, !ctir !160
  %call = call i32 @isatty(i32 0) #10, !dbg !3497
  %tobool1 = icmp ne i32 %call, 0, !dbg !3497
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3498, !tbaa !2998
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 32, !dbg !3499, !ctir !153
  %frombool2 = zext i1 %tobool1 to i8, !dbg !3500
  store i8 %frombool2, i8* %stdin_tty, align 1, !dbg !3500, !tbaa !3501, !ctir !120
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3502, !tbaa !2998
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 33, !dbg !3503, !ctir !153
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !3504, !tbaa !3505, !ctir !120
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3506, !tbaa !2998
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 30, !dbg !3507, !ctir !153
  store i8 0, i8* %update, align 1, !dbg !3508, !tbaa !3194, !ctir !120
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3509, !tbaa !2998
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !3510, !ctir !153
  store i8 0, i8* %verbose, align 2, !dbg !3511, !tbaa !3198, !ctir !120
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3512, !tbaa !2998
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !3513, !ctir !153
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !3514, !tbaa !3515, !ctir !195
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3516, !tbaa !2998
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !3517, !ctir !153
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !3518, !tbaa !3519, !ctir !195
  ret void, !dbg !3520
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !3521 !ctir !200 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !3078
  %err = alloca i32, align 4, !ctir !7
  %is_a_dir = alloca i8, align 1, !ctir !120
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3522, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3524, metadata !DIExpression()), !dbg !3525
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3526, metadata !DIExpression()), !dbg !3527
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3528, !tbaa !2998
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #10, !dbg !3529
  %cmp = icmp eq i32 %call, 0, !dbg !3530
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3529

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3529

cond.false:                                       ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !3531
  %1 = load i32, i32* %call1, align 4, !dbg !3531, !tbaa !2985, !ctir !7
  br label %cond.end, !dbg !3529

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %1, %cond.false ], !dbg !3529
  store i32 %cond, i32* %err, align 4, !dbg !3527, !tbaa !2985
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !3532, metadata !DIExpression()), !dbg !3533
  %2 = load i32, i32* %err, align 4, !dbg !3534, !tbaa !2985
  %tobool = icmp ne i32 %2, 0, !dbg !3534
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3535

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3536, !ctir !3078
  %3 = load i32, i32* %st_mode, align 8, !dbg !3536, !tbaa !3181, !ctir !133
  %and = and i32 %3, 61440, !dbg !3536
  %cmp2 = icmp eq i32 %and, 16384, !dbg !3536
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %4 = phi i1 [ false, %cond.end ], [ %cmp2, %land.rhs ], !dbg !3537
  %frombool = zext i1 %4 to i8, !dbg !3533
  store i8 %frombool, i8* %is_a_dir, align 1, !dbg !3533, !tbaa !3109
  %5 = load i32, i32* %err, align 4, !dbg !3538, !tbaa !2985
  %tobool3 = icmp ne i32 %5, 0, !dbg !3538
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !3540

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %err, align 4, !dbg !3541, !tbaa !2985
  %cmp4 = icmp ne i32 %6, 2, !dbg !3542
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3543

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %err, align 4, !dbg !3544, !tbaa !2985
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !3544
  %8 = load i8*, i8** %file.addr, align 8, !dbg !3544, !tbaa !2998
  %call6 = call i8* @quotearg_style(i32 4, i8* %8), !dbg !3544
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %7, i8* %call5, i8* %call6), !dbg !3544
  unreachable, !dbg !3544

if.end:                                           ; preds = %land.lhs.true, %land.end
  %9 = load i8, i8* %is_a_dir, align 1, !dbg !3545, !tbaa !3109
  %tobool7 = trunc i8 %9 to i1, !dbg !3545
  ret i1 %tobool7, !dbg !3546
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @movefile(i8* %source, i8* %dest, i1 zeroext %dest_is_dir, %struct.cp_options* %x) #4 !dbg !3547 !ctir !202 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %dest_is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %ok = alloca i8, align 1, !ctir !120
  %src_basename = alloca i8*, align 8, !ctir !115
  %new_dest = alloca i8*, align 8, !ctir !9
  store i8* %source, i8** %source.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !3548, metadata !DIExpression()), !dbg !3549
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3550, metadata !DIExpression()), !dbg !3551
  %frombool = zext i1 %dest_is_dir to i8
  store i8 %frombool, i8* %dest_is_dir.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %dest_is_dir.addr, metadata !3552, metadata !DIExpression()), !dbg !3553
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3554, metadata !DIExpression()), !dbg !3555
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3556, metadata !DIExpression()), !dbg !3557
  %0 = load i8, i8* @remove_trailing_slashes, align 1, !dbg !3558, !tbaa !3109
  %tobool = trunc i8 %0 to i1, !dbg !3558
  br i1 %tobool, label %if.then, label %if.end, !dbg !3560

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %source.addr, align 8, !dbg !3561, !tbaa !2998
  %call = call zeroext i1 @strip_trailing_slashes(i8* %1), !dbg !3562
  br label %if.end, !dbg !3562

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* %dest_is_dir.addr, align 1, !dbg !3563, !tbaa !3109
  %tobool1 = trunc i8 %2 to i1, !dbg !3563
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3565

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %src_basename, metadata !3566, metadata !DIExpression()), !dbg !3568
  %3 = load i8*, i8** %source.addr, align 8, !dbg !3569, !tbaa !2998
  %call3 = call i8* @last_component(i8* %3) #14, !dbg !3570
  store i8* %call3, i8** %src_basename, align 8, !dbg !3568, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %new_dest, metadata !3571, metadata !DIExpression()), !dbg !3572
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !3573, !tbaa !2998
  %5 = load i8*, i8** %src_basename, align 8, !dbg !3574, !tbaa !2998
  %call4 = call i8* @file_name_concat(i8* %4, i8* %5, i8** null), !dbg !3575
  store i8* %call4, i8** %new_dest, align 8, !dbg !3572, !tbaa !2998
  %6 = load i8*, i8** %new_dest, align 8, !dbg !3576, !tbaa !2998
  %call5 = call zeroext i1 @strip_trailing_slashes(i8* %6), !dbg !3577
  %7 = load i8*, i8** %source.addr, align 8, !dbg !3578, !tbaa !2998
  %8 = load i8*, i8** %new_dest, align 8, !dbg !3579, !tbaa !2998
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3580, !tbaa !2998
  %call6 = call zeroext i1 @do_move(i8* %7, i8* %8, %struct.cp_options* %9), !dbg !3581
  %frombool7 = zext i1 %call6 to i8, !dbg !3582
  store i8 %frombool7, i8* %ok, align 1, !dbg !3582, !tbaa !3109
  %10 = load i8*, i8** %new_dest, align 8, !dbg !3583, !tbaa !2998
  call void @free(i8* %10) #10, !dbg !3584
  br label %if.end10, !dbg !3585

if.else:                                          ; preds = %if.end
  %11 = load i8*, i8** %source.addr, align 8, !dbg !3586, !tbaa !2998
  %12 = load i8*, i8** %dest.addr, align 8, !dbg !3588, !tbaa !2998
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3589, !tbaa !2998
  %call8 = call zeroext i1 @do_move(i8* %11, i8* %12, %struct.cp_options* %13), !dbg !3590
  %frombool9 = zext i1 %call8 to i8, !dbg !3591
  store i8 %frombool9, i8* %ok, align 1, !dbg !3591, !tbaa !3109
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then2
  %14 = load i8, i8* %ok, align 1, !dbg !3592, !tbaa !3109
  %tobool11 = trunc i8 %14 to i1, !dbg !3592
  ret i1 %tobool11, !dbg !3593
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @do_move(i8* %source, i8* %dest, %struct.cp_options* %x) #4 !dbg !3594 !ctir !206 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !120
  %rename_succeeded = alloca i8, align 1, !ctir !120
  %ok = alloca i8, align 1, !ctir !120
  %dir_to_remove = alloca i8*, align 8, !ctir !115
  %rm_options = alloca %struct.rm_options, align 8, !ctir !214
  %status = alloca i32, align 4, !ctir !106
  %dir = alloca [2 x i8*], align 16, !ctir !208
  store i8* %source, i8** %source.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !3595, metadata !DIExpression()), !dbg !3596
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3597, metadata !DIExpression()), !dbg !3598
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3599, metadata !DIExpression()), !dbg !3600
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !3601, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.declare(metadata i8* %rename_succeeded, metadata !3603, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3605, metadata !DIExpression()), !dbg !3606
  %0 = load i8*, i8** %source.addr, align 8, !dbg !3607, !tbaa !2998
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !3608, !tbaa !2998
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3609, !tbaa !2998
  %call = call zeroext i1 @copy(i8* %0, i8* %1, i1 zeroext false, %struct.cp_options* %2, i8* %copy_into_self, i8* %rename_succeeded), !dbg !3610
  %frombool = zext i1 %call to i8, !dbg !3606
  store i8 %frombool, i8* %ok, align 1, !dbg !3606, !tbaa !3109
  %3 = load i8, i8* %ok, align 1, !dbg !3611, !tbaa !3109
  %tobool = trunc i8 %3 to i1, !dbg !3611
  br i1 %tobool, label %if.then, label %if.end24, !dbg !3613

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %dir_to_remove, metadata !3614, metadata !DIExpression()), !dbg !3616
  %4 = load i8, i8* %copy_into_self, align 1, !dbg !3617, !tbaa !3109
  %tobool1 = trunc i8 %4 to i1, !dbg !3617
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3619

if.then2:                                         ; preds = %if.then
  store i8* null, i8** %dir_to_remove, align 8, !dbg !3620, !tbaa !2998
  store i8 0, i8* %ok, align 1, !dbg !3622, !tbaa !3109
  br label %if.end6, !dbg !3623

if.else:                                          ; preds = %if.then
  %5 = load i8, i8* %rename_succeeded, align 1, !dbg !3624, !tbaa !3109
  %tobool3 = trunc i8 %5 to i1, !dbg !3624
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3626

if.then4:                                         ; preds = %if.else
  store i8* null, i8** %dir_to_remove, align 8, !dbg !3627, !tbaa !2998
  br label %if.end, !dbg !3629

if.else5:                                         ; preds = %if.else
  %6 = load i8*, i8** %source.addr, align 8, !dbg !3630, !tbaa !2998
  store i8* %6, i8** %dir_to_remove, align 8, !dbg !3632, !tbaa !2998
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  %7 = load i8*, i8** %dir_to_remove, align 8, !dbg !3633, !tbaa !2998
  %cmp = icmp ne i8* %7, null, !dbg !3635
  br i1 %cmp, label %if.then7, label %if.end23, !dbg !3636

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.rm_options* %rm_options, metadata !3637, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3640, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.declare(metadata [2 x i8*]* %dir, metadata !3642, metadata !DIExpression()), !dbg !3643
  call void @rm_option_init(%struct.rm_options* %rm_options), !dbg !3644
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3645, !tbaa !2998
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 31, !dbg !3646, !ctir !205
  %9 = load i8, i8* %verbose, align 2, !dbg !3646, !tbaa !3198
  %tobool8 = trunc i8 %9 to i1, !dbg !3646, !ctir !120
  %verbose9 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %rm_options, i32 0, i32 8, !dbg !3647, !ctir !214
  %frombool10 = zext i1 %tobool8 to i8, !dbg !3648
  store i8 %frombool10, i8* %verbose9, align 2, !dbg !3648, !tbaa !3649, !ctir !120
  %10 = load i8*, i8** %dir_to_remove, align 8, !dbg !3651, !tbaa !2998
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !3652, !ctir !208
  store i8* %10, i8** %arrayidx, align 16, !dbg !3653, !tbaa !2998
  %arrayidx11 = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 1, !dbg !3654, !ctir !208
  store i8* null, i8** %arrayidx11, align 8, !dbg !3655, !tbaa !2998
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !3656
  %11 = bitcast i8** %arraydecay to i8*, !dbg !3657
  %12 = bitcast i8* %11 to i8**, !dbg !3657
  %call12 = call i32 @rm(i8** %12, %struct.rm_options* %rm_options), !dbg !3658
  store i32 %call12, i32* %status, align 4, !dbg !3659, !tbaa !3660
  %13 = load i32, i32* %status, align 4, !dbg !3661, !tbaa !3660
  %cmp13 = icmp eq i32 %13, 2, !dbg !3661
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !3661

lor.lhs.false:                                    ; preds = %if.then7
  %14 = load i32, i32* %status, align 4, !dbg !3661, !tbaa !3660
  %cmp14 = icmp eq i32 %14, 3, !dbg !3661
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !3661

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %15 = load i32, i32* %status, align 4, !dbg !3661, !tbaa !3660
  %cmp16 = icmp eq i32 %15, 4, !dbg !3661
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !3664

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.then7
  br label %if.end19, !dbg !3664

if.else18:                                        ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.do_move, i64 0, i64 0)) #13, !dbg !3661
  unreachable, !dbg !3661

if.end19:                                         ; preds = %if.then17
  %16 = load i32, i32* %status, align 4, !dbg !3665, !tbaa !3660
  %cmp20 = icmp eq i32 %16, 4, !dbg !3667
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !3668

if.then21:                                        ; preds = %if.end19
  store i8 0, i8* %ok, align 1, !dbg !3669, !tbaa !3109
  br label %if.end22, !dbg !3670

if.end22:                                         ; preds = %if.then21, %if.end19
  br label %if.end23, !dbg !3671

if.end23:                                         ; preds = %if.end22, %if.end6
  br label %if.end24, !dbg !3672

if.end24:                                         ; preds = %if.end23, %entry
  %17 = load i8, i8* %ok, align 1, !dbg !3673, !tbaa !3109
  %tobool25 = trunc i8 %17 to i1, !dbg !3673
  ret i1 %tobool25, !dbg !3674
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rm_option_init(%struct.rm_options* %x) #4 !dbg !241 !ctir !211 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3675, metadata !DIExpression()), !dbg !3676
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3677, !tbaa !2998
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !3678, !ctir !214
  store i8 0, i8* %ignore_missing_files, align 8, !dbg !3679, !tbaa !3680, !ctir !120
  %1 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3681, !tbaa !2998
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %1, i32 0, i32 4, !dbg !3682, !ctir !214
  store i8 1, i8* %remove_empty_directories, align 2, !dbg !3683, !tbaa !3684, !ctir !120
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3685, !tbaa !2998
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !3686, !ctir !214
  store i8 1, i8* %recursive, align 1, !dbg !3687, !tbaa !3688, !ctir !120
  %3 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3689, !tbaa !2998
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %3, i32 0, i32 2, !dbg !3690, !ctir !214
  store i8 0, i8* %one_file_system, align 8, !dbg !3691, !tbaa !3692, !ctir !120
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3693, !tbaa !2998
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 1, !dbg !3694, !ctir !214
  store i32 5, i32* %interactive, align 4, !dbg !3695, !tbaa !3696, !ctir !100
  %5 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3697, !tbaa !2998
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %5, i32 0, i32 7, !dbg !3698, !ctir !214
  store i8 0, i8* %stdin_tty, align 1, !dbg !3699, !tbaa !3700, !ctir !120
  %6 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3701, !tbaa !2998
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %6, i32 0, i32 8, !dbg !3702, !ctir !214
  store i8 0, i8* %verbose, align 2, !dbg !3703, !tbaa !3649, !ctir !120
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3704, !tbaa !2998
  %require_restore_cwd = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 9, !dbg !3705, !ctir !214
  store i8 1, i8* %require_restore_cwd, align 1, !dbg !3706, !tbaa !3707, !ctir !120
  %call = call %struct.timespec* @get_root_dev_ino(%struct.timespec* @rm_option_init.dev_ino_buf), !dbg !3708
  %8 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3710, !tbaa !2998
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %8, i32 0, i32 5, !dbg !3711, !ctir !214
  store %struct.timespec* %call, %struct.timespec** %root_dev_ino, align 8, !dbg !3712, !tbaa !3713, !ctir !222
  %9 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3714, !tbaa !2998
  %root_dev_ino1 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %9, i32 0, i32 5, !dbg !3716, !ctir !214
  %10 = load %struct.timespec*, %struct.timespec** %root_dev_ino1, align 8, !dbg !3716, !tbaa !3713, !ctir !222
  %cmp = icmp eq %struct.timespec* %10, null, !dbg !3717
  br i1 %cmp, label %if.then, label %if.end, !dbg !3718

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #15, !dbg !3719
  %11 = load i32, i32* %call2, align 4, !dbg !3719, !tbaa !2985, !ctir !7
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !3719
  %call4 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !3719
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call3, i8* %call4), !dbg !3719
  unreachable, !dbg !3719

if.end:                                           ; preds = %entry
  %12 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3720, !tbaa !2998
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %12, i32 0, i32 6, !dbg !3721, !ctir !214
  store i8 0, i8* %preserve_all_root, align 8, !dbg !3722, !tbaa !3723, !ctir !120
  ret void, !dbg !3724
}

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rm(i8** %file, %struct.rm_options* %x) #4 !dbg !3725 !ctir !1337 {
entry:
  %file.addr = alloca i8**, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %rm_status = alloca i32, align 4, !ctir !106
  %bit_flags = alloca i32, align 4, !ctir !7
  %fts = alloca %struct.FTS*, align 8, !ctir !1360
  %ent = alloca %struct._ftsent*, align 8, !ctir !1453
  %s = alloca i32, align 4, !ctir !106
  store i8** %file, i8*** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !3726, metadata !DIExpression()), !dbg !3727
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.declare(metadata i32* %rm_status, metadata !3730, metadata !DIExpression()), !dbg !3731
  store i32 2, i32* %rm_status, align 4, !dbg !3731, !tbaa !3660
  %0 = load i8**, i8*** %file.addr, align 8, !dbg !3732, !tbaa !2998
  %1 = load i8*, i8** %0, align 8, !dbg !3734, !tbaa !2998, !ctir !1340
  %tobool = icmp ne i8* %1, null, !dbg !3734
  br i1 %tobool, label %if.then, label %if.end31, !dbg !3735

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bit_flags, metadata !3736, metadata !DIExpression()), !dbg !3738
  store i32 536, i32* %bit_flags, align 4, !dbg !3738, !tbaa !2985
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3739, !tbaa !2998
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 2, !dbg !3741, !ctir !1342
  %3 = load i8, i8* %one_file_system, align 8, !dbg !3741, !tbaa !3692
  %tobool1 = trunc i8 %3 to i1, !dbg !3741, !ctir !120
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3742

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %bit_flags, align 4, !dbg !3743, !tbaa !2985
  %or = or i32 %4, 64, !dbg !3743
  store i32 %or, i32* %bit_flags, align 4, !dbg !3743, !tbaa !2985
  br label %if.end, !dbg !3744

if.end:                                           ; preds = %if.then2, %if.then
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !3745, metadata !DIExpression()), !dbg !3746
  %5 = load i8**, i8*** %file.addr, align 8, !dbg !3747, !tbaa !2998
  %6 = load i32, i32* %bit_flags, align 4, !dbg !3748, !tbaa !2985
  %call = call %struct.FTS* @xfts_open(i8** %5, i32 %6, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !3749
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !3746, !tbaa !2998
  br label %while.body, !dbg !3750

while.body:                                       ; preds = %if.end, %do.end
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent, metadata !3751, metadata !DIExpression()), !dbg !3753
  %7 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3754, !tbaa !2998
  %call3 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %7), !dbg !3755
  store %struct._ftsent* %call3, %struct._ftsent** %ent, align 8, !dbg !3756, !tbaa !2998
  %8 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !3757, !tbaa !2998
  %cmp = icmp eq %struct._ftsent* %8, null, !dbg !3759
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !3760

if.then4:                                         ; preds = %while.body
  %call5 = call i32* @__errno_location() #15, !dbg !3761
  %9 = load i32, i32* %call5, align 4, !dbg !3761, !tbaa !2985, !ctir !7
  %cmp6 = icmp ne i32 %9, 0, !dbg !3764
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !3765

if.then7:                                         ; preds = %if.then4
  %call8 = call i32* @__errno_location() #15, !dbg !3766
  %10 = load i32, i32* %call8, align 4, !dbg !3766, !tbaa !2985, !ctir !7
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #10, !dbg !3768
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call9), !dbg !3769
  store i32 4, i32* %rm_status, align 4, !dbg !3770, !tbaa !3660
  br label %if.end10, !dbg !3771

if.end10:                                         ; preds = %if.then7, %if.then4
  br label %while.end, !dbg !3772

if.end11:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3773, metadata !DIExpression()), !dbg !3774
  %11 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3775, !tbaa !2998
  %12 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !3776, !tbaa !2998
  %13 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3777, !tbaa !2998
  %call12 = call i32 @rm_fts(%struct.FTS* %11, %struct._ftsent* %12, %struct.rm_options* %13), !dbg !3778
  store i32 %call12, i32* %s, align 4, !dbg !3774, !tbaa !3660
  %14 = load i32, i32* %s, align 4, !dbg !3779, !tbaa !3660
  %cmp13 = icmp eq i32 %14, 2, !dbg !3779
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !3779

lor.lhs.false:                                    ; preds = %if.end11
  %15 = load i32, i32* %s, align 4, !dbg !3779, !tbaa !3660
  %cmp14 = icmp eq i32 %15, 3, !dbg !3779
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !3779

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %16 = load i32, i32* %s, align 4, !dbg !3779, !tbaa !3660
  %cmp16 = icmp eq i32 %16, 4, !dbg !3779
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !3782

if.then17:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.end11
  br label %if.end18, !dbg !3782

if.else:                                          ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.63, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.64, i64 0, i64 0), i32 609, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.rm, i64 0, i64 0)) #13, !dbg !3779
  unreachable, !dbg !3779

if.end18:                                         ; preds = %if.then17
  br label %do.body, !dbg !3783

do.body:                                          ; preds = %if.end18
  %17 = load i32, i32* %s, align 4, !dbg !3784, !tbaa !3660
  %cmp19 = icmp eq i32 %17, 4, !dbg !3784
  br i1 %cmp19, label %if.then23, label %lor.lhs.false20, !dbg !3784

lor.lhs.false20:                                  ; preds = %do.body
  %18 = load i32, i32* %s, align 4, !dbg !3784, !tbaa !3660
  %cmp21 = icmp eq i32 %18, 3, !dbg !3784
  br i1 %cmp21, label %land.lhs.true, label %if.end24, !dbg !3784

land.lhs.true:                                    ; preds = %lor.lhs.false20
  %19 = load i32, i32* %rm_status, align 4, !dbg !3784, !tbaa !3660
  %cmp22 = icmp eq i32 %19, 2, !dbg !3784
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !3787

if.then23:                                        ; preds = %land.lhs.true, %do.body
  %20 = load i32, i32* %s, align 4, !dbg !3784, !tbaa !3660
  store i32 %20, i32* %rm_status, align 4, !dbg !3784, !tbaa !3660
  br label %if.end24, !dbg !3784

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %lor.lhs.false20
  br label %do.end, !dbg !3787

do.end:                                           ; preds = %if.end24
  br label %while.body, !dbg !3750, !llvm.loop !3788

while.end:                                        ; preds = %if.end10
  %21 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3790, !tbaa !2998
  %call25 = call i32 @rpl_fts_close(%struct.FTS* %21), !dbg !3792
  %cmp26 = icmp ne i32 %call25, 0, !dbg !3793
  br i1 %cmp26, label %if.then27, label %if.end30, !dbg !3794

if.then27:                                        ; preds = %while.end
  %call28 = call i32* @__errno_location() #15, !dbg !3795
  %22 = load i32, i32* %call28, align 4, !dbg !3795, !tbaa !2985, !ctir !7
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.65, i64 0, i64 0)) #10, !dbg !3797
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %22, i8* %call29), !dbg !3798
  store i32 4, i32* %rm_status, align 4, !dbg !3799, !tbaa !3660
  br label %if.end30, !dbg !3800

if.end30:                                         ; preds = %if.then27, %while.end
  br label %if.end31, !dbg !3801

if.end31:                                         ; preds = %if.end30, %entry
  %23 = load i32, i32* %rm_status, align 4, !dbg !3802, !tbaa !3660
  ret i32 %23, !dbg !3803
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rm_fts(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x) #4 !dbg !3804 !ctir !1455 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %err = alloca i32, align 4, !ctir !7
  %failed = alloca i8, align 1, !ctir !120
  %parent = alloca i8*, align 8, !ctir !9
  %statbuf = alloca %struct.stat, align 8, !ctir !1390
  %is_empty_directory = alloca i32, align 4, !ctir !1457
  %s = alloca i32, align 4, !ctir !106
  %is_dir = alloca i8, align 1, !ctir !120
  %s126 = alloca i32, align 4, !ctir !106
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3805, metadata !DIExpression()), !dbg !3806
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3807, metadata !DIExpression()), !dbg !3808
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3809, metadata !DIExpression()), !dbg !3810
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3811, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !3812, !ctir !1454
  %1 = load i16, i16* %fts_info, align 8, !dbg !3812, !tbaa !3813, !ctir !33
  %conv = zext i16 %1 to i32, !dbg !3811
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 8, label %sw.bb94
    i32 10, label %sw.bb94
    i32 12, label %sw.bb94
    i32 13, label %sw.bb94
    i32 6, label %sw.bb94
    i32 4, label %sw.bb94
    i32 11, label %sw.bb94
    i32 3, label %sw.bb94
    i32 2, label %sw.bb135
    i32 7, label %sw.bb141
  ], !dbg !3815

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3816, !tbaa !2998
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !3819, !ctir !1342
  %3 = load i8, i8* %recursive, align 1, !dbg !3819, !tbaa !3688
  %tobool = trunc i8 %3 to i1, !dbg !3819, !ctir !120
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3820

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3821, !tbaa !2998
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 4, !dbg !3822, !ctir !1342
  %5 = load i8, i8* %remove_empty_directories, align 2, !dbg !3822, !tbaa !3684
  %tobool1 = trunc i8 %5 to i1, !dbg !3822, !ctir !120
  br i1 %tobool1, label %land.lhs.true3, label %if.then, !dbg !3823

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3824, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 6, !dbg !3825, !ctir !1361
  %7 = load i32, i32* %fts_cwd_fd, align 4, !dbg !3825, !tbaa !3826, !ctir !7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3829, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !3830, !ctir !1454
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !3830, !tbaa !2998, !ctir !9
  %call = call zeroext i1 @is_empty_dir(i32 %7, i8* %9), !dbg !3831
  br i1 %call, label %if.end, label %if.then, !dbg !3832

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3833, metadata !DIExpression()), !dbg !3835
  %10 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3836, !tbaa !2998
  %remove_empty_directories5 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %10, i32 0, i32 4, !dbg !3837, !ctir !1342
  %11 = load i8, i8* %remove_empty_directories5, align 2, !dbg !3837, !tbaa !3684
  %tobool6 = trunc i8 %11 to i1, !dbg !3837, !ctir !120
  %12 = zext i1 %tobool6 to i64, !dbg !3836
  %cond = select i1 %tobool6, i32 39, i32 21, !dbg !3836
  store i32 %cond, i32* %err, align 4, !dbg !3835, !tbaa !2985
  %13 = load i32, i32* %err, align 4, !dbg !3838, !tbaa !2985
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !3839
  %14 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3840, !tbaa !2998
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !3840, !ctir !1454
  %15 = load i8*, i8** %fts_path, align 8, !dbg !3840, !tbaa !2998, !ctir !9
  %call9 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !3840
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %13, i8* %call8, i8* %call9), !dbg !3841
  %16 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3842, !tbaa !2998
  call void @mark_ancestor_dirs(%struct._ftsent* %16), !dbg !3843
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3844, !tbaa !2998
  %18 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3845, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %17, %struct._ftsent* %18), !dbg !3846
  store i32 4, i32* %retval, align 4, !dbg !3847
  br label %return, !dbg !3847

if.end:                                           ; preds = %land.lhs.true3, %sw.bb
  %19 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3848, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !3850, !ctir !1454
  %20 = load i64, i64* %fts_level, align 8, !dbg !3850, !tbaa !3851, !ctir !568
  %cmp = icmp eq i64 %20, 0, !dbg !3852
  br i1 %cmp, label %if.then11, label %if.end80, !dbg !3853

if.then11:                                        ; preds = %if.end
  %21 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3854, !tbaa !2998
  %fts_accpath12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !3857, !ctir !1454
  %22 = load i8*, i8** %fts_accpath12, align 8, !dbg !3857, !tbaa !2998, !ctir !9
  %call13 = call i8* @last_component(i8* %22) #14, !dbg !3858
  %call14 = call zeroext i1 @dot_or_dotdot(i8* %call13), !dbg !3859
  br i1 %call14, label %if.then15, label %if.end21, !dbg !3860

if.then15:                                        ; preds = %if.then11
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.67, i64 0, i64 0)) #10, !dbg !3861
  %call17 = call i8* @quotearg_n_style(i32 0, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.68, i64 0, i64 0)), !dbg !3863
  %call18 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0)), !dbg !3864
  %23 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3865, !tbaa !2998
  %fts_path19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 7, !dbg !3865, !ctir !1454
  %24 = load i8*, i8** %fts_path19, align 8, !dbg !3865, !tbaa !2998, !ctir !9
  %call20 = call i8* @quotearg_n_style(i32 2, i32 4, i8* %24), !dbg !3865
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call16, i8* %call17, i8* %call18, i8* %call20), !dbg !3866
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3867, !tbaa !2998
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3868, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %25, %struct._ftsent* %26), !dbg !3869
  store i32 4, i32* %retval, align 4, !dbg !3870
  br label %return, !dbg !3870

if.end21:                                         ; preds = %if.then11
  %27 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3871, !tbaa !2998
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %27, i32 0, i32 5, !dbg !3871, !ctir !1342
  %28 = load %struct.timespec*, %struct.timespec** %root_dev_ino, align 8, !dbg !3871, !tbaa !3713, !ctir !1351
  %tobool22 = icmp ne %struct.timespec* %28, null, !dbg !3871
  br i1 %tobool22, label %land.lhs.true23, label %if.end50, !dbg !3871

land.lhs.true23:                                  ; preds = %if.end21
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3871, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !3871, !ctir !1454
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !3871
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !3871, !ctir !1390
  %30 = load i64, i64* %st_ino, align 8, !dbg !3871, !tbaa !3873, !ctir !228
  %31 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3871, !tbaa !2998
  %root_dev_ino24 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %31, i32 0, i32 5, !dbg !3871, !ctir !1342
  %32 = load %struct.timespec*, %struct.timespec** %root_dev_ino24, align 8, !dbg !3871, !tbaa !3713, !ctir !1351
  %st_ino25 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0, !dbg !3871, !ctir !1352
  %33 = load i64, i64* %st_ino25, align 8, !dbg !3871, !tbaa !3874, !ctir !227
  %cmp26 = icmp eq i64 %30, %33, !dbg !3871
  br i1 %cmp26, label %land.lhs.true28, label %if.end50, !dbg !3871

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %34 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3871, !tbaa !2998
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !3871, !ctir !1454
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !3871
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 0, !dbg !3871, !ctir !1390
  %35 = load i64, i64* %st_dev, align 8, !dbg !3871, !tbaa !3876, !ctir !231
  %36 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3871, !tbaa !2998
  %root_dev_ino31 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %36, i32 0, i32 5, !dbg !3871, !ctir !1342
  %37 = load %struct.timespec*, %struct.timespec** %root_dev_ino31, align 8, !dbg !3871, !tbaa !3713, !ctir !1351
  %st_dev32 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 1, !dbg !3871, !ctir !1352
  %38 = load i64, i64* %st_dev32, align 8, !dbg !3871, !tbaa !3877, !ctir !230
  %cmp33 = icmp eq i64 %35, %38, !dbg !3871
  br i1 %cmp33, label %if.then35, label %if.end50, !dbg !3878

if.then35:                                        ; preds = %land.lhs.true28
  br label %do.body, !dbg !3879

do.body:                                          ; preds = %if.then35
  %39 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3881, !tbaa !2998
  %fts_path36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %39, i32 0, i32 7, !dbg !3881, !ctir !1454
  %40 = load i8*, i8** %fts_path36, align 8, !dbg !3881, !tbaa !2998, !ctir !9
  %call37 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)) #14, !dbg !3881
  %cmp38 = icmp eq i32 %call37, 0, !dbg !3881
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !3884

if.then40:                                        ; preds = %do.body
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.71, i64 0, i64 0)) #10, !dbg !3881
  %41 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3881, !tbaa !2998
  %fts_path42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 7, !dbg !3881, !ctir !1454
  %42 = load i8*, i8** %fts_path42, align 8, !dbg !3881, !tbaa !2998, !ctir !9
  %call43 = call i8* @quotearg_style(i32 4, i8* %42), !dbg !3881
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call43), !dbg !3881
  br label %if.end48, !dbg !3881

if.else:                                          ; preds = %do.body
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10.72, i64 0, i64 0)) #10, !dbg !3881
  %43 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3881, !tbaa !2998
  %fts_path45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %43, i32 0, i32 7, !dbg !3881, !ctir !1454
  %44 = load i8*, i8** %fts_path45, align 8, !dbg !3881, !tbaa !2998, !ctir !9
  %call46 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %44), !dbg !3881
  %call47 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)), !dbg !3881
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44, i8* %call46, i8* %call47), !dbg !3881
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then40
  %call49 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11.73, i64 0, i64 0)) #10, !dbg !3884
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call49), !dbg !3884
  br label %do.end, !dbg !3884

do.end:                                           ; preds = %if.end48
  %45 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3885, !tbaa !2998
  %46 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3886, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %45, %struct._ftsent* %46), !dbg !3887
  store i32 4, i32* %retval, align 4, !dbg !3888
  br label %return, !dbg !3888

if.end50:                                         ; preds = %land.lhs.true28, %land.lhs.true23, %if.end21
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3889, !tbaa !2998
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 6, !dbg !3891, !ctir !1342
  %48 = load i8, i8* %preserve_all_root, align 8, !dbg !3891, !tbaa !3723
  %tobool51 = trunc i8 %48 to i1, !dbg !3891, !ctir !120
  br i1 %tobool51, label %if.then52, label %if.end79, !dbg !3892

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i8* %failed, metadata !3893, metadata !DIExpression()), !dbg !3895
  store i8 0, i8* %failed, align 1, !dbg !3895, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8** %parent, metadata !3896, metadata !DIExpression()), !dbg !3897
  %49 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3898, !tbaa !2998
  %fts_accpath53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %49, i32 0, i32 6, !dbg !3899, !ctir !1454
  %50 = load i8*, i8** %fts_accpath53, align 8, !dbg !3899, !tbaa !2998, !ctir !9
  %call54 = call i8* @file_name_concat(i8* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0), i8** null), !dbg !3900
  store i8* %call54, i8** %parent, align 8, !dbg !3897, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !3901, metadata !DIExpression()), !dbg !3902
  %51 = load i8*, i8** %parent, align 8, !dbg !3903, !tbaa !2998
  %tobool55 = icmp ne i8* %51, null, !dbg !3903
  br i1 %tobool55, label %lor.lhs.false, label %if.then58, !dbg !3905

lor.lhs.false:                                    ; preds = %if.then52
  %52 = load i8*, i8** %parent, align 8, !dbg !3906, !tbaa !2998
  %call56 = call i32 @lstat(i8* %52, %struct.stat* %statbuf) #10, !dbg !3907
  %tobool57 = icmp ne i32 %call56, 0, !dbg !3907
  br i1 %tobool57, label %if.then58, label %if.end63, !dbg !3908

if.then58:                                        ; preds = %lor.lhs.false, %if.then52
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.74, i64 0, i64 0)) #10, !dbg !3909
  %53 = load i8*, i8** %parent, align 8, !dbg !3911, !tbaa !2998
  %call60 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %53), !dbg !3911
  %54 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3912, !tbaa !2998
  %fts_accpath61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !3912, !ctir !1454
  %55 = load i8*, i8** %fts_accpath61, align 8, !dbg !3912, !tbaa !2998, !ctir !9
  %call62 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %55), !dbg !3912
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call60, i8* %call62), !dbg !3913
  store i8 1, i8* %failed, align 1, !dbg !3914, !tbaa !3109
  br label %if.end63, !dbg !3915

if.end63:                                         ; preds = %if.then58, %lor.lhs.false
  %56 = load i8*, i8** %parent, align 8, !dbg !3916, !tbaa !2998
  call void @free(i8* %56) #10, !dbg !3917
  %57 = load i8, i8* %failed, align 1, !dbg !3918, !tbaa !3109
  %tobool64 = trunc i8 %57 to i1, !dbg !3918
  br i1 %tobool64, label %if.then70, label %lor.lhs.false66, !dbg !3920

lor.lhs.false66:                                  ; preds = %if.end63
  %58 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3921, !tbaa !2998
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 3, !dbg !3922, !ctir !1361
  %59 = load i64, i64* %fts_dev, align 8, !dbg !3922, !tbaa !3923, !ctir !230
  %st_dev67 = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !3924, !ctir !1390
  %60 = load i64, i64* %st_dev67, align 8, !dbg !3924, !tbaa !3876, !ctir !231
  %cmp68 = icmp ne i64 %59, %60, !dbg !3925
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !3926

if.then70:                                        ; preds = %lor.lhs.false66, %if.end63
  %61 = load i8, i8* %failed, align 1, !dbg !3927, !tbaa !3109
  %tobool71 = trunc i8 %61 to i1, !dbg !3927
  br i1 %tobool71, label %if.end77, label %if.then72, !dbg !3930

if.then72:                                        ; preds = %if.then70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #10, !dbg !3931
  %62 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3933, !tbaa !2998
  %fts_path74 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 7, !dbg !3933, !ctir !1454
  %63 = load i8*, i8** %fts_path74, align 8, !dbg !3933, !tbaa !2998, !ctir !9
  %call75 = call i8* @quotearg_style(i32 4, i8* %63), !dbg !3933
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call73, i8* %call75), !dbg !3934
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.76, i64 0, i64 0)) #10, !dbg !3935
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call76), !dbg !3936
  br label %if.end77, !dbg !3937

if.end77:                                         ; preds = %if.then72, %if.then70
  %64 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3938, !tbaa !2998
  %65 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3939, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %64, %struct._ftsent* %65), !dbg !3940
  store i32 4, i32* %retval, align 4, !dbg !3941
  br label %return, !dbg !3941

if.end78:                                         ; preds = %lor.lhs.false66
  br label %if.end79, !dbg !3942

if.end79:                                         ; preds = %if.end78, %if.end50
  br label %if.end80, !dbg !3943

if.end80:                                         ; preds = %if.end79, %if.end
  call void @llvm.dbg.declare(metadata i32* %is_empty_directory, metadata !3944, metadata !DIExpression()), !dbg !3946
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3947, metadata !DIExpression()), !dbg !3948
  %66 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3949, !tbaa !2998
  %67 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3950, !tbaa !2998
  %68 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3951, !tbaa !2998
  %call81 = call i32 @prompt(%struct.FTS* %66, %struct._ftsent* %67, i1 zeroext true, %struct.rm_options* %68, i32 2, i32* %is_empty_directory), !dbg !3952
  store i32 %call81, i32* %s, align 4, !dbg !3948, !tbaa !3660
  %69 = load i32, i32* %s, align 4, !dbg !3953, !tbaa !3660
  %cmp82 = icmp eq i32 %69, 2, !dbg !3955
  br i1 %cmp82, label %land.lhs.true84, label %if.end89, !dbg !3956

land.lhs.true84:                                  ; preds = %if.end80
  %70 = load i32, i32* %is_empty_directory, align 4, !dbg !3957, !tbaa !3660
  %cmp85 = icmp eq i32 %70, 4, !dbg !3958
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !3959

if.then87:                                        ; preds = %land.lhs.true84
  %71 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3960, !tbaa !2998
  %72 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3962, !tbaa !2998
  %73 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3963, !tbaa !2998
  %call88 = call i32 @excise(%struct.FTS* %71, %struct._ftsent* %72, %struct.rm_options* %73, i1 zeroext true), !dbg !3964
  store i32 %call88, i32* %s, align 4, !dbg !3965, !tbaa !3660
  %74 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3966, !tbaa !2998
  %75 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3967, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %74, %struct._ftsent* %75), !dbg !3968
  br label %if.end89, !dbg !3969

if.end89:                                         ; preds = %if.then87, %land.lhs.true84, %if.end80
  %76 = load i32, i32* %s, align 4, !dbg !3970, !tbaa !3660
  %cmp90 = icmp ne i32 %76, 2, !dbg !3972
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3973

if.then92:                                        ; preds = %if.end89
  %77 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3974, !tbaa !2998
  call void @mark_ancestor_dirs(%struct._ftsent* %77), !dbg !3976
  %78 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3977, !tbaa !2998
  %79 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3978, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %78, %struct._ftsent* %79), !dbg !3979
  br label %if.end93, !dbg !3980

if.end93:                                         ; preds = %if.then92, %if.end89
  %80 = load i32, i32* %s, align 4, !dbg !3981, !tbaa !3660
  store i32 %80, i32* %retval, align 4, !dbg !3982
  br label %return, !dbg !3982

sw.bb94:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %81 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3983, !tbaa !2998
  %fts_info95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 15, !dbg !3986, !ctir !1454
  %82 = load i16, i16* %fts_info95, align 8, !dbg !3986, !tbaa !3813, !ctir !33
  %conv96 = zext i16 %82 to i32, !dbg !3983
  %cmp97 = icmp eq i32 %conv96, 6, !dbg !3987
  br i1 %cmp97, label %land.lhs.true99, label %if.end117, !dbg !3988

land.lhs.true99:                                  ; preds = %sw.bb94
  %83 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3989, !tbaa !2998
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %83, i32 0, i32 2, !dbg !3990, !ctir !1342
  %84 = load i8, i8* %one_file_system, align 8, !dbg !3990, !tbaa !3692
  %tobool100 = trunc i8 %84 to i1, !dbg !3990, !ctir !120
  br i1 %tobool100, label %land.lhs.true102, label %if.end117, !dbg !3991

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %85 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3992, !tbaa !2998
  %fts_level103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 12, !dbg !3993, !ctir !1454
  %86 = load i64, i64* %fts_level103, align 8, !dbg !3993, !tbaa !3851, !ctir !568
  %cmp104 = icmp slt i64 0, %86, !dbg !3994
  br i1 %cmp104, label %land.lhs.true106, label %if.end117, !dbg !3995

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %87 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3996, !tbaa !2998
  %fts_statp107 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 18, !dbg !3997, !ctir !1454
  %arraydecay108 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp107, i64 0, i64 0, !dbg !3998
  %st_dev109 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay108, i32 0, i32 0, !dbg !3998, !ctir !1390
  %88 = load i64, i64* %st_dev109, align 8, !dbg !3998, !tbaa !3876, !ctir !231
  %89 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3999, !tbaa !2998
  %fts_dev110 = getelementptr inbounds %struct.FTS, %struct.FTS* %89, i32 0, i32 3, !dbg !4000, !ctir !1361
  %90 = load i64, i64* %fts_dev110, align 8, !dbg !4000, !tbaa !3923, !ctir !230
  %cmp111 = icmp ne i64 %88, %90, !dbg !4001
  br i1 %cmp111, label %if.then113, label %if.end117, !dbg !4002

if.then113:                                       ; preds = %land.lhs.true106
  %91 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4003, !tbaa !2998
  call void @mark_ancestor_dirs(%struct._ftsent* %91), !dbg !4005
  %call114 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #10, !dbg !4006
  %92 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4007, !tbaa !2998
  %fts_path115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 7, !dbg !4007, !ctir !1454
  %93 = load i8*, i8** %fts_path115, align 8, !dbg !4007, !tbaa !2998, !ctir !9
  %call116 = call i8* @quotearg_style(i32 4, i8* %93), !dbg !4007
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call114, i8* %call116), !dbg !4008
  store i32 4, i32* %retval, align 4, !dbg !4009
  br label %return, !dbg !4009

if.end117:                                        ; preds = %land.lhs.true106, %land.lhs.true102, %land.lhs.true99, %sw.bb94
  call void @llvm.dbg.declare(metadata i8* %is_dir, metadata !4010, metadata !DIExpression()), !dbg !4011
  %94 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4012, !tbaa !2998
  %fts_info118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 15, !dbg !4013, !ctir !1454
  %95 = load i16, i16* %fts_info118, align 8, !dbg !4013, !tbaa !3813, !ctir !33
  %conv119 = zext i16 %95 to i32, !dbg !4012
  %cmp120 = icmp eq i32 %conv119, 6, !dbg !4014
  br i1 %cmp120, label %lor.end, label %lor.rhs, !dbg !4015

lor.rhs:                                          ; preds = %if.end117
  %96 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4016, !tbaa !2998
  %fts_info122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 15, !dbg !4017, !ctir !1454
  %97 = load i16, i16* %fts_info122, align 8, !dbg !4017, !tbaa !3813, !ctir !33
  %conv123 = zext i16 %97 to i32, !dbg !4016
  %cmp124 = icmp eq i32 %conv123, 4, !dbg !4018
  br label %lor.end, !dbg !4015

lor.end:                                          ; preds = %lor.rhs, %if.end117
  %98 = phi i1 [ true, %if.end117 ], [ %cmp124, %lor.rhs ]
  %frombool = zext i1 %98 to i8, !dbg !4011
  store i8 %frombool, i8* %is_dir, align 1, !dbg !4011, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %s126, metadata !4019, metadata !DIExpression()), !dbg !4020
  %99 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4021, !tbaa !2998
  %100 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4022, !tbaa !2998
  %101 = load i8, i8* %is_dir, align 1, !dbg !4023, !tbaa !3109
  %tobool127 = trunc i8 %101 to i1, !dbg !4023
  %102 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4024, !tbaa !2998
  %call128 = call i32 @prompt(%struct.FTS* %99, %struct._ftsent* %100, i1 zeroext %tobool127, %struct.rm_options* %102, i32 3, i32* null), !dbg !4025
  store i32 %call128, i32* %s126, align 4, !dbg !4020, !tbaa !3660
  %103 = load i32, i32* %s126, align 4, !dbg !4026, !tbaa !3660
  %cmp129 = icmp ne i32 %103, 2, !dbg !4028
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !4029

if.then131:                                       ; preds = %lor.end
  %104 = load i32, i32* %s126, align 4, !dbg !4030, !tbaa !3660
  store i32 %104, i32* %retval, align 4, !dbg !4031
  br label %return, !dbg !4031

if.end132:                                        ; preds = %lor.end
  %105 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4032, !tbaa !2998
  %106 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4033, !tbaa !2998
  %107 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4034, !tbaa !2998
  %108 = load i8, i8* %is_dir, align 1, !dbg !4035, !tbaa !3109
  %tobool133 = trunc i8 %108 to i1, !dbg !4035
  %call134 = call i32 @excise(%struct.FTS* %105, %struct._ftsent* %106, %struct.rm_options* %107, i1 zeroext %tobool133), !dbg !4036
  store i32 %call134, i32* %retval, align 4, !dbg !4037
  br label %return, !dbg !4037

sw.bb135:                                         ; preds = %entry
  br label %do.body136, !dbg !4038

do.body136:                                       ; preds = %sw.bb135
  %call137 = call i8* @gettext(i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.15.77, i64 0, i64 0)) #10, !dbg !4039
  %109 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4039, !tbaa !2998
  %fts_path138 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %109, i32 0, i32 7, !dbg !4039, !ctir !1454
  %110 = load i8*, i8** %fts_path138, align 8, !dbg !4039, !tbaa !2998, !ctir !9
  %call139 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %110), !dbg !4039
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call137, i8* %call139), !dbg !4039
  br label %do.end140, !dbg !4039

do.end140:                                        ; preds = %do.body136
  %111 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4041, !tbaa !2998
  %112 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4042, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %111, %struct._ftsent* %112), !dbg !4043
  store i32 4, i32* %retval, align 4, !dbg !4044
  br label %return, !dbg !4044

sw.bb141:                                         ; preds = %entry
  %113 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4045, !tbaa !2998
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %113, i32 0, i32 8, !dbg !4046, !ctir !1454
  %114 = load i32, i32* %fts_errno, align 8, !dbg !4046, !tbaa !2985, !ctir !7
  %call142 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.78, i64 0, i64 0)) #10, !dbg !4047
  %115 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4048, !tbaa !2998
  %fts_path143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %115, i32 0, i32 7, !dbg !4048, !ctir !1454
  %116 = load i8*, i8** %fts_path143, align 8, !dbg !4048, !tbaa !2998, !ctir !9
  %call144 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %116), !dbg !4048
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %114, i8* %call142, i8* %call144), !dbg !4049
  %117 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4050, !tbaa !2998
  %118 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4051, !tbaa !2998
  call void @fts_skip_tree(%struct.FTS* %117, %struct._ftsent* %118), !dbg !4052
  store i32 4, i32* %retval, align 4, !dbg !4053
  br label %return, !dbg !4053

sw.default:                                       ; preds = %entry
  %call145 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17.79, i64 0, i64 0)) #10, !dbg !4054
  %119 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4055, !tbaa !2998
  %fts_info146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 15, !dbg !4056, !ctir !1454
  %120 = load i16, i16* %fts_info146, align 8, !dbg !4056, !tbaa !3813, !ctir !33
  %conv147 = zext i16 %120 to i32, !dbg !4055
  %121 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4057, !tbaa !2998
  %fts_path148 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 7, !dbg !4057, !ctir !1454
  %122 = load i8*, i8** %fts_path148, align 8, !dbg !4057, !tbaa !2998, !ctir !9
  %call149 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %122), !dbg !4057
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call145, i32 %conv147, i8* %call149, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18.80, i64 0, i64 0)), !dbg !4058
  call void @abort() #13, !dbg !4059
  unreachable, !dbg !4059

return:                                           ; preds = %sw.bb141, %do.end140, %if.end132, %if.then131, %if.then113, %if.end93, %if.end77, %do.end, %if.then15, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !4060
  ret i32 %123, !dbg !4060
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_empty_dir(i32 %fd_cwd, i8* %dir) #4 !dbg !4061 !ctir !1458 {
entry:
  %retval = alloca i1, align 1
  %fd_cwd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !609
  %dp = alloca %struct.dirent*, align 8, !ctir !1460
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !4062, metadata !DIExpression()), !dbg !4063
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !4064, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !4066, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !4068, metadata !DIExpression()), !dbg !4069
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !4070, metadata !DIExpression()), !dbg !4071
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4072, metadata !DIExpression()), !dbg !4073
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4074, !tbaa !2985
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !4075, !tbaa !2998
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %0, i8* %1, i32 198912), !dbg !4076
  store i32 %call, i32* %fd, align 4, !dbg !4073, !tbaa !2985
  %2 = load i32, i32* %fd, align 4, !dbg !4077, !tbaa !2985
  %cmp = icmp slt i32 %2, 0, !dbg !4079
  br i1 %cmp, label %if.then, label %if.end, !dbg !4080

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4081
  br label %return, !dbg !4081

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %fd, align 4, !dbg !4082, !tbaa !2985
  %call1 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !4083
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !4084, !tbaa !2998
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4085, !tbaa !2998
  %cmp2 = icmp eq %struct.__dirstream* %4, null, !dbg !4087
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4088

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %fd, align 4, !dbg !4089, !tbaa !2985
  %call4 = call i32 @close(i32 %5), !dbg !4091
  store i1 false, i1* %retval, align 1, !dbg !4092
  br label %return, !dbg !4092

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !4093
  store i32 0, i32* %call6, align 4, !dbg !4094, !tbaa !2985, !ctir !7
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4095, !tbaa !2998
  %call7 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %6), !dbg !4096
  store %struct.dirent* %call7, %struct.dirent** %dp, align 8, !dbg !4097, !tbaa !2998
  %call8 = call i32* @__errno_location() #15, !dbg !4098
  %7 = load i32, i32* %call8, align 4, !dbg !4098, !tbaa !2985, !ctir !7
  store i32 %7, i32* %saved_errno, align 4, !dbg !4099, !tbaa !2985
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4100, !tbaa !2998
  %call9 = call i32 @closedir(%struct.__dirstream* %8), !dbg !4101
  %9 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4102, !tbaa !2998
  %cmp10 = icmp ne %struct.dirent* %9, null, !dbg !4104
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4105

if.then11:                                        ; preds = %if.end5
  store i1 false, i1* %retval, align 1, !dbg !4106
  br label %return, !dbg !4106

if.end12:                                         ; preds = %if.end5
  %10 = load i32, i32* %saved_errno, align 4, !dbg !4107, !tbaa !2985
  %cmp13 = icmp eq i32 %10, 0, !dbg !4108
  %11 = zext i1 %cmp13 to i64, !dbg !4107
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !4107
  %tobool = icmp ne i32 %cond, 0, !dbg !4107
  store i1 %tobool, i1* %retval, align 1, !dbg !4109
  br label %return, !dbg !4109

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !4110
  ret i1 %12, !dbg !4110
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_ancestor_dirs(%struct._ftsent* %ent) #4 !dbg !4111 !ctir !1471 {
entry:
  %ent.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !1453
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4112, metadata !DIExpression()), !dbg !4113
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !4114, metadata !DIExpression()), !dbg !4115
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4116, !tbaa !2998
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 1, !dbg !4118, !ctir !1454
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !4118, !tbaa !2998, !ctir !1366
  store %struct._ftsent* %1, %struct._ftsent** %p, align 8, !dbg !4119, !tbaa !2998
  br label %for.cond, !dbg !4120

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4121, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 12, !dbg !4123, !ctir !1454
  %3 = load i64, i64* %fts_level, align 8, !dbg !4123, !tbaa !3851, !ctir !568
  %cmp = icmp sle i64 0, %3, !dbg !4124
  br i1 %cmp, label %for.body, label %for.end, !dbg !4125

for.body:                                         ; preds = %for.cond
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4126, !tbaa !2998
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 4, !dbg !4129, !ctir !1454
  %5 = load i64, i64* %fts_number, align 8, !dbg !4129, !tbaa !3851, !ctir !31
  %tobool = icmp ne i64 %5, 0, !dbg !4126
  br i1 %tobool, label %if.then, label %if.end, !dbg !4130

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4131

if.end:                                           ; preds = %for.body
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4132, !tbaa !2998
  %fts_number1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 4, !dbg !4133, !ctir !1454
  store i64 1, i64* %fts_number1, align 8, !dbg !4134, !tbaa !3851, !ctir !31
  br label %for.inc, !dbg !4135

for.inc:                                          ; preds = %if.end
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4136, !tbaa !2998
  %fts_parent2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 1, !dbg !4137, !ctir !1454
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_parent2, align 8, !dbg !4137, !tbaa !2998, !ctir !1366
  store %struct._ftsent* %8, %struct._ftsent** %p, align 8, !dbg !4138, !tbaa !2998
  br label %for.cond, !dbg !4139, !llvm.loop !4140

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4142
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_skip_tree(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !4143 !ctir !1473 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %__x = alloca %struct._ftsent*, align 8, !ctir !1453
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4144, metadata !DIExpression()), !dbg !4145
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4146, metadata !DIExpression()), !dbg !4147
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4148, !tbaa !2998
  %1 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4149, !tbaa !2998
  %call = call i32 @rpl_fts_set(%struct.FTS* %0, %struct._ftsent* %1, i32 4), !dbg !4150
  call void @llvm.dbg.declare(metadata %struct._ftsent** %__x, metadata !4151, metadata !DIExpression()), !dbg !4153
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4153, !tbaa !2998
  %call1 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %2), !dbg !4153
  store %struct._ftsent* %call1, %struct._ftsent** %__x, align 8, !dbg !4153, !tbaa !2998
  %3 = load %struct._ftsent*, %struct._ftsent** %__x, align 8, !dbg !4153, !tbaa !2998
  ret void, !dbg !4154
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !4155 !ctir !200 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !4156, metadata !DIExpression()), !dbg !4157
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !4158, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !4158, !ctir !115
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4158, !tbaa !3660
  %conv = sext i8 %1 to i32, !dbg !4158
  %cmp = icmp eq i32 %conv, 46, !dbg !4160
  br i1 %cmp, label %if.then, label %if.else, !dbg !4161

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !4162, metadata !DIExpression()), !dbg !4164
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !4165, !tbaa !2998
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !4166, !tbaa !2998
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !4166, !ctir !115
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4166, !tbaa !3660
  %conv3 = sext i8 %4 to i32, !dbg !4166
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !4167
  %conv5 = zext i1 %cmp4 to i32, !dbg !4167
  %add = add nsw i32 %conv5, 1, !dbg !4168
  %idxprom = sext i32 %add to i64, !dbg !4165
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !4165, !ctir !115
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !4165, !tbaa !3660
  store i8 %5, i8* %sep, align 1, !dbg !4164, !tbaa !3660
  %6 = load i8, i8* %sep, align 1, !dbg !4169, !tbaa !3660
  %tobool = icmp ne i8 %6, 0, !dbg !4169
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4170

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !4171, !tbaa !3660
  %conv7 = sext i8 %7 to i32, !dbg !4171
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !4171
  br label %lor.end, !dbg !4170

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !4172
  br label %return, !dbg !4172

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4173
  br label %return, !dbg !4173

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !4174
  ret i1 %9, !dbg !4174
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @prompt(%struct.FTS* %fts, %struct._ftsent* %ent, i1 zeroext %is_dir, %struct.rm_options* %x, i32 %mode, i32* %is_empty_p) #4 !dbg !4175 !ctir !1475 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %is_dir.addr = alloca i8, align 1
  %x.addr = alloca %struct.rm_options*, align 8
  %mode.addr = alloca i32, align 4
  %is_empty_p.addr = alloca i32*, align 8
  %fd_cwd = alloca i32, align 4, !ctir !7
  %full_name = alloca i8*, align 8, !ctir !115
  %filename = alloca i8*, align 8, !ctir !115
  %st = alloca %struct.stat, align 8, !ctir !1390
  %sbuf = alloca %struct.stat*, align 8, !ctir !1482
  %dirent_type = alloca i32, align 4, !ctir !7
  %write_protected = alloca i32, align 4, !ctir !7
  %is_empty = alloca i8, align 1, !ctir !120
  %wp_errno = alloca i32, align 4, !ctir !7
  %quoted_name = alloca i8*, align 8, !ctir !115
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4176, metadata !DIExpression()), !dbg !4177
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4178, metadata !DIExpression()), !dbg !4179
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !4180, metadata !DIExpression()), !dbg !4181
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4182, metadata !DIExpression()), !dbg !4183
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4184, metadata !DIExpression()), !dbg !4185
  store i32* %is_empty_p, i32** %is_empty_p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32** %is_empty_p.addr, metadata !4186, metadata !DIExpression()), !dbg !4187
  call void @llvm.dbg.declare(metadata i32* %fd_cwd, metadata !4188, metadata !DIExpression()), !dbg !4189
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4190, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !4191, !ctir !1478
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !4191, !tbaa !3826, !ctir !7
  store i32 %1, i32* %fd_cwd, align 4, !dbg !4189, !tbaa !2985
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !4192, metadata !DIExpression()), !dbg !4193
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4194, !tbaa !2998
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 7, !dbg !4195, !ctir !1480
  %3 = load i8*, i8** %fts_path, align 8, !dbg !4195, !tbaa !2998, !ctir !9
  store i8* %3, i8** %full_name, align 8, !dbg !4193, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !4196, metadata !DIExpression()), !dbg !4197
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4198, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !4199, !ctir !1480
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !4199, !tbaa !2998, !ctir !9
  store i8* %5, i8** %filename, align 8, !dbg !4197, !tbaa !2998
  %6 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4200, !tbaa !2998
  %tobool = icmp ne i32* %6, null, !dbg !4200
  br i1 %tobool, label %if.then, label %if.end, !dbg !4202

if.then:                                          ; preds = %entry
  %7 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4203, !tbaa !2998
  store i32 2, i32* %7, align 4, !dbg !4204, !tbaa !3660, !ctir !1457
  br label %if.end, !dbg !4205

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4206, metadata !DIExpression()), !dbg !4207
  call void @llvm.dbg.declare(metadata %struct.stat** %sbuf, metadata !4208, metadata !DIExpression()), !dbg !4209
  store %struct.stat* %st, %struct.stat** %sbuf, align 8, !dbg !4209, !tbaa !2998
  %8 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4210, !tbaa !2998
  %call = call %struct.stat* @cache_stat_init(%struct.stat* %8), !dbg !4211
  call void @llvm.dbg.declare(metadata i32* %dirent_type, metadata !4212, metadata !DIExpression()), !dbg !4213
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !4214, !tbaa !3109
  %tobool1 = trunc i8 %9 to i1, !dbg !4214
  %10 = zext i1 %tobool1 to i64, !dbg !4214
  %cond = select i1 %tobool1, i32 4, i32 0, !dbg !4214
  store i32 %cond, i32* %dirent_type, align 4, !dbg !4213, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %write_protected, metadata !4215, metadata !DIExpression()), !dbg !4216
  store i32 0, i32* %write_protected, align 4, !dbg !4216, !tbaa !2985
  call void @llvm.dbg.declare(metadata i8* %is_empty, metadata !4217, metadata !DIExpression()), !dbg !4218
  store i8 0, i8* %is_empty, align 1, !dbg !4218, !tbaa !3109
  %11 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4219, !tbaa !2998
  %tobool2 = icmp ne i32* %11, null, !dbg !4219
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !4221

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %fd_cwd, align 4, !dbg !4222, !tbaa !2985
  %13 = load i8*, i8** %filename, align 8, !dbg !4224, !tbaa !2998
  %call4 = call zeroext i1 @is_empty_dir(i32 %12, i8* %13), !dbg !4225
  %frombool5 = zext i1 %call4 to i8, !dbg !4226
  store i8 %frombool5, i8* %is_empty, align 1, !dbg !4226, !tbaa !3109
  %14 = load i8, i8* %is_empty, align 1, !dbg !4227, !tbaa !3109
  %tobool6 = trunc i8 %14 to i1, !dbg !4227
  %15 = zext i1 %tobool6 to i64, !dbg !4227
  %cond7 = select i1 %tobool6, i32 4, i32 3, !dbg !4227
  %16 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4228, !tbaa !2998
  store i32 %cond7, i32* %16, align 4, !dbg !4229, !tbaa !3660, !ctir !1457
  br label %if.end8, !dbg !4230

if.end8:                                          ; preds = %if.then3, %if.end
  %17 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4231, !tbaa !2998
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 4, !dbg !4233, !ctir !1480
  %18 = load i64, i64* %fts_number, align 8, !dbg !4233, !tbaa !3851, !ctir !31
  %tobool9 = icmp ne i64 %18, 0, !dbg !4231
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !4234

if.then10:                                        ; preds = %if.end8
  store i32 3, i32* %retval, align 4, !dbg !4235
  br label %return, !dbg !4235

if.end11:                                         ; preds = %if.end8
  %19 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4236, !tbaa !2998
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %19, i32 0, i32 1, !dbg !4238, !ctir !1342
  %20 = load i32, i32* %interactive, align 4, !dbg !4238, !tbaa !3696, !ctir !100
  %cmp = icmp eq i32 %20, 5, !dbg !4239
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !4240

if.then12:                                        ; preds = %if.end11
  store i32 2, i32* %retval, align 4, !dbg !4241
  br label %return, !dbg !4241

if.end13:                                         ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %wp_errno, metadata !4242, metadata !DIExpression()), !dbg !4243
  store i32 0, i32* %wp_errno, align 4, !dbg !4243, !tbaa !2985
  %21 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4244, !tbaa !2998
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %21, i32 0, i32 0, !dbg !4246, !ctir !1342
  %22 = load i8, i8* %ignore_missing_files, align 8, !dbg !4246, !tbaa !3680
  %tobool14 = trunc i8 %22 to i1, !dbg !4246, !ctir !120
  br i1 %tobool14, label %if.end23, label %land.lhs.true, !dbg !4247

land.lhs.true:                                    ; preds = %if.end13
  %23 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4248, !tbaa !2998
  %interactive15 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %23, i32 0, i32 1, !dbg !4249, !ctir !1342
  %24 = load i32, i32* %interactive15, align 4, !dbg !4249, !tbaa !3696, !ctir !100
  %cmp16 = icmp eq i32 %24, 3, !dbg !4250
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false, !dbg !4251

lor.lhs.false:                                    ; preds = %land.lhs.true
  %25 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4252, !tbaa !2998
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %25, i32 0, i32 7, !dbg !4253, !ctir !1342
  %26 = load i8, i8* %stdin_tty, align 1, !dbg !4253, !tbaa !3700
  %tobool17 = trunc i8 %26 to i1, !dbg !4253, !ctir !120
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !4254

land.lhs.true18:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load i32, i32* %dirent_type, align 4, !dbg !4255, !tbaa !2985
  %cmp19 = icmp ne i32 %27, 10, !dbg !4256
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !4257

if.then20:                                        ; preds = %land.lhs.true18
  %28 = load i32, i32* %fd_cwd, align 4, !dbg !4258, !tbaa !2985
  %29 = load i8*, i8** %filename, align 8, !dbg !4260, !tbaa !2998
  %30 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4261, !tbaa !2998
  %call21 = call i32 @write_protected_non_symlink(i32 %28, i8* %29, %struct.stat* %30), !dbg !4262
  store i32 %call21, i32* %write_protected, align 4, !dbg !4263, !tbaa !2985
  %call22 = call i32* @__errno_location() #15, !dbg !4264
  %31 = load i32, i32* %call22, align 4, !dbg !4264, !tbaa !2985, !ctir !7
  store i32 %31, i32* %wp_errno, align 4, !dbg !4265, !tbaa !2985
  br label %if.end23, !dbg !4266

if.end23:                                         ; preds = %if.then20, %land.lhs.true18, %lor.lhs.false, %if.end13
  %32 = load i32, i32* %write_protected, align 4, !dbg !4267, !tbaa !2985
  %tobool24 = icmp ne i32 %32, 0, !dbg !4267
  br i1 %tobool24, label %if.then28, label %lor.lhs.false25, !dbg !4269

lor.lhs.false25:                                  ; preds = %if.end23
  %33 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4270, !tbaa !2998
  %interactive26 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %33, i32 0, i32 1, !dbg !4271, !ctir !1342
  %34 = load i32, i32* %interactive26, align 4, !dbg !4271, !tbaa !3696, !ctir !100
  %cmp27 = icmp eq i32 %34, 3, !dbg !4272
  br i1 %cmp27, label %if.then28, label %if.end99, !dbg !4273

if.then28:                                        ; preds = %lor.lhs.false25, %if.end23
  %35 = load i32, i32* %write_protected, align 4, !dbg !4274, !tbaa !2985
  %cmp29 = icmp sle i32 0, %35, !dbg !4277
  br i1 %cmp29, label %land.lhs.true30, label %if.end47, !dbg !4278

land.lhs.true30:                                  ; preds = %if.then28
  %36 = load i32, i32* %dirent_type, align 4, !dbg !4279, !tbaa !2985
  %cmp31 = icmp eq i32 %36, 0, !dbg !4280
  br i1 %cmp31, label %if.then32, label %if.end47, !dbg !4281

if.then32:                                        ; preds = %land.lhs.true30
  %37 = load i32, i32* %fd_cwd, align 4, !dbg !4282, !tbaa !2985
  %38 = load i8*, i8** %filename, align 8, !dbg !4285, !tbaa !2998
  %39 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4286, !tbaa !2998
  %call33 = call i32 @cache_fstatat(i32 %37, i8* %38, %struct.stat* %39, i32 256), !dbg !4287
  %cmp34 = icmp eq i32 %call33, 0, !dbg !4288
  br i1 %cmp34, label %if.then35, label %if.else44, !dbg !4289

if.then35:                                        ; preds = %if.then32
  %40 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4290, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 3, !dbg !4290, !ctir !1390
  %41 = load i32, i32* %st_mode, align 8, !dbg !4290, !tbaa !3181, !ctir !133
  %and = and i32 %41, 61440, !dbg !4290
  %cmp36 = icmp eq i32 %and, 40960, !dbg !4290
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !4293

if.then37:                                        ; preds = %if.then35
  store i32 10, i32* %dirent_type, align 4, !dbg !4294, !tbaa !2985
  br label %if.end43, !dbg !4295

if.else:                                          ; preds = %if.then35
  %42 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4296, !tbaa !2998
  %st_mode38 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 3, !dbg !4296, !ctir !1390
  %43 = load i32, i32* %st_mode38, align 8, !dbg !4296, !tbaa !3181, !ctir !133
  %and39 = and i32 %43, 61440, !dbg !4296
  %cmp40 = icmp eq i32 %and39, 16384, !dbg !4296
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !4298

if.then41:                                        ; preds = %if.else
  store i32 4, i32* %dirent_type, align 4, !dbg !4299, !tbaa !2985
  br label %if.end42, !dbg !4300

if.end42:                                         ; preds = %if.then41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then37
  br label %if.end46, !dbg !4301

if.else44:                                        ; preds = %if.then32
  store i32 -1, i32* %write_protected, align 4, !dbg !4302, !tbaa !2985
  %call45 = call i32* @__errno_location() #15, !dbg !4304
  %44 = load i32, i32* %call45, align 4, !dbg !4304, !tbaa !2985, !ctir !7
  store i32 %44, i32* %wp_errno, align 4, !dbg !4305, !tbaa !2985
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.end43
  br label %if.end47, !dbg !4306

if.end47:                                         ; preds = %if.end46, %land.lhs.true30, %if.then28
  %45 = load i32, i32* %write_protected, align 4, !dbg !4307, !tbaa !2985
  %cmp48 = icmp sle i32 0, %45, !dbg !4309
  br i1 %cmp48, label %if.then49, label %if.end62, !dbg !4310

if.then49:                                        ; preds = %if.end47
  %46 = load i32, i32* %dirent_type, align 4, !dbg !4311, !tbaa !2985
  switch i32 %46, label %sw.epilog [
    i32 10, label %sw.bb
    i32 4, label %sw.bb54
  ], !dbg !4312

sw.bb:                                            ; preds = %if.then49
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4313, !tbaa !2998
  %interactive50 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 1, !dbg !4316, !ctir !1342
  %48 = load i32, i32* %interactive50, align 4, !dbg !4316, !tbaa !3696, !ctir !100
  %cmp51 = icmp ne i32 %48, 3, !dbg !4317
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !4318

if.then52:                                        ; preds = %sw.bb
  store i32 2, i32* %retval, align 4, !dbg !4319
  br label %return, !dbg !4319

if.end53:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !4320

sw.bb54:                                          ; preds = %if.then49
  %49 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4321, !tbaa !2998
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %49, i32 0, i32 3, !dbg !4323, !ctir !1342
  %50 = load i8, i8* %recursive, align 1, !dbg !4323, !tbaa !3688
  %tobool55 = trunc i8 %50 to i1, !dbg !4323, !ctir !120
  br i1 %tobool55, label %if.end61, label %lor.lhs.false56, !dbg !4324

lor.lhs.false56:                                  ; preds = %sw.bb54
  %51 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4325, !tbaa !2998
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %51, i32 0, i32 4, !dbg !4326, !ctir !1342
  %52 = load i8, i8* %remove_empty_directories, align 2, !dbg !4326, !tbaa !3684
  %tobool57 = trunc i8 %52 to i1, !dbg !4326, !ctir !120
  br i1 %tobool57, label %land.lhs.true58, label %if.then60, !dbg !4327

land.lhs.true58:                                  ; preds = %lor.lhs.false56
  %53 = load i8, i8* %is_empty, align 1, !dbg !4328, !tbaa !3109
  %tobool59 = trunc i8 %53 to i1, !dbg !4328
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !4329

if.then60:                                        ; preds = %land.lhs.true58, %lor.lhs.false56
  store i32 -1, i32* %write_protected, align 4, !dbg !4330, !tbaa !2985
  store i32 21, i32* %wp_errno, align 4, !dbg !4332, !tbaa !2985
  br label %if.end61, !dbg !4333

if.end61:                                         ; preds = %if.then60, %land.lhs.true58, %sw.bb54
  br label %sw.epilog, !dbg !4334

sw.epilog:                                        ; preds = %if.then49, %if.end61, %if.end53
  br label %if.end62, !dbg !4335

if.end62:                                         ; preds = %sw.epilog, %if.end47
  call void @llvm.dbg.declare(metadata i8** %quoted_name, metadata !4336, metadata !DIExpression()), !dbg !4337
  %54 = load i8*, i8** %full_name, align 8, !dbg !4338, !tbaa !2998
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !4338
  store i8* %call63, i8** %quoted_name, align 8, !dbg !4337, !tbaa !2998
  %55 = load i32, i32* %write_protected, align 4, !dbg !4339, !tbaa !2985
  %cmp64 = icmp slt i32 %55, 0, !dbg !4341
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !4342

if.then65:                                        ; preds = %if.end62
  %56 = load i32, i32* %wp_errno, align 4, !dbg !4343, !tbaa !2985
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !4345
  %57 = load i8*, i8** %quoted_name, align 8, !dbg !4346, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %56, i8* %call66, i8* %57), !dbg !4347
  store i32 4, i32* %retval, align 4, !dbg !4348
  br label %return, !dbg !4348

if.end67:                                         ; preds = %if.end62
  %58 = load i32, i32* %dirent_type, align 4, !dbg !4349, !tbaa !2985
  %cmp68 = icmp eq i32 %58, 4, !dbg !4351
  br i1 %cmp68, label %land.lhs.true69, label %if.else79, !dbg !4352

land.lhs.true69:                                  ; preds = %if.end67
  %59 = load i32, i32* %mode.addr, align 4, !dbg !4353, !tbaa !3660
  %cmp70 = icmp eq i32 %59, 2, !dbg !4354
  br i1 %cmp70, label %land.lhs.true71, label %if.else79, !dbg !4355

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %60 = load i8, i8* %is_empty, align 1, !dbg !4356, !tbaa !3109
  %tobool72 = trunc i8 %60 to i1, !dbg !4356
  br i1 %tobool72, label %if.else79, label %if.then73, !dbg !4357

if.then73:                                        ; preds = %land.lhs.true71
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4358, !tbaa !2998
  %62 = load i32, i32* %write_protected, align 4, !dbg !4359, !tbaa !2985
  %tobool74 = icmp ne i32 %62, 0, !dbg !4359
  br i1 %tobool74, label %cond.true, label %cond.false, !dbg !4359

cond.true:                                        ; preds = %if.then73
  %call75 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19.83, i64 0, i64 0)) #10, !dbg !4360
  br label %cond.end, !dbg !4359

cond.false:                                       ; preds = %if.then73
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.84, i64 0, i64 0)) #10, !dbg !4361
  br label %cond.end, !dbg !4359

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond77 = phi i8* [ %call75, %cond.true ], [ %call76, %cond.false ], !dbg !4359
  %63 = load i8*, i8** @program_name, align 8, !dbg !4362, !tbaa !2998
  %64 = load i8*, i8** %quoted_name, align 8, !dbg !4363, !tbaa !2998
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %cond77, i8* %63, i8* %64), !dbg !4364
  br label %if.end95, !dbg !4364

if.else79:                                        ; preds = %land.lhs.true71, %land.lhs.true69, %if.end67
  %65 = load i32, i32* %fd_cwd, align 4, !dbg !4365, !tbaa !2985
  %66 = load i8*, i8** %filename, align 8, !dbg !4368, !tbaa !2998
  %67 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4369, !tbaa !2998
  %call80 = call i32 @cache_fstatat(i32 %65, i8* %66, %struct.stat* %67, i32 256), !dbg !4370
  %cmp81 = icmp ne i32 %call80, 0, !dbg !4371
  br i1 %cmp81, label %if.then82, label %if.end85, !dbg !4372

if.then82:                                        ; preds = %if.else79
  %call83 = call i32* @__errno_location() #15, !dbg !4373
  %68 = load i32, i32* %call83, align 4, !dbg !4373, !tbaa !2985, !ctir !7
  %call84 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !4375
  %69 = load i8*, i8** %quoted_name, align 8, !dbg !4376, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call84, i8* %69), !dbg !4377
  store i32 4, i32* %retval, align 4, !dbg !4378
  br label %return, !dbg !4378

if.end85:                                         ; preds = %if.else79
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4379, !tbaa !2998
  %71 = load i32, i32* %write_protected, align 4, !dbg !4380, !tbaa !2985
  %tobool86 = icmp ne i32 %71, 0, !dbg !4380
  br i1 %tobool86, label %cond.true87, label %cond.false89, !dbg !4380

cond.true87:                                      ; preds = %if.end85
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.85, i64 0, i64 0)) #10, !dbg !4381
  br label %cond.end91, !dbg !4380

cond.false89:                                     ; preds = %if.end85
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22.86, i64 0, i64 0)) #10, !dbg !4382
  br label %cond.end91, !dbg !4380

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i8* [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !4380
  %72 = load i8*, i8** @program_name, align 8, !dbg !4383, !tbaa !2998
  %73 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4384, !tbaa !2998
  %call93 = call i8* @file_type(%struct.stat* %73) #14, !dbg !4385
  %74 = load i8*, i8** %quoted_name, align 8, !dbg !4386, !tbaa !2998
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* %cond92, i8* %72, i8* %call93, i8* %74), !dbg !4387
  br label %if.end95

if.end95:                                         ; preds = %cond.end91, %cond.end
  %call96 = call zeroext i1 @yesno(), !dbg !4388
  br i1 %call96, label %if.end98, label %if.then97, !dbg !4390

if.then97:                                        ; preds = %if.end95
  store i32 3, i32* %retval, align 4, !dbg !4391
  br label %return, !dbg !4391

if.end98:                                         ; preds = %if.end95
  br label %if.end99, !dbg !4392

if.end99:                                         ; preds = %if.end98, %lor.lhs.false25
  store i32 2, i32* %retval, align 4, !dbg !4393
  br label %return, !dbg !4393

return:                                           ; preds = %if.end99, %if.then97, %if.then82, %if.then65, %if.then52, %if.then12, %if.then10
  %75 = load i32, i32* %retval, align 4, !dbg !4394
  ret i32 %75, !dbg !4394
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @excise(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x, i1 zeroext %is_dir) #4 !dbg !4395 !ctir !1523 {
entry:
  %retval = alloca i32, align 4
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %x.addr = alloca %struct.rm_options*, align 8
  %is_dir.addr = alloca i8, align 1
  %flag = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1390
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4396, metadata !DIExpression()), !dbg !4397
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4398, metadata !DIExpression()), !dbg !4399
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4400, metadata !DIExpression()), !dbg !4401
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !4402, metadata !DIExpression()), !dbg !4403
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !4404, metadata !DIExpression()), !dbg !4405
  %0 = load i8, i8* %is_dir.addr, align 1, !dbg !4406, !tbaa !3109
  %tobool = trunc i8 %0 to i1, !dbg !4406
  %1 = zext i1 %tobool to i64, !dbg !4406
  %cond = select i1 %tobool, i32 512, i32 0, !dbg !4406
  store i32 %cond, i32* %flag, align 4, !dbg !4405, !tbaa !2985
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4407, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 6, !dbg !4409, !ctir !1361
  %3 = load i32, i32* %fts_cwd_fd, align 4, !dbg !4409, !tbaa !3826, !ctir !7
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4410, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !4411, !ctir !1454
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !4411, !tbaa !2998, !ctir !9
  %6 = load i32, i32* %flag, align 4, !dbg !4412, !tbaa !2985
  %call = call i32 @unlinkat(i32 %3, i8* %5, i32 %6) #10, !dbg !4413
  %cmp = icmp eq i32 %call, 0, !dbg !4414
  br i1 %cmp, label %if.then, label %if.end9, !dbg !4415

if.then:                                          ; preds = %entry
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4416, !tbaa !2998
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 8, !dbg !4419, !ctir !1342
  %8 = load i8, i8* %verbose, align 2, !dbg !4419, !tbaa !3649
  %tobool1 = trunc i8 %8 to i1, !dbg !4419, !ctir !120
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4420

if.then2:                                         ; preds = %if.then
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !4421, !tbaa !3109
  %tobool3 = trunc i8 %9 to i1, !dbg !4421
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !4421

cond.true:                                        ; preds = %if.then2
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23.81, i64 0, i64 0)) #10, !dbg !4423
  br label %cond.end, !dbg !4421

cond.false:                                       ; preds = %if.then2
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24.82, i64 0, i64 0)) #10, !dbg !4424
  br label %cond.end, !dbg !4421

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i8* [ %call4, %cond.true ], [ %call5, %cond.false ], !dbg !4421
  %10 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4425, !tbaa !2998
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 7, !dbg !4425, !ctir !1454
  %11 = load i8*, i8** %fts_path, align 8, !dbg !4425, !tbaa !2998, !ctir !9
  %call7 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !4425
  %call8 = call i32 (i8*, ...) @printf(i8* %cond6, i8* %call7), !dbg !4426
  br label %if.end, !dbg !4427

if.end:                                           ; preds = %cond.end, %if.then
  store i32 2, i32* %retval, align 4, !dbg !4428
  br label %return, !dbg !4428

if.end9:                                          ; preds = %entry
  %call10 = call i32* @__errno_location() #15, !dbg !4429
  %12 = load i32, i32* %call10, align 4, !dbg !4429, !tbaa !2985, !ctir !7
  %cmp11 = icmp eq i32 %12, 30, !dbg !4431
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !4432

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4433, metadata !DIExpression()), !dbg !4435
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4436, !tbaa !2998
  %fts_cwd_fd13 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 6, !dbg !4438, !ctir !1361
  %14 = load i32, i32* %fts_cwd_fd13, align 4, !dbg !4438, !tbaa !3826, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4439, !tbaa !2998
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 6, !dbg !4440, !ctir !1454
  %16 = load i8*, i8** %fts_accpath14, align 8, !dbg !4440, !tbaa !2998, !ctir !9
  %call15 = call i32 @lstatat(i32 %14, i8* %16, %struct.stat* %st), !dbg !4441
  %tobool16 = icmp ne i32 %call15, 0, !dbg !4441
  br i1 %tobool16, label %land.lhs.true, label %if.then19, !dbg !4442

land.lhs.true:                                    ; preds = %if.then12
  %call17 = call i32* @__errno_location() #15, !dbg !4443
  %17 = load i32, i32* %call17, align 4, !dbg !4443, !tbaa !2985, !ctir !7
  %cmp18 = icmp eq i32 %17, 2, !dbg !4444
  br i1 %cmp18, label %if.end21, label %if.then19, !dbg !4445

if.then19:                                        ; preds = %land.lhs.true, %if.then12
  %call20 = call i32* @__errno_location() #15, !dbg !4446
  store i32 30, i32* %call20, align 4, !dbg !4447, !tbaa !2985, !ctir !7
  br label %if.end21, !dbg !4446

if.end21:                                         ; preds = %if.then19, %land.lhs.true
  br label %if.end22, !dbg !4448

if.end22:                                         ; preds = %if.end21, %if.end9
  %18 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4449, !tbaa !2998
  %call23 = call i32* @__errno_location() #15, !dbg !4451
  %19 = load i32, i32* %call23, align 4, !dbg !4451, !tbaa !2985, !ctir !7
  %call24 = call zeroext i1 @ignorable_missing(%struct.rm_options* %18, i32 %19), !dbg !4452
  br i1 %call24, label %if.then25, label %if.end26, !dbg !4453

if.then25:                                        ; preds = %if.end22
  store i32 2, i32* %retval, align 4, !dbg !4454
  br label %return, !dbg !4454

if.end26:                                         ; preds = %if.end22
  %20 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4455, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 15, !dbg !4457, !ctir !1454
  %21 = load i16, i16* %fts_info, align 8, !dbg !4457, !tbaa !3813, !ctir !33
  %conv = zext i16 %21 to i32, !dbg !4455
  %cmp27 = icmp eq i32 %conv, 4, !dbg !4458
  br i1 %cmp27, label %land.lhs.true29, label %if.end54, !dbg !4459

land.lhs.true29:                                  ; preds = %if.end26
  %call30 = call i32* @__errno_location() #15, !dbg !4460
  %22 = load i32, i32* %call30, align 4, !dbg !4460, !tbaa !2985, !ctir !7
  %cmp31 = icmp eq i32 %22, 39, !dbg !4461
  br i1 %cmp31, label %land.lhs.true44, label %lor.lhs.false, !dbg !4462

lor.lhs.false:                                    ; preds = %land.lhs.true29
  %call33 = call i32* @__errno_location() #15, !dbg !4463
  %23 = load i32, i32* %call33, align 4, !dbg !4463, !tbaa !2985, !ctir !7
  %cmp34 = icmp eq i32 %23, 21, !dbg !4464
  br i1 %cmp34, label %land.lhs.true44, label %lor.lhs.false36, !dbg !4465

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %call37 = call i32* @__errno_location() #15, !dbg !4466
  %24 = load i32, i32* %call37, align 4, !dbg !4466, !tbaa !2985, !ctir !7
  %cmp38 = icmp eq i32 %24, 20, !dbg !4467
  br i1 %cmp38, label %land.lhs.true44, label %lor.lhs.false40, !dbg !4468

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %call41 = call i32* @__errno_location() #15, !dbg !4469
  %25 = load i32, i32* %call41, align 4, !dbg !4469, !tbaa !2985, !ctir !7
  %cmp42 = icmp eq i32 %25, 17, !dbg !4470
  br i1 %cmp42, label %land.lhs.true44, label %if.end54, !dbg !4471

land.lhs.true44:                                  ; preds = %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false, %land.lhs.true29
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4472, !tbaa !2998
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 8, !dbg !4473, !ctir !1454
  %27 = load i32, i32* %fts_errno, align 8, !dbg !4473, !tbaa !2985, !ctir !7
  %cmp45 = icmp eq i32 %27, 1, !dbg !4474
  br i1 %cmp45, label %if.then51, label %lor.lhs.false47, !dbg !4475

lor.lhs.false47:                                  ; preds = %land.lhs.true44
  %28 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4476, !tbaa !2998
  %fts_errno48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 8, !dbg !4477, !ctir !1454
  %29 = load i32, i32* %fts_errno48, align 8, !dbg !4477, !tbaa !2985, !ctir !7
  %cmp49 = icmp eq i32 %29, 13, !dbg !4478
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !4479

if.then51:                                        ; preds = %lor.lhs.false47, %land.lhs.true44
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4480, !tbaa !2998
  %fts_errno52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 8, !dbg !4481, !ctir !1454
  %31 = load i32, i32* %fts_errno52, align 8, !dbg !4481, !tbaa !2985, !ctir !7
  %call53 = call i32* @__errno_location() #15, !dbg !4482
  store i32 %31, i32* %call53, align 4, !dbg !4483, !tbaa !2985, !ctir !7
  br label %if.end54, !dbg !4482

if.end54:                                         ; preds = %if.then51, %lor.lhs.false47, %lor.lhs.false40, %if.end26
  %call55 = call i32* @__errno_location() #15, !dbg !4484
  %32 = load i32, i32* %call55, align 4, !dbg !4484, !tbaa !2985, !ctir !7
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #10, !dbg !4485
  %33 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4486, !tbaa !2998
  %fts_path57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 7, !dbg !4486, !ctir !1454
  %34 = load i8*, i8** %fts_path57, align 8, !dbg !4486, !tbaa !2998, !ctir !9
  %call58 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !4486
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %32, i8* %call56, i8* %call58), !dbg !4487
  %35 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4488, !tbaa !2998
  call void @mark_ancestor_dirs(%struct._ftsent* %35), !dbg !4489
  store i32 4, i32* %retval, align 4, !dbg !4490
  br label %return, !dbg !4490

return:                                           ; preds = %if.end54, %if.then25, %if.end
  %36 = load i32, i32* %retval, align 4, !dbg !4491
  ret i32 %36, !dbg !4491
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options* %x, i32 %errnum) #4 !dbg !4492 !ctir !1525 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8
  %errnum.addr = alloca i32, align 4
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4493, metadata !DIExpression()), !dbg !4494
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !4495, metadata !DIExpression()), !dbg !4496
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4497, !tbaa !2998
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !4498, !ctir !1342
  %1 = load i8, i8* %ignore_missing_files, align 8, !dbg !4498, !tbaa !3680
  %tobool = trunc i8 %1 to i1, !dbg !4498, !ctir !120
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4499

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %errnum.addr, align 4, !dbg !4500, !tbaa !2985
  %call = call zeroext i1 @nonexistent_file_errno(i32 %2), !dbg !4501
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !4502
  ret i1 %3, !dbg !4503
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @nonexistent_file_errno(i32 %errnum) #4 !dbg !4504 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !4505, metadata !DIExpression()), !dbg !4506
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !4507, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 84, label %sw.bb
    i32 22, label %sw.bb
    i32 2, label %sw.bb
    i32 20, label %sw.bb
  ], !dbg !4508

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !4509
  br label %return, !dbg !4509

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4511
  br label %return, !dbg !4511

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !4512
  ret i1 %1, !dbg !4512
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat* %st) #4 !dbg !4513 !ctir !1517 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4516, !tbaa !2998
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !4517, !ctir !1390
  store i64 -1, i64* %st_size, align 8, !dbg !4518, !tbaa !4519, !ctir !29
  %1 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4520, !tbaa !2998
  ret %struct.stat* %1, !dbg !4521
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @write_protected_non_symlink(i32 %fd_cwd, i8* %file, %struct.stat* %buf) #4 !dbg !4522 !ctir !1519 {
entry:
  %retval = alloca i32, align 4
  %fd_cwd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %buf.addr = alloca %struct.stat*, align 8
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !4523, metadata !DIExpression()), !dbg !4524
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4525, metadata !DIExpression()), !dbg !4526
  store %struct.stat* %buf, %struct.stat** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %buf.addr, metadata !4527, metadata !DIExpression()), !dbg !4528
  %call = call zeroext i1 @can_write_any_file(), !dbg !4529
  br i1 %call, label %if.then, label %if.end, !dbg !4531

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4532
  br label %return, !dbg !4532

if.end:                                           ; preds = %entry
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4533, !tbaa !2985
  %1 = load i8*, i8** %file.addr, align 8, !dbg !4535, !tbaa !2998
  %2 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !4536, !tbaa !2998
  %call1 = call i32 @cache_fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256), !dbg !4537
  %cmp = icmp ne i32 %call1, 0, !dbg !4538
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4539

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4540
  br label %return, !dbg !4540

if.end3:                                          ; preds = %if.end
  %3 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !4541, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !4541, !ctir !1390
  %4 = load i32, i32* %st_mode, align 8, !dbg !4541, !tbaa !3181, !ctir !133
  %and = and i32 %4, 61440, !dbg !4541
  %cmp4 = icmp eq i32 %and, 40960, !dbg !4541
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4543

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !4544
  br label %return, !dbg !4544

if.end6:                                          ; preds = %if.end3
  %5 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4545, !tbaa !2985
  %6 = load i8*, i8** %file.addr, align 8, !dbg !4548, !tbaa !2998
  %call7 = call i32 @faccessat(i32 %5, i8* %6, i32 2, i32 512) #10, !dbg !4549
  %cmp8 = icmp eq i32 %call7, 0, !dbg !4550
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4551

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4552
  br label %return, !dbg !4552

if.end10:                                         ; preds = %if.end6
  %call11 = call i32* @__errno_location() #15, !dbg !4553
  %7 = load i32, i32* %call11, align 4, !dbg !4553, !tbaa !2985, !ctir !7
  %cmp12 = icmp eq i32 %7, 13, !dbg !4554
  %8 = zext i1 %cmp12 to i64, !dbg !4553
  %cond = select i1 %cmp12, i32 1, i32 -1, !dbg !4553
  store i32 %cond, i32* %retval, align 4, !dbg !4555
  br label %return, !dbg !4555

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4556
  ret i32 %9, !dbg !4556
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cache_fstatat(i32 %fd, i8* %file, %struct.stat* %st, i32 %flag) #4 !dbg !4557 !ctir !1521 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flag.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !4558, metadata !DIExpression()), !dbg !4559
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4560, metadata !DIExpression()), !dbg !4561
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !4562, metadata !DIExpression()), !dbg !4563
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4564, metadata !DIExpression()), !dbg !4565
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4566, !tbaa !2998
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !4568, !ctir !1390
  %1 = load i64, i64* %st_size, align 8, !dbg !4568, !tbaa !4519, !ctir !29
  %cmp = icmp eq i64 %1, -1, !dbg !4569
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4570

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !4571, !tbaa !2985
  %3 = load i8*, i8** %file.addr, align 8, !dbg !4572, !tbaa !2998
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4573, !tbaa !2998
  %5 = load i32, i32* %flag.addr, align 4, !dbg !4574, !tbaa !2985
  %call = call i32 @fstatat(i32 %2, i8* %3, %struct.stat* %4, i32 %5) #10, !dbg !4575
  %cmp1 = icmp ne i32 %call, 0, !dbg !4576
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4577

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4578, !tbaa !2998
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !4580, !ctir !1390
  store i64 -2, i64* %st_size2, align 8, !dbg !4581, !tbaa !4519, !ctir !29
  %call3 = call i32* @__errno_location() #15, !dbg !4582
  %7 = load i32, i32* %call3, align 4, !dbg !4582, !tbaa !2985, !ctir !7
  %conv = sext i32 %7 to i64, !dbg !4582
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4583, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !4584, !ctir !1390
  store i64 %conv, i64* %st_ino, align 8, !dbg !4585, !tbaa !3873, !ctir !228
  br label %if.end, !dbg !4586

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4587, !tbaa !2998
  %st_size4 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 8, !dbg !4589, !ctir !1390
  %10 = load i64, i64* %st_size4, align 8, !dbg !4589, !tbaa !4519, !ctir !29
  %cmp5 = icmp sle i64 0, %10, !dbg !4590
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4591

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4592
  br label %return, !dbg !4592

if.end8:                                          ; preds = %if.end
  %11 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4593, !tbaa !2998
  %st_ino9 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1, !dbg !4594, !ctir !1390
  %12 = load i64, i64* %st_ino9, align 8, !dbg !4594, !tbaa !3873, !ctir !228
  %conv10 = trunc i64 %12 to i32, !dbg !4595
  %call11 = call i32* @__errno_location() #15, !dbg !4596
  store i32 %conv10, i32* %call11, align 4, !dbg !4597, !tbaa !2985, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !4598
  br label %return, !dbg !4598

return:                                           ; preds = %if.end8, %if.then7
  %13 = load i32, i32* %retval, align 4, !dbg !4599
  ret i32 %13, !dbg !4599
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @faccessat(i32, i8*, i32, i32) #2

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %dirp) #4 !dbg !4600 !ctir !1469 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %dp = alloca %struct.dirent*, align 8, !ctir !1460
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !4601, metadata !DIExpression()), !dbg !4602
  br label %while.body, !dbg !4603

while.body:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !4604, metadata !DIExpression()), !dbg !4606
  %0 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !4607, !tbaa !2998
  %call = call %struct.dirent* @readdir(%struct.__dirstream* %0), !dbg !4608
  store %struct.dirent* %call, %struct.dirent** %dp, align 8, !dbg !4606, !tbaa !2998
  %1 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4609, !tbaa !2998
  %cmp = icmp eq %struct.dirent* %1, null, !dbg !4611
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4612

lor.lhs.false:                                    ; preds = %while.body
  %2 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4613, !tbaa !2998
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %2, i32 0, i32 4, !dbg !4614, !ctir !1461
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !4613
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %arraydecay), !dbg !4615
  br i1 %call1, label %if.end, label %if.then, !dbg !4616

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %3 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4617, !tbaa !2998
  ret %struct.dirent* %3, !dbg !4618

if.end:                                           ; preds = %lor.lhs.false
  br label %while.body, !dbg !4603, !llvm.loop !4619
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !4621 !ctir !250 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !120
  %some_errors = alloca i8, align 1, !ctir !120
  %con = alloca i8*, align 8, !ctir !9
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4622, metadata !DIExpression()), !dbg !4623
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4628, metadata !DIExpression()), !dbg !4629
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4630, metadata !DIExpression()), !dbg !4631
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4632, !tbaa !2998
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !4634, !ctir !253
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !4634, !tbaa !3210
  %tobool = trunc i8 %1 to i1, !dbg !4634, !ctir !120
  br i1 %tobool, label %if.then, label %if.else40, !dbg !4635

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4636, metadata !DIExpression()), !dbg !4638
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4639, !tbaa !2998
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !4640, !ctir !253
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !4640, !tbaa !3460
  %tobool1 = trunc i8 %3 to i1, !dbg !4640, !ctir !120
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !4641

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4642, !tbaa !2998
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !4643, !ctir !253
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !4643, !tbaa !3468
  %tobool2 = trunc i8 %5 to i1, !dbg !4643, !ctir !120
  br label %lor.end, !dbg !4641

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !4638
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4638, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4644, metadata !DIExpression()), !dbg !4645
  %7 = load i8, i8* %all_errors, align 1, !dbg !4646, !tbaa !3109
  %tobool4 = trunc i8 %7 to i1, !dbg !4646
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4647

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4648, !tbaa !2998
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !4649, !ctir !253
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4649, !tbaa !3456
  %tobool5 = trunc i8 %9 to i1, !dbg !4649, !ctir !120
  %lnot = xor i1 %tobool5, true, !dbg !4650
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4651
  %frombool6 = zext i1 %10 to i8, !dbg !4645
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4645, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8** %con, metadata !4652, metadata !DIExpression()), !dbg !4653
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !4654, !tbaa !2998
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !4656
  %cmp = icmp sle i32 0, %call, !dbg !4657
  br i1 %cmp, label %if.then7, label %if.else, !dbg !4658

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !4659, !tbaa !2998
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !4662
  %cmp9 = icmp slt i32 %call8, 0, !dbg !4663
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !4664

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !4665, !tbaa !3109
  %tobool11 = trunc i8 %13 to i1, !dbg !4665
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !4668

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !4669, !tbaa !3109
  %tobool12 = trunc i8 %14 to i1, !dbg !4669
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !4670

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #15, !dbg !4671
  %15 = load i32, i32* %call13, align 4, !dbg !4671, !tbaa !2985, !ctir !7
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !4672
  br i1 %call14, label %if.end, label %if.then15, !dbg !4673

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #15, !dbg !4674
  %16 = load i32, i32* %call16, align 4, !dbg !4674, !tbaa !2985, !ctir !7
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0)) #10, !dbg !4675
  %17 = load i8*, i8** %con, align 8, !dbg !4676, !tbaa !2998
  %call18 = call i8* @quote(i8* %17), !dbg !4677
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !4678
  br label %if.end, !dbg !4678

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4679, !tbaa !2998
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !4681, !ctir !253
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !4681, !tbaa !3468
  %tobool20 = trunc i8 %19 to i1, !dbg !4681, !ctir !120
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !4682

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !4683, !tbaa !2998
  call void @freecon(i8* %20), !dbg !4685
  store i1 false, i1* %retval, align 1, !dbg !4686
  br label %return, !dbg !4686

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !4687

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !4688, !tbaa !2998
  call void @freecon(i8* %21), !dbg !4689
  br label %if.end39, !dbg !4690

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !4691, !tbaa !3109
  %tobool24 = trunc i8 %22 to i1, !dbg !4691
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !4694

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !4695, !tbaa !3109
  %tobool26 = trunc i8 %23 to i1, !dbg !4695
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !4696

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #15, !dbg !4697
  %24 = load i32, i32* %call28, align 4, !dbg !4697, !tbaa !2985, !ctir !7
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !4698
  br i1 %call29, label %if.end34, label %if.then30, !dbg !4699

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #15, !dbg !4700
  %25 = load i32, i32* %call31, align 4, !dbg !4700, !tbaa !2985, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.88, i64 0, i64 0)) #10, !dbg !4702
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !4703, !tbaa !2998
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !4703
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !4704
  br label %if.end34, !dbg !4705

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4706, !tbaa !2998
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !4708, !ctir !253
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !4708, !tbaa !3468
  %tobool36 = trunc i8 %28 to i1, !dbg !4708, !ctir !120
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4709

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !4710
  br label %return, !dbg !4710

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !4711

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4712, !tbaa !2998
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !4714, !ctir !253
  %30 = load i8, i8* %set_security_context, align 1, !dbg !4714, !tbaa !3213
  %tobool41 = trunc i8 %30 to i1, !dbg !4714, !ctir !120
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !4715

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !4716, !tbaa !3109
  %tobool43 = trunc i8 %31 to i1, !dbg !4716
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !4719

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !4720, !tbaa !2998
  %33 = load i32, i32* %mode.addr, align 4, !dbg !4721, !tbaa !2985
  %call45 = call i32 @defaultcon(i8* %32, i32 %33), !dbg !4722
  %cmp46 = icmp slt i32 %call45, 0, !dbg !4723
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !4724

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #15, !dbg !4725
  %34 = load i32, i32* %call48, align 4, !dbg !4725, !tbaa !2985, !ctir !7
  %call49 = call zeroext i1 @ignorable_ctx_err(i32 %34), !dbg !4726
  br i1 %call49, label %if.end54, label %if.then50, !dbg !4727

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #15, !dbg !4728
  %35 = load i32, i32* %call51, align 4, !dbg !4728, !tbaa !2985, !ctir !7
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.89, i64 0, i64 0)) #10, !dbg !4730
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !4731, !tbaa !2998
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !4731
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !4732
  br label %if.end54, !dbg !4733

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !4734

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !4735
  br label %return, !dbg !4735

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !4736
  ret i1 %37, !dbg !4736
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !4737 !ctir !307 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4738, metadata !DIExpression()), !dbg !4739
  %0 = load i32, i32* %err.addr, align 4, !dbg !4740, !tbaa !2985
  %cmp = icmp eq i32 %0, 95, !dbg !4741
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4742

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4743, !tbaa !2985
  %cmp1 = icmp eq i32 %1, 61, !dbg !4744
  br label %lor.end, !dbg !4742

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4745
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !4746 !ctir !309 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4748, metadata !DIExpression()), !dbg !4749
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4750, metadata !DIExpression()), !dbg !4751
  %call = call i32* @__errno_location() #15, !dbg !4752
  store i32 95, i32* %call, align 4, !dbg !4753, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !4754
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !4755 !ctir !307 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4756, metadata !DIExpression()), !dbg !4757
  %0 = load i32, i32* %err.addr, align 4, !dbg !4758, !tbaa !2985
  %cmp = icmp eq i32 %0, 95, !dbg !4759
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4760

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4761, !tbaa !2985
  %cmp1 = icmp eq i32 %1, 61, !dbg !4762
  br label %lor.end, !dbg !4760

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4763
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !4764 !ctir !295 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !120
  %some_errors = alloca i8, align 1, !ctir !120
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4765, metadata !DIExpression()), !dbg !4766
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !4767, metadata !DIExpression()), !dbg !4768
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4769, metadata !DIExpression()), !dbg !4770
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4771, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4773, metadata !DIExpression()), !dbg !4774
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4775, !tbaa !2998
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !4776, !ctir !253
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !4776, !tbaa !3460
  %tobool = trunc i8 %1 to i1, !dbg !4776, !ctir !120
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4777

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4778, !tbaa !2998
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !4779, !ctir !253
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !4779, !tbaa !3468
  %tobool2 = trunc i8 %3 to i1, !dbg !4779, !ctir !120
  br label %lor.end, !dbg !4777

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !4774
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4774, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4780, metadata !DIExpression()), !dbg !4781
  %5 = load i8, i8* %all_errors, align 1, !dbg !4782, !tbaa !3109
  %tobool4 = trunc i8 %5 to i1, !dbg !4782
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4783

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4784, !tbaa !2998
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !4785, !ctir !253
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4785, !tbaa !3456
  %tobool5 = trunc i8 %7 to i1, !dbg !4785, !ctir !120
  %lnot = xor i1 %tobool5, true, !dbg !4786
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4787
  %frombool6 = zext i1 %8 to i8, !dbg !4781
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4781, !tbaa !3109
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !4788, !tbaa !2998
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !4790, !tbaa !3109
  %tobool7 = trunc i8 %10 to i1, !dbg !4790
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !4791, !tbaa !3109
  %tobool8 = trunc i8 %11 to i1, !dbg !4791
  %call = call zeroext i1 @restorecon(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !4792
  br i1 %call, label %if.end17, label %if.then, !dbg !4793

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !4794, !tbaa !3109
  %tobool9 = trunc i8 %12 to i1, !dbg !4794
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !4797

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !4798, !tbaa !3109
  %tobool10 = trunc i8 %13 to i1, !dbg !4798
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !4799

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #15, !dbg !4800
  %14 = load i32, i32* %call11, align 4, !dbg !4800, !tbaa !2985, !ctir !7
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !4801
  br i1 %call12, label %if.end, label %if.then13, !dbg !4802

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !4803
  %15 = load i32, i32* %call14, align 4, !dbg !4803, !tbaa !2985, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.90, i64 0, i64 0)) #10, !dbg !4804
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !4805, !tbaa !2998
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !4805
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !4806
  br label %if.end, !dbg !4806

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !4807
  br label %return, !dbg !4807

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !4808
  br label %return, !dbg !4808

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !4809
  ret i1 %17, !dbg !4809
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4810 !ctir !311 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4811, metadata !DIExpression()), !dbg !4812
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4813, metadata !DIExpression()), !dbg !4814
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4815, metadata !DIExpression()), !dbg !4816
  %call = call i32* @__errno_location() #15, !dbg !4817
  store i32 95, i32* %call, align 4, !dbg !4818, !tbaa !2985, !ctir !7
  ret i1 false, !dbg !4819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !4820 !ctir !297 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4821, metadata !DIExpression()), !dbg !4822
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4823
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4824, !tbaa !2998
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !4825, !ctir !254
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !4826, !tbaa !3515, !ctir !195
  ret void, !dbg !4827
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4828 !ctir !297 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4829, metadata !DIExpression()), !dbg !4830
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4831
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4832, !tbaa !2998
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4833, !ctir !254
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4834, !tbaa !3519, !ctir !195
  ret void, !dbg !4835
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4836 !ctir !300 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !120
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4837, metadata !DIExpression()), !dbg !4838
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4839, metadata !DIExpression()), !dbg !4840
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4841, metadata !DIExpression()), !dbg !4842
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4843, metadata !DIExpression()), !dbg !4844
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4845, metadata !DIExpression()), !dbg !4846
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4849, !tbaa !2998
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4849
  br i1 %call, label %if.then, label %if.else, !dbg !4852

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4852

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.95, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 3013, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4849
  unreachable, !dbg !4849

if.end:                                           ; preds = %if.then
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !4853, !tbaa !2998
  store i8* %1, i8** @top_level_src_name, align 8, !dbg !4854, !tbaa !2998
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !4855, !tbaa !2998
  store i8* %2, i8** @top_level_dst_name, align 8, !dbg !4856, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4857, metadata !DIExpression()), !dbg !4858
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4858, !tbaa !3109
  %3 = load i8*, i8** %src_name.addr, align 8, !dbg !4859, !tbaa !2998
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !4860, !tbaa !2998
  %5 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4861, !tbaa !3109
  %tobool = trunc i8 %5 to i1, !dbg !4861
  %6 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4862, !tbaa !2998
  %7 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4863, !tbaa !2998
  %8 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4864, !tbaa !2998
  %call1 = call zeroext i1 @copy_internal(i8* %3, i8* %4, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %6, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %7, i8* %8), !dbg !4865
  ret i1 %call1, !dbg !4866
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #9 !dbg !4867 !ctir !303 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4868, metadata !DIExpression()), !dbg !4869
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4870, !tbaa !2998
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4870
  br i1 %cmp, label %if.then, label %if.else, !dbg !4873

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4873

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.149, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2988, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4870
  unreachable, !dbg !4870

if.end:                                           ; preds = %if.then
  %1 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4874, !tbaa !2998
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 0, !dbg !4874, !ctir !253
  %2 = load i32, i32* %backup_type, align 8, !dbg !4874, !tbaa !3329, !ctir !68
  %cmp1 = icmp ule i32 %2, 3, !dbg !4874
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !4877

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !4877

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.150, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2989, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4874
  unreachable, !dbg !4874

if.end4:                                          ; preds = %if.then2
  %3 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4878, !tbaa !2998
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 3, !dbg !4878, !ctir !253
  %4 = load i32, i32* %sparse_mode, align 4, !dbg !4878, !tbaa !3484, !ctir !89
  %cmp5 = icmp eq i32 %4, 1, !dbg !4878
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !4878

lor.lhs.false:                                    ; preds = %if.end4
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4878, !tbaa !2998
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4878, !ctir !253
  %6 = load i32, i32* %sparse_mode6, align 4, !dbg !4878, !tbaa !3484, !ctir !89
  %cmp7 = icmp eq i32 %6, 2, !dbg !4878
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !4878

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4878, !tbaa !2998
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4878, !ctir !253
  %8 = load i32, i32* %sparse_mode9, align 4, !dbg !4878, !tbaa !3484, !ctir !89
  %cmp10 = icmp eq i32 %8, 3, !dbg !4878
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !4881

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %if.end13, !dbg !4881

if.else12:                                        ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.151, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2990, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4878
  unreachable, !dbg !4878

if.end13:                                         ; preds = %if.then11
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4882, !tbaa !2998
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 36, !dbg !4882, !ctir !253
  %10 = load i32, i32* %reflink_mode, align 8, !dbg !4882, !tbaa !3394, !ctir !95
  %cmp14 = icmp eq i32 %10, 0, !dbg !4882
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !4882

lor.lhs.false15:                                  ; preds = %if.end13
  %11 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4882, !tbaa !2998
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36, !dbg !4882, !ctir !253
  %12 = load i32, i32* %reflink_mode16, align 8, !dbg !4882, !tbaa !3394, !ctir !95
  %cmp17 = icmp eq i32 %12, 1, !dbg !4882
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !4882

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %13 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4882, !tbaa !2998
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 36, !dbg !4882, !ctir !253
  %14 = load i32, i32* %reflink_mode19, align 8, !dbg !4882, !tbaa !3394, !ctir !95
  %cmp20 = icmp eq i32 %14, 2, !dbg !4882
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !4885

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false15, %if.end13
  br label %if.end23, !dbg !4885

if.else22:                                        ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.152, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2991, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4882
  unreachable, !dbg !4882

if.end23:                                         ; preds = %if.then21
  %15 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4886, !tbaa !2998
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 8, !dbg !4886, !ctir !253
  %16 = load i8, i8* %hard_link, align 1, !dbg !4886, !tbaa !3410
  %tobool = trunc i8 %16 to i1, !dbg !4886, !ctir !120
  br i1 %tobool, label %land.lhs.true, label %if.then25, !dbg !4886

land.lhs.true:                                    ; preds = %if.end23
  %17 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4886, !tbaa !2998
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 29, !dbg !4886, !ctir !253
  %18 = load i8, i8* %symbolic_link, align 4, !dbg !4886, !tbaa !3488
  %tobool24 = trunc i8 %18 to i1, !dbg !4886, !ctir !120
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !4889

if.then25:                                        ; preds = %land.lhs.true, %if.end23
  br label %if.end27, !dbg !4889

if.else26:                                        ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.153, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2992, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4886
  unreachable, !dbg !4886

if.end27:                                         ; preds = %if.then25
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4890, !tbaa !2998
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 36, !dbg !4890, !ctir !253
  %20 = load i32, i32* %reflink_mode28, align 8, !dbg !4890, !tbaa !3394, !ctir !95
  %cmp29 = icmp eq i32 %20, 2, !dbg !4890
  br i1 %cmp29, label %land.lhs.true30, label %if.then33, !dbg !4890

land.lhs.true30:                                  ; preds = %if.end27
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4890, !tbaa !2998
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !4890, !ctir !253
  %22 = load i32, i32* %sparse_mode31, align 4, !dbg !4890, !tbaa !3484, !ctir !89
  %cmp32 = icmp ne i32 %22, 2, !dbg !4890
  br i1 %cmp32, label %if.else34, label %if.then33, !dbg !4893

if.then33:                                        ; preds = %land.lhs.true30, %if.end27
  br label %if.end35, !dbg !4893

if.else34:                                        ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.154, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4890
  unreachable, !dbg !4890

if.end35:                                         ; preds = %if.then33
  ret i1 true, !dbg !4894
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4895 !ctir !313 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_sb = alloca %struct.stat, align 8, !ctir !317
  %src_mode = alloca i32, align 4, !ctir !160
  %dst_mode = alloca i32, align 4, !ctir !160
  %dst_mode_bits = alloca i32, align 4, !ctir !160
  %omitted_permissions = alloca i32, align 4, !ctir !160
  %restore_dst_mode = alloca i8, align 1, !ctir !120
  %earlier_file = alloca i8*, align 8, !ctir !9
  %dst_backup = alloca i8*, align 8, !ctir !9
  %delayed_ok = alloca i8, align 1, !ctir !120
  %copied_as_regular = alloca i8, align 1, !ctir !120
  %dest_is_symlink = alloca i8, align 1, !ctir !120
  %have_dst_lstat = alloca i8, align 1, !ctir !120
  %rename_errno = alloca i32, align 4, !ctir !7
  %name = alloca i8*, align 8, !ctir !115
  %fstatat_flags = alloca i32, align 4, !ctir !7
  %dereference65 = alloca i8, align 1, !ctir !120
  %use_lstat = alloca i8, align 1, !ctir !120
  %fstatat_flags98 = alloca i32, align 4, !ctir !7
  %return_now = alloca i8, align 1, !ctir !120
  %options = alloca i32, align 4, !ctir !7
  %srcbase = alloca i8*, align 8, !ctir !115
  %fmt = alloca i8*, align 8, !ctir !115
  %tmp_backup = alloca i8*, align 8, !ctir !9
  %__old = alloca i8*, align 8, !ctir !115
  %__len = alloca i64, align 8, !ctir !55
  %__new = alloca i8*, align 8, !ctir !9
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !120
  %tmp_buf = alloca %struct.stat, align 8, !ctir !317
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !356
  %dir = alloca %struct.dir_list*, align 8, !ctir !350
  %dot_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_parent = alloca i8*, align 8, !ctir !9
  %in_current_dir = alloca i8, align 1, !ctir !120
  %err = alloca i32, align 4, !ctir !7
  %replace = alloca i8, align 1, !ctir !120
  %src_link_val = alloca i8*, align 8, !ctir !9
  %symlink_err = alloca i32, align 4, !ctir !7
  %dest_link_val = alloca i8*, align 8, !ctir !9
  %sb = alloca %struct.stat, align 8, !ctir !317
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !357
  %tmp952 = alloca %struct.timespec, align 8
  %tmp955 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4896, metadata !DIExpression()), !dbg !4897
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4898, metadata !DIExpression()), !dbg !4899
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4902, metadata !DIExpression()), !dbg !4903
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4904, metadata !DIExpression()), !dbg !4905
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4906, metadata !DIExpression()), !dbg !4907
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4908, metadata !DIExpression()), !dbg !4909
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4910, metadata !DIExpression()), !dbg !4911
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4912, metadata !DIExpression()), !dbg !4913
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4914, metadata !DIExpression()), !dbg !4915
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4916, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4918, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4920, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4922, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4924, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4928, metadata !DIExpression()), !dbg !4929
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4929, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4930, metadata !DIExpression()), !dbg !4931
  store i8* null, i8** %earlier_file, align 8, !dbg !4931, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4932, metadata !DIExpression()), !dbg !4933
  store i8* null, i8** %dst_backup, align 8, !dbg !4933, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4934, metadata !DIExpression()), !dbg !4935
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4936, metadata !DIExpression()), !dbg !4937
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4937, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4938, metadata !DIExpression()), !dbg !4939
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4939, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4940, metadata !DIExpression()), !dbg !4941
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4941, !tbaa !3109
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4942, !tbaa !2998
  store i8 0, i8* %0, align 1, !dbg !4943, !tbaa !3109, !ctir !120
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4944, metadata !DIExpression()), !dbg !4945
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4946, !tbaa !2998
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4947, !ctir !253
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4947, !tbaa !3282, !ctir !7
  store i32 %2, i32* %rename_errno, align 4, !dbg !4945, !tbaa !2985
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4948, !tbaa !2998
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4950, !ctir !253
  %4 = load i8, i8* %move_mode, align 8, !dbg !4950, !tbaa !3417
  %tobool = trunc i8 %4 to i1, !dbg !4950, !ctir !120
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4951

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4952, !tbaa !2985
  %cmp = icmp slt i32 %5, 0, !dbg !4955
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4956

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4957, !tbaa !2998
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4958, !tbaa !2998
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4959
  %tobool4 = icmp ne i32 %call, 0, !dbg !4959
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4959

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #15, !dbg !4960
  %8 = load i32, i32* %call5, align 4, !dbg !4960, !tbaa !2985, !ctir !7
  br label %cond.end, !dbg !4959

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4959

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4959
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4961, !tbaa !2985
  br label %if.end, !dbg !4962

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4963, !tbaa !2985
  %cmp6 = icmp eq i32 %9, 0, !dbg !4964
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4965
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4965, !tbaa !3109
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4966, !tbaa !2998
  %tobool8 = icmp ne i8* %10, null, !dbg !4966
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4968

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4969, !tbaa !3109
  %tobool10 = trunc i8 %11 to i1, !dbg !4969
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4970, !tbaa !2998
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4971
  store i8 %frombool11, i8* %12, align 1, !dbg !4971, !tbaa !3109, !ctir !120
  br label %if.end12, !dbg !4972

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4973

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4974, !tbaa !2985
  %cmp14 = icmp eq i32 %13, 0, !dbg !4976
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4977

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4978, !tbaa !2998
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4979, !ctir !253
  %15 = load i8, i8* %last_file, align 1, !dbg !4979, !tbaa !3359
  %tobool16 = trunc i8 %15 to i1, !dbg !4979, !ctir !120
  br i1 %tobool16, label %if.end47, label %if.then20, !dbg !4974

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4980, !tbaa !2985
  %cmp18 = icmp ne i32 %16, 17, !dbg !4981
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4982

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4983, !tbaa !2998
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4984, !ctir !253
  %18 = load i32, i32* %interactive, align 8, !dbg !4984, !tbaa !3155, !ctir !83
  %cmp19 = icmp ne i32 %18, 2, !dbg !4985
  br i1 %cmp19, label %if.then20, label %if.end47, !dbg !4977

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4986, metadata !DIExpression()), !dbg !4988
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4989, !tbaa !2985
  %cmp21 = icmp eq i32 %19, 0, !dbg !4990
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4989

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4991, !tbaa !2998
  br label %cond.end24, !dbg !4989

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4992, !tbaa !2998
  br label %cond.end24, !dbg !4989

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4989
  store i8* %cond25, i8** %name, align 8, !dbg !4988, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !4993, metadata !DIExpression()), !dbg !4994
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4995, !tbaa !2998
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4996, !ctir !253
  %23 = load i32, i32* %dereference, align 4, !dbg !4996, !tbaa !3398, !ctir !76
  %cmp26 = icmp eq i32 %23, 2, !dbg !4997
  %24 = zext i1 %cmp26 to i64, !dbg !4995
  %cond27 = select i1 %cmp26, i32 256, i32 0, !dbg !4995
  store i32 %cond27, i32* %fstatat_flags, align 4, !dbg !4994, !tbaa !2985
  %25 = load i8*, i8** %name, align 8, !dbg !4998, !tbaa !2998
  %26 = load i32, i32* %fstatat_flags, align 4, !dbg !5000, !tbaa !2985
  %call28 = call i32 @follow_fstatat(i32 -100, i8* %25, %struct.stat* %src_sb, i32 %26), !dbg !5001
  %cmp29 = icmp ne i32 %call28, 0, !dbg !5002
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !5003

if.then30:                                        ; preds = %cond.end24
  %call31 = call i32* @__errno_location() #15, !dbg !5004
  %27 = load i32, i32* %call31, align 4, !dbg !5004, !tbaa !2985, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !5006
  %28 = load i8*, i8** %name, align 8, !dbg !5007, !tbaa !2998
  %call33 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !5007
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call32, i8* %call33), !dbg !5008
  store i1 false, i1* %retval, align 1, !dbg !5009
  br label %return, !dbg !5009

if.end34:                                         ; preds = %cond.end24
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5010, !ctir !317
  %29 = load i32, i32* %st_mode, align 8, !dbg !5010, !tbaa !3181, !ctir !133
  store i32 %29, i32* %src_mode, align 4, !dbg !5011, !tbaa !2985
  %30 = load i32, i32* %src_mode, align 4, !dbg !5012, !tbaa !2985
  %and = and i32 %30, 61440, !dbg !5012
  %cmp35 = icmp eq i32 %and, 16384, !dbg !5012
  br i1 %cmp35, label %land.lhs.true, label %if.end46, !dbg !5014

land.lhs.true:                                    ; preds = %if.end34
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5015, !tbaa !2998
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 27, !dbg !5016, !ctir !253
  %32 = load i8, i8* %recursive, align 2, !dbg !5016, !tbaa !3480
  %tobool36 = trunc i8 %32 to i1, !dbg !5016, !ctir !120
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !5017

if.then37:                                        ; preds = %land.lhs.true
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5018, !tbaa !2998
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 10, !dbg !5020, !ctir !253
  %34 = load i8, i8* %install_mode, align 1, !dbg !5020, !tbaa !3421
  %tobool38 = trunc i8 %34 to i1, !dbg !5020, !ctir !120
  br i1 %tobool38, label %cond.false41, label %cond.true39, !dbg !5021

cond.true39:                                      ; preds = %if.then37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.98, i64 0, i64 0)) #10, !dbg !5022
  br label %cond.end43, !dbg !5021

cond.false41:                                     ; preds = %if.then37
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.99, i64 0, i64 0)) #10, !dbg !5023
  br label %cond.end43, !dbg !5021

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i8* [ %call40, %cond.true39 ], [ %call42, %cond.false41 ], !dbg !5021
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !5024, !tbaa !2998
  %call45 = call i8* @quotearg_style(i32 4, i8* %35), !dbg !5024
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond44, i8* %call45), !dbg !5025
  store i1 false, i1* %retval, align 1, !dbg !5026
  br label %return, !dbg !5026

if.end46:                                         ; preds = %land.lhs.true, %if.end34
  br label %if.end47, !dbg !5027

if.end47:                                         ; preds = %if.end46, %lor.lhs.false, %cond.true15
  %36 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5028, !tbaa !3109
  %tobool48 = trunc i8 %36 to i1, !dbg !5028
  br i1 %tobool48, label %land.lhs.true49, label %if.end64, !dbg !5030

land.lhs.true49:                                  ; preds = %if.end47
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5031, !tbaa !2998
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 38, !dbg !5032, !ctir !253
  %38 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !5032, !tbaa !3519, !ctir !195
  %tobool50 = icmp ne %struct.hash_table* %38, null, !dbg !5031
  br i1 %tobool50, label %if.then51, label %if.end64, !dbg !5033

if.then51:                                        ; preds = %land.lhs.true49
  %39 = load i32, i32* %src_mode, align 4, !dbg !5034, !tbaa !2985
  %and52 = and i32 %39, 61440, !dbg !5034
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !5034
  br i1 %cmp53, label %if.end62, label %land.lhs.true54, !dbg !5037

land.lhs.true54:                                  ; preds = %if.then51
  %40 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5038, !tbaa !2998
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %40, i32 0, i32 0, !dbg !5039, !ctir !253
  %41 = load i32, i32* %backup_type, align 8, !dbg !5039, !tbaa !3329, !ctir !68
  %cmp55 = icmp eq i32 %41, 0, !dbg !5040
  br i1 %cmp55, label %land.lhs.true56, label %if.end62, !dbg !5041

land.lhs.true56:                                  ; preds = %land.lhs.true54
  %42 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5042, !tbaa !2998
  %src_info57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 38, !dbg !5043, !ctir !253
  %43 = load %struct.hash_table*, %struct.hash_table** %src_info57, align 8, !dbg !5043, !tbaa !3519, !ctir !195
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !5044, !tbaa !2998
  %call58 = call zeroext i1 @seen_file(%struct.hash_table* %43, i8* %44, %struct.stat* %src_sb), !dbg !5045
  br i1 %call58, label %if.then59, label %if.end62, !dbg !5046

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.100, i64 0, i64 0)) #10, !dbg !5047
  %45 = load i8*, i8** %src_name.addr, align 8, !dbg !5049, !tbaa !2998
  %call61 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !5049
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call60, i8* %call61), !dbg !5050
  store i1 true, i1* %retval, align 1, !dbg !5051
  br label %return, !dbg !5051

if.end62:                                         ; preds = %land.lhs.true56, %land.lhs.true54, %if.then51
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5052, !tbaa !2998
  %src_info63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 38, !dbg !5053, !ctir !253
  %47 = load %struct.hash_table*, %struct.hash_table** %src_info63, align 8, !dbg !5053, !tbaa !3519, !ctir !195
  %48 = load i8*, i8** %src_name.addr, align 8, !dbg !5054, !tbaa !2998
  call void @record_file(%struct.hash_table* %47, i8* %48, %struct.stat* %src_sb), !dbg !5055
  br label %if.end64, !dbg !5056

if.end64:                                         ; preds = %if.end62, %land.lhs.true49, %if.end47
  call void @llvm.dbg.declare(metadata i8* %dereference65, metadata !5057, metadata !DIExpression()), !dbg !5058
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5059, !tbaa !2998
  %50 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5060, !tbaa !3109
  %tobool66 = trunc i8 %50 to i1, !dbg !5060
  %call67 = call zeroext i1 @should_dereference(%struct.cp_options* %49, i1 zeroext %tobool66) #14, !dbg !5061
  %frombool68 = zext i1 %call67 to i8, !dbg !5058
  store i8 %frombool68, i8* %dereference65, align 1, !dbg !5058, !tbaa !3109
  %51 = load i8, i8* %new_dst.addr, align 1, !dbg !5062, !tbaa !3109
  %tobool69 = trunc i8 %51 to i1, !dbg !5062
  br i1 %tobool69, label %if.end345, label %if.then70, !dbg !5064

if.then70:                                        ; preds = %if.end64
  %52 = load i32, i32* %rename_errno, align 4, !dbg !5065, !tbaa !2985
  %cmp71 = icmp eq i32 %52, 17, !dbg !5068
  br i1 %cmp71, label %land.lhs.true72, label %if.then75, !dbg !5069

land.lhs.true72:                                  ; preds = %if.then70
  %53 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5070, !tbaa !2998
  %interactive73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %53, i32 0, i32 2, !dbg !5071, !ctir !253
  %54 = load i32, i32* %interactive73, align 8, !dbg !5071, !tbaa !3155, !ctir !83
  %cmp74 = icmp eq i32 %54, 2, !dbg !5072
  br i1 %cmp74, label %if.end122, label %if.then75, !dbg !5073

if.then75:                                        ; preds = %land.lhs.true72, %if.then70
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !5074, metadata !DIExpression()), !dbg !5076
  %55 = load i32, i32* %src_mode, align 4, !dbg !5077, !tbaa !2985
  %and76 = and i32 %55, 61440, !dbg !5077
  %cmp77 = icmp eq i32 %and76, 32768, !dbg !5077
  br i1 %cmp77, label %lor.lhs.false86, label %land.lhs.true78, !dbg !5078

land.lhs.true78:                                  ; preds = %if.then75
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5079, !tbaa !2998
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 5, !dbg !5080, !ctir !253
  %57 = load i8, i8* %copy_as_regular, align 4, !dbg !5080, !tbaa !3390
  %tobool79 = trunc i8 %57 to i1, !dbg !5080, !ctir !120
  br i1 %tobool79, label %lor.lhs.false80, label %lor.end, !dbg !5081

lor.lhs.false80:                                  ; preds = %land.lhs.true78
  %58 = load i32, i32* %src_mode, align 4, !dbg !5082, !tbaa !2985
  %and81 = and i32 %58, 61440, !dbg !5082
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !5082
  br i1 %cmp82, label %lor.end, label %lor.lhs.false83, !dbg !5083

lor.lhs.false83:                                  ; preds = %lor.lhs.false80
  %59 = load i32, i32* %src_mode, align 4, !dbg !5084, !tbaa !2985
  %and84 = and i32 %59, 61440, !dbg !5084
  %cmp85 = icmp eq i32 %and84, 40960, !dbg !5084
  br i1 %cmp85, label %lor.end, label %lor.lhs.false86, !dbg !5085

lor.lhs.false86:                                  ; preds = %lor.lhs.false83, %if.then75
  %60 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5086, !tbaa !2998
  %move_mode87 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %60, i32 0, i32 9, !dbg !5087, !ctir !253
  %61 = load i8, i8* %move_mode87, align 8, !dbg !5087, !tbaa !3417
  %tobool88 = trunc i8 %61 to i1, !dbg !5087, !ctir !120
  br i1 %tobool88, label %lor.end, label %lor.lhs.false89, !dbg !5088

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %62 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5089, !tbaa !2998
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %62, i32 0, i32 29, !dbg !5090, !ctir !253
  %63 = load i8, i8* %symbolic_link, align 4, !dbg !5090, !tbaa !3488
  %tobool90 = trunc i8 %63 to i1, !dbg !5090, !ctir !120
  br i1 %tobool90, label %lor.end, label %lor.lhs.false91, !dbg !5091

lor.lhs.false91:                                  ; preds = %lor.lhs.false89
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5092, !tbaa !2998
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 8, !dbg !5093, !ctir !253
  %65 = load i8, i8* %hard_link, align 1, !dbg !5093, !tbaa !3410
  %tobool92 = trunc i8 %65 to i1, !dbg !5093, !ctir !120
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !5094

lor.lhs.false93:                                  ; preds = %lor.lhs.false91
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5095, !tbaa !2998
  %backup_type94 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 0, !dbg !5096, !ctir !253
  %67 = load i32, i32* %backup_type94, align 8, !dbg !5096, !tbaa !3329, !ctir !68
  %cmp95 = icmp ne i32 %67, 0, !dbg !5097
  br i1 %cmp95, label %lor.end, label %lor.rhs, !dbg !5098

lor.rhs:                                          ; preds = %lor.lhs.false93
  %68 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5099, !tbaa !2998
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 6, !dbg !5100, !ctir !253
  %69 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5100, !tbaa !3402
  %tobool96 = trunc i8 %69 to i1, !dbg !5100, !ctir !120
  br label %lor.end, !dbg !5098

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false93, %lor.lhs.false91, %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %lor.lhs.false80, %land.lhs.true78
  %70 = phi i1 [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false91 ], [ true, %lor.lhs.false89 ], [ true, %lor.lhs.false86 ], [ true, %lor.lhs.false83 ], [ true, %lor.lhs.false80 ], [ true, %land.lhs.true78 ], [ %tobool96, %lor.rhs ]
  %frombool97 = zext i1 %70 to i8, !dbg !5076
  store i8 %frombool97, i8* %use_lstat, align 1, !dbg !5076, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags98, metadata !5101, metadata !DIExpression()), !dbg !5102
  %71 = load i8, i8* %use_lstat, align 1, !dbg !5103, !tbaa !3109
  %tobool99 = trunc i8 %71 to i1, !dbg !5103
  %72 = zext i1 %tobool99 to i64, !dbg !5103
  %cond100 = select i1 %tobool99, i32 256, i32 0, !dbg !5103
  store i32 %cond100, i32* %fstatat_flags98, align 4, !dbg !5102, !tbaa !2985
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !5104, !tbaa !2998
  %74 = load i32, i32* %fstatat_flags98, align 4, !dbg !5106, !tbaa !2985
  %call101 = call i32 @follow_fstatat(i32 -100, i8* %73, %struct.stat* %dst_sb, i32 %74), !dbg !5107
  %cmp102 = icmp eq i32 %call101, 0, !dbg !5108
  br i1 %cmp102, label %if.then103, label %if.else, !dbg !5109

if.then103:                                       ; preds = %lor.end
  %75 = load i8, i8* %use_lstat, align 1, !dbg !5110, !tbaa !3109
  %tobool104 = trunc i8 %75 to i1, !dbg !5110
  %frombool105 = zext i1 %tobool104 to i8, !dbg !5112
  store i8 %frombool105, i8* %have_dst_lstat, align 1, !dbg !5112, !tbaa !3109
  store i32 17, i32* %rename_errno, align 4, !dbg !5113, !tbaa !2985
  br label %if.end121, !dbg !5114

if.else:                                          ; preds = %lor.end
  %call106 = call i32* @__errno_location() #15, !dbg !5115
  %76 = load i32, i32* %call106, align 4, !dbg !5115, !tbaa !2985, !ctir !7
  %cmp107 = icmp eq i32 %76, 40, !dbg !5118
  br i1 %cmp107, label %land.lhs.true108, label %if.else111, !dbg !5119

land.lhs.true108:                                 ; preds = %if.else
  %77 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5120, !tbaa !2998
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %77, i32 0, i32 7, !dbg !5121, !ctir !253
  %78 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !5121, !tbaa !3406
  %tobool109 = trunc i8 %78 to i1, !dbg !5121, !ctir !120
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !5122

if.then110:                                       ; preds = %land.lhs.true108
  br label %if.end120, !dbg !5122

if.else111:                                       ; preds = %land.lhs.true108, %if.else
  %call112 = call i32* @__errno_location() #15, !dbg !5123
  %79 = load i32, i32* %call112, align 4, !dbg !5123, !tbaa !2985, !ctir !7
  %cmp113 = icmp ne i32 %79, 2, !dbg !5125
  br i1 %cmp113, label %if.then114, label %if.else118, !dbg !5126

if.then114:                                       ; preds = %if.else111
  %call115 = call i32* @__errno_location() #15, !dbg !5127
  %80 = load i32, i32* %call115, align 4, !dbg !5127, !tbaa !2985, !ctir !7
  %call116 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !5129
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !5130, !tbaa !2998
  %call117 = call i8* @quotearg_style(i32 4, i8* %81), !dbg !5130
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* %call116, i8* %call117), !dbg !5131
  store i1 false, i1* %retval, align 1, !dbg !5132
  br label %return, !dbg !5132

if.else118:                                       ; preds = %if.else111
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5133, !tbaa !3109
  br label %if.end119

if.end119:                                        ; preds = %if.else118
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then103
  br label %if.end122, !dbg !5134

if.end122:                                        ; preds = %if.end121, %land.lhs.true72
  %82 = load i32, i32* %rename_errno, align 4, !dbg !5135, !tbaa !2985
  %cmp123 = icmp eq i32 %82, 17, !dbg !5137
  br i1 %cmp123, label %if.then124, label %if.end344, !dbg !5138

if.then124:                                       ; preds = %if.end122
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !5139, metadata !DIExpression()), !dbg !5141
  store i8 0, i8* %return_now, align 1, !dbg !5141, !tbaa !3109
  %83 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5142, !tbaa !2998
  %interactive125 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %83, i32 0, i32 2, !dbg !5144, !ctir !253
  %84 = load i32, i32* %interactive125, align 8, !dbg !5144, !tbaa !3155, !ctir !83
  %cmp126 = icmp ne i32 %84, 2, !dbg !5145
  br i1 %cmp126, label %land.lhs.true127, label %if.end133, !dbg !5146

land.lhs.true127:                                 ; preds = %if.then124
  %85 = load i8*, i8** %src_name.addr, align 8, !dbg !5147, !tbaa !2998
  %86 = load i8*, i8** %dst_name.addr, align 8, !dbg !5148, !tbaa !2998
  %87 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5149, !tbaa !2998
  %call128 = call zeroext i1 @same_file_ok(i8* %85, %struct.stat* %src_sb, i8* %86, %struct.stat* %dst_sb, %struct.cp_options* %87, i8* %return_now), !dbg !5150
  br i1 %call128, label %if.end133, label %if.then129, !dbg !5151

if.then129:                                       ; preds = %land.lhs.true127
  %call130 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.101, i64 0, i64 0)) #10, !dbg !5152
  %88 = load i8*, i8** %src_name.addr, align 8, !dbg !5154, !tbaa !2998
  %call131 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %88), !dbg !5154
  %89 = load i8*, i8** %dst_name.addr, align 8, !dbg !5155, !tbaa !2998
  %call132 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %89), !dbg !5155
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call130, i8* %call131, i8* %call132), !dbg !5156
  store i1 false, i1* %retval, align 1, !dbg !5157
  br label %return, !dbg !5157

if.end133:                                        ; preds = %land.lhs.true127, %if.then124
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5158, !tbaa !2998
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 30, !dbg !5160, !ctir !253
  %91 = load i8, i8* %update, align 1, !dbg !5160, !tbaa !3194
  %tobool134 = trunc i8 %91 to i1, !dbg !5160, !ctir !120
  br i1 %tobool134, label %land.lhs.true135, label %if.end164, !dbg !5161

land.lhs.true135:                                 ; preds = %if.end133
  %92 = load i32, i32* %src_mode, align 4, !dbg !5162, !tbaa !2985
  %and136 = and i32 %92, 61440, !dbg !5162
  %cmp137 = icmp eq i32 %and136, 16384, !dbg !5162
  br i1 %cmp137, label %if.end164, label %if.then138, !dbg !5163

if.then138:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.declare(metadata i32* %options, metadata !5164, metadata !DIExpression()), !dbg !5166
  %93 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5167, !tbaa !2998
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %93, i32 0, i32 16, !dbg !5168, !ctir !253
  %94 = load i8, i8* %preserve_timestamps, align 1, !dbg !5168, !tbaa !3441
  %tobool139 = trunc i8 %94 to i1, !dbg !5168, !ctir !120
  br i1 %tobool139, label %land.rhs, label %land.end145, !dbg !5169

land.rhs:                                         ; preds = %if.then138
  %95 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5170, !tbaa !2998
  %move_mode140 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %95, i32 0, i32 9, !dbg !5171, !ctir !253
  %96 = load i8, i8* %move_mode140, align 8, !dbg !5171, !tbaa !3417
  %tobool141 = trunc i8 %96 to i1, !dbg !5171, !ctir !120
  br i1 %tobool141, label %land.rhs142, label %land.end, !dbg !5172

land.rhs142:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5173, !ctir !317
  %97 = load i64, i64* %st_dev, align 8, !dbg !5173, !tbaa !3876, !ctir !231
  %st_dev143 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5174, !ctir !317
  %98 = load i64, i64* %st_dev143, align 8, !dbg !5174, !tbaa !3876, !ctir !231
  %cmp144 = icmp eq i64 %97, %98, !dbg !5175
  br label %land.end

land.end:                                         ; preds = %land.rhs142, %land.rhs
  %99 = phi i1 [ false, %land.rhs ], [ %cmp144, %land.rhs142 ], !dbg !5176
  %lnot = xor i1 %99, true, !dbg !5177
  br label %land.end145

land.end145:                                      ; preds = %land.end, %if.then138
  %100 = phi i1 [ false, %if.then138 ], [ %lnot, %land.end ], !dbg !5176
  %101 = zext i1 %100 to i64, !dbg !5178
  %cond146 = select i1 %100, i32 1, i32 0, !dbg !5178
  store i32 %cond146, i32* %options, align 4, !dbg !5166, !tbaa !2985
  %102 = load i8*, i8** %dst_name.addr, align 8, !dbg !5179, !tbaa !2998
  %103 = load i32, i32* %options, align 4, !dbg !5181, !tbaa !2985
  %call147 = call i32 @utimecmp(i8* %102, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %103), !dbg !5182
  %cmp148 = icmp sle i32 0, %call147, !dbg !5183
  br i1 %cmp148, label %if.then149, label %if.end163, !dbg !5184

if.then149:                                       ; preds = %land.end145
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5185, !tbaa !2998
  %tobool150 = icmp ne i8* %104, null, !dbg !5185
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !5188

if.then151:                                       ; preds = %if.then149
  %105 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5189, !tbaa !2998
  store i8 1, i8* %105, align 1, !dbg !5190, !tbaa !3109, !ctir !120
  br label %if.end152, !dbg !5191

if.end152:                                        ; preds = %if.then151, %if.then149
  %106 = load i8*, i8** %dst_name.addr, align 8, !dbg !5192, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5193, !ctir !317
  %107 = load i64, i64* %st_ino, align 8, !dbg !5193, !tbaa !3873, !ctir !228
  %st_dev153 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5194, !ctir !317
  %108 = load i64, i64* %st_dev153, align 8, !dbg !5194, !tbaa !3876, !ctir !231
  %call154 = call i8* @remember_copied(i8* %106, i64 %107, i64 %108), !dbg !5195
  store i8* %call154, i8** %earlier_file, align 8, !dbg !5196, !tbaa !2998
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !5197, !tbaa !2998
  %tobool155 = icmp ne i8* %109, null, !dbg !5197
  br i1 %tobool155, label %if.then156, label %if.end162, !dbg !5199

if.then156:                                       ; preds = %if.end152
  %110 = load i8*, i8** %earlier_file, align 8, !dbg !5200, !tbaa !2998
  %111 = load i8*, i8** %dst_name.addr, align 8, !dbg !5203, !tbaa !2998
  %112 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5204, !tbaa !2998
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %112, i32 0, i32 31, !dbg !5205, !ctir !253
  %113 = load i8, i8* %verbose, align 2, !dbg !5205, !tbaa !3198
  %tobool157 = trunc i8 %113 to i1, !dbg !5205, !ctir !120
  %114 = load i8, i8* %dereference65, align 1, !dbg !5206, !tbaa !3109
  %tobool158 = trunc i8 %114 to i1, !dbg !5206
  %call159 = call zeroext i1 @create_hard_link(i8* %110, i8* %111, i1 zeroext true, i1 zeroext %tobool157, i1 zeroext %tobool158), !dbg !5207
  br i1 %call159, label %if.end161, label %if.then160, !dbg !5208

if.then160:                                       ; preds = %if.then156
  br label %un_backup, !dbg !5209

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !5211

if.end162:                                        ; preds = %if.end161, %if.end152
  store i1 true, i1* %retval, align 1, !dbg !5212
  br label %return, !dbg !5212

if.end163:                                        ; preds = %land.end145
  br label %if.end164, !dbg !5213

if.end164:                                        ; preds = %if.end163, %land.lhs.true135, %if.end133
  %115 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5214, !tbaa !2998
  %move_mode165 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %115, i32 0, i32 9, !dbg !5216, !ctir !253
  %116 = load i8, i8* %move_mode165, align 8, !dbg !5216, !tbaa !3417
  %tobool166 = trunc i8 %116 to i1, !dbg !5216, !ctir !120
  br i1 %tobool166, label %if.then167, label %if.else174, !dbg !5217

if.then167:                                       ; preds = %if.end164
  %117 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5218, !tbaa !2998
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !5221, !tbaa !2998
  %call168 = call zeroext i1 @abandon_move(%struct.cp_options* %117, i8* %118, %struct.stat* %dst_sb), !dbg !5222
  br i1 %call168, label %if.then169, label %if.end173, !dbg !5223

if.then169:                                       ; preds = %if.then167
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5224, !tbaa !2998
  %tobool170 = icmp ne i8* %119, null, !dbg !5224
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !5227

if.then171:                                       ; preds = %if.then169
  %120 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5228, !tbaa !2998
  store i8 1, i8* %120, align 1, !dbg !5229, !tbaa !3109, !ctir !120
  br label %if.end172, !dbg !5230

if.end172:                                        ; preds = %if.then171, %if.then169
  store i1 true, i1* %retval, align 1, !dbg !5231
  br label %return, !dbg !5231

if.end173:                                        ; preds = %if.then167
  br label %if.end187, !dbg !5232

if.else174:                                       ; preds = %if.end164
  %121 = load i32, i32* %src_mode, align 4, !dbg !5233, !tbaa !2985
  %and175 = and i32 %121, 61440, !dbg !5233
  %cmp176 = icmp eq i32 %and175, 16384, !dbg !5233
  br i1 %cmp176, label %if.end186, label %land.lhs.true177, !dbg !5236

land.lhs.true177:                                 ; preds = %if.else174
  %122 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5237, !tbaa !2998
  %interactive178 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %122, i32 0, i32 2, !dbg !5238, !ctir !253
  %123 = load i32, i32* %interactive178, align 8, !dbg !5238, !tbaa !3155, !ctir !83
  %cmp179 = icmp eq i32 %123, 2, !dbg !5239
  br i1 %cmp179, label %if.then185, label %lor.lhs.false180, !dbg !5240

lor.lhs.false180:                                 ; preds = %land.lhs.true177
  %124 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5241, !tbaa !2998
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %124, i32 0, i32 2, !dbg !5242, !ctir !253
  %125 = load i32, i32* %interactive181, align 8, !dbg !5242, !tbaa !3155, !ctir !83
  %cmp182 = icmp eq i32 %125, 3, !dbg !5243
  br i1 %cmp182, label %land.lhs.true183, label %if.end186, !dbg !5244

land.lhs.true183:                                 ; preds = %lor.lhs.false180
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5245, !tbaa !2998
  %127 = load i8*, i8** %dst_name.addr, align 8, !dbg !5246, !tbaa !2998
  %call184 = call zeroext i1 @overwrite_ok(%struct.cp_options* %126, i8* %127, %struct.stat* %dst_sb), !dbg !5247
  br i1 %call184, label %if.end186, label %if.then185, !dbg !5248

if.then185:                                       ; preds = %land.lhs.true183, %land.lhs.true177
  store i1 true, i1* %retval, align 1, !dbg !5249
  br label %return, !dbg !5249

if.end186:                                        ; preds = %land.lhs.true183, %lor.lhs.false180, %if.else174
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end173
  %128 = load i8, i8* %return_now, align 1, !dbg !5250, !tbaa !3109
  %tobool188 = trunc i8 %128 to i1, !dbg !5250
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !5252

if.then189:                                       ; preds = %if.end187
  store i1 true, i1* %retval, align 1, !dbg !5253
  br label %return, !dbg !5253

if.end190:                                        ; preds = %if.end187
  %st_mode191 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5254, !ctir !317
  %129 = load i32, i32* %st_mode191, align 8, !dbg !5254, !tbaa !3181, !ctir !133
  %and192 = and i32 %129, 61440, !dbg !5254
  %cmp193 = icmp eq i32 %and192, 16384, !dbg !5254
  br i1 %cmp193, label %if.end221, label %if.then194, !dbg !5256

if.then194:                                       ; preds = %if.end190
  %130 = load i32, i32* %src_mode, align 4, !dbg !5257, !tbaa !2985
  %and195 = and i32 %130, 61440, !dbg !5257
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !5257
  br i1 %cmp196, label %if.then197, label %if.end209, !dbg !5260

if.then197:                                       ; preds = %if.then194
  %131 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5261, !tbaa !2998
  %move_mode198 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %131, i32 0, i32 9, !dbg !5264, !ctir !253
  %132 = load i8, i8* %move_mode198, align 8, !dbg !5264, !tbaa !3417
  %tobool199 = trunc i8 %132 to i1, !dbg !5264, !ctir !120
  br i1 %tobool199, label %land.lhs.true200, label %if.else204, !dbg !5265

land.lhs.true200:                                 ; preds = %if.then197
  %133 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5266, !tbaa !2998
  %backup_type201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %133, i32 0, i32 0, !dbg !5267, !ctir !253
  %134 = load i32, i32* %backup_type201, align 8, !dbg !5267, !tbaa !3329, !ctir !68
  %cmp202 = icmp ne i32 %134, 0, !dbg !5268
  br i1 %cmp202, label %if.then203, label %if.else204, !dbg !5269

if.then203:                                       ; preds = %land.lhs.true200
  br label %if.end208, !dbg !5270

if.else204:                                       ; preds = %land.lhs.true200, %if.then197
  %call205 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.102, i64 0, i64 0)) #10, !dbg !5272
  %135 = load i8*, i8** %dst_name.addr, align 8, !dbg !5274, !tbaa !2998
  %call206 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %135), !dbg !5274
  %136 = load i8*, i8** %src_name.addr, align 8, !dbg !5275, !tbaa !2998
  %call207 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %136), !dbg !5275
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call205, i8* %call206, i8* %call207), !dbg !5276
  store i1 false, i1* %retval, align 1, !dbg !5277
  br label %return, !dbg !5277

if.end208:                                        ; preds = %if.then203
  br label %if.end209, !dbg !5278

if.end209:                                        ; preds = %if.end208, %if.then194
  %137 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5279, !tbaa !3109
  %tobool210 = trunc i8 %137 to i1, !dbg !5279
  br i1 %tobool210, label %land.lhs.true211, label %if.end220, !dbg !5281

land.lhs.true211:                                 ; preds = %if.end209
  %138 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5282, !tbaa !2998
  %backup_type212 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %138, i32 0, i32 0, !dbg !5283, !ctir !253
  %139 = load i32, i32* %backup_type212, align 8, !dbg !5283, !tbaa !3329, !ctir !68
  %cmp213 = icmp ne i32 %139, 3, !dbg !5284
  br i1 %cmp213, label %land.lhs.true214, label %if.end220, !dbg !5285

land.lhs.true214:                                 ; preds = %land.lhs.true211
  %140 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5286, !tbaa !2998
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %140, i32 0, i32 37, !dbg !5287, !ctir !253
  %141 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !5287, !tbaa !3515, !ctir !195
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !5288, !tbaa !2998
  %call215 = call zeroext i1 @seen_file(%struct.hash_table* %141, i8* %142, %struct.stat* %dst_sb), !dbg !5289
  br i1 %call215, label %if.then216, label %if.end220, !dbg !5290

if.then216:                                       ; preds = %land.lhs.true214
  %call217 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.103, i64 0, i64 0)) #10, !dbg !5291
  %143 = load i8*, i8** %dst_name.addr, align 8, !dbg !5293, !tbaa !2998
  %call218 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %143), !dbg !5293
  %144 = load i8*, i8** %src_name.addr, align 8, !dbg !5294, !tbaa !2998
  %call219 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %144), !dbg !5294
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call217, i8* %call218, i8* %call219), !dbg !5295
  store i1 false, i1* %retval, align 1, !dbg !5296
  br label %return, !dbg !5296

if.end220:                                        ; preds = %land.lhs.true214, %land.lhs.true211, %if.end209
  br label %if.end221, !dbg !5297

if.end221:                                        ; preds = %if.end220, %if.end190
  %145 = load i32, i32* %src_mode, align 4, !dbg !5298, !tbaa !2985
  %and222 = and i32 %145, 61440, !dbg !5298
  %cmp223 = icmp eq i32 %and222, 16384, !dbg !5298
  br i1 %cmp223, label %if.end240, label %if.then224, !dbg !5300

if.then224:                                       ; preds = %if.end221
  %st_mode225 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5301, !ctir !317
  %146 = load i32, i32* %st_mode225, align 8, !dbg !5301, !tbaa !3181, !ctir !133
  %and226 = and i32 %146, 61440, !dbg !5301
  %cmp227 = icmp eq i32 %and226, 16384, !dbg !5301
  br i1 %cmp227, label %if.then228, label %if.end239, !dbg !5304

if.then228:                                       ; preds = %if.then224
  %147 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5305, !tbaa !2998
  %move_mode229 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %147, i32 0, i32 9, !dbg !5308, !ctir !253
  %148 = load i8, i8* %move_mode229, align 8, !dbg !5308, !tbaa !3417
  %tobool230 = trunc i8 %148 to i1, !dbg !5308, !ctir !120
  br i1 %tobool230, label %land.lhs.true231, label %if.else235, !dbg !5309

land.lhs.true231:                                 ; preds = %if.then228
  %149 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5310, !tbaa !2998
  %backup_type232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %149, i32 0, i32 0, !dbg !5311, !ctir !253
  %150 = load i32, i32* %backup_type232, align 8, !dbg !5311, !tbaa !3329, !ctir !68
  %cmp233 = icmp ne i32 %150, 0, !dbg !5312
  br i1 %cmp233, label %if.then234, label %if.else235, !dbg !5313

if.then234:                                       ; preds = %land.lhs.true231
  br label %if.end238, !dbg !5314

if.else235:                                       ; preds = %land.lhs.true231, %if.then228
  %call236 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.104, i64 0, i64 0)) #10, !dbg !5316
  %151 = load i8*, i8** %dst_name.addr, align 8, !dbg !5318, !tbaa !2998
  %call237 = call i8* @quotearg_style(i32 4, i8* %151), !dbg !5318
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call236, i8* %call237), !dbg !5319
  store i1 false, i1* %retval, align 1, !dbg !5320
  br label %return, !dbg !5320

if.end238:                                        ; preds = %if.then234
  br label %if.end239, !dbg !5321

if.end239:                                        ; preds = %if.end238, %if.then224
  br label %if.end240, !dbg !5322

if.end240:                                        ; preds = %if.end239, %if.end221
  %152 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5323, !tbaa !2998
  %move_mode241 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %152, i32 0, i32 9, !dbg !5325, !ctir !253
  %153 = load i8, i8* %move_mode241, align 8, !dbg !5325, !tbaa !3417
  %tobool242 = trunc i8 %153 to i1, !dbg !5325, !ctir !120
  br i1 %tobool242, label %if.then243, label %if.end259, !dbg !5326

if.then243:                                       ; preds = %if.end240
  %st_mode244 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5327, !ctir !317
  %154 = load i32, i32* %st_mode244, align 8, !dbg !5327, !tbaa !3181, !ctir !133
  %and245 = and i32 %154, 61440, !dbg !5327
  %cmp246 = icmp eq i32 %and245, 16384, !dbg !5327
  br i1 %cmp246, label %land.lhs.true247, label %if.end258, !dbg !5330

land.lhs.true247:                                 ; preds = %if.then243
  %st_mode248 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5331, !ctir !317
  %155 = load i32, i32* %st_mode248, align 8, !dbg !5331, !tbaa !3181, !ctir !133
  %and249 = and i32 %155, 61440, !dbg !5331
  %cmp250 = icmp eq i32 %and249, 16384, !dbg !5331
  br i1 %cmp250, label %if.end258, label %land.lhs.true251, !dbg !5332

land.lhs.true251:                                 ; preds = %land.lhs.true247
  %156 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5333, !tbaa !2998
  %backup_type252 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %156, i32 0, i32 0, !dbg !5334, !ctir !253
  %157 = load i32, i32* %backup_type252, align 8, !dbg !5334, !tbaa !3329, !ctir !68
  %cmp253 = icmp eq i32 %157, 0, !dbg !5335
  br i1 %cmp253, label %if.then254, label %if.end258, !dbg !5336

if.then254:                                       ; preds = %land.lhs.true251
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.105, i64 0, i64 0)) #10, !dbg !5337
  %158 = load i8*, i8** %src_name.addr, align 8, !dbg !5339, !tbaa !2998
  %call256 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !5339
  %159 = load i8*, i8** %dst_name.addr, align 8, !dbg !5340, !tbaa !2998
  %call257 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %159), !dbg !5340
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255, i8* %call256, i8* %call257), !dbg !5341
  store i1 false, i1* %retval, align 1, !dbg !5342
  br label %return, !dbg !5342

if.end258:                                        ; preds = %land.lhs.true251, %land.lhs.true247, %if.then243
  br label %if.end259, !dbg !5343

if.end259:                                        ; preds = %if.end258, %if.end240
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !5344, metadata !DIExpression()), !dbg !5345
  %160 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5346, !tbaa !2998
  %backup_type260 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %160, i32 0, i32 0, !dbg !5348, !ctir !253
  %161 = load i32, i32* %backup_type260, align 8, !dbg !5348, !tbaa !3329, !ctir !68
  %cmp261 = icmp ne i32 %161, 0, !dbg !5349
  br i1 %cmp261, label %land.lhs.true262, label %if.else303, !dbg !5350

land.lhs.true262:                                 ; preds = %if.end259
  %162 = load i8*, i8** %src_name.addr, align 8, !dbg !5351, !tbaa !2998
  %call263 = call i8* @last_component(i8* %162) #14, !dbg !5352
  store i8* %call263, i8** %srcbase, align 8, !dbg !5353, !tbaa !2998
  %call264 = call zeroext i1 @dot_or_dotdot.106(i8* %call263), !dbg !5354
  br i1 %call264, label %if.else303, label %land.lhs.true265, !dbg !5355

land.lhs.true265:                                 ; preds = %land.lhs.true262
  %163 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5356, !tbaa !2998
  %move_mode266 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %163, i32 0, i32 9, !dbg !5357, !ctir !253
  %164 = load i8, i8* %move_mode266, align 8, !dbg !5357, !tbaa !3417
  %tobool267 = trunc i8 %164 to i1, !dbg !5357, !ctir !120
  br i1 %tobool267, label %if.then272, label %lor.lhs.false268, !dbg !5358

lor.lhs.false268:                                 ; preds = %land.lhs.true265
  %st_mode269 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5359, !ctir !317
  %165 = load i32, i32* %st_mode269, align 8, !dbg !5359, !tbaa !3181, !ctir !133
  %and270 = and i32 %165, 61440, !dbg !5359
  %cmp271 = icmp eq i32 %and270, 16384, !dbg !5359
  br i1 %cmp271, label %if.else303, label %if.then272, !dbg !5360

if.then272:                                       ; preds = %lor.lhs.false268, %land.lhs.true265
  %166 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5361, !tbaa !2998
  %backup_type273 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %166, i32 0, i32 0, !dbg !5364, !ctir !253
  %167 = load i32, i32* %backup_type273, align 8, !dbg !5364, !tbaa !3329, !ctir !68
  %cmp274 = icmp ne i32 %167, 3, !dbg !5365
  br i1 %cmp274, label %land.lhs.true275, label %if.end288, !dbg !5366

land.lhs.true275:                                 ; preds = %if.then272
  %168 = load i8*, i8** %srcbase, align 8, !dbg !5367, !tbaa !2998
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !5368, !tbaa !2998
  %call276 = call zeroext i1 @source_is_dst_backup(i8* %168, %struct.stat* %src_sb, i8* %169), !dbg !5369
  br i1 %call276, label %if.then277, label %if.end288, !dbg !5370

if.then277:                                       ; preds = %land.lhs.true275
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5371, metadata !DIExpression()), !dbg !5373
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5374, !tbaa !2998
  %move_mode278 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 9, !dbg !5375, !ctir !253
  %171 = load i8, i8* %move_mode278, align 8, !dbg !5375, !tbaa !3417
  %tobool279 = trunc i8 %171 to i1, !dbg !5375, !ctir !120
  br i1 %tobool279, label %cond.true280, label %cond.false282, !dbg !5374

cond.true280:                                     ; preds = %if.then277
  %call281 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.107, i64 0, i64 0)) #10, !dbg !5376
  br label %cond.end284, !dbg !5374

cond.false282:                                    ; preds = %if.then277
  %call283 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.108, i64 0, i64 0)) #10, !dbg !5377
  br label %cond.end284, !dbg !5374

cond.end284:                                      ; preds = %cond.false282, %cond.true280
  %cond285 = phi i8* [ %call281, %cond.true280 ], [ %call283, %cond.false282 ], !dbg !5374
  store i8* %cond285, i8** %fmt, align 8, !dbg !5378, !tbaa !2998
  %172 = load i8*, i8** %fmt, align 8, !dbg !5379, !tbaa !2998
  %173 = load i8*, i8** %dst_name.addr, align 8, !dbg !5380, !tbaa !2998
  %call286 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %173), !dbg !5380
  %174 = load i8*, i8** %src_name.addr, align 8, !dbg !5381, !tbaa !2998
  %call287 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %174), !dbg !5381
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %172, i8* %call286, i8* %call287), !dbg !5382
  store i1 false, i1* %retval, align 1, !dbg !5383
  br label %return, !dbg !5383

if.end288:                                        ; preds = %land.lhs.true275, %if.then272
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !5384, metadata !DIExpression()), !dbg !5385
  %175 = load i8*, i8** %dst_name.addr, align 8, !dbg !5386, !tbaa !2998
  %176 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5387, !tbaa !2998
  %backup_type289 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %176, i32 0, i32 0, !dbg !5388, !ctir !253
  %177 = load i32, i32* %backup_type289, align 8, !dbg !5388, !tbaa !3329, !ctir !68
  %call290 = call i8* @backup_file_rename(i32 -100, i8* %175, i32 %177), !dbg !5389
  store i8* %call290, i8** %tmp_backup, align 8, !dbg !5385, !tbaa !2998
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !5390, !tbaa !2998
  %tobool291 = icmp ne i8* %178, null, !dbg !5390
  br i1 %tobool291, label %if.then292, label %if.else294, !dbg !5392

if.then292:                                       ; preds = %if.end288
  br label %do.body, !dbg !5393

do.body:                                          ; preds = %if.then292
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !5395, metadata !DIExpression()), !dbg !5398
  %179 = load i8*, i8** %tmp_backup, align 8, !dbg !5398, !tbaa !2998
  store i8* %179, i8** %__old, align 8, !dbg !5398, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5399, metadata !DIExpression()), !dbg !5398
  %180 = load i8*, i8** %__old, align 8, !dbg !5398, !tbaa !2998
  %call293 = call i64 @strlen(i8* %180) #14, !dbg !5398
  %add = add i64 %call293, 1, !dbg !5398
  store i64 %add, i64* %__len, align 8, !dbg !5398, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !5400, metadata !DIExpression()), !dbg !5398
  %181 = load i64, i64* %__len, align 8, !dbg !5398, !tbaa !3851
  %182 = alloca i8, i64 %181, align 16, !dbg !5398
  store i8* %182, i8** %__new, align 8, !dbg !5398, !tbaa !2998
  %183 = load i8*, i8** %__new, align 8, !dbg !5398, !tbaa !2998
  %184 = load i8*, i8** %__old, align 8, !dbg !5398, !tbaa !2998
  %185 = load i64, i64* %__len, align 8, !dbg !5398, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 %185, i1 false), !dbg !5398
  store i8* %183, i8** %tmp, align 8, !dbg !5398, !tbaa !2998
  %186 = load i8*, i8** %tmp, align 8, !dbg !5398, !tbaa !2998
  store i8* %186, i8** %dst_backup, align 8, !dbg !5401, !tbaa !2998
  br label %do.end, !dbg !5401

do.end:                                           ; preds = %do.body
  %187 = load i8*, i8** %tmp_backup, align 8, !dbg !5402, !tbaa !2998
  call void @free(i8* %187) #10, !dbg !5403
  br label %if.end302, !dbg !5404

if.else294:                                       ; preds = %if.end288
  %call295 = call i32* @__errno_location() #15, !dbg !5405
  %188 = load i32, i32* %call295, align 4, !dbg !5405, !tbaa !2985, !ctir !7
  %cmp296 = icmp ne i32 %188, 2, !dbg !5407
  br i1 %cmp296, label %if.then297, label %if.end301, !dbg !5408

if.then297:                                       ; preds = %if.else294
  %call298 = call i32* @__errno_location() #15, !dbg !5409
  %189 = load i32, i32* %call298, align 4, !dbg !5409, !tbaa !2985, !ctir !7
  %call299 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.109, i64 0, i64 0)) #10, !dbg !5411
  %190 = load i8*, i8** %dst_name.addr, align 8, !dbg !5412, !tbaa !2998
  %call300 = call i8* @quotearg_style(i32 4, i8* %190), !dbg !5412
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* %call299, i8* %call300), !dbg !5413
  store i1 false, i1* %retval, align 1, !dbg !5414
  br label %return, !dbg !5414

if.end301:                                        ; preds = %if.else294
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5415, !tbaa !3109
  br label %if.end343, !dbg !5416

if.else303:                                       ; preds = %lor.lhs.false268, %land.lhs.true262, %if.end259
  %st_mode304 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5417, !ctir !317
  %191 = load i32, i32* %st_mode304, align 8, !dbg !5417, !tbaa !3181, !ctir !133
  %and305 = and i32 %191, 61440, !dbg !5417
  %cmp306 = icmp eq i32 %and305, 16384, !dbg !5417
  br i1 %cmp306, label %if.end342, label %land.lhs.true307, !dbg !5419

land.lhs.true307:                                 ; preds = %if.else303
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5420, !tbaa !2998
  %move_mode308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 9, !dbg !5421, !ctir !253
  %193 = load i8, i8* %move_mode308, align 8, !dbg !5421, !tbaa !3417
  %tobool309 = trunc i8 %193 to i1, !dbg !5421, !ctir !120
  br i1 %tobool309, label %if.end342, label %land.lhs.true310, !dbg !5422

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5423, !tbaa !2998
  %unlink_dest_before_opening311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 6, !dbg !5424, !ctir !253
  %195 = load i8, i8* %unlink_dest_before_opening311, align 1, !dbg !5424, !tbaa !3402
  %tobool312 = trunc i8 %195 to i1, !dbg !5424, !ctir !120
  br i1 %tobool312, label %if.then324, label %lor.lhs.false313, !dbg !5425

lor.lhs.false313:                                 ; preds = %land.lhs.true310
  %196 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5426, !tbaa !2998
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %196, i32 0, i32 19, !dbg !5427, !ctir !253
  %197 = load i8, i8* %preserve_links, align 2, !dbg !5427, !tbaa !3433
  %tobool314 = trunc i8 %197 to i1, !dbg !5427, !ctir !120
  br i1 %tobool314, label %land.lhs.true315, label %lor.lhs.false317, !dbg !5428

land.lhs.true315:                                 ; preds = %lor.lhs.false313
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !5429, !ctir !317
  %198 = load i64, i64* %st_nlink, align 8, !dbg !5429, !tbaa !5430, !ctir !323
  %cmp316 = icmp ult i64 1, %198, !dbg !5431
  br i1 %cmp316, label %if.then324, label %lor.lhs.false317, !dbg !5432

lor.lhs.false317:                                 ; preds = %land.lhs.true315, %lor.lhs.false313
  %199 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5433, !tbaa !2998
  %dereference318 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %199, i32 0, i32 1, !dbg !5434, !ctir !253
  %200 = load i32, i32* %dereference318, align 4, !dbg !5434, !tbaa !3398, !ctir !76
  %cmp319 = icmp eq i32 %200, 2, !dbg !5435
  br i1 %cmp319, label %land.lhs.true320, label %if.end342, !dbg !5436

land.lhs.true320:                                 ; preds = %lor.lhs.false317
  %st_mode321 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5437, !ctir !317
  %201 = load i32, i32* %st_mode321, align 8, !dbg !5437, !tbaa !3181, !ctir !133
  %and322 = and i32 %201, 61440, !dbg !5437
  %cmp323 = icmp eq i32 %and322, 32768, !dbg !5437
  br i1 %cmp323, label %if.end342, label %if.then324, !dbg !5438

if.then324:                                       ; preds = %land.lhs.true320, %land.lhs.true315, %land.lhs.true310
  %202 = load i8*, i8** %dst_name.addr, align 8, !dbg !5439, !tbaa !2998
  %call325 = call i32 @unlink(i8* %202) #10, !dbg !5442
  %cmp326 = icmp ne i32 %call325, 0, !dbg !5443
  br i1 %cmp326, label %land.lhs.true327, label %if.end334, !dbg !5444

land.lhs.true327:                                 ; preds = %if.then324
  %call328 = call i32* @__errno_location() #15, !dbg !5445
  %203 = load i32, i32* %call328, align 4, !dbg !5445, !tbaa !2985, !ctir !7
  %cmp329 = icmp ne i32 %203, 2, !dbg !5446
  br i1 %cmp329, label %if.then330, label %if.end334, !dbg !5447

if.then330:                                       ; preds = %land.lhs.true327
  %call331 = call i32* @__errno_location() #15, !dbg !5448
  %204 = load i32, i32* %call331, align 4, !dbg !5448, !tbaa !2985, !ctir !7
  %call332 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #10, !dbg !5450
  %205 = load i8*, i8** %dst_name.addr, align 8, !dbg !5451, !tbaa !2998
  %call333 = call i8* @quotearg_style(i32 4, i8* %205), !dbg !5451
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %204, i8* %call332, i8* %call333), !dbg !5452
  store i1 false, i1* %retval, align 1, !dbg !5453
  br label %return, !dbg !5453

if.end334:                                        ; preds = %land.lhs.true327, %if.then324
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5454, !tbaa !3109
  %206 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5455, !tbaa !2998
  %verbose335 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %206, i32 0, i32 31, !dbg !5457, !ctir !253
  %207 = load i8, i8* %verbose335, align 2, !dbg !5457, !tbaa !3198
  %tobool336 = trunc i8 %207 to i1, !dbg !5457, !ctir !120
  br i1 %tobool336, label %if.then337, label %if.end341, !dbg !5458

if.then337:                                       ; preds = %if.end334
  %call338 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !5459
  %208 = load i8*, i8** %dst_name.addr, align 8, !dbg !5460, !tbaa !2998
  %call339 = call i8* @quotearg_style(i32 4, i8* %208), !dbg !5460
  %call340 = call i32 (i8*, ...) @printf(i8* %call338, i8* %call339), !dbg !5461
  br label %if.end341, !dbg !5461

if.end341:                                        ; preds = %if.then337, %if.end334
  br label %if.end342, !dbg !5462

if.end342:                                        ; preds = %if.end341, %land.lhs.true320, %lor.lhs.false317, %land.lhs.true307, %if.else303
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end302
  br label %if.end344, !dbg !5463

if.end344:                                        ; preds = %if.end343, %if.end122
  br label %if.end345, !dbg !5464

if.end345:                                        ; preds = %if.end344, %if.end64
  %209 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5465, !tbaa !3109
  %tobool346 = trunc i8 %209 to i1, !dbg !5465
  br i1 %tobool346, label %land.lhs.true347, label %if.end379, !dbg !5467

land.lhs.true347:                                 ; preds = %if.end345
  %210 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5468, !tbaa !2998
  %dest_info348 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %210, i32 0, i32 37, !dbg !5469, !ctir !253
  %211 = load %struct.hash_table*, %struct.hash_table** %dest_info348, align 8, !dbg !5469, !tbaa !3515, !ctir !195
  %tobool349 = icmp ne %struct.hash_table* %211, null, !dbg !5468
  br i1 %tobool349, label %land.lhs.true350, label %if.end379, !dbg !5470

land.lhs.true350:                                 ; preds = %land.lhs.true347
  %212 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5471, !tbaa !2998
  %move_mode351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %212, i32 0, i32 9, !dbg !5472, !ctir !253
  %213 = load i8, i8* %move_mode351, align 8, !dbg !5472, !tbaa !3417
  %tobool352 = trunc i8 %213 to i1, !dbg !5472, !ctir !120
  br i1 %tobool352, label %if.end379, label %land.lhs.true353, !dbg !5473

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %214 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5474, !tbaa !2998
  %backup_type354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %214, i32 0, i32 0, !dbg !5475, !ctir !253
  %215 = load i32, i32* %backup_type354, align 8, !dbg !5475, !tbaa !3329, !ctir !68
  %cmp355 = icmp eq i32 %215, 0, !dbg !5476
  br i1 %cmp355, label %if.then356, label %if.end379, !dbg !5477

if.then356:                                       ; preds = %land.lhs.true353
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !5478, metadata !DIExpression()), !dbg !5480
  store i8 1, i8* %lstat_ok, align 1, !dbg !5480, !tbaa !3109
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !5481, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !5483, metadata !DIExpression()), !dbg !5484
  %216 = load i8, i8* %have_dst_lstat, align 1, !dbg !5485, !tbaa !3109
  %tobool357 = trunc i8 %216 to i1, !dbg !5485
  br i1 %tobool357, label %if.then358, label %if.else359, !dbg !5487

if.then358:                                       ; preds = %if.then356
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !5488, !tbaa !2998
  br label %if.end365, !dbg !5489

if.else359:                                       ; preds = %if.then356
  %217 = load i8*, i8** %dst_name.addr, align 8, !dbg !5490, !tbaa !2998
  %call360 = call i32 @lstat(i8* %217, %struct.stat* %tmp_buf) #10, !dbg !5493
  %cmp361 = icmp eq i32 %call360, 0, !dbg !5494
  br i1 %cmp361, label %if.then362, label %if.else363, !dbg !5495

if.then362:                                       ; preds = %if.else359
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !5496, !tbaa !2998
  br label %if.end364, !dbg !5497

if.else363:                                       ; preds = %if.else359
  store i8 0, i8* %lstat_ok, align 1, !dbg !5498, !tbaa !3109
  br label %if.end364

if.end364:                                        ; preds = %if.else363, %if.then362
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.then358
  %218 = load i8, i8* %lstat_ok, align 1, !dbg !5499, !tbaa !3109
  %tobool366 = trunc i8 %218 to i1, !dbg !5499
  br i1 %tobool366, label %land.lhs.true367, label %if.end378, !dbg !5501

land.lhs.true367:                                 ; preds = %if.end365
  %219 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5502, !tbaa !2998
  %st_mode368 = getelementptr inbounds %struct.stat, %struct.stat* %219, i32 0, i32 3, !dbg !5502, !ctir !317
  %220 = load i32, i32* %st_mode368, align 8, !dbg !5502, !tbaa !3181, !ctir !133
  %and369 = and i32 %220, 61440, !dbg !5502
  %cmp370 = icmp eq i32 %and369, 40960, !dbg !5502
  br i1 %cmp370, label %land.lhs.true371, label %if.end378, !dbg !5503

land.lhs.true371:                                 ; preds = %land.lhs.true367
  %221 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5504, !tbaa !2998
  %dest_info372 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %221, i32 0, i32 37, !dbg !5505, !ctir !253
  %222 = load %struct.hash_table*, %struct.hash_table** %dest_info372, align 8, !dbg !5505, !tbaa !3515, !ctir !195
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !5506, !tbaa !2998
  %224 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5507, !tbaa !2998
  %call373 = call zeroext i1 @seen_file(%struct.hash_table* %222, i8* %223, %struct.stat* %224), !dbg !5508
  br i1 %call373, label %if.then374, label %if.end378, !dbg !5509

if.then374:                                       ; preds = %land.lhs.true371
  %call375 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.112, i64 0, i64 0)) #10, !dbg !5510
  %225 = load i8*, i8** %src_name.addr, align 8, !dbg !5512, !tbaa !2998
  %call376 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %225), !dbg !5512
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !5513, !tbaa !2998
  %call377 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %226), !dbg !5513
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call375, i8* %call376, i8* %call377), !dbg !5514
  store i1 false, i1* %retval, align 1, !dbg !5515
  br label %return, !dbg !5515

if.end378:                                        ; preds = %land.lhs.true371, %land.lhs.true367, %if.end365
  br label %if.end379, !dbg !5516

if.end379:                                        ; preds = %if.end378, %land.lhs.true353, %land.lhs.true350, %land.lhs.true347, %if.end345
  %227 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5517, !tbaa !2998
  %verbose380 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %227, i32 0, i32 31, !dbg !5519, !ctir !253
  %228 = load i8, i8* %verbose380, align 2, !dbg !5519, !tbaa !3198
  %tobool381 = trunc i8 %228 to i1, !dbg !5519, !ctir !120
  br i1 %tobool381, label %land.lhs.true382, label %if.end389, !dbg !5520

land.lhs.true382:                                 ; preds = %if.end379
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5521, !tbaa !2998
  %move_mode383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 9, !dbg !5522, !ctir !253
  %230 = load i8, i8* %move_mode383, align 8, !dbg !5522, !tbaa !3417
  %tobool384 = trunc i8 %230 to i1, !dbg !5522, !ctir !120
  br i1 %tobool384, label %if.end389, label %land.lhs.true385, !dbg !5523

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %231 = load i32, i32* %src_mode, align 4, !dbg !5524, !tbaa !2985
  %and386 = and i32 %231, 61440, !dbg !5524
  %cmp387 = icmp eq i32 %and386, 16384, !dbg !5524
  br i1 %cmp387, label %if.end389, label %if.then388, !dbg !5525

if.then388:                                       ; preds = %land.lhs.true385
  %232 = load i8*, i8** %src_name.addr, align 8, !dbg !5526, !tbaa !2998
  %233 = load i8*, i8** %dst_name.addr, align 8, !dbg !5527, !tbaa !2998
  %234 = load i8*, i8** %dst_backup, align 8, !dbg !5528, !tbaa !2998
  call void @emit_verbose(i8* %232, i8* %233, i8* %234), !dbg !5529
  br label %if.end389, !dbg !5529

if.end389:                                        ; preds = %if.then388, %land.lhs.true385, %land.lhs.true382, %if.end379
  %235 = load i32, i32* %rename_errno, align 4, !dbg !5530, !tbaa !2985
  %cmp390 = icmp eq i32 %235, 0, !dbg !5532
  br i1 %cmp390, label %if.then391, label %if.else392, !dbg !5533

if.then391:                                       ; preds = %if.end389
  store i8* null, i8** %earlier_file, align 8, !dbg !5534, !tbaa !2998
  br label %if.end443, !dbg !5535

if.else392:                                       ; preds = %if.end389
  %236 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5536, !tbaa !2998
  %recursive393 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %236, i32 0, i32 27, !dbg !5538, !ctir !253
  %237 = load i8, i8* %recursive393, align 2, !dbg !5538, !tbaa !3480
  %tobool394 = trunc i8 %237 to i1, !dbg !5538, !ctir !120
  br i1 %tobool394, label %land.lhs.true395, label %if.else409, !dbg !5539

land.lhs.true395:                                 ; preds = %if.else392
  %238 = load i32, i32* %src_mode, align 4, !dbg !5540, !tbaa !2985
  %and396 = and i32 %238, 61440, !dbg !5540
  %cmp397 = icmp eq i32 %and396, 16384, !dbg !5540
  br i1 %cmp397, label %if.then398, label %if.else409, !dbg !5541

if.then398:                                       ; preds = %land.lhs.true395
  %239 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5542, !tbaa !3109
  %tobool399 = trunc i8 %239 to i1, !dbg !5542
  br i1 %tobool399, label %if.then400, label %if.else404, !dbg !5545

if.then400:                                       ; preds = %if.then398
  %240 = load i8*, i8** %dst_name.addr, align 8, !dbg !5546, !tbaa !2998
  %st_ino401 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5547, !ctir !317
  %241 = load i64, i64* %st_ino401, align 8, !dbg !5547, !tbaa !3873, !ctir !228
  %st_dev402 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5548, !ctir !317
  %242 = load i64, i64* %st_dev402, align 8, !dbg !5548, !tbaa !3876, !ctir !231
  %call403 = call i8* @remember_copied(i8* %240, i64 %241, i64 %242), !dbg !5549
  store i8* %call403, i8** %earlier_file, align 8, !dbg !5550, !tbaa !2998
  br label %if.end408, !dbg !5551

if.else404:                                       ; preds = %if.then398
  %st_ino405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5552, !ctir !317
  %243 = load i64, i64* %st_ino405, align 8, !dbg !5552, !tbaa !3873, !ctir !228
  %st_dev406 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5553, !ctir !317
  %244 = load i64, i64* %st_dev406, align 8, !dbg !5553, !tbaa !3876, !ctir !231
  %call407 = call i8* @src_to_dest_lookup(i64 %243, i64 %244), !dbg !5554
  store i8* %call407, i8** %earlier_file, align 8, !dbg !5555, !tbaa !2998
  br label %if.end408

if.end408:                                        ; preds = %if.else404, %if.then400
  br label %if.end442, !dbg !5556

if.else409:                                       ; preds = %land.lhs.true395, %if.else392
  %245 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5557, !tbaa !2998
  %move_mode410 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %245, i32 0, i32 9, !dbg !5559, !ctir !253
  %246 = load i8, i8* %move_mode410, align 8, !dbg !5559, !tbaa !3417
  %tobool411 = trunc i8 %246 to i1, !dbg !5559, !ctir !120
  br i1 %tobool411, label %land.lhs.true412, label %if.else419, !dbg !5560

land.lhs.true412:                                 ; preds = %if.else409
  %st_nlink413 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5561, !ctir !317
  %247 = load i64, i64* %st_nlink413, align 8, !dbg !5561, !tbaa !5430, !ctir !323
  %cmp414 = icmp eq i64 %247, 1, !dbg !5562
  br i1 %cmp414, label %if.then415, label %if.else419, !dbg !5563

if.then415:                                       ; preds = %land.lhs.true412
  %st_ino416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5564, !ctir !317
  %248 = load i64, i64* %st_ino416, align 8, !dbg !5564, !tbaa !3873, !ctir !228
  %st_dev417 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5566, !ctir !317
  %249 = load i64, i64* %st_dev417, align 8, !dbg !5566, !tbaa !3876, !ctir !231
  %call418 = call i8* @src_to_dest_lookup(i64 %248, i64 %249), !dbg !5567
  store i8* %call418, i8** %earlier_file, align 8, !dbg !5568, !tbaa !2998
  br label %if.end441, !dbg !5569

if.else419:                                       ; preds = %land.lhs.true412, %if.else409
  %250 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5570, !tbaa !2998
  %preserve_links420 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %250, i32 0, i32 19, !dbg !5572, !ctir !253
  %251 = load i8, i8* %preserve_links420, align 2, !dbg !5572, !tbaa !3433
  %tobool421 = trunc i8 %251 to i1, !dbg !5572, !ctir !120
  br i1 %tobool421, label %land.lhs.true422, label %if.end440, !dbg !5573

land.lhs.true422:                                 ; preds = %if.else419
  %252 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5574, !tbaa !2998
  %hard_link423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %252, i32 0, i32 8, !dbg !5575, !ctir !253
  %253 = load i8, i8* %hard_link423, align 1, !dbg !5575, !tbaa !3410
  %tobool424 = trunc i8 %253 to i1, !dbg !5575, !ctir !120
  br i1 %tobool424, label %if.end440, label %land.lhs.true425, !dbg !5576

land.lhs.true425:                                 ; preds = %land.lhs.true422
  %st_nlink426 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5577, !ctir !317
  %254 = load i64, i64* %st_nlink426, align 8, !dbg !5577, !tbaa !5430, !ctir !323
  %cmp427 = icmp ult i64 1, %254, !dbg !5578
  br i1 %cmp427, label %if.then436, label %lor.lhs.false428, !dbg !5579

lor.lhs.false428:                                 ; preds = %land.lhs.true425
  %255 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5580, !tbaa !3109
  %tobool429 = trunc i8 %255 to i1, !dbg !5580
  br i1 %tobool429, label %land.lhs.true430, label %lor.lhs.false433, !dbg !5581

land.lhs.true430:                                 ; preds = %lor.lhs.false428
  %256 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5582, !tbaa !2998
  %dereference431 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %256, i32 0, i32 1, !dbg !5583, !ctir !253
  %257 = load i32, i32* %dereference431, align 4, !dbg !5583, !tbaa !3398, !ctir !76
  %cmp432 = icmp eq i32 %257, 3, !dbg !5584
  br i1 %cmp432, label %if.then436, label %lor.lhs.false433, !dbg !5585

lor.lhs.false433:                                 ; preds = %land.lhs.true430, %lor.lhs.false428
  %258 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5586, !tbaa !2998
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %258, i32 0, i32 1, !dbg !5587, !ctir !253
  %259 = load i32, i32* %dereference434, align 4, !dbg !5587, !tbaa !3398, !ctir !76
  %cmp435 = icmp eq i32 %259, 4, !dbg !5588
  br i1 %cmp435, label %if.then436, label %if.end440, !dbg !5589

if.then436:                                       ; preds = %lor.lhs.false433, %land.lhs.true430, %land.lhs.true425
  %260 = load i8*, i8** %dst_name.addr, align 8, !dbg !5590, !tbaa !2998
  %st_ino437 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5592, !ctir !317
  %261 = load i64, i64* %st_ino437, align 8, !dbg !5592, !tbaa !3873, !ctir !228
  %st_dev438 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5593, !ctir !317
  %262 = load i64, i64* %st_dev438, align 8, !dbg !5593, !tbaa !3876, !ctir !231
  %call439 = call i8* @remember_copied(i8* %260, i64 %261, i64 %262), !dbg !5594
  store i8* %call439, i8** %earlier_file, align 8, !dbg !5595, !tbaa !2998
  br label %if.end440, !dbg !5596

if.end440:                                        ; preds = %if.then436, %lor.lhs.false433, %land.lhs.true422, %if.else419
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then415
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end408
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.then391
  %263 = load i8*, i8** %earlier_file, align 8, !dbg !5597, !tbaa !2998
  %tobool444 = icmp ne i8* %263, null, !dbg !5597
  br i1 %tobool444, label %if.then445, label %if.end489, !dbg !5599

if.then445:                                       ; preds = %if.end443
  %264 = load i32, i32* %src_mode, align 4, !dbg !5600, !tbaa !2985
  %and446 = and i32 %264, 61440, !dbg !5600
  %cmp447 = icmp eq i32 %and446, 16384, !dbg !5600
  br i1 %cmp447, label %if.then448, label %if.else481, !dbg !5603

if.then448:                                       ; preds = %if.then445
  %265 = load i8*, i8** %src_name.addr, align 8, !dbg !5604, !tbaa !2998
  %266 = load i8*, i8** %earlier_file, align 8, !dbg !5607, !tbaa !2998
  %call449 = call zeroext i1 @same_name(i8* %265, i8* %266), !dbg !5608
  br i1 %call449, label %if.then450, label %if.else454, !dbg !5609

if.then450:                                       ; preds = %if.then448
  %call451 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.113, i64 0, i64 0)) #10, !dbg !5610
  %267 = load i8*, i8** @top_level_src_name, align 8, !dbg !5612, !tbaa !2998
  %call452 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %267), !dbg !5612
  %268 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5613, !tbaa !2998
  %call453 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %268), !dbg !5613
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call451, i8* %call452, i8* %call453), !dbg !5614
  %269 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5615, !tbaa !2998
  store i8 1, i8* %269, align 1, !dbg !5616, !tbaa !3109, !ctir !120
  br label %un_backup, !dbg !5617

if.else454:                                       ; preds = %if.then448
  %270 = load i8*, i8** %dst_name.addr, align 8, !dbg !5618, !tbaa !2998
  %271 = load i8*, i8** %earlier_file, align 8, !dbg !5620, !tbaa !2998
  %call455 = call zeroext i1 @same_name(i8* %270, i8* %271), !dbg !5621
  br i1 %call455, label %if.then456, label %if.else465, !dbg !5622

if.then456:                                       ; preds = %if.else454
  %call457 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.114, i64 0, i64 0)) #10, !dbg !5623
  %272 = load i8*, i8** @top_level_src_name, align 8, !dbg !5625, !tbaa !2998
  %call458 = call i8* @quotearg_style(i32 4, i8* %272), !dbg !5625
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call457, i8* %call458), !dbg !5626
  %273 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5627, !tbaa !2998
  %move_mode459 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %273, i32 0, i32 9, !dbg !5629, !ctir !253
  %274 = load i8, i8* %move_mode459, align 8, !dbg !5629, !tbaa !3417
  %tobool460 = trunc i8 %274 to i1, !dbg !5629, !ctir !120
  br i1 %tobool460, label %land.lhs.true461, label %if.end464, !dbg !5630

land.lhs.true461:                                 ; preds = %if.then456
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5631, !tbaa !2998
  %tobool462 = icmp ne i8* %275, null, !dbg !5631
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !5632

if.then463:                                       ; preds = %land.lhs.true461
  %276 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5633, !tbaa !2998
  store i8 1, i8* %276, align 1, !dbg !5634, !tbaa !3109, !ctir !120
  br label %if.end464, !dbg !5635

if.end464:                                        ; preds = %if.then463, %land.lhs.true461, %if.then456
  store i1 true, i1* %retval, align 1, !dbg !5636
  br label %return, !dbg !5636

if.else465:                                       ; preds = %if.else454
  %277 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5637, !tbaa !2998
  %dereference466 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %277, i32 0, i32 1, !dbg !5639, !ctir !253
  %278 = load i32, i32* %dereference466, align 4, !dbg !5639, !tbaa !3398, !ctir !76
  %cmp467 = icmp eq i32 %278, 4, !dbg !5640
  br i1 %cmp467, label %if.then473, label %lor.lhs.false468, !dbg !5641

lor.lhs.false468:                                 ; preds = %if.else465
  %279 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5642, !tbaa !3109
  %tobool469 = trunc i8 %279 to i1, !dbg !5642
  br i1 %tobool469, label %land.lhs.true470, label %if.else474, !dbg !5643

land.lhs.true470:                                 ; preds = %lor.lhs.false468
  %280 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5644, !tbaa !2998
  %dereference471 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %280, i32 0, i32 1, !dbg !5645, !ctir !253
  %281 = load i32, i32* %dereference471, align 4, !dbg !5645, !tbaa !3398, !ctir !76
  %cmp472 = icmp eq i32 %281, 3, !dbg !5646
  br i1 %cmp472, label %if.then473, label %if.else474, !dbg !5647

if.then473:                                       ; preds = %land.lhs.true470, %if.else465
  br label %if.end478, !dbg !5648

if.else474:                                       ; preds = %land.lhs.true470, %lor.lhs.false468
  %call475 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.115, i64 0, i64 0)) #10, !dbg !5650
  %282 = load i8*, i8** %dst_name.addr, align 8, !dbg !5652, !tbaa !2998
  %call476 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %282), !dbg !5652
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !5653, !tbaa !2998
  %call477 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %283), !dbg !5653
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call475, i8* %call476, i8* %call477), !dbg !5654
  br label %un_backup, !dbg !5655

if.end478:                                        ; preds = %if.then473
  br label %if.end479

if.end479:                                        ; preds = %if.end478
  br label %if.end480

if.end480:                                        ; preds = %if.end479
  br label %if.end488, !dbg !5656

if.else481:                                       ; preds = %if.then445
  %284 = load i8*, i8** %earlier_file, align 8, !dbg !5657, !tbaa !2998
  %285 = load i8*, i8** %dst_name.addr, align 8, !dbg !5660, !tbaa !2998
  %286 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5661, !tbaa !2998
  %verbose482 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %286, i32 0, i32 31, !dbg !5662, !ctir !253
  %287 = load i8, i8* %verbose482, align 2, !dbg !5662, !tbaa !3198
  %tobool483 = trunc i8 %287 to i1, !dbg !5662, !ctir !120
  %288 = load i8, i8* %dereference65, align 1, !dbg !5663, !tbaa !3109
  %tobool484 = trunc i8 %288 to i1, !dbg !5663
  %call485 = call zeroext i1 @create_hard_link(i8* %284, i8* %285, i1 zeroext true, i1 zeroext %tobool483, i1 zeroext %tobool484), !dbg !5664
  br i1 %call485, label %if.end487, label %if.then486, !dbg !5665

if.then486:                                       ; preds = %if.else481
  br label %un_backup, !dbg !5666

if.end487:                                        ; preds = %if.else481
  store i1 true, i1* %retval, align 1, !dbg !5667
  br label %return, !dbg !5667

if.end488:                                        ; preds = %if.end480
  br label %if.end489, !dbg !5668

if.end489:                                        ; preds = %if.end488, %if.end443
  %289 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5669, !tbaa !2998
  %move_mode490 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %289, i32 0, i32 9, !dbg !5671, !ctir !253
  %290 = load i8, i8* %move_mode490, align 8, !dbg !5671, !tbaa !3417
  %tobool491 = trunc i8 %290 to i1, !dbg !5671, !ctir !120
  br i1 %tobool491, label %if.then492, label %if.end569, !dbg !5672

if.then492:                                       ; preds = %if.end489
  %291 = load i32, i32* %rename_errno, align 4, !dbg !5673, !tbaa !2985
  %cmp493 = icmp eq i32 %291, 17, !dbg !5676
  br i1 %cmp493, label %if.then494, label %if.end502, !dbg !5677

if.then494:                                       ; preds = %if.then492
  %292 = load i8*, i8** %src_name.addr, align 8, !dbg !5678, !tbaa !2998
  %293 = load i8*, i8** %dst_name.addr, align 8, !dbg !5679, !tbaa !2998
  %call495 = call i32 @rename(i8* %292, i8* %293) #10, !dbg !5680
  %cmp496 = icmp eq i32 %call495, 0, !dbg !5681
  br i1 %cmp496, label %cond.true497, label %cond.false498, !dbg !5680

cond.true497:                                     ; preds = %if.then494
  br label %cond.end500, !dbg !5680

cond.false498:                                    ; preds = %if.then494
  %call499 = call i32* @__errno_location() #15, !dbg !5682
  %294 = load i32, i32* %call499, align 4, !dbg !5682, !tbaa !2985, !ctir !7
  br label %cond.end500, !dbg !5680

cond.end500:                                      ; preds = %cond.false498, %cond.true497
  %cond501 = phi i32 [ 0, %cond.true497 ], [ %294, %cond.false498 ], !dbg !5680
  store i32 %cond501, i32* %rename_errno, align 4, !dbg !5683, !tbaa !2985
  br label %if.end502, !dbg !5684

if.end502:                                        ; preds = %cond.end500, %if.then492
  %295 = load i32, i32* %rename_errno, align 4, !dbg !5685, !tbaa !2985
  %cmp503 = icmp eq i32 %295, 0, !dbg !5687
  br i1 %cmp503, label %if.then504, label %if.end525, !dbg !5688

if.then504:                                       ; preds = %if.end502
  %296 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5689, !tbaa !2998
  %verbose505 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %296, i32 0, i32 31, !dbg !5692, !ctir !253
  %297 = load i8, i8* %verbose505, align 2, !dbg !5692, !tbaa !3198
  %tobool506 = trunc i8 %297 to i1, !dbg !5692, !ctir !120
  br i1 %tobool506, label %if.then507, label %if.end510, !dbg !5693

if.then507:                                       ; preds = %if.then504
  %call508 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.116, i64 0, i64 0)) #10, !dbg !5694
  %call509 = call i32 (i8*, ...) @printf(i8* %call508), !dbg !5696
  %298 = load i8*, i8** %src_name.addr, align 8, !dbg !5697, !tbaa !2998
  %299 = load i8*, i8** %dst_name.addr, align 8, !dbg !5698, !tbaa !2998
  %300 = load i8*, i8** %dst_backup, align 8, !dbg !5699, !tbaa !2998
  call void @emit_verbose(i8* %298, i8* %299, i8* %300), !dbg !5700
  br label %if.end510, !dbg !5701

if.end510:                                        ; preds = %if.then507, %if.then504
  %301 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5702, !tbaa !2998
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %301, i32 0, i32 18, !dbg !5704, !ctir !253
  %302 = load i8, i8* %set_security_context, align 1, !dbg !5704, !tbaa !3213
  %tobool511 = trunc i8 %302 to i1, !dbg !5704, !ctir !120
  br i1 %tobool511, label %if.then512, label %if.end514, !dbg !5705

if.then512:                                       ; preds = %if.end510
  %303 = load i8*, i8** %dst_name.addr, align 8, !dbg !5706, !tbaa !2998
  %304 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5708, !tbaa !2998
  %call513 = call zeroext i1 @set_file_security_ctx(i8* %303, i1 zeroext false, i1 zeroext true, %struct.cp_options* %304), !dbg !5709
  br label %if.end514, !dbg !5710

if.end514:                                        ; preds = %if.then512, %if.end510
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5711, !tbaa !2998
  %tobool515 = icmp ne i8* %305, null, !dbg !5711
  br i1 %tobool515, label %if.then516, label %if.end517, !dbg !5713

if.then516:                                       ; preds = %if.end514
  %306 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5714, !tbaa !2998
  store i8 1, i8* %306, align 1, !dbg !5715, !tbaa !3109, !ctir !120
  br label %if.end517, !dbg !5716

if.end517:                                        ; preds = %if.then516, %if.end514
  %307 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5717, !tbaa !3109
  %tobool518 = trunc i8 %307 to i1, !dbg !5717
  br i1 %tobool518, label %land.lhs.true519, label %if.end524, !dbg !5719

land.lhs.true519:                                 ; preds = %if.end517
  %308 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5720, !tbaa !2998
  %last_file520 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %308, i32 0, i32 34, !dbg !5721, !ctir !253
  %309 = load i8, i8* %last_file520, align 1, !dbg !5721, !tbaa !3359
  %tobool521 = trunc i8 %309 to i1, !dbg !5721, !ctir !120
  br i1 %tobool521, label %if.end524, label %if.then522, !dbg !5722

if.then522:                                       ; preds = %land.lhs.true519
  %310 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5723, !tbaa !2998
  %dest_info523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %310, i32 0, i32 37, !dbg !5725, !ctir !253
  %311 = load %struct.hash_table*, %struct.hash_table** %dest_info523, align 8, !dbg !5725, !tbaa !3515, !ctir !195
  %312 = load i8*, i8** %dst_name.addr, align 8, !dbg !5726, !tbaa !2998
  call void @record_file(%struct.hash_table* %311, i8* %312, %struct.stat* %src_sb), !dbg !5727
  br label %if.end524, !dbg !5728

if.end524:                                        ; preds = %if.then522, %land.lhs.true519, %if.end517
  store i1 true, i1* %retval, align 1, !dbg !5729
  br label %return, !dbg !5729

if.end525:                                        ; preds = %if.end502
  %313 = load i32, i32* %rename_errno, align 4, !dbg !5730, !tbaa !2985
  %cmp526 = icmp eq i32 %313, 22, !dbg !5732
  br i1 %cmp526, label %if.then527, label %if.end531, !dbg !5733

if.then527:                                       ; preds = %if.end525
  %call528 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.117, i64 0, i64 0)) #10, !dbg !5734
  %314 = load i8*, i8** @top_level_src_name, align 8, !dbg !5736, !tbaa !2998
  %call529 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %314), !dbg !5736
  %315 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5737, !tbaa !2998
  %call530 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %315), !dbg !5737
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call528, i8* %call529, i8* %call530), !dbg !5738
  %316 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5739, !tbaa !2998
  store i8 1, i8* %316, align 1, !dbg !5740, !tbaa !3109, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !5741
  br label %return, !dbg !5741

if.end531:                                        ; preds = %if.end525
  %317 = load i32, i32* %rename_errno, align 4, !dbg !5742, !tbaa !2985
  %cmp532 = icmp ne i32 %317, 18, !dbg !5744
  br i1 %cmp532, label %if.then533, label %if.end539, !dbg !5745

if.then533:                                       ; preds = %if.end531
  %318 = load i32, i32* %rename_errno, align 4, !dbg !5746, !tbaa !2985
  %call534 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.118, i64 0, i64 0)) #10, !dbg !5748
  %319 = load i8*, i8** %src_name.addr, align 8, !dbg !5749, !tbaa !2998
  %call535 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %319), !dbg !5749
  %320 = load i8*, i8** %dst_name.addr, align 8, !dbg !5750, !tbaa !2998
  %call536 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %320), !dbg !5750
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %318, i8* %call534, i8* %call535, i8* %call536), !dbg !5751
  %st_ino537 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5752, !ctir !317
  %321 = load i64, i64* %st_ino537, align 8, !dbg !5752, !tbaa !3873, !ctir !228
  %st_dev538 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5753, !ctir !317
  %322 = load i64, i64* %st_dev538, align 8, !dbg !5753, !tbaa !3876, !ctir !231
  call void @forget_created(i64 %321, i64 %322), !dbg !5754
  store i1 false, i1* %retval, align 1, !dbg !5755
  br label %return, !dbg !5755

if.end539:                                        ; preds = %if.end531
  %323 = load i32, i32* %src_mode, align 4, !dbg !5756, !tbaa !2985
  %and540 = and i32 %323, 61440, !dbg !5756
  %cmp541 = icmp eq i32 %and540, 16384, !dbg !5756
  br i1 %cmp541, label %cond.true542, label %cond.false544, !dbg !5756

cond.true542:                                     ; preds = %if.end539
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !5758, !tbaa !2998
  %call543 = call i32 @rmdir(i8* %324) #10, !dbg !5759
  br label %cond.end546, !dbg !5756

cond.false544:                                    ; preds = %if.end539
  %325 = load i8*, i8** %dst_name.addr, align 8, !dbg !5760, !tbaa !2998
  %call545 = call i32 @unlink(i8* %325) #10, !dbg !5761
  br label %cond.end546, !dbg !5756

cond.end546:                                      ; preds = %cond.false544, %cond.true542
  %cond547 = phi i32 [ %call543, %cond.true542 ], [ %call545, %cond.false544 ], !dbg !5756
  %cmp548 = icmp ne i32 %cond547, 0, !dbg !5762
  br i1 %cmp548, label %land.lhs.true549, label %if.end559, !dbg !5763

land.lhs.true549:                                 ; preds = %cond.end546
  %call550 = call i32* @__errno_location() #15, !dbg !5764
  %326 = load i32, i32* %call550, align 4, !dbg !5764, !tbaa !2985, !ctir !7
  %cmp551 = icmp ne i32 %326, 2, !dbg !5765
  br i1 %cmp551, label %if.then552, label %if.end559, !dbg !5766

if.then552:                                       ; preds = %land.lhs.true549
  %call553 = call i32* @__errno_location() #15, !dbg !5767
  %327 = load i32, i32* %call553, align 4, !dbg !5767, !tbaa !2985, !ctir !7
  %call554 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.119, i64 0, i64 0)) #10, !dbg !5769
  %328 = load i8*, i8** %src_name.addr, align 8, !dbg !5770, !tbaa !2998
  %call555 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %328), !dbg !5770
  %329 = load i8*, i8** %dst_name.addr, align 8, !dbg !5771, !tbaa !2998
  %call556 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %329), !dbg !5771
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %call554, i8* %call555, i8* %call556), !dbg !5772
  %st_ino557 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5773, !ctir !317
  %330 = load i64, i64* %st_ino557, align 8, !dbg !5773, !tbaa !3873, !ctir !228
  %st_dev558 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5774, !ctir !317
  %331 = load i64, i64* %st_dev558, align 8, !dbg !5774, !tbaa !3876, !ctir !231
  call void @forget_created(i64 %330, i64 %331), !dbg !5775
  store i1 false, i1* %retval, align 1, !dbg !5776
  br label %return, !dbg !5776

if.end559:                                        ; preds = %land.lhs.true549, %cond.end546
  %332 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5777, !tbaa !2998
  %verbose560 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %332, i32 0, i32 31, !dbg !5779, !ctir !253
  %333 = load i8, i8* %verbose560, align 2, !dbg !5779, !tbaa !3198
  %tobool561 = trunc i8 %333 to i1, !dbg !5779, !ctir !120
  br i1 %tobool561, label %land.lhs.true562, label %if.end568, !dbg !5780

land.lhs.true562:                                 ; preds = %if.end559
  %334 = load i32, i32* %src_mode, align 4, !dbg !5781, !tbaa !2985
  %and563 = and i32 %334, 61440, !dbg !5781
  %cmp564 = icmp eq i32 %and563, 16384, !dbg !5781
  br i1 %cmp564, label %if.end568, label %if.then565, !dbg !5782

if.then565:                                       ; preds = %land.lhs.true562
  %call566 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.120, i64 0, i64 0)) #10, !dbg !5783
  %call567 = call i32 (i8*, ...) @printf(i8* %call566), !dbg !5785
  %335 = load i8*, i8** %src_name.addr, align 8, !dbg !5786, !tbaa !2998
  %336 = load i8*, i8** %dst_name.addr, align 8, !dbg !5787, !tbaa !2998
  %337 = load i8*, i8** %dst_backup, align 8, !dbg !5788, !tbaa !2998
  call void @emit_verbose(i8* %335, i8* %336, i8* %337), !dbg !5789
  br label %if.end568, !dbg !5790

if.end568:                                        ; preds = %if.then565, %land.lhs.true562, %if.end559
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5791, !tbaa !3109
  br label %if.end569, !dbg !5792

if.end569:                                        ; preds = %if.end568, %if.end489
  %338 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5793, !tbaa !2998
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %338, i32 0, i32 28, !dbg !5794, !ctir !253
  %339 = load i8, i8* %set_mode, align 1, !dbg !5794, !tbaa !3492
  %tobool570 = trunc i8 %339 to i1, !dbg !5794, !ctir !120
  br i1 %tobool570, label %cond.true571, label %cond.false572, !dbg !5793

cond.true571:                                     ; preds = %if.end569
  %340 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5795, !tbaa !2998
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %340, i32 0, i32 4, !dbg !5796, !ctir !253
  %341 = load i32, i32* %mode, align 8, !dbg !5796, !tbaa !3496, !ctir !160
  br label %cond.end573, !dbg !5793

cond.false572:                                    ; preds = %if.end569
  %342 = load i32, i32* %src_mode, align 4, !dbg !5797, !tbaa !2985
  br label %cond.end573, !dbg !5793

cond.end573:                                      ; preds = %cond.false572, %cond.true571
  %cond574 = phi i32 [ %341, %cond.true571 ], [ %342, %cond.false572 ], !dbg !5793
  %and575 = and i32 %cond574, 4095, !dbg !5798
  store i32 %and575, i32* %dst_mode_bits, align 4, !dbg !5799, !tbaa !2985
  %343 = load i32, i32* %dst_mode_bits, align 4, !dbg !5800, !tbaa !2985
  %344 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5801, !tbaa !2998
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %344, i32 0, i32 14, !dbg !5802, !ctir !253
  %345 = load i8, i8* %preserve_ownership, align 1, !dbg !5802, !tbaa !3429
  %tobool576 = trunc i8 %345 to i1, !dbg !5802, !ctir !120
  br i1 %tobool576, label %cond.true577, label %cond.false578, !dbg !5801

cond.true577:                                     ; preds = %cond.end573
  br label %cond.end582, !dbg !5801

cond.false578:                                    ; preds = %cond.end573
  %346 = load i32, i32* %src_mode, align 4, !dbg !5803, !tbaa !2985
  %and579 = and i32 %346, 61440, !dbg !5803
  %cmp580 = icmp eq i32 %and579, 16384, !dbg !5803
  %347 = zext i1 %cmp580 to i64, !dbg !5803
  %cond581 = select i1 %cmp580, i32 18, i32 0, !dbg !5803
  br label %cond.end582, !dbg !5801

cond.end582:                                      ; preds = %cond.false578, %cond.true577
  %cond583 = phi i32 [ 63, %cond.true577 ], [ %cond581, %cond.false578 ], !dbg !5801
  %and584 = and i32 %343, %cond583, !dbg !5804
  store i32 %and584, i32* %omitted_permissions, align 4, !dbg !5805, !tbaa !2985
  store i8 1, i8* %delayed_ok, align 1, !dbg !5806, !tbaa !3109
  %348 = load i8*, i8** %src_name.addr, align 8, !dbg !5807, !tbaa !2998
  %349 = load i8*, i8** %dst_name.addr, align 8, !dbg !5809, !tbaa !2998
  %350 = load i32, i32* %src_mode, align 4, !dbg !5810, !tbaa !2985
  %351 = load i8, i8* %new_dst.addr, align 1, !dbg !5811, !tbaa !3109
  %tobool585 = trunc i8 %351 to i1, !dbg !5811
  %352 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5812, !tbaa !2998
  %call586 = call zeroext i1 @set_process_security_ctx(i8* %348, i8* %349, i32 %350, i1 zeroext %tobool585, %struct.cp_options* %352), !dbg !5813
  br i1 %call586, label %if.end588, label %if.then587, !dbg !5814

if.then587:                                       ; preds = %cond.end582
  store i1 false, i1* %retval, align 1, !dbg !5815
  br label %return, !dbg !5815

if.end588:                                        ; preds = %cond.end582
  %353 = load i32, i32* %src_mode, align 4, !dbg !5816, !tbaa !2985
  %and589 = and i32 %353, 61440, !dbg !5816
  %cmp590 = icmp eq i32 %and589, 16384, !dbg !5816
  br i1 %cmp590, label %if.then591, label %if.else682, !dbg !5818

if.then591:                                       ; preds = %if.end588
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !5819, metadata !DIExpression()), !dbg !5821
  %354 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5822, !tbaa !2998
  %call592 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %354) #14, !dbg !5824
  br i1 %call592, label %if.then593, label %if.end596, !dbg !5825

if.then593:                                       ; preds = %if.then591
  %call594 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.121, i64 0, i64 0)) #10, !dbg !5826
  %355 = load i8*, i8** %src_name.addr, align 8, !dbg !5828, !tbaa !2998
  %call595 = call i8* @quotearg_style(i32 4, i8* %355), !dbg !5828
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call594, i8* %call595), !dbg !5829
  br label %un_backup, !dbg !5830

if.end596:                                        ; preds = %if.then591
  %356 = alloca i8, i64 24, align 16, !dbg !5831
  %357 = bitcast i8* %356 to %struct.dir_list*, !dbg !5831
  store %struct.dir_list* %357, %struct.dir_list** %dir, align 8, !dbg !5832, !tbaa !2998
  %358 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5833, !tbaa !2998
  %359 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5834, !tbaa !2998
  %parent597 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %359, i32 0, i32 0, !dbg !5835, !ctir !351
  store %struct.dir_list* %358, %struct.dir_list** %parent597, align 8, !dbg !5836, !tbaa !5837, !ctir !350
  %st_ino598 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5839, !ctir !317
  %360 = load i64, i64* %st_ino598, align 8, !dbg !5839, !tbaa !3873, !ctir !228
  %361 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5840, !tbaa !2998
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %361, i32 0, i32 1, !dbg !5841, !ctir !351
  store i64 %360, i64* %ino, align 8, !dbg !5842, !tbaa !5843, !ctir !227
  %st_dev599 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5844, !ctir !317
  %362 = load i64, i64* %st_dev599, align 8, !dbg !5844, !tbaa !3876, !ctir !231
  %363 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5845, !tbaa !2998
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %363, i32 0, i32 2, !dbg !5846, !ctir !351
  store i64 %362, i64* %dev, align 8, !dbg !5847, !tbaa !5848, !ctir !230
  %364 = load i8, i8* %new_dst.addr, align 1, !dbg !5849, !tbaa !3109
  %tobool600 = trunc i8 %364 to i1, !dbg !5849
  br i1 %tobool600, label %if.then605, label %lor.lhs.false601, !dbg !5851

lor.lhs.false601:                                 ; preds = %if.end596
  %st_mode602 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5852, !ctir !317
  %365 = load i32, i32* %st_mode602, align 8, !dbg !5852, !tbaa !3181, !ctir !133
  %and603 = and i32 %365, 61440, !dbg !5852
  %cmp604 = icmp eq i32 %and603, 16384, !dbg !5852
  br i1 %cmp604, label %if.else653, label %if.then605, !dbg !5853

if.then605:                                       ; preds = %lor.lhs.false601, %if.end596
  %366 = load i8*, i8** %dst_name.addr, align 8, !dbg !5854, !tbaa !2998
  %367 = load i32, i32* %dst_mode_bits, align 4, !dbg !5857, !tbaa !2985
  %368 = load i32, i32* %omitted_permissions, align 4, !dbg !5858, !tbaa !2985
  %neg = xor i32 %368, -1, !dbg !5859
  %and606 = and i32 %367, %neg, !dbg !5860
  %call607 = call i32 @mkdir(i8* %366, i32 %and606) #10, !dbg !5861
  %cmp608 = icmp ne i32 %call607, 0, !dbg !5862
  br i1 %cmp608, label %if.then609, label %if.end613, !dbg !5863

if.then609:                                       ; preds = %if.then605
  %call610 = call i32* @__errno_location() #15, !dbg !5864
  %369 = load i32, i32* %call610, align 4, !dbg !5864, !tbaa !2985, !ctir !7
  %call611 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.122, i64 0, i64 0)) #10, !dbg !5866
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5867, !tbaa !2998
  %call612 = call i8* @quotearg_style(i32 4, i8* %370), !dbg !5867
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %369, i8* %call611, i8* %call612), !dbg !5868
  br label %un_backup, !dbg !5869

if.end613:                                        ; preds = %if.then605
  %371 = load i8*, i8** %dst_name.addr, align 8, !dbg !5870, !tbaa !2998
  %call614 = call i32 @lstat(i8* %371, %struct.stat* %dst_sb) #10, !dbg !5872
  %cmp615 = icmp ne i32 %call614, 0, !dbg !5873
  br i1 %cmp615, label %if.then616, label %if.else620, !dbg !5874

if.then616:                                       ; preds = %if.end613
  %call617 = call i32* @__errno_location() #15, !dbg !5875
  %372 = load i32, i32* %call617, align 4, !dbg !5875, !tbaa !2985, !ctir !7
  %call618 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !5877
  %373 = load i8*, i8** %dst_name.addr, align 8, !dbg !5878, !tbaa !2998
  %call619 = call i8* @quotearg_style(i32 4, i8* %373), !dbg !5878
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %372, i8* %call618, i8* %call619), !dbg !5879
  br label %un_backup, !dbg !5880

if.else620:                                       ; preds = %if.end613
  %st_mode621 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5881, !ctir !317
  %374 = load i32, i32* %st_mode621, align 8, !dbg !5881, !tbaa !3181, !ctir !133
  %and622 = and i32 %374, 448, !dbg !5883
  %cmp623 = icmp ne i32 %and622, 448, !dbg !5884
  br i1 %cmp623, label %if.then624, label %if.end633, !dbg !5885

if.then624:                                       ; preds = %if.else620
  %st_mode625 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5886, !ctir !317
  %375 = load i32, i32* %st_mode625, align 8, !dbg !5886, !tbaa !3181, !ctir !133
  store i32 %375, i32* %dst_mode, align 4, !dbg !5888, !tbaa !2985
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5889, !tbaa !3109
  %376 = load i8*, i8** %dst_name.addr, align 8, !dbg !5890, !tbaa !2998
  %377 = load i32, i32* %dst_mode, align 4, !dbg !5892, !tbaa !2985
  %or = or i32 %377, 448, !dbg !5893
  %call626 = call i32 @chmod(i8* %376, i32 %or) #10, !dbg !5894
  %cmp627 = icmp ne i32 %call626, 0, !dbg !5895
  br i1 %cmp627, label %if.then628, label %if.end632, !dbg !5896

if.then628:                                       ; preds = %if.then624
  %call629 = call i32* @__errno_location() #15, !dbg !5897
  %378 = load i32, i32* %call629, align 4, !dbg !5897, !tbaa !2985, !ctir !7
  %call630 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.123, i64 0, i64 0)) #10, !dbg !5899
  %379 = load i8*, i8** %dst_name.addr, align 8, !dbg !5900, !tbaa !2998
  %call631 = call i8* @quotearg_style(i32 4, i8* %379), !dbg !5900
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %378, i8* %call630, i8* %call631), !dbg !5901
  br label %un_backup, !dbg !5902

if.end632:                                        ; preds = %if.then624
  br label %if.end633, !dbg !5903

if.end633:                                        ; preds = %if.end632, %if.else620
  br label %if.end634

if.end634:                                        ; preds = %if.end633
  %380 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5904, !tbaa !2998
  %381 = load i8, i8* %380, align 1, !dbg !5906, !tbaa !3109
  %tobool635 = trunc i8 %381 to i1, !dbg !5906, !ctir !120
  br i1 %tobool635, label %if.end640, label %if.then636, !dbg !5907

if.then636:                                       ; preds = %if.end634
  %382 = load i8*, i8** %dst_name.addr, align 8, !dbg !5908, !tbaa !2998
  %st_ino637 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5910, !ctir !317
  %383 = load i64, i64* %st_ino637, align 8, !dbg !5910, !tbaa !3873, !ctir !228
  %st_dev638 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5911, !ctir !317
  %384 = load i64, i64* %st_dev638, align 8, !dbg !5911, !tbaa !3876, !ctir !231
  %call639 = call i8* @remember_copied(i8* %382, i64 %383, i64 %384), !dbg !5912
  %385 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5913, !tbaa !2998
  store i8 1, i8* %385, align 1, !dbg !5914, !tbaa !3109, !ctir !120
  br label %if.end640, !dbg !5915

if.end640:                                        ; preds = %if.then636, %if.end634
  %386 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5916, !tbaa !2998
  %verbose641 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %386, i32 0, i32 31, !dbg !5918, !ctir !253
  %387 = load i8, i8* %verbose641, align 2, !dbg !5918, !tbaa !3198
  %tobool642 = trunc i8 %387 to i1, !dbg !5918, !ctir !120
  br i1 %tobool642, label %if.then643, label %if.end652, !dbg !5919

if.then643:                                       ; preds = %if.end640
  %388 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5920, !tbaa !2998
  %move_mode644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %388, i32 0, i32 9, !dbg !5923, !ctir !253
  %389 = load i8, i8* %move_mode644, align 8, !dbg !5923, !tbaa !3417
  %tobool645 = trunc i8 %389 to i1, !dbg !5923, !ctir !120
  br i1 %tobool645, label %if.then646, label %if.else650, !dbg !5924

if.then646:                                       ; preds = %if.then643
  %call647 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.124, i64 0, i64 0)) #10, !dbg !5925
  %390 = load i8*, i8** %dst_name.addr, align 8, !dbg !5926, !tbaa !2998
  %call648 = call i8* @quotearg_style(i32 4, i8* %390), !dbg !5926
  %call649 = call i32 (i8*, ...) @printf(i8* %call647, i8* %call648), !dbg !5927
  br label %if.end651, !dbg !5927

if.else650:                                       ; preds = %if.then643
  %391 = load i8*, i8** %src_name.addr, align 8, !dbg !5928, !tbaa !2998
  %392 = load i8*, i8** %dst_name.addr, align 8, !dbg !5929, !tbaa !2998
  call void @emit_verbose(i8* %391, i8* %392, i8* null), !dbg !5930
  br label %if.end651

if.end651:                                        ; preds = %if.else650, %if.then646
  br label %if.end652, !dbg !5931

if.end652:                                        ; preds = %if.end651, %if.end640
  br label %if.end668, !dbg !5932

if.else653:                                       ; preds = %lor.lhs.false601
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5933, !tbaa !2985
  %393 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5935, !tbaa !2998
  %set_security_context654 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %393, i32 0, i32 18, !dbg !5937, !ctir !253
  %394 = load i8, i8* %set_security_context654, align 1, !dbg !5937, !tbaa !3213
  %tobool655 = trunc i8 %394 to i1, !dbg !5937, !ctir !120
  br i1 %tobool655, label %if.then658, label %lor.lhs.false656, !dbg !5938

lor.lhs.false656:                                 ; preds = %if.else653
  %395 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5939, !tbaa !2998
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %395, i32 0, i32 22, !dbg !5940, !ctir !253
  %396 = load i8, i8* %preserve_security_context, align 1, !dbg !5940, !tbaa !3210
  %tobool657 = trunc i8 %396 to i1, !dbg !5940, !ctir !120
  br i1 %tobool657, label %if.then658, label %if.end667, !dbg !5941

if.then658:                                       ; preds = %lor.lhs.false656, %if.else653
  %397 = load i8*, i8** %dst_name.addr, align 8, !dbg !5942, !tbaa !2998
  %398 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5944, !tbaa !2998
  %preserve_security_context659 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %398, i32 0, i32 22, !dbg !5945, !ctir !253
  %399 = load i8, i8* %preserve_security_context659, align 1, !dbg !5945, !tbaa !3210
  %tobool660 = trunc i8 %399 to i1, !dbg !5945, !ctir !120
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5946, !tbaa !2998
  %call661 = call zeroext i1 @set_file_security_ctx(i8* %397, i1 zeroext %tobool660, i1 zeroext false, %struct.cp_options* %400), !dbg !5947
  br i1 %call661, label %if.end666, label %if.then662, !dbg !5948

if.then662:                                       ; preds = %if.then658
  %401 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5949, !tbaa !2998
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %401, i32 0, i32 23, !dbg !5952, !ctir !253
  %402 = load i8, i8* %require_preserve_context, align 2, !dbg !5952, !tbaa !3468
  %tobool663 = trunc i8 %402 to i1, !dbg !5952, !ctir !120
  br i1 %tobool663, label %if.then664, label %if.end665, !dbg !5953

if.then664:                                       ; preds = %if.then662
  br label %un_backup, !dbg !5954

if.end665:                                        ; preds = %if.then662
  br label %if.end666, !dbg !5955

if.end666:                                        ; preds = %if.end665, %if.then658
  br label %if.end667, !dbg !5956

if.end667:                                        ; preds = %if.end666, %lor.lhs.false656
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.end652
  %403 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5957, !tbaa !2998
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %403, i32 0, i32 13, !dbg !5959, !ctir !253
  %404 = load i8, i8* %one_file_system, align 4, !dbg !5959, !tbaa !3425
  %tobool669 = trunc i8 %404 to i1, !dbg !5959, !ctir !120
  br i1 %tobool669, label %land.lhs.true670, label %if.else677, !dbg !5960

land.lhs.true670:                                 ; preds = %if.end668
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5961, !tbaa !2998
  %tobool671 = icmp ne %struct.stat* %405, null, !dbg !5961
  br i1 %tobool671, label %land.lhs.true672, label %if.else677, !dbg !5962

land.lhs.true672:                                 ; preds = %land.lhs.true670
  %406 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5963, !tbaa !2998
  %st_dev673 = getelementptr inbounds %struct.stat, %struct.stat* %406, i32 0, i32 0, !dbg !5964, !ctir !316
  %407 = load i64, i64* %st_dev673, align 8, !dbg !5964, !tbaa !3876, !ctir !231
  %st_dev674 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5965, !ctir !317
  %408 = load i64, i64* %st_dev674, align 8, !dbg !5965, !tbaa !3876, !ctir !231
  %cmp675 = icmp ne i64 %407, %408, !dbg !5966
  br i1 %cmp675, label %if.then676, label %if.else677, !dbg !5967

if.then676:                                       ; preds = %land.lhs.true672
  br label %if.end681, !dbg !5968

if.else677:                                       ; preds = %land.lhs.true672, %land.lhs.true670, %if.end668
  %409 = load i8*, i8** %src_name.addr, align 8, !dbg !5970, !tbaa !2998
  %410 = load i8*, i8** %dst_name.addr, align 8, !dbg !5972, !tbaa !2998
  %411 = load i8, i8* %new_dst.addr, align 1, !dbg !5973, !tbaa !3109
  %tobool678 = trunc i8 %411 to i1, !dbg !5973
  %412 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5974, !tbaa !2998
  %413 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5975, !tbaa !2998
  %414 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5976, !tbaa !2998
  %415 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5977, !tbaa !2998
  %call679 = call zeroext i1 @copy_dir(i8* %409, i8* %410, i1 zeroext %tobool678, %struct.stat* %src_sb, %struct.dir_list* %412, %struct.cp_options* %413, i8* %414, i8* %415), !dbg !5978
  %frombool680 = zext i1 %call679 to i8, !dbg !5979
  store i8 %frombool680, i8* %delayed_ok, align 1, !dbg !5979, !tbaa !3109
  br label %if.end681

if.end681:                                        ; preds = %if.else677, %if.then676
  br label %if.end894, !dbg !5980

if.else682:                                       ; preds = %if.end588
  %416 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5981, !tbaa !2998
  %symbolic_link683 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %416, i32 0, i32 29, !dbg !5983, !ctir !253
  %417 = load i8, i8* %symbolic_link683, align 4, !dbg !5983, !tbaa !3488
  %tobool684 = trunc i8 %417 to i1, !dbg !5983, !ctir !120
  br i1 %tobool684, label %if.then685, label %if.else730, !dbg !5984

if.then685:                                       ; preds = %if.else682
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5985, !tbaa !3109
  %418 = load i8*, i8** %src_name.addr, align 8, !dbg !5987, !tbaa !2998
  %419 = load i8, i8* %418, align 1, !dbg !5989, !tbaa !3660, !ctir !116
  %conv = sext i8 %419 to i32, !dbg !5989
  %cmp686 = icmp ne i32 %conv, 47, !dbg !5990
  br i1 %cmp686, label %if.then688, label %if.end719, !dbg !5991

if.then688:                                       ; preds = %if.then685
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5992, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5995, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5997, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5999, metadata !DIExpression()), !dbg !6000
  %420 = load i8*, i8** %dst_name.addr, align 8, !dbg !6001, !tbaa !2998
  %call689 = call i8* @dir_name(i8* %420), !dbg !6002
  store i8* %call689, i8** %dst_parent, align 8, !dbg !6003, !tbaa !2998
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !6004, !tbaa !2998
  %call690 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), i8* %421) #14, !dbg !6004
  %cmp691 = icmp eq i32 %call690, 0, !dbg !6004
  br i1 %cmp691, label %lor.end712, label %lor.lhs.false693, !dbg !6005

lor.lhs.false693:                                 ; preds = %if.then688
  %call694 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), %struct.stat* %dot_sb) #10, !dbg !6006
  %cmp695 = icmp ne i32 %call694, 0, !dbg !6007
  br i1 %cmp695, label %lor.end712, label %lor.lhs.false697, !dbg !6008

lor.lhs.false697:                                 ; preds = %lor.lhs.false693
  %422 = load i8*, i8** %dst_parent, align 8, !dbg !6009, !tbaa !2998
  %call698 = call i32 @stat(i8* %422, %struct.stat* %dst_parent_sb) #10, !dbg !6010
  %cmp699 = icmp ne i32 %call698, 0, !dbg !6011
  br i1 %cmp699, label %lor.end712, label %lor.rhs701, !dbg !6012

lor.rhs701:                                       ; preds = %lor.lhs.false697
  %st_ino702 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !6013, !ctir !317
  %423 = load i64, i64* %st_ino702, align 8, !dbg !6013, !tbaa !3873, !ctir !228
  %st_ino703 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !6013, !ctir !317
  %424 = load i64, i64* %st_ino703, align 8, !dbg !6013, !tbaa !3873, !ctir !228
  %cmp704 = icmp eq i64 %423, %424, !dbg !6013
  br i1 %cmp704, label %land.rhs706, label %land.end711, !dbg !6013

land.rhs706:                                      ; preds = %lor.rhs701
  %st_dev707 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !6013, !ctir !317
  %425 = load i64, i64* %st_dev707, align 8, !dbg !6013, !tbaa !3876, !ctir !231
  %st_dev708 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !6013, !ctir !317
  %426 = load i64, i64* %st_dev708, align 8, !dbg !6013, !tbaa !3876, !ctir !231
  %cmp709 = icmp eq i64 %425, %426, !dbg !6013
  br label %land.end711

land.end711:                                      ; preds = %land.rhs706, %lor.rhs701
  %427 = phi i1 [ false, %lor.rhs701 ], [ %cmp709, %land.rhs706 ], !dbg !6014
  br label %lor.end712, !dbg !6012

lor.end712:                                       ; preds = %land.end711, %lor.lhs.false697, %lor.lhs.false693, %if.then688
  %428 = phi i1 [ true, %lor.lhs.false697 ], [ true, %lor.lhs.false693 ], [ true, %if.then688 ], [ %427, %land.end711 ]
  %frombool713 = zext i1 %428 to i8, !dbg !6015
  store i8 %frombool713, i8* %in_current_dir, align 1, !dbg !6015, !tbaa !3109
  %429 = load i8*, i8** %dst_parent, align 8, !dbg !6016, !tbaa !2998
  call void @free(i8* %429) #10, !dbg !6017
  %430 = load i8, i8* %in_current_dir, align 1, !dbg !6018, !tbaa !3109
  %tobool714 = trunc i8 %430 to i1, !dbg !6018
  br i1 %tobool714, label %if.end718, label %if.then715, !dbg !6020

if.then715:                                       ; preds = %lor.end712
  %call716 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.126, i64 0, i64 0)) #10, !dbg !6021
  %431 = load i8*, i8** %dst_name.addr, align 8, !dbg !6023, !tbaa !2998
  %call717 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %431), !dbg !6023
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call716, i8* %call717), !dbg !6024
  br label %un_backup, !dbg !6025

if.end718:                                        ; preds = %lor.end712
  br label %if.end719, !dbg !6026

if.end719:                                        ; preds = %if.end718, %if.then685
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6027, metadata !DIExpression()), !dbg !6028
  %432 = load i8*, i8** %src_name.addr, align 8, !dbg !6029, !tbaa !2998
  %433 = load i8*, i8** %dst_name.addr, align 8, !dbg !6030, !tbaa !2998
  %434 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6031, !tbaa !2998
  %unlink_dest_after_failed_open720 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %434, i32 0, i32 7, !dbg !6032, !ctir !253
  %435 = load i8, i8* %unlink_dest_after_failed_open720, align 2, !dbg !6032, !tbaa !3406
  %tobool721 = trunc i8 %435 to i1, !dbg !6032, !ctir !120
  %call722 = call i32 @force_symlinkat(i8* %432, i32 -100, i8* %433, i1 zeroext %tobool721, i32 -1), !dbg !6033
  store i32 %call722, i32* %err, align 4, !dbg !6028, !tbaa !2985
  %436 = load i32, i32* %err, align 4, !dbg !6034, !tbaa !2985
  %cmp723 = icmp slt i32 0, %436, !dbg !6036
  br i1 %cmp723, label %if.then725, label %if.end729, !dbg !6037

if.then725:                                       ; preds = %if.end719
  %437 = load i32, i32* %err, align 4, !dbg !6038, !tbaa !2985
  %call726 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.127, i64 0, i64 0)) #10, !dbg !6040
  %438 = load i8*, i8** %dst_name.addr, align 8, !dbg !6041, !tbaa !2998
  %call727 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %438), !dbg !6041
  %439 = load i8*, i8** %src_name.addr, align 8, !dbg !6042, !tbaa !2998
  %call728 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %439), !dbg !6042
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %437, i8* %call726, i8* %call727, i8* %call728), !dbg !6043
  br label %un_backup, !dbg !6044

if.end729:                                        ; preds = %if.end719
  br label %if.end893, !dbg !6045

if.else730:                                       ; preds = %if.else682
  %440 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6046, !tbaa !2998
  %hard_link731 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %440, i32 0, i32 8, !dbg !6048, !ctir !253
  %441 = load i8, i8* %hard_link731, align 1, !dbg !6048, !tbaa !3410
  %tobool732 = trunc i8 %441 to i1, !dbg !6048, !ctir !120
  br i1 %tobool732, label %if.then734, label %if.else749, !dbg !6049

if.then734:                                       ; preds = %if.else730
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !6050, metadata !DIExpression()), !dbg !6052
  %442 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6053, !tbaa !2998
  %unlink_dest_after_failed_open735 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %442, i32 0, i32 7, !dbg !6054, !ctir !253
  %443 = load i8, i8* %unlink_dest_after_failed_open735, align 2, !dbg !6054, !tbaa !3406
  %tobool736 = trunc i8 %443 to i1, !dbg !6054, !ctir !120
  br i1 %tobool736, label %lor.end742, label %lor.rhs738, !dbg !6055

lor.rhs738:                                       ; preds = %if.then734
  %444 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6056, !tbaa !2998
  %interactive739 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %444, i32 0, i32 2, !dbg !6057, !ctir !253
  %445 = load i32, i32* %interactive739, align 8, !dbg !6057, !tbaa !3155, !ctir !83
  %cmp740 = icmp eq i32 %445, 3, !dbg !6058
  br label %lor.end742, !dbg !6055

lor.end742:                                       ; preds = %lor.rhs738, %if.then734
  %446 = phi i1 [ true, %if.then734 ], [ %cmp740, %lor.rhs738 ]
  %frombool743 = zext i1 %446 to i8, !dbg !6052
  store i8 %frombool743, i8* %replace, align 1, !dbg !6052, !tbaa !3109
  %447 = load i8*, i8** %src_name.addr, align 8, !dbg !6059, !tbaa !2998
  %448 = load i8*, i8** %dst_name.addr, align 8, !dbg !6061, !tbaa !2998
  %449 = load i8, i8* %replace, align 1, !dbg !6062, !tbaa !3109
  %tobool744 = trunc i8 %449 to i1, !dbg !6062
  %450 = load i8, i8* %dereference65, align 1, !dbg !6063, !tbaa !3109
  %tobool745 = trunc i8 %450 to i1, !dbg !6063
  %call746 = call zeroext i1 @create_hard_link(i8* %447, i8* %448, i1 zeroext %tobool744, i1 zeroext false, i1 zeroext %tobool745), !dbg !6064
  br i1 %call746, label %if.end748, label %if.then747, !dbg !6065

if.then747:                                       ; preds = %lor.end742
  br label %un_backup, !dbg !6066

if.end748:                                        ; preds = %lor.end742
  br label %if.end892, !dbg !6067

if.else749:                                       ; preds = %if.else730
  %451 = load i32, i32* %src_mode, align 4, !dbg !6068, !tbaa !2985
  %and750 = and i32 %451, 61440, !dbg !6068
  %cmp751 = icmp eq i32 %and750, 32768, !dbg !6068
  br i1 %cmp751, label %if.then761, label %lor.lhs.false753, !dbg !6070

lor.lhs.false753:                                 ; preds = %if.else749
  %452 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6071, !tbaa !2998
  %copy_as_regular754 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %452, i32 0, i32 5, !dbg !6072, !ctir !253
  %453 = load i8, i8* %copy_as_regular754, align 4, !dbg !6072, !tbaa !3390
  %tobool755 = trunc i8 %453 to i1, !dbg !6072, !ctir !120
  br i1 %tobool755, label %land.lhs.true757, label %if.else766, !dbg !6073

land.lhs.true757:                                 ; preds = %lor.lhs.false753
  %454 = load i32, i32* %src_mode, align 4, !dbg !6074, !tbaa !2985
  %and758 = and i32 %454, 61440, !dbg !6074
  %cmp759 = icmp eq i32 %and758, 40960, !dbg !6074
  br i1 %cmp759, label %if.else766, label %if.then761, !dbg !6075

if.then761:                                       ; preds = %land.lhs.true757, %if.else749
  store i8 1, i8* %copied_as_regular, align 1, !dbg !6076, !tbaa !3109
  %455 = load i8*, i8** %src_name.addr, align 8, !dbg !6078, !tbaa !2998
  %456 = load i8*, i8** %dst_name.addr, align 8, !dbg !6080, !tbaa !2998
  %457 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6081, !tbaa !2998
  %458 = load i32, i32* %dst_mode_bits, align 4, !dbg !6082, !tbaa !2985
  %and762 = and i32 %458, 511, !dbg !6083
  %459 = load i32, i32* %omitted_permissions, align 4, !dbg !6084, !tbaa !2985
  %call763 = call zeroext i1 @copy_reg(i8* %455, i8* %456, %struct.cp_options* %457, i32 %and762, i32 %459, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !6085
  br i1 %call763, label %if.end765, label %if.then764, !dbg !6086

if.then764:                                       ; preds = %if.then761
  br label %un_backup, !dbg !6087

if.end765:                                        ; preds = %if.then761
  br label %if.end891, !dbg !6088

if.else766:                                       ; preds = %land.lhs.true757, %lor.lhs.false753
  %460 = load i32, i32* %src_mode, align 4, !dbg !6089, !tbaa !2985
  %and767 = and i32 %460, 61440, !dbg !6089
  %cmp768 = icmp eq i32 %and767, 4096, !dbg !6089
  br i1 %cmp768, label %if.then770, label %if.else789, !dbg !6091

if.then770:                                       ; preds = %if.else766
  %461 = load i8*, i8** %dst_name.addr, align 8, !dbg !6092, !tbaa !2998
  %462 = load i32, i32* %src_mode, align 4, !dbg !6095, !tbaa !2985
  %463 = load i32, i32* %omitted_permissions, align 4, !dbg !6096, !tbaa !2985
  %neg771 = xor i32 %463, -1, !dbg !6097
  %and772 = and i32 %462, %neg771, !dbg !6098
  %call773 = call i32 @mknod(i8* %461, i32 %and772, i64 0) #10, !dbg !6099
  %cmp774 = icmp ne i32 %call773, 0, !dbg !6100
  br i1 %cmp774, label %if.then776, label %if.end788, !dbg !6101

if.then776:                                       ; preds = %if.then770
  %464 = load i8*, i8** %dst_name.addr, align 8, !dbg !6102, !tbaa !2998
  %465 = load i32, i32* %src_mode, align 4, !dbg !6104, !tbaa !2985
  %and777 = and i32 %465, -4097, !dbg !6105
  %466 = load i32, i32* %omitted_permissions, align 4, !dbg !6106, !tbaa !2985
  %neg778 = xor i32 %466, -1, !dbg !6107
  %and779 = and i32 %and777, %neg778, !dbg !6108
  %call780 = call i32 @mkfifo(i8* %464, i32 %and779) #10, !dbg !6109
  %cmp781 = icmp ne i32 %call780, 0, !dbg !6110
  br i1 %cmp781, label %if.then783, label %if.end787, !dbg !6111

if.then783:                                       ; preds = %if.then776
  %call784 = call i32* @__errno_location() #15, !dbg !6112
  %467 = load i32, i32* %call784, align 4, !dbg !6112, !tbaa !2985, !ctir !7
  %call785 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.128, i64 0, i64 0)) #10, !dbg !6114
  %468 = load i8*, i8** %dst_name.addr, align 8, !dbg !6115, !tbaa !2998
  %call786 = call i8* @quotearg_style(i32 4, i8* %468), !dbg !6115
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %467, i8* %call785, i8* %call786), !dbg !6116
  br label %un_backup, !dbg !6117

if.end787:                                        ; preds = %if.then776
  br label %if.end788, !dbg !6118

if.end788:                                        ; preds = %if.end787, %if.then770
  br label %if.end890, !dbg !6119

if.else789:                                       ; preds = %if.else766
  %469 = load i32, i32* %src_mode, align 4, !dbg !6120, !tbaa !2985
  %and790 = and i32 %469, 61440, !dbg !6120
  %cmp791 = icmp eq i32 %and790, 24576, !dbg !6120
  br i1 %cmp791, label %if.then801, label %lor.lhs.false793, !dbg !6122

lor.lhs.false793:                                 ; preds = %if.else789
  %470 = load i32, i32* %src_mode, align 4, !dbg !6123, !tbaa !2985
  %and794 = and i32 %470, 61440, !dbg !6123
  %cmp795 = icmp eq i32 %and794, 8192, !dbg !6123
  br i1 %cmp795, label %if.then801, label %lor.lhs.false797, !dbg !6124

lor.lhs.false797:                                 ; preds = %lor.lhs.false793
  %471 = load i32, i32* %src_mode, align 4, !dbg !6125, !tbaa !2985
  %and798 = and i32 %471, 61440, !dbg !6125
  %cmp799 = icmp eq i32 %and798, 49152, !dbg !6125
  br i1 %cmp799, label %if.then801, label %if.else812, !dbg !6126

if.then801:                                       ; preds = %lor.lhs.false797, %lor.lhs.false793, %if.else789
  %472 = load i8*, i8** %dst_name.addr, align 8, !dbg !6127, !tbaa !2998
  %473 = load i32, i32* %src_mode, align 4, !dbg !6130, !tbaa !2985
  %474 = load i32, i32* %omitted_permissions, align 4, !dbg !6131, !tbaa !2985
  %neg802 = xor i32 %474, -1, !dbg !6132
  %and803 = and i32 %473, %neg802, !dbg !6133
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !6134, !ctir !317
  %475 = load i64, i64* %st_rdev, align 8, !dbg !6134, !tbaa !6135, !ctir !231
  %call804 = call i32 @mknod(i8* %472, i32 %and803, i64 %475) #10, !dbg !6136
  %cmp805 = icmp ne i32 %call804, 0, !dbg !6137
  br i1 %cmp805, label %if.then807, label %if.end811, !dbg !6138

if.then807:                                       ; preds = %if.then801
  %call808 = call i32* @__errno_location() #15, !dbg !6139
  %476 = load i32, i32* %call808, align 4, !dbg !6139, !tbaa !2985, !ctir !7
  %call809 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.129, i64 0, i64 0)) #10, !dbg !6141
  %477 = load i8*, i8** %dst_name.addr, align 8, !dbg !6142, !tbaa !2998
  %call810 = call i8* @quotearg_style(i32 4, i8* %477), !dbg !6142
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %476, i8* %call809, i8* %call810), !dbg !6143
  br label %un_backup, !dbg !6144

if.end811:                                        ; preds = %if.then801
  br label %if.end889, !dbg !6145

if.else812:                                       ; preds = %lor.lhs.false797
  %478 = load i32, i32* %src_mode, align 4, !dbg !6146, !tbaa !2985
  %and813 = and i32 %478, 61440, !dbg !6146
  %cmp814 = icmp eq i32 %and813, 40960, !dbg !6146
  br i1 %cmp814, label %if.then816, label %if.else885, !dbg !6148

if.then816:                                       ; preds = %if.else812
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !6149, metadata !DIExpression()), !dbg !6151
  %479 = load i8*, i8** %src_name.addr, align 8, !dbg !6152, !tbaa !2998
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !6153, !ctir !317
  %480 = load i64, i64* %st_size, align 8, !dbg !6153, !tbaa !4519, !ctir !29
  %call817 = call i8* @areadlink_with_size(i8* %479, i64 %480), !dbg !6154
  store i8* %call817, i8** %src_link_val, align 8, !dbg !6151, !tbaa !2998
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !6155, !tbaa !3109
  %481 = load i8*, i8** %src_link_val, align 8, !dbg !6156, !tbaa !2998
  %cmp818 = icmp eq i8* %481, null, !dbg !6158
  br i1 %cmp818, label %if.then820, label %if.end824, !dbg !6159

if.then820:                                       ; preds = %if.then816
  %call821 = call i32* @__errno_location() #15, !dbg !6160
  %482 = load i32, i32* %call821, align 4, !dbg !6160, !tbaa !2985, !ctir !7
  %call822 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.130, i64 0, i64 0)) #10, !dbg !6162
  %483 = load i8*, i8** %src_name.addr, align 8, !dbg !6163, !tbaa !2998
  %call823 = call i8* @quotearg_style(i32 4, i8* %483), !dbg !6163
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %482, i8* %call822, i8* %call823), !dbg !6164
  br label %un_backup, !dbg !6165

if.end824:                                        ; preds = %if.then816
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !6166, metadata !DIExpression()), !dbg !6167
  %484 = load i8*, i8** %src_link_val, align 8, !dbg !6168, !tbaa !2998
  %485 = load i8*, i8** %dst_name.addr, align 8, !dbg !6169, !tbaa !2998
  %486 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6170, !tbaa !2998
  %unlink_dest_after_failed_open825 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %486, i32 0, i32 7, !dbg !6171, !ctir !253
  %487 = load i8, i8* %unlink_dest_after_failed_open825, align 2, !dbg !6171, !tbaa !3406
  %tobool826 = trunc i8 %487 to i1, !dbg !6171, !ctir !120
  %call827 = call i32 @force_symlinkat(i8* %484, i32 -100, i8* %485, i1 zeroext %tobool826, i32 -1), !dbg !6172
  store i32 %call827, i32* %symlink_err, align 4, !dbg !6167, !tbaa !2985
  %488 = load i32, i32* %symlink_err, align 4, !dbg !6173, !tbaa !2985
  %cmp828 = icmp slt i32 0, %488, !dbg !6175
  br i1 %cmp828, label %land.lhs.true830, label %if.end857, !dbg !6176

land.lhs.true830:                                 ; preds = %if.end824
  %489 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6177, !tbaa !2998
  %update831 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %489, i32 0, i32 30, !dbg !6178, !ctir !253
  %490 = load i8, i8* %update831, align 1, !dbg !6178, !tbaa !3194
  %tobool832 = trunc i8 %490 to i1, !dbg !6178, !ctir !120
  br i1 %tobool832, label %land.lhs.true834, label %if.end857, !dbg !6179

land.lhs.true834:                                 ; preds = %land.lhs.true830
  %491 = load i8, i8* %new_dst.addr, align 1, !dbg !6180, !tbaa !3109
  %tobool835 = trunc i8 %491 to i1, !dbg !6180
  br i1 %tobool835, label %if.end857, label %land.lhs.true836, !dbg !6181

land.lhs.true836:                                 ; preds = %land.lhs.true834
  %st_mode837 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6182, !ctir !317
  %492 = load i32, i32* %st_mode837, align 8, !dbg !6182, !tbaa !3181, !ctir !133
  %and838 = and i32 %492, 61440, !dbg !6182
  %cmp839 = icmp eq i32 %and838, 40960, !dbg !6182
  br i1 %cmp839, label %land.lhs.true841, label %if.end857, !dbg !6183

land.lhs.true841:                                 ; preds = %land.lhs.true836
  %st_size842 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !6184, !ctir !317
  %493 = load i64, i64* %st_size842, align 8, !dbg !6184, !tbaa !4519, !ctir !29
  %494 = load i8*, i8** %src_link_val, align 8, !dbg !6185, !tbaa !2998
  %call843 = call i64 @strlen(i8* %494) #14, !dbg !6186
  %cmp844 = icmp eq i64 %493, %call843, !dbg !6187
  br i1 %cmp844, label %if.then846, label %if.end857, !dbg !6188

if.then846:                                       ; preds = %land.lhs.true841
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !6189, metadata !DIExpression()), !dbg !6191
  %495 = load i8*, i8** %dst_name.addr, align 8, !dbg !6192, !tbaa !2998
  %st_size847 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !6193, !ctir !317
  %496 = load i64, i64* %st_size847, align 8, !dbg !6193, !tbaa !4519, !ctir !29
  %call848 = call i8* @areadlink_with_size(i8* %495, i64 %496), !dbg !6194
  store i8* %call848, i8** %dest_link_val, align 8, !dbg !6191, !tbaa !2998
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !6195, !tbaa !2998
  %tobool849 = icmp ne i8* %497, null, !dbg !6195
  br i1 %tobool849, label %if.then850, label %if.end856, !dbg !6197

if.then850:                                       ; preds = %if.then846
  %498 = load i8*, i8** %dest_link_val, align 8, !dbg !6198, !tbaa !2998
  %499 = load i8*, i8** %src_link_val, align 8, !dbg !6198, !tbaa !2998
  %call851 = call i32 @strcmp(i8* %498, i8* %499) #14, !dbg !6198
  %cmp852 = icmp eq i32 %call851, 0, !dbg !6198
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !6201

if.then854:                                       ; preds = %if.then850
  store i32 0, i32* %symlink_err, align 4, !dbg !6202, !tbaa !2985
  br label %if.end855, !dbg !6203

if.end855:                                        ; preds = %if.then854, %if.then850
  %500 = load i8*, i8** %dest_link_val, align 8, !dbg !6204, !tbaa !2998
  call void @free(i8* %500) #10, !dbg !6205
  br label %if.end856, !dbg !6206

if.end856:                                        ; preds = %if.end855, %if.then846
  br label %if.end857, !dbg !6207

if.end857:                                        ; preds = %if.end856, %land.lhs.true841, %land.lhs.true836, %land.lhs.true834, %land.lhs.true830, %if.end824
  %501 = load i8*, i8** %src_link_val, align 8, !dbg !6208, !tbaa !2998
  call void @free(i8* %501) #10, !dbg !6209
  %502 = load i32, i32* %symlink_err, align 4, !dbg !6210, !tbaa !2985
  %cmp858 = icmp slt i32 0, %502, !dbg !6212
  br i1 %cmp858, label %if.then860, label %if.end863, !dbg !6213

if.then860:                                       ; preds = %if.end857
  %503 = load i32, i32* %symlink_err, align 4, !dbg !6214, !tbaa !2985
  %call861 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.131, i64 0, i64 0)) #10, !dbg !6216
  %504 = load i8*, i8** %dst_name.addr, align 8, !dbg !6217, !tbaa !2998
  %call862 = call i8* @quotearg_style(i32 4, i8* %504), !dbg !6217
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %503, i8* %call861, i8* %call862), !dbg !6218
  br label %un_backup, !dbg !6219

if.end863:                                        ; preds = %if.end857
  %505 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6220, !tbaa !2998
  %preserve_security_context864 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %505, i32 0, i32 22, !dbg !6222, !ctir !253
  %506 = load i8, i8* %preserve_security_context864, align 1, !dbg !6222, !tbaa !3210
  %tobool865 = trunc i8 %506 to i1, !dbg !6222, !ctir !120
  br i1 %tobool865, label %if.then866, label %if.end867, !dbg !6223

if.then866:                                       ; preds = %if.end863
  call void @restore_default_fscreatecon_or_die(), !dbg !6224
  br label %if.end867, !dbg !6224

if.end867:                                        ; preds = %if.then866, %if.end863
  %507 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6225, !tbaa !2998
  %preserve_ownership868 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %507, i32 0, i32 14, !dbg !6227, !ctir !253
  %508 = load i8, i8* %preserve_ownership868, align 1, !dbg !6227, !tbaa !3429
  %tobool869 = trunc i8 %508 to i1, !dbg !6227, !ctir !120
  br i1 %tobool869, label %if.then870, label %if.end884, !dbg !6228

if.then870:                                       ; preds = %if.end867
  %509 = load i8*, i8** %dst_name.addr, align 8, !dbg !6229, !tbaa !2998
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !6232, !ctir !317
  %510 = load i32, i32* %st_uid, align 4, !dbg !6232, !tbaa !6233, !ctir !326
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !6234, !ctir !317
  %511 = load i32, i32* %st_gid, align 8, !dbg !6234, !tbaa !6235, !ctir !328
  %call871 = call i32 @lchown(i8* %509, i32 %510, i32 %511) #10, !dbg !6236
  %cmp872 = icmp ne i32 %call871, 0, !dbg !6237
  br i1 %cmp872, label %land.lhs.true874, label %if.else882, !dbg !6238

land.lhs.true874:                                 ; preds = %if.then870
  %512 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6239, !tbaa !2998
  %call875 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %512) #14, !dbg !6240
  br i1 %call875, label %if.else882, label %if.then876, !dbg !6241

if.then876:                                       ; preds = %land.lhs.true874
  %call877 = call i32* @__errno_location() #15, !dbg !6242
  %513 = load i32, i32* %call877, align 4, !dbg !6242, !tbaa !2985, !ctir !7
  %call878 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #10, !dbg !6244
  %514 = load i8*, i8** %dst_name.addr, align 8, !dbg !6245, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %513, i8* %call878, i8* %514), !dbg !6246
  %515 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6247, !tbaa !2998
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %515, i32 0, i32 21, !dbg !6249, !ctir !253
  %516 = load i8, i8* %require_preserve, align 4, !dbg !6249, !tbaa !3464
  %tobool879 = trunc i8 %516 to i1, !dbg !6249, !ctir !120
  br i1 %tobool879, label %if.then880, label %if.end881, !dbg !6250

if.then880:                                       ; preds = %if.then876
  br label %un_backup, !dbg !6251

if.end881:                                        ; preds = %if.then876
  br label %if.end883, !dbg !6252

if.else882:                                       ; preds = %land.lhs.true874, %if.then870
  br label %if.end883

if.end883:                                        ; preds = %if.else882, %if.end881
  br label %if.end884, !dbg !6253

if.end884:                                        ; preds = %if.end883, %if.end867
  br label %if.end888, !dbg !6254

if.else885:                                       ; preds = %if.else812
  %call886 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.133, i64 0, i64 0)) #10, !dbg !6255
  %517 = load i8*, i8** %src_name.addr, align 8, !dbg !6257, !tbaa !2998
  %call887 = call i8* @quotearg_style(i32 4, i8* %517), !dbg !6257
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call886, i8* %call887), !dbg !6258
  br label %un_backup, !dbg !6259

if.end888:                                        ; preds = %if.end884
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.end811
  br label %if.end890

if.end890:                                        ; preds = %if.end889, %if.end788
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %if.end765
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end748
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end729
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end681
  %518 = load i8, i8* %new_dst.addr, align 1, !dbg !6260, !tbaa !3109
  %tobool895 = trunc i8 %518 to i1, !dbg !6260
  br i1 %tobool895, label %if.end921, label %land.lhs.true896, !dbg !6262

land.lhs.true896:                                 ; preds = %if.end894
  %519 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6263, !tbaa !2998
  %copy_as_regular897 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %519, i32 0, i32 5, !dbg !6264, !ctir !253
  %520 = load i8, i8* %copy_as_regular897, align 4, !dbg !6264, !tbaa !3390
  %tobool898 = trunc i8 %520 to i1, !dbg !6264, !ctir !120
  br i1 %tobool898, label %if.end921, label %land.lhs.true899, !dbg !6265

land.lhs.true899:                                 ; preds = %land.lhs.true896
  %521 = load i32, i32* %src_mode, align 4, !dbg !6266, !tbaa !2985
  %and900 = and i32 %521, 61440, !dbg !6266
  %cmp901 = icmp eq i32 %and900, 16384, !dbg !6266
  br i1 %cmp901, label %if.end921, label %land.lhs.true903, !dbg !6267

land.lhs.true903:                                 ; preds = %land.lhs.true899
  %522 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6268, !tbaa !2998
  %set_security_context904 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %522, i32 0, i32 18, !dbg !6269, !ctir !253
  %523 = load i8, i8* %set_security_context904, align 1, !dbg !6269, !tbaa !3213
  %tobool905 = trunc i8 %523 to i1, !dbg !6269, !ctir !120
  br i1 %tobool905, label %if.then911, label %lor.lhs.false907, !dbg !6270

lor.lhs.false907:                                 ; preds = %land.lhs.true903
  %524 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6271, !tbaa !2998
  %preserve_security_context908 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %524, i32 0, i32 22, !dbg !6272, !ctir !253
  %525 = load i8, i8* %preserve_security_context908, align 1, !dbg !6272, !tbaa !3210
  %tobool909 = trunc i8 %525 to i1, !dbg !6272, !ctir !120
  br i1 %tobool909, label %if.then911, label %if.end921, !dbg !6273

if.then911:                                       ; preds = %lor.lhs.false907, %land.lhs.true903
  %526 = load i8*, i8** %dst_name.addr, align 8, !dbg !6274, !tbaa !2998
  %527 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6277, !tbaa !2998
  %preserve_security_context912 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %527, i32 0, i32 22, !dbg !6278, !ctir !253
  %528 = load i8, i8* %preserve_security_context912, align 1, !dbg !6278, !tbaa !3210
  %tobool913 = trunc i8 %528 to i1, !dbg !6278, !ctir !120
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6279, !tbaa !2998
  %call914 = call zeroext i1 @set_file_security_ctx(i8* %526, i1 zeroext %tobool913, i1 zeroext false, %struct.cp_options* %529), !dbg !6280
  br i1 %call914, label %if.end920, label %if.then915, !dbg !6281

if.then915:                                       ; preds = %if.then911
  %530 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6282, !tbaa !2998
  %require_preserve_context916 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %530, i32 0, i32 23, !dbg !6285, !ctir !253
  %531 = load i8, i8* %require_preserve_context916, align 2, !dbg !6285, !tbaa !3468
  %tobool917 = trunc i8 %531 to i1, !dbg !6285, !ctir !120
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !6286

if.then918:                                       ; preds = %if.then915
  br label %un_backup, !dbg !6287

if.end919:                                        ; preds = %if.then915
  br label %if.end920, !dbg !6288

if.end920:                                        ; preds = %if.end919, %if.then911
  br label %if.end921, !dbg !6289

if.end921:                                        ; preds = %if.end920, %lor.lhs.false907, %land.lhs.true899, %land.lhs.true896, %if.end894
  %532 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6290, !tbaa !3109
  %tobool922 = trunc i8 %532 to i1, !dbg !6290
  br i1 %tobool922, label %land.lhs.true924, label %if.end934, !dbg !6292

land.lhs.true924:                                 ; preds = %if.end921
  %533 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6293, !tbaa !2998
  %dest_info925 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %533, i32 0, i32 37, !dbg !6294, !ctir !253
  %534 = load %struct.hash_table*, %struct.hash_table** %dest_info925, align 8, !dbg !6294, !tbaa !3515, !ctir !195
  %tobool926 = icmp ne %struct.hash_table* %534, null, !dbg !6293
  br i1 %tobool926, label %if.then927, label %if.end934, !dbg !6295

if.then927:                                       ; preds = %land.lhs.true924
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6296, metadata !DIExpression()), !dbg !6298
  %535 = load i8*, i8** %dst_name.addr, align 8, !dbg !6299, !tbaa !2998
  %call928 = call i32 @lstat(i8* %535, %struct.stat* %sb) #10, !dbg !6301
  %cmp929 = icmp eq i32 %call928, 0, !dbg !6302
  br i1 %cmp929, label %if.then931, label %if.end933, !dbg !6303

if.then931:                                       ; preds = %if.then927
  %536 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6304, !tbaa !2998
  %dest_info932 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %536, i32 0, i32 37, !dbg !6305, !ctir !253
  %537 = load %struct.hash_table*, %struct.hash_table** %dest_info932, align 8, !dbg !6305, !tbaa !3515, !ctir !195
  %538 = load i8*, i8** %dst_name.addr, align 8, !dbg !6306, !tbaa !2998
  call void @record_file(%struct.hash_table* %537, i8* %538, %struct.stat* %sb), !dbg !6307
  br label %if.end933, !dbg !6307

if.end933:                                        ; preds = %if.then931, %if.then927
  br label %if.end934, !dbg !6308

if.end934:                                        ; preds = %if.end933, %land.lhs.true924, %if.end921
  %539 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6309, !tbaa !2998
  %hard_link935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %539, i32 0, i32 8, !dbg !6311, !ctir !253
  %540 = load i8, i8* %hard_link935, align 1, !dbg !6311, !tbaa !3410
  %tobool936 = trunc i8 %540 to i1, !dbg !6311, !ctir !120
  br i1 %tobool936, label %land.lhs.true938, label %if.end944, !dbg !6312

land.lhs.true938:                                 ; preds = %if.end934
  %541 = load i32, i32* %src_mode, align 4, !dbg !6313, !tbaa !2985
  %and939 = and i32 %541, 61440, !dbg !6313
  %cmp940 = icmp eq i32 %and939, 16384, !dbg !6313
  br i1 %cmp940, label %if.end944, label %if.then942, !dbg !6314

if.then942:                                       ; preds = %land.lhs.true938
  %542 = load i8, i8* %delayed_ok, align 1, !dbg !6315, !tbaa !3109
  %tobool943 = trunc i8 %542 to i1, !dbg !6315
  store i1 %tobool943, i1* %retval, align 1, !dbg !6316
  br label %return, !dbg !6316

if.end944:                                        ; preds = %land.lhs.true938, %if.end934
  %543 = load i8, i8* %copied_as_regular, align 1, !dbg !6317, !tbaa !3109
  %tobool945 = trunc i8 %543 to i1, !dbg !6317
  br i1 %tobool945, label %if.then946, label %if.end948, !dbg !6319

if.then946:                                       ; preds = %if.end944
  %544 = load i8, i8* %delayed_ok, align 1, !dbg !6320, !tbaa !3109
  %tobool947 = trunc i8 %544 to i1, !dbg !6320
  store i1 %tobool947, i1* %retval, align 1, !dbg !6321
  br label %return, !dbg !6321

if.end948:                                        ; preds = %if.end944
  %545 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6322, !tbaa !2998
  %preserve_timestamps949 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %545, i32 0, i32 16, !dbg !6324, !ctir !253
  %546 = load i8, i8* %preserve_timestamps949, align 1, !dbg !6324, !tbaa !3441
  %tobool950 = trunc i8 %546 to i1, !dbg !6324, !ctir !120
  br i1 %tobool950, label %if.then951, label %if.end977, !dbg !6325

if.then951:                                       ; preds = %if.end948
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !6326, metadata !DIExpression()), !dbg !6328
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6329, !ctir !357
  %call953 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !6330
  %547 = bitcast %struct.timespec* %tmp952 to { i64, i64 }*, !dbg !6330
  %548 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 0, !dbg !6330
  %549 = extractvalue { i64, i64 } %call953, 0, !dbg !6330
  store i64 %549, i64* %548, align 8, !dbg !6330
  %550 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 1, !dbg !6330
  %551 = extractvalue { i64, i64 } %call953, 1, !dbg !6330
  store i64 %551, i64* %550, align 8, !dbg !6330
  %552 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !6330
  %553 = bitcast %struct.timespec* %tmp952 to i8*, !dbg !6330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %552, i8* align 8 %553, i64 16, i1 false), !dbg !6330, !tbaa.struct !6331
  %arrayidx954 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !6332, !ctir !357
  %call956 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !6333
  %554 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !6333
  %555 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 0, !dbg !6333
  %556 = extractvalue { i64, i64 } %call956, 0, !dbg !6333
  store i64 %556, i64* %555, align 8, !dbg !6333
  %557 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 1, !dbg !6333
  %558 = extractvalue { i64, i64 } %call956, 1, !dbg !6333
  store i64 %558, i64* %557, align 8, !dbg !6333
  %559 = bitcast %struct.timespec* %arrayidx954 to i8*, !dbg !6333
  %560 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !6333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %559, i8* align 8 %560, i64 16, i1 false), !dbg !6333, !tbaa.struct !6331
  %561 = load i8, i8* %dest_is_symlink, align 1, !dbg !6334, !tbaa !3109
  %tobool957 = trunc i8 %561 to i1, !dbg !6334
  br i1 %tobool957, label %cond.true959, label %cond.false961, !dbg !6334

cond.true959:                                     ; preds = %if.then951
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !6336, !tbaa !2998
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6337
  %call960 = call i32 @utimens_symlink(i8* %562, %struct.timespec* %arraydecay), !dbg !6338
  br label %cond.end964, !dbg !6334

cond.false961:                                    ; preds = %if.then951
  %563 = load i8*, i8** %dst_name.addr, align 8, !dbg !6339, !tbaa !2998
  %arraydecay962 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6340
  %call963 = call i32 @utimens(i8* %563, %struct.timespec* %arraydecay962), !dbg !6341
  br label %cond.end964, !dbg !6334

cond.end964:                                      ; preds = %cond.false961, %cond.true959
  %cond965 = phi i32 [ %call960, %cond.true959 ], [ %call963, %cond.false961 ], !dbg !6334
  %cmp966 = icmp ne i32 %cond965, 0, !dbg !6342
  br i1 %cmp966, label %if.then968, label %if.end976, !dbg !6343

if.then968:                                       ; preds = %cond.end964
  %call969 = call i32* @__errno_location() #15, !dbg !6344
  %564 = load i32, i32* %call969, align 4, !dbg !6344, !tbaa !2985, !ctir !7
  %call970 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #10, !dbg !6346
  %565 = load i8*, i8** %dst_name.addr, align 8, !dbg !6347, !tbaa !2998
  %call971 = call i8* @quotearg_style(i32 4, i8* %565), !dbg !6347
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %564, i8* %call970, i8* %call971), !dbg !6348
  %566 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6349, !tbaa !2998
  %require_preserve972 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %566, i32 0, i32 21, !dbg !6351, !ctir !253
  %567 = load i8, i8* %require_preserve972, align 4, !dbg !6351, !tbaa !3464
  %tobool973 = trunc i8 %567 to i1, !dbg !6351, !ctir !120
  br i1 %tobool973, label %if.then974, label %if.end975, !dbg !6352

if.then974:                                       ; preds = %if.then968
  store i1 false, i1* %retval, align 1, !dbg !6353
  br label %return, !dbg !6353

if.end975:                                        ; preds = %if.then968
  br label %if.end976, !dbg !6354

if.end976:                                        ; preds = %if.end975, %cond.end964
  br label %if.end977, !dbg !6355

if.end977:                                        ; preds = %if.end976, %if.end948
  %568 = load i8, i8* %dest_is_symlink, align 1, !dbg !6356, !tbaa !3109
  %tobool978 = trunc i8 %568 to i1, !dbg !6356
  br i1 %tobool978, label %if.end1001, label %land.lhs.true979, !dbg !6358

land.lhs.true979:                                 ; preds = %if.end977
  %569 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6359, !tbaa !2998
  %preserve_ownership980 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %569, i32 0, i32 14, !dbg !6360, !ctir !253
  %570 = load i8, i8* %preserve_ownership980, align 1, !dbg !6360, !tbaa !3429
  %tobool981 = trunc i8 %570 to i1, !dbg !6360, !ctir !120
  br i1 %tobool981, label %land.lhs.true983, label %if.end1001, !dbg !6361

land.lhs.true983:                                 ; preds = %land.lhs.true979
  %571 = load i8, i8* %new_dst.addr, align 1, !dbg !6362, !tbaa !3109
  %tobool984 = trunc i8 %571 to i1, !dbg !6362
  br i1 %tobool984, label %if.then996, label %lor.lhs.false986, !dbg !6363

lor.lhs.false986:                                 ; preds = %land.lhs.true983
  %st_uid987 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !6364, !ctir !317
  %572 = load i32, i32* %st_uid987, align 4, !dbg !6364, !tbaa !6233, !ctir !326
  %st_uid988 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !6364, !ctir !317
  %573 = load i32, i32* %st_uid988, align 4, !dbg !6364, !tbaa !6233, !ctir !326
  %cmp989 = icmp eq i32 %572, %573, !dbg !6364
  br i1 %cmp989, label %land.lhs.true991, label %if.then996, !dbg !6364

land.lhs.true991:                                 ; preds = %lor.lhs.false986
  %st_gid992 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !6364, !ctir !317
  %574 = load i32, i32* %st_gid992, align 8, !dbg !6364, !tbaa !6235, !ctir !328
  %st_gid993 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !6364, !ctir !317
  %575 = load i32, i32* %st_gid993, align 8, !dbg !6364, !tbaa !6235, !ctir !328
  %cmp994 = icmp eq i32 %574, %575, !dbg !6364
  br i1 %cmp994, label %if.end1001, label %if.then996, !dbg !6365

if.then996:                                       ; preds = %land.lhs.true991, %lor.lhs.false986, %land.lhs.true983
  %576 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6366, !tbaa !2998
  %577 = load i8*, i8** %dst_name.addr, align 8, !dbg !6368, !tbaa !2998
  %578 = load i8, i8* %new_dst.addr, align 1, !dbg !6369, !tbaa !3109
  %tobool997 = trunc i8 %578 to i1, !dbg !6369
  %call998 = call i32 @set_owner(%struct.cp_options* %576, i8* %577, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool997, %struct.stat* %dst_sb), !dbg !6370
  switch i32 %call998, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb999
  ], !dbg !6371

sw.bb:                                            ; preds = %if.then996
  store i1 false, i1* %retval, align 1, !dbg !6372
  br label %return, !dbg !6372

sw.bb999:                                         ; preds = %if.then996
  %579 = load i32, i32* %src_mode, align 4, !dbg !6374, !tbaa !2985
  %and1000 = and i32 %579, -3585, !dbg !6374
  store i32 %and1000, i32* %src_mode, align 4, !dbg !6374, !tbaa !2985
  br label %sw.epilog, !dbg !6375

sw.epilog:                                        ; preds = %if.then996, %sw.bb999
  br label %if.end1001, !dbg !6376

if.end1001:                                       ; preds = %sw.epilog, %land.lhs.true991, %land.lhs.true979, %if.end977
  %580 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6377, !tbaa !2998
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %580, i32 0, i32 24, !dbg !6379, !ctir !253
  %581 = load i8, i8* %preserve_xattr, align 1, !dbg !6379, !tbaa !3472
  %tobool1002 = trunc i8 %581 to i1, !dbg !6379, !ctir !120
  br i1 %tobool1002, label %land.lhs.true1004, label %if.end1010, !dbg !6380

land.lhs.true1004:                                ; preds = %if.end1001
  %582 = load i8*, i8** %src_name.addr, align 8, !dbg !6381, !tbaa !2998
  %583 = load i8*, i8** %dst_name.addr, align 8, !dbg !6382, !tbaa !2998
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6383, !tbaa !2998
  %call1005 = call zeroext i1 @copy_attr(i8* %582, i32 -1, i8* %583, i32 -1, %struct.cp_options* %584), !dbg !6384
  br i1 %call1005, label %if.end1010, label %land.lhs.true1006, !dbg !6385

land.lhs.true1006:                                ; preds = %land.lhs.true1004
  %585 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6386, !tbaa !2998
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %585, i32 0, i32 25, !dbg !6387, !ctir !253
  %586 = load i8, i8* %require_preserve_xattr, align 8, !dbg !6387, !tbaa !3476
  %tobool1007 = trunc i8 %586 to i1, !dbg !6387, !ctir !120
  br i1 %tobool1007, label %if.then1009, label %if.end1010, !dbg !6388

if.then1009:                                      ; preds = %land.lhs.true1006
  store i1 false, i1* %retval, align 1, !dbg !6389
  br label %return, !dbg !6389

if.end1010:                                       ; preds = %land.lhs.true1006, %land.lhs.true1004, %if.end1001
  %587 = load i8, i8* %dest_is_symlink, align 1, !dbg !6390, !tbaa !3109
  %tobool1011 = trunc i8 %587 to i1, !dbg !6390
  br i1 %tobool1011, label %if.then1012, label %if.end1014, !dbg !6392

if.then1012:                                      ; preds = %if.end1010
  %588 = load i8, i8* %delayed_ok, align 1, !dbg !6393, !tbaa !3109
  %tobool1013 = trunc i8 %588 to i1, !dbg !6393
  store i1 %tobool1013, i1* %retval, align 1, !dbg !6394
  br label %return, !dbg !6394

if.end1014:                                       ; preds = %if.end1010
  %589 = load i8*, i8** %dst_name.addr, align 8, !dbg !6395, !tbaa !2998
  call void @set_author(i8* %589, i32 -1, %struct.stat* %src_sb), !dbg !6396
  %590 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6397, !tbaa !2998
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %590, i32 0, i32 15, !dbg !6399, !ctir !253
  %591 = load i8, i8* %preserve_mode, align 2, !dbg !6399, !tbaa !3437
  %tobool1015 = trunc i8 %591 to i1, !dbg !6399, !ctir !120
  br i1 %tobool1015, label %if.then1021, label %lor.lhs.false1017, !dbg !6400

lor.lhs.false1017:                                ; preds = %if.end1014
  %592 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6401, !tbaa !2998
  %move_mode1018 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %592, i32 0, i32 9, !dbg !6402, !ctir !253
  %593 = load i8, i8* %move_mode1018, align 8, !dbg !6402, !tbaa !3417
  %tobool1019 = trunc i8 %593 to i1, !dbg !6402, !ctir !120
  br i1 %tobool1019, label %if.then1021, label %if.else1031, !dbg !6403

if.then1021:                                      ; preds = %lor.lhs.false1017, %if.end1014
  %594 = load i8*, i8** %src_name.addr, align 8, !dbg !6404, !tbaa !2998
  %595 = load i8*, i8** %dst_name.addr, align 8, !dbg !6407, !tbaa !2998
  %596 = load i32, i32* %src_mode, align 4, !dbg !6408, !tbaa !2985
  %call1022 = call i32 @copy_acl(i8* %594, i32 -1, i8* %595, i32 -1, i32 %596), !dbg !6409
  %cmp1023 = icmp ne i32 %call1022, 0, !dbg !6410
  br i1 %cmp1023, label %land.lhs.true1025, label %if.end1030, !dbg !6411

land.lhs.true1025:                                ; preds = %if.then1021
  %597 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6412, !tbaa !2998
  %require_preserve1026 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %597, i32 0, i32 21, !dbg !6413, !ctir !253
  %598 = load i8, i8* %require_preserve1026, align 4, !dbg !6413, !tbaa !3464
  %tobool1027 = trunc i8 %598 to i1, !dbg !6413, !ctir !120
  br i1 %tobool1027, label %if.then1029, label %if.end1030, !dbg !6414

if.then1029:                                      ; preds = %land.lhs.true1025
  store i1 false, i1* %retval, align 1, !dbg !6415
  br label %return, !dbg !6415

if.end1030:                                       ; preds = %land.lhs.true1025, %if.then1021
  br label %if.end1112, !dbg !6416

if.else1031:                                      ; preds = %lor.lhs.false1017
  %599 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6417, !tbaa !2998
  %set_mode1032 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %599, i32 0, i32 28, !dbg !6419, !ctir !253
  %600 = load i8, i8* %set_mode1032, align 1, !dbg !6419, !tbaa !3492
  %tobool1033 = trunc i8 %600 to i1, !dbg !6419, !ctir !120
  br i1 %tobool1033, label %if.then1034, label %if.else1041, !dbg !6420

if.then1034:                                      ; preds = %if.else1031
  %601 = load i8*, i8** %dst_name.addr, align 8, !dbg !6421, !tbaa !2998
  %602 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6424, !tbaa !2998
  %mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %602, i32 0, i32 4, !dbg !6425, !ctir !253
  %603 = load i32, i32* %mode1035, align 8, !dbg !6425, !tbaa !3496, !ctir !160
  %call1036 = call i32 @set_acl(i8* %601, i32 -1, i32 %603), !dbg !6426
  %cmp1037 = icmp ne i32 %call1036, 0, !dbg !6427
  br i1 %cmp1037, label %if.then1039, label %if.end1040, !dbg !6428

if.then1039:                                      ; preds = %if.then1034
  store i1 false, i1* %retval, align 1, !dbg !6429
  br label %return, !dbg !6429

if.end1040:                                       ; preds = %if.then1034
  br label %if.end1111, !dbg !6430

if.else1041:                                      ; preds = %if.else1031
  %604 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6431, !tbaa !2998
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %604, i32 0, i32 17, !dbg !6433, !ctir !253
  %605 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6433, !tbaa !3445
  %tobool1042 = trunc i8 %605 to i1, !dbg !6433, !ctir !120
  br i1 %tobool1042, label %land.lhs.true1044, label %if.else1065, !dbg !6434

land.lhs.true1044:                                ; preds = %if.else1041
  %606 = load i8, i8* %new_dst.addr, align 1, !dbg !6435, !tbaa !3109
  %tobool1045 = trunc i8 %606 to i1, !dbg !6435
  br i1 %tobool1045, label %if.then1047, label %if.else1065, !dbg !6436

if.then1047:                                      ; preds = %land.lhs.true1044
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !6437, metadata !DIExpression()), !dbg !6439
  %607 = load i32, i32* %src_mode, align 4, !dbg !6440, !tbaa !2985
  %and1048 = and i32 %607, 61440, !dbg !6440
  %cmp1049 = icmp eq i32 %and1048, 16384, !dbg !6440
  br i1 %cmp1049, label %lor.end1055, label %lor.rhs1051, !dbg !6441

lor.rhs1051:                                      ; preds = %if.then1047
  %608 = load i32, i32* %src_mode, align 4, !dbg !6442, !tbaa !2985
  %and1052 = and i32 %608, 61440, !dbg !6442
  %cmp1053 = icmp eq i32 %and1052, 49152, !dbg !6442
  br label %lor.end1055, !dbg !6441

lor.end1055:                                      ; preds = %lor.rhs1051, %if.then1047
  %609 = phi i1 [ true, %if.then1047 ], [ %cmp1053, %lor.rhs1051 ]
  %610 = zext i1 %609 to i64, !dbg !6440
  %cond1056 = select i1 %609, i32 511, i32 438, !dbg !6440
  store i32 %cond1056, i32* %default_permissions, align 4, !dbg !6439, !tbaa !2985
  %611 = load i8*, i8** %dst_name.addr, align 8, !dbg !6443, !tbaa !2998
  %612 = load i32, i32* %default_permissions, align 4, !dbg !6445, !tbaa !2985
  %call1057 = call i32 @cached_umask(), !dbg !6446
  %neg1058 = xor i32 %call1057, -1, !dbg !6447
  %and1059 = and i32 %612, %neg1058, !dbg !6448
  %call1060 = call i32 @set_acl(i8* %611, i32 -1, i32 %and1059), !dbg !6449
  %cmp1061 = icmp ne i32 %call1060, 0, !dbg !6450
  br i1 %cmp1061, label %if.then1063, label %if.end1064, !dbg !6451

if.then1063:                                      ; preds = %lor.end1055
  store i1 false, i1* %retval, align 1, !dbg !6452
  br label %return, !dbg !6452

if.end1064:                                       ; preds = %lor.end1055
  br label %if.end1110, !dbg !6453

if.else1065:                                      ; preds = %land.lhs.true1044, %if.else1041
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !6454, !tbaa !2985
  %tobool1066 = icmp ne i32 %613, 0, !dbg !6454
  br i1 %tobool1066, label %if.then1067, label %if.end1093, !dbg !6457

if.then1067:                                      ; preds = %if.else1065
  %call1068 = call i32 @cached_umask(), !dbg !6458
  %neg1069 = xor i32 %call1068, -1, !dbg !6460
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !6461, !tbaa !2985
  %and1070 = and i32 %614, %neg1069, !dbg !6461
  store i32 %and1070, i32* %omitted_permissions, align 4, !dbg !6461, !tbaa !2985
  %615 = load i32, i32* %omitted_permissions, align 4, !dbg !6462, !tbaa !2985
  %tobool1071 = icmp ne i32 %615, 0, !dbg !6462
  br i1 %tobool1071, label %land.lhs.true1072, label %if.end1092, !dbg !6464

land.lhs.true1072:                                ; preds = %if.then1067
  %616 = load i8, i8* %restore_dst_mode, align 1, !dbg !6465, !tbaa !3109
  %tobool1073 = trunc i8 %616 to i1, !dbg !6465
  br i1 %tobool1073, label %if.end1092, label %if.then1074, !dbg !6466

if.then1074:                                      ; preds = %land.lhs.true1072
  %617 = load i8, i8* %new_dst.addr, align 1, !dbg !6467, !tbaa !3109
  %tobool1075 = trunc i8 %617 to i1, !dbg !6467
  br i1 %tobool1075, label %land.lhs.true1077, label %if.end1085, !dbg !6470

land.lhs.true1077:                                ; preds = %if.then1074
  %618 = load i8*, i8** %dst_name.addr, align 8, !dbg !6471, !tbaa !2998
  %call1078 = call i32 @lstat(i8* %618, %struct.stat* %dst_sb) #10, !dbg !6472
  %cmp1079 = icmp ne i32 %call1078, 0, !dbg !6473
  br i1 %cmp1079, label %if.then1081, label %if.end1085, !dbg !6474

if.then1081:                                      ; preds = %land.lhs.true1077
  %call1082 = call i32* @__errno_location() #15, !dbg !6475
  %619 = load i32, i32* %call1082, align 4, !dbg !6475, !tbaa !2985, !ctir !7
  %call1083 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #10, !dbg !6477
  %620 = load i8*, i8** %dst_name.addr, align 8, !dbg !6478, !tbaa !2998
  %call1084 = call i8* @quotearg_style(i32 4, i8* %620), !dbg !6478
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %619, i8* %call1083, i8* %call1084), !dbg !6479
  store i1 false, i1* %retval, align 1, !dbg !6480
  br label %return, !dbg !6480

if.end1085:                                       ; preds = %land.lhs.true1077, %if.then1074
  %st_mode1086 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6481, !ctir !317
  %621 = load i32, i32* %st_mode1086, align 8, !dbg !6481, !tbaa !3181, !ctir !133
  store i32 %621, i32* %dst_mode, align 4, !dbg !6482, !tbaa !2985
  %622 = load i32, i32* %omitted_permissions, align 4, !dbg !6483, !tbaa !2985
  %623 = load i32, i32* %dst_mode, align 4, !dbg !6485, !tbaa !2985
  %neg1087 = xor i32 %623, -1, !dbg !6486
  %and1088 = and i32 %622, %neg1087, !dbg !6487
  %tobool1089 = icmp ne i32 %and1088, 0, !dbg !6487
  br i1 %tobool1089, label %if.then1090, label %if.end1091, !dbg !6488

if.then1090:                                      ; preds = %if.end1085
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !6489, !tbaa !3109
  br label %if.end1091, !dbg !6490

if.end1091:                                       ; preds = %if.then1090, %if.end1085
  br label %if.end1092, !dbg !6491

if.end1092:                                       ; preds = %if.end1091, %land.lhs.true1072, %if.then1067
  br label %if.end1093, !dbg !6492

if.end1093:                                       ; preds = %if.end1092, %if.else1065
  %624 = load i8, i8* %restore_dst_mode, align 1, !dbg !6493, !tbaa !3109
  %tobool1094 = trunc i8 %624 to i1, !dbg !6493
  br i1 %tobool1094, label %if.then1095, label %if.end1109, !dbg !6495

if.then1095:                                      ; preds = %if.end1093
  %625 = load i8*, i8** %dst_name.addr, align 8, !dbg !6496, !tbaa !2998
  %626 = load i32, i32* %dst_mode, align 4, !dbg !6499, !tbaa !2985
  %627 = load i32, i32* %omitted_permissions, align 4, !dbg !6500, !tbaa !2985
  %or1096 = or i32 %626, %627, !dbg !6501
  %call1097 = call i32 @chmod(i8* %625, i32 %or1096) #10, !dbg !6502
  %cmp1098 = icmp ne i32 %call1097, 0, !dbg !6503
  br i1 %cmp1098, label %if.then1100, label %if.end1108, !dbg !6504

if.then1100:                                      ; preds = %if.then1095
  %call1101 = call i32* @__errno_location() #15, !dbg !6505
  %628 = load i32, i32* %call1101, align 4, !dbg !6505, !tbaa !2985, !ctir !7
  %call1102 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #10, !dbg !6507
  %629 = load i8*, i8** %dst_name.addr, align 8, !dbg !6508, !tbaa !2998
  %call1103 = call i8* @quotearg_style(i32 4, i8* %629), !dbg !6508
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %628, i8* %call1102, i8* %call1103), !dbg !6509
  %630 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6510, !tbaa !2998
  %require_preserve1104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %630, i32 0, i32 21, !dbg !6512, !ctir !253
  %631 = load i8, i8* %require_preserve1104, align 4, !dbg !6512, !tbaa !3464
  %tobool1105 = trunc i8 %631 to i1, !dbg !6512, !ctir !120
  br i1 %tobool1105, label %if.then1106, label %if.end1107, !dbg !6513

if.then1106:                                      ; preds = %if.then1100
  store i1 false, i1* %retval, align 1, !dbg !6514
  br label %return, !dbg !6514

if.end1107:                                       ; preds = %if.then1100
  br label %if.end1108, !dbg !6515

if.end1108:                                       ; preds = %if.end1107, %if.then1095
  br label %if.end1109, !dbg !6516

if.end1109:                                       ; preds = %if.end1108, %if.end1093
  br label %if.end1110

if.end1110:                                       ; preds = %if.end1109, %if.end1064
  br label %if.end1111

if.end1111:                                       ; preds = %if.end1110, %if.end1040
  br label %if.end1112

if.end1112:                                       ; preds = %if.end1111, %if.end1030
  %632 = load i8, i8* %delayed_ok, align 1, !dbg !6517, !tbaa !3109
  %tobool1113 = trunc i8 %632 to i1, !dbg !6517
  store i1 %tobool1113, i1* %retval, align 1, !dbg !6518
  br label %return, !dbg !6518

un_backup:                                        ; preds = %if.then918, %if.else885, %if.then880, %if.then860, %if.then820, %if.then807, %if.then783, %if.then764, %if.then747, %if.then725, %if.then715, %if.then664, %if.then628, %if.then616, %if.then609, %if.then593, %if.then486, %if.else474, %if.then450, %if.then160
  call void @llvm.dbg.label(metadata !6519), !dbg !6520
  %633 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6521, !tbaa !2998
  %preserve_security_context1114 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %633, i32 0, i32 22, !dbg !6523, !ctir !253
  %634 = load i8, i8* %preserve_security_context1114, align 1, !dbg !6523, !tbaa !3210
  %tobool1115 = trunc i8 %634 to i1, !dbg !6523, !ctir !120
  br i1 %tobool1115, label %if.then1116, label %if.end1117, !dbg !6524

if.then1116:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !6525
  br label %if.end1117, !dbg !6525

if.end1117:                                       ; preds = %if.then1116, %un_backup
  %635 = load i8*, i8** %earlier_file, align 8, !dbg !6526, !tbaa !2998
  %cmp1118 = icmp eq i8* %635, null, !dbg !6528
  br i1 %cmp1118, label %if.then1120, label %if.end1123, !dbg !6529

if.then1120:                                      ; preds = %if.end1117
  %st_ino1121 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !6530, !ctir !317
  %636 = load i64, i64* %st_ino1121, align 8, !dbg !6530, !tbaa !3873, !ctir !228
  %st_dev1122 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !6531, !ctir !317
  %637 = load i64, i64* %st_dev1122, align 8, !dbg !6531, !tbaa !3876, !ctir !231
  call void @forget_created(i64 %636, i64 %637), !dbg !6532
  br label %if.end1123, !dbg !6532

if.end1123:                                       ; preds = %if.then1120, %if.end1117
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !6533, !tbaa !2998
  %tobool1124 = icmp ne i8* %638, null, !dbg !6533
  br i1 %tobool1124, label %if.then1125, label %if.end1143, !dbg !6535

if.then1125:                                      ; preds = %if.end1123
  %639 = load i8*, i8** %dst_backup, align 8, !dbg !6536, !tbaa !2998
  %640 = load i8*, i8** %dst_name.addr, align 8, !dbg !6539, !tbaa !2998
  %call1126 = call i32 @rename(i8* %639, i8* %640) #10, !dbg !6540
  %cmp1127 = icmp ne i32 %call1126, 0, !dbg !6541
  br i1 %cmp1127, label %if.then1129, label %if.else1133, !dbg !6542

if.then1129:                                      ; preds = %if.then1125
  %call1130 = call i32* @__errno_location() #15, !dbg !6543
  %641 = load i32, i32* %call1130, align 4, !dbg !6543, !tbaa !2985, !ctir !7
  %call1131 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.136, i64 0, i64 0)) #10, !dbg !6544
  %642 = load i8*, i8** %dst_name.addr, align 8, !dbg !6545, !tbaa !2998
  %call1132 = call i8* @quotearg_style(i32 4, i8* %642), !dbg !6545
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %641, i8* %call1131, i8* %call1132), !dbg !6546
  br label %if.end1142, !dbg !6546

if.else1133:                                      ; preds = %if.then1125
  %643 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6547, !tbaa !2998
  %verbose1134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %643, i32 0, i32 31, !dbg !6550, !ctir !253
  %644 = load i8, i8* %verbose1134, align 2, !dbg !6550, !tbaa !3198
  %tobool1135 = trunc i8 %644 to i1, !dbg !6550, !ctir !120
  br i1 %tobool1135, label %if.then1136, label %if.end1141, !dbg !6551

if.then1136:                                      ; preds = %if.else1133
  %call1137 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.137, i64 0, i64 0)) #10, !dbg !6552
  %645 = load i8*, i8** %dst_backup, align 8, !dbg !6553, !tbaa !2998
  %call1138 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %645), !dbg !6553
  %646 = load i8*, i8** %dst_name.addr, align 8, !dbg !6554, !tbaa !2998
  %call1139 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %646), !dbg !6554
  %call1140 = call i32 (i8*, ...) @printf(i8* %call1137, i8* %call1138, i8* %call1139), !dbg !6555
  br label %if.end1141, !dbg !6555

if.end1141:                                       ; preds = %if.then1136, %if.else1133
  br label %if.end1142

if.end1142:                                       ; preds = %if.end1141, %if.then1129
  br label %if.end1143, !dbg !6556

if.end1143:                                       ; preds = %if.end1142, %if.end1123
  store i1 false, i1* %retval, align 1, !dbg !6557
  br label %return, !dbg !6557

return:                                           ; preds = %if.end1143, %if.end1112, %if.then1106, %if.then1081, %if.then1063, %if.then1039, %if.then1029, %if.then1012, %if.then1009, %sw.bb, %if.then974, %if.then946, %if.then942, %if.then587, %if.then552, %if.then533, %if.then527, %if.end524, %if.end487, %if.end464, %if.then374, %if.then330, %if.then297, %cond.end284, %if.then254, %if.else235, %if.then216, %if.else204, %if.then189, %if.then185, %if.end172, %if.end162, %if.then129, %if.then114, %if.then59, %cond.end43, %if.then30
  %647 = load i1, i1* %retval, align 1, !dbg !6558
  ret i1 %647, !dbg !6558
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @follow_fstatat(i32 %dirfd, i8* %filename, %struct.stat* %st, i32 %flags) #4 !dbg !6559 !ctir !358 {
entry:
  %dirfd.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flags.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %dirfd, i32* %dirfd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dirfd.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6568, metadata !DIExpression()), !dbg !6569
  %0 = load i32, i32* %dirfd.addr, align 4, !dbg !6570, !tbaa !2985
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !6571, !tbaa !2998
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !6572, !tbaa !2998
  %3 = load i32, i32* %flags.addr, align 4, !dbg !6573, !tbaa !2985
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 %3) #10, !dbg !6574
  store i32 %call, i32* %result, align 4, !dbg !6569, !tbaa !2985
  %4 = load i32, i32* %result, align 4, !dbg !6575, !tbaa !2985
  ret i32 %4, !dbg !6576
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #9 !dbg !6577 !ctir !360 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6578, metadata !DIExpression()), !dbg !6579
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !6580, metadata !DIExpression()), !dbg !6581
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6582, !tbaa !2998
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !6583, !ctir !253
  %1 = load i32, i32* %dereference, align 4, !dbg !6583, !tbaa !3398, !ctir !76
  %cmp = icmp eq i32 %1, 4, !dbg !6584
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6585

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6586, !tbaa !2998
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !6587, !ctir !253
  %3 = load i32, i32* %dereference1, align 4, !dbg !6587, !tbaa !3398, !ctir !76
  %cmp2 = icmp eq i32 %3, 3, !dbg !6588
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6589

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6590, !tbaa !3109
  %tobool = trunc i8 %4 to i1, !dbg !6590
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !6591
  br label %lor.end, !dbg !6585

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !6592
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !6593 !ctir !362 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !315
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !315
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !317
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !317
  %same_link = alloca i8, align 1, !ctir !120
  %same = alloca i8, align 1, !ctir !120
  %sn = alloca i8, align 1, !ctir !120
  %abs_src = alloca i8*, align 8, !ctir !9
  %result = alloca i8, align 1, !ctir !120
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  store i8* %return_now, i8** %return_now.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !6606, metadata !DIExpression()), !dbg !6607
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !6608, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !6610, metadata !DIExpression()), !dbg !6611
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !6612, metadata !DIExpression()), !dbg !6613
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata i8* %same, metadata !6616, metadata !DIExpression()), !dbg !6617
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6618, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !6618, !ctir !316
  %1 = load i64, i64* %st_ino, align 8, !dbg !6618, !tbaa !3873, !ctir !228
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6618, !tbaa !2998
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !6618, !ctir !316
  %3 = load i64, i64* %st_ino1, align 8, !dbg !6618, !tbaa !3873, !ctir !228
  %cmp = icmp eq i64 %1, %3, !dbg !6618
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6618

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6618, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !6618, !ctir !316
  %5 = load i64, i64* %st_dev, align 8, !dbg !6618, !tbaa !3876, !ctir !231
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6618, !tbaa !2998
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !6618, !ctir !316
  %7 = load i64, i64* %st_dev2, align 8, !dbg !6618, !tbaa !3876, !ctir !231
  %cmp3 = icmp eq i64 %5, %7, !dbg !6618
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !6619
  %frombool = zext i1 %8 to i8, !dbg !6617
  store i8 %frombool, i8* %same, align 1, !dbg !6617, !tbaa !3109
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !6620, !tbaa !2998
  store i8 0, i8* %9, align 1, !dbg !6621, !tbaa !3109, !ctir !120
  %10 = load i8, i8* %same, align 1, !dbg !6622, !tbaa !3109
  %tobool = trunc i8 %10 to i1, !dbg !6622
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6624

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6625, !tbaa !2998
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !6626, !ctir !253
  %12 = load i8, i8* %hard_link, align 1, !dbg !6626, !tbaa !3410
  %tobool4 = trunc i8 %12 to i1, !dbg !6626, !ctir !120
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6627

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !6628, !tbaa !2998
  store i8 1, i8* %13, align 1, !dbg !6630, !tbaa !3109, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !6631
  br label %return, !dbg !6631

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6632, !tbaa !2998
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !6634, !ctir !253
  %15 = load i32, i32* %dereference, align 4, !dbg !6634, !tbaa !3398, !ctir !76
  %cmp5 = icmp eq i32 %15, 2, !dbg !6635
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6636

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !6637, !tbaa !3109
  %tobool7 = trunc i8 %16 to i1, !dbg !6637
  %frombool8 = zext i1 %tobool7 to i8, !dbg !6639
  store i8 %frombool8, i8* %same_link, align 1, !dbg !6639, !tbaa !3109
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6640, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6640, !ctir !316
  %18 = load i32, i32* %st_mode, align 8, !dbg !6640, !tbaa !3181, !ctir !133
  %and = and i32 %18, 61440, !dbg !6640
  %cmp9 = icmp eq i32 %and, 40960, !dbg !6640
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !6642

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6643, !tbaa !2998
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !6643, !ctir !316
  %20 = load i32, i32* %st_mode11, align 8, !dbg !6643, !tbaa !3181, !ctir !133
  %and12 = and i32 %20, 61440, !dbg !6643
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !6643
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !6644

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !6645, metadata !DIExpression()), !dbg !6647
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !6648, !tbaa !2998
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !6649, !tbaa !2998
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !6650
  %frombool15 = zext i1 %call to i8, !dbg !6647
  store i8 %frombool15, i8* %sn, align 1, !dbg !6647, !tbaa !3109
  %23 = load i8, i8* %sn, align 1, !dbg !6651, !tbaa !3109
  %tobool16 = trunc i8 %23 to i1, !dbg !6651
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !6653

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6654, !tbaa !2998
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !6657, !ctir !253
  %25 = load i32, i32* %backup_type, align 8, !dbg !6657, !tbaa !3329, !ctir !68
  %cmp18 = icmp ne i32 %25, 0, !dbg !6658
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6659

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !6660
  br label %return, !dbg !6660

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !6661, !tbaa !3109
  %tobool21 = trunc i8 %26 to i1, !dbg !6661
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6663

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !6664, !tbaa !2998
  store i8 1, i8* %27, align 1, !dbg !6666, !tbaa !3109, !ctir !120
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6667, !tbaa !2998
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !6668, !ctir !253
  %29 = load i8, i8* %move_mode, align 8, !dbg !6668, !tbaa !3417
  %tobool23 = trunc i8 %29 to i1, !dbg !6668, !ctir !120
  %lnot = xor i1 %tobool23, true, !dbg !6669
  store i1 %lnot, i1* %retval, align 1, !dbg !6670
  br label %return, !dbg !6670

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !6671

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !6672, !tbaa !3109
  %tobool26 = trunc i8 %30 to i1, !dbg !6672
  %lnot27 = xor i1 %tobool26, true, !dbg !6673
  store i1 %lnot27, i1* %retval, align 1, !dbg !6674
  br label %return, !dbg !6674

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6675, !tbaa !2998
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !6676, !tbaa !2998
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6677, !tbaa !2998
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !6678, !tbaa !2998
  br label %if.end58, !dbg !6679

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !6680, !tbaa !3109
  %tobool29 = trunc i8 %33 to i1, !dbg !6680
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6683

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !6684
  br label %return, !dbg !6684

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6685, !tbaa !2998
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #10, !dbg !6687
  %cmp33 = icmp ne i32 %call32, 0, !dbg !6688
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !6689

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !6690, !tbaa !2998
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #10, !dbg !6691
  %cmp35 = icmp ne i32 %call34, 0, !dbg !6692
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6693

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !6694
  br label %return, !dbg !6694

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !6695, !tbaa !2998
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !6696, !tbaa !2998
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6697, !tbaa !2998
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !6697, !ctir !316
  %37 = load i64, i64* %st_ino38, align 8, !dbg !6697, !tbaa !3873, !ctir !228
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6697, !tbaa !2998
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !6697, !ctir !316
  %39 = load i64, i64* %st_ino39, align 8, !dbg !6697, !tbaa !3873, !ctir !228
  %cmp40 = icmp eq i64 %37, %39, !dbg !6697
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !6697

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6697, !tbaa !2998
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !6697, !ctir !316
  %41 = load i64, i64* %st_dev42, align 8, !dbg !6697, !tbaa !3876, !ctir !231
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6697, !tbaa !2998
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !6697, !ctir !316
  %43 = load i64, i64* %st_dev43, align 8, !dbg !6697, !tbaa !3876, !ctir !231
  %cmp44 = icmp eq i64 %41, %43, !dbg !6697
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !6698
  %frombool46 = zext i1 %44 to i8, !dbg !6699
  store i8 %frombool46, i8* %same_link, align 1, !dbg !6699, !tbaa !3109
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6700, !tbaa !2998
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !6700, !ctir !316
  %46 = load i32, i32* %st_mode47, align 8, !dbg !6700, !tbaa !3181, !ctir !133
  %and48 = and i32 %46, 61440, !dbg !6700
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !6700
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !6702

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6703, !tbaa !2998
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !6703, !ctir !316
  %48 = load i32, i32* %st_mode51, align 8, !dbg !6703, !tbaa !3181, !ctir !133
  %and52 = and i32 %48, 61440, !dbg !6703
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !6703
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !6704

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6705, !tbaa !2998
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !6706, !ctir !253
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6706, !tbaa !3402
  %tobool55 = trunc i8 %50 to i1, !dbg !6706, !ctir !120
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !6707

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !6708
  br label %return, !dbg !6708

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6709, !tbaa !2998
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !6711, !ctir !253
  %52 = load i32, i32* %backup_type59, align 8, !dbg !6711, !tbaa !3329, !ctir !68
  %cmp60 = icmp ne i32 %52, 0, !dbg !6712
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !6713

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !6714, !tbaa !3109
  %tobool62 = trunc i8 %53 to i1, !dbg !6714
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !6717

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6718, !tbaa !2998
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !6721, !ctir !253
  %55 = load i8, i8* %move_mode64, align 8, !dbg !6721, !tbaa !3417
  %tobool65 = trunc i8 %55 to i1, !dbg !6721, !ctir !120
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !6722

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6723, !tbaa !2998
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !6724, !ctir !253
  %57 = load i32, i32* %dereference67, align 4, !dbg !6724, !tbaa !3398, !ctir !76
  %cmp68 = icmp ne i32 %57, 2, !dbg !6725
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !6726

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6727, !tbaa !2998
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !6727, !ctir !316
  %59 = load i32, i32* %st_mode70, align 8, !dbg !6727, !tbaa !3181, !ctir !133
  %and71 = and i32 %59, 61440, !dbg !6727
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !6727
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !6728

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6729, !tbaa !2998
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !6729, !ctir !316
  %61 = load i32, i32* %st_mode74, align 8, !dbg !6729, !tbaa !3181, !ctir !133
  %and75 = and i32 %61, 61440, !dbg !6729
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !6729
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !6730

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !6731
  br label %return, !dbg !6731

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !6732
  br label %return, !dbg !6732

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !6733, !tbaa !2998
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !6734, !tbaa !2998
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !6735
  %lnot81 = xor i1 %call80, true, !dbg !6736
  store i1 %lnot81, i1* %retval, align 1, !dbg !6737
  br label %return, !dbg !6737

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6738, !tbaa !2998
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !6740, !ctir !253
  %65 = load i8, i8* %move_mode83, align 8, !dbg !6740, !tbaa !3417
  %tobool84 = trunc i8 %65 to i1, !dbg !6740, !ctir !120
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !6741

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6742, !tbaa !2998
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !6743, !ctir !253
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !6743, !tbaa !3402
  %tobool87 = trunc i8 %67 to i1, !dbg !6743, !ctir !120
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !6744

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6745, !tbaa !2998
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !6745, !ctir !316
  %69 = load i32, i32* %st_mode89, align 8, !dbg !6745, !tbaa !3181, !ctir !133
  %and90 = and i32 %69, 61440, !dbg !6745
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !6745
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !6748

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !6749
  br label %return, !dbg !6749

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !6750, !tbaa !3109
  %tobool94 = trunc i8 %70 to i1, !dbg !6750
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !6752

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6753, !tbaa !2998
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !6754, !ctir !316
  %72 = load i64, i64* %st_nlink, align 8, !dbg !6754, !tbaa !5430, !ctir !323
  %cmp96 = icmp ult i64 1, %72, !dbg !6755
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !6756

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !6757, !tbaa !2998
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !6758, !tbaa !2998
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !6759
  br i1 %call98, label %if.end103, label %if.then99, !dbg !6760

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6761, !tbaa !2998
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !6762, !ctir !253
  %76 = load i8, i8* %move_mode100, align 8, !dbg !6762, !tbaa !3417
  %tobool101 = trunc i8 %76 to i1, !dbg !6762, !ctir !120
  %lnot102 = xor i1 %tobool101, true, !dbg !6763
  store i1 %lnot102, i1* %retval, align 1, !dbg !6764
  br label %return, !dbg !6764

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !6765

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6766, !tbaa !2998
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !6766, !ctir !316
  %78 = load i32, i32* %st_mode105, align 8, !dbg !6766, !tbaa !3181, !ctir !133
  %and106 = and i32 %78, 61440, !dbg !6766
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !6766
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !6768

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6769, !tbaa !2998
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !6769, !ctir !316
  %80 = load i32, i32* %st_mode109, align 8, !dbg !6769, !tbaa !3181, !ctir !133
  %and110 = and i32 %80, 61440, !dbg !6769
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !6769
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !6770

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6771, !tbaa !2998
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !6771, !ctir !316
  %82 = load i64, i64* %st_ino113, align 8, !dbg !6771, !tbaa !3873, !ctir !228
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6771, !tbaa !2998
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !6771, !ctir !316
  %84 = load i64, i64* %st_ino114, align 8, !dbg !6771, !tbaa !3873, !ctir !228
  %cmp115 = icmp eq i64 %82, %84, !dbg !6771
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !6771

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6771, !tbaa !2998
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !6771, !ctir !316
  %86 = load i64, i64* %st_dev117, align 8, !dbg !6771, !tbaa !3876, !ctir !231
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6771, !tbaa !2998
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !6771, !ctir !316
  %88 = load i64, i64* %st_dev118, align 8, !dbg !6771, !tbaa !3876, !ctir !231
  %cmp119 = icmp eq i64 %86, %88, !dbg !6771
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !6774

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !6775
  br label %return, !dbg !6775

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6776, !tbaa !2998
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !6778, !ctir !253
  %90 = load i8, i8* %hard_link122, align 1, !dbg !6778, !tbaa !3410
  %tobool123 = trunc i8 %90 to i1, !dbg !6778, !ctir !120
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6779

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !6780, !tbaa !2998
  store i8 1, i8* %91, align 1, !dbg !6782, !tbaa !3109, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !6783
  br label %return, !dbg !6783

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !6784

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6785, !tbaa !2998
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !6787, !ctir !253
  %93 = load i8, i8* %move_mode127, align 8, !dbg !6787, !tbaa !3417
  %tobool128 = trunc i8 %93 to i1, !dbg !6787, !ctir !120
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !6788

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6789, !tbaa !2998
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !6789, !ctir !316
  %95 = load i32, i32* %st_mode130, align 8, !dbg !6789, !tbaa !3181, !ctir !133
  %and131 = and i32 %95, 61440, !dbg !6789
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !6789
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !6790

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6791, !tbaa !2998
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !6792, !ctir !316
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !6792, !tbaa !5430, !ctir !323
  %cmp135 = icmp ult i64 1, %97, !dbg !6793
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !6794

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !6795, metadata !DIExpression()), !dbg !6797
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !6798, !tbaa !2998
  %call137 = call i8* @canonicalize_file_name(i8* %98) #10, !dbg !6799
  store i8* %call137, i8** %abs_src, align 8, !dbg !6797, !tbaa !2998
  %99 = load i8*, i8** %abs_src, align 8, !dbg !6800, !tbaa !2998
  %tobool138 = icmp ne i8* %99, null, !dbg !6800
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !6802

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6803, metadata !DIExpression()), !dbg !6805
  %100 = load i8*, i8** %abs_src, align 8, !dbg !6806, !tbaa !2998
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !6807, !tbaa !2998
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !6808
  %lnot141 = xor i1 %call140, true, !dbg !6809
  %frombool142 = zext i1 %lnot141 to i8, !dbg !6805
  store i8 %frombool142, i8* %result, align 1, !dbg !6805, !tbaa !3109
  %102 = load i8*, i8** %abs_src, align 8, !dbg !6810, !tbaa !2998
  call void @free(i8* %102) #10, !dbg !6811
  %103 = load i8, i8* %result, align 1, !dbg !6812, !tbaa !3109
  %tobool143 = trunc i8 %103 to i1, !dbg !6812
  store i1 %tobool143, i1* %retval, align 1, !dbg !6813
  br label %return, !dbg !6813

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !6814

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6815, !tbaa !2998
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !6817, !ctir !253
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !6817, !tbaa !3488
  %tobool146 = trunc i8 %105 to i1, !dbg !6817, !ctir !120
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !6818

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6819, !tbaa !2998
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !6819, !ctir !316
  %107 = load i32, i32* %st_mode148, align 8, !dbg !6819, !tbaa !3181, !ctir !133
  %and149 = and i32 %107, 61440, !dbg !6819
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !6819
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !6820

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !6821
  br label %return, !dbg !6821

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6822, !tbaa !2998
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !6824, !ctir !253
  %109 = load i32, i32* %dereference153, align 4, !dbg !6824, !tbaa !3398, !ctir !76
  %cmp154 = icmp eq i32 %109, 2, !dbg !6825
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !6826

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6827, !tbaa !2998
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !6827, !ctir !316
  %111 = load i32, i32* %st_mode156, align 8, !dbg !6827, !tbaa !3181, !ctir !133
  %and157 = and i32 %111, 61440, !dbg !6827
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !6827
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !6830

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6831, !tbaa !2998
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !6832
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !6832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !6832, !tbaa.struct !6833
  br label %if.end165, !dbg !6834

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !6835, !tbaa !2998
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #10, !dbg !6837
  %cmp162 = icmp ne i32 %call161, 0, !dbg !6838
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !6839

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !6840
  br label %return, !dbg !6840

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6841, !tbaa !2998
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !6841, !ctir !316
  %117 = load i32, i32* %st_mode166, align 8, !dbg !6841, !tbaa !3181, !ctir !133
  %and167 = and i32 %117, 61440, !dbg !6841
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !6841
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !6843

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6844, !tbaa !2998
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !6845
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !6845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !6845, !tbaa.struct !6833
  br label %if.end175, !dbg !6846

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !6847, !tbaa !2998
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #10, !dbg !6849
  %cmp172 = icmp ne i32 %call171, 0, !dbg !6850
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !6851

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6852
  br label %return, !dbg !6852

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6853, !ctir !317
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6853, !tbaa !3873, !ctir !228
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6853, !ctir !317
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6853, !tbaa !3873, !ctir !228
  %cmp178 = icmp eq i64 %122, %123, !dbg !6853
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6853

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6853, !ctir !317
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6853, !tbaa !3876, !ctir !231
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6853, !ctir !317
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6853, !tbaa !3876, !ctir !231
  %cmp182 = icmp eq i64 %124, %125, !dbg !6853
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6855

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6856
  br label %return, !dbg !6856

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6857, !tbaa !2998
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6859, !ctir !253
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6859, !tbaa !3410
  %tobool186 = trunc i8 %127 to i1, !dbg !6859, !ctir !120
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6860

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6861, !tbaa !2998
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6861, !ctir !316
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6861, !tbaa !3181, !ctir !133
  %and189 = and i32 %129, 61440, !dbg !6861
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6861
  %lnot191 = xor i1 %cmp190, true, !dbg !6863
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6864, !tbaa !2998
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6865
  store i8 %frombool192, i8* %130, align 1, !dbg !6865, !tbaa !3109, !ctir !120
  store i1 true, i1* %retval, align 1, !dbg !6866
  br label %return, !dbg !6866

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6867

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6868
  br label %return, !dbg !6868

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6869
  ret i1 %131, !dbg !6869
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6870 !ctir !364 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6871, metadata !DIExpression()), !dbg !6872
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6873, metadata !DIExpression()), !dbg !6874
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6877, metadata !DIExpression()), !dbg !6878
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6879, metadata !DIExpression()), !dbg !6880
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6881, metadata !DIExpression()), !dbg !6882
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6883, !tbaa !2998
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6884, !tbaa !2998
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6885, !tbaa !3109
  %tobool = trunc i8 %2 to i1, !dbg !6885
  %3 = zext i1 %tobool to i64, !dbg !6885
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6885
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6886, !tbaa !3109
  %tobool3 = trunc i8 %4 to i1, !dbg !6886
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6887
  store i32 %call, i32* %err, align 4, !dbg !6882, !tbaa !2985
  %5 = load i32, i32* %err, align 4, !dbg !6888, !tbaa !2985
  %cmp = icmp slt i32 0, %5, !dbg !6890
  br i1 %cmp, label %if.then, label %if.end, !dbg !6891

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6892, !tbaa !2985
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.148, i64 0, i64 0)) #10, !dbg !6894
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6895, !tbaa !2998
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6895
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6896, !tbaa !2998
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6896
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6897
  store i1 false, i1* %retval, align 1, !dbg !6898
  br label %return, !dbg !6898

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6899, !tbaa !2985
  %cmp7 = icmp slt i32 %9, 0, !dbg !6901
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6902

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6903, !tbaa !3109
  %tobool8 = trunc i8 %10 to i1, !dbg !6903
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6904

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !6905
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6906, !tbaa !2998
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6906
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6907
  br label %if.end13, !dbg !6907

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6908
  br label %return, !dbg !6908

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6909
  ret i1 %12, !dbg !6909
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6910 !ctir !366 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6915, metadata !DIExpression()), !dbg !6916
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6917, !tbaa !2998
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6917, !ctir !253
  %1 = load i8, i8* %move_mode, align 8, !dbg !6917, !tbaa !3417
  %tobool = trunc i8 %1 to i1, !dbg !6917, !ctir !120
  br i1 %tobool, label %if.then, label %if.else, !dbg !6920

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6920

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.147, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 1782, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6917
  unreachable, !dbg !6917

if.end:                                           ; preds = %if.then
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6921, !tbaa !2998
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 2, !dbg !6922, !ctir !253
  %3 = load i32, i32* %interactive, align 8, !dbg !6922, !tbaa !3155, !ctir !83
  %cmp = icmp eq i32 %3, 2, !dbg !6923
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6924

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6925, !tbaa !2998
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 2, !dbg !6926, !ctir !253
  %5 = load i32, i32* %interactive1, align 8, !dbg !6926, !tbaa !3155, !ctir !83
  %cmp2 = icmp eq i32 %5, 3, !dbg !6927
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6928

lor.lhs.false:                                    ; preds = %lor.rhs
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6929, !tbaa !2998
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 2, !dbg !6930, !ctir !253
  %7 = load i32, i32* %interactive3, align 8, !dbg !6930, !tbaa !3155, !ctir !83
  %cmp4 = icmp eq i32 %7, 4, !dbg !6931
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6932

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6933, !tbaa !2998
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 32, !dbg !6934, !ctir !253
  %9 = load i8, i8* %stdin_tty, align 1, !dbg !6934, !tbaa !3501
  %tobool5 = trunc i8 %9 to i1, !dbg !6934, !ctir !120
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6935

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst_name.addr, align 8, !dbg !6936, !tbaa !2998
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6937, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !6938, !ctir !316
  %12 = load i32, i32* %st_mode, align 8, !dbg !6938, !tbaa !3181, !ctir !133
  %call = call zeroext i1 @writable_destination(i8* %10, i32 %12), !dbg !6939
  br i1 %call, label %land.end, label %land.rhs, !dbg !6940

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6941, !tbaa !2998
  %14 = load i8*, i8** %dst_name.addr, align 8, !dbg !6942, !tbaa !2998
  %15 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6943, !tbaa !2998
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %13, i8* %14, %struct.stat* %15), !dbg !6944
  %lnot = xor i1 %call7, true, !dbg !6945
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6946
  br label %lor.end, !dbg !6924

lor.end:                                          ; preds = %land.end, %if.end
  %17 = phi i1 [ true, %if.end ], [ %16, %land.end ]
  ret i1 %17, !dbg !6947
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6948 !ctir !366 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !370
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6949, metadata !DIExpression()), !dbg !6950
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6951, metadata !DIExpression()), !dbg !6952
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6955, !tbaa !2998
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6957, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6958, !ctir !316
  %2 = load i32, i32* %st_mode, align 8, !dbg !6958, !tbaa !3181, !ctir !133
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6959
  br i1 %call, label %if.else, label %if.then, !dbg !6960

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6961, metadata !DIExpression()), !dbg !6963
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6964, !tbaa !2998
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6965, !ctir !316
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6965, !tbaa !3181, !ctir !133
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6966
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6967
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6968, !ctir !370
  store i8 0, i8* %arrayidx, align 1, !dbg !6969, !tbaa !3660
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6970, !tbaa !2998
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6971, !tbaa !2998
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6972, !ctir !253
  %7 = load i8, i8* %move_mode, align 8, !dbg !6972, !tbaa !3417
  %tobool = trunc i8 %7 to i1, !dbg !6972, !ctir !120
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6973

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6974, !tbaa !2998
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6975, !ctir !253
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6975, !tbaa !3402
  %tobool2 = trunc i8 %9 to i1, !dbg !6975, !ctir !120
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6976

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6977, !tbaa !2998
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6978, !ctir !253
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6978, !tbaa !3406
  %tobool4 = trunc i8 %11 to i1, !dbg !6978, !ctir !120
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6979

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.144, i64 0, i64 0)) #10, !dbg !6980
  br label %cond.end, !dbg !6979

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.145, i64 0, i64 0)) #10, !dbg !6981
  br label %cond.end, !dbg !6979

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6979
  %12 = load i8*, i8** @program_name, align 8, !dbg !6982, !tbaa !2998
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6983, !tbaa !2998
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6983
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6984, !tbaa !2998
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6985, !ctir !316
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6985, !tbaa !3181, !ctir !133
  %and = and i32 %15, 4095, !dbg !6986
  %conv = zext i32 %and to i64, !dbg !6987
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6988, !ctir !370
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6989
  br label %if.end, !dbg !6990

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6991, !tbaa !2998
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.146, i64 0, i64 0)) #10, !dbg !6993
  %17 = load i8*, i8** @program_name, align 8, !dbg !6994, !tbaa !2998
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6995, !tbaa !2998
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6995
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6996
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6997
  ret i1 %call14, !dbg !6998
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot.106(i8* %file_name) #4 !dbg !6999 !ctir !200 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !7000, metadata !DIExpression()), !dbg !7001
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !7002, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !7002, !ctir !115
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7002, !tbaa !3660
  %conv = sext i8 %1 to i32, !dbg !7002
  %cmp = icmp eq i32 %conv, 46, !dbg !7004
  br i1 %cmp, label %if.then, label %if.else, !dbg !7005

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !7006, metadata !DIExpression()), !dbg !7008
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !7009, !tbaa !2998
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !7010, !tbaa !2998
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !7010, !ctir !115
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !7010, !tbaa !3660
  %conv3 = sext i8 %4 to i32, !dbg !7010
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !7011
  %conv5 = zext i1 %cmp4 to i32, !dbg !7011
  %add = add nsw i32 %conv5, 1, !dbg !7012
  %idxprom = sext i32 %add to i64, !dbg !7009
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !7009, !ctir !115
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !7009, !tbaa !3660
  store i8 %5, i8* %sep, align 1, !dbg !7008, !tbaa !3660
  %6 = load i8, i8* %sep, align 1, !dbg !7013, !tbaa !3660
  %tobool = icmp ne i8 %6, 0, !dbg !7013
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7014

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !7015, !tbaa !3660
  %conv7 = sext i8 %7 to i32, !dbg !7015
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !7015
  br label %lor.end, !dbg !7014

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !7016
  br label %return, !dbg !7016

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7017
  br label %return, !dbg !7017

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !7018
  ret i1 %9, !dbg !7018
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !7019 !ctir !407 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !55
  %dstbase = alloca i8*, align 8, !ctir !115
  %dstbaselen = alloca i64, align 8, !ctir !55
  %suffixlen = alloca i64, align 8, !ctir !55
  %dstlen = alloca i64, align 8, !ctir !55
  %dst_back = alloca i8*, align 8, !ctir !9
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !317
  %dst_back_status = alloca i32, align 4, !ctir !7
  store i8* %srcbase, i8** %srcbase.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7024, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !7026, metadata !DIExpression()), !dbg !7027
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !7028, !tbaa !2998
  %call = call i64 @strlen(i8* %0) #14, !dbg !7029
  store i64 %call, i64* %srcbaselen, align 8, !dbg !7027, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !7030, metadata !DIExpression()), !dbg !7031
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !7032, !tbaa !2998
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !7033
  store i8* %call1, i8** %dstbase, align 8, !dbg !7031, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !7034, metadata !DIExpression()), !dbg !7035
  %2 = load i8*, i8** %dstbase, align 8, !dbg !7036, !tbaa !2998
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !7037
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !7035, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !7038, metadata !DIExpression()), !dbg !7039
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7040, !tbaa !2998
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !7041
  store i64 %call3, i64* %suffixlen, align 8, !dbg !7039, !tbaa !3851
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !7042, !tbaa !3851
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !7044, !tbaa !3851
  %6 = load i64, i64* %suffixlen, align 8, !dbg !7045, !tbaa !3851
  %add = add i64 %5, %6, !dbg !7046
  %cmp = icmp eq i64 %4, %add, !dbg !7047
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !7048

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !7049, !tbaa !2998
  %8 = load i8*, i8** %dstbase, align 8, !dbg !7050, !tbaa !2998
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !7051, !tbaa !3851
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !7052
  %cmp5 = icmp eq i32 %call4, 0, !dbg !7053
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !7054

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !7055, !tbaa !2998
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !7055, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !7055
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7055, !tbaa !2998
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !7055
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7055
  br i1 %cmp8, label %if.end, label %if.then, !dbg !7056

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !7057
  br label %return, !dbg !7057

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !7058, metadata !DIExpression()), !dbg !7059
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !7060, !tbaa !2998
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !7061
  store i64 %call9, i64* %dstlen, align 8, !dbg !7059, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !7062, metadata !DIExpression()), !dbg !7063
  %14 = load i64, i64* %dstlen, align 8, !dbg !7064, !tbaa !3851
  %15 = load i64, i64* %suffixlen, align 8, !dbg !7065, !tbaa !3851
  %add10 = add i64 %14, %15, !dbg !7066
  %add11 = add i64 %add10, 1, !dbg !7067
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !7068
  store i8* %call12, i8** %dst_back, align 8, !dbg !7063, !tbaa !2998
  %16 = load i8*, i8** %dst_back, align 8, !dbg !7069, !tbaa !2998
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !7070, !tbaa !2998
  %18 = load i64, i64* %dstlen, align 8, !dbg !7071, !tbaa !3851
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #10, !dbg !7072
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7073, !tbaa !2998
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #10, !dbg !7074
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !7077, metadata !DIExpression()), !dbg !7078
  %20 = load i8*, i8** %dst_back, align 8, !dbg !7079, !tbaa !2998
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #10, !dbg !7080
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !7078, !tbaa !2985
  %21 = load i8*, i8** %dst_back, align 8, !dbg !7081, !tbaa !2998
  call void @free(i8* %21) #10, !dbg !7082
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !7083, !tbaa !2985
  %cmp16 = icmp eq i32 %22, 0, !dbg !7084
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !7085

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !7086, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !7086, !ctir !316
  %24 = load i64, i64* %st_ino, align 8, !dbg !7086, !tbaa !3873, !ctir !228
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !7086, !ctir !317
  %25 = load i64, i64* %st_ino17, align 8, !dbg !7086, !tbaa !3873, !ctir !228
  %cmp18 = icmp eq i64 %24, %25, !dbg !7086
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !7086

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !7086, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !7086, !ctir !316
  %27 = load i64, i64* %st_dev, align 8, !dbg !7086, !tbaa !3876, !ctir !231
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !7086, !ctir !317
  %28 = load i64, i64* %st_dev20, align 8, !dbg !7086, !tbaa !3876, !ctir !231
  %cmp21 = icmp eq i64 %27, %28, !dbg !7086
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !7087
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !7087
  store i1 %30, i1* %retval, align 1, !dbg !7088
  br label %return, !dbg !7088

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !7089
  ret i1 %31, !dbg !7089
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !7090 !ctir !409 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7091, metadata !DIExpression()), !dbg !7092
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7093, metadata !DIExpression()), !dbg !7094
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !7095, metadata !DIExpression()), !dbg !7096
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7097, !tbaa !2998
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !7097
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !7098, !tbaa !2998
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !7098
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.142, i64 0, i64 0), i8* %call, i8* %call1), !dbg !7099
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !7100, !tbaa !2998
  %tobool = icmp ne i8* %2, null, !dbg !7100
  br i1 %tobool, label %if.then, label %if.end, !dbg !7102

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.143, i64 0, i64 0)) #10, !dbg !7103
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !7104, !tbaa !2998
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !7104
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !7105
  br label %if.end, !dbg !7105

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !7106
  ret void, !dbg !7107
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #9 !dbg !7108 !ctir !411 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  br label %while.cond, !dbg !7113

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7114, !tbaa !2998
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !7115
  br i1 %cmp, label %while.body, label %while.end, !dbg !7113

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7116, !tbaa !2998
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !7119, !ctir !414
  %2 = load i64, i64* %ino, align 8, !dbg !7119, !tbaa !5843, !ctir !227
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7120, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !7121, !ctir !316
  %4 = load i64, i64* %st_ino, align 8, !dbg !7121, !tbaa !3873, !ctir !228
  %cmp1 = icmp eq i64 %2, %4, !dbg !7122
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !7123

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7124, !tbaa !2998
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !7125, !ctir !414
  %6 = load i64, i64* %dev, align 8, !dbg !7125, !tbaa !5848, !ctir !230
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7126, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !7127, !ctir !316
  %8 = load i64, i64* %st_dev, align 8, !dbg !7127, !tbaa !3876, !ctir !231
  %cmp2 = icmp eq i64 %6, %8, !dbg !7128
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7129

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !7130
  br label %return, !dbg !7130

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7131, !tbaa !2998
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !7132, !ctir !414
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !7132, !tbaa !5837, !ctir !350
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !7133, !tbaa !2998
  br label %while.cond, !dbg !7113, !llvm.loop !7134

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !7136
  br label %return, !dbg !7136

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !7137
  ret i1 %11, !dbg !7137
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !7138 !ctir !415 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !9
  %namep = alloca i8*, align 8, !ctir !9
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !254
  %ok = alloca i8, align 1, !ctir !120
  %new_first_dir_created = alloca i8, align 1, !ctir !120
  %local_copy_into_self = alloca i8, align 1, !ctir !120
  %src_name = alloca i8*, align 8, !ctir !9
  %dst_name = alloca i8*, align 8, !ctir !9
  %first_dir_created = alloca i8, align 1, !ctir !120
  store i8* %src_name_in, i8** %src_name_in.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7145, metadata !DIExpression()), !dbg !7146
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !7147, metadata !DIExpression()), !dbg !7148
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7149, metadata !DIExpression()), !dbg !7150
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !7151, metadata !DIExpression()), !dbg !7152
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !7153, metadata !DIExpression()), !dbg !7154
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !7155, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !7157, metadata !DIExpression()), !dbg !7158
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !7159, metadata !DIExpression()), !dbg !7160
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7161, !tbaa !2998
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !7162
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !7162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !7162, !tbaa.struct !7163
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7164, metadata !DIExpression()), !dbg !7165
  store i8 1, i8* %ok, align 1, !dbg !7165, !tbaa !3109
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7166, !tbaa !2998
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !7167
  store i8* %call, i8** %name_space, align 8, !dbg !7168, !tbaa !2998
  %4 = load i8*, i8** %name_space, align 8, !dbg !7169, !tbaa !2998
  %cmp = icmp eq i8* %4, null, !dbg !7171
  br i1 %cmp, label %if.then, label %if.end, !dbg !7172

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7173
  %5 = load i32, i32* %call1, align 4, !dbg !7173, !tbaa !2985, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.141, i64 0, i64 0)) #10, !dbg !7175
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7176, !tbaa !2998
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !7176
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !7177
  store i1 false, i1* %retval, align 1, !dbg !7178
  br label %return, !dbg !7178

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7179, !tbaa !2998
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !7181, !ctir !253
  %8 = load i32, i32* %dereference, align 4, !dbg !7181, !tbaa !3398, !ctir !76
  %cmp4 = icmp eq i32 %8, 3, !dbg !7182
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7183

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !7184, !ctir !254
  store i32 2, i32* %dereference6, align 4, !dbg !7185, !tbaa !3398, !ctir !76
  br label %if.end7, !dbg !7186

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !7187, metadata !DIExpression()), !dbg !7188
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !7188, !tbaa !3109
  %9 = load i8*, i8** %name_space, align 8, !dbg !7189, !tbaa !2998
  store i8* %9, i8** %namep, align 8, !dbg !7190, !tbaa !2998
  br label %while.cond, !dbg !7191

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !7192, !tbaa !2998
  %11 = load i8, i8* %10, align 1, !dbg !7193, !tbaa !3660, !ctir !10
  %conv = sext i8 %11 to i32, !dbg !7193
  %cmp8 = icmp ne i32 %conv, 0, !dbg !7194
  br i1 %cmp8, label %while.body, label %while.end, !dbg !7191

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !7195, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !7198, metadata !DIExpression()), !dbg !7199
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7200, !tbaa !2998
  %13 = load i8*, i8** %namep, align 8, !dbg !7201, !tbaa !2998
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !7202
  store i8* %call10, i8** %src_name, align 8, !dbg !7199, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !7203, metadata !DIExpression()), !dbg !7204
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !7205, !tbaa !2998
  %15 = load i8*, i8** %namep, align 8, !dbg !7206, !tbaa !2998
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !7207
  store i8* %call11, i8** %dst_name, align 8, !dbg !7204, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !7208, metadata !DIExpression()), !dbg !7209
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !7210, !tbaa !2998
  %17 = load i8, i8* %16, align 1, !dbg !7211, !tbaa !3109
  %tobool = trunc i8 %17 to i1, !dbg !7211, !ctir !120
  %frombool12 = zext i1 %tobool to i8, !dbg !7209
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !7209, !tbaa !3109
  %18 = load i8*, i8** %src_name, align 8, !dbg !7212, !tbaa !2998
  %19 = load i8*, i8** %dst_name, align 8, !dbg !7213, !tbaa !2998
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !7214, !tbaa !3109
  %tobool13 = trunc i8 %20 to i1, !dbg !7214
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7215, !tbaa !2998
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7216, !tbaa !2998
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !7217
  %conv15 = zext i1 %call14 to i32, !dbg !7217
  %23 = load i8, i8* %ok, align 1, !dbg !7218, !tbaa !3109
  %tobool16 = trunc i8 %23 to i1, !dbg !7218
  %conv17 = zext i1 %tobool16 to i32, !dbg !7218
  %and = and i32 %conv17, %conv15, !dbg !7218
  %tobool18 = icmp ne i32 %and, 0, !dbg !7218
  %frombool19 = zext i1 %tobool18 to i8, !dbg !7218
  store i8 %frombool19, i8* %ok, align 1, !dbg !7218, !tbaa !3109
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !7219, !tbaa !3109
  %tobool20 = trunc i8 %24 to i1, !dbg !7219
  %conv21 = zext i1 %tobool20 to i32, !dbg !7219
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !7220, !tbaa !2998
  %26 = load i8, i8* %25, align 1, !dbg !7221, !tbaa !3109
  %tobool22 = trunc i8 %26 to i1, !dbg !7221, !ctir !120
  %conv23 = zext i1 %tobool22 to i32, !dbg !7221
  %or = or i32 %conv23, %conv21, !dbg !7221
  %tobool24 = icmp ne i32 %or, 0, !dbg !7221
  %frombool25 = zext i1 %tobool24 to i8, !dbg !7221
  store i8 %frombool25, i8* %25, align 1, !dbg !7221, !tbaa !3109, !ctir !120
  %27 = load i8*, i8** %dst_name, align 8, !dbg !7222, !tbaa !2998
  call void @free(i8* %27) #10, !dbg !7223
  %28 = load i8*, i8** %src_name, align 8, !dbg !7224, !tbaa !2998
  call void @free(i8* %28) #10, !dbg !7225
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !7226, !tbaa !3109
  %tobool26 = trunc i8 %29 to i1, !dbg !7226
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7228

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !7229

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !7230, !tbaa !3109
  %tobool29 = trunc i8 %30 to i1, !dbg !7230
  %conv30 = zext i1 %tobool29 to i32, !dbg !7230
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !7231, !tbaa !3109
  %tobool31 = trunc i8 %31 to i1, !dbg !7231
  %conv32 = zext i1 %tobool31 to i32, !dbg !7231
  %or33 = or i32 %conv32, %conv30, !dbg !7231
  %tobool34 = icmp ne i32 %or33, 0, !dbg !7231
  %frombool35 = zext i1 %tobool34 to i8, !dbg !7231
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !7231, !tbaa !3109
  %32 = load i8*, i8** %namep, align 8, !dbg !7232, !tbaa !2998
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !7233
  %add = add i64 %call36, 1, !dbg !7234
  %33 = load i8*, i8** %namep, align 8, !dbg !7235, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !7235
  store i8* %add.ptr, i8** %namep, align 8, !dbg !7235, !tbaa !2998
  br label %while.cond, !dbg !7191, !llvm.loop !7236

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !7238, !tbaa !2998
  call void @free(i8* %34) #10, !dbg !7239
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !7240, !tbaa !3109
  %tobool37 = trunc i8 %35 to i1, !dbg !7240
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !7241, !tbaa !2998
  %frombool38 = zext i1 %tobool37 to i8, !dbg !7242
  store i8 %frombool38, i8* %36, align 1, !dbg !7242, !tbaa !3109, !ctir !120
  %37 = load i8, i8* %ok, align 1, !dbg !7243, !tbaa !3109
  %tobool39 = trunc i8 %37 to i1, !dbg !7243
  store i1 %tobool39, i1* %retval, align 1, !dbg !7244
  br label %return, !dbg !7244

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !7245
  ret i1 %38, !dbg !7245
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !7246 !ctir !417 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %buf_alloc = alloca i8*, align 8, !ctir !9
  %name_alloc = alloca i8*, align 8, !ctir !9
  %dest_desc = alloca i32, align 4, !ctir !7
  %dest_errno = alloca i32, align 4, !ctir !7
  %source_desc = alloca i32, align 4, !ctir !7
  %src_mode = alloca i32, align 4, !ctir !160
  %sb = alloca %struct.stat, align 8, !ctir !317
  %src_open_sb = alloca %struct.stat, align 8, !ctir !317
  %return_val = alloca i8, align 1, !ctir !120
  %data_copy_required = alloca i8, align 1, !ctir !120
  %open_flags = alloca i32, align 4, !ctir !7
  %open_flags72 = alloca i32, align 4, !ctir !7
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !317
  %clone_ok = alloca i8, align 1, !ctir !120
  %buf_alignment = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %hole_size = alloca i64, align 8, !ctir !55
  %make_holes = alloca i8, align 1, !ctir !120
  %sparse_src = alloca i8, align 1, !ctir !120
  %blcm_max = alloca i64, align 8, !ctir !55
  %blcm = alloca i64, align 8, !ctir !55
  %normal_copy_required = alloca i8, align 1, !ctir !120
  %n_read = alloca i64, align 8, !ctir !248
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !120
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !357
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !120
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7249, metadata !DIExpression()), !dbg !7250
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7251, metadata !DIExpression()), !dbg !7252
  store i32 %dst_mode, i32* %dst_mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !7255, metadata !DIExpression()), !dbg !7256
  store i8* %new_dst, i8** %new_dst.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !7257, metadata !DIExpression()), !dbg !7258
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7259, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7261, metadata !DIExpression()), !dbg !7262
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !7263, metadata !DIExpression()), !dbg !7264
  store i8* null, i8** %buf_alloc, align 8, !dbg !7264, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !7265, metadata !DIExpression()), !dbg !7266
  store i8* null, i8** %name_alloc, align 8, !dbg !7266, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !7267, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !7269, metadata !DIExpression()), !dbg !7270
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !7271, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !7273, metadata !DIExpression()), !dbg !7274
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7275, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7276, !ctir !316
  %1 = load i32, i32* %st_mode, align 8, !dbg !7276, !tbaa !3181, !ctir !133
  store i32 %1, i32* %src_mode, align 4, !dbg !7274, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7277, metadata !DIExpression()), !dbg !7278
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !7279, metadata !DIExpression()), !dbg !7280
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !7281, metadata !DIExpression()), !dbg !7282
  store i8 1, i8* %return_val, align 1, !dbg !7282, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !7283, metadata !DIExpression()), !dbg !7284
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7285, !tbaa !2998
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !7286, !ctir !253
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !7286, !tbaa !3460
  %tobool = trunc i8 %3 to i1, !dbg !7286, !ctir !120
  %frombool = zext i1 %tobool to i8, !dbg !7284
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !7284, !tbaa !3109
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !7287, !tbaa !2998
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7288, !tbaa !2998
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !7289, !ctir !253
  %6 = load i32, i32* %dereference, align 4, !dbg !7289, !tbaa !3398, !ctir !76
  %cmp = icmp eq i32 %6, 2, !dbg !7290
  %7 = zext i1 %cmp to i64, !dbg !7288
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !7288
  %or = or i32 0, %cond, !dbg !7291
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !7292
  store i32 %call, i32* %source_desc, align 4, !dbg !7293, !tbaa !2985
  %8 = load i32, i32* %source_desc, align 4, !dbg !7294, !tbaa !2985
  %cmp2 = icmp slt i32 %8, 0, !dbg !7296
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7297

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #15, !dbg !7298
  %9 = load i32, i32* %call3, align 4, !dbg !7298, !tbaa !2985, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.138, i64 0, i64 0)) #10, !dbg !7300
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !7301, !tbaa !2998
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !7301
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !7302
  store i1 false, i1* %retval, align 1, !dbg !7303
  br label %return, !dbg !7303

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !7304, !tbaa !2985
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #10, !dbg !7306
  %cmp7 = icmp ne i32 %call6, 0, !dbg !7307
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !7308

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #15, !dbg !7309
  %12 = load i32, i32* %call9, align 4, !dbg !7309, !tbaa !2985, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #10, !dbg !7311
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !7312, !tbaa !2998
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !7312
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !7313
  store i8 0, i8* %return_val, align 1, !dbg !7314, !tbaa !3109
  br label %close_src_desc, !dbg !7315

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7316, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !7316, !ctir !316
  %15 = load i64, i64* %st_ino, align 8, !dbg !7316, !tbaa !3873, !ctir !228
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !7316, !ctir !317
  %16 = load i64, i64* %st_ino13, align 8, !dbg !7316, !tbaa !3873, !ctir !228
  %cmp14 = icmp eq i64 %15, %16, !dbg !7316
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !7316

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7316, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !7316, !ctir !316
  %18 = load i64, i64* %st_dev, align 8, !dbg !7316, !tbaa !3876, !ctir !231
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !7316, !ctir !317
  %19 = load i64, i64* %st_dev15, align 8, !dbg !7316, !tbaa !3876, !ctir !231
  %cmp16 = icmp eq i64 %18, %19, !dbg !7316
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !7318

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.140, i64 0, i64 0)) #10, !dbg !7319
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !7321, !tbaa !2998
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !7321
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !7322
  store i8 0, i8* %return_val, align 1, !dbg !7323, !tbaa !3109
  br label %close_src_desc, !dbg !7324

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !7325, !tbaa !2998
  %22 = load i8, i8* %21, align 1, !dbg !7327, !tbaa !3109
  %tobool21 = trunc i8 %22 to i1, !dbg !7327, !ctir !120
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !7328

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !7329, metadata !DIExpression()), !dbg !7331
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7332, !tbaa !2998
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !7333, !ctir !253
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !7333, !tbaa !3460
  %tobool24 = trunc i8 %24 to i1, !dbg !7333, !ctir !120
  %25 = zext i1 %tobool24 to i64, !dbg !7332
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !7332
  %or26 = or i32 1, %cond25, !dbg !7334
  store i32 %or26, i32* %open_flags, align 4, !dbg !7331, !tbaa !2985
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !7335, !tbaa !2998
  %27 = load i32, i32* %open_flags, align 4, !dbg !7336, !tbaa !2985
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !7337
  store i32 %call27, i32* %dest_desc, align 4, !dbg !7338, !tbaa !2985
  %call28 = call i32* @__errno_location() #15, !dbg !7339
  %28 = load i32, i32* %call28, align 4, !dbg !7339, !tbaa !2985, !ctir !7
  store i32 %28, i32* %dest_errno, align 4, !dbg !7340, !tbaa !2985
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7341, !tbaa !2998
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !7343, !ctir !253
  %30 = load i8, i8* %set_security_context, align 1, !dbg !7343, !tbaa !3213
  %tobool29 = trunc i8 %30 to i1, !dbg !7343, !ctir !120
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !7344

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7345, !tbaa !2998
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !7346, !ctir !253
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !7346, !tbaa !3210
  %tobool30 = trunc i8 %32 to i1, !dbg !7346, !ctir !120
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !7347

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !7348, !tbaa !2985
  %cmp32 = icmp sle i32 0, %33, !dbg !7349
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !7350

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !7351, !tbaa !2998
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7354, !tbaa !2998
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !7355, !ctir !253
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !7355, !tbaa !3210
  %tobool35 = trunc i8 %36 to i1, !dbg !7355, !ctir !120
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7356, !tbaa !2998
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !7357
  br i1 %call36, label %if.end41, label %if.then37, !dbg !7358

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7359, !tbaa !2998
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !7362, !ctir !253
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !7362, !tbaa !3468
  %tobool38 = trunc i8 %39 to i1, !dbg !7362, !ctir !120
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !7363

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !7364, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7366

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !7367

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !7368

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !7369, !tbaa !2985
  %cmp43 = icmp slt i32 %40, 0, !dbg !7371
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !7372

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7373, !tbaa !2998
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !7374, !ctir !253
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !7374, !tbaa !3406
  %tobool45 = trunc i8 %42 to i1, !dbg !7374, !ctir !120
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !7375

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !7376, !tbaa !2998
  %call47 = call i32 @unlink(i8* %43) #10, !dbg !7379
  %cmp48 = icmp ne i32 %call47, 0, !dbg !7380
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !7381

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #15, !dbg !7382
  %44 = load i32, i32* %call50, align 4, !dbg !7382, !tbaa !2985, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #10, !dbg !7384
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !7385, !tbaa !2998
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !7385
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !7386
  store i8 0, i8* %return_val, align 1, !dbg !7387, !tbaa !3109
  br label %close_src_desc, !dbg !7388

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7389, !tbaa !2998
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !7391, !ctir !253
  %47 = load i8, i8* %verbose, align 2, !dbg !7391, !tbaa !3198
  %tobool54 = trunc i8 %47 to i1, !dbg !7391, !ctir !120
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !7392

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #10, !dbg !7393
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !7394, !tbaa !2998
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !7394
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !7395
  br label %if.end59, !dbg !7395

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !7396, !tbaa !2998
  store i8 1, i8* %49, align 1, !dbg !7397, !tbaa !3109, !ctir !120
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7398, !tbaa !2998
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !7400, !ctir !253
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !7400, !tbaa !3213
  %tobool61 = trunc i8 %51 to i1, !dbg !7400, !ctir !120
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !7401

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !7402, !tbaa !2998
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !7405, !tbaa !2998
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !7406, !tbaa !2985
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !7407, !tbaa !2998
  %56 = load i8, i8* %55, align 1, !dbg !7408, !tbaa !3109
  %tobool63 = trunc i8 %56 to i1, !dbg !7408, !ctir !120
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7409, !tbaa !2998
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !7410
  br i1 %call64, label %if.end66, label %if.then65, !dbg !7411

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !7412, !tbaa !3109
  br label %close_src_desc, !dbg !7414

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !7415

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !7416

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !7417

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !7418, !tbaa !2998
  %59 = load i8, i8* %58, align 1, !dbg !7420, !tbaa !3109
  %tobool70 = trunc i8 %59 to i1, !dbg !7420, !ctir !120
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !7421

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !7422

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !7423), !dbg !7425
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !7426, metadata !DIExpression()), !dbg !7427
  store i32 65, i32* %open_flags72, align 4, !dbg !7427, !tbaa !2985
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7428, !tbaa !2998
  %61 = load i32, i32* %open_flags72, align 4, !dbg !7429, !tbaa !2985
  %or73 = or i32 %61, 128, !dbg !7430
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !7431, !tbaa !2985
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7432, !tbaa !2985
  %neg = xor i32 %63, -1, !dbg !7433
  %and = and i32 %62, %neg, !dbg !7434
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !7435
  store i32 %call74, i32* %dest_desc, align 4, !dbg !7436, !tbaa !2985
  %call75 = call i32* @__errno_location() #15, !dbg !7437
  %64 = load i32, i32* %call75, align 4, !dbg !7437, !tbaa !2985, !ctir !7
  store i32 %64, i32* %dest_errno, align 4, !dbg !7438, !tbaa !2985
  %65 = load i32, i32* %dest_desc, align 4, !dbg !7439, !tbaa !2985
  %cmp76 = icmp slt i32 %65, 0, !dbg !7441
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !7442

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !7443, !tbaa !2985
  %cmp78 = icmp eq i32 %66, 17, !dbg !7444
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !7445

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7446, !tbaa !2998
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !7447, !ctir !253
  %68 = load i8, i8* %move_mode, align 8, !dbg !7447, !tbaa !3417
  %tobool80 = trunc i8 %68 to i1, !dbg !7447, !ctir !120
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !7448

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !7449, metadata !DIExpression()), !dbg !7451
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !7452, !tbaa !2998
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #10, !dbg !7454
  %cmp83 = icmp eq i32 %call82, 0, !dbg !7455
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !7456

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !7457, !ctir !317
  %70 = load i32, i32* %st_mode85, align 8, !dbg !7457, !tbaa !3181, !ctir !133
  %and86 = and i32 %70, 61440, !dbg !7457
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !7457
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !7458

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7459, !tbaa !2998
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !7462, !ctir !253
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !7462, !tbaa !3505
  %tobool89 = trunc i8 %72 to i1, !dbg !7462, !ctir !120
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !7463

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !7464, !tbaa !2998
  %74 = load i32, i32* %open_flags72, align 4, !dbg !7466, !tbaa !2985
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !7467, !tbaa !2985
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7468, !tbaa !2985
  %neg91 = xor i32 %76, -1, !dbg !7469
  %and92 = and i32 %75, %neg91, !dbg !7470
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !7471
  store i32 %call93, i32* %dest_desc, align 4, !dbg !7472, !tbaa !2985
  %call94 = call i32* @__errno_location() #15, !dbg !7473
  %77 = load i32, i32* %call94, align 4, !dbg !7473, !tbaa !2985, !ctir !7
  store i32 %77, i32* %dest_errno, align 4, !dbg !7474, !tbaa !2985
  br label %if.end97, !dbg !7475

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0)) #10, !dbg !7476
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !7478, !tbaa !2998
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !7478
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !7479
  store i8 0, i8* %return_val, align 1, !dbg !7480, !tbaa !3109
  br label %close_src_desc, !dbg !7481

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !7482

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !7483

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !7484, !tbaa !2985
  %cmp100 = icmp slt i32 %79, 0, !dbg !7486
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !7487

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !7488, !tbaa !2985
  %cmp102 = icmp eq i32 %80, 21, !dbg !7489
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !7490

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !7491, !tbaa !2998
  %82 = load i8, i8* %81, align 1, !dbg !7492, !tbaa !3660, !ctir !116
  %conv = sext i8 %82 to i32, !dbg !7492
  %tobool104 = icmp ne i32 %conv, 0, !dbg !7492
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !7493

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !7494, !tbaa !2998
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !7495, !tbaa !2998
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !7496
  %sub = sub i64 %call106, 1, !dbg !7497
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !7494, !ctir !115
  %85 = load i8, i8* %arrayidx, align 1, !dbg !7494, !tbaa !3660
  %conv107 = sext i8 %85 to i32, !dbg !7494
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !7498
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7499

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !7500, !tbaa !2985
  br label %if.end111, !dbg !7501

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !7502

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !7503, !tbaa !2985
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !7505, !tbaa !2985
  %cmp114 = icmp slt i32 %86, 0, !dbg !7507
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !7508

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !7509, !tbaa !2985
  %cmp117 = icmp eq i32 %87, 2, !dbg !7512
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !7513

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !7514, !tbaa !2998
  %89 = load i8, i8* %88, align 1, !dbg !7515, !tbaa !3109
  %tobool120 = trunc i8 %89 to i1, !dbg !7515, !ctir !120
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !7516

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7517, !tbaa !2998
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !7518, !ctir !253
  %91 = load i8, i8* %move_mode122, align 8, !dbg !7518, !tbaa !3417
  %tobool123 = trunc i8 %91 to i1, !dbg !7518, !ctir !120
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !7519

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !7520, !tbaa !2998
  store i8 1, i8* %92, align 1, !dbg !7522, !tbaa !3109, !ctir !120
  br label %open_with_O_CREAT, !dbg !7523

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !7524, !tbaa !2985
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i64 0, i64 0)) #10, !dbg !7525
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7526, !tbaa !2998
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7526
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !7527
  store i8 0, i8* %return_val, align 1, !dbg !7528, !tbaa !3109
  br label %close_src_desc, !dbg !7529

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !7530, !tbaa !2985
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #10, !dbg !7532
  %cmp130 = icmp ne i32 %call129, 0, !dbg !7533
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !7534

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #15, !dbg !7535
  %96 = load i32, i32* %call133, align 4, !dbg !7535, !tbaa !2985, !ctir !7
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #10, !dbg !7537
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !7538, !tbaa !2998
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !7538
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !7539
  store i8 0, i8* %return_val, align 1, !dbg !7540, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7541

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !7542, !tbaa !3109
  %tobool137 = trunc i8 %98 to i1, !dbg !7542
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !7544

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7545, !tbaa !2998
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !7546, !ctir !253
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !7546, !tbaa !3394, !ctir !95
  %tobool140 = icmp ne i32 %100, 0, !dbg !7545
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !7547

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !7548, metadata !DIExpression()), !dbg !7550
  %101 = load i32, i32* %dest_desc, align 4, !dbg !7551, !tbaa !2985
  %102 = load i32, i32* %source_desc, align 4, !dbg !7552, !tbaa !2985
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !7553
  %cmp143 = icmp eq i32 %call142, 0, !dbg !7554
  %frombool145 = zext i1 %cmp143 to i8, !dbg !7550
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !7550, !tbaa !3109
  %103 = load i8, i8* %clone_ok, align 1, !dbg !7555, !tbaa !3109
  %tobool146 = trunc i8 %103 to i1, !dbg !7555
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !7557

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7558, !tbaa !2998
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !7559, !ctir !253
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !7559, !tbaa !3394, !ctir !95
  %cmp150 = icmp eq i32 %105, 2, !dbg !7560
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !7561

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !7562, !tbaa !3109
  %tobool153 = trunc i8 %106 to i1, !dbg !7562
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !7565

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #15, !dbg !7566
  %107 = load i32, i32* %call155, align 4, !dbg !7566, !tbaa !2985, !ctir !7
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0)) #10, !dbg !7568
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !7569, !tbaa !2998
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !7569
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !7570, !tbaa !2998
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !7570
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !7571
  store i8 0, i8* %return_val, align 1, !dbg !7572, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7573

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !7574, !tbaa !3109
  br label %if.end160, !dbg !7575

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !7576

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !7577, !tbaa !3109
  %tobool162 = trunc i8 %110 to i1, !dbg !7577
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !7579

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !7580, metadata !DIExpression()), !dbg !7582
  %call164 = call i32 @getpagesize() #15, !dbg !7583
  %conv165 = sext i32 %call164 to i64, !dbg !7583
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !7582, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !7584, metadata !DIExpression()), !dbg !7585
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !7586
  store i64 %call166, i64* %buf_size, align 8, !dbg !7585, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !7587, metadata !DIExpression()), !dbg !7588
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7589, !ctir !317
  %111 = load i64, i64* %st_blksize, align 8, !dbg !7589, !tbaa !7590, !ctir !333
  %cmp167 = icmp slt i64 0, %111, !dbg !7589
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !7589

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7589, !ctir !317
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !7589, !tbaa !7590, !ctir !333
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !7589
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !7589

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7589, !ctir !317
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !7589, !tbaa !7590, !ctir !333
  br label %cond.end, !dbg !7589

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !7589

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !7589
  store i64 %cond174, i64* %hole_size, align 8, !dbg !7588, !tbaa !3851
  %114 = load i32, i32* %source_desc, align 4, !dbg !7591, !tbaa !2985
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !7592
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !7593, metadata !DIExpression()), !dbg !7594
  store i8 0, i8* %make_holes, align 1, !dbg !7594, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !7595, metadata !DIExpression()), !dbg !7596
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !7597
  %frombool176 = zext i1 %call175 to i8, !dbg !7596
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !7596, !tbaa !3109
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7598, !ctir !317
  %115 = load i32, i32* %st_mode177, align 8, !dbg !7598, !tbaa !3181, !ctir !133
  %and178 = and i32 %115, 61440, !dbg !7598
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !7598
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !7600

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7601, !tbaa !2998
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !7604, !ctir !253
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !7604, !tbaa !3484, !ctir !89
  %cmp182 = icmp eq i32 %117, 3, !dbg !7605
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !7606

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !7607, !tbaa !3109
  br label %if.end185, !dbg !7608

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7609, !tbaa !2998
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !7611, !ctir !253
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !7611, !tbaa !3484, !ctir !89
  %cmp187 = icmp eq i32 %119, 2, !dbg !7612
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !7613

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !7614, !tbaa !3109
  %tobool190 = trunc i8 %120 to i1, !dbg !7614
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !7615

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !7616, !tbaa !3109
  br label %if.end193, !dbg !7617

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !7618

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !7619, !tbaa !3109
  %tobool195 = trunc i8 %121 to i1, !dbg !7619
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !7621

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !7622, metadata !DIExpression()), !dbg !7624
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !7625, !tbaa !3851
  %sub197 = sub i64 9223372036854775807, %122, !dbg !7626
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !7624, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !7627, metadata !DIExpression()), !dbg !7628
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !7629
  %123 = load i64, i64* %buf_size, align 8, !dbg !7630, !tbaa !3851
  %124 = load i64, i64* %blcm_max, align 8, !dbg !7631, !tbaa !3851
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #15, !dbg !7632
  store i64 %call199, i64* %blcm, align 8, !dbg !7628, !tbaa !3851
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !7633, !ctir !317
  %125 = load i32, i32* %st_mode200, align 8, !dbg !7633, !tbaa !3181, !ctir !133
  %and201 = and i32 %125, 61440, !dbg !7633
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !7633
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !7635

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7636, !ctir !317
  %126 = load i64, i64* %st_size, align 8, !dbg !7636, !tbaa !4519, !ctir !29
  %127 = load i64, i64* %buf_size, align 8, !dbg !7637, !tbaa !3851
  %cmp205 = icmp ult i64 %126, %127, !dbg !7638
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !7639

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7640, !ctir !317
  %128 = load i64, i64* %st_size208, align 8, !dbg !7640, !tbaa !4519, !ctir !29
  %add = add nsw i64 %128, 1, !dbg !7641
  store i64 %add, i64* %buf_size, align 8, !dbg !7642, !tbaa !3851
  br label %if.end209, !dbg !7643

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !7644, !tbaa !3851
  %sub210 = sub i64 %129, 1, !dbg !7645
  %130 = load i64, i64* %buf_size, align 8, !dbg !7646, !tbaa !3851
  %add211 = add i64 %130, %sub210, !dbg !7646
  store i64 %add211, i64* %buf_size, align 8, !dbg !7646, !tbaa !3851
  %131 = load i64, i64* %buf_size, align 8, !dbg !7647, !tbaa !3851
  %132 = load i64, i64* %blcm, align 8, !dbg !7648, !tbaa !3851
  %rem = urem i64 %131, %132, !dbg !7649
  %133 = load i64, i64* %buf_size, align 8, !dbg !7650, !tbaa !3851
  %sub212 = sub i64 %133, %rem, !dbg !7650
  store i64 %sub212, i64* %buf_size, align 8, !dbg !7650, !tbaa !3851
  %134 = load i64, i64* %buf_size, align 8, !dbg !7651, !tbaa !3851
  %cmp213 = icmp eq i64 %134, 0, !dbg !7653
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !7654

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !7655, !tbaa !3851
  %136 = load i64, i64* %buf_size, align 8, !dbg !7656, !tbaa !3851
  %cmp216 = icmp ult i64 %135, %136, !dbg !7657
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !7658

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !7659, !tbaa !3851
  store i64 %137, i64* %buf_size, align 8, !dbg !7660, !tbaa !3851
  br label %if.end219, !dbg !7661

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !7662

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !7663, !tbaa !3851
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !7664, !tbaa !3851
  %add221 = add i64 %138, %139, !dbg !7665
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !7666
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !7667, !tbaa !2998
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !7668, !tbaa !2998
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !7669, !tbaa !3851
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !7670
  store i8* %call223, i8** %buf, align 8, !dbg !7671, !tbaa !2998
  %142 = load i8, i8* %sparse_src, align 1, !dbg !7672, !tbaa !3109
  %tobool224 = trunc i8 %142 to i1, !dbg !7672
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !7674

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !7675, metadata !DIExpression()), !dbg !7677
  %143 = load i32, i32* %source_desc, align 4, !dbg !7678, !tbaa !2985
  %144 = load i32, i32* %dest_desc, align 4, !dbg !7680, !tbaa !2985
  %145 = load i8*, i8** %buf, align 8, !dbg !7681, !tbaa !2998
  %146 = load i64, i64* %buf_size, align 8, !dbg !7682, !tbaa !3851
  %147 = load i64, i64* %hole_size, align 8, !dbg !7683, !tbaa !3851
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7684, !ctir !317
  %148 = load i64, i64* %st_size226, align 8, !dbg !7684, !tbaa !4519, !ctir !29
  %149 = load i8, i8* %make_holes, align 1, !dbg !7685, !tbaa !3109
  %tobool227 = trunc i8 %149 to i1, !dbg !7685
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !7685

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7686, !tbaa !2998
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !7687, !ctir !253
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !7687, !tbaa !3484, !ctir !89
  br label %cond.end232, !dbg !7685

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !7685

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !7685
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !7688, !tbaa !2998
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !7689, !tbaa !2998
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !7690
  br i1 %call234, label %if.then235, label %if.end236, !dbg !7691

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !7692

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !7693, !tbaa !3109
  %tobool237 = trunc i8 %154 to i1, !dbg !7693
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !7695

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !7696, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7698

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !7699

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7702, metadata !DIExpression()), !dbg !7703
  %155 = load i32, i32* %source_desc, align 4, !dbg !7704, !tbaa !2985
  %156 = load i32, i32* %dest_desc, align 4, !dbg !7706, !tbaa !2985
  %157 = load i8*, i8** %buf, align 8, !dbg !7707, !tbaa !2998
  %158 = load i64, i64* %buf_size, align 8, !dbg !7708, !tbaa !3851
  %159 = load i8, i8* %make_holes, align 1, !dbg !7709, !tbaa !3109
  %tobool241 = trunc i8 %159 to i1, !dbg !7709
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !7709

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !7710, !tbaa !3851
  br label %cond.end245, !dbg !7709

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !7709

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !7709
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7711, !tbaa !2998
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !7712, !ctir !253
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !7712, !tbaa !3484, !ctir !89
  %cmp248 = icmp eq i32 %162, 3, !dbg !7713
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !7714, !tbaa !2998
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !7715, !tbaa !2998
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !7716
  br i1 %call250, label %if.else252, label %if.then251, !dbg !7717

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !7718, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7720

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7721, !tbaa !3109
  %tobool253 = trunc i8 %165 to i1, !dbg !7721
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !7723

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !7724, !tbaa !2985
  %167 = load i64, i64* %n_read, align 8, !dbg !7725, !tbaa !3851
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #10, !dbg !7726
  %cmp257 = icmp slt i32 %call256, 0, !dbg !7727
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !7728

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #15, !dbg !7729
  %168 = load i32, i32* %call260, align 4, !dbg !7729, !tbaa !2985, !ctir !7
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !7731
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !7732, !tbaa !2998
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !7732
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !7733
  store i8 0, i8* %return_val, align 1, !dbg !7734, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7735

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !7736

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !7577

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !7737), !dbg !7738
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7739, !tbaa !2998
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !7741, !ctir !253
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !7741, !tbaa !3441
  %tobool266 = trunc i8 %171 to i1, !dbg !7741, !ctir !120
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !7742

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !7743, metadata !DIExpression()), !dbg !7745
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7746, !ctir !357
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7747, !tbaa !2998
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !7748
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !7748
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !7748
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !7748
  store i64 %175, i64* %174, align 8, !dbg !7748
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !7748
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !7748
  store i64 %177, i64* %176, align 8, !dbg !7748
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !7748
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !7748
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !7748, !tbaa.struct !6331
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !7749, !ctir !357
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7750, !tbaa !2998
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !7751
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !7751
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !7751
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !7751
  store i64 %183, i64* %182, align 8, !dbg !7751
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !7751
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !7751
  store i64 %185, i64* %184, align 8, !dbg !7751
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !7751
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !7751
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !7751, !tbaa.struct !6331
  %188 = load i32, i32* %dest_desc, align 4, !dbg !7752, !tbaa !2985
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !7754, !tbaa !2998
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7755
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !7756
  %cmp274 = icmp ne i32 %call273, 0, !dbg !7757
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !7758

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #15, !dbg !7759
  %190 = load i32, i32* %call277, align 4, !dbg !7759, !tbaa !2985, !ctir !7
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #10, !dbg !7761
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !7762, !tbaa !2998
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !7762
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !7763
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7764, !tbaa !2998
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !7766, !ctir !253
  %193 = load i8, i8* %require_preserve, align 4, !dbg !7766, !tbaa !3464
  %tobool280 = trunc i8 %193 to i1, !dbg !7766, !ctir !120
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !7767

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !7768, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7770

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !7771

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !7772

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7773, !tbaa !2998
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !7775, !ctir !253
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !7775, !tbaa !3429
  %tobool285 = trunc i8 %195 to i1, !dbg !7775, !ctir !120
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !7776

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7777, !tbaa !2998
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !7777, !ctir !316
  %197 = load i32, i32* %st_uid, align 4, !dbg !7777, !tbaa !6233, !ctir !326
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !7777, !ctir !317
  %198 = load i32, i32* %st_uid288, align 4, !dbg !7777, !tbaa !6233, !ctir !326
  %cmp289 = icmp eq i32 %197, %198, !dbg !7777
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !7777

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7777, !tbaa !2998
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !7777, !ctir !316
  %200 = load i32, i32* %st_gid, align 8, !dbg !7777, !tbaa !6235, !ctir !328
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !7777, !ctir !317
  %201 = load i32, i32* %st_gid292, align 8, !dbg !7777, !tbaa !6235, !ctir !328
  %cmp293 = icmp eq i32 %200, %201, !dbg !7777
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !7778

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7779, !tbaa !2998
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !7781, !tbaa !2998
  %204 = load i32, i32* %dest_desc, align 4, !dbg !7782, !tbaa !2985
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7783, !tbaa !2998
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !7784, !tbaa !2998
  %207 = load i8, i8* %206, align 1, !dbg !7785, !tbaa !3109
  %tobool296 = trunc i8 %207 to i1, !dbg !7785, !ctir !120
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !7786
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !7787

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !7788, !tbaa !3109
  br label %close_src_and_dst_desc, !dbg !7790

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !7791, !tbaa !2985
  %and299 = and i32 %208, -3585, !dbg !7791
  store i32 %and299, i32* %src_mode, align 4, !dbg !7791, !tbaa !2985
  br label %sw.epilog, !dbg !7792

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !7793

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7794, !tbaa !2998
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !7796, !ctir !253
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !7796, !tbaa !3472
  %tobool301 = trunc i8 %210 to i1, !dbg !7796, !ctir !120
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !7797

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !7798, metadata !DIExpression()), !dbg !7800
  store i8 0, i8* %access_changed, align 1, !dbg !7800, !tbaa !3109
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7801, !ctir !317
  %211 = load i32, i32* %st_mode303, align 8, !dbg !7801, !tbaa !3181, !ctir !133
  %and304 = and i32 %211, 128, !dbg !7803
  %tobool305 = icmp ne i32 %and304, 0, !dbg !7803
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !7804

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #10, !dbg !7805
  %cmp308 = icmp ne i32 %call307, 0, !dbg !7806
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !7807

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !7808, !tbaa !2985
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !7810, !tbaa !2998
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !7811
  %cmp312 = icmp eq i32 %call311, 0, !dbg !7812
  %frombool314 = zext i1 %cmp312 to i8, !dbg !7813
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !7813, !tbaa !3109
  br label %if.end315, !dbg !7814

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !7815, !tbaa !2998
  %215 = load i32, i32* %source_desc, align 4, !dbg !7817, !tbaa !2985
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !7818, !tbaa !2998
  %217 = load i32, i32* %dest_desc, align 4, !dbg !7819, !tbaa !2985
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7820, !tbaa !2998
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !7821
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !7822

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7823, !tbaa !2998
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !7824, !ctir !253
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7824, !tbaa !3476
  %tobool318 = trunc i8 %220 to i1, !dbg !7824, !ctir !120
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !7825

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !7826, !tbaa !3109
  br label %if.end321, !dbg !7827

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !7828, !tbaa !3109
  %tobool322 = trunc i8 %221 to i1, !dbg !7828
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !7830

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !7831, !tbaa !2985
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !7832, !tbaa !2998
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !7833, !tbaa !2985
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7834, !tbaa !2985
  %neg324 = xor i32 %225, -1, !dbg !7835
  %and325 = and i32 %224, %neg324, !dbg !7836
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !7837
  br label %if.end327, !dbg !7837

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7838

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7839, !tbaa !2998
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7840, !tbaa !2985
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7841, !tbaa !2998
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7842
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7843, !tbaa !2998
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7845, !ctir !253
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7845, !tbaa !3437
  %tobool329 = trunc i8 %230 to i1, !dbg !7845, !ctir !120
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7846

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7847, !tbaa !2998
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7848, !ctir !253
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7848, !tbaa !3417
  %tobool333 = trunc i8 %232 to i1, !dbg !7848, !ctir !120
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7849

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7850, !tbaa !2998
  %234 = load i32, i32* %source_desc, align 4, !dbg !7853, !tbaa !2985
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7854, !tbaa !2998
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7855, !tbaa !2985
  %237 = load i32, i32* %src_mode, align 4, !dbg !7856, !tbaa !2985
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7857
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7858
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7859

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7860, !tbaa !2998
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7861, !ctir !253
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7861, !tbaa !3464
  %tobool341 = trunc i8 %239 to i1, !dbg !7861, !ctir !120
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7862

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7863, !tbaa !3109
  br label %if.end344, !dbg !7864

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7865

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7866, !tbaa !2998
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7868, !ctir !253
  %241 = load i8, i8* %set_mode, align 1, !dbg !7868, !tbaa !3492
  %tobool346 = trunc i8 %241 to i1, !dbg !7868, !ctir !120
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7869

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7870, !tbaa !2998
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7873, !tbaa !2985
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7874, !tbaa !2998
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7875, !ctir !253
  %245 = load i32, i32* %mode, align 8, !dbg !7875, !tbaa !3496, !ctir !160
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7876
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7877
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7878

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7879, !tbaa !3109
  br label %if.end352, !dbg !7880

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7881

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7882, !tbaa !2998
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7884, !ctir !253
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7884, !tbaa !3445
  %tobool354 = trunc i8 %247 to i1, !dbg !7884, !ctir !120
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7885

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7886, !tbaa !2998
  %249 = load i8, i8* %248, align 1, !dbg !7887, !tbaa !3109
  %tobool357 = trunc i8 %249 to i1, !dbg !7887, !ctir !120
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7888

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7889, !tbaa !2998
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7892, !tbaa !2985
  %call360 = call i32 @cached_umask(), !dbg !7893
  %neg361 = xor i32 %call360, -1, !dbg !7894
  %and362 = and i32 438, %neg361, !dbg !7895
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7896
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7897
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7898

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7899, !tbaa !3109
  br label %if.end367, !dbg !7900

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7901

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7902, !tbaa !2985
  %tobool369 = icmp ne i32 %252, 0, !dbg !7902
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7904

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7905
  %neg372 = xor i32 %call371, -1, !dbg !7907
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7908, !tbaa !2985
  %and373 = and i32 %253, %neg372, !dbg !7908
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7908, !tbaa !2985
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7909, !tbaa !2985
  %tobool374 = icmp ne i32 %254, 0, !dbg !7909
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7911

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7912, !tbaa !2985
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7913, !tbaa !2998
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7914, !tbaa !2985
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7915
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7916
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7917

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #15, !dbg !7918
  %258 = load i32, i32* %call380, align 4, !dbg !7918, !tbaa !2985, !ctir !7
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #10, !dbg !7920
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7921, !tbaa !2998
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7921
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7922
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7923, !tbaa !2998
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7925, !ctir !253
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7925, !tbaa !3464
  %tobool384 = trunc i8 %261 to i1, !dbg !7925, !ctir !120
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7926

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7927, !tbaa !3109
  br label %if.end386, !dbg !7928

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7929

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7930

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7848

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7931), !dbg !7932
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7933, !tbaa !2985
  %call392 = call i32 @close(i32 %262), !dbg !7935
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7936
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7937

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #15, !dbg !7938
  %263 = load i32, i32* %call396, align 4, !dbg !7938, !tbaa !2985, !ctir !7
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !7940
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7941, !tbaa !2998
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7941
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7942
  store i8 0, i8* %return_val, align 1, !dbg !7943, !tbaa !3109
  br label %if.end399, !dbg !7944

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7945

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7946), !dbg !7947
  %265 = load i32, i32* %source_desc, align 4, !dbg !7948, !tbaa !2985
  %call400 = call i32 @close(i32 %265), !dbg !7950
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7951
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7952

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #15, !dbg !7953
  %266 = load i32, i32* %call404, align 4, !dbg !7953, !tbaa !2985, !ctir !7
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #10, !dbg !7955
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7956, !tbaa !2998
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7956
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7957
  store i8 0, i8* %return_val, align 1, !dbg !7958, !tbaa !3109
  br label %if.end407, !dbg !7959

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7960, !tbaa !2998
  call void @free(i8* %268) #10, !dbg !7961
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7962, !tbaa !2998
  call void @free(i8* %269) #10, !dbg !7963
  %270 = load i8, i8* %return_val, align 1, !dbg !7964, !tbaa !3109
  %tobool408 = trunc i8 %270 to i1, !dbg !7964
  store i1 %tobool408, i1* %retval, align 1, !dbg !7965
  br label %return, !dbg !7965

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7966
  ret i1 %271, !dbg !7966
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7967 !ctir !134 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7968
  %cmp = icmp ne i32 %call, 0, !dbg !7970
  br i1 %cmp, label %if.then, label %if.end, !dbg !7971

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7972
  %0 = load i32, i32* %call1, align 4, !dbg !7972, !tbaa !2985, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75, i64 0, i64 0)) #10, !dbg !7972
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7972
  unreachable, !dbg !7972

if.end:                                           ; preds = %entry
  ret void, !dbg !7973
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #9 !dbg !7974 !ctir !303 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7975, metadata !DIExpression()), !dbg !7976
  %call = call i32* @__errno_location() #15, !dbg !7977
  %0 = load i32, i32* %call, align 4, !dbg !7977, !tbaa !2985, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7978
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7979

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7980
  %1 = load i32, i32* %call1, align 4, !dbg !7980, !tbaa !2985, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7981
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7982

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7983, !tbaa !2998
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7984, !ctir !253
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7984, !tbaa !7985
  %tobool = trunc i8 %3 to i1, !dbg !7984, !ctir !120
  %lnot = xor i1 %tobool, true, !dbg !7986
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7987
  ret i1 %4, !dbg !7988
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7989 !ctir !471 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7990, metadata !DIExpression()), !dbg !7991
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7992, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7994, metadata !DIExpression()), !dbg !7995
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7996, !tbaa !2998
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7997, !tbaa !2998
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7998
  store i32 %call, i32* %err, align 4, !dbg !7995, !tbaa !2985
  %2 = load i32, i32* %err, align 4, !dbg !7999, !tbaa !2985
  %tobool = icmp ne i32 %2, 0, !dbg !7999
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8001

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8002
  %3 = load i32, i32* %call1, align 4, !dbg !8002, !tbaa !2985, !ctir !7
  %cmp = icmp eq i32 %3, 38, !dbg !8003
  br i1 %cmp, label %if.then, label %if.end, !dbg !8004

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !8005, !tbaa !2985
  br label %if.end, !dbg !8006

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !8007, !tbaa !2985
  ret i32 %4, !dbg !8008
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !8009 !ctir !475 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !477
  %gid = alloca i32, align 4, !ctir !478
  %old_mode = alloca i32, align 4, !ctir !160
  %new_mode = alloca i32, align 4, !ctir !160
  %restrictive_temp_mode = alloca i32, align 4, !ctir !160
  %saved_errno = alloca i32, align 4, !ctir !7
  %__x = alloca i32, align 4, !ctir !7
  %saved_errno54 = alloca i32, align 4, !ctir !7
  %__x56 = alloca i32, align 4, !ctir !7
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8010, metadata !DIExpression()), !dbg !8011
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8012, metadata !DIExpression()), !dbg !8013
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !8014, metadata !DIExpression()), !dbg !8015
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !8016, metadata !DIExpression()), !dbg !8017
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !8018, metadata !DIExpression()), !dbg !8019
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !8020, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !8022, metadata !DIExpression()), !dbg !8023
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8024, !tbaa !2998
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !8025, !ctir !316
  %1 = load i32, i32* %st_uid, align 4, !dbg !8025, !tbaa !6233, !ctir !326
  store i32 %1, i32* %uid, align 4, !dbg !8023, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !8026, metadata !DIExpression()), !dbg !8027
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8028, !tbaa !2998
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !8029, !ctir !316
  %3 = load i32, i32* %st_gid, align 8, !dbg !8029, !tbaa !6235, !ctir !328
  store i32 %3, i32* %gid, align 4, !dbg !8027, !tbaa !2985
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !8030, !tbaa !3109
  %tobool = trunc i8 %4 to i1, !dbg !8030
  br i1 %tobool, label %if.end20, label %land.lhs.true, !dbg !8032

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8033, !tbaa !2998
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !8034, !ctir !253
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !8034, !tbaa !3437
  %tobool1 = trunc i8 %6 to i1, !dbg !8034, !ctir !120
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !8035

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8036, !tbaa !2998
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !8037, !ctir !253
  %8 = load i8, i8* %move_mode, align 8, !dbg !8037, !tbaa !3417
  %tobool2 = trunc i8 %8 to i1, !dbg !8037, !ctir !120
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !8038

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8039, !tbaa !2998
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !8040, !ctir !253
  %10 = load i8, i8* %set_mode, align 1, !dbg !8040, !tbaa !3492
  %tobool4 = trunc i8 %10 to i1, !dbg !8040, !ctir !120
  br i1 %tobool4, label %if.then, label %if.end20, !dbg !8041

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !8042, metadata !DIExpression()), !dbg !8044
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !8045, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !8046, !ctir !316
  %12 = load i32, i32* %st_mode, align 8, !dbg !8046, !tbaa !3181, !ctir !133
  store i32 %12, i32* %old_mode, align 4, !dbg !8044, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !8047, metadata !DIExpression()), !dbg !8048
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8049, !tbaa !2998
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !8050, !ctir !253
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !8050, !tbaa !3437
  %tobool6 = trunc i8 %14 to i1, !dbg !8050, !ctir !120
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !8051

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8052, !tbaa !2998
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !8053, !ctir !253
  %16 = load i8, i8* %move_mode8, align 8, !dbg !8053, !tbaa !3417
  %tobool9 = trunc i8 %16 to i1, !dbg !8053, !ctir !120
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !8049

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8054, !tbaa !2998
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !8055, !ctir !316
  %18 = load i32, i32* %st_mode10, align 8, !dbg !8055, !tbaa !3181, !ctir !133
  br label %cond.end, !dbg !8049

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8056, !tbaa !2998
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !8057, !ctir !253
  %20 = load i32, i32* %mode, align 8, !dbg !8057, !tbaa !3496, !ctir !160
  br label %cond.end, !dbg !8049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !8049
  store i32 %cond, i32* %new_mode, align 4, !dbg !8048, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !8058, metadata !DIExpression()), !dbg !8059
  %21 = load i32, i32* %old_mode, align 4, !dbg !8060, !tbaa !2985
  %22 = load i32, i32* %new_mode, align 4, !dbg !8061, !tbaa !2985
  %and = and i32 %21, %22, !dbg !8062
  %and11 = and i32 %and, 448, !dbg !8063
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !8059, !tbaa !2985
  %23 = load i8*, i8** %dst_name.addr, align 8, !dbg !8064, !tbaa !2998
  %24 = load i32, i32* %dest_desc.addr, align 4, !dbg !8066, !tbaa !2985
  %25 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !8067, !tbaa !2985
  %call = call i32 @qset_acl(i8* %23, i32 %24, i32 %25), !dbg !8068
  %cmp = icmp ne i32 %call, 0, !dbg !8069
  br i1 %cmp, label %if.then12, label %if.end19, !dbg !8070

if.then12:                                        ; preds = %cond.end
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8071, !tbaa !2998
  %call13 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %26), !dbg !8074
  br i1 %call13, label %if.end, label %if.then14, !dbg !8075

if.then14:                                        ; preds = %if.then12
  %call15 = call i32* @__errno_location() #15, !dbg !8076
  %27 = load i32, i32* %call15, align 4, !dbg !8076, !tbaa !2985, !ctir !7
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0)) #10, !dbg !8077
  %28 = load i8*, i8** %dst_name.addr, align 8, !dbg !8078, !tbaa !2998
  %call17 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !8078
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call16, i8* %call17), !dbg !8079
  br label %if.end, !dbg !8079

if.end:                                           ; preds = %if.then14, %if.then12
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8080, !tbaa !2998
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 21, !dbg !8081, !ctir !253
  %30 = load i8, i8* %require_preserve, align 4, !dbg !8081, !tbaa !3464
  %tobool18 = trunc i8 %30 to i1, !dbg !8081, !ctir !120
  %conv = zext i1 %tobool18 to i32, !dbg !8080
  %sub = sub nsw i32 0, %conv, !dbg !8082
  store i32 %sub, i32* %retval, align 4, !dbg !8083
  br label %return, !dbg !8083

if.end19:                                         ; preds = %cond.end
  br label %if.end20, !dbg !8084

if.end20:                                         ; preds = %if.end19, %lor.lhs.false3, %entry
  %31 = load i32, i32* %dest_desc.addr, align 4, !dbg !8085, !tbaa !2985
  %cmp21 = icmp ne i32 %31, -1, !dbg !8087
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !8088

if.then23:                                        ; preds = %if.end20
  %32 = load i32, i32* %dest_desc.addr, align 4, !dbg !8089, !tbaa !2985
  %33 = load i32, i32* %uid, align 4, !dbg !8092, !tbaa !2985
  %34 = load i32, i32* %gid, align 4, !dbg !8093, !tbaa !2985
  %call24 = call i32 @fchown(i32 %32, i32 %33, i32 %34) #10, !dbg !8094
  %cmp25 = icmp eq i32 %call24, 0, !dbg !8095
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !8096

if.then27:                                        ; preds = %if.then23
  store i32 1, i32* %retval, align 4, !dbg !8097
  br label %return, !dbg !8097

if.end28:                                         ; preds = %if.then23
  %call29 = call i32* @__errno_location() #15, !dbg !8098
  %35 = load i32, i32* %call29, align 4, !dbg !8098, !tbaa !2985, !ctir !7
  %cmp30 = icmp eq i32 %35, 1, !dbg !8100
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !8101

lor.lhs.false32:                                  ; preds = %if.end28
  %call33 = call i32* @__errno_location() #15, !dbg !8102
  %36 = load i32, i32* %call33, align 4, !dbg !8102, !tbaa !2985, !ctir !7
  %cmp34 = icmp eq i32 %36, 22, !dbg !8103
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !8104

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8105, metadata !DIExpression()), !dbg !8107
  %call37 = call i32* @__errno_location() #15, !dbg !8108
  %37 = load i32, i32* %call37, align 4, !dbg !8108, !tbaa !2985, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !8107, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !8109, metadata !DIExpression()), !dbg !8111
  %38 = load i32, i32* %dest_desc.addr, align 4, !dbg !8111, !tbaa !2985
  %39 = load i32, i32* %gid, align 4, !dbg !8111, !tbaa !2985
  %call38 = call i32 @fchown(i32 %38, i32 -1, i32 %39) #10, !dbg !8111
  store i32 %call38, i32* %__x, align 4, !dbg !8111, !tbaa !2985
  %40 = load i32, i32* %__x, align 4, !dbg !8111, !tbaa !2985
  %41 = load i32, i32* %saved_errno, align 4, !dbg !8112, !tbaa !2985
  %call39 = call i32* @__errno_location() #15, !dbg !8113
  store i32 %41, i32* %call39, align 4, !dbg !8114, !tbaa !2985, !ctir !7
  br label %if.end40, !dbg !8115

if.end40:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %if.end60, !dbg !8116

if.else:                                          ; preds = %if.end20
  %42 = load i8*, i8** %dst_name.addr, align 8, !dbg !8117, !tbaa !2998
  %43 = load i32, i32* %uid, align 4, !dbg !8120, !tbaa !2985
  %44 = load i32, i32* %gid, align 4, !dbg !8121, !tbaa !2985
  %call41 = call i32 @lchown(i8* %42, i32 %43, i32 %44) #10, !dbg !8122
  %cmp42 = icmp eq i32 %call41, 0, !dbg !8123
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !8124

if.then44:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !8125
  br label %return, !dbg !8125

if.end45:                                         ; preds = %if.else
  %call46 = call i32* @__errno_location() #15, !dbg !8126
  %45 = load i32, i32* %call46, align 4, !dbg !8126, !tbaa !2985, !ctir !7
  %cmp47 = icmp eq i32 %45, 1, !dbg !8128
  br i1 %cmp47, label %if.then53, label %lor.lhs.false49, !dbg !8129

lor.lhs.false49:                                  ; preds = %if.end45
  %call50 = call i32* @__errno_location() #15, !dbg !8130
  %46 = load i32, i32* %call50, align 4, !dbg !8130, !tbaa !2985, !ctir !7
  %cmp51 = icmp eq i32 %46, 22, !dbg !8131
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !8132

if.then53:                                        ; preds = %lor.lhs.false49, %if.end45
  call void @llvm.dbg.declare(metadata i32* %saved_errno54, metadata !8133, metadata !DIExpression()), !dbg !8135
  %call55 = call i32* @__errno_location() #15, !dbg !8136
  %47 = load i32, i32* %call55, align 4, !dbg !8136, !tbaa !2985, !ctir !7
  store i32 %47, i32* %saved_errno54, align 4, !dbg !8135, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %__x56, metadata !8137, metadata !DIExpression()), !dbg !8139
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !8139, !tbaa !2998
  %49 = load i32, i32* %gid, align 4, !dbg !8139, !tbaa !2985
  %call57 = call i32 @lchown(i8* %48, i32 -1, i32 %49) #10, !dbg !8139
  store i32 %call57, i32* %__x56, align 4, !dbg !8139, !tbaa !2985
  %50 = load i32, i32* %__x56, align 4, !dbg !8139, !tbaa !2985
  %51 = load i32, i32* %saved_errno54, align 4, !dbg !8140, !tbaa !2985
  %call58 = call i32* @__errno_location() #15, !dbg !8141
  store i32 %51, i32* %call58, align 4, !dbg !8142, !tbaa !2985, !ctir !7
  br label %if.end59, !dbg !8143

if.end59:                                         ; preds = %if.then53, %lor.lhs.false49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end40
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8144, !tbaa !2998
  %call61 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %52) #14, !dbg !8146
  br i1 %call61, label %if.end70, label %if.then62, !dbg !8147

if.then62:                                        ; preds = %if.end60
  %call63 = call i32* @__errno_location() #15, !dbg !8148
  %53 = load i32, i32* %call63, align 4, !dbg !8148, !tbaa !2985, !ctir !7
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #10, !dbg !8150
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8151, !tbaa !2998
  %call65 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8151
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call64, i8* %call65), !dbg !8152
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8153, !tbaa !2998
  %require_preserve66 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 21, !dbg !8155, !ctir !253
  %56 = load i8, i8* %require_preserve66, align 4, !dbg !8155, !tbaa !3464
  %tobool67 = trunc i8 %56 to i1, !dbg !8155, !ctir !120
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !8156

if.then68:                                        ; preds = %if.then62
  store i32 -1, i32* %retval, align 4, !dbg !8157
  br label %return, !dbg !8157

if.end69:                                         ; preds = %if.then62
  br label %if.end70, !dbg !8158

if.end70:                                         ; preds = %if.end69, %if.end60
  store i32 0, i32* %retval, align 4, !dbg !8159
  br label %return, !dbg !8159

return:                                           ; preds = %if.end70, %if.then68, %if.then44, %if.then27, %if.end
  %57 = load i32, i32* %retval, align 4, !dbg !8160
  ret i32 %57, !dbg !8160
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !8161 !ctir !479 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %all_errors = alloca i8, align 1, !ctir !120
  %some_errors = alloca i8, align 1, !ctir !120
  %selinux_done = alloca i8, align 1, !ctir !120
  %ctx = alloca %struct.error_context, align 8, !ctir !484
  store i8* %src_path, i8** %src_path.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !8162, metadata !DIExpression()), !dbg !8163
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  store i8* %dst_path, i8** %dst_path.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !8166, metadata !DIExpression()), !dbg !8167
  store i32 %dst_fd, i32* %dst_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !8168, metadata !DIExpression()), !dbg !8169
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8170, metadata !DIExpression()), !dbg !8171
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8172, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !8174, metadata !DIExpression()), !dbg !8175
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8176, !tbaa !2998
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !8177, !ctir !253
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !8177, !tbaa !3460
  %tobool = trunc i8 %1 to i1, !dbg !8177, !ctir !120
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !8178

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8179, !tbaa !2998
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 25, !dbg !8180, !ctir !253
  %3 = load i8, i8* %require_preserve_xattr, align 8, !dbg !8180, !tbaa !3476
  %tobool1 = trunc i8 %3 to i1, !dbg !8180, !ctir !120
  br label %lor.end, !dbg !8178

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %frombool = zext i1 %4 to i8, !dbg !8175
  store i8 %frombool, i8* %all_errors, align 1, !dbg !8175, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !8181, metadata !DIExpression()), !dbg !8182
  %5 = load i8, i8* %all_errors, align 1, !dbg !8183, !tbaa !3109
  %tobool2 = trunc i8 %5 to i1, !dbg !8183
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !8184

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8185, !tbaa !2998
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !8186, !ctir !253
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !8186, !tbaa !3456
  %tobool3 = trunc i8 %7 to i1, !dbg !8186, !ctir !120
  %lnot = xor i1 %tobool3, true, !dbg !8187
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !8188
  %frombool4 = zext i1 %8 to i8, !dbg !8182
  store i8 %frombool4, i8* %some_errors, align 1, !dbg !8182, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %selinux_done, metadata !8189, metadata !DIExpression()), !dbg !8190
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8191, !tbaa !2998
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 22, !dbg !8192, !ctir !253
  %10 = load i8, i8* %preserve_security_context, align 1, !dbg !8192, !tbaa !3210
  %tobool5 = trunc i8 %10 to i1, !dbg !8192, !ctir !120
  br i1 %tobool5, label %lor.end8, label %lor.rhs6, !dbg !8193

lor.rhs6:                                         ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8194, !tbaa !2998
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !8195, !ctir !253
  %12 = load i8, i8* %set_security_context, align 1, !dbg !8195, !tbaa !3213
  %tobool7 = trunc i8 %12 to i1, !dbg !8195, !ctir !120
  br label %lor.end8, !dbg !8193

lor.end8:                                         ; preds = %lor.rhs6, %land.end
  %13 = phi i1 [ true, %land.end ], [ %tobool7, %lor.rhs6 ]
  %frombool9 = zext i1 %13 to i8, !dbg !8190
  store i8 %frombool9, i8* %selinux_done, align 1, !dbg !8190, !tbaa !3109
  call void @llvm.dbg.declare(metadata %struct.error_context* %ctx, metadata !8196, metadata !DIExpression()), !dbg !8197
  %error = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 0, !dbg !8198
  %14 = load i8, i8* %all_errors, align 1, !dbg !8199, !tbaa !3109
  %tobool10 = trunc i8 %14 to i1, !dbg !8199
  %15 = zext i1 %tobool10 to i64, !dbg !8199
  %cond = select i1 %tobool10, void (%struct.error_context*, i8*, ...)* @copy_attr_allerror, void (%struct.error_context*, i8*, ...)* @copy_attr_error, !dbg !8199
  store void (%struct.error_context*, i8*, ...)* %cond, void (%struct.error_context*, i8*, ...)** %error, align 8, !dbg !8198, !tbaa !8200
  %quote = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 1, !dbg !8198
  store i8* (%struct.error_context*, i8*)* @copy_attr_quote, i8* (%struct.error_context*, i8*)** %quote, align 8, !dbg !8198, !tbaa !8202
  %quote_free = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 2, !dbg !8198
  store void (%struct.error_context*, i8*)* @copy_attr_free, void (%struct.error_context*, i8*)** %quote_free, align 8, !dbg !8198, !tbaa !8203
  %16 = load i32, i32* %src_fd.addr, align 4, !dbg !8204, !tbaa !2985
  %cmp = icmp sle i32 0, %16, !dbg !8206
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8207

land.lhs.true:                                    ; preds = %lor.end8
  %17 = load i32, i32* %dst_fd.addr, align 4, !dbg !8208, !tbaa !2985
  %cmp11 = icmp sle i32 0, %17, !dbg !8209
  br i1 %cmp11, label %if.then, label %if.else, !dbg !8210

if.then:                                          ; preds = %land.lhs.true
  %18 = load i8*, i8** %src_path.addr, align 8, !dbg !8211, !tbaa !2998
  %19 = load i32, i32* %src_fd.addr, align 4, !dbg !8212, !tbaa !2985
  %20 = load i8*, i8** %dst_path.addr, align 8, !dbg !8213, !tbaa !2998
  %21 = load i32, i32* %dst_fd.addr, align 4, !dbg !8214, !tbaa !2985
  %22 = load i8, i8* %selinux_done, align 1, !dbg !8215, !tbaa !3109
  %tobool12 = trunc i8 %22 to i1, !dbg !8215
  %23 = zext i1 %tobool12 to i64, !dbg !8215
  %cond13 = select i1 %tobool12, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !8215
  %24 = load i8, i8* %all_errors, align 1, !dbg !8216, !tbaa !3109
  %tobool14 = trunc i8 %24 to i1, !dbg !8216
  br i1 %tobool14, label %cond.true, label %lor.lhs.false, !dbg !8217

lor.lhs.false:                                    ; preds = %if.then
  %25 = load i8, i8* %some_errors, align 1, !dbg !8218, !tbaa !3109
  %tobool15 = trunc i8 %25 to i1, !dbg !8218
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !8216

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !8216

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !8216

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.error_context* [ %ctx, %cond.true ], [ null, %cond.false ], !dbg !8216
  %call = call i32 @attr_copy_fd(i8* %18, i32 %19, i8* %20, i32 %21, i32 (i8*, %struct.error_context*)* %cond13, %struct.error_context* %cond16), !dbg !8219
  store i32 %call, i32* %ret, align 4, !dbg !8220, !tbaa !2985
  br label %if.end, !dbg !8221

if.else:                                          ; preds = %land.lhs.true, %lor.end8
  %26 = load i8*, i8** %src_path.addr, align 8, !dbg !8222, !tbaa !2998
  %27 = load i8*, i8** %dst_path.addr, align 8, !dbg !8223, !tbaa !2998
  %28 = load i8, i8* %selinux_done, align 1, !dbg !8224, !tbaa !3109
  %tobool17 = trunc i8 %28 to i1, !dbg !8224
  %29 = zext i1 %tobool17 to i64, !dbg !8224
  %cond18 = select i1 %tobool17, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !8224
  %30 = load i8, i8* %all_errors, align 1, !dbg !8225, !tbaa !3109
  %tobool19 = trunc i8 %30 to i1, !dbg !8225
  br i1 %tobool19, label %cond.true22, label %lor.lhs.false20, !dbg !8226

lor.lhs.false20:                                  ; preds = %if.else
  %31 = load i8, i8* %some_errors, align 1, !dbg !8227, !tbaa !3109
  %tobool21 = trunc i8 %31 to i1, !dbg !8227
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !8225

cond.true22:                                      ; preds = %lor.lhs.false20, %if.else
  br label %cond.end24, !dbg !8225

cond.false23:                                     ; preds = %lor.lhs.false20
  br label %cond.end24, !dbg !8225

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi %struct.error_context* [ %ctx, %cond.true22 ], [ null, %cond.false23 ], !dbg !8225
  %call26 = call i32 @attr_copy_file(i8* %26, i8* %27, i32 (i8*, %struct.error_context*)* %cond18, %struct.error_context* %cond25), !dbg !8228
  store i32 %call26, i32* %ret, align 4, !dbg !8229, !tbaa !2985
  br label %if.end

if.end:                                           ; preds = %cond.end24, %cond.end
  %32 = load i32, i32* %ret, align 4, !dbg !8230, !tbaa !2985
  %cmp27 = icmp eq i32 %32, 0, !dbg !8231
  ret i1 %cmp27, !dbg !8232
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !8233 !ctir !510 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !8240, !tbaa !2998
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !8241, !tbaa !2985
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8242, !tbaa !2998
  ret void, !dbg !8243
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !515 !ctir !305 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !8244, !tbaa !2985
  %cmp = icmp eq i32 %0, -1, !dbg !8246
  br i1 %cmp, label %if.then, label %if.end, !dbg !8247

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #10, !dbg !8248
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !8250, !tbaa !2985
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !8251, !tbaa !2985
  %call1 = call i32 @umask(i32 %1) #10, !dbg !8252
  br label %if.end, !dbg !8253

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !8254, !tbaa !2985
  ret i32 %2, !dbg !8255
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_allerror(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !8256 !ctir !481 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !497
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8257, metadata !DIExpression()), !dbg !8258
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8261, metadata !DIExpression()), !dbg !8262
  %call = call i32* @__errno_location() #15, !dbg !8263
  %0 = load i32, i32* %call, align 4, !dbg !8263, !tbaa !2985, !ctir !7
  store i32 %0, i32* %err, align 4, !dbg !8262, !tbaa !2985
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !8264, metadata !DIExpression()), !dbg !8265
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8266
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !8266
  call void @llvm.va_start(i8* %arraydecay1), !dbg !8266
  %1 = load i32, i32* %err, align 4, !dbg !8267, !tbaa !2985
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !8268, !tbaa !2998
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8269
  call void @verror(i32 0, i32 %1, i8* %2, %struct.__va_list_tag* %arraydecay2), !dbg !8270
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8271
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !8271
  call void @llvm.va_end(i8* %arraydecay34), !dbg !8271
  ret void, !dbg !8272
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_error(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !8273 !ctir !481 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !497
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  %call = call i32* @__errno_location() #15, !dbg !8278
  %0 = load i32, i32* %call, align 4, !dbg !8278, !tbaa !2985, !ctir !7
  %call1 = call zeroext i1 @errno_unsupported(i32 %0), !dbg !8280
  br i1 %call1, label %if.end, label %if.then, !dbg !8281

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8282, metadata !DIExpression()), !dbg !8284
  %call2 = call i32* @__errno_location() #15, !dbg !8285
  %1 = load i32, i32* %call2, align 4, !dbg !8285, !tbaa !2985, !ctir !7
  store i32 %1, i32* %err, align 4, !dbg !8284, !tbaa !2985
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !8286, metadata !DIExpression()), !dbg !8287
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8288
  %arraydecay3 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !8288
  call void @llvm.va_start(i8* %arraydecay3), !dbg !8288
  %2 = load i32, i32* %err, align 4, !dbg !8289, !tbaa !2985
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !8290, !tbaa !2998
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8291
  call void @verror(i32 0, i32 %2, i8* %3, %struct.__va_list_tag* %arraydecay4), !dbg !8292
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !8293
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !8293
  call void @llvm.va_end(i8* %arraydecay56), !dbg !8293
  br label %if.end, !dbg !8294

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8295
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @copy_attr_quote(%struct.error_context* %ctx, i8* %str) #4 !dbg !8296 !ctir !493 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store i8* %str, i8** %str.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  %0 = load i8*, i8** %str.addr, align 8, !dbg !8301, !tbaa !2998
  %call = call i8* @quotearg_style(i32 4, i8* %0), !dbg !8301
  ret i8* %call, !dbg !8302
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_free(%struct.error_context* %ctx, i8* %str) #4 !dbg !8303 !ctir !481 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8304, metadata !DIExpression()), !dbg !8305
  store i8* %str, i8** %str.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8306, metadata !DIExpression()), !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_selinux_attr(i8* %name, %struct.error_context* %ctx) #4 !dbg !8309 !ctir !508 {
entry:
  %name.addr = alloca i8*, align 8
  %ctx.addr = alloca %struct.error_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8310, metadata !DIExpression()), !dbg !8311
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  %0 = load i8*, i8** %name.addr, align 8, !dbg !8314, !tbaa !2998
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0), i64 16) #14, !dbg !8314
  %tobool = icmp ne i32 %call, 0, !dbg !8314
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8315

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8316, !tbaa !2998
  %2 = load %struct.error_context*, %struct.error_context** %ctx.addr, align 8, !dbg !8317, !tbaa !2998
  %call1 = call i32 @attr_copy_check_permissions(i8* %1, %struct.error_context* %2), !dbg !8318
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8315
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !8319
  %land.ext = zext i1 %3 to i32, !dbg !8315
  ret i32 %land.ext, !dbg !8320
}

declare dso_local i32 @attr_copy_fd(i8*, i32, i8*, i32, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_file(i8*, i8*, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_check_permissions(i8*, %struct.error_context*) #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !8321 !ctir !303 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8322, metadata !DIExpression()), !dbg !8323
  %call = call i32* @__errno_location() #15, !dbg !8324
  %0 = load i32, i32* %call, align 4, !dbg !8324, !tbaa !2985, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !8325
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !8326

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8327
  %1 = load i32, i32* %call1, align 4, !dbg !8327, !tbaa !2985, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !8328
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !8329

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8330, !tbaa !2998
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8331, !ctir !253
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !8331, !tbaa !8332
  %tobool = trunc i8 %3 to i1, !dbg !8331, !ctir !120
  %lnot = xor i1 %tobool, true, !dbg !8333
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !8334
  ret i1 %4, !dbg !8335
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !8336 !ctir !419 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8337, metadata !DIExpression()), !dbg !8338
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8339, metadata !DIExpression()), !dbg !8340
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !8341, !tbaa !2985
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !8342, !tbaa !2985
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #10, !dbg !8343
  ret i32 %call, !dbg !8344
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !8345 !ctir !421 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !8347, metadata !DIExpression()), !dbg !8348
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8349, !ctir !317
  %0 = load i64, i64* %st_blksize, align 8, !dbg !8349, !tbaa !7590, !ctir !333
  %cmp = icmp slt i64 0, %0, !dbg !8349
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !8349

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8349, !ctir !317
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !8349, !tbaa !7590, !ctir !333
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !8349
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !8349

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8349, !ctir !317
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !8349, !tbaa !7590, !ctir !333
  br label %cond.end, !dbg !8349

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !8349

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !8349
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !8349
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !8349

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !8349

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8349, !ctir !317
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !8349, !tbaa !7590, !ctir !333
  %cmp8 = icmp slt i64 0, %3, !dbg !8349
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !8349

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8349, !ctir !317
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !8349, !tbaa !7590, !ctir !333
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !8349
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !8349

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8349, !ctir !317
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !8349, !tbaa !7590, !ctir !333
  br label %cond.end15, !dbg !8349

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !8349

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !8349
  br label %cond.end17, !dbg !8349

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !8349
  ret i64 %cond18, !dbg !8350
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !8351 !ctir !423 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !8352, metadata !DIExpression()), !dbg !8353
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8354, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !8354, !ctir !316
  %1 = load i32, i32* %st_mode, align 8, !dbg !8354, !tbaa !3181, !ctir !133
  %and = and i32 %1, 61440, !dbg !8354
  %cmp = icmp eq i32 %and, 32768, !dbg !8354
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8355

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8356, !tbaa !2998
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !8356, !ctir !316
  %3 = load i64, i64* %st_blocks, align 8, !dbg !8356, !tbaa !8357, !ctir !335
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8358, !tbaa !2998
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !8359, !ctir !316
  %5 = load i64, i64* %st_size, align 8, !dbg !8359, !tbaa !4519, !ctir !29
  %div = sdiv i64 %5, 512, !dbg !8360
  %cmp1 = icmp slt i64 %3, %div, !dbg !8361
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !8362
  ret i1 %6, !dbg !8363
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !8364 !ctir !425 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !115
  %p1 = alloca i8*, align 8, !ctir !115
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8365, metadata !DIExpression()), !dbg !8366
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !8367, metadata !DIExpression()), !dbg !8368
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !8369, metadata !DIExpression()), !dbg !8370
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !8371, !tbaa !2998
  store i8* %0, i8** %p0, align 8, !dbg !8370, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !8372, metadata !DIExpression()), !dbg !8373
  %1 = load i8*, i8** %p0, align 8, !dbg !8374, !tbaa !2998
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !8375, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !8376
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !8377
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !8373, !tbaa !2998
  %3 = load i8*, i8** %p1, align 8, !dbg !8378, !tbaa !2998
  %4 = load i8*, i8** %p1, align 8, !dbg !8379, !tbaa !2998
  %5 = ptrtoint i8* %4 to i64, !dbg !8380
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !8381, !tbaa !3851
  %rem = urem i64 %5, %6, !dbg !8382
  %idx.neg = sub i64 0, %rem, !dbg !8383
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !8383
  ret i8* %add.ptr2, !dbg !8384
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !8385 !ctir !429 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !441
  %last_ext_start = alloca i64, align 8, !ctir !248
  %last_ext_len = alloca i64, align 8, !ctir !248
  %dest_pos = alloca i64, align 8, !ctir !248
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !120
  %ok = alloca i8, align 1, !ctir !120
  %empty_extent = alloca i8, align 1, !ctir !120
  %i = alloca i32, align 4, !ctir !70
  %ext_start = alloca i64, align 8, !ctir !248
  %ext_len = alloca i64, align 8, !ctir !248
  %ext_hole_size = alloca i64, align 8, !ctir !248
  %nzeros = alloca i64, align 8, !ctir !248
  %n_read = alloca i64, align 8, !ctir !248
  %read_hole = alloca i8, align 1, !ctir !120
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8386, metadata !DIExpression()), !dbg !8387
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8390, metadata !DIExpression()), !dbg !8391
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8392, metadata !DIExpression()), !dbg !8393
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8394, metadata !DIExpression()), !dbg !8395
  store i64 %src_total_size, i64* %src_total_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !8396, metadata !DIExpression()), !dbg !8397
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !8398, metadata !DIExpression()), !dbg !8399
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8400, metadata !DIExpression()), !dbg !8401
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8402, metadata !DIExpression()), !dbg !8403
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !8404, metadata !DIExpression()), !dbg !8405
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !8406, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !8408, metadata !DIExpression()), !dbg !8409
  store i64 0, i64* %last_ext_start, align 8, !dbg !8409, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !8410, metadata !DIExpression()), !dbg !8411
  store i64 0, i64* %last_ext_len, align 8, !dbg !8411, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !8412, metadata !DIExpression()), !dbg !8413
  store i64 0, i64* %dest_pos, align 8, !dbg !8413, !tbaa !3851
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8414, !tbaa !2985
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !8415
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8416, !tbaa !2998
  store i8 0, i8* %1, align 1, !dbg !8417, !tbaa !3109, !ctir !120
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !8418, metadata !DIExpression()), !dbg !8419
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8419, !tbaa !3109
  br label %do.body, !dbg !8420

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8421, metadata !DIExpression()), !dbg !8423
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !8424
  %frombool = zext i1 %call to i8, !dbg !8423
  store i8 %frombool, i8* %ok, align 1, !dbg !8423, !tbaa !3109
  %2 = load i8, i8* %ok, align 1, !dbg !8425, !tbaa !3109
  %tobool = trunc i8 %2 to i1, !dbg !8425
  br i1 %tobool, label %if.end9, label %if.then, !dbg !8427

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8428, !ctir !441
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !8428, !tbaa !8431
  %tobool1 = trunc i8 %3 to i1, !dbg !8428, !ctir !120
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8433

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !8434

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !8435, !ctir !441
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !8435, !tbaa !8437
  %tobool3 = trunc i8 %4 to i1, !dbg !8435, !ctir !120
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8438

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8439, !tbaa !2998
  store i8 1, i8* %5, align 1, !dbg !8441, !tbaa !3109, !ctir !120
  store i1 false, i1* %retval, align 1, !dbg !8442
  br label %return, !dbg !8442

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !8443
  %6 = load i32, i32* %call6, align 4, !dbg !8443, !tbaa !2985, !ctir !7
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68, i64 0, i64 0)) #10, !dbg !8444
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !8445, !tbaa !2998
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !8445
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !8446
  store i1 false, i1* %retval, align 1, !dbg !8447
  br label %return, !dbg !8447

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !8448, metadata !DIExpression()), !dbg !8449
  store i8 0, i8* %empty_extent, align 1, !dbg !8449, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8450, metadata !DIExpression()), !dbg !8452
  store i32 0, i32* %i, align 4, !dbg !8452, !tbaa !2985
  br label %for.cond, !dbg !8453

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !8454, !tbaa !2985
  %conv = zext i32 %8 to i64, !dbg !8454
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8456, !ctir !441
  %9 = load i64, i64* %ei_count, align 8, !dbg !8456, !tbaa !8457, !ctir !55
  %cmp = icmp ult i64 %conv, %9, !dbg !8458
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8459

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !8460, !tbaa !3109
  %tobool11 = trunc i8 %10 to i1, !dbg !8460
  br label %lor.end, !dbg !8459

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !8461

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !8462, metadata !DIExpression()), !dbg !8464
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !8465, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !8467, metadata !DIExpression()), !dbg !8468
  %12 = load i32, i32* %i, align 4, !dbg !8469, !tbaa !2985
  %conv13 = zext i32 %12 to i64, !dbg !8469
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8471, !ctir !441
  %13 = load i64, i64* %ei_count14, align 8, !dbg !8471, !tbaa !8457, !ctir !55
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !8472
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8473

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8474, !ctir !441
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8474, !tbaa !8476, !ctir !431
  %15 = load i32, i32* %i, align 4, !dbg !8477, !tbaa !2985
  %idxprom = zext i32 %15 to i64, !dbg !8478
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !8478, !ctir !431
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !8479, !ctir !432
  %16 = load i64, i64* %ext_logical, align 8, !dbg !8479, !tbaa !8480, !ctir !248
  store i64 %16, i64* %ext_start, align 8, !dbg !8482, !tbaa !3851
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8483, !ctir !441
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !8483, !tbaa !8476, !ctir !431
  %18 = load i32, i32* %i, align 4, !dbg !8484, !tbaa !2985
  %idxprom19 = zext i32 %18 to i64, !dbg !8485
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !8485, !ctir !431
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !8486, !ctir !432
  %19 = load i64, i64* %ext_length, align 8, !dbg !8486, !tbaa !8487, !ctir !248
  store i64 %19, i64* %ext_len, align 8, !dbg !8488, !tbaa !3851
  br label %if.end25, !dbg !8489

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !8490, !tbaa !2985
  %dec = add i32 %20, -1, !dbg !8490
  store i32 %dec, i32* %i, align 4, !dbg !8490, !tbaa !2985
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !8492, !tbaa !3851
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8493, !ctir !441
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8493, !tbaa !8476, !ctir !431
  %23 = load i32, i32* %i, align 4, !dbg !8494, !tbaa !2985
  %idxprom22 = zext i32 %23 to i64, !dbg !8495
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !8495, !ctir !431
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !8496, !ctir !432
  %24 = load i64, i64* %ext_length24, align 8, !dbg !8496, !tbaa !8487, !ctir !248
  %add = add nsw i64 %21, %24, !dbg !8497
  store i64 %add, i64* %ext_start, align 8, !dbg !8498, !tbaa !3851
  store i64 0, i64* %ext_len, align 8, !dbg !8499, !tbaa !3851
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !8500, !tbaa !3851
  %26 = load i64, i64* %ext_start, align 8, !dbg !8502, !tbaa !3851
  %27 = load i64, i64* %ext_len, align 8, !dbg !8503, !tbaa !3851
  %add26 = add nsw i64 %26, %27, !dbg !8504
  %cmp27 = icmp slt i64 %25, %add26, !dbg !8505
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !8506

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !8507, !tbaa !3851
  %29 = load i64, i64* %ext_start, align 8, !dbg !8510, !tbaa !3851
  %cmp30 = icmp slt i64 %28, %29, !dbg !8511
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8512

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !8513, !tbaa !3851
  store i64 %30, i64* %ext_start, align 8, !dbg !8514, !tbaa !3851
  br label %if.end33, !dbg !8515

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !8516, !tbaa !3851
  %32 = load i64, i64* %ext_start, align 8, !dbg !8517, !tbaa !3851
  %sub = sub nsw i64 %31, %32, !dbg !8518
  store i64 %sub, i64* %ext_len, align 8, !dbg !8519, !tbaa !3851
  br label %if.end34, !dbg !8520

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !8521, !tbaa !3851
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !8522, !tbaa !3851
  %sub35 = sub nsw i64 %33, %34, !dbg !8523
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !8524, !tbaa !3851
  %sub36 = sub nsw i64 %sub35, %35, !dbg !8525
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !8526, !tbaa !3851
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !8527, !tbaa !3109
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !8528, !tbaa !3851
  %tobool37 = icmp ne i64 %36, 0, !dbg !8528
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !8530

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !8531, !tbaa !2985
  %38 = load i64, i64* %ext_start, align 8, !dbg !8534, !tbaa !3851
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #10, !dbg !8535
  %cmp40 = icmp slt i64 %call39, 0, !dbg !8536
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !8537

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #15, !dbg !8538
  %39 = load i32, i32* %call43, align 4, !dbg !8538, !tbaa !2985, !ctir !7
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #10, !dbg !8540
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !8541, !tbaa !2998
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !8541
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !8542
  br label %fail, !dbg !8542

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !8543), !dbg !8544
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8545
  store i1 false, i1* %retval, align 1, !dbg !8546
  br label %return, !dbg !8546

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !8547, !tbaa !3109
  %tobool47 = trunc i8 %41 to i1, !dbg !8547
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !8549

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8550, !tbaa !3660
  %cmp49 = icmp eq i32 %42, 3, !dbg !8551
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !8552

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !8553, !tbaa !3109
  %tobool51 = trunc i8 %43 to i1, !dbg !8553
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !8554

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8555, !tbaa !3660
  %cmp53 = icmp ne i32 %44, 1, !dbg !8556
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !8557

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !8558, !tbaa !2985
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !8561, !tbaa !2998
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8562, !tbaa !3660
  %cmp56 = icmp eq i32 %47, 3, !dbg !8563
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !8564, !tbaa !3851
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !8565
  br i1 %call58, label %if.end60, label %if.then59, !dbg !8566

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !8567

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8568, !tbaa !3109
  br label %if.end81, !dbg !8569

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !8570, metadata !DIExpression()), !dbg !8572
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !8573, !tbaa !3851
  store i64 %49, i64* %nzeros, align 8, !dbg !8572, !tbaa !3851
  %50 = load i8, i8* %empty_extent, align 1, !dbg !8574, !tbaa !3109
  %tobool62 = trunc i8 %50 to i1, !dbg !8574
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !8576

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !8577, !tbaa !3851
  %52 = load i64, i64* %dest_pos, align 8, !dbg !8577, !tbaa !3851
  %sub64 = sub nsw i64 %51, %52, !dbg !8577
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !8577, !tbaa !3851
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !8577
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !8577

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !8577, !tbaa !3851
  %55 = load i64, i64* %dest_pos, align 8, !dbg !8577, !tbaa !3851
  %sub67 = sub nsw i64 %54, %55, !dbg !8577
  br label %cond.end, !dbg !8577

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !8577, !tbaa !3851
  br label %cond.end, !dbg !8577

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !8577
  store i64 %cond, i64* %nzeros, align 8, !dbg !8578, !tbaa !3851
  br label %if.end68, !dbg !8579

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !8580, !tbaa !2985
  %58 = load i64, i64* %nzeros, align 8, !dbg !8582, !tbaa !3851
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !8583
  br i1 %call69, label %if.end74, label %if.then70, !dbg !8584

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #15, !dbg !8585
  %59 = load i32, i32* %call71, align 4, !dbg !8585, !tbaa !2985, !ctir !7
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #10, !dbg !8587
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !8588, !tbaa !2998
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !8588
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !8589
  br label %fail, !dbg !8590

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !8591, !tbaa !3851
  %62 = load i64, i64* %ext_start, align 8, !dbg !8591, !tbaa !3851
  %cmp75 = icmp slt i64 %61, %62, !dbg !8591
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !8591

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !8591, !tbaa !3851
  br label %cond.end79, !dbg !8591

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !8591, !tbaa !3851
  br label %cond.end79, !dbg !8591

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !8591
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !8592, !tbaa !3851
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !8593

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !8594, !tbaa !3851
  store i64 %65, i64* %last_ext_start, align 8, !dbg !8595, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8596, metadata !DIExpression()), !dbg !8599
  store i8 0, i8* %empty_extent, align 1, !dbg !8600, !tbaa !3109
  %66 = load i64, i64* %ext_len, align 8, !dbg !8601, !tbaa !3851
  store i64 %66, i64* %last_ext_len, align 8, !dbg !8602, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !8603, metadata !DIExpression()), !dbg !8604
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !8605, !tbaa !2985
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !8607, !tbaa !2985
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !8608, !tbaa !2998
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !8609, !tbaa !3851
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8610, !tbaa !3660
  %cmp83 = icmp eq i32 %71, 3, !dbg !8611
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !8610

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !8612, !tbaa !3851
  br label %cond.end87, !dbg !8610

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !8610

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !8610
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !8613, !tbaa !2998
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !8614, !tbaa !2998
  %75 = load i64, i64* %ext_len, align 8, !dbg !8615, !tbaa !3851
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !8616
  br i1 %call89, label %if.end91, label %if.then90, !dbg !8617

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !8618

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !8619, !tbaa !3851
  %77 = load i64, i64* %n_read, align 8, !dbg !8620, !tbaa !3851
  %add92 = add nsw i64 %76, %77, !dbg !8621
  store i64 %add92, i64* %dest_pos, align 8, !dbg !8622, !tbaa !3851
  %78 = load i64, i64* %n_read, align 8, !dbg !8623, !tbaa !3851
  %tobool93 = icmp ne i64 %78, 0, !dbg !8623
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !8625

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !8626, !tbaa !3109
  %tobool95 = trunc i8 %79 to i1, !dbg !8626
  %frombool96 = zext i1 %tobool95 to i8, !dbg !8627
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !8627, !tbaa !3109
  br label %if.end97, !dbg !8628

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !8629, !tbaa !3851
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !8631, !tbaa !3851
  %cmp98 = icmp eq i64 %80, %81, !dbg !8632
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !8633

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8634, !ctir !441
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !8636, !tbaa !8431, !ctir !120
  br label %for.end, !dbg !8637

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !8638

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !8639, !tbaa !2985
  %inc = add i32 %82, 1, !dbg !8639
  store i32 %inc, i32* %i, align 4, !dbg !8639, !tbaa !2985
  br label %for.cond, !dbg !8640, !llvm.loop !8641

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8643
  br label %do.cond, !dbg !8644

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8645, !ctir !441
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !8645, !tbaa !8431
  %tobool104 = trunc i8 %83 to i1, !dbg !8645, !ctir !120
  %lnot = xor i1 %tobool104, true, !dbg !8646
  br i1 %lnot, label %do.body, label %do.end, !dbg !8644, !llvm.loop !8647

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !8649, !tbaa !3851
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !8651, !tbaa !3851
  %cmp105 = icmp slt i64 %84, %85, !dbg !8652
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !8653

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !8654, !tbaa !3109
  %tobool108 = trunc i8 %86 to i1, !dbg !8654
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !8655

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8656, !tbaa !3660
  %cmp111 = icmp ne i32 %87, 1, !dbg !8657
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !8658

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !8659, !tbaa !2985
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !8660, !tbaa !3851
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #10, !dbg !8661
  %tobool115 = icmp ne i32 %call114, 0, !dbg !8661
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !8656

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !8662, !tbaa !2985
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !8663, !tbaa !3851
  %92 = load i64, i64* %dest_pos, align 8, !dbg !8664, !tbaa !3851
  %sub117 = sub nsw i64 %91, %92, !dbg !8665
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !8666
  br i1 %call118, label %if.end123, label %if.then119, !dbg !8658

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #15, !dbg !8667
  %93 = load i32, i32* %call120, align 4, !dbg !8667, !tbaa !2985, !ctir !7
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #10, !dbg !8669
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !8670, !tbaa !2998
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !8670
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !8671
  store i1 false, i1* %retval, align 1, !dbg !8672
  br label %return, !dbg !8672

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8673, !tbaa !3660
  %cmp124 = icmp eq i32 %95, 3, !dbg !8675
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !8676

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !8677, !tbaa !3851
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !8678, !tbaa !3851
  %cmp127 = icmp slt i64 %96, %97, !dbg !8679
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !8680

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !8681, !tbaa !2985
  %99 = load i64, i64* %dest_pos, align 8, !dbg !8682, !tbaa !3851
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !8683, !tbaa !3851
  %101 = load i64, i64* %dest_pos, align 8, !dbg !8684, !tbaa !3851
  %sub130 = sub nsw i64 %100, %101, !dbg !8685
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !8686
  %cmp132 = icmp slt i32 %call131, 0, !dbg !8687
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !8688

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #15, !dbg !8689
  %102 = load i32, i32* %call135, align 4, !dbg !8689, !tbaa !2985, !ctir !7
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !8691
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !8692, !tbaa !2998
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !8692
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !8693
  store i1 false, i1* %retval, align 1, !dbg !8694
  br label %return, !dbg !8694

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !8695
  br label %return, !dbg !8695

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !8696
  ret i1 %104, !dbg !8696
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !8697 !ctir !456 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !120
  %psize = alloca i64, align 8, !ctir !248
  %n_read = alloca i64, align 8, !ctir !462
  %csize = alloca i64, align 8, !ctir !55
  %cbuf = alloca i8*, align 8, !ctir !9
  %pbuf = alloca i8*, align 8, !ctir !9
  %prev_hole = alloca i8, align 1, !ctir !120
  %transition = alloca i8, align 1, !ctir !120
  %last_chunk = alloca i8, align 1, !ctir !120
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8698, metadata !DIExpression()), !dbg !8699
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8700, metadata !DIExpression()), !dbg !8701
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8702, metadata !DIExpression()), !dbg !8703
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8704, metadata !DIExpression()), !dbg !8705
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8706, metadata !DIExpression()), !dbg !8707
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8708, metadata !DIExpression()), !dbg !8709
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8710, metadata !DIExpression()), !dbg !8711
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8712, metadata !DIExpression()), !dbg !8713
  store i64 %max_n_read, i64* %max_n_read.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !8714, metadata !DIExpression()), !dbg !8715
  store i64* %total_n_read, i64** %total_n_read.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !8718, metadata !DIExpression()), !dbg !8719
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8720, !tbaa !2998
  store i8 0, i8* %0, align 1, !dbg !8721, !tbaa !3109, !ctir !120
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8722, !tbaa !2998
  store i64 0, i64* %1, align 8, !dbg !8723, !tbaa !3851, !ctir !248
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !8724, metadata !DIExpression()), !dbg !8725
  store i8 0, i8* %make_hole, align 1, !dbg !8725, !tbaa !3109
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !8726, metadata !DIExpression()), !dbg !8727
  store i64 0, i64* %psize, align 8, !dbg !8727, !tbaa !3851
  br label %while.cond, !dbg !8728

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !8729, !tbaa !3851
  %tobool = icmp ne i64 %2, 0, !dbg !8728
  br i1 %tobool, label %while.body, label %while.end94, !dbg !8728

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8730, metadata !DIExpression()), !dbg !8732
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !8733, !tbaa !2985
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8734, !tbaa !2998
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !8735, !tbaa !3851
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !8735, !tbaa !3851
  %cmp = icmp ult i64 %5, %6, !dbg !8735
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8735

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !8735, !tbaa !3851
  br label %cond.end, !dbg !8735

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !8735, !tbaa !3851
  br label %cond.end, !dbg !8735

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !8735
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !8736
  store i64 %call, i64* %n_read, align 8, !dbg !8732, !tbaa !3851
  %9 = load i64, i64* %n_read, align 8, !dbg !8737, !tbaa !3851
  %cmp1 = icmp slt i64 %9, 0, !dbg !8739
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !8740

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #15, !dbg !8741
  %10 = load i32, i32* %call2, align 4, !dbg !8741, !tbaa !2985, !ctir !7
  %cmp3 = icmp eq i32 %10, 4, !dbg !8744
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8745

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !8746, !llvm.loop !8747

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #15, !dbg !8749
  %11 = load i32, i32* %call5, align 4, !dbg !8749, !tbaa !2985, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #10, !dbg !8750
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !8751, !tbaa !2998
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !8751
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !8752
  store i1 false, i1* %retval, align 1, !dbg !8753
  br label %return, !dbg !8753

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !8754, !tbaa !3851
  %cmp9 = icmp eq i64 %13, 0, !dbg !8756
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8757

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !8758

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !8759, !tbaa !3851
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !8760, !tbaa !3851
  %sub = sub i64 %15, %14, !dbg !8760
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !8760, !tbaa !3851
  %16 = load i64, i64* %n_read, align 8, !dbg !8761, !tbaa !3851
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8762, !tbaa !2998
  %18 = load i64, i64* %17, align 8, !dbg !8763, !tbaa !3851, !ctir !248
  %add = add nsw i64 %18, %16, !dbg !8763
  store i64 %add, i64* %17, align 8, !dbg !8763, !tbaa !3851, !ctir !248
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !8764, metadata !DIExpression()), !dbg !8765
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !8766, !tbaa !3851
  %tobool12 = icmp ne i64 %19, 0, !dbg !8766
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !8766

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !8767, !tbaa !3851
  br label %cond.end15, !dbg !8766

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !8768, !tbaa !3851
  br label %cond.end15, !dbg !8766

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !8766
  store i64 %cond16, i64* %csize, align 8, !dbg !8765, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !8769, metadata !DIExpression()), !dbg !8770
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8771, !tbaa !2998
  store i8* %22, i8** %cbuf, align 8, !dbg !8770, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !8772, metadata !DIExpression()), !dbg !8773
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !8774, !tbaa !2998
  store i8* %23, i8** %pbuf, align 8, !dbg !8773, !tbaa !2998
  br label %while.cond17, !dbg !8775

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !8776, !tbaa !3851
  %tobool18 = icmp ne i64 %24, 0, !dbg !8775
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !8775

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !8777, metadata !DIExpression()), !dbg !8779
  %25 = load i8, i8* %make_hole, align 1, !dbg !8780, !tbaa !3109
  %tobool20 = trunc i8 %25 to i1, !dbg !8780
  %frombool21 = zext i1 %tobool20 to i8, !dbg !8779
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !8779, !tbaa !3109
  %26 = load i64, i64* %csize, align 8, !dbg !8781, !tbaa !3851
  %27 = load i64, i64* %n_read, align 8, !dbg !8781, !tbaa !3851
  %cmp22 = icmp ult i64 %26, %27, !dbg !8781
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !8781

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !8781, !tbaa !3851
  br label %cond.end25, !dbg !8781

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !8781, !tbaa !3851
  br label %cond.end25, !dbg !8781

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !8781
  store i64 %cond26, i64* %csize, align 8, !dbg !8782, !tbaa !3851
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !8783, !tbaa !3851
  %tobool27 = icmp ne i64 %30, 0, !dbg !8783
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !8785

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !8786, !tbaa !3851
  %tobool28 = icmp ne i64 %31, 0, !dbg !8786
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !8787

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !8788, !tbaa !2998
  %33 = load i64, i64* %csize, align 8, !dbg !8789, !tbaa !3851
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !8790
  %frombool31 = zext i1 %call30 to i8, !dbg !8791
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !8791, !tbaa !3109
  br label %if.end32, !dbg !8792

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !8793, metadata !DIExpression()), !dbg !8794
  %34 = load i8, i8* %make_hole, align 1, !dbg !8795, !tbaa !3109
  %tobool33 = trunc i8 %34 to i1, !dbg !8795
  %conv = zext i1 %tobool33 to i32, !dbg !8795
  %35 = load i8, i8* %prev_hole, align 1, !dbg !8796, !tbaa !3109
  %tobool34 = trunc i8 %35 to i1, !dbg !8796
  %conv35 = zext i1 %tobool34 to i32, !dbg !8796
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !8797
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !8798

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !8799, !tbaa !3851
  %tobool38 = icmp ne i64 %36, 0, !dbg !8798
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !8800
  %frombool39 = zext i1 %37 to i8, !dbg !8794
  store i8 %frombool39, i8* %transition, align 1, !dbg !8794, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !8801, metadata !DIExpression()), !dbg !8802
  %38 = load i64, i64* %n_read, align 8, !dbg !8803, !tbaa !3851
  %39 = load i64, i64* %csize, align 8, !dbg !8804, !tbaa !3851
  %cmp40 = icmp eq i64 %38, %39, !dbg !8805
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !8806

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !8807, !tbaa !3109
  %tobool43 = trunc i8 %40 to i1, !dbg !8807
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !8808

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !8809, !tbaa !3851
  %tobool44 = icmp ne i64 %41, 0, !dbg !8810
  %lnot = xor i1 %tobool44, true, !dbg !8810
  br label %lor.end, !dbg !8808

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !8802
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !8802, !tbaa !3109
  %43 = load i8, i8* %transition, align 1, !dbg !8811, !tbaa !3109
  %tobool46 = trunc i8 %43 to i1, !dbg !8811
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !8813

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !8814, !tbaa !3109
  %tobool48 = trunc i8 %44 to i1, !dbg !8814
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !8815

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !8816, !tbaa !3109
  %tobool51 = trunc i8 %45 to i1, !dbg !8816
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !8819

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !8820, !tbaa !3851
  %47 = load i64, i64* %psize, align 8, !dbg !8821, !tbaa !3851
  %add53 = add i64 %47, %46, !dbg !8821
  store i64 %add53, i64* %psize, align 8, !dbg !8821, !tbaa !3851
  br label %if.end54, !dbg !8822

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !8823, !tbaa !3109
  %tobool55 = trunc i8 %48 to i1, !dbg !8823
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !8825

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !8826, !tbaa !2985
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8829, !tbaa !2998
  %51 = load i64, i64* %psize, align 8, !dbg !8830, !tbaa !3851
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !8831
  %52 = load i64, i64* %psize, align 8, !dbg !8832, !tbaa !3851
  %cmp58 = icmp ne i64 %call57, %52, !dbg !8833
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !8834

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #15, !dbg !8835
  %53 = load i32, i32* %call61, align 4, !dbg !8835, !tbaa !2985, !ctir !7
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i64 0, i64 0)) #10, !dbg !8837
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8838, !tbaa !2998
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8838
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !8839
  store i1 false, i1* %retval, align 1, !dbg !8840
  br label %return, !dbg !8840

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !8841

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !8842, !tbaa !2985
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8845, !tbaa !2998
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !8846, !tbaa !3109
  %tobool65 = trunc i8 %57 to i1, !dbg !8846
  %58 = load i64, i64* %psize, align 8, !dbg !8847, !tbaa !3851
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !8848
  br i1 %call66, label %if.end68, label %if.then67, !dbg !8849

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !8850
  br label %return, !dbg !8850

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !8851, !tbaa !2998
  store i8* %59, i8** %pbuf, align 8, !dbg !8852, !tbaa !2998
  %60 = load i64, i64* %csize, align 8, !dbg !8853, !tbaa !3851
  store i64 %60, i64* %psize, align 8, !dbg !8854, !tbaa !3851
  %61 = load i8, i8* %last_chunk, align 1, !dbg !8855, !tbaa !3109
  %tobool70 = trunc i8 %61 to i1, !dbg !8855
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !8857

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !8858, !tbaa !3851
  %tobool72 = icmp ne i64 %62, 0, !dbg !8858
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8861

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !8862, !tbaa !3851
  br label %if.end74, !dbg !8863

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !8864, !tbaa !3109
  %tobool75 = trunc i8 %63 to i1, !dbg !8864
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8866

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !8867, !tbaa !3851
  br label %if.end78, !dbg !8868

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !8869, !tbaa !3851
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !8870

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !8871

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !8872, !tbaa !3851
  %65 = load i64, i64* %csize, align 8, !dbg !8875, !tbaa !3851
  %sub81 = sub i64 9223372036854775807, %65, !dbg !8876
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !8877
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8878

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !8879, !tbaa !3851
  %67 = load i64, i64* %psize, align 8, !dbg !8880, !tbaa !3851
  %add85 = add i64 %67, %66, !dbg !8880
  store i64 %add85, i64* %psize, align 8, !dbg !8880, !tbaa !3851
  br label %if.end89, !dbg !8881

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i64 0, i64 0)) #10, !dbg !8882
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !8884, !tbaa !2998
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !8884
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !8885
  store i1 false, i1* %retval, align 1, !dbg !8886
  br label %return, !dbg !8886

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !8887, !tbaa !3851
  %70 = load i64, i64* %n_read, align 8, !dbg !8888, !tbaa !3851
  %sub91 = sub i64 %70, %69, !dbg !8888
  store i64 %sub91, i64* %n_read, align 8, !dbg !8888, !tbaa !3851
  %71 = load i64, i64* %csize, align 8, !dbg !8889, !tbaa !3851
  %72 = load i8*, i8** %cbuf, align 8, !dbg !8890, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !8890
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !8890, !tbaa !2998
  br label %while.cond17, !dbg !8775, !llvm.loop !8891

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !8893, !tbaa !3109
  %tobool92 = trunc i8 %73 to i1, !dbg !8893
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8894, !tbaa !2998
  %frombool93 = zext i1 %tobool92 to i8, !dbg !8895
  store i8 %frombool93, i8* %74, align 1, !dbg !8895, !tbaa !3109, !ctir !120
  br label %while.cond, !dbg !8728, !llvm.loop !8747

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !8896, !tbaa !3109
  %tobool95 = trunc i8 %75 to i1, !dbg !8896
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !8898

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !8899, !tbaa !2985
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !8900, !tbaa !2998
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !8901, !tbaa !3109
  %tobool98 = trunc i8 %78 to i1, !dbg !8901
  %79 = load i64, i64* %psize, align 8, !dbg !8902, !tbaa !3851
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !8903
  br i1 %call99, label %if.else101, label %if.then100, !dbg !8904

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !8905
  br label %return, !dbg !8905

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !8906
  br label %return, !dbg !8906

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !8907
  ret i1 %80, !dbg !8907
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !8908 !ctir !469 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8909, metadata !DIExpression()), !dbg !8910
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8911, metadata !DIExpression()), !dbg !8912
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8913, metadata !DIExpression()), !dbg !8914
  %0 = load i32, i32* %desc.addr, align 4, !dbg !8915, !tbaa !2985
  %cmp = icmp sle i32 0, %0, !dbg !8917
  br i1 %cmp, label %if.then, label %if.end, !dbg !8918

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8919, !tbaa !2985
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8920, !tbaa !2985
  %call = call i32 @fchmod(i32 %1, i32 %2) #10, !dbg !8921
  store i32 %call, i32* %retval, align 4, !dbg !8922
  br label %return, !dbg !8922

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8923, !tbaa !2998
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8924, !tbaa !2985
  %call1 = call i32 @chmod(i8* %3, i32 %4) #10, !dbg !8925
  store i32 %call1, i32* %retval, align 4, !dbg !8926
  br label %return, !dbg !8926

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8927
  ret i32 %5, !dbg !8927
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #9 !dbg !8928 !ctir !464 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !466
  %word = alloca i8, align 1, !ctir !468
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8929, metadata !DIExpression()), !dbg !8930
  store i64 %length, i64* %length.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8933, metadata !DIExpression()), !dbg !8934
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8935, !tbaa !2998
  store i8* %0, i8** %p, align 8, !dbg !8934, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8936, metadata !DIExpression()), !dbg !8937
  %1 = load i64, i64* %length.addr, align 8, !dbg !8938, !tbaa !3851
  %tobool = icmp ne i64 %1, 0, !dbg !8938
  br i1 %tobool, label %if.end, label %if.then, !dbg !8940

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8941
  br label %return, !dbg !8941

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8942

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8943, !tbaa !3851
  %and = and i64 %2, 0, !dbg !8943
  %tobool1 = icmp ne i64 %and, 0, !dbg !8942
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8942

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8944, !tbaa !2998
  %4 = load i8, i8* %3, align 1, !dbg !8947, !tbaa !3660, !ctir !467
  %tobool2 = icmp ne i8 %4, 0, !dbg !8947
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8948

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8949
  br label %return, !dbg !8949

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8950, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8950
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8950, !tbaa !2998
  %6 = load i64, i64* %length.addr, align 8, !dbg !8951, !tbaa !3851
  %dec = add i64 %6, -1, !dbg !8951
  store i64 %dec, i64* %length.addr, align 8, !dbg !8951, !tbaa !3851
  %7 = load i64, i64* %length.addr, align 8, !dbg !8952, !tbaa !3851
  %tobool5 = icmp ne i64 %7, 0, !dbg !8952
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8954

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8955
  br label %return, !dbg !8955

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8942, !llvm.loop !8956

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8958

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8959, !tbaa !2998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8963
  %9 = load i8, i8* %word, align 1, !dbg !8964, !tbaa !3660
  %tobool8 = icmp ne i8 %9, 0, !dbg !8964
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8966

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8967
  br label %return, !dbg !8967

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8968, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8968
  store i8* %add.ptr, i8** %p, align 8, !dbg !8968, !tbaa !2998
  %11 = load i64, i64* %length.addr, align 8, !dbg !8969, !tbaa !3851
  %sub = sub i64 %11, 1, !dbg !8969
  store i64 %sub, i64* %length.addr, align 8, !dbg !8969, !tbaa !3851
  %12 = load i64, i64* %length.addr, align 8, !dbg !8970, !tbaa !3851
  %tobool11 = icmp ne i64 %12, 0, !dbg !8970
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8972

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8973
  br label %return, !dbg !8973

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8974, !tbaa !3851
  %and14 = and i64 %13, 15, !dbg !8974
  %cmp = icmp eq i64 %and14, 0, !dbg !8976
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8977

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8978

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8979, !llvm.loop !8980

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8983, !tbaa !2998
  %15 = load i8*, i8** %p, align 8, !dbg !8984, !tbaa !2998
  %16 = load i64, i64* %length.addr, align 8, !dbg !8985, !tbaa !3851
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8986
  %cmp17 = icmp eq i32 %call, 0, !dbg !8987
  store i1 %cmp17, i1* %retval, align 1, !dbg !8988
  br label %return, !dbg !8988

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8989
  ret i1 %17, !dbg !8989
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8990 !ctir !450 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !248
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8993, metadata !DIExpression()), !dbg !8994
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8995, metadata !DIExpression()), !dbg !8996
  store i64 %size, i64* %size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8997, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8999, metadata !DIExpression()), !dbg !9000
  %0 = load i32, i32* %fd.addr, align 4, !dbg !9001, !tbaa !2985
  %1 = load i64, i64* %size.addr, align 8, !dbg !9002, !tbaa !3851
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #10, !dbg !9003
  store i64 %call, i64* %file_end, align 8, !dbg !9000, !tbaa !3851
  %2 = load i64, i64* %file_end, align 8, !dbg !9004, !tbaa !3851
  %cmp = icmp slt i64 %2, 0, !dbg !9006
  br i1 %cmp, label %if.then, label %if.end, !dbg !9007

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9008
  %3 = load i32, i32* %call1, align 4, !dbg !9008, !tbaa !2985, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #10, !dbg !9010
  %4 = load i8*, i8** %name.addr, align 8, !dbg !9011, !tbaa !2998
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !9011
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !9012
  store i1 false, i1* %retval, align 1, !dbg !9013
  br label %return, !dbg !9013

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !9014, !tbaa !3109
  %tobool = trunc i8 %5 to i1, !dbg !9014
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !9016

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !9017, !tbaa !2985
  %7 = load i64, i64* %file_end, align 8, !dbg !9018, !tbaa !3851
  %8 = load i64, i64* %size.addr, align 8, !dbg !9019, !tbaa !3851
  %sub = sub nsw i64 %7, %8, !dbg !9020
  %9 = load i64, i64* %size.addr, align 8, !dbg !9021, !tbaa !3851
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !9022
  %cmp5 = icmp slt i32 %call4, 0, !dbg !9023
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !9024

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #15, !dbg !9025
  %10 = load i32, i32* %call7, align 4, !dbg !9025, !tbaa !2985, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #10, !dbg !9027
  %11 = load i8*, i8** %name.addr, align 8, !dbg !9028, !tbaa !2998
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !9028
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !9029
  store i1 false, i1* %retval, align 1, !dbg !9030
  br label %return, !dbg !9030

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !9031
  br label %return, !dbg !9031

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !9032
  ret i1 %12, !dbg !9032
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !9033 !ctir !454 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !9036, metadata !DIExpression()), !dbg !9037
  store i64 %length, i64* %length.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9040, metadata !DIExpression()), !dbg !9041
  store i32 0, i32* %ret, align 4, !dbg !9041, !tbaa !2985
  %0 = load i32, i32* %fd.addr, align 4, !dbg !9042, !tbaa !2985
  %1 = load i64, i64* %offset.addr, align 8, !dbg !9043, !tbaa !3851
  %2 = load i64, i64* %length.addr, align 8, !dbg !9044, !tbaa !3851
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !9045
  store i32 %call, i32* %ret, align 4, !dbg !9046, !tbaa !2985
  %3 = load i32, i32* %ret, align 4, !dbg !9047, !tbaa !2985
  %cmp = icmp slt i32 %3, 0, !dbg !9049
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9050

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9051
  %4 = load i32, i32* %call1, align 4, !dbg !9051, !tbaa !2985, !ctir !7
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !9052
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !9053

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #15, !dbg !9054
  %5 = load i32, i32* %call3, align 4, !dbg !9054, !tbaa !2985, !ctir !7
  %cmp4 = icmp eq i32 %5, 38, !dbg !9055
  br i1 %cmp4, label %if.then, label %if.end, !dbg !9056

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !9057, !tbaa !2985
  br label %if.end, !dbg !9058

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9059, !tbaa !2985
  ret i32 %6, !dbg !9060
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !9061 !ctir !307 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !9062, metadata !DIExpression()), !dbg !9063
  %0 = load i32, i32* %err.addr, align 4, !dbg !9064, !tbaa !2985
  %cmp = icmp eq i32 %0, 95, !dbg !9065
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9066

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !9066

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !9067
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !9068 !ctir !438 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9069, metadata !DIExpression()), !dbg !9070
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9071, !tbaa !2998
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !9072, !ctir !441
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !9072, !tbaa !8476, !ctir !431
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !9071
  call void @free(i8* %2) #10, !dbg !9073
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9074, !tbaa !2998
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !9075, !ctir !441
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !9076, !tbaa !8476, !ctir !431
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9077, !tbaa !2998
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !9078, !ctir !441
  store i64 0, i64* %ei_count, align 8, !dbg !9079, !tbaa !8457, !ctir !55
  ret void, !dbg !9080
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !520 !ctir !452 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !9081, metadata !DIExpression()), !dbg !9082
  store i64 %n_bytes, i64* %n_bytes.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !9083, metadata !DIExpression()), !dbg !9084
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !9085, !tbaa !2998
  %cmp = icmp eq i8* %0, null, !dbg !9087
  br i1 %cmp, label %if.then, label %if.end3, !dbg !9088

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !9089, !tbaa !3851
  %call = call noalias i8* @calloc(i64 %1, i64 1) #10, !dbg !9091
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !9092, !tbaa !2998
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !9093, !tbaa !2998
  %cmp1 = icmp eq i8* %2, null, !dbg !9095
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !9096

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !9097, !tbaa !2998
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !9099, !tbaa !3851
  br label %if.end, !dbg !9100

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !9101

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !9102

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !9103, !tbaa !3851
  %tobool = icmp ne i64 %3, 0, !dbg !9102
  br i1 %tobool, label %while.body, label %while.end, !dbg !9102

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !9104, metadata !DIExpression()), !dbg !9106
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !9107, !tbaa !3851
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !9107, !tbaa !3851
  %cmp4 = icmp ult i64 %4, %5, !dbg !9107
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !9107

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !9107, !tbaa !3851
  br label %cond.end, !dbg !9107

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !9107, !tbaa !3851
  br label %cond.end, !dbg !9107

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !9107
  store i64 %cond, i64* %n, align 8, !dbg !9106, !tbaa !3851
  %8 = load i32, i32* %fd.addr, align 4, !dbg !9108, !tbaa !2985
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !9110, !tbaa !2998
  %10 = load i64, i64* %n, align 8, !dbg !9111, !tbaa !3851
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !9112
  %11 = load i64, i64* %n, align 8, !dbg !9113, !tbaa !3851
  %cmp6 = icmp ne i64 %call5, %11, !dbg !9114
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9115

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !9116
  br label %return, !dbg !9116

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !9117, !tbaa !3851
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !9118, !tbaa !3851
  %sub = sub i64 %13, %12, !dbg !9118
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !9118, !tbaa !3851
  br label %while.cond, !dbg !9102, !llvm.loop !9119

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !9121
  br label %return, !dbg !9121

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !9122
  ret i1 %14, !dbg !9122
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !9123 !ctir !368 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9124, metadata !DIExpression()), !dbg !9125
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  %0 = load i32, i32* %mode.addr, align 4, !dbg !9128, !tbaa !2985
  %and = and i32 %0, 61440, !dbg !9128
  %cmp = icmp eq i32 %and, 40960, !dbg !9128
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !9129

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !9130
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !9131

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9132, !tbaa !2998
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #10, !dbg !9133
  %cmp2 = icmp eq i32 %call1, 0, !dbg !9134
  br label %lor.end, !dbg !9131

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !9135
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !9136 !ctir !297 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9139, !tbaa !2998
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !9140
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !9140
  %call = call i32 @geteuid() #10, !dbg !9141
  %cmp = icmp eq i32 %call, 0, !dbg !9142
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9143, !tbaa !2998
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !9144, !ctir !254
  %frombool = zext i1 %cmp to i8, !dbg !9145
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !9145, !tbaa !8332, !ctir !120
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9146, !tbaa !2998
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !9147, !ctir !254
  %frombool1 = zext i1 %cmp to i8, !dbg !9148
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !9148, !tbaa !7985, !ctir !120
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !9149, !tbaa !2998
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !9150, !ctir !254
  store i32 -1, i32* %rename_errno, align 4, !dbg !9151, !tbaa !3282, !ctir !7
  ret void, !dbg !9152
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !9153 !ctir !533 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !536
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !535
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9154, metadata !DIExpression()), !dbg !9155
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9156, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !9158, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !9160, metadata !DIExpression()), !dbg !9161
  %0 = load i64, i64* %ino.addr, align 8, !dbg !9162, !tbaa !3851
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !9163, !ctir !536
  store i64 %0, i64* %st_ino, align 8, !dbg !9164, !tbaa !9165, !ctir !227
  %1 = load i64, i64* %dev.addr, align 8, !dbg !9167, !tbaa !3851
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !9168, !ctir !536
  store i64 %1, i64* %st_dev, align 8, !dbg !9169, !tbaa !9170, !ctir !230
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !9171, !ctir !536
  store i8* null, i8** %name, align 8, !dbg !9172, !tbaa !9173, !ctir !9
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9174, !tbaa !2998
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !9175
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !9176
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9176
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !9177, !tbaa !2998
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9178, !tbaa !2998
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !9178
  br i1 %tobool, label %if.then, label %if.end, !dbg !9180

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9181, !tbaa !2998
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !9181
  call void @src_to_dest_free(i8* %7), !dbg !9182
  br label %if.end, !dbg !9182

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9183
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !9184 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !535
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !9187, metadata !DIExpression()), !dbg !9188
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9189, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9189
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !9188, !tbaa !2998
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9190, !tbaa !2998
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !9191, !ctir !536
  %3 = load i8*, i8** %name, align 8, !dbg !9191, !tbaa !9173, !ctir !9
  call void @free(i8* %3) #10, !dbg !9192
  %4 = load i8*, i8** %x.addr, align 8, !dbg !9193, !tbaa !2998
  call void @free(i8* %4) #10, !dbg !9194
  ret void, !dbg !9195
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !9196 !ctir !541 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !536
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !543
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9197, metadata !DIExpression()), !dbg !9198
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !9201, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !9203, metadata !DIExpression()), !dbg !9204
  %0 = load i64, i64* %ino.addr, align 8, !dbg !9205, !tbaa !3851
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !9206, !ctir !536
  store i64 %0, i64* %st_ino, align 8, !dbg !9207, !tbaa !9165, !ctir !227
  %1 = load i64, i64* %dev.addr, align 8, !dbg !9208, !tbaa !3851
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !9209, !ctir !536
  store i64 %1, i64* %st_dev, align 8, !dbg !9210, !tbaa !9170, !ctir !230
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9211, !tbaa !2998
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !9212
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !9213
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9213
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !9214, !tbaa !2998
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !9215, !tbaa !2998
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !9215
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9215

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !9216, !tbaa !2998
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !9217, !ctir !544
  %7 = load i8*, i8** %name, align 8, !dbg !9217, !tbaa !9173, !ctir !9
  br label %cond.end, !dbg !9215

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9215

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !9215
  ret i8* %cond, !dbg !9218
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !9219 !ctir !545 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !535
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !535
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9220, metadata !DIExpression()), !dbg !9221
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9222, metadata !DIExpression()), !dbg !9223
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9224, metadata !DIExpression()), !dbg !9225
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !9226, metadata !DIExpression()), !dbg !9227
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !9228, metadata !DIExpression()), !dbg !9229
  %call = call noalias i8* @xmalloc(i64 24), !dbg !9230
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9230
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !9231, !tbaa !2998
  %1 = load i8*, i8** %name.addr, align 8, !dbg !9232, !tbaa !2998
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !9233
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9234, !tbaa !2998
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !9235, !ctir !536
  store i8* %call1, i8** %name2, align 8, !dbg !9236, !tbaa !9173, !ctir !9
  %3 = load i64, i64* %ino.addr, align 8, !dbg !9237, !tbaa !3851
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9238, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !9239, !ctir !536
  store i64 %3, i64* %st_ino, align 8, !dbg !9240, !tbaa !9165, !ctir !227
  %5 = load i64, i64* %dev.addr, align 8, !dbg !9241, !tbaa !3851
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9242, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !9243, !ctir !536
  store i64 %5, i64* %st_dev, align 8, !dbg !9244, !tbaa !9170, !ctir !230
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9245, !tbaa !2998
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9246, !tbaa !2998
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !9246
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !9247
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !9247
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9248, !tbaa !2998
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9249, !tbaa !2998
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !9251
  br i1 %cmp, label %if.then, label %if.end, !dbg !9252

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9253
  unreachable, !dbg !9253

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9255, !tbaa !2998
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9257, !tbaa !2998
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !9258
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !9259

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9260, !tbaa !2998
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !9260
  call void @src_to_dest_free(i8* %15), !dbg !9262
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9263, !tbaa !2998
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !9264, !ctir !536
  %17 = load i8*, i8** %name6, align 8, !dbg !9264, !tbaa !9173, !ctir !9
  store i8* %17, i8** %retval, align 8, !dbg !9265
  br label %return, !dbg !9265

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !9266
  br label %return, !dbg !9266

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !9267
  ret i8* %18, !dbg !9267
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !9268 !ctir !134 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !9269
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !9270, !tbaa !2998
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9271, !tbaa !2998
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !9273
  br i1 %cmp, label %if.then, label %if.end, !dbg !9274

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9275
  unreachable, !dbg !9275

if.end:                                           ; preds = %entry
  ret void, !dbg !9276
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !9277 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !543
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9278, metadata !DIExpression()), !dbg !9279
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !9280, metadata !DIExpression()), !dbg !9281
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !9282, metadata !DIExpression()), !dbg !9283
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9284, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9284
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !9283, !tbaa !2998
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !9285, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !9286, !ctir !544
  %3 = load i64, i64* %st_ino, align 8, !dbg !9286, !tbaa !9165, !ctir !227
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !9287, !tbaa !3851
  %rem = urem i64 %3, %4, !dbg !9288
  ret i64 %rem, !dbg !9289
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !9290 !ctir !551 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !543
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !543
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9291, metadata !DIExpression()), !dbg !9292
  store i8* %y, i8** %y.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !9293, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !9295, metadata !DIExpression()), !dbg !9296
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9297, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9297
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !9296, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !9298, metadata !DIExpression()), !dbg !9299
  %2 = load i8*, i8** %y.addr, align 8, !dbg !9300, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !9300
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !9299, !tbaa !2998
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9301, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !9301, !ctir !544
  %5 = load i64, i64* %st_ino, align 8, !dbg !9301, !tbaa !9165, !ctir !227
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !9301, !tbaa !2998
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !9301, !ctir !544
  %7 = load i64, i64* %st_ino1, align 8, !dbg !9301, !tbaa !9165, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !9301
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9301

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9301, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !9301, !ctir !544
  %9 = load i64, i64* %st_dev, align 8, !dbg !9301, !tbaa !9170, !ctir !230
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !9301, !tbaa !2998
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !9301, !ctir !544
  %11 = load i64, i64* %st_dev2, align 8, !dbg !9301, !tbaa !9170, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !9301
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !9302
  %13 = zext i1 %12 to i64, !dbg !9301
  %cond = select i1 %12, i32 1, i32 0, !dbg !9301
  %tobool = icmp ne i32 %cond, 0, !dbg !9301
  ret i1 %tobool, !dbg !9303
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !9304 !ctir !134 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9305, !tbaa !2998
  call void @hash_free(%struct.hash_table* %0), !dbg !9306
  ret void, !dbg !9307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !9308 !ctir !1531 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !9309, metadata !DIExpression()), !dbg !9310
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9311, metadata !DIExpression()), !dbg !9312
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !9313, !tbaa !2985
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9314, !tbaa !2998
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !9315, !ctir !1534
  store i32 %0, i32* %fd, align 8, !dbg !9316, !tbaa !9317, !ctir !7
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9318, !tbaa !2998
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !9319, !ctir !1534
  store i64 0, i64* %ei_count, align 8, !dbg !9320, !tbaa !8457, !ctir !55
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9321, !tbaa !2998
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !9322, !ctir !1534
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !9323, !tbaa !8476, !ctir !1543
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9324, !tbaa !2998
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !9325, !ctir !1534
  store i64 0, i64* %scan_start, align 8, !dbg !9326, !tbaa !9327, !ctir !1530
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9328, !tbaa !2998
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !9329, !ctir !1534
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !9330, !tbaa !8437, !ctir !120
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9331, !tbaa !2998
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !9332, !ctir !1534
  store i8 0, i8* %hit_final_extent, align 1, !dbg !9333, !tbaa !8431, !ctir !120
  %call = call zeroext i1 @extent_need_sync(), !dbg !9334
  %7 = zext i1 %call to i64, !dbg !9334
  %cond = select i1 %call, i32 1, i32 0, !dbg !9334
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9335, !tbaa !2998
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !9336, !ctir !1534
  store i32 %cond, i32* %fm_flags, align 8, !dbg !9337, !tbaa !9338, !ctir !70
  ret void, !dbg !9339
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !9340 !ctir !1247 {
entry:
  ret i1 true, !dbg !9341
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !9342 !ctir !1549 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !70
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1543
  %fiemap_buf = alloca %union.anon.20, align 8, !ctir !9343
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1551
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1578
  %prev_idx = alloca i64, align 8, !ctir !55
  %i = alloca i32, align 4, !ctir !70
  %new_logical = alloca i64, align 8, !ctir !1556
  %length_adjust = alloca i64, align 8, !ctir !1556
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9347, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.declare(metadata i32* %si, metadata !9349, metadata !DIExpression()), !dbg !9350
  store i32 0, i32* %si, align 4, !dbg !9350, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !9351, metadata !DIExpression()), !dbg !9352
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9353, !tbaa !2998
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !9354, !ctir !1534
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !9354, !tbaa !8476, !ctir !1543
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !9352, !tbaa !2998
  br label %while.body, !dbg !9355

while.body:                                       ; preds = %entry, %if.end165
  call void @llvm.dbg.declare(metadata %union.anon.20* %fiemap_buf, metadata !9356, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !9359, metadata !DIExpression()), !dbg !9360
  %f = bitcast %union.anon.20* %fiemap_buf to %struct.fiemap*, !dbg !9361
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !9360, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !9362, metadata !DIExpression()), !dbg !9363
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9364, !tbaa !2998
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !9365, !ctir !1552
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !9364, !ctir !1567
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9363, !tbaa !2998
  %3 = bitcast %union.anon.20* %fiemap_buf to i8*, !dbg !9366
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !9366
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9367, !tbaa !2998
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !9368, !ctir !1534
  %5 = load i64, i64* %scan_start, align 8, !dbg !9368, !tbaa !9327, !ctir !1530
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9369, !tbaa !2998
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !9370, !ctir !1552
  store i64 %5, i64* %fm_start, align 8, !dbg !9371, !tbaa !3851, !ctir !1556
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9372, !tbaa !2998
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !9373, !ctir !1534
  %8 = load i32, i32* %fm_flags, align 8, !dbg !9373, !tbaa !9338, !ctir !70
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9374, !tbaa !2998
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !9375, !ctir !1552
  store i32 %8, i32* %fm_flags2, align 8, !dbg !9376, !tbaa !2985, !ctir !1561
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9377, !tbaa !2998
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !9378, !ctir !1552
  store i32 72, i32* %fm_extent_count, align 8, !dbg !9379, !tbaa !2985, !ctir !1561
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9380, !tbaa !2998
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !9381, !ctir !1534
  %12 = load i64, i64* %scan_start3, align 8, !dbg !9381, !tbaa !9327, !ctir !1530
  %sub = sub i64 -1, %12, !dbg !9382
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9383, !tbaa !2998
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !9384, !ctir !1552
  store i64 %sub, i64* %fm_length, align 8, !dbg !9385, !tbaa !3851, !ctir !1556
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9386, !tbaa !2998
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !9388, !ctir !1534
  %15 = load i32, i32* %fd, align 8, !dbg !9388, !tbaa !9317, !ctir !7
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9389, !tbaa !2998
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #10, !dbg !9390
  %cmp = icmp slt i32 %call, 0, !dbg !9391
  br i1 %cmp, label %if.then, label %if.end7, !dbg !9392

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9393, !tbaa !2998
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !9396, !ctir !1534
  %18 = load i64, i64* %scan_start4, align 8, !dbg !9396, !tbaa !9327, !ctir !1530
  %cmp5 = icmp eq i64 %18, 0, !dbg !9397
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9398

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9399, !tbaa !2998
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !9400, !ctir !1534
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !9401, !tbaa !8437, !ctir !120
  br label %if.end, !dbg !9399

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !9402
  br label %return, !dbg !9402

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9403, !tbaa !2998
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !9405, !ctir !1552
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !9405, !tbaa !2985, !ctir !1561
  %cmp8 = icmp eq i32 %21, 0, !dbg !9406
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !9407

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9408, !tbaa !2998
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !9410, !ctir !1534
  store i8 1, i8* %hit_final_extent, align 1, !dbg !9411, !tbaa !8431, !ctir !120
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9412, !tbaa !2998
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !9413, !ctir !1534
  %24 = load i64, i64* %scan_start10, align 8, !dbg !9413, !tbaa !9327, !ctir !1530
  %cmp11 = icmp ne i64 %24, 0, !dbg !9414
  store i1 %cmp11, i1* %retval, align 1, !dbg !9415
  br label %return, !dbg !9415

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9416, !tbaa !2998
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !9416, !ctir !1534
  %26 = load i64, i64* %ei_count, align 8, !dbg !9416, !tbaa !8457, !ctir !55
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9416, !tbaa !2998
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !9416, !ctir !1552
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !9416, !tbaa !2985, !ctir !1561
  %conv = zext i32 %28 to i64, !dbg !9416
  %sub14 = sub i64 -1, %conv, !dbg !9416
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !9416
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !9419

if.then17:                                        ; preds = %if.end12
  br label %if.end18, !dbg !9419

if.else:                                          ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9416
  unreachable, !dbg !9416

if.end18:                                         ; preds = %if.then17
  %29 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9420, !tbaa !2998
  %fm_mapped_extents19 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %29, i32 0, i32 3, !dbg !9421, !ctir !1552
  %30 = load i32, i32* %fm_mapped_extents19, align 4, !dbg !9421, !tbaa !2985, !ctir !1561
  %conv20 = zext i32 %30 to i64, !dbg !9420
  %31 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9422, !tbaa !2998
  %ei_count21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %31, i32 0, i32 3, !dbg !9423, !ctir !1534
  %32 = load i64, i64* %ei_count21, align 8, !dbg !9424, !tbaa !8457, !ctir !55
  %add = add i64 %32, %conv20, !dbg !9424
  store i64 %add, i64* %ei_count21, align 8, !dbg !9424, !tbaa !8457, !ctir !55
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !9425, metadata !DIExpression()), !dbg !9427
  %33 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9428, !tbaa !2998
  %34 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9429, !tbaa !2998
  %ext_info22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %34, i32 0, i32 6, !dbg !9430, !ctir !1534
  %35 = load %struct.extent_info*, %struct.extent_info** %ext_info22, align 8, !dbg !9430, !tbaa !8476, !ctir !1543
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %33 to i64, !dbg !9431
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %35 to i64, !dbg !9431
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9431
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !9431
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !9427, !tbaa !3851
  %36 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9432, !tbaa !2998
  %ext_info23 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %36, i32 0, i32 6, !dbg !9433, !ctir !1534
  %37 = load %struct.extent_info*, %struct.extent_info** %ext_info23, align 8, !dbg !9433, !tbaa !8476, !ctir !1543
  %38 = bitcast %struct.extent_info* %37 to i8*, !dbg !9432
  %39 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9434, !tbaa !2998
  %ei_count24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %39, i32 0, i32 3, !dbg !9435, !ctir !1534
  %40 = load i64, i64* %ei_count24, align 8, !dbg !9435, !tbaa !8457, !ctir !55
  %call25 = call i8* @xnrealloc(i8* %38, i64 %40, i64 24), !dbg !9436
  %41 = bitcast i8* %call25 to %struct.extent_info*, !dbg !9436
  %42 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9437, !tbaa !2998
  %ext_info26 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %42, i32 0, i32 6, !dbg !9438, !ctir !1534
  store %struct.extent_info* %41, %struct.extent_info** %ext_info26, align 8, !dbg !9439, !tbaa !8476, !ctir !1543
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9440, !tbaa !2998
  %ext_info27 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !9441, !ctir !1534
  %44 = load %struct.extent_info*, %struct.extent_info** %ext_info27, align 8, !dbg !9441, !tbaa !8476, !ctir !1543
  %45 = load i64, i64* %prev_idx, align 8, !dbg !9442, !tbaa !3851
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %44, i64 %45, !dbg !9443
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !9444, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9445, metadata !DIExpression()), !dbg !9446
  store i32 0, i32* %i, align 4, !dbg !9446, !tbaa !2985
  store i32 0, i32* %i, align 4, !dbg !9447, !tbaa !2985
  br label %for.cond, !dbg !9449

for.cond:                                         ; preds = %for.inc, %if.end18
  %46 = load i32, i32* %i, align 4, !dbg !9450, !tbaa !2985
  %47 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9452, !tbaa !2998
  %fm_mapped_extents28 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %47, i32 0, i32 3, !dbg !9453, !ctir !1552
  %48 = load i32, i32* %fm_mapped_extents28, align 4, !dbg !9453, !tbaa !2985, !ctir !1561
  %cmp29 = icmp ult i32 %46, %48, !dbg !9454
  br i1 %cmp29, label %for.body, label %for.end, !dbg !9455

for.body:                                         ; preds = %for.cond
  %49 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9456, !tbaa !2998
  %50 = load i32, i32* %i, align 4, !dbg !9456, !tbaa !2985
  %idxprom = zext i32 %50 to i64, !dbg !9456
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %49, i64 %idxprom, !dbg !9456, !ctir !1578
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 0, !dbg !9456, !ctir !1568
  %51 = load i64, i64* %fe_logical, align 8, !dbg !9456, !tbaa !9460, !ctir !1556
  %52 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9456, !tbaa !2998
  %53 = load i32, i32* %i, align 4, !dbg !9456, !tbaa !2985
  %idxprom32 = zext i32 %53 to i64, !dbg !9456
  %arrayidx33 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %52, i64 %idxprom32, !dbg !9456, !ctir !1578
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx33, i32 0, i32 2, !dbg !9456, !ctir !1568
  %54 = load i64, i64* %fe_length, align 8, !dbg !9456, !tbaa !9462, !ctir !1556
  %sub34 = sub i64 9223372036854775807, %54, !dbg !9456
  %cmp35 = icmp ule i64 %51, %sub34, !dbg !9456
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !9463

if.then37:                                        ; preds = %for.body
  br label %if.end39, !dbg !9463

if.else38:                                        ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.171, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9456
  unreachable, !dbg !9456

if.end39:                                         ; preds = %if.then37
  %55 = load i32, i32* %si, align 4, !dbg !9464, !tbaa !2985
  %tobool = icmp ne i32 %55, 0, !dbg !9464
  br i1 %tobool, label %land.lhs.true, label %if.else61, !dbg !9466

land.lhs.true:                                    ; preds = %if.end39
  %56 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9467, !tbaa !2998
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %56, i32 0, i32 2, !dbg !9468, !ctir !1544
  %57 = load i32, i32* %ext_flags, align 8, !dbg !9468, !tbaa !9469, !ctir !70
  %58 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9470, !tbaa !2998
  %59 = load i32, i32* %i, align 4, !dbg !9471, !tbaa !2985
  %idxprom40 = zext i32 %59 to i64, !dbg !9470
  %arrayidx41 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %58, i64 %idxprom40, !dbg !9470, !ctir !1578
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx41, i32 0, i32 4, !dbg !9472, !ctir !1568
  %60 = load i32, i32* %fe_flags, align 8, !dbg !9472, !tbaa !9473, !ctir !1561
  %and = and i32 %60, -2, !dbg !9474
  %cmp42 = icmp eq i32 %57, %and, !dbg !9475
  br i1 %cmp42, label %land.lhs.true44, label %if.else61, !dbg !9476

land.lhs.true44:                                  ; preds = %land.lhs.true
  %61 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9477, !tbaa !2998
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %61, i32 0, i32 0, !dbg !9478, !ctir !1544
  %62 = load i64, i64* %ext_logical, align 8, !dbg !9478, !tbaa !8480, !ctir !1530
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9479, !tbaa !2998
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 1, !dbg !9480, !ctir !1544
  %64 = load i64, i64* %ext_length, align 8, !dbg !9480, !tbaa !8487, !ctir !1530
  %add45 = add nsw i64 %62, %64, !dbg !9481
  %65 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9482, !tbaa !2998
  %66 = load i32, i32* %i, align 4, !dbg !9483, !tbaa !2985
  %idxprom46 = zext i32 %66 to i64, !dbg !9482
  %arrayidx47 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %65, i64 %idxprom46, !dbg !9482, !ctir !1578
  %fe_logical48 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx47, i32 0, i32 0, !dbg !9484, !ctir !1568
  %67 = load i64, i64* %fe_logical48, align 8, !dbg !9484, !tbaa !9460, !ctir !1556
  %cmp49 = icmp eq i64 %add45, %67, !dbg !9485
  br i1 %cmp49, label %if.then51, label %if.else61, !dbg !9486

if.then51:                                        ; preds = %land.lhs.true44
  %68 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9487, !tbaa !2998
  %69 = load i32, i32* %i, align 4, !dbg !9489, !tbaa !2985
  %idxprom52 = zext i32 %69 to i64, !dbg !9487
  %arrayidx53 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %68, i64 %idxprom52, !dbg !9487, !ctir !1578
  %fe_length54 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx53, i32 0, i32 2, !dbg !9490, !ctir !1568
  %70 = load i64, i64* %fe_length54, align 8, !dbg !9490, !tbaa !9462, !ctir !1556
  %71 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9491, !tbaa !2998
  %ext_length55 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %71, i32 0, i32 1, !dbg !9492, !ctir !1544
  %72 = load i64, i64* %ext_length55, align 8, !dbg !9493, !tbaa !8487, !ctir !1530
  %add56 = add i64 %72, %70, !dbg !9493
  store i64 %add56, i64* %ext_length55, align 8, !dbg !9493, !tbaa !8487, !ctir !1530
  %73 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9494, !tbaa !2998
  %74 = load i32, i32* %i, align 4, !dbg !9495, !tbaa !2985
  %idxprom57 = zext i32 %74 to i64, !dbg !9494
  %arrayidx58 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %73, i64 %idxprom57, !dbg !9494, !ctir !1578
  %fe_flags59 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx58, i32 0, i32 4, !dbg !9496, !ctir !1568
  %75 = load i32, i32* %fe_flags59, align 8, !dbg !9496, !tbaa !9473, !ctir !1561
  %76 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9497, !tbaa !2998
  %ext_flags60 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %76, i32 0, i32 2, !dbg !9498, !ctir !1544
  store i32 %75, i32* %ext_flags60, align 8, !dbg !9499, !tbaa !9469, !ctir !70
  br label %if.end131, !dbg !9500

if.else61:                                        ; preds = %land.lhs.true44, %land.lhs.true, %if.end39
  %77 = load i32, i32* %si, align 4, !dbg !9501, !tbaa !2985
  %cmp62 = icmp eq i32 %77, 0, !dbg !9503
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false, !dbg !9504

land.lhs.true64:                                  ; preds = %if.else61
  %78 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9505, !tbaa !2998
  %scan_start65 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %78, i32 0, i32 1, !dbg !9506, !ctir !1534
  %79 = load i64, i64* %scan_start65, align 8, !dbg !9506, !tbaa !9327, !ctir !1530
  %80 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9507, !tbaa !2998
  %81 = load i32, i32* %i, align 4, !dbg !9508, !tbaa !2985
  %idxprom66 = zext i32 %81 to i64, !dbg !9507
  %arrayidx67 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %80, i64 %idxprom66, !dbg !9507, !ctir !1578
  %fe_logical68 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx67, i32 0, i32 0, !dbg !9509, !ctir !1568
  %82 = load i64, i64* %fe_logical68, align 8, !dbg !9509, !tbaa !9460, !ctir !1556
  %cmp69 = icmp ugt i64 %79, %82, !dbg !9510
  br i1 %cmp69, label %if.then81, label %lor.lhs.false, !dbg !9511

lor.lhs.false:                                    ; preds = %land.lhs.true64, %if.else61
  %83 = load i32, i32* %si, align 4, !dbg !9512, !tbaa !2985
  %tobool71 = icmp ne i32 %83, 0, !dbg !9512
  br i1 %tobool71, label %land.lhs.true72, label %if.else115, !dbg !9513

land.lhs.true72:                                  ; preds = %lor.lhs.false
  %84 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9514, !tbaa !2998
  %ext_logical73 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %84, i32 0, i32 0, !dbg !9515, !ctir !1544
  %85 = load i64, i64* %ext_logical73, align 8, !dbg !9515, !tbaa !8480, !ctir !1530
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9516, !tbaa !2998
  %ext_length74 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 1, !dbg !9517, !ctir !1544
  %87 = load i64, i64* %ext_length74, align 8, !dbg !9517, !tbaa !8487, !ctir !1530
  %add75 = add nsw i64 %85, %87, !dbg !9518
  %88 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9519, !tbaa !2998
  %89 = load i32, i32* %i, align 4, !dbg !9520, !tbaa !2985
  %idxprom76 = zext i32 %89 to i64, !dbg !9519
  %arrayidx77 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %88, i64 %idxprom76, !dbg !9519, !ctir !1578
  %fe_logical78 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx77, i32 0, i32 0, !dbg !9521, !ctir !1568
  %90 = load i64, i64* %fe_logical78, align 8, !dbg !9521, !tbaa !9460, !ctir !1556
  %cmp79 = icmp ugt i64 %add75, %90, !dbg !9522
  br i1 %cmp79, label %if.then81, label %if.else115, !dbg !9523

if.then81:                                        ; preds = %land.lhs.true72, %land.lhs.true64
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !9524, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !9527, metadata !DIExpression()), !dbg !9528
  %91 = load i32, i32* %si, align 4, !dbg !9529, !tbaa !2985
  %cmp82 = icmp eq i32 %91, 0, !dbg !9531
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !9532

if.then84:                                        ; preds = %if.then81
  %92 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9533, !tbaa !2998
  %scan_start85 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %92, i32 0, i32 1, !dbg !9534, !ctir !1534
  %93 = load i64, i64* %scan_start85, align 8, !dbg !9534, !tbaa !9327, !ctir !1530
  store i64 %93, i64* %new_logical, align 8, !dbg !9535, !tbaa !3851
  br label %if.end90, !dbg !9536

if.else86:                                        ; preds = %if.then81
  %94 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9537, !tbaa !2998
  %ext_logical87 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %94, i32 0, i32 0, !dbg !9539, !ctir !1544
  %95 = load i64, i64* %ext_logical87, align 8, !dbg !9539, !tbaa !8480, !ctir !1530
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9540, !tbaa !2998
  %ext_length88 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 1, !dbg !9541, !ctir !1544
  %97 = load i64, i64* %ext_length88, align 8, !dbg !9541, !tbaa !8487, !ctir !1530
  %add89 = add nsw i64 %95, %97, !dbg !9542
  store i64 %add89, i64* %new_logical, align 8, !dbg !9543, !tbaa !3851
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then84
  %98 = load i64, i64* %new_logical, align 8, !dbg !9544, !tbaa !3851
  %99 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9545, !tbaa !2998
  %100 = load i32, i32* %i, align 4, !dbg !9546, !tbaa !2985
  %idxprom91 = zext i32 %100 to i64, !dbg !9545
  %arrayidx92 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %99, i64 %idxprom91, !dbg !9545, !ctir !1578
  %fe_logical93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx92, i32 0, i32 0, !dbg !9547, !ctir !1568
  %101 = load i64, i64* %fe_logical93, align 8, !dbg !9547, !tbaa !9460, !ctir !1556
  %sub94 = sub i64 %98, %101, !dbg !9548
  store i64 %sub94, i64* %length_adjust, align 8, !dbg !9549, !tbaa !3851
  %102 = load i64, i64* %length_adjust, align 8, !dbg !9550, !tbaa !3851
  %103 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9552, !tbaa !2998
  %104 = load i32, i32* %i, align 4, !dbg !9553, !tbaa !2985
  %idxprom95 = zext i32 %104 to i64, !dbg !9552
  %arrayidx96 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %103, i64 %idxprom95, !dbg !9552, !ctir !1578
  %fe_length97 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx96, i32 0, i32 2, !dbg !9554, !ctir !1568
  %105 = load i64, i64* %fe_length97, align 8, !dbg !9554, !tbaa !9462, !ctir !1556
  %cmp98 = icmp ult i64 %102, %105, !dbg !9555
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !9556

if.then100:                                       ; preds = %if.end90
  %106 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9557, !tbaa !2998
  %scan_start101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %106, i32 0, i32 1, !dbg !9560, !ctir !1534
  %107 = load i64, i64* %scan_start101, align 8, !dbg !9560, !tbaa !9327, !ctir !1530
  %cmp102 = icmp eq i64 %107, 0, !dbg !9561
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !9562

if.then104:                                       ; preds = %if.then100
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9563, !tbaa !2998
  %initial_scan_failed105 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 4, !dbg !9564, !ctir !1534
  store i8 1, i8* %initial_scan_failed105, align 8, !dbg !9565, !tbaa !8437, !ctir !120
  br label %if.end106, !dbg !9563

if.end106:                                        ; preds = %if.then104, %if.then100
  store i1 false, i1* %retval, align 1, !dbg !9566
  br label %return, !dbg !9566

if.end107:                                        ; preds = %if.end90
  %109 = load i64, i64* %new_logical, align 8, !dbg !9567, !tbaa !3851
  %110 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9568, !tbaa !2998
  %111 = load i32, i32* %i, align 4, !dbg !9569, !tbaa !2985
  %idxprom108 = zext i32 %111 to i64, !dbg !9568
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %110, i64 %idxprom108, !dbg !9568, !ctir !1578
  %fe_logical110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 0, !dbg !9570, !ctir !1568
  store i64 %109, i64* %fe_logical110, align 8, !dbg !9571, !tbaa !9460, !ctir !1556
  %112 = load i64, i64* %length_adjust, align 8, !dbg !9572, !tbaa !3851
  %113 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9573, !tbaa !2998
  %114 = load i32, i32* %i, align 4, !dbg !9574, !tbaa !2985
  %idxprom111 = zext i32 %114 to i64, !dbg !9573
  %arrayidx112 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %113, i64 %idxprom111, !dbg !9573, !ctir !1578
  %fe_length113 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx112, i32 0, i32 2, !dbg !9575, !ctir !1568
  %115 = load i64, i64* %fe_length113, align 8, !dbg !9576, !tbaa !9462, !ctir !1556
  %sub114 = sub i64 %115, %112, !dbg !9576
  store i64 %sub114, i64* %fe_length113, align 8, !dbg !9576, !tbaa !9462, !ctir !1556
  %116 = load i32, i32* %i, align 4, !dbg !9577, !tbaa !2985
  %dec = add i32 %116, -1, !dbg !9577
  store i32 %dec, i32* %i, align 4, !dbg !9577, !tbaa !2985
  br label %for.inc, !dbg !9578

if.else115:                                       ; preds = %land.lhs.true72, %lor.lhs.false
  %117 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9579, !tbaa !2998
  %ext_info116 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %117, i32 0, i32 6, !dbg !9581, !ctir !1534
  %118 = load %struct.extent_info*, %struct.extent_info** %ext_info116, align 8, !dbg !9581, !tbaa !8476, !ctir !1543
  %119 = load i32, i32* %si, align 4, !dbg !9582, !tbaa !2985
  %idx.ext = zext i32 %119 to i64, !dbg !9583
  %add.ptr117 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %118, i64 %idx.ext, !dbg !9583
  store %struct.extent_info* %add.ptr117, %struct.extent_info** %last_ei, align 8, !dbg !9584, !tbaa !2998
  %120 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9585, !tbaa !2998
  %121 = load i32, i32* %i, align 4, !dbg !9586, !tbaa !2985
  %idxprom118 = zext i32 %121 to i64, !dbg !9585
  %arrayidx119 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %120, i64 %idxprom118, !dbg !9585, !ctir !1578
  %fe_logical120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx119, i32 0, i32 0, !dbg !9587, !ctir !1568
  %122 = load i64, i64* %fe_logical120, align 8, !dbg !9587, !tbaa !9460, !ctir !1556
  %123 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9588, !tbaa !2998
  %ext_logical121 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %123, i32 0, i32 0, !dbg !9589, !ctir !1544
  store i64 %122, i64* %ext_logical121, align 8, !dbg !9590, !tbaa !8480, !ctir !1530
  %124 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9591, !tbaa !2998
  %125 = load i32, i32* %i, align 4, !dbg !9592, !tbaa !2985
  %idxprom122 = zext i32 %125 to i64, !dbg !9591
  %arrayidx123 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %124, i64 %idxprom122, !dbg !9591, !ctir !1578
  %fe_length124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx123, i32 0, i32 2, !dbg !9593, !ctir !1568
  %126 = load i64, i64* %fe_length124, align 8, !dbg !9593, !tbaa !9462, !ctir !1556
  %127 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9594, !tbaa !2998
  %ext_length125 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %127, i32 0, i32 1, !dbg !9595, !ctir !1544
  store i64 %126, i64* %ext_length125, align 8, !dbg !9596, !tbaa !8487, !ctir !1530
  %128 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9597, !tbaa !2998
  %129 = load i32, i32* %i, align 4, !dbg !9598, !tbaa !2985
  %idxprom126 = zext i32 %129 to i64, !dbg !9597
  %arrayidx127 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %128, i64 %idxprom126, !dbg !9597, !ctir !1578
  %fe_flags128 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx127, i32 0, i32 4, !dbg !9599, !ctir !1568
  %130 = load i32, i32* %fe_flags128, align 8, !dbg !9599, !tbaa !9473, !ctir !1561
  %131 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9600, !tbaa !2998
  %ext_flags129 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %131, i32 0, i32 2, !dbg !9601, !ctir !1544
  store i32 %130, i32* %ext_flags129, align 8, !dbg !9602, !tbaa !9469, !ctir !70
  %132 = load i32, i32* %si, align 4, !dbg !9603, !tbaa !2985
  %inc = add i32 %132, 1, !dbg !9603
  store i32 %inc, i32* %si, align 4, !dbg !9603, !tbaa !2985
  br label %if.end130

if.end130:                                        ; preds = %if.else115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then51
  br label %for.inc, !dbg !9604

for.inc:                                          ; preds = %if.end131, %if.end107
  %133 = load i32, i32* %i, align 4, !dbg !9605, !tbaa !2985
  %inc132 = add i32 %133, 1, !dbg !9605
  store i32 %inc132, i32* %i, align 4, !dbg !9605, !tbaa !2985
  br label %for.cond, !dbg !9606, !llvm.loop !9607

for.end:                                          ; preds = %for.cond
  %134 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9609, !tbaa !2998
  %ext_flags133 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %134, i32 0, i32 2, !dbg !9611, !ctir !1544
  %135 = load i32, i32* %ext_flags133, align 8, !dbg !9611, !tbaa !9469, !ctir !70
  %and134 = and i32 %135, 1, !dbg !9612
  %tobool135 = icmp ne i32 %and134, 0, !dbg !9612
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !9613

if.then136:                                       ; preds = %for.end
  %136 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9614, !tbaa !2998
  %hit_final_extent137 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %136, i32 0, i32 5, !dbg !9615, !ctir !1534
  store i8 1, i8* %hit_final_extent137, align 1, !dbg !9616, !tbaa !8431, !ctir !120
  br label %if.end138, !dbg !9614

if.end138:                                        ; preds = %if.then136, %for.end
  %137 = load i32, i32* %si, align 4, !dbg !9617, !tbaa !2985
  %cmp139 = icmp ugt i32 %137, 72, !dbg !9619
  br i1 %cmp139, label %land.lhs.true141, label %if.end150, !dbg !9620

land.lhs.true141:                                 ; preds = %if.end138
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9621, !tbaa !2998
  %hit_final_extent142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !9622, !ctir !1534
  %139 = load i8, i8* %hit_final_extent142, align 1, !dbg !9622, !tbaa !8431
  %tobool143 = trunc i8 %139 to i1, !dbg !9622, !ctir !120
  br i1 %tobool143, label %if.end150, label %if.then144, !dbg !9623

if.then144:                                       ; preds = %land.lhs.true141
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9624, !tbaa !2998
  %ext_info145 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 6, !dbg !9625, !ctir !1534
  %141 = load %struct.extent_info*, %struct.extent_info** %ext_info145, align 8, !dbg !9625, !tbaa !8476, !ctir !1543
  %142 = load i32, i32* %si, align 4, !dbg !9626, !tbaa !2985
  %dec146 = add i32 %142, -1, !dbg !9626
  store i32 %dec146, i32* %si, align 4, !dbg !9626, !tbaa !2985
  %idx.ext147 = zext i32 %dec146 to i64, !dbg !9627
  %add.ptr148 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %141, i64 %idx.ext147, !dbg !9627
  %add.ptr149 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr148, i64 -1, !dbg !9628
  store %struct.extent_info* %add.ptr149, %struct.extent_info** %last_ei, align 8, !dbg !9629, !tbaa !2998
  br label %if.end150, !dbg !9630

if.end150:                                        ; preds = %if.then144, %land.lhs.true141, %if.end138
  %143 = load i32, i32* %si, align 4, !dbg !9631, !tbaa !2985
  %conv151 = zext i32 %143 to i64, !dbg !9631
  %144 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9632, !tbaa !2998
  %ei_count152 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %144, i32 0, i32 3, !dbg !9633, !ctir !1534
  store i64 %conv151, i64* %ei_count152, align 8, !dbg !9634, !tbaa !8457, !ctir !55
  %145 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9635, !tbaa !2998
  %hit_final_extent153 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %145, i32 0, i32 5, !dbg !9637, !ctir !1534
  %146 = load i8, i8* %hit_final_extent153, align 1, !dbg !9637, !tbaa !8431
  %tobool154 = trunc i8 %146 to i1, !dbg !9637, !ctir !120
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !9638

if.then155:                                       ; preds = %if.end150
  br label %while.end, !dbg !9639

if.else156:                                       ; preds = %if.end150
  %147 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9640, !tbaa !2998
  %ext_logical157 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %147, i32 0, i32 0, !dbg !9641, !ctir !1544
  %148 = load i64, i64* %ext_logical157, align 8, !dbg !9641, !tbaa !8480, !ctir !1530
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9642, !tbaa !2998
  %ext_length158 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 1, !dbg !9643, !ctir !1544
  %150 = load i64, i64* %ext_length158, align 8, !dbg !9643, !tbaa !8487, !ctir !1530
  %add159 = add nsw i64 %148, %150, !dbg !9644
  %151 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9645, !tbaa !2998
  %scan_start160 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %151, i32 0, i32 1, !dbg !9646, !ctir !1534
  store i64 %add159, i64* %scan_start160, align 8, !dbg !9647, !tbaa !9327, !ctir !1530
  br label %if.end161

if.end161:                                        ; preds = %if.else156
  %152 = load i32, i32* %si, align 4, !dbg !9648, !tbaa !2985
  %cmp162 = icmp uge i32 %152, 72, !dbg !9650
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !9651

if.then164:                                       ; preds = %if.end161
  br label %while.end, !dbg !9652

if.end165:                                        ; preds = %if.end161
  br label %while.body, !dbg !9355, !llvm.loop !9653

while.end:                                        ; preds = %if.then164, %if.then155
  store i1 true, i1* %retval, align 1, !dbg !9655
  br label %return, !dbg !9655

return:                                           ; preds = %while.end, %if.end106, %if.then9, %if.end
  %153 = load i1, i1* %retval, align 1, !dbg !9656
  ret i1 %153, !dbg !9656
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !9657 !ctir !559 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !561
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.link_arg, align 8, !ctir !575
  %err = alloca i32, align 4, !ctir !7
  store i32 %srcdir, i32* %srcdir.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9664, metadata !DIExpression()), !dbg !9665
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9666, metadata !DIExpression()), !dbg !9667
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9668, metadata !DIExpression()), !dbg !9669
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !9670, metadata !DIExpression()), !dbg !9671
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9672, !tbaa !2985
  %cmp = icmp slt i32 %0, 0, !dbg !9674
  br i1 %cmp, label %if.then, label %if.end, !dbg !9675

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !9676, !tbaa !2985
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !9677, !tbaa !2998
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !9678, !tbaa !2985
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !9679, !tbaa !2998
  %5 = load i32, i32* %flags.addr, align 4, !dbg !9680, !tbaa !2985
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #10, !dbg !9681
  %cmp1 = icmp eq i32 %call, 0, !dbg !9682
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9681

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9681

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !9683
  %6 = load i32, i32* %call2, align 4, !dbg !9683, !tbaa !2985, !ctir !7
  br label %cond.end, !dbg !9681

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !9681
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !9684, !tbaa !2985
  br label %if.end, !dbg !9685

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !9686, !tbaa !3109
  %tobool = trunc i8 %7 to i1, !dbg !9686
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9688

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9689, !tbaa !2985
  %cmp3 = icmp ne i32 %8, 17, !dbg !9690
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9691

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9692, !tbaa !2985
  store i32 %9, i32* %retval, align 4, !dbg !9693
  br label %return, !dbg !9693

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9694, metadata !DIExpression()), !dbg !9695
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9696, metadata !DIExpression()), !dbg !9697
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !9698, !tbaa !2998
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9699
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !9700
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9697, !tbaa !2998
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9701, !tbaa !2998
  %tobool7 = icmp ne i8* %11, null, !dbg !9701
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9703

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !9704
  %12 = load i32, i32* %call9, align 4, !dbg !9704, !tbaa !2985, !ctir !7
  store i32 %12, i32* %retval, align 4, !dbg !9705
  br label %return, !dbg !9705

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !9706, metadata !DIExpression()), !dbg !9707
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !9708
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !9709, !tbaa !2985
  store i32 %13, i32* %srcdir11, align 8, !dbg !9708, !tbaa !9710
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !9708
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !9712, !tbaa !2998
  store i8* %14, i8** %srcname12, align 8, !dbg !9708, !tbaa !9713
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !9708
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !9714, !tbaa !2985
  store i32 %15, i32* %dstdir13, align 8, !dbg !9708, !tbaa !9715
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !9708
  %16 = load i32, i32* %flags.addr, align 4, !dbg !9716, !tbaa !2985
  store i32 %16, i32* %flags14, align 4, !dbg !9708, !tbaa !9717
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9718, metadata !DIExpression()), !dbg !9719
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9720, !tbaa !2998
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !9722
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !9723
  %cmp16 = icmp ne i32 %call15, 0, !dbg !9724
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9725

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #15, !dbg !9726
  %19 = load i32, i32* %call18, align 4, !dbg !9726, !tbaa !2985, !ctir !7
  store i32 %19, i32* %err, align 4, !dbg !9727, !tbaa !2985
  br label %if.end27, !dbg !9728

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !9729, !tbaa !2985
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !9731, !tbaa !2998
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !9732, !tbaa !2985
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !9733, !tbaa !2998
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #10, !dbg !9734
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9735
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !9734

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !9734

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !9736
  %24 = load i32, i32* %call23, align 4, !dbg !9736, !tbaa !2985, !ctir !7
  br label %cond.end24, !dbg !9734

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !9734
  store i32 %cond25, i32* %err, align 4, !dbg !9737, !tbaa !2985
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !9738, !tbaa !2985
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !9739, !tbaa !2998
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #10, !dbg !9740
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !9741, !tbaa !2998
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9743
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !9744
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9745

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !9746, !tbaa !2998
  call void @free(i8* %28) #10, !dbg !9747
  br label %if.end31, !dbg !9747

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !9748, !tbaa !2985
  store i32 %29, i32* %retval, align 4, !dbg !9749
  br label %return, !dbg !9749

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !9750
  ret i32 %30, !dbg !9750
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !9751 !ctir !566 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !568
  %dsttmpsize = alloca i64, align 8, !ctir !55
  %dsttmp = alloca i8*, align 8, !ctir !9
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9752, metadata !DIExpression()), !dbg !9753
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9754, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !9756, metadata !DIExpression()), !dbg !9757
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !9758, !tbaa !2998
  %call = call i8* @last_component(i8* %0) #14, !dbg !9759
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !9760, !tbaa !2998
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9761
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9761
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9761
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !9757, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !9762, metadata !DIExpression()), !dbg !9763
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !9764, !tbaa !3851
  %add = add i64 %2, 9, !dbg !9765
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !9763, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9766, metadata !DIExpression()), !dbg !9767
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !9768, !tbaa !3851
  %cmp = icmp ule i64 %3, 256, !dbg !9770
  br i1 %cmp, label %if.then, label %if.else, !dbg !9771

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !9772, !tbaa !2998
  store i8* %4, i8** %dsttmp, align 8, !dbg !9773, !tbaa !2998
  br label %if.end3, !dbg !9774

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !9775, !tbaa !3851
  %call1 = call noalias i8* @malloc(i64 %5) #10, !dbg !9777
  store i8* %call1, i8** %dsttmp, align 8, !dbg !9778, !tbaa !2998
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !9779, !tbaa !2998
  %tobool = icmp ne i8* %6, null, !dbg !9779
  br i1 %tobool, label %if.end, label %if.then2, !dbg !9781

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !9782, !tbaa !2998
  store i8* %7, i8** %retval, align 8, !dbg !9783
  br label %return, !dbg !9783

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !9784, !tbaa !2998
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !9785, !tbaa !2998
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !9786, !tbaa !3851
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #10, !dbg !9787
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #10, !dbg !9788
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9789, !tbaa !2998
  store i8* %11, i8** %retval, align 8, !dbg !9790
  br label %return, !dbg !9790

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !9791
  ret i8* %12, !dbg !9791
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !9792 !ctir !572 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !574
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9793, metadata !DIExpression()), !dbg !9794
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9795, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !9797, metadata !DIExpression()), !dbg !9798
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9799, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !9799
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !9798, !tbaa !2998
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9800, !tbaa !2998
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !9801, !ctir !575
  %3 = load i32, i32* %srcdir, align 8, !dbg !9801, !tbaa !9710, !ctir !7
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9802, !tbaa !2998
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !9803, !ctir !575
  %5 = load i8*, i8** %srcname, align 8, !dbg !9803, !tbaa !9713, !ctir !115
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9804, !tbaa !2998
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !9805, !ctir !575
  %7 = load i32, i32* %dstdir, align 8, !dbg !9805, !tbaa !9715, !ctir !7
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !9806, !tbaa !2998
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9807, !tbaa !2998
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !9808, !ctir !575
  %10 = load i32, i32* %flags, align 4, !dbg !9808, !tbaa !9717, !ctir !7
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #10, !dbg !9809
  ret i32 %call, !dbg !9810
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !9811 !ctir !564 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !561
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.symlink_arg, align 8, !ctir !582
  %err = alloca i32, align 4, !ctir !7
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9812, metadata !DIExpression()), !dbg !9813
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9814, metadata !DIExpression()), !dbg !9815
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9816, metadata !DIExpression()), !dbg !9817
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !9820, metadata !DIExpression()), !dbg !9821
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9822, !tbaa !2985
  %cmp = icmp slt i32 %0, 0, !dbg !9824
  br i1 %cmp, label %if.then, label %if.end, !dbg !9825

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !9826, !tbaa !2998
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !9827, !tbaa !2985
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !9828, !tbaa !2998
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #10, !dbg !9829
  %cmp1 = icmp eq i32 %call, 0, !dbg !9830
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9829

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9829

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !9831
  %4 = load i32, i32* %call2, align 4, !dbg !9831, !tbaa !2985, !ctir !7
  br label %cond.end, !dbg !9829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !9829
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !9832, !tbaa !2985
  br label %if.end, !dbg !9833

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !9834, !tbaa !3109
  %tobool = trunc i8 %5 to i1, !dbg !9834
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9836

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9837, !tbaa !2985
  %cmp3 = icmp ne i32 %6, 17, !dbg !9838
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9839

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9840, !tbaa !2985
  store i32 %7, i32* %retval, align 4, !dbg !9841
  br label %return, !dbg !9841

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9842, metadata !DIExpression()), !dbg !9843
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9844, metadata !DIExpression()), !dbg !9845
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !9846, !tbaa !2998
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9847
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !9848
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9845, !tbaa !2998
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !9849, !tbaa !2998
  %tobool7 = icmp ne i8* %9, null, !dbg !9849
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9851

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !9852
  %10 = load i32, i32* %call9, align 4, !dbg !9852, !tbaa !2985, !ctir !7
  store i32 %10, i32* %retval, align 4, !dbg !9853
  br label %return, !dbg !9853

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !9854, metadata !DIExpression()), !dbg !9855
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !9856
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !9857, !tbaa !2998
  store i8* %11, i8** %srcname11, align 8, !dbg !9856, !tbaa !9858
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !9856
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !9860, !tbaa !2985
  store i32 %12, i32* %dstdir12, align 8, !dbg !9856, !tbaa !9861
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9862, metadata !DIExpression()), !dbg !9863
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !9864, !tbaa !2998
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !9866
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !9867
  %cmp14 = icmp ne i32 %call13, 0, !dbg !9868
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9869

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #15, !dbg !9870
  %15 = load i32, i32* %call16, align 4, !dbg !9870, !tbaa !2985, !ctir !7
  store i32 %15, i32* %err, align 4, !dbg !9871, !tbaa !2985
  br label %if.end24, !dbg !9872

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !9873, !tbaa !2985
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9875, !tbaa !2998
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !9876, !tbaa !2985
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !9877, !tbaa !2998
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #10, !dbg !9878
  %cmp18 = icmp ne i32 %call17, 0, !dbg !9879
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !9880

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #15, !dbg !9881
  %20 = load i32, i32* %call20, align 4, !dbg !9881, !tbaa !2985, !ctir !7
  store i32 %20, i32* %err, align 4, !dbg !9883, !tbaa !2985
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !9884, !tbaa !2985
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !9885, !tbaa !2998
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #10, !dbg !9886
  br label %if.end23, !dbg !9887

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !9888, !tbaa !2985
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !9890, !tbaa !2998
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9892
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !9893
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9894

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !9895, !tbaa !2998
  call void @free(i8* %24) #10, !dbg !9896
  br label %if.end28, !dbg !9896

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !9897, !tbaa !2985
  store i32 %25, i32* %retval, align 4, !dbg !9898
  br label %return, !dbg !9898

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !9899
  ret i32 %26, !dbg !9899
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !9900 !ctir !572 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !581
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9903, metadata !DIExpression()), !dbg !9904
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !9905, metadata !DIExpression()), !dbg !9906
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9907, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !9907
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !9906, !tbaa !2998
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9908, !tbaa !2998
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !9909, !ctir !582
  %3 = load i8*, i8** %srcname, align 8, !dbg !9909, !tbaa !9858, !ctir !115
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9910, !tbaa !2998
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9911, !ctir !582
  %5 = load i32, i32* %dstdir, align 8, !dbg !9911, !tbaa !9861, !ctir !7
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9912, !tbaa !2998
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #10, !dbg !9913
  ret i32 %call, !dbg !9914
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9915 !ctir !1584 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9919, metadata !DIExpression()), !dbg !9920
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9921, metadata !DIExpression()), !dbg !9922
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9923, metadata !DIExpression()), !dbg !9924
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9925, metadata !DIExpression()), !dbg !9926
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9927, metadata !DIExpression()), !dbg !9928
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9929, !tbaa !2998
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9930, !tbaa !2985
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9931, !tbaa !2998
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9932, !tbaa !2985
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9933, !tbaa !2985
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9934
  store i32 %call, i32* %ret, align 4, !dbg !9928, !tbaa !2985
  %5 = load i32, i32* %ret, align 4, !dbg !9935, !tbaa !2985
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9936

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9937
  %6 = load i32, i32* %call1, align 4, !dbg !9937, !tbaa !2985, !ctir !7
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9939, !tbaa !2998
  %call2 = call i8* @quote(i8* %7), !dbg !9940
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i64 0, i64 0), i8* %call2), !dbg !9941
  br label %sw.epilog, !dbg !9942

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !9943
  %8 = load i32, i32* %call4, align 4, !dbg !9943, !tbaa !2985, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.182, i64 0, i64 0)) #10, !dbg !9944
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9945, !tbaa !2998
  %call6 = call i8* @quote(i8* %9), !dbg !9946
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9947
  br label %sw.epilog, !dbg !9948

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9949

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9950, !tbaa !2985
  ret i32 %10, !dbg !9951
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9952 !ctir !1589 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9954, metadata !DIExpression()), !dbg !9955
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9958, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9960, metadata !DIExpression()), !dbg !9961
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9962, !tbaa !2998
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9963, !tbaa !2985
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9964, !tbaa !2985
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9965
  store i32 %call, i32* %ret, align 4, !dbg !9961, !tbaa !2985
  %3 = load i32, i32* %ret, align 4, !dbg !9966, !tbaa !2985
  %cmp = icmp ne i32 %3, 0, !dbg !9968
  br i1 %cmp, label %if.then, label %if.end, !dbg !9969

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9970
  %4 = load i32, i32* %call1, align 4, !dbg !9970, !tbaa !2985, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.185, i64 0, i64 0)) #10, !dbg !9971
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9972, !tbaa !2998
  %call3 = call i8* @quote(i8* %5), !dbg !9973
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9974
  br label %if.end, !dbg !9974

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9975, !tbaa !2985
  ret i32 %6, !dbg !9976
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9977 !ctir !992 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !55
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !55
  %initial_limit = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !608
  %link_length = alloca i64, align 8, !ctir !55
  %stackbuf = alloca [128 x i8], align 16, !ctir !1594
  %buf = alloca i8*, align 8, !ctir !9
  %buffer = alloca i8*, align 8, !ctir !9
  %saved_errno = alloca i32, align 4, !ctir !7
  %shrinked_buffer = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9979, metadata !DIExpression()), !dbg !9980
  store i64 %size, i64* %size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9981, metadata !DIExpression()), !dbg !9982
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9983, metadata !DIExpression()), !dbg !9984
  store i64 1024, i64* %symlink_max, align 8, !dbg !9984, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9985, metadata !DIExpression()), !dbg !9986
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9986, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9987, metadata !DIExpression()), !dbg !9988
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9989, !tbaa !3851
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9990, !tbaa !3851
  %cmp = icmp ult i64 %0, %1, !dbg !9991
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9989

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9992, !tbaa !3851
  %add = add i64 %2, 1, !dbg !9993
  br label %cond.end, !dbg !9989

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9994, !tbaa !3851
  br label %cond.end, !dbg !9989

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9989
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9988, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9995, metadata !DIExpression()), !dbg !9996
  %4 = load i64, i64* %size.addr, align 8, !dbg !9997, !tbaa !3851
  %cmp1 = icmp eq i64 %4, 0, !dbg !9998
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !9997

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9997

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !9999, !tbaa !3851
  %6 = load i64, i64* %initial_limit, align 8, !dbg !10000, !tbaa !3851
  %cmp4 = icmp ult i64 %5, %6, !dbg !10001
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !9999

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !10002, !tbaa !3851
  %add6 = add i64 %7, 1, !dbg !10003
  br label %cond.end8, !dbg !9999

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !10004, !tbaa !3851
  br label %cond.end8, !dbg !9999

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !9999
  br label %cond.end10, !dbg !9997

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !9997
  store i64 %cond11, i64* %buf_size, align 8, !dbg !9996, !tbaa !3851
  br label %while.body, !dbg !10005

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10006, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !10009, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !10011, metadata !DIExpression()), !dbg !10012
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10013, metadata !DIExpression()), !dbg !10014
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !10015
  store i8* %arraydecay, i8** %buf, align 8, !dbg !10014, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !10016, metadata !DIExpression()), !dbg !10017
  store i8* null, i8** %buffer, align 8, !dbg !10017, !tbaa !2998
  %9 = load i64, i64* %size.addr, align 8, !dbg !10018, !tbaa !3851
  %cmp12 = icmp eq i64 %9, 0, !dbg !10020
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !10021

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !10022, !tbaa !3851
  %cmp13 = icmp eq i64 %10, 128, !dbg !10023
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !10024

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !10025, !tbaa !3851
  %call = call noalias i8* @malloc(i64 %11) #10, !dbg !10027
  store i8* %call, i8** %buffer, align 8, !dbg !10028, !tbaa !2998
  store i8* %call, i8** %buf, align 8, !dbg !10029, !tbaa !2998
  %12 = load i8*, i8** %buffer, align 8, !dbg !10030, !tbaa !2998
  %tobool = icmp ne i8* %12, null, !dbg !10030
  br i1 %tobool, label %if.end, label %if.then14, !dbg !10032

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !10033
  br label %return, !dbg !10033

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !10034

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !10035, !tbaa !2998
  %14 = load i8*, i8** %buf, align 8, !dbg !10036, !tbaa !2998
  %15 = load i64, i64* %buf_size, align 8, !dbg !10037, !tbaa !3851
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #10, !dbg !10038
  store i64 %call16, i64* %r, align 8, !dbg !10039, !tbaa !3851
  %16 = load i64, i64* %r, align 8, !dbg !10040, !tbaa !3851
  store i64 %16, i64* %link_length, align 8, !dbg !10041, !tbaa !3851
  %17 = load i64, i64* %r, align 8, !dbg !10042, !tbaa !3851
  %cmp17 = icmp slt i64 %17, 0, !dbg !10044
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !10045

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #15, !dbg !10046
  %18 = load i32, i32* %call19, align 4, !dbg !10046, !tbaa !2985, !ctir !7
  %cmp20 = icmp ne i32 %18, 34, !dbg !10047
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !10048

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !10049, metadata !DIExpression()), !dbg !10051
  %call22 = call i32* @__errno_location() #15, !dbg !10052
  %19 = load i32, i32* %call22, align 4, !dbg !10052, !tbaa !2985, !ctir !7
  store i32 %19, i32* %saved_errno, align 4, !dbg !10051, !tbaa !2985
  %20 = load i8*, i8** %buffer, align 8, !dbg !10053, !tbaa !2998
  call void @free(i8* %20) #10, !dbg !10054
  %21 = load i32, i32* %saved_errno, align 4, !dbg !10055, !tbaa !2985
  %call23 = call i32* @__errno_location() #15, !dbg !10056
  store i32 %21, i32* %call23, align 4, !dbg !10057, !tbaa !2985, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10058
  br label %return, !dbg !10058

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !10059, !tbaa !3851
  %23 = load i64, i64* %buf_size, align 8, !dbg !10061, !tbaa !3851
  %cmp25 = icmp ult i64 %22, %23, !dbg !10062
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !10063

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !10064, !tbaa !2998
  %25 = load i64, i64* %link_length, align 8, !dbg !10066, !tbaa !3851
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !10064, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !10067, !tbaa !3660
  %26 = load i8*, i8** %buffer, align 8, !dbg !10068, !tbaa !2998
  %tobool27 = icmp ne i8* %26, null, !dbg !10068
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !10070

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !10071, !tbaa !3851
  %add29 = add i64 %27, 1, !dbg !10073
  %call30 = call noalias i8* @malloc(i64 %add29) #10, !dbg !10074
  store i8* %call30, i8** %buffer, align 8, !dbg !10075, !tbaa !2998
  %28 = load i8*, i8** %buffer, align 8, !dbg !10076, !tbaa !2998
  %tobool31 = icmp ne i8* %28, null, !dbg !10076
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !10078

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !10079, !tbaa !2998
  %30 = load i8*, i8** %buf, align 8, !dbg !10080, !tbaa !2998
  %31 = load i64, i64* %link_length, align 8, !dbg !10081, !tbaa !3851
  %add33 = add i64 %31, 1, !dbg !10082
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !10083
  store i8* %29, i8** %retval, align 8, !dbg !10084
  br label %return, !dbg !10084

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !10085

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !10086, !tbaa !3851
  %add35 = add i64 %32, 1, !dbg !10088
  %33 = load i64, i64* %buf_size, align 8, !dbg !10089, !tbaa !3851
  %cmp36 = icmp ult i64 %add35, %33, !dbg !10090
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !10091

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !10092, metadata !DIExpression()), !dbg !10094
  %34 = load i8*, i8** %buffer, align 8, !dbg !10095, !tbaa !2998
  %35 = load i64, i64* %link_length, align 8, !dbg !10096, !tbaa !3851
  %add38 = add i64 %35, 1, !dbg !10097
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #10, !dbg !10098
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !10094, !tbaa !2998
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !10099, !tbaa !2998
  %cmp40 = icmp ne i8* %36, null, !dbg !10101
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !10102

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !10103, !tbaa !2998
  store i8* %37, i8** %buffer, align 8, !dbg !10104, !tbaa !2998
  br label %if.end42, !dbg !10105

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !10106

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !10107, !tbaa !2998
  store i8* %38, i8** %retval, align 8, !dbg !10108
  br label %return, !dbg !10108

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !10109, !tbaa !2998
  call void @free(i8* %39) #10, !dbg !10110
  %40 = load i64, i64* %buf_size, align 8, !dbg !10111, !tbaa !3851
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !10113
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !10114

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !10115, !tbaa !3851
  %mul = mul i64 %41, 2, !dbg !10115
  store i64 %mul, i64* %buf_size, align 8, !dbg !10115, !tbaa !3851
  br label %if.end54, !dbg !10116

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !10117, !tbaa !3851
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !10119
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !10120

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !10121, !tbaa !3851
  br label %if.end53, !dbg !10122

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #15, !dbg !10123
  store i32 12, i32* %call52, align 4, !dbg !10125, !tbaa !2985, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10126
  br label %return, !dbg !10126

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !10005, !llvm.loop !10127

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !10129
  ret i8* %43, !dbg !10129
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !10130 !ctir !136 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !10131, metadata !DIExpression()), !dbg !10132
  %0 = load i8*, i8** %s.addr, align 8, !dbg !10133, !tbaa !2998
  %tobool = icmp ne i8* %0, null, !dbg !10133
  br i1 %tobool, label %if.end, label %if.then, !dbg !10135

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.192, i64 0, i64 0)) #10, !dbg !10136
  store i8* %call, i8** %s.addr, align 8, !dbg !10137, !tbaa !2998
  br label %if.end, !dbg !10138

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !10139, !tbaa !2998
  %tobool1 = icmp ne i8* %1, null, !dbg !10139
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !10140

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !10141, !tbaa !2998
  %3 = load i8, i8* %2, align 1, !dbg !10142, !tbaa !3660, !ctir !116
  %conv = sext i8 %3 to i32, !dbg !10142
  %tobool2 = icmp ne i32 %conv, 0, !dbg !10142
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !10143

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !10144, !tbaa !2998
  %5 = load i8*, i8** %s.addr, align 8, !dbg !10145, !tbaa !2998
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !10146
  %cmp = icmp eq i8* %4, %call4, !dbg !10147
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10139

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !10148, !tbaa !2998
  br label %cond.end, !dbg !10139

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !10139

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.193, i64 0, i64 0), %cond.false ], !dbg !10139
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !10149, !tbaa !2998
  ret void, !dbg !10150
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !10151 !ctir !606 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !568
  %filelen = alloca i64, align 8, !ctir !55
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !55
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !55
  %ssize = alloca i64, align 8, !ctir !608
  %s = alloca i8*, align 8, !ctir !9
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !609
  %sdir = alloca i32, align 4, !ctir !7
  %base_max = alloca i64, align 8, !ctir !55
  %flags = alloca i32, align 4, !ctir !70
  %e = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !10160, metadata !DIExpression()), !dbg !10161
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10162, !tbaa !2998
  %call = call i8* @last_component(i8* %0) #14, !dbg !10163
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10164, !tbaa !2998
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10165
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !10165
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10165
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !10161, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !10166, metadata !DIExpression()), !dbg !10167
  %2 = load i64, i64* %base_offset, align 8, !dbg !10168, !tbaa !3851
  %3 = load i8*, i8** %file.addr, align 8, !dbg !10169, !tbaa !2998
  %4 = load i64, i64* %base_offset, align 8, !dbg !10170, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10171
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !10172
  %add = add i64 %2, %call1, !dbg !10173
  store i64 %add, i64* %filelen, align 8, !dbg !10167, !tbaa !3851
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10174, !tbaa !2998
  %tobool = icmp ne i8* %5, null, !dbg !10174
  br i1 %tobool, label %if.end, label %if.then, !dbg !10176

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !10177
  br label %if.end, !dbg !10177

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !10178, metadata !DIExpression()), !dbg !10179
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10180, !tbaa !2998
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !10181
  %add3 = add i64 %call2, 1, !dbg !10182
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !10179, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !10183, metadata !DIExpression()), !dbg !10184
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10185, !tbaa !3851
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !10184, !tbaa !3851
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !10186, !tbaa !3851
  %cmp = icmp ult i64 %8, 9, !dbg !10188
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !10189

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !10190, !tbaa !3851
  br label %if.end5, !dbg !10191

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !10192, metadata !DIExpression()), !dbg !10193
  %9 = load i64, i64* %filelen, align 8, !dbg !10194, !tbaa !3851
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !10195, !tbaa !3851
  %add6 = add i64 %9, %10, !dbg !10196
  %add7 = add i64 %add6, 1, !dbg !10197
  store i64 %add7, i64* %ssize, align 8, !dbg !10193, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %s, metadata !10198, metadata !DIExpression()), !dbg !10199
  %11 = load i64, i64* %ssize, align 8, !dbg !10200, !tbaa !3851
  %call8 = call noalias i8* @malloc(i64 %11) #10, !dbg !10201
  store i8* %call8, i8** %s, align 8, !dbg !10199, !tbaa !2998
  %12 = load i8*, i8** %s, align 8, !dbg !10202, !tbaa !2998
  %tobool9 = icmp ne i8* %12, null, !dbg !10202
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10204

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !10205, !tbaa !2998
  store i8* %13, i8** %retval, align 8, !dbg !10206
  br label %return, !dbg !10206

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !10207, metadata !DIExpression()), !dbg !10208
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !10208, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !10209, metadata !DIExpression()), !dbg !10210
  store i32 -1, i32* %sdir, align 4, !dbg !10210, !tbaa !2985
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !10211, metadata !DIExpression()), !dbg !10212
  store i64 0, i64* %base_max, align 8, !dbg !10212, !tbaa !3851
  br label %while.body, !dbg !10213

while.body:                                       ; preds = %if.end11, %if.end50
  %14 = load i8*, i8** %s, align 8, !dbg !10214, !tbaa !2998
  %15 = load i8*, i8** %file.addr, align 8, !dbg !10216, !tbaa !2998
  %16 = load i64, i64* %filelen, align 8, !dbg !10217, !tbaa !3851
  %add12 = add i64 %16, 1, !dbg !10218
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !10219
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !10220, !tbaa !3660
  %cmp13 = icmp eq i32 %17, 1, !dbg !10222
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !10223

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !10224, !tbaa !2998
  %19 = load i64, i64* %filelen, align 8, !dbg !10225, !tbaa !3851
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !10226
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10227, !tbaa !2998
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10228, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !10229
  br label %if.end29, !dbg !10229

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !10230, !tbaa !2985
  %23 = load i64, i64* %ssize, align 8, !dbg !10231, !tbaa !3851
  %24 = load i64, i64* %filelen, align 8, !dbg !10232, !tbaa !3851
  %25 = load i64, i64* %base_offset, align 8, !dbg !10233, !tbaa !3851
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !10234
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !10235

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !10236

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !10238, !tbaa !3660
  %cmp18 = icmp eq i32 %26, 2, !dbg !10240
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10241

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !10242, !tbaa !3660
  %27 = load i8*, i8** %s, align 8, !dbg !10244, !tbaa !2998
  %28 = load i64, i64* %filelen, align 8, !dbg !10245, !tbaa !3851
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !10246
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10247, !tbaa !2998
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10248, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !10249
  br label %if.end21, !dbg !10250

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !10251

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !10252, !tbaa !2998
  %32 = load i64, i64* %filelen, align 8, !dbg !10253, !tbaa !3851
  %33 = load i32, i32* %sdir, align 4, !dbg !10254, !tbaa !2985
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !10255
  br label %sw.epilog, !dbg !10256

sw.bb23:                                          ; preds = %if.else
  %34 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10257, !tbaa !2998
  %tobool24 = icmp ne %struct.__dirstream* %34, null, !dbg !10257
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !10259

if.then25:                                        ; preds = %sw.bb23
  %35 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10260, !tbaa !2998
  %call26 = call i32 @closedir(%struct.__dirstream* %35), !dbg !10261
  br label %if.end27, !dbg !10261

if.end27:                                         ; preds = %if.then25, %sw.bb23
  %36 = load i8*, i8** %s, align 8, !dbg !10262, !tbaa !2998
  call void @free(i8* %36) #10, !dbg !10263
  %call28 = call i32* @__errno_location() #15, !dbg !10264
  store i32 12, i32* %call28, align 4, !dbg !10265, !tbaa !2985, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10266
  br label %return, !dbg !10266

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end29

if.end29:                                         ; preds = %sw.epilog, %if.then14
  %37 = load i8, i8* %rename.addr, align 1, !dbg !10267, !tbaa !3109
  %tobool30 = trunc i8 %37 to i1, !dbg !10267
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !10269

if.then31:                                        ; preds = %if.end29
  br label %while.end, !dbg !10270

if.end32:                                         ; preds = %if.end29
  %38 = load i32, i32* %sdir, align 4, !dbg !10271, !tbaa !2985
  %cmp33 = icmp slt i32 %38, 0, !dbg !10273
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !10274

if.then34:                                        ; preds = %if.end32
  store i32 -100, i32* %sdir, align 4, !dbg !10275, !tbaa !2985
  store i64 0, i64* %base_offset, align 8, !dbg !10277, !tbaa !3851
  br label %if.end35, !dbg !10278

if.end35:                                         ; preds = %if.then34, %if.end32
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !10279, metadata !DIExpression()), !dbg !10280
  %39 = load i32, i32* %backup_type.addr, align 4, !dbg !10281, !tbaa !3660
  %cmp36 = icmp eq i32 %39, 1, !dbg !10282
  %40 = zext i1 %cmp36 to i64, !dbg !10281
  %cond = select i1 %cmp36, i32 0, i32 1, !dbg !10281
  store i32 %cond, i32* %flags, align 4, !dbg !10280, !tbaa !2985
  %41 = load i8*, i8** %file.addr, align 8, !dbg !10283, !tbaa !2998
  %42 = load i32, i32* %sdir, align 4, !dbg !10285, !tbaa !2985
  %43 = load i8*, i8** %s, align 8, !dbg !10286, !tbaa !2998
  %44 = load i64, i64* %base_offset, align 8, !dbg !10287, !tbaa !3851
  %add.ptr37 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !10288
  %45 = load i32, i32* %flags, align 4, !dbg !10289, !tbaa !2985
  %call38 = call i32 @renameatu(i32 -100, i8* %41, i32 %42, i8* %add.ptr37, i32 %45), !dbg !10290
  %cmp39 = icmp eq i32 %call38, 0, !dbg !10291
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !10292

if.then40:                                        ; preds = %if.end35
  br label %while.end, !dbg !10293

if.end41:                                         ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %e, metadata !10294, metadata !DIExpression()), !dbg !10295
  %call42 = call i32* @__errno_location() #15, !dbg !10296
  %46 = load i32, i32* %call42, align 4, !dbg !10296, !tbaa !2985, !ctir !7
  store i32 %46, i32* %e, align 4, !dbg !10295, !tbaa !2985
  %47 = load i32, i32* %e, align 4, !dbg !10297, !tbaa !2985
  %cmp43 = icmp ne i32 %47, 17, !dbg !10299
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !10300

if.then44:                                        ; preds = %if.end41
  %48 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10301, !tbaa !2998
  %tobool45 = icmp ne %struct.__dirstream* %48, null, !dbg !10301
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !10304

if.then46:                                        ; preds = %if.then44
  %49 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10305, !tbaa !2998
  %call47 = call i32 @closedir(%struct.__dirstream* %49), !dbg !10306
  br label %if.end48, !dbg !10306

if.end48:                                         ; preds = %if.then46, %if.then44
  %50 = load i8*, i8** %s, align 8, !dbg !10307, !tbaa !2998
  call void @free(i8* %50) #10, !dbg !10308
  %51 = load i32, i32* %e, align 4, !dbg !10309, !tbaa !2985
  %call49 = call i32* @__errno_location() #15, !dbg !10310
  store i32 %51, i32* %call49, align 4, !dbg !10311, !tbaa !2985, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !10312
  br label %return, !dbg !10312

if.end50:                                         ; preds = %if.end41
  br label %while.body, !dbg !10213, !llvm.loop !10313

while.end:                                        ; preds = %if.then40, %if.then31
  %52 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10315, !tbaa !2998
  %tobool51 = icmp ne %struct.__dirstream* %52, null, !dbg !10315
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !10317

if.then52:                                        ; preds = %while.end
  %53 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10318, !tbaa !2998
  %call53 = call i32 @closedir(%struct.__dirstream* %53), !dbg !10319
  br label %if.end54, !dbg !10319

if.end54:                                         ; preds = %if.then52, %while.end
  %54 = load i8*, i8** %s, align 8, !dbg !10320, !tbaa !2998
  store i8* %54, i8** %retval, align 8, !dbg !10321
  br label %return, !dbg !10321

return:                                           ; preds = %if.end54, %if.end48, %if.end27, %if.then10
  %55 = load i8*, i8** %retval, align 8, !dbg !10322
  ret i8* %55, !dbg !10322
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !10323 !ctir !613 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !598
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !609
  %dp = alloca %struct.dirent*, align 8, !ctir !616
  %buf = alloca i8*, align 8, !ctir !9
  %versionlenmax = alloca i64, align 8, !ctir !55
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %tmp = alloca [2 x i8], align 1, !ctir !625
  %p = alloca i8*, align 8, !ctir !115
  %q = alloca i8*, align 8, !ctir !9
  %all_9s = alloca i8, align 1, !ctir !120
  %versionlen = alloca i64, align 8, !ctir !55
  %new_buffer_size = alloca i64, align 8, !ctir !55
  %new_buf = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10330, metadata !DIExpression()), !dbg !10331
  store i64 %base_offset, i64* %base_offset.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !10332, metadata !DIExpression()), !dbg !10333
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !10334, metadata !DIExpression()), !dbg !10335
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !10336, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10338, metadata !DIExpression()), !dbg !10339
  store i32 2, i32* %result, align 4, !dbg !10339, !tbaa !3660
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !10340, metadata !DIExpression()), !dbg !10341
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !10342, !tbaa !2998
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !10343, !tbaa !2998, !ctir !609
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !10341, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !10344, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10346, metadata !DIExpression()), !dbg !10347
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !10348, !tbaa !2998
  %3 = load i8*, i8** %2, align 8, !dbg !10349, !tbaa !2998, !ctir !9
  store i8* %3, i8** %buf, align 8, !dbg !10347, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !10350, metadata !DIExpression()), !dbg !10351
  store i64 1, i64* %versionlenmax, align 8, !dbg !10351, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10352, metadata !DIExpression()), !dbg !10353
  %4 = load i8*, i8** %buf, align 8, !dbg !10354, !tbaa !2998
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !10355, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !10356
  store i8* %add.ptr, i8** %base, align 8, !dbg !10353, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10357, metadata !DIExpression()), !dbg !10358
  %6 = load i8*, i8** %base, align 8, !dbg !10359, !tbaa !2998
  %call = call i64 @base_len(i8* %6) #14, !dbg !10360
  store i64 %call, i64* %baselen, align 8, !dbg !10358, !tbaa !3851
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10361, !tbaa !2998
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !10361
  br i1 %tobool, label %if.then, label %if.else, !dbg !10363

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10364, !tbaa !2998
  call void @rewinddir(%struct.__dirstream* %8) #10, !dbg !10365
  br label %if.end12, !dbg !10365

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10366, metadata !DIExpression()), !dbg !10368
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10369
  %9 = load i8*, i8** %base, align 8, !dbg !10370, !tbaa !2998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !10369
  %10 = load i8*, i8** %base, align 8, !dbg !10371, !tbaa !2998
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #10, !dbg !10372
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !10373, !tbaa !2985
  %12 = load i8*, i8** %buf, align 8, !dbg !10374, !tbaa !2998
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !10375, !tbaa !2998
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !10376
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !10377, !tbaa !2998
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10378, !tbaa !2998
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !10378
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !10380

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #15, !dbg !10381
  %15 = load i32, i32* %call4, align 4, !dbg !10381, !tbaa !2985, !ctir !7
  %cmp = icmp eq i32 %15, 12, !dbg !10382
  br i1 %cmp, label %if.then5, label %if.end, !dbg !10383

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !10384, !tbaa !3660
  br label %if.end, !dbg !10385

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !10386, !tbaa !2998
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !10387
  %17 = load i8*, i8** %base, align 8, !dbg !10388, !tbaa !2998
  %18 = load i64, i64* %baselen, align 8, !dbg !10389, !tbaa !3851
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !10390
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.195, i64 0, i64 0)) #10, !dbg !10391
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10392, !tbaa !2998
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !10392
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10394

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !10395, !tbaa !3660
  store i32 %20, i32* %retval, align 4, !dbg !10396
  br label %return, !dbg !10396

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10397, !tbaa !2998
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !10398, !tbaa !2998
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !10399, !tbaa !2998, !ctir !609
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !10400

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10401, !tbaa !2998
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !10402
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !10403, !tbaa !2998
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !10404
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !10400

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10405, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.declare(metadata i8** %q, metadata !10408, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !10410, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !10412, metadata !DIExpression()), !dbg !10413
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10414, !tbaa !2998
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !10414, !ctir !617
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !10414
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !10414
  %25 = load i64, i64* %baselen, align 8, !dbg !10416, !tbaa !3851
  %add = add i64 %25, 4, !dbg !10417
  %cmp17 = icmp ult i64 %call16, %add, !dbg !10418
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10419

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !10420, !llvm.loop !10421

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !10423, !tbaa !2998
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !10425, !tbaa !3851
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !10426
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10427, !tbaa !2998
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !10428, !ctir !617
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !10427
  %29 = load i64, i64* %baselen, align 8, !dbg !10429, !tbaa !3851
  %add23 = add i64 %29, 2, !dbg !10430
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !10431
  %cmp25 = icmp ne i32 %call24, 0, !dbg !10432
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !10433

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !10434, !llvm.loop !10421

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10435, !tbaa !2998
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !10436, !ctir !617
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !10435
  %31 = load i64, i64* %baselen, align 8, !dbg !10437, !tbaa !3851
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !10438
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !10439
  store i8* %add.ptr31, i8** %p, align 8, !dbg !10440, !tbaa !2998
  %32 = load i8*, i8** %p, align 8, !dbg !10441, !tbaa !2998
  %33 = load i8, i8* %32, align 1, !dbg !10443, !tbaa !3660, !ctir !116
  %conv = sext i8 %33 to i32, !dbg !10443
  %cmp32 = icmp sle i32 49, %conv, !dbg !10444
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !10445

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !10446, !tbaa !2998
  %35 = load i8, i8* %34, align 1, !dbg !10447, !tbaa !3660, !ctir !116
  %conv35 = sext i8 %35 to i32, !dbg !10447
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !10448
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !10449

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !10450, !llvm.loop !10421

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !10451, !tbaa !2998
  %37 = load i8, i8* %36, align 1, !dbg !10452, !tbaa !3660, !ctir !116
  %conv40 = sext i8 %37 to i32, !dbg !10452
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !10453
  %frombool = zext i1 %cmp41 to i8, !dbg !10454
  store i8 %frombool, i8* %all_9s, align 1, !dbg !10454, !tbaa !3109
  store i64 1, i64* %versionlen, align 8, !dbg !10455, !tbaa !3851
  br label %for.cond, !dbg !10457

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !10458, !tbaa !2998
  %39 = load i64, i64* %versionlen, align 8, !dbg !10458, !tbaa !3851
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !10458, !ctir !115
  %40 = load i8, i8* %arrayidx, align 1, !dbg !10458, !tbaa !3660
  %conv43 = sext i8 %40 to i32, !dbg !10458
  %sub = sub i32 %conv43, 48, !dbg !10458
  %cmp44 = icmp ule i32 %sub, 9, !dbg !10458
  br i1 %cmp44, label %for.body, label %for.end, !dbg !10460

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !10461, !tbaa !2998
  %42 = load i64, i64* %versionlen, align 8, !dbg !10462, !tbaa !3851
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !10461, !ctir !115
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !10461, !tbaa !3660
  %conv47 = sext i8 %43 to i32, !dbg !10461
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !10463
  %conv49 = zext i1 %cmp48 to i32, !dbg !10463
  %44 = load i8, i8* %all_9s, align 1, !dbg !10464, !tbaa !3109
  %tobool50 = trunc i8 %44 to i1, !dbg !10464
  %conv51 = zext i1 %tobool50 to i32, !dbg !10464
  %and = and i32 %conv51, %conv49, !dbg !10464
  %tobool52 = icmp ne i32 %and, 0, !dbg !10464
  %frombool53 = zext i1 %tobool52 to i8, !dbg !10464
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !10464, !tbaa !3109
  br label %for.inc, !dbg !10465

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !10466, !tbaa !3851
  %inc = add i64 %45, 1, !dbg !10466
  store i64 %inc, i64* %versionlen, align 8, !dbg !10466, !tbaa !3851
  br label %for.cond, !dbg !10467, !llvm.loop !10468

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !10470, !tbaa !2998
  %47 = load i64, i64* %versionlen, align 8, !dbg !10472, !tbaa !3851
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !10470, !ctir !115
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !10470, !tbaa !3660
  %conv55 = sext i8 %48 to i32, !dbg !10470
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !10473
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !10474

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !10475, !tbaa !2998
  %50 = load i64, i64* %versionlen, align 8, !dbg !10476, !tbaa !3851
  %add59 = add i64 %50, 1, !dbg !10477
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !10475, !ctir !115
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !10475, !tbaa !3660
  %tobool61 = icmp ne i8 %51, 0, !dbg !10475
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !10478

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !10479, !tbaa !3851
  %53 = load i64, i64* %versionlen, align 8, !dbg !10480, !tbaa !3851
  %cmp63 = icmp ult i64 %52, %53, !dbg !10481
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !10482

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !10483, !tbaa !3851
  %55 = load i64, i64* %versionlen, align 8, !dbg !10484, !tbaa !3851
  %cmp65 = icmp eq i64 %54, %55, !dbg !10485
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !10486

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !10487, !tbaa !2998
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !10488, !tbaa !3851
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !10489
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !10490
  %58 = load i8*, i8** %p, align 8, !dbg !10491, !tbaa !2998
  %59 = load i64, i64* %versionlen, align 8, !dbg !10492, !tbaa !3851
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !10493
  %cmp71 = icmp sle i32 %call70, 0, !dbg !10494
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !10495

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !10496, !llvm.loop !10421

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !10497, !tbaa !3109
  %tobool75 = trunc i8 %60 to i1, !dbg !10497
  %conv76 = zext i1 %tobool75 to i64, !dbg !10497
  %61 = load i64, i64* %versionlen, align 8, !dbg !10498, !tbaa !3851
  %add77 = add i64 %conv76, %61, !dbg !10499
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !10500, !tbaa !3851
  %62 = load i8, i8* %all_9s, align 1, !dbg !10501, !tbaa !3109
  %tobool78 = trunc i8 %62 to i1, !dbg !10501
  %63 = zext i1 %tobool78 to i64, !dbg !10501
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !10501
  store i32 %cond, i32* %result, align 4, !dbg !10502, !tbaa !3660
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !10503, metadata !DIExpression()), !dbg !10504
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !10505, !tbaa !3851
  %add80 = add i64 %64, 2, !dbg !10506
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !10507, !tbaa !3851
  %add81 = add i64 %add80, %65, !dbg !10508
  %add82 = add i64 %add81, 2, !dbg !10509
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !10504, !tbaa !3851
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !10510, !tbaa !3851
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !10512, !tbaa !3851
  %cmp83 = icmp ult i64 %66, %67, !dbg !10513
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !10514

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !10515, !tbaa !3851
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !10515
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !10518

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !10519, !tbaa !3851
  %mul = mul i64 %69, 2, !dbg !10519
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !10519, !tbaa !3851
  br label %if.end89, !dbg !10520

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !10521, metadata !DIExpression()), !dbg !10522
  %70 = load i8*, i8** %buf, align 8, !dbg !10523, !tbaa !2998
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !10524, !tbaa !3851
  %call90 = call i8* @realloc(i8* %70, i64 %71) #10, !dbg !10525
  store i8* %call90, i8** %new_buf, align 8, !dbg !10522, !tbaa !2998
  %72 = load i8*, i8** %new_buf, align 8, !dbg !10526, !tbaa !2998
  %tobool91 = icmp ne i8* %72, null, !dbg !10526
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !10528

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !10529, !tbaa !2998
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !10531, !tbaa !2998
  store i8* %73, i8** %74, align 8, !dbg !10532, !tbaa !2998, !ctir !9
  store i32 3, i32* %retval, align 4, !dbg !10533
  br label %return, !dbg !10533

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !10534, !tbaa !2998
  store i8* %75, i8** %buf, align 8, !dbg !10535, !tbaa !2998
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !10536, !tbaa !3851
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !10537, !tbaa !3851
  br label %if.end94, !dbg !10538

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !10539, !tbaa !2998
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !10540, !tbaa !3851
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !10541
  store i8* %add.ptr95, i8** %q, align 8, !dbg !10542, !tbaa !2998
  %79 = load i8*, i8** %q, align 8, !dbg !10543, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !10543
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !10543, !tbaa !2998
  store i8 46, i8* %79, align 1, !dbg !10544, !tbaa !3660, !ctir !10
  %80 = load i8*, i8** %q, align 8, !dbg !10545, !tbaa !2998
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !10545
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !10545, !tbaa !2998
  store i8 126, i8* %80, align 1, !dbg !10546, !tbaa !3660, !ctir !10
  %81 = load i8*, i8** %q, align 8, !dbg !10547, !tbaa !2998
  store i8 48, i8* %81, align 1, !dbg !10548, !tbaa !3660, !ctir !10
  %82 = load i8, i8* %all_9s, align 1, !dbg !10549, !tbaa !3109
  %tobool97 = trunc i8 %82 to i1, !dbg !10549
  %conv98 = zext i1 %tobool97 to i32, !dbg !10549
  %83 = load i8*, i8** %q, align 8, !dbg !10550, !tbaa !2998
  %idx.ext = sext i32 %conv98 to i64, !dbg !10550
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !10550
  store i8* %add.ptr99, i8** %q, align 8, !dbg !10550, !tbaa !2998
  %84 = load i8*, i8** %q, align 8, !dbg !10551, !tbaa !2998
  %85 = load i8*, i8** %p, align 8, !dbg !10552, !tbaa !2998
  %86 = load i64, i64* %versionlen, align 8, !dbg !10553, !tbaa !3851
  %add100 = add i64 %86, 2, !dbg !10554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !10555
  %87 = load i64, i64* %versionlen, align 8, !dbg !10556, !tbaa !3851
  %88 = load i8*, i8** %q, align 8, !dbg !10557, !tbaa !2998
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !10557
  store i8* %add.ptr101, i8** %q, align 8, !dbg !10557, !tbaa !2998
  br label %while.cond102, !dbg !10558

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !10559, !tbaa !2998
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !10559
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !10559, !tbaa !2998
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !10560, !tbaa !3660, !ctir !10
  %conv104 = sext i8 %90 to i32, !dbg !10560
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !10561
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !10558

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !10562, !tbaa !2998
  store i8 48, i8* %91, align 1, !dbg !10563, !tbaa !3660, !ctir !10
  br label %while.cond102, !dbg !10558, !llvm.loop !10564

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !10566, !tbaa !2998
  %93 = load i8, i8* %92, align 1, !dbg !10567, !tbaa !3660, !ctir !10
  %inc108 = add i8 %93, 1, !dbg !10567
  store i8 %inc108, i8* %92, align 1, !dbg !10567, !tbaa !3660, !ctir !10
  br label %while.cond, !dbg !10400, !llvm.loop !10421

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !10568, !tbaa !2998
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !10569, !tbaa !2998
  store i8* %94, i8** %95, align 8, !dbg !10570, !tbaa !2998, !ctir !9
  %96 = load i32, i32* %result, align 4, !dbg !10571, !tbaa !3660
  store i32 %96, i32* %retval, align 4, !dbg !10572
  br label %return, !dbg !10572

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !10573
  ret i32 %97, !dbg !10573
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !10574 !ctir !626 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %baselen_max = alloca i64, align 8, !ctir !55
  %name_max = alloca i64, align 8, !ctir !31
  %tmp = alloca [2 x i8], align 1, !ctir !625
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10575, metadata !DIExpression()), !dbg !10576
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10577, metadata !DIExpression()), !dbg !10578
  store i8 %e, i8* %e.addr, align 1, !tbaa !3660
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !10579, metadata !DIExpression()), !dbg !10580
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10581, metadata !DIExpression()), !dbg !10582
  store i64* %base_max, i64** %base_max.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !10583, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10585, metadata !DIExpression()), !dbg !10586
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10587, !tbaa !2998
  %call = call i8* @last_component(i8* %0) #14, !dbg !10588
  store i8* %call, i8** %base, align 8, !dbg !10586, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10589, metadata !DIExpression()), !dbg !10590
  %1 = load i8*, i8** %base, align 8, !dbg !10591, !tbaa !2998
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10592
  store i64 %call1, i64* %baselen, align 8, !dbg !10590, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !10593, metadata !DIExpression()), !dbg !10594
  store i64 255, i64* %baselen_max, align 8, !dbg !10594, !tbaa !3851
  %2 = load i64, i64* %baselen, align 8, !dbg !10595, !tbaa !3851
  %cmp = icmp ult i64 14, %2, !dbg !10597
  br i1 %cmp, label %if.then, label %if.end27, !dbg !10598

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !10599, !tbaa !2998
  %4 = load i64, i64* %3, align 8, !dbg !10602, !tbaa !3851, !ctir !55
  %cmp2 = icmp eq i64 %4, 0, !dbg !10603
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !10604

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !10605, metadata !DIExpression()), !dbg !10607
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !10608, !tbaa !2985
  %cmp4 = icmp slt i32 %5, 0, !dbg !10610
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10611

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10612, metadata !DIExpression()), !dbg !10614
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10615
  %6 = load i8*, i8** %base, align 8, !dbg !10616, !tbaa !2998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !10615
  %7 = load i8*, i8** %base, align 8, !dbg !10617, !tbaa !2998
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #10, !dbg !10618
  %call7 = call i32* @__errno_location() #15, !dbg !10619
  store i32 0, i32* %call7, align 4, !dbg !10620, !tbaa !2985, !ctir !7
  %8 = load i8*, i8** %file.addr, align 8, !dbg !10621, !tbaa !2998
  %call8 = call i64 @pathconf(i8* %8, i32 3) #10, !dbg !10622
  store i64 %call8, i64* %name_max, align 8, !dbg !10623, !tbaa !3851
  %call9 = call i32* @__errno_location() #15, !dbg !10624
  %9 = load i32, i32* %call9, align 4, !dbg !10624, !tbaa !2985, !ctir !7
  %tobool = icmp ne i32 %9, 0, !dbg !10625
  %lnot = xor i1 %tobool, true, !dbg !10625
  %lnot.ext = zext i1 %lnot to i32, !dbg !10625
  %conv = sext i32 %lnot.ext to i64, !dbg !10625
  %10 = load i64, i64* %name_max, align 8, !dbg !10626, !tbaa !3851
  %sub = sub nsw i64 %10, %conv, !dbg !10626
  store i64 %sub, i64* %name_max, align 8, !dbg !10626, !tbaa !3851
  %11 = load i8*, i8** %base, align 8, !dbg !10627, !tbaa !2998
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !10628
  br label %if.end, !dbg !10629

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #15, !dbg !10630
  store i32 0, i32* %call11, align 4, !dbg !10632, !tbaa !2985, !ctir !7
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !10633, !tbaa !2985
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #10, !dbg !10634
  store i64 %call12, i64* %name_max, align 8, !dbg !10635, !tbaa !3851
  %call13 = call i32* @__errno_location() #15, !dbg !10636
  %13 = load i32, i32* %call13, align 4, !dbg !10636, !tbaa !2985, !ctir !7
  %tobool14 = icmp ne i32 %13, 0, !dbg !10637
  %lnot15 = xor i1 %tobool14, true, !dbg !10637
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !10637
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !10637
  %14 = load i64, i64* %name_max, align 8, !dbg !10638, !tbaa !3851
  %sub18 = sub nsw i64 %14, %conv17, !dbg !10638
  store i64 %sub18, i64* %name_max, align 8, !dbg !10638, !tbaa !3851
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !10639, !tbaa !3851
  %cmp19 = icmp sle i64 0, %15, !dbg !10640
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !10641

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !10642, !tbaa !3851
  %cmp21 = icmp ule i64 %16, -1, !dbg !10643
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10644

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !10645, !tbaa !3851
  br label %cond.end, !dbg !10644

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !10646, !tbaa !3851
  %cmp23 = icmp slt i64 %18, -1, !dbg !10647
  %19 = zext i1 %cmp23 to i64, !dbg !10646
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !10646
  br label %cond.end, !dbg !10644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !10644
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !10648, !tbaa !2998
  store i64 %cond25, i64* %20, align 8, !dbg !10649, !tbaa !3851, !ctir !55
  br label %if.end26, !dbg !10650

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !10651, !tbaa !2998
  %22 = load i64, i64* %21, align 8, !dbg !10652, !tbaa !3851, !ctir !55
  store i64 %22, i64* %baselen_max, align 8, !dbg !10653, !tbaa !3851
  br label %if.end27, !dbg !10654

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !10655, !tbaa !3851
  %24 = load i64, i64* %baselen, align 8, !dbg !10657, !tbaa !3851
  %cmp28 = icmp ult i64 %23, %24, !dbg !10658
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !10659

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !10660, !tbaa !2998
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !10662, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !10663
  %27 = load i8*, i8** %base, align 8, !dbg !10664, !tbaa !2998
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !10665
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !10665
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10665
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !10666, !tbaa !3851
  %28 = load i64, i64* %baselen_max, align 8, !dbg !10667, !tbaa !3851
  %29 = load i64, i64* %baselen, align 8, !dbg !10669, !tbaa !3851
  %cmp31 = icmp ule i64 %28, %29, !dbg !10670
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10671

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !10672, !tbaa !3851
  %sub34 = sub i64 %30, 1, !dbg !10673
  store i64 %sub34, i64* %baselen, align 8, !dbg !10674, !tbaa !3851
  br label %if.end35, !dbg !10675

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !10676, !tbaa !3660
  %32 = load i8*, i8** %base, align 8, !dbg !10677, !tbaa !2998
  %33 = load i64, i64* %baselen, align 8, !dbg !10678, !tbaa !3851
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !10677, !ctir !9
  store i8 %31, i8* %arrayidx, align 1, !dbg !10679, !tbaa !3660
  %34 = load i8*, i8** %base, align 8, !dbg !10680, !tbaa !2998
  %35 = load i64, i64* %baselen, align 8, !dbg !10681, !tbaa !3851
  %add = add i64 %35, 1, !dbg !10682
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !10680, !ctir !9
  store i8 0, i8* %arrayidx36, align 1, !dbg !10683, !tbaa !3660
  br label %if.end37, !dbg !10684

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !10685
}

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10686 !ctir !636 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10688, metadata !DIExpression()), !dbg !10689
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10692, metadata !DIExpression()), !dbg !10693
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10694, !tbaa !2985
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10695, !tbaa !2998
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10696, !tbaa !3660
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !10697
  ret i8* %call, !dbg !10698
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10699 !ctir !636 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10700, metadata !DIExpression()), !dbg !10701
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10706, metadata !DIExpression()), !dbg !10707
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10708, !tbaa !2985
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10709, !tbaa !2998
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10710, !tbaa !3660
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !10711
  store i8* %call, i8** %result, align 8, !dbg !10707, !tbaa !2998
  %3 = load i8*, i8** %result, align 8, !dbg !10712, !tbaa !2998
  %tobool = icmp ne i8* %3, null, !dbg !10712
  br i1 %tobool, label %if.end, label %if.then, !dbg !10714

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10715
  unreachable, !dbg !10715

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !10716, !tbaa !2998
  ret i8* %4, !dbg !10717
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !10718 !ctir !638 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10719, metadata !DIExpression()), !dbg !10720
  store i8* %version, i8** %version.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10721, metadata !DIExpression()), !dbg !10722
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10723, !tbaa !2998
  %cmp = icmp eq i8* %0, null, !dbg !10725
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10726

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10727, !tbaa !2998
  %2 = load i8, i8* %1, align 1, !dbg !10728, !tbaa !3660, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !10728
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10729
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10730

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !10731
  br label %return, !dbg !10731

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10732, !tbaa !2998
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10732, !tbaa !2998
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !10732, !tbaa !2998
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !10732
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !10732, !ctir !640
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10732, !tbaa !3660
  store i32 %6, i32* %retval, align 4, !dbg !10733
  br label %return, !dbg !10733

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10734
  ret i32 %7, !dbg !10734
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !10735 !ctir !638 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10736, metadata !DIExpression()), !dbg !10737
  store i8* %version, i8** %version.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10738, metadata !DIExpression()), !dbg !10739
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10740, !tbaa !2998
  %tobool = icmp ne i8* %0, null, !dbg !10740
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10742

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10743, !tbaa !2998
  %2 = load i8, i8* %1, align 1, !dbg !10744, !tbaa !3660, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !10744
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10744
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10745

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10746, !tbaa !2998
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10747, !tbaa !2998
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !10748
  store i32 %call, i32* %retval, align 4, !dbg !10749
  br label %return, !dbg !10749

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.208, i64 0, i64 0)) #10, !dbg !10750
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.209, i64 0, i64 0), i8* %call2), !dbg !10751
  store i32 %call3, i32* %retval, align 4, !dbg !10752
  br label %return, !dbg !10752

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10753
  ret i32 %5, !dbg !10753
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !10754 !ctir !1603 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !55
  %lcm = alloca i64, align 8, !ctir !55
  %m = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %q = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !55
  store i64 %a, i64* %a.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10756, metadata !DIExpression()), !dbg !10757
  store i64 %b, i64* %b.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10758, metadata !DIExpression()), !dbg !10759
  store i64 %lcm_max, i64* %lcm_max.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !10760, metadata !DIExpression()), !dbg !10761
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10762, metadata !DIExpression()), !dbg !10763
  %0 = load i64, i64* %a.addr, align 8, !dbg !10764, !tbaa !3851
  %tobool = icmp ne i64 %0, 0, !dbg !10764
  br i1 %tobool, label %if.else, label %if.then, !dbg !10766

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !10767, !tbaa !3851
  %tobool1 = icmp ne i64 %1, 0, !dbg !10767
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10767

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !10768, !tbaa !3851
  br label %cond.end, !dbg !10767

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !10767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !10767
  store i64 %cond, i64* %size, align 8, !dbg !10769, !tbaa !3851
  br label %if.end9, !dbg !10770

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !10771, !tbaa !3851
  %tobool2 = icmp ne i64 %3, 0, !dbg !10771
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !10774

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !10775, metadata !DIExpression()), !dbg !10777
  call void @llvm.dbg.declare(metadata i64* %m, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10780, metadata !DIExpression()), !dbg !10781
  call void @llvm.dbg.declare(metadata i64* %q, metadata !10782, metadata !DIExpression()), !dbg !10783
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10784, metadata !DIExpression()), !dbg !10785
  %4 = load i64, i64* %a.addr, align 8, !dbg !10786, !tbaa !3851
  store i64 %4, i64* %m, align 8, !dbg !10788, !tbaa !3851
  %5 = load i64, i64* %b.addr, align 8, !dbg !10789, !tbaa !3851
  store i64 %5, i64* %n, align 8, !dbg !10790, !tbaa !3851
  br label %for.cond, !dbg !10791

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !10792, !tbaa !3851
  %7 = load i64, i64* %n, align 8, !dbg !10794, !tbaa !3851
  %rem = urem i64 %6, %7, !dbg !10795
  store i64 %rem, i64* %r, align 8, !dbg !10796, !tbaa !3851
  %cmp = icmp ne i64 %rem, 0, !dbg !10797
  br i1 %cmp, label %for.body, label %for.end, !dbg !10798

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10799

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !10800, !tbaa !3851
  store i64 %8, i64* %m, align 8, !dbg !10801, !tbaa !3851
  %9 = load i64, i64* %r, align 8, !dbg !10802, !tbaa !3851
  store i64 %9, i64* %n, align 8, !dbg !10803, !tbaa !3851
  br label %for.cond, !dbg !10804, !llvm.loop !10805

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !10807, !tbaa !3851
  %11 = load i64, i64* %n, align 8, !dbg !10808, !tbaa !3851
  %div = udiv i64 %10, %11, !dbg !10809
  store i64 %div, i64* %q, align 8, !dbg !10810, !tbaa !3851
  %12 = load i64, i64* %q, align 8, !dbg !10811, !tbaa !3851
  %13 = load i64, i64* %b.addr, align 8, !dbg !10812, !tbaa !3851
  %mul = mul i64 %12, %13, !dbg !10813
  store i64 %mul, i64* %lcm, align 8, !dbg !10814, !tbaa !3851
  %14 = load i64, i64* %lcm, align 8, !dbg !10815, !tbaa !3851
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !10817, !tbaa !3851
  %cmp4 = icmp ule i64 %14, %15, !dbg !10818
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !10819

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !10820, !tbaa !3851
  %17 = load i64, i64* %b.addr, align 8, !dbg !10821, !tbaa !3851
  %div5 = udiv i64 %16, %17, !dbg !10822
  %18 = load i64, i64* %q, align 8, !dbg !10823, !tbaa !3851
  %cmp6 = icmp eq i64 %div5, %18, !dbg !10824
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10825

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !10826, !tbaa !3851
  store i64 %19, i64* %retval, align 8, !dbg !10827
  br label %return, !dbg !10827

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !10828

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !10829, !tbaa !3851
  store i64 %20, i64* %size, align 8, !dbg !10830, !tbaa !3851
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !10831, !tbaa !3851
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !10832, !tbaa !3851
  %cmp10 = icmp ule i64 %21, %22, !dbg !10833
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10831

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !10834, !tbaa !3851
  br label %cond.end13, !dbg !10831

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !10835, !tbaa !3851
  br label %cond.end13, !dbg !10831

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !10831
  store i64 %cond14, i64* %retval, align 8, !dbg !10836
  br label %return, !dbg !10836

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !10837
  ret i64 %25, !dbg !10837
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !10838 !ctir !136 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10839, metadata !DIExpression()), !dbg !10840
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10841, !tbaa !2998
  store i8* %0, i8** @file_name, align 8, !dbg !10842, !tbaa !2998
  ret void, !dbg !10843
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !10844 !ctir !134 {
entry:
  %fail = alloca i8, align 1, !ctir !120
  %close_error = alloca i8*, align 8, !ctir !115
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10845, metadata !DIExpression()), !dbg !10846
  store i8 0, i8* %fail, align 1, !dbg !10846, !tbaa !3109
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10847, !tbaa !2998
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !10849
  %cmp = icmp ugt i64 %call, 0, !dbg !10850
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10851

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10852, !tbaa !2998
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !10855
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10856
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10857

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10858, !tbaa !2998
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !10859
  %cmp4 = icmp ne i32 %call3, 0, !dbg !10860
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10861

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !10862, !tbaa !3109
  br label %if.end, !dbg !10863

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !10864

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10865, !tbaa !2998
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !10867
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10868
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10869

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !10870, !tbaa !3109
  br label %if.end10, !dbg !10871

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !10872, !tbaa !3109
  %tobool = trunc i8 %4 to i1, !dbg !10872
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !10874

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !10875, metadata !DIExpression()), !dbg !10877
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.214, i64 0, i64 0)) #10, !dbg !10878
  store i8* %call12, i8** %close_error, align 8, !dbg !10877, !tbaa !2998
  %5 = load i8*, i8** @file_name, align 8, !dbg !10879, !tbaa !2998
  %tobool13 = icmp ne i8* %5, null, !dbg !10879
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10881

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !10882
  %6 = load i32, i32* %call15, align 4, !dbg !10882, !tbaa !2985, !ctir !7
  %7 = load i8*, i8** @file_name, align 8, !dbg !10883, !tbaa !2998
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !10884
  %8 = load i8*, i8** %close_error, align 8, !dbg !10885, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.215, i64 0, i64 0), i8* %call16, i8* %8), !dbg !10886
  br label %if.end18, !dbg !10886

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #15, !dbg !10887
  %9 = load i32, i32* %call17, align 4, !dbg !10887, !tbaa !2985, !ctir !7
  %10 = load i8*, i8** %close_error, align 8, !dbg !10888, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.216, i64 0, i64 0), i8* %10), !dbg !10889
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10890

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10891
  %11 = load i8, i8* %fail, align 1, !dbg !10892, !tbaa !3109
  %tobool20 = trunc i8 %11 to i1, !dbg !10892
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10894

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10895, !tbaa !2985
  call void @_exit(i32 %12) #16, !dbg !10896
  unreachable, !dbg !10896

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10897
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10898 !ctir !136 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10899, metadata !DIExpression()), !dbg !10900
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10901, !tbaa !2998
  store i8* %0, i8** @file_name.217, align 8, !dbg !10902, !tbaa !2998
  ret void, !dbg !10903
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10904 !ctir !700 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10905, metadata !DIExpression()), !dbg !10906
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10907, !tbaa !3109
  %tobool = trunc i8 %0 to i1, !dbg !10907
  %frombool1 = zext i1 %tobool to i8, !dbg !10908
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10908, !tbaa !3109
  ret void, !dbg !10909
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10910 !ctir !134 {
entry:
  %write_error = alloca i8*, align 8, !ctir !115
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10911, !tbaa !2998
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10913
  %cmp = icmp ne i32 %call, 0, !dbg !10914
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10915

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10916, !tbaa !3109
  %tobool = trunc i8 %1 to i1, !dbg !10916
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10917

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #15, !dbg !10918
  %2 = load i32, i32* %call2, align 4, !dbg !10918, !tbaa !2985, !ctir !7
  %cmp3 = icmp eq i32 %2, 32, !dbg !10919
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10920

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10921, metadata !DIExpression()), !dbg !10923
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0)) #10, !dbg !10924
  store i8* %call4, i8** %write_error, align 8, !dbg !10923, !tbaa !2998
  %3 = load i8*, i8** @file_name.217, align 8, !dbg !10925, !tbaa !2998
  %tobool5 = icmp ne i8* %3, null, !dbg !10925
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10927

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #15, !dbg !10928
  %4 = load i32, i32* %call7, align 4, !dbg !10928, !tbaa !2985, !ctir !7
  %5 = load i8*, i8** @file_name.217, align 8, !dbg !10929, !tbaa !2998
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10930
  %6 = load i8*, i8** %write_error, align 8, !dbg !10931, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.221, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10932
  br label %if.end, !dbg !10932

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #15, !dbg !10933
  %7 = load i32, i32* %call9, align 4, !dbg !10933, !tbaa !2985, !ctir !7
  %8 = load i8*, i8** %write_error, align 8, !dbg !10934, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.222, i64 0, i64 0), i8* %8), !dbg !10935
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10936, !tbaa !2985
  call void @_exit(i32 %9) #16, !dbg !10937
  unreachable, !dbg !10937

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10938, !tbaa !2998
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10940
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10941
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10942

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10943, !tbaa !2985
  call void @_exit(i32 %11) #16, !dbg !10944
  unreachable, !dbg !10944

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10945
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10946 !ctir !990 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10948, metadata !DIExpression()), !dbg !10949
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10950, metadata !DIExpression()), !dbg !10951
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10952, !tbaa !2998
  %call = call i8* @mdir_name(i8* %0), !dbg !10953
  store i8* %call, i8** %result, align 8, !dbg !10951, !tbaa !2998
  %1 = load i8*, i8** %result, align 8, !dbg !10954, !tbaa !2998
  %tobool = icmp ne i8* %1, null, !dbg !10954
  br i1 %tobool, label %if.end, label %if.then, !dbg !10956

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10957
  unreachable, !dbg !10957

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10958, !tbaa !2998
  ret i8* %2, !dbg !10959
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10960 !ctir !1611 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !55
  %length = alloca i64, align 8, !ctir !55
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10964, metadata !DIExpression()), !dbg !10965
  store i64 0, i64* %prefix_length, align 8, !dbg !10965, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10966, metadata !DIExpression()), !dbg !10967
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10968, !tbaa !3851
  %cmp = icmp ne i64 %0, 0, !dbg !10969
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10968

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10968

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10970, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10970, !ctir !115
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10970, !tbaa !3660
  %conv = sext i8 %2 to i32, !dbg !10970
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10970
  %3 = zext i1 %cmp1 to i64, !dbg !10970
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10970
  br label %cond.end, !dbg !10968

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10968
  %conv4 = sext i32 %cond3 to i64, !dbg !10971
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10972, !tbaa !3851
  %add = add i64 %4, %conv4, !dbg !10972
  store i64 %add, i64* %prefix_length, align 8, !dbg !10972, !tbaa !3851
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10973, !tbaa !2998
  %call = call i8* @last_component(i8* %5) #14, !dbg !10975
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10976, !tbaa !2998
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10977
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10977
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10977
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10978, !tbaa !3851
  br label %for.cond, !dbg !10979

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10980, !tbaa !3851
  %8 = load i64, i64* %length, align 8, !dbg !10982, !tbaa !3851
  %cmp5 = icmp ult i64 %7, %8, !dbg !10983
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10984

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10985, !tbaa !2998
  %10 = load i64, i64* %length, align 8, !dbg !10985, !tbaa !3851
  %sub = sub i64 %10, 1, !dbg !10985
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10985, !ctir !115
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10985, !tbaa !3660
  %conv8 = sext i8 %11 to i32, !dbg !10985
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10985
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10987

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10988

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10985

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10989, !tbaa !3851
  %dec = add i64 %12, -1, !dbg !10989
  store i64 %dec, i64* %length, align 8, !dbg !10989, !tbaa !3851
  br label %for.cond, !dbg !10990, !llvm.loop !10991

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10993, !tbaa !3851
  ret i64 %13, !dbg !10994
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10995 !ctir !990 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !55
  %append_dot = alloca i8, align 1, !ctir !120
  %dir = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10998, metadata !DIExpression()), !dbg !10999
  %0 = load i8*, i8** %file.addr, align 8, !dbg !11000, !tbaa !2998
  %call = call i64 @dir_len(i8* %0) #14, !dbg !11001
  store i64 %call, i64* %length, align 8, !dbg !10999, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !11002, metadata !DIExpression()), !dbg !11003
  %1 = load i64, i64* %length, align 8, !dbg !11004, !tbaa !3851
  %cmp = icmp eq i64 %1, 0, !dbg !11005
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11006

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !11006

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !11003
  store i8 %frombool, i8* %append_dot, align 1, !dbg !11003, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !11007, metadata !DIExpression()), !dbg !11008
  %3 = load i64, i64* %length, align 8, !dbg !11009, !tbaa !3851
  %4 = load i8, i8* %append_dot, align 1, !dbg !11010, !tbaa !3109
  %tobool = trunc i8 %4 to i1, !dbg !11010
  %conv = zext i1 %tobool to i64, !dbg !11010
  %add = add i64 %3, %conv, !dbg !11011
  %add1 = add i64 %add, 1, !dbg !11012
  %call2 = call noalias i8* @malloc(i64 %add1) #10, !dbg !11013
  store i8* %call2, i8** %dir, align 8, !dbg !11008, !tbaa !2998
  %5 = load i8*, i8** %dir, align 8, !dbg !11014, !tbaa !2998
  %tobool3 = icmp ne i8* %5, null, !dbg !11014
  br i1 %tobool3, label %if.end, label %if.then, !dbg !11016

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !11017
  br label %return, !dbg !11017

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !11018, !tbaa !2998
  %7 = load i8*, i8** %file.addr, align 8, !dbg !11019, !tbaa !2998
  %8 = load i64, i64* %length, align 8, !dbg !11020, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !11021
  %9 = load i8, i8* %append_dot, align 1, !dbg !11022, !tbaa !3109
  %tobool4 = trunc i8 %9 to i1, !dbg !11022
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !11024

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !11025, !tbaa !2998
  %11 = load i64, i64* %length, align 8, !dbg !11026, !tbaa !3851
  %inc = add i64 %11, 1, !dbg !11026
  store i64 %inc, i64* %length, align 8, !dbg !11026, !tbaa !3851
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !11025, !ctir !9
  store i8 46, i8* %arrayidx, align 1, !dbg !11027, !tbaa !3660
  br label %if.end6, !dbg !11025

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !11028, !tbaa !2998
  %13 = load i64, i64* %length, align 8, !dbg !11029, !tbaa !3851
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !11028, !ctir !9
  store i8 0, i8* %arrayidx7, align 1, !dbg !11030, !tbaa !3660
  %14 = load i8*, i8** %dir, align 8, !dbg !11031, !tbaa !2998
  store i8* %14, i8** %retval, align 8, !dbg !11032
  br label %return, !dbg !11032

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !11033
  ret i8* %15, !dbg !11033
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !11034 !ctir !990 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !115
  %p = alloca i8*, align 8, !ctir !115
  %saw_slash = alloca i8, align 1, !ctir !120
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11036, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11038, metadata !DIExpression()), !dbg !11039
  %0 = load i8*, i8** %name.addr, align 8, !dbg !11040, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !11041
  store i8* %add.ptr, i8** %base, align 8, !dbg !11039, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11042, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !11044, metadata !DIExpression()), !dbg !11045
  store i8 0, i8* %saw_slash, align 1, !dbg !11045, !tbaa !3109
  br label %while.cond, !dbg !11046

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !11047, !tbaa !2998
  %2 = load i8, i8* %1, align 1, !dbg !11047, !tbaa !3660, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !11047
  %cmp = icmp eq i32 %conv, 47, !dbg !11047
  br i1 %cmp, label %while.body, label %while.end, !dbg !11046

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !11048, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !11048
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !11048, !tbaa !2998
  br label %while.cond, !dbg !11046, !llvm.loop !11049

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !11050, !tbaa !2998
  store i8* %4, i8** %p, align 8, !dbg !11052, !tbaa !2998
  br label %for.cond, !dbg !11053

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !11054, !tbaa !2998
  %6 = load i8, i8* %5, align 1, !dbg !11056, !tbaa !3660, !ctir !116
  %tobool = icmp ne i8 %6, 0, !dbg !11057
  br i1 %tobool, label %for.body, label %for.end, !dbg !11057

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !11058, !tbaa !2998
  %8 = load i8, i8* %7, align 1, !dbg !11058, !tbaa !3660, !ctir !116
  %conv2 = sext i8 %8 to i32, !dbg !11058
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !11058
  br i1 %cmp3, label %if.then, label %if.else, !dbg !11061

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !11062, !tbaa !3109
  br label %if.end7, !dbg !11063

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !11064, !tbaa !3109
  %tobool5 = trunc i8 %9 to i1, !dbg !11064
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !11066

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !11067, !tbaa !2998
  store i8* %10, i8** %base, align 8, !dbg !11069, !tbaa !2998
  store i8 0, i8* %saw_slash, align 1, !dbg !11070, !tbaa !3109
  br label %if.end, !dbg !11071

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !11072

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !11073, !tbaa !2998
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !11073
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !11073, !tbaa !2998
  br label %for.cond, !dbg !11074, !llvm.loop !11075

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !11077, !tbaa !2998
  ret i8* %12, !dbg !11078
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !11079 !ctir !1611 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !55
  %prefix_len = alloca i64, align 8, !ctir !55
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11080, metadata !DIExpression()), !dbg !11081
  call void @llvm.dbg.declare(metadata i64* %len, metadata !11082, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !11084, metadata !DIExpression()), !dbg !11085
  store i64 0, i64* %prefix_len, align 8, !dbg !11085, !tbaa !3851
  %0 = load i8*, i8** %name.addr, align 8, !dbg !11086, !tbaa !2998
  %call = call i64 @strlen(i8* %0) #14, !dbg !11088
  store i64 %call, i64* %len, align 8, !dbg !11089, !tbaa !3851
  br label %for.cond, !dbg !11090

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !11091, !tbaa !3851
  %cmp = icmp ult i64 1, %1, !dbg !11093
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11094

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !11095, !tbaa !2998
  %3 = load i64, i64* %len, align 8, !dbg !11095, !tbaa !3851
  %sub = sub i64 %3, 1, !dbg !11095
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !11095, !ctir !115
  %4 = load i8, i8* %arrayidx, align 1, !dbg !11095, !tbaa !3660
  %conv = sext i8 %4 to i32, !dbg !11095
  %cmp1 = icmp eq i32 %conv, 47, !dbg !11095
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !11096
  br i1 %5, label %for.body, label %for.end, !dbg !11097

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !11098

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !11099, !tbaa !3851
  %dec = add i64 %6, -1, !dbg !11099
  store i64 %dec, i64* %len, align 8, !dbg !11099, !tbaa !3851
  br label %for.cond, !dbg !11100, !llvm.loop !11101

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !11103, !tbaa !3851
  ret i64 %7, !dbg !11104
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strip_trailing_slashes(i8* %file) #4 !dbg !11105 !ctir !1619 {
entry:
  %file.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %base_lim = alloca i8*, align 8, !ctir !9
  %had_slash = alloca i8, align 1, !ctir !120
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11107, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.declare(metadata i8** %base, metadata !11109, metadata !DIExpression()), !dbg !11110
  %0 = load i8*, i8** %file.addr, align 8, !dbg !11111, !tbaa !2998
  %call = call i8* @last_component(i8* %0) #14, !dbg !11112
  store i8* %call, i8** %base, align 8, !dbg !11110, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %base_lim, metadata !11113, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.declare(metadata i8* %had_slash, metadata !11115, metadata !DIExpression()), !dbg !11116
  %1 = load i8*, i8** %base, align 8, !dbg !11117, !tbaa !2998
  %2 = load i8, i8* %1, align 1, !dbg !11119, !tbaa !3660, !ctir !10
  %tobool = icmp ne i8 %2, 0, !dbg !11119
  br i1 %tobool, label %if.end, label %if.then, !dbg !11120

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !11121, !tbaa !2998
  store i8* %3, i8** %base, align 8, !dbg !11122, !tbaa !2998
  br label %if.end, !dbg !11123

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %base, align 8, !dbg !11124, !tbaa !2998
  %5 = load i8*, i8** %base, align 8, !dbg !11125, !tbaa !2998
  %call1 = call i64 @base_len(i8* %5) #14, !dbg !11126
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %call1, !dbg !11127
  store i8* %add.ptr, i8** %base_lim, align 8, !dbg !11128, !tbaa !2998
  %6 = load i8*, i8** %base_lim, align 8, !dbg !11129, !tbaa !2998
  %7 = load i8, i8* %6, align 1, !dbg !11130, !tbaa !3660, !ctir !10
  %conv = sext i8 %7 to i32, !dbg !11130
  %cmp = icmp ne i32 %conv, 0, !dbg !11131
  %frombool = zext i1 %cmp to i8, !dbg !11132
  store i8 %frombool, i8* %had_slash, align 1, !dbg !11132, !tbaa !3109
  %8 = load i8*, i8** %base_lim, align 8, !dbg !11133, !tbaa !2998
  store i8 0, i8* %8, align 1, !dbg !11134, !tbaa !3660, !ctir !10
  %9 = load i8, i8* %had_slash, align 1, !dbg !11135, !tbaa !3109
  %tobool3 = trunc i8 %9 to i1, !dbg !11135
  ret i1 %tobool3, !dbg !11136
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !11137 !ctir !1634 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11139, metadata !DIExpression()), !dbg !11140
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  store i64 %len, i64* %len.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !11143, metadata !DIExpression()), !dbg !11144
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11145, metadata !DIExpression()), !dbg !11146
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !11147, metadata !DIExpression()), !dbg !11149
  %0 = load i32, i32* %fd.addr, align 4, !dbg !11149, !tbaa !2985
  %1 = load i64, i64* %offset.addr, align 8, !dbg !11149, !tbaa !3851
  %2 = load i64, i64* %len.addr, align 8, !dbg !11149, !tbaa !3851
  %3 = load i32, i32* %advice.addr, align 4, !dbg !11149, !tbaa !3660
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #10, !dbg !11149
  store i32 %call, i32* %__x, align 4, !dbg !11149, !tbaa !2985
  %4 = load i32, i32* %__x, align 4, !dbg !11149, !tbaa !2985
  ret void, !dbg !11150
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !11151 !ctir !1637 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !11152, metadata !DIExpression()), !dbg !11153
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !11154, metadata !DIExpression()), !dbg !11155
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11156, !tbaa !2998
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !11156
  br i1 %tobool, label %if.then, label %if.end, !dbg !11158

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !11159, !tbaa !2998
  %call = call i32 @fileno(%struct._IO_FILE* %1) #10, !dbg !11160
  %2 = load i32, i32* %advice.addr, align 4, !dbg !11161, !tbaa !3660
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !11162
  br label %if.end, !dbg !11162

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11163
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !11164 !ctir !1676 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !160
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1678
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11168, metadata !DIExpression()), !dbg !11169
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11170, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !11172, metadata !DIExpression()), !dbg !11173
  store i32 0, i32* %mode, align 4, !dbg !11173, !tbaa !2985
  %0 = load i32, i32* %flags.addr, align 4, !dbg !11174, !tbaa !2985
  %and = and i32 %0, 64, !dbg !11176
  %tobool = icmp ne i32 %and, 0, !dbg !11176
  br i1 %tobool, label %if.then, label %if.end, !dbg !11177

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !11178, metadata !DIExpression()), !dbg !11180
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11181
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !11181
  call void @llvm.va_start(i8* %arraydecay1), !dbg !11181
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11182
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !11182
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !11182
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !11182
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !11182

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !11182
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !11182
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !11182
  %3 = bitcast i8* %2 to i32*, !dbg !11182
  %4 = add i32 %gp_offset, 8, !dbg !11182
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !11182
  br label %vaarg.end, !dbg !11182

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !11182
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !11182
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !11182
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !11182
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !11182
  br label %vaarg.end, !dbg !11182

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !11182
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !11182
  store i32 %6, i32* %mode, align 4, !dbg !11183, !tbaa !2985
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11184
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !11184
  call void @llvm.va_end(i8* %arraydecay34), !dbg !11184
  br label %if.end, !dbg !11185

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !11186, !tbaa !2998
  %8 = load i32, i32* %flags.addr, align 4, !dbg !11187, !tbaa !2985
  %9 = load i32, i32* %mode, align 4, !dbg !11188, !tbaa !2985
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !11189
  %call5 = call i32 @fd_safer(i32 %call), !dbg !11190
  ret i32 %call5, !dbg !11191
}

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !11192 !ctir !1690 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1715
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1715
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !11194, metadata !DIExpression()), !dbg !11195
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11196, metadata !DIExpression()), !dbg !11197
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !11198, metadata !DIExpression()), !dbg !11199
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !11200, metadata !DIExpression()), !dbg !11201
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11202, !tbaa !2998
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !11204
  br i1 %cmp, label %if.then, label %if.end, !dbg !11205

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !11206

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !11207
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !11207
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !11208, !tbaa !2998
  %2 = load i8*, i8** %file.addr, align 8, !dbg !11209, !tbaa !2998
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !11210
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11211, !tbaa !2998
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !11212, !ctir !1716
  store i8* %call1, i8** %name, align 8, !dbg !11213, !tbaa !11214, !ctir !9
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11216, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !11217, !ctir !1693
  %5 = load i64, i64* %st_ino, align 8, !dbg !11217, !tbaa !3873, !ctir !228
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11218, !tbaa !2998
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !11219, !ctir !1716
  store i64 %5, i64* %st_ino2, align 8, !dbg !11220, !tbaa !11221, !ctir !227
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11222, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !11223, !ctir !1693
  %8 = load i64, i64* %st_dev, align 8, !dbg !11223, !tbaa !3876, !ctir !231
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11224, !tbaa !2998
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !11225, !ctir !1716
  store i64 %8, i64* %st_dev3, align 8, !dbg !11226, !tbaa !11227, !ctir !230
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !11228, metadata !DIExpression()), !dbg !11230
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11231, !tbaa !2998
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11232, !tbaa !2998
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !11232
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !11233
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !11233
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !11230, !tbaa !2998
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !11234, !tbaa !2998
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !11236
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11237

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !11238
  unreachable, !dbg !11238

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !11240, !tbaa !2998
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11242, !tbaa !2998
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !11243
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11244

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11245, !tbaa !2998
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !11245
  call void @triple_free(i8* %18), !dbg !11247
  br label %if.end10, !dbg !11248

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !11249
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !11250 !ctir !1722 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1716
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !11251, metadata !DIExpression()), !dbg !11252
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11253, metadata !DIExpression()), !dbg !11254
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !11255, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !11257, metadata !DIExpression()), !dbg !11258
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11259, !tbaa !2998
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !11261
  br i1 %cmp, label %if.then, label %if.end, !dbg !11262

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11263
  br label %return, !dbg !11263

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !11264, !tbaa !2998
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !11265, !ctir !1716
  store i8* %1, i8** %name, align 8, !dbg !11266, !tbaa !11214, !ctir !9
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11267, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !11268, !ctir !1693
  %3 = load i64, i64* %st_ino, align 8, !dbg !11268, !tbaa !3873, !ctir !228
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !11269, !ctir !1716
  store i64 %3, i64* %st_ino1, align 8, !dbg !11270, !tbaa !11221, !ctir !227
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11271, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !11272, !ctir !1693
  %5 = load i64, i64* %st_dev, align 8, !dbg !11272, !tbaa !3876, !ctir !231
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !11273, !ctir !1716
  store i64 %5, i64* %st_dev2, align 8, !dbg !11274, !tbaa !11227, !ctir !230
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11275, !tbaa !2998
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !11276
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !11277
  %tobool = icmp ne i8* %call, null, !dbg !11278
  %lnot = xor i1 %tobool, true, !dbg !11278
  %lnot3 = xor i1 %lnot, true, !dbg !11279
  store i1 %lnot3, i1* %retval, align 1, !dbg !11280
  br label %return, !dbg !11280

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !11281
  ret i1 %8, !dbg !11281
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @file_type(%struct.stat* %st) #9 !dbg !11282 !ctir !1729 {
entry:
  %retval = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !11284, metadata !DIExpression()), !dbg !11285
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11286, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11286, !ctir !1732
  %1 = load i32, i32* %st_mode, align 8, !dbg !11286, !tbaa !3181, !ctir !133
  %and = and i32 %1, 61440, !dbg !11286
  %cmp = icmp eq i32 %and, 32768, !dbg !11286
  br i1 %cmp, label %if.then, label %if.end, !dbg !11288

if.then:                                          ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11289, !tbaa !2998
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 8, !dbg !11290, !ctir !1732
  %3 = load i64, i64* %st_size, align 8, !dbg !11290, !tbaa !4519, !ctir !29
  %cmp1 = icmp eq i64 %3, 0, !dbg !11291
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11289

cond.true:                                        ; preds = %if.then
  %call = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.245, i64 0, i64 0)) #10, !dbg !11292
  br label %cond.end, !dbg !11289

cond.false:                                       ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.246, i64 0, i64 0)) #10, !dbg !11293
  br label %cond.end, !dbg !11289

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !11289
  store i8* %cond, i8** %retval, align 8, !dbg !11294
  br label %return, !dbg !11294

if.end:                                           ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11295, !tbaa !2998
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !11295, !ctir !1732
  %5 = load i32, i32* %st_mode3, align 8, !dbg !11295, !tbaa !3181, !ctir !133
  %and4 = and i32 %5, 61440, !dbg !11295
  %cmp5 = icmp eq i32 %and4, 16384, !dbg !11295
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !11297

if.then6:                                         ; preds = %if.end
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.247, i64 0, i64 0)) #10, !dbg !11298
  store i8* %call7, i8** %retval, align 8, !dbg !11299
  br label %return, !dbg !11299

if.end8:                                          ; preds = %if.end
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11300, !tbaa !2998
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !11300, !ctir !1732
  %7 = load i32, i32* %st_mode9, align 8, !dbg !11300, !tbaa !3181, !ctir !133
  %and10 = and i32 %7, 61440, !dbg !11300
  %cmp11 = icmp eq i32 %and10, 40960, !dbg !11300
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !11302

if.then12:                                        ; preds = %if.end8
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.248, i64 0, i64 0)) #10, !dbg !11303
  store i8* %call13, i8** %retval, align 8, !dbg !11304
  br label %return, !dbg !11304

if.end14:                                         ; preds = %if.end8
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11305, !tbaa !2998
  %st_mode15 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11305, !ctir !1732
  %9 = load i32, i32* %st_mode15, align 8, !dbg !11305, !tbaa !3181, !ctir !133
  %10 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11305, !tbaa !2998
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11305, !ctir !1732
  %11 = load i32, i32* %st_mode16, align 8, !dbg !11305, !tbaa !3181, !ctir !133
  %sub = sub i32 %9, %11, !dbg !11305
  %tobool = icmp ne i32 %sub, 0, !dbg !11305
  br i1 %tobool, label %if.then17, label %if.end19, !dbg !11307

if.then17:                                        ; preds = %if.end14
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.249, i64 0, i64 0)) #10, !dbg !11308
  store i8* %call18, i8** %retval, align 8, !dbg !11309
  br label %return, !dbg !11309

if.end19:                                         ; preds = %if.end14
  %12 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11310, !tbaa !2998
  %st_mode20 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !11310, !ctir !1732
  %13 = load i32, i32* %st_mode20, align 8, !dbg !11310, !tbaa !3181, !ctir !133
  %14 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11310, !tbaa !2998
  %st_mode21 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !11310, !ctir !1732
  %15 = load i32, i32* %st_mode21, align 8, !dbg !11310, !tbaa !3181, !ctir !133
  %sub22 = sub i32 %13, %15, !dbg !11310
  %tobool23 = icmp ne i32 %sub22, 0, !dbg !11310
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !11312

if.then24:                                        ; preds = %if.end19
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.250, i64 0, i64 0)) #10, !dbg !11313
  store i8* %call25, i8** %retval, align 8, !dbg !11314
  br label %return, !dbg !11314

if.end26:                                         ; preds = %if.end19
  %16 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11315, !tbaa !2998
  %st_mode27 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !11315, !ctir !1732
  %17 = load i32, i32* %st_mode27, align 8, !dbg !11315, !tbaa !3181, !ctir !133
  %18 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11315, !tbaa !2998
  %st_mode28 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !11315, !ctir !1732
  %19 = load i32, i32* %st_mode28, align 8, !dbg !11315, !tbaa !3181, !ctir !133
  %sub29 = sub i32 %17, %19, !dbg !11315
  %tobool30 = icmp ne i32 %sub29, 0, !dbg !11315
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !11317

if.then31:                                        ; preds = %if.end26
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.251, i64 0, i64 0)) #10, !dbg !11318
  store i8* %call32, i8** %retval, align 8, !dbg !11319
  br label %return, !dbg !11319

if.end33:                                         ; preds = %if.end26
  %20 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11320, !tbaa !2998
  %st_mode34 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 3, !dbg !11320, !ctir !1732
  %21 = load i32, i32* %st_mode34, align 8, !dbg !11320, !tbaa !3181, !ctir !133
  %and35 = and i32 %21, 61440, !dbg !11320
  %cmp36 = icmp eq i32 %and35, 24576, !dbg !11320
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !11322

if.then37:                                        ; preds = %if.end33
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.252, i64 0, i64 0)) #10, !dbg !11323
  store i8* %call38, i8** %retval, align 8, !dbg !11324
  br label %return, !dbg !11324

if.end39:                                         ; preds = %if.end33
  %22 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11325, !tbaa !2998
  %st_mode40 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3, !dbg !11325, !ctir !1732
  %23 = load i32, i32* %st_mode40, align 8, !dbg !11325, !tbaa !3181, !ctir !133
  %and41 = and i32 %23, 61440, !dbg !11325
  %cmp42 = icmp eq i32 %and41, 8192, !dbg !11325
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !11327

if.then43:                                        ; preds = %if.end39
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.253, i64 0, i64 0)) #10, !dbg !11328
  store i8* %call44, i8** %retval, align 8, !dbg !11329
  br label %return, !dbg !11329

if.end45:                                         ; preds = %if.end39
  %24 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11330, !tbaa !2998
  %st_mode46 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 3, !dbg !11330, !ctir !1732
  %25 = load i32, i32* %st_mode46, align 8, !dbg !11330, !tbaa !3181, !ctir !133
  %and47 = and i32 %25, 61440, !dbg !11330
  %cmp48 = icmp eq i32 %and47, 4096, !dbg !11330
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !11332

if.then49:                                        ; preds = %if.end45
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.254, i64 0, i64 0)) #10, !dbg !11333
  store i8* %call50, i8** %retval, align 8, !dbg !11334
  br label %return, !dbg !11334

if.end51:                                         ; preds = %if.end45
  %26 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11335, !tbaa !2998
  %st_mode52 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !11335, !ctir !1732
  %27 = load i32, i32* %st_mode52, align 8, !dbg !11335, !tbaa !3181, !ctir !133
  %and53 = and i32 %27, 61440, !dbg !11335
  %cmp54 = icmp eq i32 %and53, 49152, !dbg !11335
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !11337

if.then55:                                        ; preds = %if.end51
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.255, i64 0, i64 0)) #10, !dbg !11338
  store i8* %call56, i8** %retval, align 8, !dbg !11339
  br label %return, !dbg !11339

if.end57:                                         ; preds = %if.end51
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.256, i64 0, i64 0)) #10, !dbg !11340
  store i8* %call58, i8** %retval, align 8, !dbg !11341
  br label %return, !dbg !11341

return:                                           ; preds = %if.end57, %if.then55, %if.then49, %if.then43, %if.then37, %if.then31, %if.then24, %if.then17, %if.then12, %if.then6, %cond.end
  %28 = load i8*, i8** %retval, align 8, !dbg !11342
  ret i8* %28, !dbg !11342
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !11343 !ctir !1757 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11345, metadata !DIExpression()), !dbg !11346
  store i8* %str, i8** %str.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11347, metadata !DIExpression()), !dbg !11348
  %0 = load i32, i32* %mode.addr, align 4, !dbg !11349, !tbaa !2985
  %call = call signext i8 @ftypelet(i32 %0), !dbg !11350
  %1 = load i8*, i8** %str.addr, align 8, !dbg !11351, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11351, !ctir !9
  store i8 %call, i8* %arrayidx, align 1, !dbg !11352, !tbaa !3660
  %2 = load i32, i32* %mode.addr, align 4, !dbg !11353, !tbaa !2985
  %and = and i32 %2, 256, !dbg !11354
  %tobool = icmp ne i32 %and, 0, !dbg !11353
  %3 = zext i1 %tobool to i64, !dbg !11353
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !11353
  %conv = trunc i32 %cond to i8, !dbg !11353
  %4 = load i8*, i8** %str.addr, align 8, !dbg !11355, !tbaa !2998
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !11355, !ctir !9
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !11356, !tbaa !3660
  %5 = load i32, i32* %mode.addr, align 4, !dbg !11357, !tbaa !2985
  %and2 = and i32 %5, 128, !dbg !11358
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11357
  %6 = zext i1 %tobool3 to i64, !dbg !11357
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !11357
  %conv5 = trunc i32 %cond4 to i8, !dbg !11357
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11359, !tbaa !2998
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !11359, !ctir !9
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !11360, !tbaa !3660
  %8 = load i32, i32* %mode.addr, align 4, !dbg !11361, !tbaa !2985
  %and7 = and i32 %8, 2048, !dbg !11362
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11362
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !11361

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !11363, !tbaa !2985
  %and9 = and i32 %9, 64, !dbg !11364
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11363
  %10 = zext i1 %tobool10 to i64, !dbg !11363
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !11363
  br label %cond.end, !dbg !11361

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !11365, !tbaa !2985
  %and12 = and i32 %11, 64, !dbg !11366
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11365
  %12 = zext i1 %tobool13 to i64, !dbg !11365
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !11365
  br label %cond.end, !dbg !11361

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !11361
  %conv16 = trunc i32 %cond15 to i8, !dbg !11367
  %13 = load i8*, i8** %str.addr, align 8, !dbg !11368, !tbaa !2998
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !11368, !ctir !9
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !11369, !tbaa !3660
  %14 = load i32, i32* %mode.addr, align 4, !dbg !11370, !tbaa !2985
  %and18 = and i32 %14, 32, !dbg !11371
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11370
  %15 = zext i1 %tobool19 to i64, !dbg !11370
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !11370
  %conv21 = trunc i32 %cond20 to i8, !dbg !11370
  %16 = load i8*, i8** %str.addr, align 8, !dbg !11372, !tbaa !2998
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !11372, !ctir !9
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !11373, !tbaa !3660
  %17 = load i32, i32* %mode.addr, align 4, !dbg !11374, !tbaa !2985
  %and23 = and i32 %17, 16, !dbg !11375
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11374
  %18 = zext i1 %tobool24 to i64, !dbg !11374
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !11374
  %conv26 = trunc i32 %cond25 to i8, !dbg !11374
  %19 = load i8*, i8** %str.addr, align 8, !dbg !11376, !tbaa !2998
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !11376, !ctir !9
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !11377, !tbaa !3660
  %20 = load i32, i32* %mode.addr, align 4, !dbg !11378, !tbaa !2985
  %and28 = and i32 %20, 1024, !dbg !11379
  %tobool29 = icmp ne i32 %and28, 0, !dbg !11379
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !11378

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !11380, !tbaa !2985
  %and31 = and i32 %21, 8, !dbg !11381
  %tobool32 = icmp ne i32 %and31, 0, !dbg !11380
  %22 = zext i1 %tobool32 to i64, !dbg !11380
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !11380
  br label %cond.end38, !dbg !11378

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !11382, !tbaa !2985
  %and35 = and i32 %23, 8, !dbg !11383
  %tobool36 = icmp ne i32 %and35, 0, !dbg !11382
  %24 = zext i1 %tobool36 to i64, !dbg !11382
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !11382
  br label %cond.end38, !dbg !11378

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !11378
  %conv40 = trunc i32 %cond39 to i8, !dbg !11384
  %25 = load i8*, i8** %str.addr, align 8, !dbg !11385, !tbaa !2998
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !11385, !ctir !9
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !11386, !tbaa !3660
  %26 = load i32, i32* %mode.addr, align 4, !dbg !11387, !tbaa !2985
  %and42 = and i32 %26, 4, !dbg !11388
  %tobool43 = icmp ne i32 %and42, 0, !dbg !11387
  %27 = zext i1 %tobool43 to i64, !dbg !11387
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !11387
  %conv45 = trunc i32 %cond44 to i8, !dbg !11387
  %28 = load i8*, i8** %str.addr, align 8, !dbg !11389, !tbaa !2998
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !11389, !ctir !9
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !11390, !tbaa !3660
  %29 = load i32, i32* %mode.addr, align 4, !dbg !11391, !tbaa !2985
  %and47 = and i32 %29, 2, !dbg !11392
  %tobool48 = icmp ne i32 %and47, 0, !dbg !11391
  %30 = zext i1 %tobool48 to i64, !dbg !11391
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !11391
  %conv50 = trunc i32 %cond49 to i8, !dbg !11391
  %31 = load i8*, i8** %str.addr, align 8, !dbg !11393, !tbaa !2998
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !11393, !ctir !9
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !11394, !tbaa !3660
  %32 = load i32, i32* %mode.addr, align 4, !dbg !11395, !tbaa !2985
  %and52 = and i32 %32, 512, !dbg !11396
  %tobool53 = icmp ne i32 %and52, 0, !dbg !11396
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !11395

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !11397, !tbaa !2985
  %and55 = and i32 %33, 1, !dbg !11398
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11397
  %34 = zext i1 %tobool56 to i64, !dbg !11397
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !11397
  br label %cond.end62, !dbg !11395

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !11399, !tbaa !2985
  %and59 = and i32 %35, 1, !dbg !11400
  %tobool60 = icmp ne i32 %and59, 0, !dbg !11399
  %36 = zext i1 %tobool60 to i64, !dbg !11399
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !11399
  br label %cond.end62, !dbg !11395

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !11395
  %conv64 = trunc i32 %cond63 to i8, !dbg !11401
  %37 = load i8*, i8** %str.addr, align 8, !dbg !11402, !tbaa !2998
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !11402, !ctir !9
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !11403, !tbaa !3660
  %38 = load i8*, i8** %str.addr, align 8, !dbg !11404, !tbaa !2998
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !11404, !ctir !9
  store i8 32, i8* %arrayidx66, align 1, !dbg !11405, !tbaa !3660
  %39 = load i8*, i8** %str.addr, align 8, !dbg !11406, !tbaa !2998
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !11406, !ctir !9
  store i8 0, i8* %arrayidx67, align 1, !dbg !11407, !tbaa !3660
  ret void, !dbg !11408
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !11409 !ctir !1784 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !11410, metadata !DIExpression()), !dbg !11411
  %0 = load i32, i32* %bits.addr, align 4, !dbg !11412, !tbaa !2985
  %and = and i32 %0, 61440, !dbg !11412
  %cmp = icmp eq i32 %and, 32768, !dbg !11412
  br i1 %cmp, label %if.then, label %if.end, !dbg !11414

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !11415
  br label %return, !dbg !11415

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !11416, !tbaa !2985
  %and1 = and i32 %1, 61440, !dbg !11416
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !11416
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11418

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !11419
  br label %return, !dbg !11419

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !11420, !tbaa !2985
  %and5 = and i32 %2, 61440, !dbg !11420
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !11420
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11422

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !11423
  br label %return, !dbg !11423

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !11424, !tbaa !2985
  %and9 = and i32 %3, 61440, !dbg !11424
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !11424
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11426

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !11427
  br label %return, !dbg !11427

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !11428, !tbaa !2985
  %and13 = and i32 %4, 61440, !dbg !11428
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !11428
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11430

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !11431
  br label %return, !dbg !11431

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !11432, !tbaa !2985
  %and17 = and i32 %5, 61440, !dbg !11432
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !11432
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11434

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !11435
  br label %return, !dbg !11435

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !11436, !tbaa !2985
  %and21 = and i32 %6, 61440, !dbg !11436
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !11436
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11438

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !11439
  br label %return, !dbg !11439

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !11440
  br label %return, !dbg !11440

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11441
  ret i8 %7, !dbg !11441
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !11442 !ctir !1759 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !11443, metadata !DIExpression()), !dbg !11444
  store i8* %str, i8** %str.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11445, metadata !DIExpression()), !dbg !11446
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11447, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11448, !ctir !1762
  %1 = load i32, i32* %st_mode, align 8, !dbg !11448, !tbaa !3181, !ctir !133
  %2 = load i8*, i8** %str.addr, align 8, !dbg !11449, !tbaa !2998
  call void @strmode(i32 %1, i8* %2), !dbg !11450
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11451, !tbaa !2998
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !11451, !ctir !1762
  %4 = load i32, i32* %st_mode1, align 8, !dbg !11451, !tbaa !3181, !ctir !133
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11451, !tbaa !2998
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !11451, !ctir !1762
  %6 = load i32, i32* %st_mode2, align 8, !dbg !11451, !tbaa !3181, !ctir !133
  %sub = sub i32 %4, %6, !dbg !11451
  %tobool = icmp ne i32 %sub, 0, !dbg !11451
  br i1 %tobool, label %if.then, label %if.else, !dbg !11453

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11454, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11454, !ctir !9
  store i8 70, i8* %arrayidx, align 1, !dbg !11455, !tbaa !3660
  br label %if.end18, !dbg !11454

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11456, !tbaa !2998
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11456, !ctir !1762
  %9 = load i32, i32* %st_mode3, align 8, !dbg !11456, !tbaa !3181, !ctir !133
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11456, !tbaa !2998
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11456, !ctir !1762
  %11 = load i32, i32* %st_mode4, align 8, !dbg !11456, !tbaa !3181, !ctir !133
  %sub5 = sub i32 %9, %11, !dbg !11456
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !11456
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !11459

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !11460, !tbaa !2998
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !11460, !ctir !9
  store i8 81, i8* %arrayidx8, align 1, !dbg !11461, !tbaa !3660
  br label %if.end17, !dbg !11460

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11462, !tbaa !2998
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !11462, !ctir !1762
  %14 = load i32, i32* %st_mode10, align 8, !dbg !11462, !tbaa !3181, !ctir !133
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11462, !tbaa !2998
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !11462, !ctir !1762
  %16 = load i32, i32* %st_mode11, align 8, !dbg !11462, !tbaa !3181, !ctir !133
  %sub12 = sub i32 %14, %16, !dbg !11462
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !11462
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !11464

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !11465, !tbaa !2998
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !11465, !ctir !9
  store i8 83, i8* %arrayidx15, align 1, !dbg !11466, !tbaa !3660
  br label %if.end, !dbg !11465

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !11467
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !11468 !ctir !1789 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11470, metadata !DIExpression()), !dbg !11471
  store i8* %base, i8** %base.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11472, metadata !DIExpression()), !dbg !11473
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11474, metadata !DIExpression()), !dbg !11475
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11476, metadata !DIExpression()), !dbg !11477
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11478, !tbaa !2998
  %1 = load i8*, i8** %base.addr, align 8, !dbg !11479, !tbaa !2998
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11480, !tbaa !2998
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !11481
  store i8* %call, i8** %p, align 8, !dbg !11477, !tbaa !2998
  %3 = load i8*, i8** %p, align 8, !dbg !11482, !tbaa !2998
  %cmp = icmp eq i8* %3, null, !dbg !11484
  br i1 %cmp, label %if.then, label %if.end, !dbg !11485

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !11486
  unreachable, !dbg !11486

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !11487, !tbaa !2998
  ret i8* %4, !dbg !11488
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !11489 !ctir !1789 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !115
  %dirbaselen = alloca i64, align 8, !ctir !55
  %dirlen = alloca i64, align 8, !ctir !55
  %baselen = alloca i64, align 8, !ctir !55
  %sep = alloca i8, align 1, !ctir !10
  %p_concat = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11491, metadata !DIExpression()), !dbg !11492
  store i8* %base, i8** %base.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11493, metadata !DIExpression()), !dbg !11494
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11495, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !11497, metadata !DIExpression()), !dbg !11498
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11499, !tbaa !2998
  %call = call i8* @last_component(i8* %0) #14, !dbg !11500
  store i8* %call, i8** %dirbase, align 8, !dbg !11498, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !11501, metadata !DIExpression()), !dbg !11502
  %1 = load i8*, i8** %dirbase, align 8, !dbg !11503, !tbaa !2998
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !11504
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !11502, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !11505, metadata !DIExpression()), !dbg !11506
  %2 = load i8*, i8** %dirbase, align 8, !dbg !11507, !tbaa !2998
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !11508, !tbaa !2998
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11509
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11509
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11509
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !11510, !tbaa !3851
  %add = add i64 %sub.ptr.sub, %4, !dbg !11511
  store i64 %add, i64* %dirlen, align 8, !dbg !11506, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !11512, metadata !DIExpression()), !dbg !11513
  %5 = load i8*, i8** %base.addr, align 8, !dbg !11514, !tbaa !2998
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !11515
  store i64 %call2, i64* %baselen, align 8, !dbg !11513, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !11516, metadata !DIExpression()), !dbg !11517
  store i8 0, i8* %sep, align 1, !dbg !11517, !tbaa !3660
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !11518, !tbaa !3851
  %tobool = icmp ne i64 %6, 0, !dbg !11518
  br i1 %tobool, label %if.then, label %if.else, !dbg !11520

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !11521, !tbaa !2998
  %8 = load i64, i64* %dirlen, align 8, !dbg !11521, !tbaa !3851
  %sub = sub i64 %8, 1, !dbg !11521
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !11521, !ctir !115
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11521, !tbaa !3660
  %conv = sext i8 %9 to i32, !dbg !11521
  %cmp = icmp eq i32 %conv, 47, !dbg !11521
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11524

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !11525, !tbaa !2998
  %11 = load i8, i8* %10, align 1, !dbg !11525, !tbaa !3660, !ctir !116
  %conv4 = sext i8 %11 to i32, !dbg !11525
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !11525
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !11526

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !11527, !tbaa !3660
  br label %if.end, !dbg !11528

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !11529

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !11530, !tbaa !2998
  %13 = load i8, i8* %12, align 1, !dbg !11530, !tbaa !3660, !ctir !116
  %conv8 = sext i8 %13 to i32, !dbg !11530
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !11530
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11532

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !11533, !tbaa !3660
  br label %if.end12, !dbg !11535

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !11536, metadata !DIExpression()), !dbg !11537
  %14 = load i64, i64* %dirlen, align 8, !dbg !11538, !tbaa !3851
  %15 = load i8, i8* %sep, align 1, !dbg !11539, !tbaa !3660
  %conv14 = sext i8 %15 to i32, !dbg !11539
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11540
  %conv16 = zext i1 %cmp15 to i32, !dbg !11540
  %conv17 = sext i32 %conv16 to i64, !dbg !11541
  %add18 = add i64 %14, %conv17, !dbg !11542
  %16 = load i64, i64* %baselen, align 8, !dbg !11543, !tbaa !3851
  %add19 = add i64 %add18, %16, !dbg !11544
  %add20 = add i64 %add19, 1, !dbg !11545
  %call21 = call noalias i8* @malloc(i64 %add20) #10, !dbg !11546
  store i8* %call21, i8** %p_concat, align 8, !dbg !11537, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11547, metadata !DIExpression()), !dbg !11548
  %17 = load i8*, i8** %p_concat, align 8, !dbg !11549, !tbaa !2998
  %cmp22 = icmp eq i8* %17, null, !dbg !11551
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11552

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !11553
  br label %return, !dbg !11553

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !11554, !tbaa !2998
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !11555, !tbaa !2998
  %20 = load i64, i64* %dirlen, align 8, !dbg !11556, !tbaa !3851
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #10, !dbg !11557
  store i8* %call26, i8** %p, align 8, !dbg !11558, !tbaa !2998
  %21 = load i8, i8* %sep, align 1, !dbg !11559, !tbaa !3660
  %22 = load i8*, i8** %p, align 8, !dbg !11560, !tbaa !2998
  store i8 %21, i8* %22, align 1, !dbg !11561, !tbaa !3660, !ctir !10
  %23 = load i8, i8* %sep, align 1, !dbg !11562, !tbaa !3660
  %conv27 = sext i8 %23 to i32, !dbg !11562
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !11563
  %conv29 = zext i1 %cmp28 to i32, !dbg !11563
  %24 = load i8*, i8** %p, align 8, !dbg !11564, !tbaa !2998
  %idx.ext = sext i32 %conv29 to i64, !dbg !11564
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !11564
  store i8* %add.ptr, i8** %p, align 8, !dbg !11564, !tbaa !2998
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11565, !tbaa !2998
  %tobool30 = icmp ne i8** %25, null, !dbg !11565
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11567

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !11568, !tbaa !2998
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11569, !tbaa !2998
  store i8* %26, i8** %27, align 8, !dbg !11570, !tbaa !2998, !ctir !9
  br label %if.end32, !dbg !11571

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !11572, !tbaa !2998
  %29 = load i8*, i8** %base.addr, align 8, !dbg !11573, !tbaa !2998
  %30 = load i64, i64* %baselen, align 8, !dbg !11574, !tbaa !3851
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #10, !dbg !11575
  store i8* %call33, i8** %p, align 8, !dbg !11576, !tbaa !2998
  %31 = load i8*, i8** %p, align 8, !dbg !11577, !tbaa !2998
  store i8 0, i8* %31, align 1, !dbg !11578, !tbaa !3660, !ctir !10
  %32 = load i8*, i8** %p_concat, align 8, !dbg !11579, !tbaa !2998
  store i8* %32, i8** %retval, align 8, !dbg !11580
  br label %return, !dbg !11580

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11581
  ret i8* %33, !dbg !11581
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11582 !ctir !1797 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !115
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11584, metadata !DIExpression()), !dbg !11585
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11586, metadata !DIExpression()), !dbg !11587
  store i64 %count, i64* %count.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11590, metadata !DIExpression()), !dbg !11591
  store i64 0, i64* %total, align 8, !dbg !11591, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11592, metadata !DIExpression()), !dbg !11593
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11594, !tbaa !2998
  store i8* %0, i8** %ptr, align 8, !dbg !11593, !tbaa !2998
  br label %while.cond, !dbg !11595

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11596, !tbaa !3851
  %cmp = icmp ugt i64 %1, 0, !dbg !11597
  br i1 %cmp, label %while.body, label %while.end, !dbg !11595

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11598, metadata !DIExpression()), !dbg !11600
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11601, !tbaa !2985
  %3 = load i8*, i8** %ptr, align 8, !dbg !11602, !tbaa !2998
  %4 = load i64, i64* %count.addr, align 8, !dbg !11603, !tbaa !3851
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !11604
  store i64 %call, i64* %n_rw, align 8, !dbg !11600, !tbaa !3851
  %5 = load i64, i64* %n_rw, align 8, !dbg !11605, !tbaa !3851
  %cmp1 = icmp eq i64 %5, -1, !dbg !11607
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11608

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11609

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11610, !tbaa !3851
  %cmp2 = icmp eq i64 %6, 0, !dbg !11612
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11613

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #15, !dbg !11614
  store i32 28, i32* %call4, align 4, !dbg !11616, !tbaa !2985, !ctir !7
  br label %while.end, !dbg !11617

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11618, !tbaa !3851
  %8 = load i64, i64* %total, align 8, !dbg !11619, !tbaa !3851
  %add = add i64 %8, %7, !dbg !11619
  store i64 %add, i64* %total, align 8, !dbg !11619, !tbaa !3851
  %9 = load i64, i64* %n_rw, align 8, !dbg !11620, !tbaa !3851
  %10 = load i8*, i8** %ptr, align 8, !dbg !11621, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11621
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11621, !tbaa !2998
  %11 = load i64, i64* %n_rw, align 8, !dbg !11622, !tbaa !3851
  %12 = load i64, i64* %count.addr, align 8, !dbg !11623, !tbaa !3851
  %sub = sub i64 %12, %11, !dbg !11623
  store i64 %sub, i64* %count.addr, align 8, !dbg !11623, !tbaa !3851
  br label %while.cond, !dbg !11595, !llvm.loop !11624

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11626, !tbaa !3851
  ret i64 %13, !dbg !11627
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11628 !ctir !752 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11629, metadata !DIExpression()), !dbg !11630
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11631, !tbaa !2998
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11632, !ctir !755
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11632, !tbaa !11633, !ctir !55
  ret i64 %1, !dbg !11635
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11636 !ctir !752 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11637, metadata !DIExpression()), !dbg !11638
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11639, !tbaa !2998
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11640, !ctir !755
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11640, !tbaa !11641, !ctir !55
  ret i64 %1, !dbg !11642
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11643 !ctir !752 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11644, metadata !DIExpression()), !dbg !11645
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11646, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11647, !ctir !755
  %1 = load i64, i64* %n_entries, align 8, !dbg !11647, !tbaa !11648, !ctir !55
  ret i64 %1, !dbg !11649
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11650 !ctir !752 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !767
  %max_bucket_length = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !767
  %bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11653, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11655, metadata !DIExpression()), !dbg !11656
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11656, !tbaa !3851
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11657, !tbaa !2998
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11659, !ctir !755
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11659, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11661, !tbaa !2998
  br label %for.cond, !dbg !11662

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11663, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11665, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11666, !ctir !755
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11666, !tbaa !11667, !ctir !767
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11668
  br i1 %cmp, label %for.body, label %for.end, !dbg !11669

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11670, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11673, !ctir !768
  %6 = load i8*, i8** %data, align 8, !dbg !11673, !tbaa !11674, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11670
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11676

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11677, metadata !DIExpression()), !dbg !11679
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11680, !tbaa !2998
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11679, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11681, metadata !DIExpression()), !dbg !11682
  store i64 1, i64* %bucket_length, align 8, !dbg !11682, !tbaa !3851
  br label %while.cond, !dbg !11683

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11684, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11685, !ctir !768
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11685, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11687, !tbaa !2998
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11688, !tbaa !2998
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11683
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11683

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11689, !tbaa !3851
  %inc = add i64 %11, 1, !dbg !11689
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11689, !tbaa !3851
  br label %while.cond, !dbg !11683, !llvm.loop !11690

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11691, !tbaa !3851
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11693, !tbaa !3851
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11694
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11695

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11696, !tbaa !3851
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11697, !tbaa !3851
  br label %if.end, !dbg !11698

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11699

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11700

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11701, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11701
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11701, !tbaa !2998
  br label %for.cond, !dbg !11702, !llvm.loop !11703

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11705, !tbaa !3851
  ret i64 %16, !dbg !11706
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11707 !ctir !794 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !767
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %n_entries = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !767
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11708, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11710, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11712, metadata !DIExpression()), !dbg !11713
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11713, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11714, metadata !DIExpression()), !dbg !11715
  store i64 0, i64* %n_entries, align 8, !dbg !11715, !tbaa !3851
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11716, !tbaa !2998
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11718, !ctir !755
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11718, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11719, !tbaa !2998
  br label %for.cond, !dbg !11720

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11721, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11723, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11724, !ctir !755
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11724, !tbaa !11667, !ctir !767
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11725
  br i1 %cmp, label %for.body, label %for.end, !dbg !11726

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11727, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11730, !ctir !768
  %6 = load i8*, i8** %data, align 8, !dbg !11730, !tbaa !11674, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11727
  br i1 %tobool, label %if.then, label %if.end, !dbg !11731

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11732, metadata !DIExpression()), !dbg !11734
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11735, !tbaa !2998
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11734, !tbaa !2998
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11736, !tbaa !3851
  %inc = add i64 %8, 1, !dbg !11736
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11736, !tbaa !3851
  %9 = load i64, i64* %n_entries, align 8, !dbg !11737, !tbaa !3851
  %inc2 = add i64 %9, 1, !dbg !11737
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11737, !tbaa !3851
  br label %while.cond, !dbg !11738

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11739, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11740, !ctir !768
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11740, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11741, !tbaa !2998
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11742, !tbaa !2998
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11738
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11738

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11743, !tbaa !3851
  %inc4 = add i64 %13, 1, !dbg !11743
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11743, !tbaa !3851
  br label %while.cond, !dbg !11738, !llvm.loop !11744

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11745

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11746

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11747, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11747
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11747, !tbaa !2998
  br label %for.cond, !dbg !11748, !llvm.loop !11749

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11751, !tbaa !3851
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11753, !tbaa !2998
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11754, !ctir !755
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11754, !tbaa !11641, !ctir !55
  %cmp6 = icmp eq i64 %15, %17, !dbg !11755
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11756

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11757, !tbaa !3851
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11758, !tbaa !2998
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11759, !ctir !755
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11759, !tbaa !11648, !ctir !55
  %cmp8 = icmp eq i64 %18, %20, !dbg !11760
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11761

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11762
  br label %return, !dbg !11762

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11763
  br label %return, !dbg !11763

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11764
  ret i1 %21, !dbg !11764
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11765 !ctir !796 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !55
  %n_buckets = alloca i64, align 8, !ctir !55
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %max_bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11766, metadata !DIExpression()), !dbg !11767
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11768, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11770, metadata !DIExpression()), !dbg !11771
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11772, !tbaa !2998
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11773
  store i64 %call, i64* %n_entries, align 8, !dbg !11771, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11774, metadata !DIExpression()), !dbg !11775
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11776, !tbaa !2998
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11777
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11775, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11778, metadata !DIExpression()), !dbg !11779
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11780, !tbaa !2998
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11781
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11779, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11782, metadata !DIExpression()), !dbg !11783
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11784, !tbaa !2998
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11785
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11783, !tbaa !3851
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11786, !tbaa !2998
  %5 = load i64, i64* %n_entries, align 8, !dbg !11787, !tbaa !3851
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.265, i64 0, i64 0), i64 %5), !dbg !11788
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11789, !tbaa !2998
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11790, !tbaa !3851
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.266, i64 0, i64 0), i64 %7), !dbg !11791
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11792, !tbaa !2998
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11793, !tbaa !3851
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11794, !tbaa !3851
  %conv = uitofp i64 %10 to double, !dbg !11794
  %mul = fmul double 1.000000e+02, %conv, !dbg !11795
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11796, !tbaa !3851
  %conv6 = uitofp i64 %11 to double, !dbg !11796
  %div = fdiv double %mul, %conv6, !dbg !11797
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.267, i64 0, i64 0), i64 %9, double %div), !dbg !11798
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11799, !tbaa !2998
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11800, !tbaa !3851
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.268, i64 0, i64 0), i64 %13), !dbg !11801
  ret void, !dbg !11802
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11803 !ctir !832 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !767
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !767
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11804, metadata !DIExpression()), !dbg !11805
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11806, metadata !DIExpression()), !dbg !11807
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11808, metadata !DIExpression()), !dbg !11809
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11810, !tbaa !2998
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11811, !tbaa !2998
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11812
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11809, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11813, metadata !DIExpression()), !dbg !11814
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11815, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11817, !ctir !768
  %3 = load i8*, i8** %data, align 8, !dbg !11817, !tbaa !11674, !ctir !53
  %cmp = icmp eq i8* %3, null, !dbg !11818
  br i1 %cmp, label %if.then, label %if.end, !dbg !11819

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11820
  br label %return, !dbg !11820

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11821, !tbaa !2998
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11823, !tbaa !2998
  br label %for.cond, !dbg !11824

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11825, !tbaa !2998
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11827
  br i1 %tobool, label %for.body, label %for.end, !dbg !11827

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11828, !tbaa !2998
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11830, !tbaa !2998
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11831, !ctir !768
  %8 = load i8*, i8** %data2, align 8, !dbg !11831, !tbaa !11674, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !11832
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11833

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11834, !tbaa !2998
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11835, !ctir !755
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11835, !tbaa !11836, !ctir !788
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11837, !tbaa !2998
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11838, !tbaa !2998
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11839, !ctir !768
  %13 = load i8*, i8** %data4, align 8, !dbg !11839, !tbaa !11674, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11834
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11840

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11841, !tbaa !2998
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11842, !ctir !768
  %15 = load i8*, i8** %data7, align 8, !dbg !11842, !tbaa !11674, !ctir !53
  store i8* %15, i8** %retval, align 8, !dbg !11843
  br label %return, !dbg !11843

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11844

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11845, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11846, !ctir !768
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11846, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11847, !tbaa !2998
  br label %for.cond, !dbg !11848, !llvm.loop !11849

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11851
  br label %return, !dbg !11851

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11852
  ret i8* %18, !dbg !11852
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11853 !ctir !862 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11854, metadata !DIExpression()), !dbg !11855
  store i8* %key, i8** %key.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11856, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11858, metadata !DIExpression()), !dbg !11859
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11860, !tbaa !2998
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11861, !ctir !755
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11861, !tbaa !11862, !ctir !785
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11863, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11864, !tbaa !2998
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11865, !ctir !755
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11865, !tbaa !11633, !ctir !55
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11860
  store i64 %call, i64* %n, align 8, !dbg !11859, !tbaa !3851
  %5 = load i64, i64* %n, align 8, !dbg !11866, !tbaa !3851
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11868, !tbaa !2998
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11869, !ctir !755
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11869, !tbaa !11633, !ctir !55
  %cmp = icmp ult i64 %5, %7, !dbg !11870
  br i1 %cmp, label %if.end, label %if.then, !dbg !11871

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11872
  unreachable, !dbg !11872

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11873, !tbaa !2998
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11874, !ctir !755
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11874, !tbaa !11660, !ctir !761
  %10 = load i64, i64* %n, align 8, !dbg !11875, !tbaa !3851
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11876
  ret %struct.hash_entry* %add.ptr, !dbg !11877
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11878 !ctir !834 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !767
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11879, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11881, metadata !DIExpression()), !dbg !11882
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11883, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11885, !ctir !755
  %1 = load i64, i64* %n_entries, align 8, !dbg !11885, !tbaa !11648, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !11886
  br i1 %cmp, label %if.then, label %if.end, !dbg !11887

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11888
  br label %return, !dbg !11888

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11889, !tbaa !2998
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11891, !ctir !755
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11891, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11892, !tbaa !2998
  br label %for.cond, !dbg !11893

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11894, !tbaa !2998
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11897, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11898, !ctir !755
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11898, !tbaa !11667, !ctir !767
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11899
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11900

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11901
  unreachable, !dbg !11901

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11902, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11904, !ctir !768
  %8 = load i8*, i8** %data, align 8, !dbg !11904, !tbaa !11674, !ctir !53
  %tobool = icmp ne i8* %8, null, !dbg !11902
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11905

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11906, !tbaa !2998
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11907, !ctir !768
  %10 = load i8*, i8** %data5, align 8, !dbg !11907, !tbaa !11674, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11908
  br label %return, !dbg !11908

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11909

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11910, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11910
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11910, !tbaa !2998
  br label %for.cond, !dbg !11911, !llvm.loop !11912

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11915
  ret i8* %12, !dbg !11915
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11916 !ctir !832 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !767
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !767
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11921, metadata !DIExpression()), !dbg !11922
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11923, !tbaa !2998
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11924, !tbaa !2998
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11925
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11922, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11926, metadata !DIExpression()), !dbg !11927
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11928, !tbaa !2998
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11929, !tbaa !2998
  br label %do.body, !dbg !11930

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11931, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11934, !ctir !768
  %4 = load i8*, i8** %data, align 8, !dbg !11934, !tbaa !11674, !ctir !53
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11935, !tbaa !2998
  %cmp = icmp eq i8* %4, %5, !dbg !11936
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11937

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11938, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11939, !ctir !768
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11939, !tbaa !11686, !ctir !761
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11938
  br i1 %tobool, label %if.then, label %if.end, !dbg !11940

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11941, !tbaa !2998
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11942, !ctir !768
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11942, !tbaa !11686, !ctir !761
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11943, !ctir !762
  %10 = load i8*, i8** %data3, align 8, !dbg !11943, !tbaa !11674, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11944
  br label %return, !dbg !11944

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11945, !tbaa !2998
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11946, !ctir !768
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11946, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11947, !tbaa !2998
  br label %do.cond, !dbg !11948

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11949, !tbaa !2998
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11950
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11948, !llvm.loop !11951

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11953

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11954, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11954
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11954, !tbaa !2998
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11955, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11956, !ctir !755
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11956, !tbaa !11667, !ctir !767
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11957
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11953

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11958, !tbaa !2998
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11960, !ctir !768
  %18 = load i8*, i8** %data7, align 8, !dbg !11960, !tbaa !11674, !ctir !53
  %tobool8 = icmp ne i8* %18, null, !dbg !11958
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11961

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11962, !tbaa !2998
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11963, !ctir !768
  %20 = load i8*, i8** %data10, align 8, !dbg !11963, !tbaa !11674, !ctir !53
  store i8* %20, i8** %retval, align 8, !dbg !11964
  br label %return, !dbg !11964

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11953, !llvm.loop !11965

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11967
  br label %return, !dbg !11967

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11968
  ret i8* %21, !dbg !11968
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11969 !ctir !836 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !767
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !767
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11970, metadata !DIExpression()), !dbg !11971
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11972, metadata !DIExpression()), !dbg !11973
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11976, metadata !DIExpression()), !dbg !11977
  store i64 0, i64* %counter, align 8, !dbg !11977, !tbaa !3851
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11978, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11980, metadata !DIExpression()), !dbg !11981
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11982, !tbaa !2998
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11984, !ctir !755
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11984, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11985, !tbaa !2998
  br label %for.cond, !dbg !11986

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11987, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11989, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11990, !ctir !755
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11990, !tbaa !11667, !ctir !767
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11991
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11992

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11993, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11996, !ctir !768
  %6 = load i8*, i8** %data, align 8, !dbg !11996, !tbaa !11674, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11993
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11997

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11998, !tbaa !2998
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12001, !tbaa !2998
  br label %for.cond2, !dbg !12002

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12003, !tbaa !2998
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12005
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12005

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !12006, !tbaa !3851
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !12009, !tbaa !3851
  %cmp5 = icmp uge i64 %9, %10, !dbg !12010
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !12011

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !12012, !tbaa !3851
  store i64 %11, i64* %retval, align 8, !dbg !12013
  br label %return, !dbg !12013

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12014, !tbaa !2998
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12015, !ctir !768
  %13 = load i8*, i8** %data7, align 8, !dbg !12015, !tbaa !11674, !ctir !53
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !12016, !tbaa !2998
  %15 = load i64, i64* %counter, align 8, !dbg !12017, !tbaa !3851
  %inc = add i64 %15, 1, !dbg !12017
  store i64 %inc, i64* %counter, align 8, !dbg !12017, !tbaa !3851
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !12016, !ctir !838
  store i8* %13, i8** %arrayidx, align 8, !dbg !12018, !tbaa !2998
  br label %for.inc, !dbg !12019

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12020, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !12021, !ctir !768
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12021, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !12022, !tbaa !2998
  br label %for.cond2, !dbg !12023, !llvm.loop !12024

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !12026

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !12027

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12028, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !12028
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12028, !tbaa !2998
  br label %for.cond, !dbg !12029, !llvm.loop !12030

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !12032, !tbaa !3851
  store i64 %19, i64* %retval, align 8, !dbg !12033
  br label %return, !dbg !12033

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !12034
  ret i64 %20, !dbg !12034
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !12035 !ctir !839 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !767
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !767
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12036, metadata !DIExpression()), !dbg !12037
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !12038, metadata !DIExpression()), !dbg !12039
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !12040, metadata !DIExpression()), !dbg !12041
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !12042, metadata !DIExpression()), !dbg !12043
  store i64 0, i64* %counter, align 8, !dbg !12043, !tbaa !3851
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12044, metadata !DIExpression()), !dbg !12045
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12046, metadata !DIExpression()), !dbg !12047
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12048, !tbaa !2998
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12050, !ctir !755
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12050, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12051, !tbaa !2998
  br label %for.cond, !dbg !12052

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12053, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12055, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12056, !ctir !755
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12056, !tbaa !11667, !ctir !767
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12057
  br i1 %cmp, label %for.body, label %for.end9, !dbg !12058

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12059, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12062, !ctir !768
  %6 = load i8*, i8** %data, align 8, !dbg !12062, !tbaa !11674, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12059
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12063

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12064, !tbaa !2998
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !12067, !tbaa !2998
  br label %for.cond2, !dbg !12068

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12069, !tbaa !2998
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !12071
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !12071

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !12072, !tbaa !2998
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12075, !tbaa !2998
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12076, !ctir !768
  %11 = load i8*, i8** %data5, align 8, !dbg !12076, !tbaa !11674, !ctir !53
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !12077, !tbaa !2998
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !12072
  br i1 %call, label %if.end, label %if.then6, !dbg !12078

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !12079, !tbaa !3851
  store i64 %13, i64* %retval, align 8, !dbg !12080
  br label %return, !dbg !12080

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !12081, !tbaa !3851
  %inc = add i64 %14, 1, !dbg !12081
  store i64 %inc, i64* %counter, align 8, !dbg !12081, !tbaa !3851
  br label %for.inc, !dbg !12082

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12083, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !12084, !ctir !768
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12084, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !12085, !tbaa !2998
  br label %for.cond2, !dbg !12086, !llvm.loop !12087

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !12089

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !12090

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12091, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !12091
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12091, !tbaa !2998
  br label %for.cond, !dbg !12092, !llvm.loop !12093

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !12095, !tbaa !3851
  store i64 %18, i64* %retval, align 8, !dbg !12096
  br label %return, !dbg !12096

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !12097
  ret i64 %19, !dbg !12097
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !12098 !ctir !845 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !55
  %ch = alloca i8, align 1, !ctir !468
  store i8* %string, i8** %string.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !12099, metadata !DIExpression()), !dbg !12100
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !12101, metadata !DIExpression()), !dbg !12102
  call void @llvm.dbg.declare(metadata i64* %value, metadata !12103, metadata !DIExpression()), !dbg !12104
  store i64 0, i64* %value, align 8, !dbg !12104, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !12105, metadata !DIExpression()), !dbg !12106
  br label %for.cond, !dbg !12107

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !12108, !tbaa !2998
  %1 = load i8, i8* %0, align 1, !dbg !12111, !tbaa !3660, !ctir !116
  store i8 %1, i8* %ch, align 1, !dbg !12112, !tbaa !3660
  %tobool = icmp ne i8 %1, 0, !dbg !12113
  br i1 %tobool, label %for.body, label %for.end, !dbg !12113

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !12114, !tbaa !3851
  %mul = mul i64 %2, 31, !dbg !12115
  %3 = load i8, i8* %ch, align 1, !dbg !12116, !tbaa !3660
  %conv = zext i8 %3 to i64, !dbg !12116
  %add = add i64 %mul, %conv, !dbg !12117
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !12118, !tbaa !3851
  %rem = urem i64 %add, %4, !dbg !12119
  store i64 %rem, i64* %value, align 8, !dbg !12120, !tbaa !3851
  br label %for.inc, !dbg !12121

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !12122, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !12122
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !12122, !tbaa !2998
  br label %for.cond, !dbg !12123, !llvm.loop !12124

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !12126, !tbaa !3851
  ret i64 %6, !dbg !12127
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !12128 !ctir !847 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12129, metadata !DIExpression()), !dbg !12130
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12131, !tbaa !2998
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !12132
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !12132, !tbaa.struct !12133
  ret void, !dbg !12136
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !12137 !ctir !850 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !852
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12138, metadata !DIExpression()), !dbg !12139
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12140, metadata !DIExpression()), !dbg !12141
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !12142, metadata !DIExpression()), !dbg !12143
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !12144, metadata !DIExpression()), !dbg !12145
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !12146, metadata !DIExpression()), !dbg !12147
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !12148, metadata !DIExpression()), !dbg !12149
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12150, !tbaa !2998
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !12152
  br i1 %cmp, label %if.then, label %if.end, !dbg !12153

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12154, !tbaa !2998
  br label %if.end, !dbg !12155

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12156, !tbaa !2998
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !12158
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12159

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12160, !tbaa !2998
  br label %if.end3, !dbg !12161

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #10, !dbg !12162
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12162
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12163, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12164, !tbaa !2998
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12166
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12167

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12168
  br label %return, !dbg !12168

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12169, !tbaa !2998
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12169
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12171

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12172, !tbaa !2998
  br label %if.end8, !dbg !12173

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12174, !tbaa !2998
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12175, !tbaa !2998
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12176, !ctir !756
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12177, !tbaa !12178, !ctir !773
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12179, !tbaa !2998
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12181
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12182

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12183

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12185, !tbaa !3851
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12186, !tbaa !2998
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !12187
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12188, !tbaa !2998
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12189, !ctir !756
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12190, !tbaa !11633, !ctir !55
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12191, !tbaa !2998
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12193, !ctir !756
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12193, !tbaa !11633, !ctir !55
  %tobool15 = icmp ne i64 %12, 0, !dbg !12191
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12194

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12195

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12196, !tbaa !2998
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12197, !ctir !756
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12197, !tbaa !11633, !ctir !55
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #10, !dbg !12198
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12198
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12199, !tbaa !2998
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12200, !ctir !756
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12201, !tbaa !11660, !ctir !761
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12202, !tbaa !2998
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12204, !ctir !756
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12204, !tbaa !11660, !ctir !761
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12205
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12206

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12207

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12208, !tbaa !2998
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12209, !ctir !756
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12209, !tbaa !11660, !ctir !761
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12210, !tbaa !2998
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12211, !ctir !756
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12211, !tbaa !11633, !ctir !55
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12212
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12213, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12214, !ctir !756
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12215, !tbaa !11667, !ctir !767
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12216, !tbaa !2998
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12217, !ctir !756
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12218, !tbaa !11641, !ctir !55
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12219, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12220, !ctir !756
  store i64 0, i64* %n_entries, align 8, !dbg !12221, !tbaa !11648, !ctir !55
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12222, !tbaa !2998
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12223, !tbaa !2998
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12224, !ctir !756
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12225, !tbaa !11862, !ctir !785
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12226, !tbaa !2998
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12227, !tbaa !2998
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12228, !ctir !756
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12229, !tbaa !11836, !ctir !788
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12230, !tbaa !2998
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12231, !tbaa !2998
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12232, !ctir !756
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12233, !tbaa !12234, !ctir !791
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12235, !tbaa !2998
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12236, !ctir !756
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12237, !tbaa !12238, !ctir !761
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12239, !tbaa !2998
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12240
  br label %return, !dbg !12240

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12241), !dbg !12242
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12243, !tbaa !2998
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12243
  call void @free(i8* %35) #10, !dbg !12244
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12245
  br label %return, !dbg !12245

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12246
  ret %struct.hash_table* %36, !dbg !12246
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !12247 !ctir !549 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !55
  store i8* %data, i8** %data.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12248, metadata !DIExpression()), !dbg !12249
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12252, metadata !DIExpression()), !dbg !12253
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12254, !tbaa !2998
  %1 = ptrtoint i8* %0 to i64, !dbg !12255
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12256
  store i64 %call, i64* %val, align 8, !dbg !12253, !tbaa !3851
  %2 = load i64, i64* %val, align 8, !dbg !12257, !tbaa !3851
  %3 = load i64, i64* %n.addr, align 8, !dbg !12258, !tbaa !3851
  %rem = urem i64 %2, %3, !dbg !12259
  ret i64 %rem, !dbg !12260
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !12261 !ctir !551 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12262, metadata !DIExpression()), !dbg !12263
  store i8* %b, i8** %b.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12264, metadata !DIExpression()), !dbg !12265
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12266, !tbaa !2998
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12267, !tbaa !2998
  %cmp = icmp eq i8* %0, %1, !dbg !12268
  ret i1 %cmp, !dbg !12269
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !12270 !ctir !864 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !773
  %epsilon = alloca float, align 4, !ctir !779
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12273, metadata !DIExpression()), !dbg !12274
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12275, !tbaa !2998
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12276, !ctir !756
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12276, !tbaa !12178, !ctir !773
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12274, !tbaa !2998
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12277, metadata !DIExpression()), !dbg !12278
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12279, !tbaa !2998
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12281
  br i1 %cmp, label %if.then, label %if.end, !dbg !12282

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12283
  br label %return, !dbg !12283

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12284, !tbaa !12134
  %3 = load float, float* %epsilon, align 4, !dbg !12285, !tbaa !12134
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12287, !tbaa !2998
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12288, !ctir !774
  %5 = load float, float* %growth_threshold, align 4, !dbg !12288, !tbaa !12289, !ctir !779
  %cmp2 = fcmp olt float %3, %5, !dbg !12291
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12292

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12293, !tbaa !2998
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12294, !ctir !774
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12294, !tbaa !12289, !ctir !779
  %8 = load float, float* %epsilon, align 4, !dbg !12295, !tbaa !12134
  %sub = fsub float 1.000000e+00, %8, !dbg !12296
  %cmp4 = fcmp olt float %7, %sub, !dbg !12297
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12298

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12299, !tbaa !12134
  %add = fadd float 1.000000e+00, %9, !dbg !12300
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12301, !tbaa !2998
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12302, !ctir !774
  %11 = load float, float* %growth_factor, align 4, !dbg !12302, !tbaa !12303, !ctir !779
  %cmp6 = fcmp olt float %add, %11, !dbg !12304
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12305

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12306, !tbaa !2998
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12307, !ctir !774
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12307, !tbaa !12308, !ctir !779
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12309
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12310

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12311, !tbaa !2998
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12312, !ctir !774
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12312, !tbaa !12308, !ctir !779
  %16 = load float, float* %epsilon, align 4, !dbg !12313, !tbaa !12134
  %add11 = fadd float %15, %16, !dbg !12314
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12315, !tbaa !2998
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12316, !ctir !774
  %18 = load float, float* %shrink_factor, align 4, !dbg !12316, !tbaa !12317, !ctir !779
  %cmp12 = fcmp olt float %add11, %18, !dbg !12318
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12319

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12320, !tbaa !2998
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12321, !ctir !774
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12321, !tbaa !12317, !ctir !779
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12322
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12323

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12324, !tbaa !2998
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12325, !ctir !774
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12325, !tbaa !12308, !ctir !779
  %23 = load float, float* %epsilon, align 4, !dbg !12326, !tbaa !12134
  %add18 = fadd float %22, %23, !dbg !12327
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12328, !tbaa !2998
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12329, !ctir !774
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12329, !tbaa !12289, !ctir !779
  %cmp20 = fcmp olt float %add18, %25, !dbg !12330
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12331

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12332
  br label %return, !dbg !12332

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12333, !tbaa !2998
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12334, !ctir !756
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12335, !tbaa !12178, !ctir !773
  store i1 false, i1* %retval, align 1, !dbg !12336
  br label %return, !dbg !12336

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12337
  ret i1 %27, !dbg !12337
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12338 !ctir !866 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !779
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12339, metadata !DIExpression()), !dbg !12340
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12341, metadata !DIExpression()), !dbg !12342
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12343, !tbaa !2998
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12345, !ctir !774
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12345, !tbaa !12346
  %tobool = trunc i8 %1 to i1, !dbg !12345, !ctir !120
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12347

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12348, metadata !DIExpression()), !dbg !12350
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12351, !tbaa !3851
  %conv = uitofp i64 %2 to float, !dbg !12351
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12352, !tbaa !2998
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12353, !ctir !774
  %4 = load float, float* %growth_threshold, align 4, !dbg !12353, !tbaa !12289, !ctir !779
  %div = fdiv float %conv, %4, !dbg !12354
  store float %div, float* %new_candidate, align 4, !dbg !12350, !tbaa !12134
  %5 = load float, float* %new_candidate, align 4, !dbg !12355, !tbaa !12134
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12357
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12358

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12359
  br label %return, !dbg !12359

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12360, !tbaa !12134
  %conv3 = fptoui float %6 to i64, !dbg !12360
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12361, !tbaa !3851
  br label %if.end4, !dbg !12362

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12363, !tbaa !3851
  %call = call i64 @next_prime(i64 %7) #15, !dbg !12364
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12365, !tbaa !3851
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12366, !tbaa !3851
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12366
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12368

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12369
  br label %return, !dbg !12369

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12370, !tbaa !3851
  store i64 %9, i64* %retval, align 8, !dbg !12371
  br label %return, !dbg !12371

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12372
  ret i64 %10, !dbg !12372
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !12373 !ctir !868 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12374, metadata !DIExpression()), !dbg !12375
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12376, !tbaa !3851
  %cmp = icmp ult i64 %0, 10, !dbg !12378
  br i1 %cmp, label %if.then, label %if.end, !dbg !12379

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12380, !tbaa !3851
  br label %if.end, !dbg !12381

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12382, !tbaa !3851
  %or = or i64 %1, 1, !dbg !12382
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12382, !tbaa !3851
  br label %while.cond, !dbg !12383

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12384, !tbaa !3851
  %cmp1 = icmp ne i64 -1, %2, !dbg !12385
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12386

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12387, !tbaa !3851
  %call = call zeroext i1 @is_prime(i64 %3) #15, !dbg !12388
  %lnot = xor i1 %call, true, !dbg !12389
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12390
  br i1 %4, label %while.body, label %while.end, !dbg !12383

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12391, !tbaa !3851
  %add = add i64 %5, 2, !dbg !12391
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12391, !tbaa !3851
  br label %while.cond, !dbg !12383, !llvm.loop !12392

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12394, !tbaa !3851
  ret i64 %6, !dbg !12395
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !12396 !ctir !870 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !55
  %square = alloca i64, align 8, !ctir !55
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12397, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12399, metadata !DIExpression()), !dbg !12400
  store i64 3, i64* %divisor, align 8, !dbg !12400, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12401, metadata !DIExpression()), !dbg !12402
  %0 = load i64, i64* %divisor, align 8, !dbg !12403, !tbaa !3851
  %1 = load i64, i64* %divisor, align 8, !dbg !12404, !tbaa !3851
  %mul = mul i64 %0, %1, !dbg !12405
  store i64 %mul, i64* %square, align 8, !dbg !12402, !tbaa !3851
  br label %while.cond, !dbg !12406

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12407, !tbaa !3851
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12408, !tbaa !3851
  %cmp = icmp ult i64 %2, %3, !dbg !12409
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12410

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12411, !tbaa !3851
  %5 = load i64, i64* %divisor, align 8, !dbg !12412, !tbaa !3851
  %rem = urem i64 %4, %5, !dbg !12413
  %tobool = icmp ne i64 %rem, 0, !dbg !12410
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12414
  br i1 %6, label %while.body, label %while.end, !dbg !12406

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12415, !tbaa !3851
  %inc = add i64 %7, 1, !dbg !12415
  store i64 %inc, i64* %divisor, align 8, !dbg !12415, !tbaa !3851
  %8 = load i64, i64* %divisor, align 8, !dbg !12417, !tbaa !3851
  %mul1 = mul i64 4, %8, !dbg !12418
  %9 = load i64, i64* %square, align 8, !dbg !12419, !tbaa !3851
  %add = add i64 %9, %mul1, !dbg !12419
  store i64 %add, i64* %square, align 8, !dbg !12419, !tbaa !3851
  %10 = load i64, i64* %divisor, align 8, !dbg !12420, !tbaa !3851
  %inc2 = add i64 %10, 1, !dbg !12420
  store i64 %inc2, i64* %divisor, align 8, !dbg !12420, !tbaa !3851
  br label %while.cond, !dbg !12406, !llvm.loop !12421

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12423, !tbaa !3851
  %12 = load i64, i64* %divisor, align 8, !dbg !12424, !tbaa !3851
  %rem3 = urem i64 %11, %12, !dbg !12425
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12423
  %13 = zext i1 %tobool4 to i64, !dbg !12423
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12423
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12426
  ret i1 %tobool5, !dbg !12427
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !12428 !ctir !853 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !761
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !761
  %next = alloca %struct.hash_entry*, align 8, !ctir !761
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12429, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12431, metadata !DIExpression()), !dbg !12432
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12433, !tbaa !2998
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12435, !ctir !756
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12435, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12436, !tbaa !2998
  br label %for.cond, !dbg !12437

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12438, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12440, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12441, !ctir !756
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12441, !tbaa !11667, !ctir !767
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12442
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12443

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12444, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12447, !ctir !762
  %6 = load i8*, i8** %data, align 8, !dbg !12447, !tbaa !11674, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12444
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12448

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12449, metadata !DIExpression()), !dbg !12451
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12452, metadata !DIExpression()), !dbg !12453
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12454, !tbaa !2998
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12456, !ctir !762
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12456, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12457, !tbaa !2998
  br label %for.cond3, !dbg !12458

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12459, !tbaa !2998
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12461
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12461

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12462, !tbaa !2998
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12465, !ctir !756
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12465, !tbaa !12234, !ctir !791
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12462
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12466

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12467, !tbaa !2998
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12468, !ctir !756
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12468, !tbaa !12234, !ctir !791
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12469, !tbaa !2998
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12470, !ctir !762
  %15 = load i8*, i8** %data9, align 8, !dbg !12470, !tbaa !11674, !ctir !53
  call void %13(i8* %15), !dbg !12467
  br label %if.end, !dbg !12467

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12471, !tbaa !2998
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12472, !ctir !762
  store i8* null, i8** %data10, align 8, !dbg !12473, !tbaa !11674, !ctir !53
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12474, !tbaa !2998
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12475, !ctir !762
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12475, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12476, !tbaa !2998
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12477, !tbaa !2998
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12478, !ctir !756
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12478, !tbaa !12238, !ctir !761
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12479, !tbaa !2998
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12480, !ctir !762
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12481, !tbaa !11686, !ctir !761
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12482, !tbaa !2998
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12483, !tbaa !2998
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12484, !ctir !756
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12485, !tbaa !12238, !ctir !761
  br label %for.inc, !dbg !12486

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12487, !tbaa !2998
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12488, !tbaa !2998
  br label %for.cond3, !dbg !12489, !llvm.loop !12490

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12492, !tbaa !2998
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12494, !ctir !756
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12494, !tbaa !12234, !ctir !791
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12492
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12495

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12496, !tbaa !2998
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12497, !ctir !756
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12497, !tbaa !12234, !ctir !791
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12498, !tbaa !2998
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12499, !ctir !762
  %30 = load i8*, i8** %data18, align 8, !dbg !12499, !tbaa !11674, !ctir !53
  call void %28(i8* %30), !dbg !12496
  br label %if.end19, !dbg !12496

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12500, !tbaa !2998
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12501, !ctir !762
  store i8* null, i8** %data20, align 8, !dbg !12502, !tbaa !11674, !ctir !53
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12503, !tbaa !2998
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12504, !ctir !762
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12505, !tbaa !11686, !ctir !761
  br label %if.end22, !dbg !12506

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12507

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12508, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12508
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12508, !tbaa !2998
  br label %for.cond, !dbg !12509, !llvm.loop !12510

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12512, !tbaa !2998
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12513, !ctir !756
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12514, !tbaa !11641, !ctir !55
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12515, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12516, !ctir !756
  store i64 0, i64* %n_entries, align 8, !dbg !12517, !tbaa !11648, !ctir !55
  ret void, !dbg !12518
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !12519 !ctir !853 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !761
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !761
  %next = alloca %struct.hash_entry*, align 8, !ctir !761
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12520, metadata !DIExpression()), !dbg !12521
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12522, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12524, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12526, metadata !DIExpression()), !dbg !12527
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12528, !tbaa !2998
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12530, !ctir !756
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12530, !tbaa !12234, !ctir !791
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12528
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12531

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12532, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12533, !ctir !756
  %3 = load i64, i64* %n_entries, align 8, !dbg !12533, !tbaa !11648, !ctir !55
  %tobool1 = icmp ne i64 %3, 0, !dbg !12532
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12534

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12535, !tbaa !2998
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12538, !ctir !756
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12538, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12539, !tbaa !2998
  br label %for.cond, !dbg !12540

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12541, !tbaa !2998
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12543, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12544, !ctir !756
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12544, !tbaa !11667, !ctir !767
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12545
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12546

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12547, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12550, !ctir !762
  %10 = load i8*, i8** %data, align 8, !dbg !12550, !tbaa !11674, !ctir !53
  %tobool3 = icmp ne i8* %10, null, !dbg !12547
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12551

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12552, !tbaa !2998
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12555, !tbaa !2998
  br label %for.cond5, !dbg !12556

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12557, !tbaa !2998
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12559
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12559

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12560, !tbaa !2998
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12561, !ctir !756
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12561, !tbaa !12234, !ctir !791
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12562, !tbaa !2998
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12563, !ctir !762
  %16 = load i8*, i8** %data9, align 8, !dbg !12563, !tbaa !11674, !ctir !53
  call void %14(i8* %16), !dbg !12560
  br label %for.inc, !dbg !12560

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12564, !tbaa !2998
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12565, !ctir !762
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12565, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12566, !tbaa !2998
  br label %for.cond5, !dbg !12567, !llvm.loop !12568

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12570

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12571

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12572, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12572
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12572, !tbaa !2998
  br label %for.cond, !dbg !12573, !llvm.loop !12574

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12576

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12577, !tbaa !2998
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12579, !ctir !756
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12579, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12580, !tbaa !2998
  br label %for.cond15, !dbg !12581

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12582, !tbaa !2998
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12584, !tbaa !2998
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12585, !ctir !756
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12585, !tbaa !11667, !ctir !767
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12586
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12587

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12588, !tbaa !2998
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12591, !ctir !762
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12591, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12592, !tbaa !2998
  br label %for.cond20, !dbg !12593

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12594, !tbaa !2998
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12596
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12596

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12597, !tbaa !2998
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12599, !ctir !762
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12599, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12600, !tbaa !2998
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12601, !tbaa !2998
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12601
  call void @free(i8* %31) #10, !dbg !12602
  br label %for.inc24, !dbg !12603

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12604, !tbaa !2998
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12605, !tbaa !2998
  br label %for.cond20, !dbg !12606, !llvm.loop !12607

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12609

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12610, !tbaa !2998
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12610
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12610, !tbaa !2998
  br label %for.cond15, !dbg !12611, !llvm.loop !12612

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12614, !tbaa !2998
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12616, !ctir !756
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12616, !tbaa !12238, !ctir !761
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12617, !tbaa !2998
  br label %for.cond29, !dbg !12618

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12619, !tbaa !2998
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12621
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12621

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12622, !tbaa !2998
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12624, !ctir !762
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12624, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12625, !tbaa !2998
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12626, !tbaa !2998
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12626
  call void @free(i8* %40) #10, !dbg !12627
  br label %for.inc33, !dbg !12628

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12629, !tbaa !2998
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12630, !tbaa !2998
  br label %for.cond29, !dbg !12631, !llvm.loop !12632

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12634, !tbaa !2998
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12635, !ctir !756
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12635, !tbaa !11660, !ctir !761
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12634
  call void @free(i8* %44) #10, !dbg !12636
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12637, !tbaa !2998
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12637
  call void @free(i8* %46) #10, !dbg !12638
  ret void, !dbg !12639
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12640 !ctir !855 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !756
  %new_table = alloca %struct.hash_table*, align 8, !ctir !852
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12641, metadata !DIExpression()), !dbg !12642
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12643, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12645, metadata !DIExpression()), !dbg !12646
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12647, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12649, metadata !DIExpression()), !dbg !12650
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12651, !tbaa !3851
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12652, !tbaa !2998
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12653, !ctir !756
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12653, !tbaa !12178, !ctir !773
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12654
  store i64 %call, i64* %new_size, align 8, !dbg !12650, !tbaa !3851
  %3 = load i64, i64* %new_size, align 8, !dbg !12655, !tbaa !3851
  %tobool = icmp ne i64 %3, 0, !dbg !12655
  br i1 %tobool, label %if.end, label %if.then, !dbg !12657

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12658
  br label %return, !dbg !12658

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12659, !tbaa !3851
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12661, !tbaa !2998
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12662, !ctir !756
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12662, !tbaa !11633, !ctir !55
  %cmp = icmp eq i64 %4, %6, !dbg !12663
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12664

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12665
  br label %return, !dbg !12665

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12666, !tbaa !2998
  %7 = load i64, i64* %new_size, align 8, !dbg !12667, !tbaa !3851
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #10, !dbg !12668
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12668
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12669, !tbaa !2998
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12670, !ctir !756
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12671, !tbaa !11660, !ctir !761
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12672, !tbaa !2998
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12674, !ctir !756
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12674, !tbaa !11660, !ctir !761
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12675
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12676

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12677
  br label %return, !dbg !12677

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12678, !tbaa !3851
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12679, !tbaa !2998
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12680, !ctir !756
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12681, !tbaa !11633, !ctir !55
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12682, !tbaa !2998
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12683, !ctir !756
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12683, !tbaa !11660, !ctir !761
  %16 = load i64, i64* %new_size, align 8, !dbg !12684, !tbaa !3851
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12685
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12686, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12687, !ctir !756
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12688, !tbaa !11667, !ctir !767
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12689, !tbaa !2998
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12690, !ctir !756
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12691, !tbaa !11641, !ctir !55
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12692, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12693, !ctir !756
  store i64 0, i64* %n_entries, align 8, !dbg !12694, !tbaa !11648, !ctir !55
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12695, !tbaa !2998
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12696, !ctir !756
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12696, !tbaa !12178, !ctir !773
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12697, !tbaa !2998
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12698, !ctir !756
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12699, !tbaa !12178, !ctir !773
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12700, !tbaa !2998
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12701, !ctir !756
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12701, !tbaa !11862, !ctir !785
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12702, !tbaa !2998
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12703, !ctir !756
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12704, !tbaa !11862, !ctir !785
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12705, !tbaa !2998
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12706, !ctir !756
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12706, !tbaa !11836, !ctir !788
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12707, !tbaa !2998
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12708, !ctir !756
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12709, !tbaa !11836, !ctir !788
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12710, !tbaa !2998
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12711, !ctir !756
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12711, !tbaa !12234, !ctir !791
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12712, !tbaa !2998
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12713, !ctir !756
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12714, !tbaa !12234, !ctir !791
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12715, !tbaa !2998
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12716, !ctir !756
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12716, !tbaa !12238, !ctir !761
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12717, !tbaa !2998
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12718, !ctir !756
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12719, !tbaa !12238, !ctir !761
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12720, !tbaa !2998
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12722, !tbaa !2998
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12723
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12724

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12725, !tbaa !2998
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12727, !ctir !756
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12727, !tbaa !11660, !ctir !761
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12725
  call void @free(i8* %39) #10, !dbg !12728
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12729, !tbaa !2998
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12730, !ctir !756
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12730, !tbaa !11660, !ctir !761
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12731, !tbaa !2998
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12732, !ctir !756
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12733, !tbaa !11660, !ctir !761
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12734, !tbaa !2998
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12735, !ctir !756
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12735, !tbaa !11667, !ctir !767
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12736, !tbaa !2998
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12737, !ctir !756
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12738, !tbaa !11667, !ctir !767
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12739, !tbaa !2998
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12740, !ctir !756
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12740, !tbaa !11633, !ctir !55
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12741, !tbaa !2998
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12742, !ctir !756
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12743, !tbaa !11633, !ctir !55
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12744, !tbaa !2998
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12745, !ctir !756
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12745, !tbaa !11641, !ctir !55
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12746, !tbaa !2998
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12747, !ctir !756
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12748, !tbaa !11641, !ctir !55
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12749, !tbaa !2998
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12750, !ctir !756
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12750, !tbaa !12238, !ctir !761
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12751, !tbaa !2998
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12752, !ctir !756
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12753, !tbaa !12238, !ctir !761
  store i1 true, i1* %retval, align 1, !dbg !12754
  br label %return, !dbg !12754

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12755, !tbaa !2998
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12756, !ctir !756
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12756, !tbaa !12238, !ctir !761
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12757, !tbaa !2998
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12758, !ctir !756
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12759, !tbaa !12238, !ctir !761
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12760, !tbaa !2998
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12762, !tbaa !2998
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12763
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12764

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12765, !tbaa !2998
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12766, !tbaa !2998
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12767
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12768

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12769
  unreachable, !dbg !12769

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12770, !tbaa !2998
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12771, !ctir !756
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12771, !tbaa !11660, !ctir !761
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12770
  call void @free(i8* %64) #10, !dbg !12772
  store i1 false, i1* %retval, align 1, !dbg !12773
  br label %return, !dbg !12773

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12774
  ret i1 %65, !dbg !12774
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12775 !ctir !872 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !761
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !761
  %next = alloca %struct.hash_entry*, align 8, !ctir !761
  %data2 = alloca i8*, align 8, !ctir !53
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !761
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !761
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12776, metadata !DIExpression()), !dbg !12777
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12778, metadata !DIExpression()), !dbg !12779
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12780, metadata !DIExpression()), !dbg !12781
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12784, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12786, metadata !DIExpression()), !dbg !12787
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12788, !tbaa !2998
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12790, !ctir !756
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12790, !tbaa !11660, !ctir !761
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12791, !tbaa !2998
  br label %for.cond, !dbg !12792

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12793, !tbaa !2998
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12795, !tbaa !2998
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12796, !ctir !756
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12796, !tbaa !11667, !ctir !767
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12797
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12798

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12799, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12801, !ctir !762
  %6 = load i8*, i8** %data, align 8, !dbg !12801, !tbaa !11674, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12799
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12802

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12803, metadata !DIExpression()), !dbg !12805
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12806, metadata !DIExpression()), !dbg !12807
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12808, !tbaa !2998
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12810, !ctir !762
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12810, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12811, !tbaa !2998
  br label %for.cond4, !dbg !12812

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12813, !tbaa !2998
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12815
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12815

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12816, !tbaa !2998
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12818, !ctir !762
  %11 = load i8*, i8** %data7, align 8, !dbg !12818, !tbaa !11674, !ctir !53
  store i8* %11, i8** %data2, align 8, !dbg !12819, !tbaa !2998
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12820, !tbaa !2998
  %13 = load i8*, i8** %data2, align 8, !dbg !12821, !tbaa !2998
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12822
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12823, !tbaa !2998
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12824, !tbaa !2998
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12825, !ctir !762
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12825, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12826, !tbaa !2998
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12827, !tbaa !2998
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12829, !ctir !762
  %17 = load i8*, i8** %data9, align 8, !dbg !12829, !tbaa !11674, !ctir !53
  %tobool10 = icmp ne i8* %17, null, !dbg !12827
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12830

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12831, !tbaa !2998
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12833, !ctir !762
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12833, !tbaa !11686, !ctir !761
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12834, !tbaa !2998
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12835, !ctir !762
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12836, !tbaa !11686, !ctir !761
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12837, !tbaa !2998
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12838, !tbaa !2998
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12839, !ctir !762
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12840, !tbaa !11686, !ctir !761
  br label %if.end, !dbg !12841

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12842, !tbaa !2998
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12844, !tbaa !2998
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12845, !ctir !762
  store i8* %23, i8** %data15, align 8, !dbg !12846, !tbaa !11674, !ctir !53
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12847, !tbaa !2998
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12848, !ctir !756
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12849, !tbaa !11641, !ctir !55
  %inc = add i64 %26, 1, !dbg !12849
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12849, !tbaa !11641, !ctir !55
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12850, !tbaa !2998
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12851, !tbaa !2998
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12852
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12853

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12854, !tbaa !2998
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12855, !tbaa !2998
  br label %for.cond4, !dbg !12856, !llvm.loop !12857

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12859, !tbaa !2998
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12860, !ctir !762
  %31 = load i8*, i8** %data16, align 8, !dbg !12860, !tbaa !11674, !ctir !53
  store i8* %31, i8** %data2, align 8, !dbg !12861, !tbaa !2998
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12862, !tbaa !2998
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12863, !ctir !762
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12864, !tbaa !11686, !ctir !761
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12865, !tbaa !3109
  %tobool18 = trunc i8 %33 to i1, !dbg !12865
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12867

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12868

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12869, !tbaa !2998
  %35 = load i8*, i8** %data2, align 8, !dbg !12870, !tbaa !2998
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12871
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12872, !tbaa !2998
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12873, !tbaa !2998
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12875, !ctir !762
  %37 = load i8*, i8** %data22, align 8, !dbg !12875, !tbaa !11674, !ctir !53
  %tobool23 = icmp ne i8* %37, null, !dbg !12873
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12876

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12877, metadata !DIExpression()), !dbg !12879
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12880, !tbaa !2998
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12881
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12879, !tbaa !2998
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12882, !tbaa !2998
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12884
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12885

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12886
  br label %return, !dbg !12886

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12887, !tbaa !2998
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12888, !tbaa !2998
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12889, !ctir !762
  store i8* %40, i8** %data29, align 8, !dbg !12890, !tbaa !11674, !ctir !53
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12891, !tbaa !2998
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12892, !ctir !762
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12892, !tbaa !11686, !ctir !761
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12893, !tbaa !2998
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12894, !ctir !762
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12895, !tbaa !11686, !ctir !761
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12896, !tbaa !2998
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12897, !tbaa !2998
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12898, !ctir !762
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12899, !tbaa !11686, !ctir !761
  br label %if.end37, !dbg !12900

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12901, !tbaa !2998
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12903, !tbaa !2998
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12904, !ctir !762
  store i8* %47, i8** %data34, align 8, !dbg !12905, !tbaa !11674, !ctir !53
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12906, !tbaa !2998
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12907, !ctir !756
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12908, !tbaa !11641, !ctir !55
  %inc36 = add i64 %50, 1, !dbg !12908
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12908, !tbaa !11641, !ctir !55
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12909, !tbaa !2998
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12910, !ctir !762
  store i8* null, i8** %data38, align 8, !dbg !12911, !tbaa !11674, !ctir !53
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12912, !tbaa !2998
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12913, !ctir !756
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12914, !tbaa !11641, !ctir !55
  %dec = add i64 %53, -1, !dbg !12914
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12914, !tbaa !11641, !ctir !55
  br label %if.end40, !dbg !12915

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12801

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12916, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12916
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12916, !tbaa !2998
  br label %for.cond, !dbg !12917, !llvm.loop !12918

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12920
  br label %return, !dbg !12920

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12921
  ret i1 %55, !dbg !12921
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12922 !ctir !874 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12923, metadata !DIExpression()), !dbg !12924
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12925, metadata !DIExpression()), !dbg !12926
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12927, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12928, !ctir !762
  store i8* null, i8** %data, align 8, !dbg !12929, !tbaa !11674, !ctir !53
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12930, !tbaa !2998
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12931, !ctir !756
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12931, !tbaa !12238, !ctir !761
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12932, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12933, !ctir !762
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12934, !tbaa !11686, !ctir !761
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12935, !tbaa !2998
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12936, !tbaa !2998
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12937, !ctir !756
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12938, !tbaa !12238, !ctir !761
  ret void, !dbg !12939
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12940 !ctir !879 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !761
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12943, metadata !DIExpression()), !dbg !12944
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12945, !tbaa !2998
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12947, !ctir !756
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12947, !tbaa !12238, !ctir !761
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12945
  br i1 %tobool, label %if.then, label %if.else, !dbg !12948

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12949, !tbaa !2998
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12951, !ctir !756
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12951, !tbaa !12238, !ctir !761
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12952, !tbaa !2998
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12953, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12954, !ctir !762
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12954, !tbaa !11686, !ctir !761
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12955, !tbaa !2998
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12956, !ctir !756
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12957, !tbaa !12238, !ctir !761
  br label %if.end, !dbg !12958

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #10, !dbg !12959
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12959
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12961, !tbaa !2998
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12962, !tbaa !2998
  ret %struct.hash_entry* %8, !dbg !12963
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12964 !ctir !857 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !761
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !773
  %candidate = alloca float, align 4, !ctir !779
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !761
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12965, metadata !DIExpression()), !dbg !12966
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12967, metadata !DIExpression()), !dbg !12968
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12969, metadata !DIExpression()), !dbg !12970
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12973, metadata !DIExpression()), !dbg !12974
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12975, !tbaa !2998
  %tobool = icmp ne i8* %0, null, !dbg !12975
  br i1 %tobool, label %if.end, label %if.then, !dbg !12977

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12978
  unreachable, !dbg !12978

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12979, !tbaa !2998
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12981, !tbaa !2998
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12982
  store i8* %call, i8** %data, align 8, !dbg !12983, !tbaa !2998
  %cmp = icmp ne i8* %call, null, !dbg !12984
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12985

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12986, !tbaa !2998
  %tobool3 = icmp ne i8** %3, null, !dbg !12986
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12989

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12990, !tbaa !2998
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12991, !tbaa !2998
  store i8* %4, i8** %5, align 8, !dbg !12992, !tbaa !2998, !ctir !427
  br label %if.end5, !dbg !12993

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12994
  br label %return, !dbg !12994

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12995, !tbaa !2998
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12997, !ctir !756
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12997, !tbaa !11641, !ctir !55
  %conv = uitofp i64 %7 to float, !dbg !12995
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12998, !tbaa !2998
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12999, !ctir !756
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12999, !tbaa !12178, !ctir !773
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !13000, !ctir !774
  %10 = load float, float* %growth_threshold, align 4, !dbg !13000, !tbaa !12289, !ctir !779
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13001, !tbaa !2998
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !13002, !ctir !756
  %12 = load i64, i64* %n_buckets, align 8, !dbg !13002, !tbaa !11633, !ctir !55
  %conv7 = uitofp i64 %12 to float, !dbg !13001
  %mul = fmul float %10, %conv7, !dbg !13003
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !13004
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !13005

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13006, !tbaa !2998
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !13008
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13009, !tbaa !2998
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !13011, !ctir !756
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !13011, !tbaa !11641, !ctir !55
  %conv13 = uitofp i64 %15 to float, !dbg !13009
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13012, !tbaa !2998
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !13013, !ctir !756
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !13013, !tbaa !12178, !ctir !773
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !13014, !ctir !774
  %18 = load float, float* %growth_threshold15, align 4, !dbg !13014, !tbaa !12289, !ctir !779
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13015, !tbaa !2998
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !13016, !ctir !756
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !13016, !tbaa !11633, !ctir !55
  %conv17 = uitofp i64 %20 to float, !dbg !13015
  %mul18 = fmul float %18, %conv17, !dbg !13017
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !13018
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !13019

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !13020, metadata !DIExpression()), !dbg !13022
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13023, !tbaa !2998
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !13024, !ctir !756
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !13024, !tbaa !12178, !ctir !773
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !13022, !tbaa !2998
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !13025, metadata !DIExpression()), !dbg !13026
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13027, !tbaa !2998
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !13028, !ctir !774
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !13028, !tbaa !12346
  %tobool24 = trunc i8 %24 to i1, !dbg !13028, !ctir !120
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !13027

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13029, !tbaa !2998
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !13030, !ctir !756
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !13030, !tbaa !11633, !ctir !55
  %conv27 = uitofp i64 %26 to float, !dbg !13029
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13031, !tbaa !2998
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !13032, !ctir !774
  %28 = load float, float* %growth_factor, align 4, !dbg !13032, !tbaa !12303, !ctir !779
  %mul28 = fmul float %conv27, %28, !dbg !13033
  br label %cond.end, !dbg !13027

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13034, !tbaa !2998
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !13035, !ctir !756
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !13035, !tbaa !11633, !ctir !55
  %conv30 = uitofp i64 %30 to float, !dbg !13034
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13036, !tbaa !2998
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !13037, !ctir !774
  %32 = load float, float* %growth_factor31, align 4, !dbg !13037, !tbaa !12303, !ctir !779
  %mul32 = fmul float %conv30, %32, !dbg !13038
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13039, !tbaa !2998
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !13040, !ctir !774
  %34 = load float, float* %growth_threshold33, align 4, !dbg !13040, !tbaa !12289, !ctir !779
  %mul34 = fmul float %mul32, %34, !dbg !13041
  br label %cond.end, !dbg !13027

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !13027
  store float %cond, float* %candidate, align 4, !dbg !13026, !tbaa !12134
  %35 = load float, float* %candidate, align 4, !dbg !13042, !tbaa !12134
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !13044
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !13045

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !13046
  br label %return, !dbg !13046

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13047, !tbaa !2998
  %37 = load float, float* %candidate, align 4, !dbg !13049, !tbaa !12134
  %conv39 = fptoui float %37 to i64, !dbg !13049
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !13050
  br i1 %call40, label %if.end42, label %if.then41, !dbg !13051

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !13052
  br label %return, !dbg !13052

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13053, !tbaa !2998
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !13055, !tbaa !2998
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !13056
  %cmp44 = icmp ne i8* %call43, null, !dbg !13057
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !13058

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !13059
  unreachable, !dbg !13059

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !13060

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !13061

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13062, !tbaa !2998
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13064, !ctir !762
  %41 = load i8*, i8** %data50, align 8, !dbg !13064, !tbaa !11674, !ctir !53
  %tobool51 = icmp ne i8* %41, null, !dbg !13062
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !13065

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !13066, metadata !DIExpression()), !dbg !13068
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13069, !tbaa !2998
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !13070
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !13068, !tbaa !2998
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13071, !tbaa !2998
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !13073
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !13074

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !13075
  br label %return, !dbg !13075

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !13076, !tbaa !2998
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13077, !tbaa !2998
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !13078, !ctir !762
  store i8* %44, i8** %data58, align 8, !dbg !13079, !tbaa !11674, !ctir !53
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13080, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13081, !ctir !762
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13081, !tbaa !11686, !ctir !761
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13082, !tbaa !2998
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13083, !ctir !762
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !13084, !tbaa !11686, !ctir !761
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !13085, !tbaa !2998
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13086, !tbaa !2998
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13087, !ctir !762
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !13088, !tbaa !11686, !ctir !761
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13089, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !13090, !ctir !756
  %52 = load i64, i64* %n_entries, align 8, !dbg !13091, !tbaa !11648, !ctir !55
  %inc = add i64 %52, 1, !dbg !13091
  store i64 %inc, i64* %n_entries, align 8, !dbg !13091, !tbaa !11648, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !13092
  br label %return, !dbg !13092

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !13093, !tbaa !2998
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13094, !tbaa !2998
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !13095, !ctir !762
  store i8* %53, i8** %data62, align 8, !dbg !13096, !tbaa !11674, !ctir !53
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13097, !tbaa !2998
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !13098, !ctir !756
  %56 = load i64, i64* %n_entries63, align 8, !dbg !13099, !tbaa !11648, !ctir !55
  %inc64 = add i64 %56, 1, !dbg !13099
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !13099, !tbaa !11648, !ctir !55
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13100, !tbaa !2998
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !13101, !ctir !756
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !13102, !tbaa !11641, !ctir !55
  %inc66 = add i64 %58, 1, !dbg !13102
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !13102, !tbaa !11641, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !13103
  br label %return, !dbg !13103

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !13104
  ret i32 %59, !dbg !13104
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !13105 !ctir !876 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !761
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !761
  %data7 = alloca i8*, align 8, !ctir !53
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !761
  %data29 = alloca i8*, align 8, !ctir !53
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !761
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13106, metadata !DIExpression()), !dbg !13107
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13108, metadata !DIExpression()), !dbg !13109
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !13110, metadata !DIExpression()), !dbg !13111
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !13112, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13114, metadata !DIExpression()), !dbg !13115
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13116, !tbaa !2998
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13117, !tbaa !2998
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !13118
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !13115, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13119, metadata !DIExpression()), !dbg !13120
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13121, !tbaa !2998
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !13122, !tbaa !2998
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !13123, !tbaa !2998, !ctir !761
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13124, !tbaa !2998
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !13126, !ctir !762
  %5 = load i8*, i8** %data, align 8, !dbg !13126, !tbaa !11674, !ctir !53
  %cmp = icmp eq i8* %5, null, !dbg !13127
  br i1 %cmp, label %if.then, label %if.end, !dbg !13128

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13129
  br label %return, !dbg !13129

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !13130, !tbaa !2998
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13132, !tbaa !2998
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !13133, !ctir !762
  %8 = load i8*, i8** %data2, align 8, !dbg !13133, !tbaa !11674, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !13134
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !13135

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13136, !tbaa !2998
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !13137, !ctir !756
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !13137, !tbaa !11836, !ctir !788
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !13138, !tbaa !2998
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13139, !tbaa !2998
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !13140, !ctir !762
  %13 = load i8*, i8** %data4, align 8, !dbg !13140, !tbaa !11674, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !13136
  br i1 %call5, label %if.then6, label %if.end17, !dbg !13141

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !13142, metadata !DIExpression()), !dbg !13144
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13145, !tbaa !2998
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !13146, !ctir !762
  %15 = load i8*, i8** %data8, align 8, !dbg !13146, !tbaa !11674, !ctir !53
  store i8* %15, i8** %data7, align 8, !dbg !13144, !tbaa !2998
  %16 = load i8, i8* %delete.addr, align 1, !dbg !13147, !tbaa !3109
  %tobool = trunc i8 %16 to i1, !dbg !13147
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !13149

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13150, !tbaa !2998
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !13153, !ctir !762
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13153, !tbaa !11686, !ctir !761
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !13150
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !13154

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !13155, metadata !DIExpression()), !dbg !13157
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13158, !tbaa !2998
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !13159, !ctir !762
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !13159, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !13157, !tbaa !2998
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13160, !tbaa !2998
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13161, !tbaa !2998
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13162
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13162
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13162, !tbaa.struct !13163
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13164, !tbaa !2998
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13165, !tbaa !2998
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13166
  br label %if.end15, !dbg !13167

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13168, !tbaa !2998
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13170, !ctir !762
  store i8* null, i8** %data14, align 8, !dbg !13171, !tbaa !11674, !ctir !53
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13172

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13173, !tbaa !2998
  store i8* %28, i8** %retval, align 8, !dbg !13174
  br label %return, !dbg !13174

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13175, !tbaa !2998
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13177, !tbaa !2998
  br label %for.cond, !dbg !13178

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13179, !tbaa !2998
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13181, !ctir !762
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13181, !tbaa !11686, !ctir !761
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13182
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13182

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13183, !tbaa !2998
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13186, !tbaa !2998
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13187, !ctir !762
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13187, !tbaa !11686, !ctir !761
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13188, !ctir !762
  %35 = load i8*, i8** %data21, align 8, !dbg !13188, !tbaa !11674, !ctir !53
  %cmp22 = icmp eq i8* %32, %35, !dbg !13189
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13190

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13191, !tbaa !2998
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13192, !ctir !756
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13192, !tbaa !11836, !ctir !788
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13193, !tbaa !2998
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13194, !tbaa !2998
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13195, !ctir !762
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13195, !tbaa !11686, !ctir !761
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13196, !ctir !762
  %41 = load i8*, i8** %data26, align 8, !dbg !13196, !tbaa !11674, !ctir !53
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13191
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13197

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13198, metadata !DIExpression()), !dbg !13200
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13201, !tbaa !2998
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13202, !ctir !762
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13202, !tbaa !11686, !ctir !761
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13203, !ctir !762
  %44 = load i8*, i8** %data31, align 8, !dbg !13203, !tbaa !11674, !ctir !53
  store i8* %44, i8** %data29, align 8, !dbg !13200, !tbaa !2998
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13204, !tbaa !3109
  %tobool32 = trunc i8 %45 to i1, !dbg !13204
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13206

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13207, metadata !DIExpression()), !dbg !13209
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13210, !tbaa !2998
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13211, !ctir !762
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13211, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13209, !tbaa !2998
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13212, !tbaa !2998
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13213, !ctir !762
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13213, !tbaa !11686, !ctir !761
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13214, !tbaa !2998
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13215, !ctir !762
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13216, !tbaa !11686, !ctir !761
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13217, !tbaa !2998
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13218, !tbaa !2998
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13219
  br label %if.end38, !dbg !13220

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13221, !tbaa !2998
  store i8* %53, i8** %retval, align 8, !dbg !13222
  br label %return, !dbg !13222

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13223

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13224, !tbaa !2998
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13225, !ctir !762
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13225, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13226, !tbaa !2998
  br label %for.cond, !dbg !13227, !llvm.loop !13228

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13230
  br label %return, !dbg !13230

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13231
  ret i8* %56, !dbg !13231
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13232 !ctir !860 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !427
  %err = alloca i32, align 4, !ctir !7
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13233, metadata !DIExpression()), !dbg !13234
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13235, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13237, metadata !DIExpression()), !dbg !13238
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13239, metadata !DIExpression()), !dbg !13240
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13241, !tbaa !2998
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13242, !tbaa !2998
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13243
  store i32 %call, i32* %err, align 4, !dbg !13240, !tbaa !2985
  %2 = load i32, i32* %err, align 4, !dbg !13244, !tbaa !2985
  %cmp = icmp eq i32 %2, -1, !dbg !13245
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13244

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13244

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13246, !tbaa !2985
  %cmp2 = icmp eq i32 %3, 0, !dbg !13247
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13246

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13248, !tbaa !2998
  br label %cond.end, !dbg !13246

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13249, !tbaa !2998
  br label %cond.end, !dbg !13246

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13246
  br label %cond.end5, !dbg !13244

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13244
  ret i8* %cond6, !dbg !13250
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13251 !ctir !860 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !761
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !773
  %candidate = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !761
  %next = alloca %struct.hash_entry*, align 8, !ctir !761
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13252, metadata !DIExpression()), !dbg !13253
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13254, metadata !DIExpression()), !dbg !13255
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13256, metadata !DIExpression()), !dbg !13257
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13258, metadata !DIExpression()), !dbg !13259
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13260, !tbaa !2998
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13261, !tbaa !2998
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13262
  store i8* %call, i8** %data, align 8, !dbg !13263, !tbaa !2998
  %2 = load i8*, i8** %data, align 8, !dbg !13264, !tbaa !2998
  %tobool = icmp ne i8* %2, null, !dbg !13264
  br i1 %tobool, label %if.end, label %if.then, !dbg !13266

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13267
  br label %return, !dbg !13267

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13268, !tbaa !2998
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13269, !ctir !756
  %4 = load i64, i64* %n_entries, align 8, !dbg !13270, !tbaa !11648, !ctir !55
  %dec = add i64 %4, -1, !dbg !13270
  store i64 %dec, i64* %n_entries, align 8, !dbg !13270, !tbaa !11648, !ctir !55
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13271, !tbaa !2998
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13273, !ctir !762
  %6 = load i8*, i8** %data2, align 8, !dbg !13273, !tbaa !11674, !ctir !53
  %tobool3 = icmp ne i8* %6, null, !dbg !13271
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13274

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13275, !tbaa !2998
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13277, !ctir !756
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13278, !tbaa !11641, !ctir !55
  %dec5 = add i64 %8, -1, !dbg !13278
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13278, !tbaa !11641, !ctir !55
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13279, !tbaa !2998
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13281, !ctir !756
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13281, !tbaa !11641, !ctir !55
  %conv = uitofp i64 %10 to float, !dbg !13279
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13282, !tbaa !2998
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13283, !ctir !756
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13283, !tbaa !12178, !ctir !773
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13284, !ctir !774
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13284, !tbaa !12308, !ctir !779
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13285, !tbaa !2998
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13286, !ctir !756
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13286, !tbaa !11633, !ctir !55
  %conv7 = uitofp i64 %15 to float, !dbg !13285
  %mul = fmul float %13, %conv7, !dbg !13287
  %cmp = fcmp olt float %conv, %mul, !dbg !13288
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13289

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13290, !tbaa !2998
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13292
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13293, !tbaa !2998
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13295, !ctir !756
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13295, !tbaa !11641, !ctir !55
  %conv12 = uitofp i64 %18 to float, !dbg !13293
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13296, !tbaa !2998
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13297, !ctir !756
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13297, !tbaa !12178, !ctir !773
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13298, !ctir !774
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13298, !tbaa !12308, !ctir !779
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13299, !tbaa !2998
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13300, !ctir !756
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13300, !tbaa !11633, !ctir !55
  %conv16 = uitofp i64 %23 to float, !dbg !13299
  %mul17 = fmul float %21, %conv16, !dbg !13301
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13302
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13303

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13304, metadata !DIExpression()), !dbg !13306
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13307, !tbaa !2998
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13308, !ctir !756
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13308, !tbaa !12178, !ctir !773
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13306, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13309, metadata !DIExpression()), !dbg !13310
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13311, !tbaa !2998
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13312, !ctir !774
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13312, !tbaa !12346
  %tobool23 = trunc i8 %27 to i1, !dbg !13312, !ctir !120
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13311

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13313, !tbaa !2998
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13314, !ctir !756
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13314, !tbaa !11633, !ctir !55
  %conv26 = uitofp i64 %29 to float, !dbg !13313
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13315, !tbaa !2998
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13316, !ctir !774
  %31 = load float, float* %shrink_factor, align 4, !dbg !13316, !tbaa !12317, !ctir !779
  %mul27 = fmul float %conv26, %31, !dbg !13317
  br label %cond.end, !dbg !13311

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13318, !tbaa !2998
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13319, !ctir !756
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13319, !tbaa !11633, !ctir !55
  %conv29 = uitofp i64 %33 to float, !dbg !13318
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13320, !tbaa !2998
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13321, !ctir !774
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13321, !tbaa !12317, !ctir !779
  %mul31 = fmul float %conv29, %35, !dbg !13322
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13323, !tbaa !2998
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13324, !ctir !774
  %37 = load float, float* %growth_threshold, align 4, !dbg !13324, !tbaa !12289, !ctir !779
  %mul32 = fmul float %mul31, %37, !dbg !13325
  br label %cond.end, !dbg !13311

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13311
  %conv33 = fptoui float %cond to i64, !dbg !13326
  store i64 %conv33, i64* %candidate, align 8, !dbg !13310, !tbaa !3851
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13327, !tbaa !2998
  %39 = load i64, i64* %candidate, align 8, !dbg !13329, !tbaa !3851
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13330
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13331

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13332, metadata !DIExpression()), !dbg !13334
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13335, !tbaa !2998
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13336, !ctir !756
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13336, !tbaa !12238, !ctir !761
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13334, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13337, metadata !DIExpression()), !dbg !13338
  br label %while.cond, !dbg !13339

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13340, !tbaa !2998
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13339
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13339

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13341, !tbaa !2998
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13343, !ctir !762
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13343, !tbaa !11686, !ctir !761
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13344, !tbaa !2998
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13345, !tbaa !2998
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13345
  call void @free(i8* %46) #10, !dbg !13346
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13347, !tbaa !2998
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13348, !tbaa !2998
  br label %while.cond, !dbg !13339, !llvm.loop !13349

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13351, !tbaa !2998
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13352, !ctir !756
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13353, !tbaa !12238, !ctir !761
  br label %if.end39, !dbg !13354

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13355

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13356

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13357

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13358, !tbaa !2998
  store i8* %49, i8** %retval, align 8, !dbg !13359
  br label %return, !dbg !13359

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13360
  ret i8* %50, !dbg !13360
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !13361 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1802
  %tmp = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13363, metadata !DIExpression()), !dbg !13364
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13365, metadata !DIExpression()), !dbg !13366
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13367, metadata !DIExpression()), !dbg !13368
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13369, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13369
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13368, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !13370, metadata !DIExpression()), !dbg !13371
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13372, !tbaa !2998
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13373, !ctir !1803
  %3 = load i8*, i8** %name, align 8, !dbg !13373, !tbaa !11214, !ctir !9
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13374, !tbaa !3851
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !13375
  store i64 %call, i64* %tmp, align 8, !dbg !13371, !tbaa !3851
  %5 = load i64, i64* %tmp, align 8, !dbg !13376, !tbaa !3851
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13377, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13378, !ctir !1803
  %7 = load i64, i64* %st_ino, align 8, !dbg !13378, !tbaa !11221, !ctir !227
  %xor = xor i64 %5, %7, !dbg !13379
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !13380, !tbaa !3851
  %rem = urem i64 %xor, %8, !dbg !13381
  ret i64 %rem, !dbg !13382
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !13383 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1802
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13384, metadata !DIExpression()), !dbg !13385
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13388, metadata !DIExpression()), !dbg !13389
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13390, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13390
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13389, !tbaa !2998
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13391, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !13392, !ctir !1803
  %3 = load i64, i64* %st_ino, align 8, !dbg !13392, !tbaa !11221, !ctir !227
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13393, !tbaa !3851
  %rem = urem i64 %3, %4, !dbg !13394
  ret i64 %rem, !dbg !13395
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !13396 !ctir !551 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1802
  %b = alloca %struct.F_triple*, align 8, !ctir !1802
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13397, metadata !DIExpression()), !dbg !13398
  store i8* %y, i8** %y.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13399, metadata !DIExpression()), !dbg !13400
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13401, metadata !DIExpression()), !dbg !13402
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13403, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13403
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13402, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13404, metadata !DIExpression()), !dbg !13405
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13406, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13406
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13405, !tbaa !2998
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13407, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13407, !ctir !1803
  %5 = load i64, i64* %st_ino, align 8, !dbg !13407, !tbaa !11221, !ctir !227
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13407, !tbaa !2998
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13407, !ctir !1803
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13407, !tbaa !11221, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !13407
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13407

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13407, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13407, !ctir !1803
  %9 = load i64, i64* %st_dev, align 8, !dbg !13407, !tbaa !11227, !ctir !230
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13407, !tbaa !2998
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13407, !ctir !1803
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13407, !tbaa !11227, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !13407
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13408

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13409, !tbaa !2998
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13410, !ctir !1803
  %13 = load i8*, i8** %name, align 8, !dbg !13410, !tbaa !11214, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13411, !tbaa !2998
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13412, !ctir !1803
  %15 = load i8*, i8** %name4, align 8, !dbg !13412, !tbaa !11214, !ctir !9
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !13413
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !13414
  %17 = zext i1 %16 to i64, !dbg !13415
  %cond = select i1 %16, i32 1, i32 0, !dbg !13415
  %tobool = icmp ne i32 %cond, 0, !dbg !13415
  ret i1 %tobool, !dbg !13416
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !13417 !ctir !551 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1802
  %b = alloca %struct.F_triple*, align 8, !ctir !1802
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13418, metadata !DIExpression()), !dbg !13419
  store i8* %y, i8** %y.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13420, metadata !DIExpression()), !dbg !13421
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13422, metadata !DIExpression()), !dbg !13423
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13424, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13424
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13423, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13425, metadata !DIExpression()), !dbg !13426
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13427, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13427
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13426, !tbaa !2998
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13428, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13428, !ctir !1803
  %5 = load i64, i64* %st_ino, align 8, !dbg !13428, !tbaa !11221, !ctir !227
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13428, !tbaa !2998
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13428, !ctir !1803
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13428, !tbaa !11221, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !13428
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13428

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13428, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13428, !ctir !1803
  %9 = load i64, i64* %st_dev, align 8, !dbg !13428, !tbaa !11227, !ctir !230
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13428, !tbaa !2998
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13428, !ctir !1803
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13428, !tbaa !11227, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !13428
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13429

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13430, !tbaa !2998
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13430, !ctir !1803
  %13 = load i8*, i8** %name, align 8, !dbg !13430, !tbaa !11214, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13430, !tbaa !2998
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13430, !ctir !1803
  %15 = load i8*, i8** %name4, align 8, !dbg !13430, !tbaa !11214, !ctir !9
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !13430
  %cmp5 = icmp eq i32 %call, 0, !dbg !13430
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !13431
  %17 = zext i1 %16 to i64, !dbg !13432
  %cond = select i1 %16, i32 1, i32 0, !dbg !13432
  %tobool = icmp ne i32 %cond, 0, !dbg !13432
  ret i1 %tobool, !dbg !13433
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !13434 !ctir !547 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1809
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13435, metadata !DIExpression()), !dbg !13436
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13437, metadata !DIExpression()), !dbg !13438
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13439, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13439
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13438, !tbaa !2998
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13440, !tbaa !2998
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13441, !ctir !1804
  %3 = load i8*, i8** %name, align 8, !dbg !13441, !tbaa !11214, !ctir !9
  call void @free(i8* %3) #10, !dbg !13442
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13443, !tbaa !2998
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !13443
  call void @free(i8* %5) #10, !dbg !13444
  ret void, !dbg !13445
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13446 !ctir !1813 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %new_fd = alloca i32, align 4, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !609
  %fdopendir_errno = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13448, metadata !DIExpression()), !dbg !13449
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13450, metadata !DIExpression()), !dbg !13451
  store i32 %extra_flags, i32* %extra_flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13452, metadata !DIExpression()), !dbg !13453
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13454, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13456, metadata !DIExpression()), !dbg !13457
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13458, !tbaa !2985
  %or = or i32 592128, %0, !dbg !13459
  store i32 %or, i32* %open_flags, align 4, !dbg !13457, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13460, metadata !DIExpression()), !dbg !13461
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13462, !tbaa !2985
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13463, !tbaa !2998
  %3 = load i32, i32* %open_flags, align 4, !dbg !13464, !tbaa !2985
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13465
  store i32 %call, i32* %new_fd, align 4, !dbg !13461, !tbaa !2985
  %4 = load i32, i32* %new_fd, align 4, !dbg !13466, !tbaa !2985
  %cmp = icmp slt i32 %4, 0, !dbg !13468
  br i1 %cmp, label %if.then, label %if.end, !dbg !13469

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13470
  br label %return, !dbg !13470

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13471, metadata !DIExpression()), !dbg !13472
  %5 = load i32, i32* %new_fd, align 4, !dbg !13473, !tbaa !2985
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13474
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13472, !tbaa !2998
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13475, !tbaa !2998
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13475
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13477

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13478, !tbaa !2985
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13479, !tbaa !2998
  store i32 %7, i32* %8, align 4, !dbg !13480, !tbaa !2985, !ctir !7
  br label %if.end6, !dbg !13481

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13482, metadata !DIExpression()), !dbg !13484
  %call3 = call i32* @__errno_location() #15, !dbg !13485
  %9 = load i32, i32* %call3, align 4, !dbg !13485, !tbaa !2985, !ctir !7
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13484, !tbaa !2985
  %10 = load i32, i32* %new_fd, align 4, !dbg !13486, !tbaa !2985
  %call4 = call i32 @close(i32 %10), !dbg !13487
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13488, !tbaa !2985
  %call5 = call i32* @__errno_location() #15, !dbg !13489
  store i32 %11, i32* %call5, align 4, !dbg !13490, !tbaa !2985, !ctir !7
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13491, !tbaa !2998
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13492
  br label %return, !dbg !13492

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13493
  ret %struct.__dirstream* %13, !dbg !13493
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_remove_linkdir() #4 !dbg !13494 !ctir !1818 {
entry:
  ret i32 -1, !dbg !13496
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_restore_linkdir() #4 !dbg !13497 !ctir !1818 {
entry:
  ret i32 -1, !dbg !13498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13499 !ctir !136 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !115
  %base = alloca i8*, align 8, !ctir !115
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13500, metadata !DIExpression()), !dbg !13501
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13502, metadata !DIExpression()), !dbg !13503
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13504, metadata !DIExpression()), !dbg !13505
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13506, !tbaa !2998
  %cmp = icmp eq i8* %0, null, !dbg !13508
  br i1 %cmp, label %if.then, label %if.end, !dbg !13509

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13510, !tbaa !2998
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.295, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13512
  call void @abort() #13, !dbg !13513
  unreachable, !dbg !13513

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13514, !tbaa !2998
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13515
  store i8* %call1, i8** %slash, align 8, !dbg !13516, !tbaa !2998
  %3 = load i8*, i8** %slash, align 8, !dbg !13517, !tbaa !2998
  %cmp2 = icmp ne i8* %3, null, !dbg !13518
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13517

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13519, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13520
  br label %cond.end, !dbg !13517

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13521, !tbaa !2998
  br label %cond.end, !dbg !13517

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13517
  store i8* %cond, i8** %base, align 8, !dbg !13522, !tbaa !2998
  %6 = load i8*, i8** %base, align 8, !dbg !13523, !tbaa !2998
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13525, !tbaa !2998
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13526
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13526
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13526
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13527
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13528

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13529, !tbaa !2998
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13530
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.296, i64 0, i64 0), i64 7) #14, !dbg !13531
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13532
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13533

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13534, !tbaa !2998
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13536, !tbaa !2998
  %10 = load i8*, i8** %base, align 8, !dbg !13537, !tbaa !2998
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.297, i64 0, i64 0), i64 3) #14, !dbg !13539
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13540
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13541

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13542, !tbaa !2998
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !13544
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !13545, !tbaa !2998
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !13546, !tbaa !2998
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !13547, !tbaa !2998
  br label %if.end12, !dbg !13548

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !13549

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !13550, !tbaa !2998
  store i8* %13, i8** @program_name, align 8, !dbg !13551, !tbaa !2998
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !13552, !tbaa !2998
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !13553, !tbaa !2998
  ret void, !dbg !13554
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !13555 !ctir !1584 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13557
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !13563, metadata !DIExpression()), !dbg !13564
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !13565, metadata !DIExpression()), !dbg !13566
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !13567, metadata !DIExpression()), !dbg !13568
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !13569, metadata !DIExpression()), !dbg !13570
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13571, metadata !DIExpression()), !dbg !13572
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13573, metadata !DIExpression()), !dbg !13574
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13575, metadata !DIExpression()), !dbg !13576
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !13577, !tbaa !2998
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !13578, !tbaa !2985
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13579, !tbaa !2985
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !13580
  store i32 %call, i32* %ret, align 4, !dbg !13581, !tbaa !2985
  %3 = load i32, i32* %ret, align 4, !dbg !13582, !tbaa !2985
  %cmp = icmp ne i32 %3, 0, !dbg !13584
  br i1 %cmp, label %if.then, label %if.end, !dbg !13585

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !13586
  br label %return, !dbg !13586

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !13587, !tbaa !2998
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !13588, !tbaa !2985
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !13589
  store i32 %call1, i32* %ret, align 4, !dbg !13590, !tbaa !2985
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13591
  %6 = load i32, i32* %ret, align 4, !dbg !13592, !tbaa !2985
  store i32 %6, i32* %retval, align 4, !dbg !13593
  br label %return, !dbg !13593

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13594
  ret i32 %7, !dbg !13594
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !13595 !ctir !1589 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13597
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13603, metadata !DIExpression()), !dbg !13604
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !13605, metadata !DIExpression()), !dbg !13606
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13607, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13609, metadata !DIExpression()), !dbg !13610
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13611, metadata !DIExpression()), !dbg !13612
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !13613
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !13613
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13614, !tbaa !2985
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !13615, !ctir !13597
  store i32 %1, i32* %mode1, align 8, !dbg !13616, !tbaa !13617, !ctir !160
  %2 = load i8*, i8** %name.addr, align 8, !dbg !13619, !tbaa !2998
  %3 = load i32, i32* %desc.addr, align 4, !dbg !13620, !tbaa !2985
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !13621
  store i32 %call, i32* %ret, align 4, !dbg !13622, !tbaa !2985
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13623
  %4 = load i32, i32* %ret, align 4, !dbg !13624, !tbaa !2985
  ret i32 %4, !dbg !13625
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !13626 !ctir !950 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %p = alloca %struct.quoting_options*, align 8, !ctir !952
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13627, metadata !DIExpression()), !dbg !13628
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13629, metadata !DIExpression()), !dbg !13630
  %call = call i32* @__errno_location() #15, !dbg !13631
  %0 = load i32, i32* %call, align 4, !dbg !13631, !tbaa !2985, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !13630, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13632, metadata !DIExpression()), !dbg !13633
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13634, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13634
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13634

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13635, !tbaa !2998
  br label %cond.end, !dbg !13634

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13634
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !13634
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !13636
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !13636
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !13633, !tbaa !2998
  %5 = load i32, i32* %e, align 4, !dbg !13637, !tbaa !2985
  %call2 = call i32* @__errno_location() #15, !dbg !13638
  store i32 %5, i32* %call2, align 4, !dbg !13639, !tbaa !2985, !ctir !7
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13640, !tbaa !2998
  ret %struct.quoting_options* %6, !dbg !13641
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !13642 !ctir !962 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13643, metadata !DIExpression()), !dbg !13644
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13645, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13645
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13645

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13646, !tbaa !2998
  br label %cond.end, !dbg !13645

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13645

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13645
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13647, !ctir !965
  %2 = load i32, i32* %style, align 8, !dbg !13647, !tbaa !13648, !ctir !928
  ret i32 %2, !dbg !13650
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !13651 !ctir !966 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13652, metadata !DIExpression()), !dbg !13653
  store i32 %s, i32* %s.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13654, metadata !DIExpression()), !dbg !13655
  %0 = load i32, i32* %s.addr, align 4, !dbg !13656, !tbaa !3660
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13657, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13657
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13657

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13658, !tbaa !2998
  br label %cond.end, !dbg !13657

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13657

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13657
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13659, !ctir !953
  store i32 %0, i32* %style, align 8, !dbg !13660, !tbaa !13648, !ctir !928
  ret void, !dbg !13661
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !13662 !ctir !968 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !468
  %p = alloca i32*, align 8, !ctir !970
  %shift = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13663, metadata !DIExpression()), !dbg !13664
  store i8 %c, i8* %c.addr, align 1, !tbaa !3660
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !13665, metadata !DIExpression()), !dbg !13666
  store i32 %i, i32* %i.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13667, metadata !DIExpression()), !dbg !13668
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !13669, metadata !DIExpression()), !dbg !13670
  %0 = load i8, i8* %c.addr, align 1, !dbg !13671, !tbaa !3660
  store i8 %0, i8* %uc, align 1, !dbg !13670, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32** %p, metadata !13672, metadata !DIExpression()), !dbg !13673
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13674, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13674
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13674

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13675, !tbaa !2998
  br label %cond.end, !dbg !13674

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13674

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13674
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !13676, !ctir !953
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13677
  %3 = load i8, i8* %uc, align 1, !dbg !13678, !tbaa !3660
  %conv = zext i8 %3 to i64, !dbg !13678
  %div = udiv i64 %conv, 32, !dbg !13679
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !13680
  store i32* %add.ptr, i32** %p, align 8, !dbg !13673, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13681, metadata !DIExpression()), !dbg !13682
  %4 = load i8, i8* %uc, align 1, !dbg !13683, !tbaa !3660
  %conv1 = zext i8 %4 to i64, !dbg !13683
  %rem = urem i64 %conv1, 32, !dbg !13684
  %conv2 = trunc i64 %rem to i32, !dbg !13683
  store i32 %conv2, i32* %shift, align 4, !dbg !13682, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13685, metadata !DIExpression()), !dbg !13686
  %5 = load i32*, i32** %p, align 8, !dbg !13687, !tbaa !2998
  %6 = load i32, i32* %5, align 4, !dbg !13688, !tbaa !2985, !ctir !70
  %7 = load i32, i32* %shift, align 4, !dbg !13689, !tbaa !2985
  %shr = lshr i32 %6, %7, !dbg !13690
  %and = and i32 %shr, 1, !dbg !13691
  store i32 %and, i32* %r, align 4, !dbg !13686, !tbaa !2985
  %8 = load i32, i32* %i.addr, align 4, !dbg !13692, !tbaa !2985
  %and3 = and i32 %8, 1, !dbg !13693
  %9 = load i32, i32* %r, align 4, !dbg !13694, !tbaa !2985
  %xor = xor i32 %and3, %9, !dbg !13695
  %10 = load i32, i32* %shift, align 4, !dbg !13696, !tbaa !2985
  %shl = shl i32 %xor, %10, !dbg !13697
  %11 = load i32*, i32** %p, align 8, !dbg !13698, !tbaa !2998
  %12 = load i32, i32* %11, align 4, !dbg !13699, !tbaa !2985, !ctir !70
  %xor4 = xor i32 %12, %shl, !dbg !13699
  store i32 %xor4, i32* %11, align 4, !dbg !13699, !tbaa !2985, !ctir !70
  %13 = load i32, i32* %r, align 4, !dbg !13700, !tbaa !2985
  ret i32 %13, !dbg !13701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !13702 !ctir !971 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13703, metadata !DIExpression()), !dbg !13704
  store i32 %i, i32* %i.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13705, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13707, metadata !DIExpression()), !dbg !13708
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13709, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13709
  br i1 %tobool, label %if.end, label %if.then, !dbg !13711

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13712, !tbaa !2998
  br label %if.end, !dbg !13713

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13714, !tbaa !2998
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !13715, !ctir !953
  %2 = load i32, i32* %flags, align 4, !dbg !13715, !tbaa !13716, !ctir !7
  store i32 %2, i32* %r, align 4, !dbg !13717, !tbaa !2985
  %3 = load i32, i32* %i.addr, align 4, !dbg !13718, !tbaa !2985
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13719, !tbaa !2998
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !13720, !ctir !953
  store i32 %3, i32* %flags1, align 4, !dbg !13721, !tbaa !13716, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !13722, !tbaa !2985
  ret i32 %5, !dbg !13723
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !13724 !ctir !973 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13725, metadata !DIExpression()), !dbg !13726
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13727, metadata !DIExpression()), !dbg !13728
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13729, metadata !DIExpression()), !dbg !13730
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13731, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13731
  br i1 %tobool, label %if.end, label %if.then, !dbg !13733

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13734, !tbaa !2998
  br label %if.end, !dbg !13735

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13736, !tbaa !2998
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !13737, !ctir !953
  store i32 10, i32* %style, align 8, !dbg !13738, !tbaa !13648, !ctir !928
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !13739, !tbaa !2998
  %tobool1 = icmp ne i8* %2, null, !dbg !13739
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !13741

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !13742, !tbaa !2998
  %tobool2 = icmp ne i8* %3, null, !dbg !13742
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13743

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !13744
  unreachable, !dbg !13744

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !13745, !tbaa !2998
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13746, !tbaa !2998
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !13747, !ctir !953
  store i8* %4, i8** %left_quote5, align 8, !dbg !13748, !tbaa !13749, !ctir !115
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !13750, !tbaa !2998
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13751, !tbaa !2998
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !13752, !ctir !953
  store i8* %6, i8** %right_quote6, align 8, !dbg !13753, !tbaa !13754, !ctir !115
  ret void, !dbg !13755
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !13756 !ctir !975 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !964
  %e = alloca i32, align 4, !ctir !7
  %r = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13759, metadata !DIExpression()), !dbg !13760
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13761, metadata !DIExpression()), !dbg !13762
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13763, metadata !DIExpression()), !dbg !13764
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13765, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13767, metadata !DIExpression()), !dbg !13768
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13769, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13769
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13769

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13770, !tbaa !2998
  br label %cond.end, !dbg !13769

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13769
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !13768, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13771, metadata !DIExpression()), !dbg !13772
  %call = call i32* @__errno_location() #15, !dbg !13773
  %2 = load i32, i32* %call, align 4, !dbg !13773, !tbaa !2985, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !13772, !tbaa !2985
  call void @llvm.dbg.declare(metadata i64* %r, metadata !13774, metadata !DIExpression()), !dbg !13775
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !13776, !tbaa !2998
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13777, !tbaa !3851
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13778, !tbaa !2998
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !13779, !tbaa !3851
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13780, !tbaa !2998
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !13781, !ctir !965
  %8 = load i32, i32* %style, align 8, !dbg !13781, !tbaa !13648, !ctir !928
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13782, !tbaa !2998
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !13783, !ctir !965
  %10 = load i32, i32* %flags, align 4, !dbg !13783, !tbaa !13716, !ctir !7
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13784, !tbaa !2998
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !13785, !ctir !965
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13784
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13786, !tbaa !2998
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !13787, !ctir !965
  %13 = load i8*, i8** %left_quote, align 8, !dbg !13787, !tbaa !13749, !ctir !115
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13788, !tbaa !2998
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !13789, !ctir !965
  %15 = load i8*, i8** %right_quote, align 8, !dbg !13789, !tbaa !13754, !ctir !115
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !13790
  store i64 %call1, i64* %r, align 8, !dbg !13775, !tbaa !3851
  %16 = load i32, i32* %e, align 4, !dbg !13791, !tbaa !2985
  %call2 = call i32* @__errno_location() #15, !dbg !13792
  store i32 %16, i32* %call2, align 4, !dbg !13793, !tbaa !2985, !ctir !7
  %17 = load i64, i64* %r, align 8, !dbg !13794, !tbaa !3851
  ret i64 %17, !dbg !13795
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !13796 !ctir !1022 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %orig_buffersize = alloca i64, align 8, !ctir !55
  %quote_string = alloca i8*, align 8, !ctir !115
  %quote_string_len = alloca i64, align 8, !ctir !55
  %backslash_escapes = alloca i8, align 1, !ctir !120
  %unibyte_locale = alloca i8, align 1, !ctir !120
  %elide_outer_quotes = alloca i8, align 1, !ctir !120
  %pending_shell_escape_end = alloca i8, align 1, !ctir !120
  %encountered_single_quote = alloca i8, align 1, !ctir !120
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !120
  %c = alloca i8, align 1, !ctir !468
  %esc = alloca i8, align 1, !ctir !468
  %is_right_quote = alloca i8, align 1, !ctir !120
  %escaping = alloca i8, align 1, !ctir !120
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !120
  %m = alloca i64, align 8, !ctir !55
  %printable = alloca i8, align 1, !ctir !120
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1028
  %w = alloca i32, align 4, !ctir !1043
  %bytes = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %ilim = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13797, metadata !DIExpression()), !dbg !13798
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13799, metadata !DIExpression()), !dbg !13800
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13801, metadata !DIExpression()), !dbg !13802
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13803, metadata !DIExpression()), !dbg !13804
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !13805, metadata !DIExpression()), !dbg !13806
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13807, metadata !DIExpression()), !dbg !13808
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !13809, metadata !DIExpression()), !dbg !13810
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13811, metadata !DIExpression()), !dbg !13812
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13813, metadata !DIExpression()), !dbg !13814
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13815, metadata !DIExpression()), !dbg !13816
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13817, metadata !DIExpression()), !dbg !13818
  store i64 0, i64* %len, align 8, !dbg !13818, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !13819, metadata !DIExpression()), !dbg !13820
  store i64 0, i64* %orig_buffersize, align 8, !dbg !13820, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !13821, metadata !DIExpression()), !dbg !13822
  store i8* null, i8** %quote_string, align 8, !dbg !13822, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !13823, metadata !DIExpression()), !dbg !13824
  store i64 0, i64* %quote_string_len, align 8, !dbg !13824, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !13825, metadata !DIExpression()), !dbg !13826
  store i8 0, i8* %backslash_escapes, align 1, !dbg !13826, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !13827, metadata !DIExpression()), !dbg !13828
  %call = call i64 @__ctype_get_mb_cur_max() #10, !dbg !13829
  %cmp = icmp eq i64 %call, 1, !dbg !13830
  %frombool = zext i1 %cmp to i8, !dbg !13828
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !13828, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !13831, metadata !DIExpression()), !dbg !13832
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13833, !tbaa !2985
  %and = and i32 %0, 2, !dbg !13834
  %cmp1 = icmp ne i32 %and, 0, !dbg !13835
  %frombool2 = zext i1 %cmp1 to i8, !dbg !13832
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !13832, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !13836, metadata !DIExpression()), !dbg !13837
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13837, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !13838, metadata !DIExpression()), !dbg !13839
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !13839, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !13840, metadata !DIExpression()), !dbg !13841
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13841, !tbaa !3109
  br label %process_input, !dbg !13842

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !13843), !dbg !13844
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !13845, !tbaa !3660
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !13846

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !13847, !tbaa !3660
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13849, !tbaa !3109
  br label %sw.bb3, !dbg !13850

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13851, !tbaa !3109
  %tobool = trunc i8 %2 to i1, !dbg !13851
  br i1 %tobool, label %if.end6, label %if.then, !dbg !13853

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !13854

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !13855, !tbaa !3851
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13855, !tbaa !3851
  %cmp4 = icmp ult i64 %3, %4, !dbg !13855
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13858

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !13855, !tbaa !2998
  %6 = load i64, i64* %len, align 8, !dbg !13855, !tbaa !3851
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !13855, !ctir !9
  store i8 34, i8* %arrayidx, align 1, !dbg !13855, !tbaa !3660
  br label %if.end, !dbg !13855

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !13858, !tbaa !3851
  %inc = add i64 %7, 1, !dbg !13858
  store i64 %inc, i64* %len, align 8, !dbg !13858, !tbaa !3851
  br label %do.end, !dbg !13858

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !13858

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13859, !tbaa !3109
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13860, !tbaa !2998
  store i64 1, i64* %quote_string_len, align 8, !dbg !13861, !tbaa !3851
  br label %sw.epilog, !dbg !13862

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13863, !tbaa !3109
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13864, !tbaa !3109
  br label %sw.epilog, !dbg !13865

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !13866, !tbaa !3660
  %cmp9 = icmp ne i32 %8, 10, !dbg !13869
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !13870

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !13871, !tbaa !3660
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.313, i64 0, i64 0), i32 %9), !dbg !13873
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !13874, !tbaa !2998
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !13875, !tbaa !3660
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i32 %10), !dbg !13876
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !13877, !tbaa !2998
  br label %if.end13, !dbg !13878

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13879, !tbaa !3109
  %tobool14 = trunc i8 %11 to i1, !dbg !13879
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !13881

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !13882, !tbaa !2998
  store i8* %12, i8** %quote_string, align 8, !dbg !13884, !tbaa !2998
  br label %for.cond, !dbg !13885

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !13886, !tbaa !2998
  %14 = load i8, i8* %13, align 1, !dbg !13888, !tbaa !3660, !ctir !116
  %tobool16 = icmp ne i8 %14, 0, !dbg !13889
  br i1 %tobool16, label %for.body, label %for.end, !dbg !13889

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !13890

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !13891, !tbaa !3851
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !13891, !tbaa !3851
  %cmp18 = icmp ult i64 %15, %16, !dbg !13891
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !13894

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !13891, !tbaa !2998
  %18 = load i8, i8* %17, align 1, !dbg !13891, !tbaa !3660, !ctir !116
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !13891, !tbaa !2998
  %20 = load i64, i64* %len, align 8, !dbg !13891, !tbaa !3851
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !13891, !ctir !9
  store i8 %18, i8* %arrayidx20, align 1, !dbg !13891, !tbaa !3660
  br label %if.end21, !dbg !13891

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !13894, !tbaa !3851
  %inc22 = add i64 %21, 1, !dbg !13894
  store i64 %inc22, i64* %len, align 8, !dbg !13894, !tbaa !3851
  br label %do.end23, !dbg !13894

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !13894

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !13895, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13895
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !13895, !tbaa !2998
  br label %for.cond, !dbg !13896, !llvm.loop !13897

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !13898

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13899, !tbaa !3109
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !13900, !tbaa !2998
  store i8* %23, i8** %quote_string, align 8, !dbg !13901, !tbaa !2998
  %24 = load i8*, i8** %quote_string, align 8, !dbg !13902, !tbaa !2998
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !13903
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !13904, !tbaa !3851
  br label %sw.epilog, !dbg !13905

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13906, !tbaa !3109
  br label %sw.bb27, !dbg !13907

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13908, !tbaa !3109
  br label %sw.bb28, !dbg !13909

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13910, !tbaa !3109
  %tobool29 = trunc i8 %25 to i1, !dbg !13910
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13912

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13913, !tbaa !3109
  br label %if.end31, !dbg !13914

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !13915

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !13916, !tbaa !3660
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13917, !tbaa !3109
  %tobool33 = trunc i8 %26 to i1, !dbg !13917
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !13919

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !13920

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !13921, !tbaa !3851
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !13921, !tbaa !3851
  %cmp36 = icmp ult i64 %27, %28, !dbg !13921
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !13924

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !13921, !tbaa !2998
  %30 = load i64, i64* %len, align 8, !dbg !13921, !tbaa !3851
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !13921, !ctir !9
  store i8 39, i8* %arrayidx38, align 1, !dbg !13921, !tbaa !3660
  br label %if.end39, !dbg !13921

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !13924, !tbaa !3851
  %inc40 = add i64 %31, 1, !dbg !13924
  store i64 %inc40, i64* %len, align 8, !dbg !13924, !tbaa !3851
  br label %do.end41, !dbg !13924

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !13924

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13925, !tbaa !2998
  store i64 1, i64* %quote_string_len, align 8, !dbg !13926, !tbaa !3851
  br label %sw.epilog, !dbg !13927

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13928, !tbaa !3109
  br label %sw.epilog, !dbg !13929

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !13930
  unreachable, !dbg !13930

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !13931, !tbaa !3851
  br label %for.cond44, !dbg !13933

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !13934, !tbaa !3851
  %cmp45 = icmp eq i64 %32, -1, !dbg !13936
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !13934

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !13937, !tbaa !2998
  %34 = load i64, i64* %i, align 8, !dbg !13938, !tbaa !3851
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13937, !ctir !115
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !13937, !tbaa !3660
  %conv = sext i8 %35 to i32, !dbg !13937
  %cmp47 = icmp eq i32 %conv, 0, !dbg !13939
  %conv48 = zext i1 %cmp47 to i32, !dbg !13939
  br label %cond.end, !dbg !13934

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !13940, !tbaa !3851
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !13941, !tbaa !3851
  %cmp49 = icmp eq i64 %36, %37, !dbg !13942
  %conv50 = zext i1 %cmp49 to i32, !dbg !13942
  br label %cond.end, !dbg !13934

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !13934
  %tobool51 = icmp ne i32 %cond, 0, !dbg !13943
  %lnot = xor i1 %tobool51, true, !dbg !13943
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !13944

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13945, metadata !DIExpression()), !dbg !13947
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !13948, metadata !DIExpression()), !dbg !13949
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !13950, metadata !DIExpression()), !dbg !13951
  store i8 0, i8* %is_right_quote, align 1, !dbg !13951, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !13952, metadata !DIExpression()), !dbg !13953
  store i8 0, i8* %escaping, align 1, !dbg !13953, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !13954, metadata !DIExpression()), !dbg !13955
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !13955, !tbaa !3109
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !13956, !tbaa !3109
  %tobool53 = trunc i8 %38 to i1, !dbg !13956
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !13958

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !13959, !tbaa !3660
  %cmp55 = icmp ne i32 %39, 2, !dbg !13960
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !13961

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !13962, !tbaa !3851
  %tobool58 = icmp ne i64 %40, 0, !dbg !13962
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !13963

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !13964, !tbaa !3851
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !13965, !tbaa !3851
  %add = add i64 %41, %42, !dbg !13966
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !13967, !tbaa !3851
  %cmp60 = icmp eq i64 %43, -1, !dbg !13968
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !13969

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !13970, !tbaa !3851
  %cmp63 = icmp ult i64 1, %44, !dbg !13971
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !13967

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !13972, !tbaa !2998
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !13973
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !13974, !tbaa !3851
  br label %cond.end68, !dbg !13967

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !13975, !tbaa !3851
  br label %cond.end68, !dbg !13967

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !13967
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !13976
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !13977

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !13978, !tbaa !2998
  %48 = load i64, i64* %i, align 8, !dbg !13979, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !13980
  %49 = load i8*, i8** %quote_string, align 8, !dbg !13981, !tbaa !2998
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !13982, !tbaa !3851
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !13983
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13984
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !13985

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13986, !tbaa !3109
  %tobool77 = trunc i8 %51 to i1, !dbg !13986
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13989

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !13990

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !13991, !tbaa !3109
  br label %if.end80, !dbg !13992

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !13993, !tbaa !2998
  %53 = load i64, i64* %i, align 8, !dbg !13994, !tbaa !3851
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !13993, !ctir !115
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !13993, !tbaa !3660
  store i8 %54, i8* %c, align 1, !dbg !13995, !tbaa !3660
  %55 = load i8, i8* %c, align 1, !dbg !13996, !tbaa !3660
  %conv82 = zext i8 %55 to i32, !dbg !13996
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !13997

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !13998, !tbaa !3109
  %tobool84 = trunc i8 %56 to i1, !dbg !13998
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !14001

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !14002

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14004, !tbaa !3109
  %tobool87 = trunc i8 %57 to i1, !dbg !14004
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !14007

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !14004

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !14007, !tbaa !3109
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !14008, !tbaa !3660
  %cmp90 = icmp eq i32 %58, 2, !dbg !14008
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !14008

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14008, !tbaa !3109
  %tobool93 = trunc i8 %59 to i1, !dbg !14008
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !14007

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !14010

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !14012, !tbaa !3851
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !14012, !tbaa !3851
  %cmp96 = icmp ult i64 %60, %61, !dbg !14012
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !14015

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !14012, !tbaa !2998
  %63 = load i64, i64* %len, align 8, !dbg !14012, !tbaa !3851
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !14012, !ctir !9
  store i8 39, i8* %arrayidx99, align 1, !dbg !14012, !tbaa !3660
  br label %if.end100, !dbg !14012

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !14015, !tbaa !3851
  %inc101 = add i64 %64, 1, !dbg !14015
  store i64 %inc101, i64* %len, align 8, !dbg !14015, !tbaa !3851
  br label %do.end102, !dbg !14015

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !14010

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !14016, !tbaa !3851
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !14016, !tbaa !3851
  %cmp104 = icmp ult i64 %65, %66, !dbg !14016
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !14019

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !14016, !tbaa !2998
  %68 = load i64, i64* %len, align 8, !dbg !14016, !tbaa !3851
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !14016, !ctir !9
  store i8 36, i8* %arrayidx107, align 1, !dbg !14016, !tbaa !3660
  br label %if.end108, !dbg !14016

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !14019, !tbaa !3851
  %inc109 = add i64 %69, 1, !dbg !14019
  store i64 %inc109, i64* %len, align 8, !dbg !14019, !tbaa !3851
  br label %do.end110, !dbg !14019

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !14010

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !14020, !tbaa !3851
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !14020, !tbaa !3851
  %cmp112 = icmp ult i64 %70, %71, !dbg !14020
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !14023

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !14020, !tbaa !2998
  %73 = load i64, i64* %len, align 8, !dbg !14020, !tbaa !3851
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !14020, !ctir !9
  store i8 39, i8* %arrayidx115, align 1, !dbg !14020, !tbaa !3660
  br label %if.end116, !dbg !14020

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !14023, !tbaa !3851
  %inc117 = add i64 %74, 1, !dbg !14023
  store i64 %inc117, i64* %len, align 8, !dbg !14023, !tbaa !3851
  br label %do.end118, !dbg !14023

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14010, !tbaa !3109
  br label %if.end119, !dbg !14010

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !14007

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !14024, !tbaa !3851
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !14024, !tbaa !3851
  %cmp121 = icmp ult i64 %75, %76, !dbg !14024
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !14027

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !14024, !tbaa !2998
  %78 = load i64, i64* %len, align 8, !dbg !14024, !tbaa !3851
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !14024, !ctir !9
  store i8 92, i8* %arrayidx124, align 1, !dbg !14024, !tbaa !3660
  br label %if.end125, !dbg !14024

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !14027, !tbaa !3851
  %inc126 = add i64 %79, 1, !dbg !14027
  store i64 %inc126, i64* %len, align 8, !dbg !14027, !tbaa !3851
  br label %do.end127, !dbg !14027

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !14007

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !14028, !tbaa !3660
  %cmp129 = icmp ne i32 %80, 2, !dbg !14030
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !14031

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !14032, !tbaa !3851
  %add132 = add i64 %81, 1, !dbg !14033
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !14034, !tbaa !3851
  %cmp133 = icmp ult i64 %add132, %82, !dbg !14035
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !14036

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !14037, !tbaa !2998
  %84 = load i64, i64* %i, align 8, !dbg !14038, !tbaa !3851
  %add136 = add i64 %84, 1, !dbg !14039
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !14037, !ctir !115
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !14037, !tbaa !3660
  %conv138 = sext i8 %85 to i32, !dbg !14037
  %cmp139 = icmp sle i32 48, %conv138, !dbg !14040
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !14041

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !14042, !tbaa !2998
  %87 = load i64, i64* %i, align 8, !dbg !14043, !tbaa !3851
  %add142 = add i64 %87, 1, !dbg !14044
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !14042, !ctir !115
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !14042, !tbaa !3660
  %conv144 = sext i8 %88 to i32, !dbg !14042
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !14045
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !14046

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !14047

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !14049, !tbaa !3851
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !14049, !tbaa !3851
  %cmp149 = icmp ult i64 %89, %90, !dbg !14049
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !14052

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !14049, !tbaa !2998
  %92 = load i64, i64* %len, align 8, !dbg !14049, !tbaa !3851
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !14049, !ctir !9
  store i8 48, i8* %arrayidx152, align 1, !dbg !14049, !tbaa !3660
  br label %if.end153, !dbg !14049

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !14052, !tbaa !3851
  %inc154 = add i64 %93, 1, !dbg !14052
  store i64 %inc154, i64* %len, align 8, !dbg !14052, !tbaa !3851
  br label %do.end155, !dbg !14052

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !14053

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !14054, !tbaa !3851
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !14054, !tbaa !3851
  %cmp157 = icmp ult i64 %94, %95, !dbg !14054
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !14057

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !14054, !tbaa !2998
  %97 = load i64, i64* %len, align 8, !dbg !14054, !tbaa !3851
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !14054, !ctir !9
  store i8 48, i8* %arrayidx160, align 1, !dbg !14054, !tbaa !3660
  br label %if.end161, !dbg !14054

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !14057, !tbaa !3851
  %inc162 = add i64 %98, 1, !dbg !14057
  store i64 %inc162, i64* %len, align 8, !dbg !14057, !tbaa !3851
  br label %do.end163, !dbg !14057

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !14058

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !14059, !tbaa !3660
  br label %if.end169, !dbg !14060

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !14061, !tbaa !2985
  %and165 = and i32 %99, 1, !dbg !14063
  %tobool166 = icmp ne i32 %and165, 0, !dbg !14063
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14064

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !14065

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !14066

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !14067, !tbaa !3660
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !14068

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14069, !tbaa !3109
  %tobool172 = trunc i8 %101 to i1, !dbg !14069
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !14072

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !14073

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !14074

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !14075, !tbaa !2985
  %and176 = and i32 %102, 4, !dbg !14077
  %tobool177 = icmp ne i32 %and176, 0, !dbg !14077
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !14078

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !14079, !tbaa !3851
  %add179 = add i64 %103, 2, !dbg !14080
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14081, !tbaa !3851
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14082
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14083

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14084, !tbaa !2998
  %106 = load i64, i64* %i, align 8, !dbg !14085, !tbaa !3851
  %add183 = add i64 %106, 1, !dbg !14086
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14084, !ctir !115
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14084, !tbaa !3660
  %conv185 = sext i8 %107 to i32, !dbg !14084
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14087
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14088

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14089, !tbaa !2998
  %109 = load i64, i64* %i, align 8, !dbg !14090, !tbaa !3851
  %add189 = add i64 %109, 2, !dbg !14091
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14089, !ctir !115
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14089, !tbaa !3660
  %conv191 = sext i8 %110 to i32, !dbg !14089
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14092

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14093, !tbaa !3109
  %tobool193 = trunc i8 %111 to i1, !dbg !14093
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14096

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14097

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14098, !tbaa !2998
  %113 = load i64, i64* %i, align 8, !dbg !14099, !tbaa !3851
  %add196 = add i64 %113, 2, !dbg !14100
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14098, !ctir !115
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14098, !tbaa !3660
  store i8 %114, i8* %c, align 1, !dbg !14101, !tbaa !3660
  %115 = load i64, i64* %i, align 8, !dbg !14102, !tbaa !3851
  %add198 = add i64 %115, 2, !dbg !14102
  store i64 %add198, i64* %i, align 8, !dbg !14102, !tbaa !3851
  br label %do.body199, !dbg !14103

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14104, !tbaa !3851
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14104, !tbaa !3851
  %cmp200 = icmp ult i64 %116, %117, !dbg !14104
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14107

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14104, !tbaa !2998
  %119 = load i64, i64* %len, align 8, !dbg !14104, !tbaa !3851
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14104, !ctir !9
  store i8 63, i8* %arrayidx203, align 1, !dbg !14104, !tbaa !3660
  br label %if.end204, !dbg !14104

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14107, !tbaa !3851
  %inc205 = add i64 %120, 1, !dbg !14107
  store i64 %inc205, i64* %len, align 8, !dbg !14107, !tbaa !3851
  br label %do.end206, !dbg !14107

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14108

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14109, !tbaa !3851
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14109, !tbaa !3851
  %cmp208 = icmp ult i64 %121, %122, !dbg !14109
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14112

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14109, !tbaa !2998
  %124 = load i64, i64* %len, align 8, !dbg !14109, !tbaa !3851
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14109, !ctir !9
  store i8 34, i8* %arrayidx211, align 1, !dbg !14109, !tbaa !3660
  br label %if.end212, !dbg !14109

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14112, !tbaa !3851
  %inc213 = add i64 %125, 1, !dbg !14112
  store i64 %inc213, i64* %len, align 8, !dbg !14112, !tbaa !3851
  br label %do.end214, !dbg !14112

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14113

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14114, !tbaa !3851
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14114, !tbaa !3851
  %cmp216 = icmp ult i64 %126, %127, !dbg !14114
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14117

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14114, !tbaa !2998
  %129 = load i64, i64* %len, align 8, !dbg !14114, !tbaa !3851
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14114, !ctir !9
  store i8 34, i8* %arrayidx219, align 1, !dbg !14114, !tbaa !3660
  br label %if.end220, !dbg !14114

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14117, !tbaa !3851
  %inc221 = add i64 %130, 1, !dbg !14117
  store i64 %inc221, i64* %len, align 8, !dbg !14117, !tbaa !3851
  br label %do.end222, !dbg !14117

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14118

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14119, !tbaa !3851
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14119, !tbaa !3851
  %cmp224 = icmp ult i64 %131, %132, !dbg !14119
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14122

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14119, !tbaa !2998
  %134 = load i64, i64* %len, align 8, !dbg !14119, !tbaa !3851
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14119, !ctir !9
  store i8 63, i8* %arrayidx227, align 1, !dbg !14119, !tbaa !3660
  br label %if.end228, !dbg !14119

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14122, !tbaa !3851
  %inc229 = add i64 %135, 1, !dbg !14122
  store i64 %inc229, i64* %len, align 8, !dbg !14122, !tbaa !3851
  br label %do.end230, !dbg !14122

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14123

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14124

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14125

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14126

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14127

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14128

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14129, !tbaa !3660
  br label %c_escape, !dbg !14130

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14131, !tbaa !3660
  br label %c_escape, !dbg !14132

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14133, !tbaa !3660
  br label %c_escape, !dbg !14134

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14135, !tbaa !3660
  br label %c_and_shell_escape, !dbg !14136

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14137, !tbaa !3660
  br label %c_and_shell_escape, !dbg !14138

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14139, !tbaa !3660
  br label %c_and_shell_escape, !dbg !14140

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14141, !tbaa !3660
  br label %c_escape, !dbg !14142

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14143, !tbaa !3660
  store i8 %136, i8* %esc, align 1, !dbg !14144, !tbaa !3660
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14145, !tbaa !3660
  %cmp244 = icmp eq i32 %137, 2, !dbg !14147
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14148

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14149, !tbaa !3109
  %tobool247 = trunc i8 %138 to i1, !dbg !14149
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14152

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14153

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14154

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14155, !tbaa !3109
  %tobool251 = trunc i8 %139 to i1, !dbg !14155
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14157

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14158, !tbaa !3109
  %tobool254 = trunc i8 %140 to i1, !dbg !14158
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14159

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14160, !tbaa !3851
  %tobool257 = icmp ne i64 %141, 0, !dbg !14160
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14161

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14162

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14160

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14163), !dbg !14164
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14165, !tbaa !3660
  %cmp260 = icmp eq i32 %142, 2, !dbg !14167
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14168

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14169, !tbaa !3109
  %tobool263 = trunc i8 %143 to i1, !dbg !14169
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14170

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14171

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14169

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14172), !dbg !14173
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14174, !tbaa !3109
  %tobool267 = trunc i8 %144 to i1, !dbg !14174
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14176

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14177, !tbaa !3660
  store i8 %145, i8* %c, align 1, !dbg !14179, !tbaa !3660
  br label %store_escape, !dbg !14180

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14181

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14182, !tbaa !3851
  %cmp271 = icmp eq i64 %146, -1, !dbg !14184
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14185

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14186, !tbaa !2998
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14186, !ctir !115
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14186, !tbaa !3660
  %conv275 = sext i8 %148 to i32, !dbg !14186
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14187
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14182

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14188, !tbaa !3851
  %cmp279 = icmp eq i64 %149, 1, !dbg !14189
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14185

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14190

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14191

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14192, !tbaa !3851
  %cmp284 = icmp ne i64 %150, 0, !dbg !14194
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14195

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14196

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14197

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14198, !tbaa !3109
  br label %sw.bb289, !dbg !14199

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14200, !tbaa !3660
  %cmp290 = icmp eq i32 %151, 2, !dbg !14202
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14203

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14204, !tbaa !3109
  %tobool293 = trunc i8 %152 to i1, !dbg !14204
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14205

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14206

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14207

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14208, !tbaa !3109
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14209, !tbaa !3109
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14210, !tbaa !3660
  %cmp298 = icmp eq i32 %153, 2, !dbg !14212
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14213

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14214, !tbaa !3109
  %tobool301 = trunc i8 %154 to i1, !dbg !14214
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14217

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14218

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14219, !tbaa !3851
  %tobool304 = icmp ne i64 %155, 0, !dbg !14219
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14221

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14222, !tbaa !3851
  %tobool306 = icmp ne i64 %156, 0, !dbg !14222
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14223

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14224, !tbaa !3851
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14226, !tbaa !3851
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14227, !tbaa !3851
  br label %if.end308, !dbg !14228

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14229

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14230, !tbaa !3851
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14230, !tbaa !3851
  %cmp310 = icmp ult i64 %158, %159, !dbg !14230
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14233

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14230, !tbaa !2998
  %161 = load i64, i64* %len, align 8, !dbg !14230, !tbaa !3851
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14230, !ctir !9
  store i8 39, i8* %arrayidx313, align 1, !dbg !14230, !tbaa !3660
  br label %if.end314, !dbg !14230

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14233, !tbaa !3851
  %inc315 = add i64 %162, 1, !dbg !14233
  store i64 %inc315, i64* %len, align 8, !dbg !14233, !tbaa !3851
  br label %do.end316, !dbg !14233

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14234

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14235, !tbaa !3851
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14235, !tbaa !3851
  %cmp318 = icmp ult i64 %163, %164, !dbg !14235
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14238

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14235, !tbaa !2998
  %166 = load i64, i64* %len, align 8, !dbg !14235, !tbaa !3851
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14235, !ctir !9
  store i8 92, i8* %arrayidx321, align 1, !dbg !14235, !tbaa !3660
  br label %if.end322, !dbg !14235

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14238, !tbaa !3851
  %inc323 = add i64 %167, 1, !dbg !14238
  store i64 %inc323, i64* %len, align 8, !dbg !14238, !tbaa !3851
  br label %do.end324, !dbg !14238

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14239

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14240, !tbaa !3851
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14240, !tbaa !3851
  %cmp326 = icmp ult i64 %168, %169, !dbg !14240
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14243

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14240, !tbaa !2998
  %171 = load i64, i64* %len, align 8, !dbg !14240, !tbaa !3851
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14240, !ctir !9
  store i8 39, i8* %arrayidx329, align 1, !dbg !14240, !tbaa !3660
  br label %if.end330, !dbg !14240

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14243, !tbaa !3851
  %inc331 = add i64 %172, 1, !dbg !14243
  store i64 %inc331, i64* %len, align 8, !dbg !14243, !tbaa !3851
  br label %do.end332, !dbg !14243

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14244, !tbaa !3109
  br label %if.end333, !dbg !14245

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14246

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14247, !tbaa !3109
  br label %sw.epilog564, !dbg !14248

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14249, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14252, metadata !DIExpression()), !dbg !14253
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14254, !tbaa !3109
  %tobool336 = trunc i8 %173 to i1, !dbg !14254
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14256

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14257, !tbaa !3851
  %call338 = call i16** @__ctype_b_loc() #15, !dbg !14259
  %174 = load i16*, i16** %call338, align 8, !dbg !14259, !tbaa !2998, !ctir !1026
  %175 = load i8, i8* %c, align 1, !dbg !14259, !tbaa !3660
  %conv339 = zext i8 %175 to i32, !dbg !14259
  %idxprom = sext i32 %conv339 to i64, !dbg !14259
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14259, !ctir !1026
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14259, !tbaa !3813
  %conv341 = zext i16 %176 to i32, !dbg !14259
  %and342 = and i32 %conv341, 16384, !dbg !14259
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14260
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14261
  store i8 %frombool345, i8* %printable, align 1, !dbg !14261, !tbaa !3109
  br label %if.end410, !dbg !14262

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !14263, metadata !DIExpression()), !dbg !14265
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !14266
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14266
  store i64 0, i64* %m, align 8, !dbg !14267, !tbaa !3851
  store i8 1, i8* %printable, align 1, !dbg !14268, !tbaa !3109
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14269, !tbaa !3851
  %cmp347 = icmp eq i64 %178, -1, !dbg !14271
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14272

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14273, !tbaa !2998
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14274
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14275, !tbaa !3851
  br label %if.end351, !dbg !14276

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14277

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14278, metadata !DIExpression()), !dbg !14280
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14281, metadata !DIExpression()), !dbg !14282
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14283, !tbaa !2998
  %181 = load i64, i64* %i, align 8, !dbg !14284, !tbaa !3851
  %182 = load i64, i64* %m, align 8, !dbg !14285, !tbaa !3851
  %add353 = add i64 %181, %182, !dbg !14286
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14283, !ctir !115
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14287, !tbaa !3851
  %184 = load i64, i64* %i, align 8, !dbg !14288, !tbaa !3851
  %185 = load i64, i64* %m, align 8, !dbg !14289, !tbaa !3851
  %add355 = add i64 %184, %185, !dbg !14290
  %sub = sub i64 %183, %add355, !dbg !14291
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !14292
  store i64 %call356, i64* %bytes, align 8, !dbg !14282, !tbaa !3851
  %186 = load i64, i64* %bytes, align 8, !dbg !14293, !tbaa !3851
  %cmp357 = icmp eq i64 %186, 0, !dbg !14295
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14296

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14297

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14298, !tbaa !3851
  %cmp361 = icmp eq i64 %187, -1, !dbg !14300
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14301

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14302, !tbaa !3109
  br label %do.end409, !dbg !14304

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14305, !tbaa !3851
  %cmp365 = icmp eq i64 %188, -2, !dbg !14307
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14308

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14309, !tbaa !3109
  br label %while.cond, !dbg !14311

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14312, !tbaa !3851
  %190 = load i64, i64* %m, align 8, !dbg !14313, !tbaa !3851
  %add368 = add i64 %189, %190, !dbg !14314
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14315, !tbaa !3851
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14316
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14317

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14318, !tbaa !2998
  %193 = load i64, i64* %i, align 8, !dbg !14319, !tbaa !3851
  %194 = load i64, i64* %m, align 8, !dbg !14320, !tbaa !3851
  %add371 = add i64 %193, %194, !dbg !14321
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14318, !ctir !115
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14318, !tbaa !3660
  %conv373 = sext i8 %195 to i32, !dbg !14318
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14317
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14322
  br i1 %196, label %while.body, label %while.end, !dbg !14311

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14323, !tbaa !3851
  %inc375 = add i64 %197, 1, !dbg !14323
  store i64 %inc375, i64* %m, align 8, !dbg !14323, !tbaa !3851
  br label %while.cond, !dbg !14311, !llvm.loop !14324

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14325

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14326, !tbaa !3109
  %tobool377 = trunc i8 %198 to i1, !dbg !14326
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14329

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14330, !tbaa !3660
  %cmp380 = icmp eq i32 %199, 2, !dbg !14331
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14332

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14333, metadata !DIExpression()), !dbg !14335
  store i64 1, i64* %j, align 8, !dbg !14336, !tbaa !3851
  br label %for.cond383, !dbg !14338

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14339, !tbaa !3851
  %201 = load i64, i64* %bytes, align 8, !dbg !14341, !tbaa !3851
  %cmp384 = icmp ult i64 %200, %201, !dbg !14342
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14343

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14344, !tbaa !2998
  %203 = load i64, i64* %i, align 8, !dbg !14345, !tbaa !3851
  %204 = load i64, i64* %m, align 8, !dbg !14346, !tbaa !3851
  %add387 = add i64 %203, %204, !dbg !14347
  %205 = load i64, i64* %j, align 8, !dbg !14348, !tbaa !3851
  %add388 = add i64 %add387, %205, !dbg !14349
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14344, !ctir !115
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14344, !tbaa !3660
  %conv390 = sext i8 %206 to i32, !dbg !14344
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14350

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14351

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14353

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14354

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14355, !tbaa !3851
  %inc395 = add i64 %207, 1, !dbg !14355
  store i64 %inc395, i64* %j, align 8, !dbg !14355, !tbaa !3851
  br label %for.cond383, !dbg !14356, !llvm.loop !14357

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14359

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14360, !tbaa !2985
  %call398 = call i32 @iswprint(i32 %208) #10, !dbg !14362
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14362
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14363

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14364, !tbaa !3109
  br label %if.end401, !dbg !14365

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14366, !tbaa !3851
  %210 = load i64, i64* %m, align 8, !dbg !14367, !tbaa !3851
  %add402 = add i64 %210, %209, !dbg !14367
  store i64 %add402, i64* %m, align 8, !dbg !14367, !tbaa !3851
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14368

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !14369
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14370
  %lnot408 = xor i1 %tobool407, true, !dbg !14370
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14368, !llvm.loop !14371

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14373, !tbaa !3109
  %tobool411 = trunc i8 %211 to i1, !dbg !14373
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14374
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14374, !tbaa !3109
  %212 = load i64, i64* %m, align 8, !dbg !14375, !tbaa !3851
  %cmp413 = icmp ult i64 1, %212, !dbg !14377
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14378

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14379, !tbaa !3109
  %tobool415 = trunc i8 %213 to i1, !dbg !14379
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14380

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14381, !tbaa !3109
  %tobool418 = trunc i8 %214 to i1, !dbg !14381
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14382

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14383, metadata !DIExpression()), !dbg !14385
  %215 = load i64, i64* %i, align 8, !dbg !14386, !tbaa !3851
  %216 = load i64, i64* %m, align 8, !dbg !14387, !tbaa !3851
  %add420 = add i64 %215, %216, !dbg !14388
  store i64 %add420, i64* %ilim, align 8, !dbg !14385, !tbaa !3851
  br label %for.cond421, !dbg !14389

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14390, !tbaa !3109
  %tobool422 = trunc i8 %217 to i1, !dbg !14390
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14395

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14396, !tbaa !3109
  %tobool425 = trunc i8 %218 to i1, !dbg !14396
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14397

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14398

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14400, !tbaa !3109
  %tobool428 = trunc i8 %219 to i1, !dbg !14400
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14403

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14400

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14403, !tbaa !3109
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14404, !tbaa !3660
  %cmp431 = icmp eq i32 %220, 2, !dbg !14404
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14404

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14404, !tbaa !3109
  %tobool434 = trunc i8 %221 to i1, !dbg !14404
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14403

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14406

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14408, !tbaa !3851
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14408, !tbaa !3851
  %cmp437 = icmp ult i64 %222, %223, !dbg !14408
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14411

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14408, !tbaa !2998
  %225 = load i64, i64* %len, align 8, !dbg !14408, !tbaa !3851
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14408, !ctir !9
  store i8 39, i8* %arrayidx440, align 1, !dbg !14408, !tbaa !3660
  br label %if.end441, !dbg !14408

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14411, !tbaa !3851
  %inc442 = add i64 %226, 1, !dbg !14411
  store i64 %inc442, i64* %len, align 8, !dbg !14411, !tbaa !3851
  br label %do.end444, !dbg !14411

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14406

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14412, !tbaa !3851
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14412, !tbaa !3851
  %cmp446 = icmp ult i64 %227, %228, !dbg !14412
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14415

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14412, !tbaa !2998
  %230 = load i64, i64* %len, align 8, !dbg !14412, !tbaa !3851
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14412, !ctir !9
  store i8 36, i8* %arrayidx449, align 1, !dbg !14412, !tbaa !3660
  br label %if.end450, !dbg !14412

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14415, !tbaa !3851
  %inc451 = add i64 %231, 1, !dbg !14415
  store i64 %inc451, i64* %len, align 8, !dbg !14415, !tbaa !3851
  br label %do.end453, !dbg !14415

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14406

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14416, !tbaa !3851
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14416, !tbaa !3851
  %cmp455 = icmp ult i64 %232, %233, !dbg !14416
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14419

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14416, !tbaa !2998
  %235 = load i64, i64* %len, align 8, !dbg !14416, !tbaa !3851
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14416, !ctir !9
  store i8 39, i8* %arrayidx458, align 1, !dbg !14416, !tbaa !3660
  br label %if.end459, !dbg !14416

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14419, !tbaa !3851
  %inc460 = add i64 %236, 1, !dbg !14419
  store i64 %inc460, i64* %len, align 8, !dbg !14419, !tbaa !3851
  br label %do.end462, !dbg !14419

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14406, !tbaa !3109
  br label %if.end463, !dbg !14406

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14403

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14420, !tbaa !3851
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14420, !tbaa !3851
  %cmp465 = icmp ult i64 %237, %238, !dbg !14420
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14423

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14420, !tbaa !2998
  %240 = load i64, i64* %len, align 8, !dbg !14420, !tbaa !3851
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14420, !ctir !9
  store i8 92, i8* %arrayidx468, align 1, !dbg !14420, !tbaa !3660
  br label %if.end469, !dbg !14420

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14423, !tbaa !3851
  %inc470 = add i64 %241, 1, !dbg !14423
  store i64 %inc470, i64* %len, align 8, !dbg !14423, !tbaa !3851
  br label %do.end472, !dbg !14423

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14403

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14424

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14425, !tbaa !3851
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14425, !tbaa !3851
  %cmp476 = icmp ult i64 %242, %243, !dbg !14425
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14428

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14425, !tbaa !3660
  %conv479 = zext i8 %244 to i32, !dbg !14425
  %shr = ashr i32 %conv479, 6, !dbg !14425
  %add480 = add nsw i32 48, %shr, !dbg !14425
  %conv481 = trunc i32 %add480 to i8, !dbg !14425
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14425, !tbaa !2998
  %246 = load i64, i64* %len, align 8, !dbg !14425, !tbaa !3851
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14425, !ctir !9
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14425, !tbaa !3660
  br label %if.end483, !dbg !14425

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14428, !tbaa !3851
  %inc484 = add i64 %247, 1, !dbg !14428
  store i64 %inc484, i64* %len, align 8, !dbg !14428, !tbaa !3851
  br label %do.end486, !dbg !14428

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14429

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14430, !tbaa !3851
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14430, !tbaa !3851
  %cmp488 = icmp ult i64 %248, %249, !dbg !14430
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14433

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14430, !tbaa !3660
  %conv491 = zext i8 %250 to i32, !dbg !14430
  %shr492 = ashr i32 %conv491, 3, !dbg !14430
  %and493 = and i32 %shr492, 7, !dbg !14430
  %add494 = add nsw i32 48, %and493, !dbg !14430
  %conv495 = trunc i32 %add494 to i8, !dbg !14430
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14430, !tbaa !2998
  %252 = load i64, i64* %len, align 8, !dbg !14430, !tbaa !3851
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14430, !ctir !9
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14430, !tbaa !3660
  br label %if.end497, !dbg !14430

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14433, !tbaa !3851
  %inc498 = add i64 %253, 1, !dbg !14433
  store i64 %inc498, i64* %len, align 8, !dbg !14433, !tbaa !3851
  br label %do.end500, !dbg !14433

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14434, !tbaa !3660
  %conv501 = zext i8 %254 to i32, !dbg !14434
  %and502 = and i32 %conv501, 7, !dbg !14435
  %add503 = add nsw i32 48, %and502, !dbg !14436
  %conv504 = trunc i32 %add503 to i8, !dbg !14437
  store i8 %conv504, i8* %c, align 1, !dbg !14438, !tbaa !3660
  br label %if.end518, !dbg !14439

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14440, !tbaa !3109
  %tobool506 = trunc i8 %255 to i1, !dbg !14440
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14442

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14443

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14445, !tbaa !3851
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14445, !tbaa !3851
  %cmp509 = icmp ult i64 %256, %257, !dbg !14445
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14448

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14445, !tbaa !2998
  %259 = load i64, i64* %len, align 8, !dbg !14445, !tbaa !3851
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14445, !ctir !9
  store i8 92, i8* %arrayidx512, align 1, !dbg !14445, !tbaa !3660
  br label %if.end513, !dbg !14445

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14448, !tbaa !3851
  %inc514 = add i64 %260, 1, !dbg !14448
  store i64 %inc514, i64* %len, align 8, !dbg !14448, !tbaa !3851
  br label %do.end516, !dbg !14448

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14449, !tbaa !3109
  br label %if.end517, !dbg !14450

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14451, !tbaa !3851
  %262 = load i64, i64* %i, align 8, !dbg !14453, !tbaa !3851
  %add519 = add i64 %262, 1, !dbg !14454
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14455
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14456

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14457

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14458

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14459, !tbaa !3109
  %tobool525 = trunc i8 %263 to i1, !dbg !14459
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14459

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14459, !tbaa !3109
  %tobool528 = trunc i8 %264 to i1, !dbg !14459
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14462

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14463

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14465, !tbaa !3851
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14465, !tbaa !3851
  %cmp531 = icmp ult i64 %265, %266, !dbg !14465
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14468

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14465, !tbaa !2998
  %268 = load i64, i64* %len, align 8, !dbg !14465, !tbaa !3851
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14465, !ctir !9
  store i8 39, i8* %arrayidx534, align 1, !dbg !14465, !tbaa !3660
  br label %if.end535, !dbg !14465

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14468, !tbaa !3851
  %inc536 = add i64 %269, 1, !dbg !14468
  store i64 %inc536, i64* %len, align 8, !dbg !14468, !tbaa !3851
  br label %do.end538, !dbg !14468

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14463

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14469, !tbaa !3851
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14469, !tbaa !3851
  %cmp540 = icmp ult i64 %270, %271, !dbg !14469
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14472

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14469, !tbaa !2998
  %273 = load i64, i64* %len, align 8, !dbg !14469, !tbaa !3851
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14469, !ctir !9
  store i8 39, i8* %arrayidx543, align 1, !dbg !14469, !tbaa !3660
  br label %if.end544, !dbg !14469

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14472, !tbaa !3851
  %inc545 = add i64 %274, 1, !dbg !14472
  store i64 %inc545, i64* %len, align 8, !dbg !14472, !tbaa !3851
  br label %do.end547, !dbg !14472

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14463, !tbaa !3109
  br label %if.end548, !dbg !14463

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14462

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14473

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14474, !tbaa !3851
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14474, !tbaa !3851
  %cmp552 = icmp ult i64 %275, %276, !dbg !14474
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14477

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14474, !tbaa !3660
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14474, !tbaa !2998
  %279 = load i64, i64* %len, align 8, !dbg !14474, !tbaa !3851
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14474, !ctir !9
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14474, !tbaa !3660
  br label %if.end556, !dbg !14474

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14477, !tbaa !3851
  %inc557 = add i64 %280, 1, !dbg !14477
  store i64 %inc557, i64* %len, align 8, !dbg !14477, !tbaa !3851
  br label %do.end559, !dbg !14477

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14478, !tbaa !2998
  %282 = load i64, i64* %i, align 8, !dbg !14479, !tbaa !3851
  %inc560 = add i64 %282, 1, !dbg !14479
  store i64 %inc560, i64* %i, align 8, !dbg !14479, !tbaa !3851
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14478, !ctir !115
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14478, !tbaa !3660
  store i8 %283, i8* %c, align 1, !dbg !14480, !tbaa !3660
  br label %for.cond421, !dbg !14481, !llvm.loop !14482

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14485

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14486

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14487, !tbaa !3109
  %tobool565 = trunc i8 %284 to i1, !dbg !14487
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14489

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14490, !tbaa !3660
  %cmp568 = icmp ne i32 %285, 2, !dbg !14491
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14492

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14493, !tbaa !3109
  %tobool571 = trunc i8 %286 to i1, !dbg !14493
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14494

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14495, !tbaa !2998
  %tobool574 = icmp ne i32* %287, null, !dbg !14495
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14496

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14497, !tbaa !2998
  %289 = load i8, i8* %c, align 1, !dbg !14498, !tbaa !3660
  %conv576 = zext i8 %289 to i64, !dbg !14498
  %div = udiv i64 %conv576, 32, !dbg !14499
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14497, !ctir !1024
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14497, !tbaa !2985
  %291 = load i8, i8* %c, align 1, !dbg !14500, !tbaa !3660
  %conv578 = zext i8 %291 to i64, !dbg !14500
  %rem = urem i64 %conv578, 32, !dbg !14501
  %sh_prom = trunc i64 %rem to i32, !dbg !14502
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14502
  %and580 = and i32 %shr579, 1, !dbg !14503
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14503
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14504

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14505, !tbaa !3109
  %tobool583 = trunc i8 %292 to i1, !dbg !14505
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14506

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14507

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14505

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14508), !dbg !14509
  br label %do.body586, !dbg !14510

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14511, !tbaa !3109
  %tobool587 = trunc i8 %293 to i1, !dbg !14511
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14514

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14511

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14514, !tbaa !3109
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14515, !tbaa !3660
  %cmp590 = icmp eq i32 %294, 2, !dbg !14515
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14515

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14515, !tbaa !3109
  %tobool593 = trunc i8 %295 to i1, !dbg !14515
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14514

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14517

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14519, !tbaa !3851
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14519, !tbaa !3851
  %cmp596 = icmp ult i64 %296, %297, !dbg !14519
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14522

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14519, !tbaa !2998
  %299 = load i64, i64* %len, align 8, !dbg !14519, !tbaa !3851
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14519, !ctir !9
  store i8 39, i8* %arrayidx599, align 1, !dbg !14519, !tbaa !3660
  br label %if.end600, !dbg !14519

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14522, !tbaa !3851
  %inc601 = add i64 %300, 1, !dbg !14522
  store i64 %inc601, i64* %len, align 8, !dbg !14522, !tbaa !3851
  br label %do.end603, !dbg !14522

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14517

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14523, !tbaa !3851
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14523, !tbaa !3851
  %cmp605 = icmp ult i64 %301, %302, !dbg !14523
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14526

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14523, !tbaa !2998
  %304 = load i64, i64* %len, align 8, !dbg !14523, !tbaa !3851
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14523, !ctir !9
  store i8 36, i8* %arrayidx608, align 1, !dbg !14523, !tbaa !3660
  br label %if.end609, !dbg !14523

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14526, !tbaa !3851
  %inc610 = add i64 %305, 1, !dbg !14526
  store i64 %inc610, i64* %len, align 8, !dbg !14526, !tbaa !3851
  br label %do.end612, !dbg !14526

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14517

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14527, !tbaa !3851
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14527, !tbaa !3851
  %cmp614 = icmp ult i64 %306, %307, !dbg !14527
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14530

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14527, !tbaa !2998
  %309 = load i64, i64* %len, align 8, !dbg !14527, !tbaa !3851
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14527, !ctir !9
  store i8 39, i8* %arrayidx617, align 1, !dbg !14527, !tbaa !3660
  br label %if.end618, !dbg !14527

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14530, !tbaa !3851
  %inc619 = add i64 %310, 1, !dbg !14530
  store i64 %inc619, i64* %len, align 8, !dbg !14530, !tbaa !3851
  br label %do.end621, !dbg !14530

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14517, !tbaa !3109
  br label %if.end622, !dbg !14517

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14514

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14531, !tbaa !3851
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14531, !tbaa !3851
  %cmp624 = icmp ult i64 %311, %312, !dbg !14531
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14534

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14531, !tbaa !2998
  %314 = load i64, i64* %len, align 8, !dbg !14531, !tbaa !3851
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14531, !ctir !9
  store i8 92, i8* %arrayidx627, align 1, !dbg !14531, !tbaa !3660
  br label %if.end628, !dbg !14531

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14534, !tbaa !3851
  %inc629 = add i64 %315, 1, !dbg !14534
  store i64 %inc629, i64* %len, align 8, !dbg !14534, !tbaa !3851
  br label %do.end631, !dbg !14534

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14514

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14514

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14535), !dbg !14536
  br label %do.body634, !dbg !14537

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14538, !tbaa !3109
  %tobool635 = trunc i8 %316 to i1, !dbg !14538
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14538

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14538, !tbaa !3109
  %tobool638 = trunc i8 %317 to i1, !dbg !14538
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !14541

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !14542

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !14544, !tbaa !3851
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !14544, !tbaa !3851
  %cmp641 = icmp ult i64 %318, %319, !dbg !14544
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !14547

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !14544, !tbaa !2998
  %321 = load i64, i64* %len, align 8, !dbg !14544, !tbaa !3851
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !14544, !ctir !9
  store i8 39, i8* %arrayidx644, align 1, !dbg !14544, !tbaa !3660
  br label %if.end645, !dbg !14544

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !14547, !tbaa !3851
  %inc646 = add i64 %322, 1, !dbg !14547
  store i64 %inc646, i64* %len, align 8, !dbg !14547, !tbaa !3851
  br label %do.end648, !dbg !14547

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !14542

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !14548, !tbaa !3851
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !14548, !tbaa !3851
  %cmp650 = icmp ult i64 %323, %324, !dbg !14548
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !14551

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !14548, !tbaa !2998
  %326 = load i64, i64* %len, align 8, !dbg !14548, !tbaa !3851
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !14548, !ctir !9
  store i8 39, i8* %arrayidx653, align 1, !dbg !14548, !tbaa !3660
  br label %if.end654, !dbg !14548

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !14551, !tbaa !3851
  %inc655 = add i64 %327, 1, !dbg !14551
  store i64 %inc655, i64* %len, align 8, !dbg !14551, !tbaa !3851
  br label %do.end657, !dbg !14551

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14542, !tbaa !3109
  br label %if.end658, !dbg !14542

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !14541

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !14552

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !14553, !tbaa !3851
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !14553, !tbaa !3851
  %cmp662 = icmp ult i64 %328, %329, !dbg !14553
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !14556

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !14553, !tbaa !3660
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !14553, !tbaa !2998
  %332 = load i64, i64* %len, align 8, !dbg !14553, !tbaa !3851
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !14553, !ctir !9
  store i8 %330, i8* %arrayidx665, align 1, !dbg !14553, !tbaa !3660
  br label %if.end666, !dbg !14553

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !14556, !tbaa !3851
  %inc667 = add i64 %333, 1, !dbg !14556
  store i64 %inc667, i64* %len, align 8, !dbg !14556, !tbaa !3851
  br label %do.end669, !dbg !14556

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !14557, !tbaa !3109
  %tobool670 = trunc i8 %334 to i1, !dbg !14557
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !14559

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14560, !tbaa !3109
  br label %if.end672, !dbg !14561

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !14562

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !14563, !tbaa !3851
  %inc674 = add i64 %335, 1, !dbg !14563
  store i64 %inc674, i64* %i, align 8, !dbg !14563, !tbaa !3851
  br label %for.cond44, !dbg !14564, !llvm.loop !14565

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !14567, !tbaa !3851
  %cmp676 = icmp eq i64 %336, 0, !dbg !14569
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !14570

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !14571, !tbaa !3660
  %cmp679 = icmp eq i32 %337, 2, !dbg !14572
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !14573

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14574, !tbaa !3109
  %tobool682 = trunc i8 %338 to i1, !dbg !14574
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !14575

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !14576

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !14577, !tbaa !3660
  %cmp686 = icmp eq i32 %339, 2, !dbg !14579
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !14580

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14581, !tbaa !3109
  %tobool689 = trunc i8 %340 to i1, !dbg !14581
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !14582

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !14583, !tbaa !3109
  %tobool691 = trunc i8 %341 to i1, !dbg !14583
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !14584

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14585, !tbaa !3109
  %tobool694 = trunc i8 %342 to i1, !dbg !14585
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !14588

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !14589, !tbaa !2998
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !14590, !tbaa !3851
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !14591, !tbaa !2998
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !14592, !tbaa !3851
  %347 = load i32, i32* %flags.addr, align 4, !dbg !14593, !tbaa !2985
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14594, !tbaa !2998
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !14595, !tbaa !2998
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !14596, !tbaa !2998
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !14597
  store i64 %call696, i64* %retval, align 8, !dbg !14598
  br label %return, !dbg !14598

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !14599, !tbaa !3851
  %tobool698 = icmp ne i64 %351, 0, !dbg !14599
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !14601

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !14602, !tbaa !3851
  %tobool700 = icmp ne i64 %352, 0, !dbg !14602
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !14603

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !14604, !tbaa !3851
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !14606, !tbaa !3851
  store i64 0, i64* %len, align 8, !dbg !14607, !tbaa !3851
  br label %process_input, !dbg !14608

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !14609

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !14610, !tbaa !2998
  %tobool705 = icmp ne i8* %354, null, !dbg !14610
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !14612

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14613, !tbaa !3109
  %tobool707 = trunc i8 %355 to i1, !dbg !14613
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !14614

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !14615

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !14616, !tbaa !2998
  %357 = load i8, i8* %356, align 1, !dbg !14619, !tbaa !3660, !ctir !116
  %tobool710 = icmp ne i8 %357, 0, !dbg !14620
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14620

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14621

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14622, !tbaa !3851
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14622, !tbaa !3851
  %cmp713 = icmp ult i64 %358, %359, !dbg !14622
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !14625

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14622, !tbaa !2998
  %361 = load i8, i8* %360, align 1, !dbg !14622, !tbaa !3660, !ctir !116
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14622, !tbaa !2998
  %363 = load i64, i64* %len, align 8, !dbg !14622, !tbaa !3851
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14622, !ctir !9
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14622, !tbaa !3660
  br label %if.end717, !dbg !14622

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !14625, !tbaa !3851
  %inc718 = add i64 %364, 1, !dbg !14625
  store i64 %inc718, i64* %len, align 8, !dbg !14625, !tbaa !3851
  br label %do.end720, !dbg !14625

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !14625

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !14626, !tbaa !2998
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !14626
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !14626, !tbaa !2998
  br label %for.cond709, !dbg !14627, !llvm.loop !14628

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !14629

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !14630, !tbaa !3851
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !14632, !tbaa !3851
  %cmp725 = icmp ult i64 %366, %367, !dbg !14633
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !14634

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !14635, !tbaa !2998
  %369 = load i64, i64* %len, align 8, !dbg !14636, !tbaa !3851
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !14635, !ctir !9
  store i8 0, i8* %arrayidx728, align 1, !dbg !14637, !tbaa !3660
  br label %if.end729, !dbg !14635

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !14638, !tbaa !3851
  store i64 %370, i64* %retval, align 8, !dbg !14639
  br label %return, !dbg !14639

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !14640), !dbg !14641
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !14642, !tbaa !3660
  %cmp730 = icmp eq i32 %371, 2, !dbg !14644
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !14645

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !14646, !tbaa !3109
  %tobool733 = trunc i8 %372 to i1, !dbg !14646
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !14647

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !14648, !tbaa !3660
  br label %if.end736, !dbg !14649

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !14650, !tbaa !2998
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !14651, !tbaa !3851
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !14652, !tbaa !2998
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !14653, !tbaa !3851
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !14654, !tbaa !3660
  %378 = load i32, i32* %flags.addr, align 4, !dbg !14655, !tbaa !2985
  %and737 = and i32 %378, -3, !dbg !14656
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !14657, !tbaa !2998
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !14658, !tbaa !2998
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !14659
  store i64 %call738, i64* %retval, align 8, !dbg !14660
  br label %return, !dbg !14660

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !14661
  ret i64 %381, !dbg !14661
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !14662 !ctir !1044 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !115
  %locale_code = alloca i8*, align 8, !ctir !115
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !14663, metadata !DIExpression()), !dbg !14664
  store i32 %s, i32* %s.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14665, metadata !DIExpression()), !dbg !14666
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !14667, metadata !DIExpression()), !dbg !14668
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !14669, !tbaa !2998
  %call = call i8* @gettext(i8* %0) #10, !dbg !14669
  store i8* %call, i8** %translation, align 8, !dbg !14668, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !14670, metadata !DIExpression()), !dbg !14671
  %1 = load i8*, i8** %translation, align 8, !dbg !14672, !tbaa !2998
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !14674, !tbaa !2998
  %cmp = icmp ne i8* %1, %2, !dbg !14675
  br i1 %cmp, label %if.then, label %if.end, !dbg !14676

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !14677, !tbaa !2998
  store i8* %3, i8** %retval, align 8, !dbg !14678
  br label %return, !dbg !14678

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !14679
  store i8* %call1, i8** %locale_code, align 8, !dbg !14680, !tbaa !2998
  %4 = load i8*, i8** %locale_code, align 8, !dbg !14681, !tbaa !2998
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.315, i64 0, i64 0)) #14, !dbg !14681
  %cmp3 = icmp eq i32 %call2, 0, !dbg !14681
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14683

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !14684, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !14684, !ctir !115
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14684, !tbaa !3660
  %conv = sext i8 %6 to i32, !dbg !14684
  %cmp5 = icmp eq i32 %conv, 96, !dbg !14685
  %7 = zext i1 %cmp5 to i64, !dbg !14684
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.316, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.317, i64 0, i64 0), !dbg !14684
  store i8* %cond, i8** %retval, align 8, !dbg !14686
  br label %return, !dbg !14686

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !14687, !tbaa !2998
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.318, i64 0, i64 0)) #14, !dbg !14687
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14687
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14689

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !14690, !tbaa !2998
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !14690, !ctir !115
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !14690, !tbaa !3660
  %conv13 = sext i8 %10 to i32, !dbg !14690
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !14691
  %11 = zext i1 %cmp14 to i64, !dbg !14690
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.319, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.320, i64 0, i64 0), !dbg !14690
  store i8* %cond16, i8** %retval, align 8, !dbg !14692
  br label %return, !dbg !14692

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !14693, !tbaa !3660
  %cmp18 = icmp eq i32 %12, 9, !dbg !14694
  %13 = zext i1 %cmp18 to i64, !dbg !14693
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), !dbg !14693
  store i8* %cond20, i8** %retval, align 8, !dbg !14695
  br label %return, !dbg !14695

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14696
  ret i8* %14, !dbg !14696
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14697 !ctir !977 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14698, metadata !DIExpression()), !dbg !14699
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14700, metadata !DIExpression()), !dbg !14701
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14702, metadata !DIExpression()), !dbg !14703
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14704, !tbaa !2998
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14705, !tbaa !3851
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14706, !tbaa !2998
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !14707
  ret i8* %call, !dbg !14708
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !14709 !ctir !979 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !964
  %e = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !55
  %buf = alloca i8*, align 8, !ctir !9
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14710, metadata !DIExpression()), !dbg !14711
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14712, metadata !DIExpression()), !dbg !14713
  store i64* %size, i64** %size.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !14714, metadata !DIExpression()), !dbg !14715
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14716, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14718, metadata !DIExpression()), !dbg !14719
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14720, !tbaa !2998
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14720
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14720

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14721, !tbaa !2998
  br label %cond.end, !dbg !14720

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14720
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14719, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14722, metadata !DIExpression()), !dbg !14723
  %call = call i32* @__errno_location() #15, !dbg !14724
  %2 = load i32, i32* %call, align 4, !dbg !14724, !tbaa !2985, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !14723, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14725, metadata !DIExpression()), !dbg !14726
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14727, !tbaa !2998
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !14728, !ctir !965
  %4 = load i32, i32* %flags1, align 4, !dbg !14728, !tbaa !13716, !ctir !7
  %5 = load i64*, i64** %size.addr, align 8, !dbg !14729, !tbaa !2998
  %tobool2 = icmp ne i64* %5, null, !dbg !14729
  %6 = zext i1 %tobool2 to i64, !dbg !14729
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !14729
  %or = or i32 %4, %cond3, !dbg !14730
  store i32 %or, i32* %flags, align 4, !dbg !14726, !tbaa !2985
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !14731, metadata !DIExpression()), !dbg !14732
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14733, !tbaa !2998
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !14734, !tbaa !3851
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14735, !tbaa !2998
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !14736, !ctir !965
  %10 = load i32, i32* %style, align 8, !dbg !14736, !tbaa !13648, !ctir !928
  %11 = load i32, i32* %flags, align 4, !dbg !14737, !tbaa !2985
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14738, !tbaa !2998
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !14739, !ctir !965
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14738
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14740, !tbaa !2998
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !14741, !ctir !965
  %14 = load i8*, i8** %left_quote, align 8, !dbg !14741, !tbaa !13749, !ctir !115
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14742, !tbaa !2998
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !14743, !ctir !965
  %16 = load i8*, i8** %right_quote, align 8, !dbg !14743, !tbaa !13754, !ctir !115
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !14744
  %add = add i64 %call4, 1, !dbg !14745
  store i64 %add, i64* %bufsize, align 8, !dbg !14732, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14746, metadata !DIExpression()), !dbg !14747
  %17 = load i64, i64* %bufsize, align 8, !dbg !14748, !tbaa !3851
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !14749
  store i8* %call5, i8** %buf, align 8, !dbg !14747, !tbaa !2998
  %18 = load i8*, i8** %buf, align 8, !dbg !14750, !tbaa !2998
  %19 = load i64, i64* %bufsize, align 8, !dbg !14751, !tbaa !3851
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !14752, !tbaa !2998
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !14753, !tbaa !3851
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14754, !tbaa !2998
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !14755, !ctir !965
  %23 = load i32, i32* %style6, align 8, !dbg !14755, !tbaa !13648, !ctir !928
  %24 = load i32, i32* %flags, align 4, !dbg !14756, !tbaa !2985
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14757, !tbaa !2998
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !14758, !ctir !965
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !14757
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14759, !tbaa !2998
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !14760, !ctir !965
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !14760, !tbaa !13749, !ctir !115
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14761, !tbaa !2998
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !14762, !ctir !965
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !14762, !tbaa !13754, !ctir !115
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !14763
  %30 = load i32, i32* %e, align 4, !dbg !14764, !tbaa !2985
  %call12 = call i32* @__errno_location() #15, !dbg !14765
  store i32 %30, i32* %call12, align 4, !dbg !14766, !tbaa !2985, !ctir !7
  %31 = load i64*, i64** %size.addr, align 8, !dbg !14767, !tbaa !2998
  %tobool13 = icmp ne i64* %31, null, !dbg !14767
  br i1 %tobool13, label %if.then, label %if.end, !dbg !14769

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !14770, !tbaa !3851
  %sub = sub i64 %32, 1, !dbg !14771
  %33 = load i64*, i64** %size.addr, align 8, !dbg !14772, !tbaa !2998
  store i64 %sub, i64* %33, align 8, !dbg !14773, !tbaa !3851, !ctir !55
  br label %if.end, !dbg !14774

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !14775, !tbaa !2998
  ret i8* %34, !dbg !14776
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !14777 !ctir !134 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !981
  %i = alloca i32, align 4, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14778, metadata !DIExpression()), !dbg !14779
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14780, !tbaa !2998
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !14779, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14781, metadata !DIExpression()), !dbg !14782
  store i32 1, i32* %i, align 4, !dbg !14783, !tbaa !2985
  br label %for.cond, !dbg !14785

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14786, !tbaa !2985
  %2 = load i32, i32* @nslots, align 4, !dbg !14788, !tbaa !2985
  %cmp = icmp slt i32 %1, %2, !dbg !14789
  br i1 %cmp, label %for.body, label %for.end, !dbg !14790

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14791, !tbaa !2998
  %4 = load i32, i32* %i, align 4, !dbg !14792, !tbaa !2985
  %idxprom = sext i32 %4 to i64, !dbg !14791
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !14791, !ctir !981
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !14793, !ctir !982
  %5 = load i8*, i8** %val, align 8, !dbg !14793, !tbaa !14794, !ctir !9
  call void @free(i8* %5) #10, !dbg !14796
  br label %for.inc, !dbg !14796

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14797, !tbaa !2985
  %inc = add nsw i32 %6, 1, !dbg !14797
  store i32 %inc, i32* %i, align 4, !dbg !14797, !tbaa !2985
  br label %for.cond, !dbg !14798, !llvm.loop !14799

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14801, !tbaa !2998
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !14801, !ctir !981
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !14803, !ctir !982
  %8 = load i8*, i8** %val2, align 8, !dbg !14803, !tbaa !14794, !ctir !9
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14804
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14805

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14806, !tbaa !2998
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !14806, !ctir !981
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !14808, !ctir !982
  %10 = load i8*, i8** %val5, align 8, !dbg !14808, !tbaa !14794, !ctir !9
  call void @free(i8* %10) #10, !dbg !14809
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !14810, !tbaa !14811, !ctir !55
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !14812, !tbaa !14794, !ctir !9
  br label %if.end, !dbg !14813

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14814, !tbaa !2998
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !14816
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14817

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14818, !tbaa !2998
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !14818
  call void @free(i8* %13) #10, !dbg !14820
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !14821, !tbaa !2998
  br label %if.end8, !dbg !14822

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !14823, !tbaa !2985
  ret void, !dbg !14824
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !14825 !ctir !986 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14826, metadata !DIExpression()), !dbg !14827
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14828, metadata !DIExpression()), !dbg !14829
  %0 = load i32, i32* %n.addr, align 4, !dbg !14830, !tbaa !2985
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14831, !tbaa !2998
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !14832
  ret i8* %call, !dbg !14833
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !14834 !ctir !1046 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %sv = alloca %struct.slotvec*, align 8, !ctir !981
  %preallocated = alloca i8, align 1, !ctir !120
  %nmax = alloca i32, align 4, !ctir !7
  %size = alloca i64, align 8, !ctir !55
  %val = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %qsize = alloca i64, align 8, !ctir !55
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14835, metadata !DIExpression()), !dbg !14836
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14837, metadata !DIExpression()), !dbg !14838
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14839, metadata !DIExpression()), !dbg !14840
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !14841, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14843, metadata !DIExpression()), !dbg !14844
  %call = call i32* @__errno_location() #15, !dbg !14845
  %0 = load i32, i32* %call, align 4, !dbg !14845, !tbaa !2985, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !14844, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14846, metadata !DIExpression()), !dbg !14847
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14848, !tbaa !2998
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !14847, !tbaa !2998
  %2 = load i32, i32* %n.addr, align 4, !dbg !14849, !tbaa !2985
  %cmp = icmp slt i32 %2, 0, !dbg !14851
  br i1 %cmp, label %if.then, label %if.end, !dbg !14852

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14853
  unreachable, !dbg !14853

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !14854, !tbaa !2985
  %4 = load i32, i32* %n.addr, align 4, !dbg !14856, !tbaa !2985
  %cmp1 = icmp sle i32 %3, %4, !dbg !14857
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !14858

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !14859, metadata !DIExpression()), !dbg !14861
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14862, !tbaa !2998
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !14863
  %frombool = zext i1 %cmp3 to i8, !dbg !14861
  store i8 %frombool, i8* %preallocated, align 1, !dbg !14861, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !14864, metadata !DIExpression()), !dbg !14865
  store i32 2147483646, i32* %nmax, align 4, !dbg !14865, !tbaa !2985
  %6 = load i32, i32* %nmax, align 4, !dbg !14866, !tbaa !2985
  %7 = load i32, i32* %n.addr, align 4, !dbg !14868, !tbaa !2985
  %cmp4 = icmp slt i32 %6, %7, !dbg !14869
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14870

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #16, !dbg !14871
  unreachable, !dbg !14871

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !14872, !tbaa !3109
  %tobool = trunc i8 %8 to i1, !dbg !14872
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14872

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !14872

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14873, !tbaa !2998
  br label %cond.end, !dbg !14872

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !14872
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !14872
  %11 = load i32, i32* %n.addr, align 4, !dbg !14874, !tbaa !2985
  %add = add nsw i32 %11, 1, !dbg !14875
  %conv = sext i32 %add to i64, !dbg !14876
  %mul = mul i64 %conv, 16, !dbg !14877
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !14878
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !14878
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !14879, !tbaa !2998
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !14880, !tbaa !2998
  %13 = load i8, i8* %preallocated, align 1, !dbg !14881, !tbaa !3109
  %tobool8 = trunc i8 %13 to i1, !dbg !14881
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14883

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14884, !tbaa !2998
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !14885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !14885, !tbaa.struct !14886
  br label %if.end10, !dbg !14887

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14888, !tbaa !2998
  %17 = load i32, i32* @nslots, align 4, !dbg !14889, !tbaa !2985
  %idx.ext = sext i32 %17 to i64, !dbg !14890
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !14890
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !14891
  %19 = load i32, i32* %n.addr, align 4, !dbg !14892, !tbaa !2985
  %add11 = add nsw i32 %19, 1, !dbg !14893
  %20 = load i32, i32* @nslots, align 4, !dbg !14894, !tbaa !2985
  %sub = sub nsw i32 %add11, %20, !dbg !14895
  %conv12 = sext i32 %sub to i64, !dbg !14896
  %mul13 = mul i64 %conv12, 16, !dbg !14897
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !14891
  %21 = load i32, i32* %n.addr, align 4, !dbg !14898, !tbaa !2985
  %add14 = add nsw i32 %21, 1, !dbg !14899
  store i32 %add14, i32* @nslots, align 4, !dbg !14900, !tbaa !2985
  br label %if.end15, !dbg !14901

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14902, metadata !DIExpression()), !dbg !14904
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14905, !tbaa !2998
  %23 = load i32, i32* %n.addr, align 4, !dbg !14906, !tbaa !2985
  %idxprom = sext i32 %23 to i64, !dbg !14905
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !14905, !ctir !981
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !14907, !ctir !982
  %24 = load i64, i64* %size16, align 8, !dbg !14907, !tbaa !14811, !ctir !55
  store i64 %24, i64* %size, align 8, !dbg !14904, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %val, metadata !14908, metadata !DIExpression()), !dbg !14909
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14910, !tbaa !2998
  %26 = load i32, i32* %n.addr, align 4, !dbg !14911, !tbaa !2985
  %idxprom17 = sext i32 %26 to i64, !dbg !14910
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !14910, !ctir !981
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !14912, !ctir !982
  %27 = load i8*, i8** %val19, align 8, !dbg !14912, !tbaa !14794, !ctir !9
  store i8* %27, i8** %val, align 8, !dbg !14909, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14913, metadata !DIExpression()), !dbg !14914
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14915, !tbaa !2998
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !14916, !ctir !965
  %29 = load i32, i32* %flags20, align 4, !dbg !14916, !tbaa !13716, !ctir !7
  %or = or i32 %29, 1, !dbg !14917
  store i32 %or, i32* %flags, align 4, !dbg !14914, !tbaa !2985
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !14918, metadata !DIExpression()), !dbg !14919
  %30 = load i8*, i8** %val, align 8, !dbg !14920, !tbaa !2998
  %31 = load i64, i64* %size, align 8, !dbg !14921, !tbaa !3851
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !14922, !tbaa !2998
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !14923, !tbaa !3851
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14924, !tbaa !2998
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !14925, !ctir !965
  %35 = load i32, i32* %style, align 8, !dbg !14925, !tbaa !13648, !ctir !928
  %36 = load i32, i32* %flags, align 4, !dbg !14926, !tbaa !2985
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14927, !tbaa !2998
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !14928, !ctir !965
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14927
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14929, !tbaa !2998
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !14930, !ctir !965
  %39 = load i8*, i8** %left_quote, align 8, !dbg !14930, !tbaa !13749, !ctir !115
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14931, !tbaa !2998
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !14932, !ctir !965
  %41 = load i8*, i8** %right_quote, align 8, !dbg !14932, !tbaa !13754, !ctir !115
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !14933
  store i64 %call21, i64* %qsize, align 8, !dbg !14919, !tbaa !3851
  %42 = load i64, i64* %size, align 8, !dbg !14934, !tbaa !3851
  %43 = load i64, i64* %qsize, align 8, !dbg !14936, !tbaa !3851
  %cmp22 = icmp ule i64 %42, %43, !dbg !14937
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !14938

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !14939, !tbaa !3851
  %add25 = add i64 %44, 1, !dbg !14941
  store i64 %add25, i64* %size, align 8, !dbg !14942, !tbaa !3851
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14943, !tbaa !2998
  %46 = load i32, i32* %n.addr, align 4, !dbg !14944, !tbaa !2985
  %idxprom26 = sext i32 %46 to i64, !dbg !14943
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !14943, !ctir !981
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !14945, !ctir !982
  store i64 %add25, i64* %size28, align 8, !dbg !14946, !tbaa !14811, !ctir !55
  %47 = load i8*, i8** %val, align 8, !dbg !14947, !tbaa !2998
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14949
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14950

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !14951, !tbaa !2998
  call void @free(i8* %48) #10, !dbg !14952
  br label %if.end32, !dbg !14952

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !14953, !tbaa !3851
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !14954
  store i8* %call33, i8** %val, align 8, !dbg !14955, !tbaa !2998
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14956, !tbaa !2998
  %51 = load i32, i32* %n.addr, align 4, !dbg !14957, !tbaa !2985
  %idxprom34 = sext i32 %51 to i64, !dbg !14956
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !14956, !ctir !981
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !14958, !ctir !982
  store i8* %call33, i8** %val36, align 8, !dbg !14959, !tbaa !14794, !ctir !9
  %52 = load i8*, i8** %val, align 8, !dbg !14960, !tbaa !2998
  %53 = load i64, i64* %size, align 8, !dbg !14961, !tbaa !3851
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !14962, !tbaa !2998
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !14963, !tbaa !3851
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14964, !tbaa !2998
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !14965, !ctir !965
  %57 = load i32, i32* %style37, align 8, !dbg !14965, !tbaa !13648, !ctir !928
  %58 = load i32, i32* %flags, align 4, !dbg !14966, !tbaa !2985
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14967, !tbaa !2998
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !14968, !ctir !965
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !14967
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14969, !tbaa !2998
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !14970, !ctir !965
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !14970, !tbaa !13749, !ctir !115
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14971, !tbaa !2998
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !14972, !ctir !965
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !14972, !tbaa !13754, !ctir !115
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !14973
  br label %if.end43, !dbg !14974

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !14975, !tbaa !2985
  %call44 = call i32* @__errno_location() #15, !dbg !14976
  store i32 %64, i32* %call44, align 4, !dbg !14977, !tbaa !2985, !ctir !7
  %65 = load i8*, i8** %val, align 8, !dbg !14978, !tbaa !2998
  ret i8* %65, !dbg !14979
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14980 !ctir !988 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14981, metadata !DIExpression()), !dbg !14982
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14983, metadata !DIExpression()), !dbg !14984
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14985, metadata !DIExpression()), !dbg !14986
  %0 = load i32, i32* %n.addr, align 4, !dbg !14987, !tbaa !2985
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14988, !tbaa !2998
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14989, !tbaa !3851
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !14990
  ret i8* %call, !dbg !14991
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !14992 !ctir !990 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14993, metadata !DIExpression()), !dbg !14994
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14995, !tbaa !2998
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !14996
  ret i8* %call, !dbg !14997
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !14998 !ctir !992 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14999, metadata !DIExpression()), !dbg !15000
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15001, metadata !DIExpression()), !dbg !15002
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15003, !tbaa !2998
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15004, !tbaa !3851
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !15005
  ret i8* %call, !dbg !15006
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !15007 !ctir !994 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !965
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15008, metadata !DIExpression()), !dbg !15009
  store i32 %s, i32* %s.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15010, metadata !DIExpression()), !dbg !15011
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15012, metadata !DIExpression()), !dbg !15013
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15014, metadata !DIExpression()), !dbg !15015
  %0 = load i32, i32* %s.addr, align 4, !dbg !15016, !tbaa !3660
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15017
  %1 = load i32, i32* %n.addr, align 4, !dbg !15018, !tbaa !2985
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15019, !tbaa !2998
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !15020
  ret i8* %call, !dbg !15021
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !15022 !ctir !1048 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !15023, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !15025, metadata !DIExpression()), !dbg !15026
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !15026
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15026
  %1 = load i32, i32* %style.addr, align 4, !dbg !15027, !tbaa !3660
  %cmp = icmp eq i32 %1, 10, !dbg !15029
  br i1 %cmp, label %if.then, label %if.end, !dbg !15030

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15031
  unreachable, !dbg !15031

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !15032, !tbaa !3660
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !15033, !ctir !953
  store i32 %2, i32* %style1, align 8, !dbg !15034, !tbaa !13648, !ctir !928
  ret void, !dbg !15035
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15036 !ctir !996 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !965
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15037, metadata !DIExpression()), !dbg !15038
  store i32 %s, i32* %s.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15039, metadata !DIExpression()), !dbg !15040
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15041, metadata !DIExpression()), !dbg !15042
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15043, metadata !DIExpression()), !dbg !15044
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15045, metadata !DIExpression()), !dbg !15046
  %0 = load i32, i32* %s.addr, align 4, !dbg !15047, !tbaa !3660
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15048
  %1 = load i32, i32* %n.addr, align 4, !dbg !15049, !tbaa !2985
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15050, !tbaa !2998
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15051, !tbaa !3851
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !15052
  ret i8* %call, !dbg !15053
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !15054 !ctir !998 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15055, metadata !DIExpression()), !dbg !15056
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15057, metadata !DIExpression()), !dbg !15058
  %0 = load i32, i32* %s.addr, align 4, !dbg !15059, !tbaa !3660
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15060, !tbaa !2998
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !15061
  ret i8* %call, !dbg !15062
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15063 !ctir !1000 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15064, metadata !DIExpression()), !dbg !15065
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15066, metadata !DIExpression()), !dbg !15067
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15068, metadata !DIExpression()), !dbg !15069
  %0 = load i32, i32* %s.addr, align 4, !dbg !15070, !tbaa !3660
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15071, !tbaa !2998
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15072, !tbaa !3851
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15073
  ret i8* %call, !dbg !15074
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15075 !ctir !1002 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !953
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15076, metadata !DIExpression()), !dbg !15077
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15078, metadata !DIExpression()), !dbg !15079
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3660
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15080, metadata !DIExpression()), !dbg !15081
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15082, metadata !DIExpression()), !dbg !15083
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15084, !tbaa.struct !15085
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15086, !tbaa !3660
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15087
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15088, !tbaa !2998
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15089, !tbaa !3851
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15090
  ret i8* %call1, !dbg !15091
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15092 !ctir !1004 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15093, metadata !DIExpression()), !dbg !15094
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3660
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15095, metadata !DIExpression()), !dbg !15096
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15097, !tbaa !2998
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15098, !tbaa !3660
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15099
  ret i8* %call, !dbg !15100
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15101 !ctir !990 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15102, metadata !DIExpression()), !dbg !15103
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15104, !tbaa !2998
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15105
  ret i8* %call, !dbg !15106
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15107 !ctir !992 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15108, metadata !DIExpression()), !dbg !15109
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15110, metadata !DIExpression()), !dbg !15111
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15112, !tbaa !2998
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15113, !tbaa !3851
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15114
  ret i8* %call, !dbg !15115
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15116 !ctir !994 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !953
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15117, metadata !DIExpression()), !dbg !15118
  store i32 %s, i32* %s.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15119, metadata !DIExpression()), !dbg !15120
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15121, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15123, metadata !DIExpression()), !dbg !15124
  %0 = load i32, i32* %s.addr, align 4, !dbg !15125, !tbaa !3660
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15126
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15126
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15126, !tbaa.struct !15085
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15127
  %3 = load i32, i32* %n.addr, align 4, !dbg !15128, !tbaa !2985
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15129, !tbaa !2998
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15130
  ret i8* %call1, !dbg !15131
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15132 !ctir !1006 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15133, metadata !DIExpression()), !dbg !15134
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15135, metadata !DIExpression()), !dbg !15136
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15137, metadata !DIExpression()), !dbg !15138
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15139, metadata !DIExpression()), !dbg !15140
  %0 = load i32, i32* %n.addr, align 4, !dbg !15141, !tbaa !2985
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15142, !tbaa !2998
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15143, !tbaa !2998
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15144, !tbaa !2998
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15145
  ret i8* %call, !dbg !15146
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15147 !ctir !1008 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !953
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15148, metadata !DIExpression()), !dbg !15149
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15150, metadata !DIExpression()), !dbg !15151
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15152, metadata !DIExpression()), !dbg !15153
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15154, metadata !DIExpression()), !dbg !15155
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15156, metadata !DIExpression()), !dbg !15157
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15158, metadata !DIExpression()), !dbg !15159
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15160, !tbaa.struct !15085
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15161, !tbaa !2998
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15162, !tbaa !2998
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15163
  %3 = load i32, i32* %n.addr, align 4, !dbg !15164, !tbaa !2985
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15165, !tbaa !2998
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15166, !tbaa !3851
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15167
  ret i8* %call, !dbg !15168
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15169 !ctir !1010 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15170, metadata !DIExpression()), !dbg !15171
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15172, metadata !DIExpression()), !dbg !15173
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15174, metadata !DIExpression()), !dbg !15175
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15176, !tbaa !2998
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15177, !tbaa !2998
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15178, !tbaa !2998
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15179
  ret i8* %call, !dbg !15180
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15181 !ctir !1012 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15182, metadata !DIExpression()), !dbg !15183
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15184, metadata !DIExpression()), !dbg !15185
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15186, metadata !DIExpression()), !dbg !15187
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15188, metadata !DIExpression()), !dbg !15189
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15190, !tbaa !2998
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15191, !tbaa !2998
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15192, !tbaa !2998
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15193, !tbaa !3851
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15194
  ret i8* %call, !dbg !15195
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15196 !ctir !1014 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15197, metadata !DIExpression()), !dbg !15198
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15199, metadata !DIExpression()), !dbg !15200
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15201, metadata !DIExpression()), !dbg !15202
  %0 = load i32, i32* %n.addr, align 4, !dbg !15203, !tbaa !2985
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15204, !tbaa !2998
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15205, !tbaa !3851
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15206
  ret i8* %call, !dbg !15207
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15208 !ctir !1016 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15209, metadata !DIExpression()), !dbg !15210
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15211, metadata !DIExpression()), !dbg !15212
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15213, !tbaa !2998
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15214, !tbaa !3851
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15215
  ret i8* %call, !dbg !15216
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15217 !ctir !1018 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15218, metadata !DIExpression()), !dbg !15219
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15220, metadata !DIExpression()), !dbg !15221
  %0 = load i32, i32* %n.addr, align 4, !dbg !15222, !tbaa !2985
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15223, !tbaa !2998
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15224
  ret i8* %call, !dbg !15225
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15226 !ctir !1020 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15227, metadata !DIExpression()), !dbg !15228
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15229, !tbaa !2998
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15230
  ret i8* %call, !dbg !15231
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15232 !ctir !1828 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !7
  %err = alloca i32, align 4, !ctir !7
  %src_len = alloca i64, align 8, !ctir !55
  %dst_len = alloca i64, align 8, !ctir !55
  %src_temp = alloca i8*, align 8, !ctir !9
  %dst_temp = alloca i8*, align 8, !ctir !9
  %src_slash = alloca i8, align 1, !ctir !120
  %dst_slash = alloca i8, align 1, !ctir !120
  %rename_errno = alloca i32, align 4, !ctir !7
  %src_st = alloca %struct.stat, align 8, !ctir !15234
  %dst_st = alloca %struct.stat, align 8, !ctir !15234
  %dst_found_nonexistent = alloca i8, align 1, !ctir !120
  store i32 %fd1, i32* %fd1.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15255, metadata !DIExpression()), !dbg !15256
  store i8* %src, i8** %src.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15257, metadata !DIExpression()), !dbg !15258
  store i32 %fd2, i32* %fd2.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15259, metadata !DIExpression()), !dbg !15260
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15261, metadata !DIExpression()), !dbg !15262
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15263, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15265, metadata !DIExpression()), !dbg !15266
  store i32 -1, i32* %ret_val, align 4, !dbg !15266, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15267, metadata !DIExpression()), !dbg !15268
  store i32 22, i32* %err, align 4, !dbg !15268, !tbaa !2985
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15269, !tbaa !2985
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15270, !tbaa !2998
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15271, !tbaa !2985
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15272, !tbaa !2998
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15273, !tbaa !2985
  %call = call i32 @renameat2(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #10, !dbg !15274
  store i32 %call, i32* %ret_val, align 4, !dbg !15275, !tbaa !2985
  %call1 = call i32* @__errno_location() #15, !dbg !15276
  %5 = load i32, i32* %call1, align 4, !dbg !15276, !tbaa !2985, !ctir !7
  store i32 %5, i32* %err, align 4, !dbg !15277, !tbaa !2985
  %6 = load i32, i32* %ret_val, align 4, !dbg !15278, !tbaa !2985
  %cmp = icmp slt i32 %6, 0, !dbg !15280
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15281

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15282, !tbaa !2985
  %cmp2 = icmp eq i32 %7, 22, !dbg !15283
  br i1 %cmp2, label %if.end, label %lor.lhs.false, !dbg !15284

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15285, !tbaa !2985
  %cmp3 = icmp eq i32 %8, 38, !dbg !15286
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !15287

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15288, !tbaa !2985
  %cmp5 = icmp eq i32 %9, 95, !dbg !15289
  br i1 %cmp5, label %if.end, label %if.then, !dbg !15290

if.then:                                          ; preds = %lor.lhs.false4, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15291, !tbaa !2985
  store i32 %10, i32* %retval, align 4, !dbg !15292
  br label %return, !dbg !15292

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15293, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15296, metadata !DIExpression()), !dbg !15297
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15298, metadata !DIExpression()), !dbg !15299
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15300, !tbaa !2998
  store i8* %11, i8** %src_temp, align 8, !dbg !15299, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15301, metadata !DIExpression()), !dbg !15302
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15303, !tbaa !2998
  store i8* %12, i8** %dst_temp, align 8, !dbg !15302, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15304, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15306, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15308, metadata !DIExpression()), !dbg !15309
  store i32 20, i32* %rename_errno, align 4, !dbg !15309, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15310, metadata !DIExpression()), !dbg !15311
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15312, metadata !DIExpression()), !dbg !15313
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15314, metadata !DIExpression()), !dbg !15315
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15315, !tbaa !3109
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15316, !tbaa !2985
  %cmp6 = icmp ne i32 %13, 0, !dbg !15318
  br i1 %cmp6, label %if.then7, label %if.end23, !dbg !15319

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15320, !tbaa !2985
  %and = and i32 %14, -2, !dbg !15323
  %tobool = icmp ne i32 %and, 0, !dbg !15323
  br i1 %tobool, label %if.then8, label %if.else, !dbg !15324

if.then8:                                         ; preds = %if.then7
  %call9 = call i32 @errno_fail(i32 95), !dbg !15325
  store i32 %call9, i32* %retval, align 4, !dbg !15326
  br label %return, !dbg !15326

if.else:                                          ; preds = %if.then7
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15327, !tbaa !2985
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15330, !tbaa !2998
  %call10 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15331
  %cmp11 = icmp eq i32 %call10, 0, !dbg !15332
  br i1 %cmp11, label %if.then15, label %lor.lhs.false12, !dbg !15333

lor.lhs.false12:                                  ; preds = %if.else
  %call13 = call i32* @__errno_location() #15, !dbg !15334
  %17 = load i32, i32* %call13, align 4, !dbg !15334, !tbaa !2985, !ctir !7
  %cmp14 = icmp eq i32 %17, 75, !dbg !15335
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !15336

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  %call16 = call i32 @errno_fail(i32 17), !dbg !15337
  store i32 %call16, i32* %retval, align 4, !dbg !15338
  br label %return, !dbg !15338

if.end17:                                         ; preds = %lor.lhs.false12
  %call18 = call i32* @__errno_location() #15, !dbg !15339
  %18 = load i32, i32* %call18, align 4, !dbg !15339, !tbaa !2985, !ctir !7
  %cmp19 = icmp ne i32 %18, 2, !dbg !15341
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !15342

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !15343
  br label %return, !dbg !15343

if.end21:                                         ; preds = %if.end17
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15344, !tbaa !3109
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  br label %if.end23, !dbg !15345

if.end23:                                         ; preds = %if.end22, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15346, !tbaa !2998
  %call24 = call i64 @strlen(i8* %19) #14, !dbg !15347
  store i64 %call24, i64* %src_len, align 8, !dbg !15348, !tbaa !3851
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15349, !tbaa !2998
  %call25 = call i64 @strlen(i8* %20) #14, !dbg !15350
  store i64 %call25, i64* %dst_len, align 8, !dbg !15351, !tbaa !3851
  %21 = load i64, i64* %src_len, align 8, !dbg !15352, !tbaa !3851
  %tobool26 = icmp ne i64 %21, 0, !dbg !15352
  br i1 %tobool26, label %lor.lhs.false27, label %if.then29, !dbg !15354

lor.lhs.false27:                                  ; preds = %if.end23
  %22 = load i64, i64* %dst_len, align 8, !dbg !15355, !tbaa !3851
  %tobool28 = icmp ne i64 %22, 0, !dbg !15355
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !15356

if.then29:                                        ; preds = %lor.lhs.false27, %if.end23
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15357, !tbaa !2985
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15358, !tbaa !2998
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15359, !tbaa !2985
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15360, !tbaa !2998
  %call30 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #10, !dbg !15361
  store i32 %call30, i32* %retval, align 4, !dbg !15362
  br label %return, !dbg !15362

if.end31:                                         ; preds = %lor.lhs.false27
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15363, !tbaa !2998
  %28 = load i64, i64* %src_len, align 8, !dbg !15364, !tbaa !3851
  %sub = sub i64 %28, 1, !dbg !15365
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15363, !ctir !115
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15363, !tbaa !3660
  %conv = sext i8 %29 to i32, !dbg !15363
  %cmp32 = icmp eq i32 %conv, 47, !dbg !15366
  %frombool = zext i1 %cmp32 to i8, !dbg !15367
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15367, !tbaa !3109
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15368, !tbaa !2998
  %31 = load i64, i64* %dst_len, align 8, !dbg !15369, !tbaa !3851
  %sub34 = sub i64 %31, 1, !dbg !15370
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %sub34, !dbg !15368, !ctir !115
  %32 = load i8, i8* %arrayidx35, align 1, !dbg !15368, !tbaa !3660
  %conv36 = sext i8 %32 to i32, !dbg !15368
  %cmp37 = icmp eq i32 %conv36, 47, !dbg !15371
  %frombool39 = zext i1 %cmp37 to i8, !dbg !15372
  store i8 %frombool39, i8* %dst_slash, align 1, !dbg !15372, !tbaa !3109
  %33 = load i8, i8* %src_slash, align 1, !dbg !15373, !tbaa !3109
  %tobool40 = trunc i8 %33 to i1, !dbg !15373
  br i1 %tobool40, label %if.end45, label %land.lhs.true41, !dbg !15375

land.lhs.true41:                                  ; preds = %if.end31
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15376, !tbaa !3109
  %tobool42 = trunc i8 %34 to i1, !dbg !15376
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !15377

if.then43:                                        ; preds = %land.lhs.true41
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15378, !tbaa !2985
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15379, !tbaa !2998
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15380, !tbaa !2985
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15381, !tbaa !2998
  %call44 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #10, !dbg !15382
  store i32 %call44, i32* %retval, align 4, !dbg !15383
  br label %return, !dbg !15383

if.end45:                                         ; preds = %land.lhs.true41, %if.end31
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15384, !tbaa !2985
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15386, !tbaa !2998
  %call46 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15387
  %tobool47 = icmp ne i32 %call46, 0, !dbg !15387
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !15388

if.then48:                                        ; preds = %if.end45
  store i32 -1, i32* %retval, align 4, !dbg !15389
  br label %return, !dbg !15389

if.end49:                                         ; preds = %if.end45
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15390, !tbaa !3109
  %tobool50 = trunc i8 %41 to i1, !dbg !15390
  br i1 %tobool50, label %if.then51, label %if.else58, !dbg !15392

if.then51:                                        ; preds = %if.end49
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15393, !ctir !15234
  %42 = load i32, i32* %st_mode, align 8, !dbg !15393, !tbaa !3181, !ctir !133
  %and52 = and i32 %42, 61440, !dbg !15393
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !15393
  br i1 %cmp53, label %if.end57, label %if.then55, !dbg !15396

if.then55:                                        ; preds = %if.then51
  %call56 = call i32 @errno_fail(i32 2), !dbg !15397
  store i32 %call56, i32* %retval, align 4, !dbg !15398
  br label %return, !dbg !15398

if.end57:                                         ; preds = %if.then51
  br label %if.end89, !dbg !15399

if.else58:                                        ; preds = %if.end49
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15400, !tbaa !2985
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15402, !tbaa !2998
  %call59 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15403
  %tobool60 = icmp ne i32 %call59, 0, !dbg !15403
  br i1 %tobool60, label %if.then61, label %if.else72, !dbg !15404

if.then61:                                        ; preds = %if.else58
  %call62 = call i32* @__errno_location() #15, !dbg !15405
  %45 = load i32, i32* %call62, align 4, !dbg !15405, !tbaa !2985, !ctir !7
  %cmp63 = icmp ne i32 %45, 2, !dbg !15408
  br i1 %cmp63, label %if.then70, label %lor.lhs.false65, !dbg !15409

lor.lhs.false65:                                  ; preds = %if.then61
  %st_mode66 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15410, !ctir !15234
  %46 = load i32, i32* %st_mode66, align 8, !dbg !15410, !tbaa !3181, !ctir !133
  %and67 = and i32 %46, 61440, !dbg !15410
  %cmp68 = icmp eq i32 %and67, 16384, !dbg !15410
  br i1 %cmp68, label %if.end71, label %if.then70, !dbg !15411

if.then70:                                        ; preds = %lor.lhs.false65, %if.then61
  store i32 -1, i32* %retval, align 4, !dbg !15412
  br label %return, !dbg !15412

if.end71:                                         ; preds = %lor.lhs.false65
  br label %if.end88, !dbg !15413

if.else72:                                        ; preds = %if.else58
  %st_mode73 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15414, !ctir !15234
  %47 = load i32, i32* %st_mode73, align 8, !dbg !15414, !tbaa !3181, !ctir !133
  %and74 = and i32 %47, 61440, !dbg !15414
  %cmp75 = icmp eq i32 %and74, 16384, !dbg !15414
  br i1 %cmp75, label %if.else79, label %if.then77, !dbg !15416

if.then77:                                        ; preds = %if.else72
  %call78 = call i32 @errno_fail(i32 20), !dbg !15417
  store i32 %call78, i32* %retval, align 4, !dbg !15418
  br label %return, !dbg !15418

if.else79:                                        ; preds = %if.else72
  %st_mode80 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15419, !ctir !15234
  %48 = load i32, i32* %st_mode80, align 8, !dbg !15419, !tbaa !3181, !ctir !133
  %and81 = and i32 %48, 61440, !dbg !15419
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !15419
  br i1 %cmp82, label %if.end86, label %if.then84, !dbg !15421

if.then84:                                        ; preds = %if.else79
  %call85 = call i32 @errno_fail(i32 21), !dbg !15422
  store i32 %call85, i32* %retval, align 4, !dbg !15423
  br label %return, !dbg !15423

if.end86:                                         ; preds = %if.else79
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end71
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end57
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15424, !tbaa !2985
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15425, !tbaa !2998
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15426, !tbaa !2985
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15427, !tbaa !2998
  %call90 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #10, !dbg !15428
  store i32 %call90, i32* %ret_val, align 4, !dbg !15429, !tbaa !2985
  %call91 = call i32* @__errno_location() #15, !dbg !15430
  %53 = load i32, i32* %call91, align 4, !dbg !15430, !tbaa !2985, !ctir !7
  store i32 %53, i32* %rename_errno, align 4, !dbg !15431, !tbaa !2985
  br label %out, !dbg !15432

out:                                              ; preds = %if.end89
  call void @llvm.dbg.label(metadata !15433), !dbg !15434
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15435, !tbaa !2998
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15437, !tbaa !2998
  %cmp92 = icmp ne i8* %54, %55, !dbg !15438
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !15439

if.then94:                                        ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15440, !tbaa !2998
  call void @free(i8* %56) #10, !dbg !15441
  br label %if.end95, !dbg !15441

if.end95:                                         ; preds = %if.then94, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15442, !tbaa !2998
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15444, !tbaa !2998
  %cmp96 = icmp ne i8* %57, %58, !dbg !15445
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !15446

if.then98:                                        ; preds = %if.end95
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15447, !tbaa !2998
  call void @free(i8* %59) #10, !dbg !15448
  br label %if.end99, !dbg !15448

if.end99:                                         ; preds = %if.then98, %if.end95
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15449, !tbaa !2985
  %call100 = call i32* @__errno_location() #15, !dbg !15450
  store i32 %60, i32* %call100, align 4, !dbg !15451, !tbaa !2985, !ctir !7
  %61 = load i32, i32* %ret_val, align 4, !dbg !15452, !tbaa !2985
  store i32 %61, i32* %retval, align 4, !dbg !15453
  br label %return, !dbg !15453

return:                                           ; preds = %if.end99, %if.then84, %if.then77, %if.then70, %if.then55, %if.then48, %if.then43, %if.then29, %if.then20, %if.then15, %if.then8, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15454
  ret i32 %62, !dbg !15454
}

; Function Attrs: nounwind
declare dso_local i32 @renameat2(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15455 !ctir !1830 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15456, metadata !DIExpression()), !dbg !15457
  %0 = load i32, i32* %e.addr, align 4, !dbg !15458, !tbaa !2985
  %call = call i32* @__errno_location() #15, !dbg !15459
  store i32 %0, i32* %call, align 4, !dbg !15460, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !15461
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.timespec* @get_root_dev_ino(%struct.timespec* %root_d_i) #4 !dbg !15462 !ctir !1835 {
entry:
  %retval = alloca %struct.timespec*, align 8
  %root_d_i.addr = alloca %struct.timespec*, align 8
  %statbuf = alloca %struct.stat, align 8, !ctir !15464
  store %struct.timespec* %root_d_i, %struct.timespec** %root_d_i.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %root_d_i.addr, metadata !15485, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !15487, metadata !DIExpression()), !dbg !15488
  %call = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.335, i64 0, i64 0), %struct.stat* %statbuf) #10, !dbg !15489
  %tobool = icmp ne i32 %call, 0, !dbg !15489
  br i1 %tobool, label %if.then, label %if.end, !dbg !15491

if.then:                                          ; preds = %entry
  store %struct.timespec* null, %struct.timespec** %retval, align 8, !dbg !15492
  br label %return, !dbg !15492

if.end:                                           ; preds = %entry
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 1, !dbg !15493, !ctir !15464
  %0 = load i64, i64* %st_ino, align 8, !dbg !15493, !tbaa !3873, !ctir !228
  %1 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15494, !tbaa !2998
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %1, i32 0, i32 0, !dbg !15495, !ctir !1838
  store i64 %0, i64* %st_ino1, align 8, !dbg !15496, !tbaa !3874, !ctir !227
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !15497, !ctir !15464
  %2 = load i64, i64* %st_dev, align 8, !dbg !15497, !tbaa !3876, !ctir !231
  %3 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15498, !tbaa !2998
  %st_dev2 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i32 0, i32 1, !dbg !15499, !ctir !1838
  store i64 %2, i64* %st_dev2, align 8, !dbg !15500, !tbaa !3877, !ctir !230
  %4 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15501, !tbaa !2998
  store %struct.timespec* %4, %struct.timespec** %retval, align 8, !dbg !15502
  br label %return, !dbg !15502

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.timespec*, %struct.timespec** %retval, align 8, !dbg !15503
  ret %struct.timespec* %5, !dbg !15503
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15504 !ctir !1797 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !608
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15506, metadata !DIExpression()), !dbg !15507
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15508, metadata !DIExpression()), !dbg !15509
  store i64 %count, i64* %count.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15510, metadata !DIExpression()), !dbg !15511
  br label %for.cond, !dbg !15512

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15513, metadata !DIExpression()), !dbg !15517
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15518, !tbaa !2985
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15519, !tbaa !2998
  %2 = load i64, i64* %count.addr, align 8, !dbg !15520, !tbaa !3851
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15521
  store i64 %call, i64* %result, align 8, !dbg !15517, !tbaa !3851
  %3 = load i64, i64* %result, align 8, !dbg !15522, !tbaa !3851
  %cmp = icmp sle i64 0, %3, !dbg !15524
  br i1 %cmp, label %if.then, label %if.else, !dbg !15525

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15526, !tbaa !3851
  store i64 %4, i64* %retval, align 8, !dbg !15527
  br label %return, !dbg !15527

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #15, !dbg !15528
  %5 = load i32, i32* %call1, align 4, !dbg !15528, !tbaa !2985, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15528
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15530

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15531, !llvm.loop !15532

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #15, !dbg !15535
  %6 = load i32, i32* %call5, align 4, !dbg !15535, !tbaa !2985, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15537
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15538

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15539, !tbaa !3851
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15540
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15541

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15542, !tbaa !3851
  br label %if.end, !dbg !15543

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15544, !tbaa !3851
  store i64 %8, i64* %retval, align 8, !dbg !15545
  br label %return, !dbg !15545

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15546, !llvm.loop !15532

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15547
  ret i64 %9, !dbg !15547
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !15548 !ctir !1848 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15550, metadata !DIExpression()), !dbg !15551
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15552, metadata !DIExpression()), !dbg !15553
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15554, !tbaa !2998
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15555, !tbaa !2998
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !15556
  ret i1 %call, !dbg !15557
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !15558 !ctir !1850 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !115
  %dest_basename = alloca i8*, align 8, !ctir !115
  %source_baselen = alloca i64, align 8, !ctir !55
  %dest_baselen = alloca i64, align 8, !ctir !55
  %identical_basenames = alloca i8, align 1, !ctir !120
  %compare_dirs = alloca i8, align 1, !ctir !120
  %same = alloca i8, align 1, !ctir !120
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !15559
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !15559
  %source_dirname = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %dest_dirname = alloca i8*, align 8, !ctir !9
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15580, metadata !DIExpression()), !dbg !15581
  store i8* %source, i8** %source.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15582, metadata !DIExpression()), !dbg !15583
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15584, metadata !DIExpression()), !dbg !15585
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15586, metadata !DIExpression()), !dbg !15587
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15588, metadata !DIExpression()), !dbg !15589
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15590, !tbaa !2998
  %call = call i8* @last_component(i8* %0) #14, !dbg !15591
  store i8* %call, i8** %source_basename, align 8, !dbg !15589, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15592, metadata !DIExpression()), !dbg !15593
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15594, !tbaa !2998
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15595
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15593, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15596, metadata !DIExpression()), !dbg !15597
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15598, !tbaa !2998
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15599
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15597, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15600, metadata !DIExpression()), !dbg !15601
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15602, !tbaa !2998
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15603
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15601, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15604, metadata !DIExpression()), !dbg !15605
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15606, !tbaa !3851
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15607, !tbaa !3851
  %cmp = icmp eq i64 %4, %5, !dbg !15608
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15609

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15610, !tbaa !2998
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15611, !tbaa !2998
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15612, !tbaa !3851
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15613
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15614
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15615
  %frombool = zext i1 %9 to i8, !dbg !15605
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15605, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15616, metadata !DIExpression()), !dbg !15617
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15618, !tbaa !3109
  %tobool = trunc i8 %10 to i1, !dbg !15618
  %frombool6 = zext i1 %tobool to i8, !dbg !15617
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15617, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15619, metadata !DIExpression()), !dbg !15620
  store i8 0, i8* %same, align 1, !dbg !15620, !tbaa !3109
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15621, !tbaa !3109
  %tobool7 = trunc i8 %11 to i1, !dbg !15621
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !15623

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !15624, metadata !DIExpression()), !dbg !15626
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15627, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15629, metadata !DIExpression()), !dbg !15630
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15631, !tbaa !2998
  %call8 = call i8* @dir_name(i8* %12), !dbg !15632
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15630, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15633, metadata !DIExpression()), !dbg !15634
  store i32 256, i32* %flags, align 4, !dbg !15634, !tbaa !2985
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15635, !tbaa !2985
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15637, !tbaa !2998
  %15 = load i32, i32* %flags, align 4, !dbg !15638, !tbaa !2985
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #10, !dbg !15639
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15640
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15641

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #15, !dbg !15642
  %16 = load i32, i32* %call12, align 4, !dbg !15642, !tbaa !2985, !ctir !7
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15644, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %17), !dbg !15645
  br label %if.end, !dbg !15646

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15647, !tbaa !2998
  call void @free(i8* %18) #10, !dbg !15648
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15649, metadata !DIExpression()), !dbg !15650
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15651, !tbaa !2998
  %call13 = call i8* @dir_name(i8* %19), !dbg !15652
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15650, !tbaa !2998
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15653, !tbaa !2985
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15655, !tbaa !2998
  %22 = load i32, i32* %flags, align 4, !dbg !15656, !tbaa !2985
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #10, !dbg !15657
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15658
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15659

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #15, !dbg !15660
  %23 = load i32, i32* %call17, align 4, !dbg !15660, !tbaa !2985, !ctir !7
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15662, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %24), !dbg !15663
  br label %if.end18, !dbg !15664

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15665, !ctir !15559
  %25 = load i64, i64* %st_ino, align 8, !dbg !15665, !tbaa !3873, !ctir !228
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15665, !ctir !15559
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15665, !tbaa !3873, !ctir !228
  %cmp20 = icmp eq i64 %25, %26, !dbg !15665
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15665

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15665, !ctir !15559
  %27 = load i64, i64* %st_dev, align 8, !dbg !15665, !tbaa !3876, !ctir !231
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15665, !ctir !15559
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15665, !tbaa !3876, !ctir !231
  %cmp23 = icmp eq i64 %27, %28, !dbg !15665
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15666
  %frombool25 = zext i1 %29 to i8, !dbg !15667
  store i8 %frombool25, i8* %same, align 1, !dbg !15667, !tbaa !3109
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15668, !tbaa !2998
  call void @free(i8* %30) #10, !dbg !15669
  br label %if.end26, !dbg !15670

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15671, !tbaa !3109
  %tobool27 = trunc i8 %31 to i1, !dbg !15671
  ret i1 %tobool27, !dbg !15672
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !15673 !ctir !1078 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !9
  %allocated = alloca i64, align 8, !ctir !55
  %entries = alloca %struct.direntry_t*, align 8, !ctir !1080
  %entries_allocated = alloca i64, align 8, !ctir !55
  %entries_used = alloca i64, align 8, !ctir !55
  %used = alloca i64, align 8, !ctir !55
  %readdir_errno = alloca i32, align 4, !ctir !7
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !1088
  %dp = alloca %struct.dirent*, align 8, !ctir !1094
  %entry2 = alloca i8*, align 8, !ctir !115
  %entry_size = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %n36 = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %dest = alloca i8*, align 8, !ctir !9
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !15674, metadata !DIExpression()), !dbg !15675
  store i32 %option, i32* %option.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15676, metadata !DIExpression()), !dbg !15677
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15678, metadata !DIExpression()), !dbg !15679
  store i8* null, i8** %name_space, align 8, !dbg !15679, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !15680, metadata !DIExpression()), !dbg !15681
  store i64 0, i64* %allocated, align 8, !dbg !15681, !tbaa !3851
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !15682, metadata !DIExpression()), !dbg !15683
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !15683, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !15684, metadata !DIExpression()), !dbg !15685
  store i64 0, i64* %entries_allocated, align 8, !dbg !15685, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !15686, metadata !DIExpression()), !dbg !15687
  store i64 0, i64* %entries_used, align 8, !dbg !15687, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %used, metadata !15688, metadata !DIExpression()), !dbg !15689
  store i64 0, i64* %used, align 8, !dbg !15689, !tbaa !3851
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !15690, metadata !DIExpression()), !dbg !15691
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !15692, metadata !DIExpression()), !dbg !15693
  %0 = load i32, i32* %option.addr, align 4, !dbg !15694, !tbaa !3660
  %idxprom = zext i32 %0 to i64, !dbg !15695
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !15695, !ctir !1092
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !15695, !tbaa !2998
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !15693, !tbaa !2998
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15696, !tbaa !2998
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !15698
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15699

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15700
  br label %return, !dbg !15700

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !15701

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !15702, metadata !DIExpression()), !dbg !15706
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !15707, metadata !DIExpression()), !dbg !15708
  %call = call i32* @__errno_location() #15, !dbg !15709
  store i32 0, i32* %call, align 4, !dbg !15710, !tbaa !2985, !ctir !7
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15711, !tbaa !2998
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !15712
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !15713, !tbaa !2998
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15714, !tbaa !2998
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !15714
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !15716

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !15717

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15718, !tbaa !2998
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !15719, !ctir !1095
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !15718
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !15720, !tbaa !2998
  %6 = load i8*, i8** %entry2, align 8, !dbg !15721, !tbaa !2998
  %7 = load i8*, i8** %entry2, align 8, !dbg !15723, !tbaa !2998
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !15723, !ctir !115
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !15723, !tbaa !3660
  %conv = sext i8 %8 to i32, !dbg !15723
  %cmp7 = icmp ne i32 %conv, 46, !dbg !15724
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15723

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !15723

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !15725, !tbaa !2998
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !15725, !ctir !115
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !15725, !tbaa !3660
  %conv10 = sext i8 %10 to i32, !dbg !15725
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !15726
  %11 = zext i1 %cmp11 to i64, !dbg !15725
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !15725
  br label %cond.end, !dbg !15723

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !15723
  %idxprom14 = sext i32 %cond13 to i64, !dbg !15721
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !15721, !ctir !115
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !15721, !tbaa !3660
  %conv16 = sext i8 %12 to i32, !dbg !15721
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !15727
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !15728

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !15729, metadata !DIExpression()), !dbg !15731
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15732, !tbaa !2998
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !15732, !ctir !1095
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !15732
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !15732
  %add = add i64 %call22, 1, !dbg !15733
  store i64 %add, i64* %entry_size, align 8, !dbg !15731, !tbaa !3851
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15734, !tbaa !2998
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !15734
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15736

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !15737, !tbaa !3851
  %16 = load i64, i64* %entries_used, align 8, !dbg !15740, !tbaa !3851
  %cmp25 = icmp eq i64 %15, %16, !dbg !15741
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !15742

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15743, metadata !DIExpression()), !dbg !15745
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !15746, !tbaa !3851
  store i64 %17, i64* %n, align 8, !dbg !15745, !tbaa !3851
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15747, !tbaa !2998
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !15747
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !15748
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !15748
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !15749, !tbaa !2998
  %21 = load i64, i64* %n, align 8, !dbg !15750, !tbaa !3851
  store i64 %21, i64* %entries_allocated, align 8, !dbg !15751, !tbaa !3851
  br label %if.end29, !dbg !15752

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !15753, !tbaa !2998
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !15754
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15755, !tbaa !2998
  %24 = load i64, i64* %entries_used, align 8, !dbg !15756, !tbaa !3851
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !15755, !ctir !1080
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !15757, !ctir !1081
  store i8* %call30, i8** %name, align 8, !dbg !15758, !tbaa !15759, !ctir !9
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15761, !tbaa !2998
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !15762, !ctir !1095
  %26 = load i64, i64* %d_ino, align 8, !dbg !15762, !tbaa !15763, !ctir !228
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15765, !tbaa !2998
  %28 = load i64, i64* %entries_used, align 8, !dbg !15766, !tbaa !3851
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !15765, !ctir !1080
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !15767, !ctir !1081
  store i64 %26, i64* %ino, align 8, !dbg !15768, !tbaa !15769, !ctir !1087
  %29 = load i64, i64* %entries_used, align 8, !dbg !15770, !tbaa !3851
  %inc = add i64 %29, 1, !dbg !15770
  store i64 %inc, i64* %entries_used, align 8, !dbg !15770, !tbaa !3851
  br label %if.end44, !dbg !15771

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !15772, !tbaa !3851
  %31 = load i64, i64* %used, align 8, !dbg !15775, !tbaa !3851
  %sub = sub i64 %30, %31, !dbg !15776
  %32 = load i64, i64* %entry_size, align 8, !dbg !15777, !tbaa !3851
  %cmp33 = icmp ule i64 %sub, %32, !dbg !15778
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !15779

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !15780, metadata !DIExpression()), !dbg !15782
  %33 = load i64, i64* %used, align 8, !dbg !15783, !tbaa !3851
  %34 = load i64, i64* %entry_size, align 8, !dbg !15784, !tbaa !3851
  %add37 = add i64 %33, %34, !dbg !15785
  store i64 %add37, i64* %n36, align 8, !dbg !15782, !tbaa !3851
  %35 = load i64, i64* %n36, align 8, !dbg !15786, !tbaa !3851
  %36 = load i64, i64* %used, align 8, !dbg !15788, !tbaa !3851
  %cmp38 = icmp ult i64 %35, %36, !dbg !15789
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15790

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #16, !dbg !15791
  unreachable, !dbg !15791

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !15792, !tbaa !2998
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !15793
  store i8* %call42, i8** %name_space, align 8, !dbg !15794, !tbaa !2998
  %38 = load i64, i64* %n36, align 8, !dbg !15795, !tbaa !3851
  store i64 %38, i64* %allocated, align 8, !dbg !15796, !tbaa !3851
  br label %if.end43, !dbg !15797

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !15798, !tbaa !2998
  %40 = load i64, i64* %used, align 8, !dbg !15799, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !15800
  %41 = load i8*, i8** %entry2, align 8, !dbg !15801, !tbaa !2998
  %42 = load i64, i64* %entry_size, align 8, !dbg !15802, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !15803
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !15804, !tbaa !3851
  %44 = load i64, i64* %used, align 8, !dbg !15805, !tbaa !3851
  %add45 = add i64 %44, %43, !dbg !15805
  store i64 %add45, i64* %used, align 8, !dbg !15805, !tbaa !3851
  br label %if.end46, !dbg !15806

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !15807, !llvm.loop !15808

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #15, !dbg !15811
  %45 = load i32, i32* %call47, align 4, !dbg !15811, !tbaa !2985, !ctir !7
  store i32 %45, i32* %readdir_errno, align 4, !dbg !15812, !tbaa !2985
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !15813, !tbaa !2985
  %cmp48 = icmp ne i32 %46, 0, !dbg !15815
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !15816

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15817, !tbaa !2998
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !15817
  call void @free(i8* %48) #10, !dbg !15819
  %49 = load i8*, i8** %name_space, align 8, !dbg !15820, !tbaa !2998
  call void @free(i8* %49) #10, !dbg !15821
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !15822, !tbaa !2985
  %call51 = call i32* @__errno_location() #15, !dbg !15823
  store i32 %50, i32* %call51, align 4, !dbg !15824, !tbaa !2985, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15825
  br label %return, !dbg !15825

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15826, !tbaa !2998
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !15826
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !15828

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15829, metadata !DIExpression()), !dbg !15831
  %52 = load i64, i64* %entries_used, align 8, !dbg !15832, !tbaa !3851
  %tobool55 = icmp ne i64 %52, 0, !dbg !15832
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !15834

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15835, !tbaa !2998
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !15835
  %55 = load i64, i64* %entries_used, align 8, !dbg !15836, !tbaa !3851
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15837, !tbaa !2998
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !15838
  br label %if.end57, !dbg !15838

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !15839, !tbaa !3851
  %add58 = add i64 %57, 1, !dbg !15840
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !15841
  store i8* %call59, i8** %name_space, align 8, !dbg !15842, !tbaa !2998
  store i64 0, i64* %used, align 8, !dbg !15843, !tbaa !3851
  store i64 0, i64* %i, align 8, !dbg !15844, !tbaa !3851
  br label %for.cond60, !dbg !15846

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !15847, !tbaa !3851
  %59 = load i64, i64* %entries_used, align 8, !dbg !15849, !tbaa !3851
  %cmp61 = icmp ult i64 %58, %59, !dbg !15850
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !15851

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !15852, metadata !DIExpression()), !dbg !15854
  %60 = load i8*, i8** %name_space, align 8, !dbg !15855, !tbaa !2998
  %61 = load i64, i64* %used, align 8, !dbg !15856, !tbaa !3851
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !15857
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !15854, !tbaa !2998
  %62 = load i8*, i8** %dest, align 8, !dbg !15858, !tbaa !2998
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15859, !tbaa !2998
  %64 = load i64, i64* %i, align 8, !dbg !15860, !tbaa !3851
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !15859, !ctir !1080
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !15861, !ctir !1081
  %65 = load i8*, i8** %name65, align 8, !dbg !15861, !tbaa !15759, !ctir !9
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #10, !dbg !15862
  %66 = load i8*, i8** %dest, align 8, !dbg !15863, !tbaa !2998
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !15864
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !15864
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15864
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !15865
  %67 = load i64, i64* %used, align 8, !dbg !15866, !tbaa !3851
  %add68 = add i64 %67, %add67, !dbg !15866
  store i64 %add68, i64* %used, align 8, !dbg !15866, !tbaa !3851
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15867, !tbaa !2998
  %69 = load i64, i64* %i, align 8, !dbg !15868, !tbaa !3851
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !15867, !ctir !1080
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !15869, !ctir !1081
  %70 = load i8*, i8** %name70, align 8, !dbg !15869, !tbaa !15759, !ctir !9
  call void @free(i8* %70) #10, !dbg !15870
  br label %for.inc, !dbg !15871

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !15872, !tbaa !3851
  %inc71 = add i64 %71, 1, !dbg !15872
  store i64 %inc71, i64* %i, align 8, !dbg !15872, !tbaa !3851
  br label %for.cond60, !dbg !15873, !llvm.loop !15874

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15876, !tbaa !2998
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !15876
  call void @free(i8* %73) #10, !dbg !15877
  br label %if.end80, !dbg !15878

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !15879, !tbaa !3851
  %75 = load i64, i64* %allocated, align 8, !dbg !15881, !tbaa !3851
  %cmp74 = icmp eq i64 %74, %75, !dbg !15882
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !15883

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !15884, !tbaa !2998
  %77 = load i64, i64* %used, align 8, !dbg !15885, !tbaa !3851
  %add77 = add i64 %77, 1, !dbg !15886
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !15887
  store i8* %call78, i8** %name_space, align 8, !dbg !15888, !tbaa !2998
  br label %if.end79, !dbg !15889

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !15890, !tbaa !2998
  %79 = load i64, i64* %used, align 8, !dbg !15891, !tbaa !3851
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !15890, !ctir !9
  store i8 0, i8* %arrayidx81, align 1, !dbg !15892, !tbaa !3660
  %80 = load i8*, i8** %name_space, align 8, !dbg !15893, !tbaa !2998
  store i8* %80, i8** %retval, align 8, !dbg !15894
  br label %return, !dbg !15894

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !15895
  ret i8* %81, !dbg !15895
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !15896 !ctir !1090 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1105
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1105
  store i8* %a, i8** %a.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15897, metadata !DIExpression()), !dbg !15898
  store i8* %b, i8** %b.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15899, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15901, metadata !DIExpression()), !dbg !15902
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15903, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15903
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15902, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15904, metadata !DIExpression()), !dbg !15905
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15906, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15906
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15905, !tbaa !2998
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15907, !tbaa !2998
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !15908, !ctir !1106
  %5 = load i8*, i8** %name, align 8, !dbg !15908, !tbaa !15759, !ctir !9
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15909, !tbaa !2998
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !15910, !ctir !1106
  %7 = load i8*, i8** %name1, align 8, !dbg !15910, !tbaa !15759, !ctir !9
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !15911
  ret i32 %call, !dbg !15912
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !15913 !ctir !1090 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1105
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1105
  store i8* %a, i8** %a.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15914, metadata !DIExpression()), !dbg !15915
  store i8* %b, i8** %b.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15916, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15918, metadata !DIExpression()), !dbg !15919
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15920, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15920
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15919, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15921, metadata !DIExpression()), !dbg !15922
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15923, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15923
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15922, !tbaa !2998
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15924, !tbaa !2998
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !15925, !ctir !1106
  %5 = load i64, i64* %ino, align 8, !dbg !15925, !tbaa !15769, !ctir !1087
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15926, !tbaa !2998
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !15927, !ctir !1106
  %7 = load i64, i64* %ino1, align 8, !dbg !15927, !tbaa !15769, !ctir !1087
  %cmp = icmp ult i64 %5, %7, !dbg !15928
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15924

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15924

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15929, !tbaa !2998
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !15930, !ctir !1106
  %9 = load i64, i64* %ino2, align 8, !dbg !15930, !tbaa !15769, !ctir !1087
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15931, !tbaa !2998
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !15932, !ctir !1106
  %11 = load i64, i64* %ino3, align 8, !dbg !15932, !tbaa !15769, !ctir !1087
  %cmp4 = icmp ugt i64 %9, %11, !dbg !15933
  %conv = zext i1 %cmp4 to i32, !dbg !15933
  br label %cond.end, !dbg !15924

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !15924
  ret i32 %cond, !dbg !15934
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !15935 !ctir !1103 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !609
  %name_space = alloca i8*, align 8, !ctir !9
  %closedir_errno = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15936, metadata !DIExpression()), !dbg !15937
  store i32 %option, i32* %option.addr, align 4, !tbaa !3660
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15938, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !15940, metadata !DIExpression()), !dbg !15941
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !15942, !tbaa !2998
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !15943
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !15941, !tbaa !2998
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15944, !tbaa !2998
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !15944
  br i1 %tobool, label %if.else, label %if.then, !dbg !15946

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15947
  br label %return, !dbg !15947

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15948, metadata !DIExpression()), !dbg !15950
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15951, !tbaa !2998
  %3 = load i32, i32* %option.addr, align 4, !dbg !15952, !tbaa !3660
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !15953
  store i8* %call1, i8** %name_space, align 8, !dbg !15950, !tbaa !2998
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15954, !tbaa !2998
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !15956
  %cmp = icmp ne i32 %call2, 0, !dbg !15957
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15958

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !15959, metadata !DIExpression()), !dbg !15961
  %call4 = call i32* @__errno_location() #15, !dbg !15962
  %5 = load i32, i32* %call4, align 4, !dbg !15962, !tbaa !2985, !ctir !7
  store i32 %5, i32* %closedir_errno, align 4, !dbg !15961, !tbaa !2985
  %6 = load i8*, i8** %name_space, align 8, !dbg !15963, !tbaa !2998
  call void @free(i8* %6) #10, !dbg !15964
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !15965, !tbaa !2985
  %call5 = call i32* @__errno_location() #15, !dbg !15966
  store i32 %7, i32* %call5, align 4, !dbg !15967, !tbaa !2985, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !15968
  br label %return, !dbg !15968

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !15969, !tbaa !2998
  store i8* %8, i8** %retval, align 8, !dbg !15970
  br label %return, !dbg !15970

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !15971
  ret i8* %9, !dbg !15971
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !15972 !ctir !1855 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15973, metadata !DIExpression()), !dbg !15974
  %call = call i32* @__errno_location() #15, !dbg !15975
  store i32 95, i32* %call, align 4, !dbg !15976, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !15977
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !15978 !ctir !1860 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15979, metadata !DIExpression()), !dbg !15980
  ret void, !dbg !15981
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !15982 !ctir !1855 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15983, metadata !DIExpression()), !dbg !15984
  %call = call i32* @__errno_location() #15, !dbg !15985
  store i32 95, i32* %call, align 4, !dbg !15986, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !15987
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !15988 !ctir !1862 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15989, metadata !DIExpression()), !dbg !15990
  %call = call i32* @__errno_location() #15, !dbg !15991
  store i32 95, i32* %call, align 4, !dbg !15992, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !15993
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !15994 !ctir !1864 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15995, metadata !DIExpression()), !dbg !15996
  store i32 %m, i32* %m.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !15997, metadata !DIExpression()), !dbg !15998
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15999, metadata !DIExpression()), !dbg !16000
  %call = call i32* @__errno_location() #15, !dbg !16001
  store i32 95, i32* %call, align 4, !dbg !16002, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16003
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !16004 !ctir !1866 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16005, metadata !DIExpression()), !dbg !16006
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16007, metadata !DIExpression()), !dbg !16008
  %call = call i32* @__errno_location() #15, !dbg !16009
  store i32 95, i32* %call, align 4, !dbg !16010, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16011
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !16012 !ctir !1866 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16013, metadata !DIExpression()), !dbg !16014
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16015, metadata !DIExpression()), !dbg !16016
  %call = call i32* @__errno_location() #15, !dbg !16017
  store i32 95, i32* %call, align 4, !dbg !16018, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16019
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !16020 !ctir !1868 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16021, metadata !DIExpression()), !dbg !16022
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16023, metadata !DIExpression()), !dbg !16024
  %call = call i32* @__errno_location() #15, !dbg !16025
  store i32 95, i32* %call, align 4, !dbg !16026, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16027
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !16028 !ctir !1870 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16029, metadata !DIExpression()), !dbg !16030
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16031, metadata !DIExpression()), !dbg !16032
  %call = call i32* @__errno_location() #15, !dbg !16033
  store i32 95, i32* %call, align 4, !dbg !16034, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16035
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !16036 !ctir !1870 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16037, metadata !DIExpression()), !dbg !16038
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16039, metadata !DIExpression()), !dbg !16040
  %call = call i32* @__errno_location() #15, !dbg !16041
  store i32 95, i32* %call, align 4, !dbg !16042, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16043
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !16044 !ctir !1872 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16045, metadata !DIExpression()), !dbg !16046
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16047, metadata !DIExpression()), !dbg !16048
  %call = call i32* @__errno_location() #15, !dbg !16049
  store i32 95, i32* %call, align 4, !dbg !16050, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16051
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !16052 !ctir !1862 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16053, metadata !DIExpression()), !dbg !16054
  %call = call i32* @__errno_location() #15, !dbg !16055
  store i32 95, i32* %call, align 4, !dbg !16056, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16057
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !16058 !ctir !1862 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16059, metadata !DIExpression()), !dbg !16060
  %call = call i32* @__errno_location() #15, !dbg !16061
  store i32 95, i32* %call, align 4, !dbg !16062, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16063
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !16064 !ctir !1862 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16065, metadata !DIExpression()), !dbg !16066
  %call = call i32* @__errno_location() #15, !dbg !16067
  store i32 95, i32* %call, align 4, !dbg !16068, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16069
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !16070 !ctir !1874 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !16071, metadata !DIExpression()), !dbg !16072
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !16073, metadata !DIExpression()), !dbg !16074
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !3813
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !16075, metadata !DIExpression()), !dbg !16076
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !16077, metadata !DIExpression()), !dbg !16078
  %call = call i32* @__errno_location() #15, !dbg !16079
  store i32 95, i32* %call, align 4, !dbg !16080, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16081
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !16082 !ctir !1877 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16083, metadata !DIExpression()), !dbg !16084
  %call = call i32* @__errno_location() #15, !dbg !16085
  store i32 95, i32* %call, align 4, !dbg !16086, !tbaa !2985, !ctir !7
  ret i16 0, !dbg !16087
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !16088 !ctir !1879 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !16089, metadata !DIExpression()), !dbg !16090
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !16091, metadata !DIExpression()), !dbg !16092
  %call = call i32* @__errno_location() #15, !dbg !16093
  store i32 95, i32* %call, align 4, !dbg !16094, !tbaa !2985, !ctir !7
  ret i32 -1, !dbg !16095
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !16096 !ctir !1884 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16098, metadata !DIExpression()), !dbg !16099
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16100, !tbaa !2998
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16100, !ctir !1887
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !16101, !ctir !1902
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16101, !tbaa !16102, !ctir !343
  ret i64 %1, !dbg !16103
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !16104 !ctir !1884 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16105, metadata !DIExpression()), !dbg !16106
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16107, !tbaa !2998
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16107, !ctir !1887
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !16108, !ctir !1902
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16108, !tbaa !16109, !ctir !343
  ret i64 %1, !dbg !16110
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !16111 !ctir !1884 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16112, metadata !DIExpression()), !dbg !16113
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16114, !tbaa !2998
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16114, !ctir !1887
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !16115, !ctir !1902
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16115, !tbaa !16116, !ctir !343
  ret i64 %1, !dbg !16117
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !16118 !ctir !1884 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16119, metadata !DIExpression()), !dbg !16120
  ret i64 0, !dbg !16121
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !16122 !ctir !1909 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16123, metadata !DIExpression()), !dbg !16124
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16125, !tbaa !2998
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16125, !ctir !1887
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16125
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !16125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16125, !tbaa.struct !6331
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16126
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16126
  ret { i64, i64 } %4, !dbg !16126
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !16127 !ctir !1909 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16128, metadata !DIExpression()), !dbg !16129
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16130, !tbaa !2998
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16130, !ctir !1887
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16130
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !16130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16130, !tbaa.struct !6331
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16131
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16131
  ret { i64, i64 } %4, !dbg !16131
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !16132 !ctir !1909 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16133, metadata !DIExpression()), !dbg !16134
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16135, !tbaa !2998
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16135, !ctir !1887
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16135
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !16135
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16135, !tbaa.struct !6331
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16136
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16136
  ret { i64, i64 } %4, !dbg !16136
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !16137 !ctir !1909 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16138, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !16140, metadata !DIExpression()), !dbg !16141
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !16142, !ctir !1902
  store i64 -1, i64* %tv_sec, align 8, !dbg !16143, !tbaa !16144, !ctir !341
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !16145, !ctir !1902
  store i64 -1, i64* %tv_nsec, align 8, !dbg !16146, !tbaa !16147, !ctir !343
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16148
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !16148
  ret { i64, i64 } %1, !dbg !16148
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !16149 !ctir !1911 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !16150, metadata !DIExpression()), !dbg !16151
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16152, metadata !DIExpression()), !dbg !16153
  %0 = load i32, i32* %result.addr, align 4, !dbg !16154, !tbaa !2985
  ret i32 %0, !dbg !16155
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16156 !ctir !1917 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16158, metadata !DIExpression()), !dbg !16159
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16160, metadata !DIExpression()), !dbg !16161
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16162, metadata !DIExpression()), !dbg !16163
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16164, !tbaa !2985
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16165, !tbaa !2998
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16166, !tbaa !2998
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #10, !dbg !16167
  ret i32 %call, !dbg !16168
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16169 !ctir !1917 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16170, metadata !DIExpression()), !dbg !16171
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16172, metadata !DIExpression()), !dbg !16173
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16174, metadata !DIExpression()), !dbg !16175
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16176, !tbaa !2985
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16177, !tbaa !2998
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16178, !tbaa !2998
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #10, !dbg !16179
  ret i32 %call, !dbg !16180
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !16181 !ctir !1113 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !55
  %XXXXXX = alloca i8*, align 8, !ctir !9
  %count = alloca i32, align 4, !ctir !70
  %fd = alloca i32, align 4, !ctir !7
  %save_errno = alloca i32, align 4, !ctir !7
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1116
  %attempts = alloca i32, align 4, !ctir !70
  %i = alloca i64, align 8, !ctir !55
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16182, metadata !DIExpression()), !dbg !16183
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16184, metadata !DIExpression()), !dbg !16185
  store i8* %args, i8** %args.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16186, metadata !DIExpression()), !dbg !16187
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16188, metadata !DIExpression()), !dbg !16189
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16190, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16192, metadata !DIExpression()), !dbg !16193
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !16194, metadata !DIExpression()), !dbg !16195
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16196, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16198, metadata !DIExpression()), !dbg !16199
  store i32 -1, i32* %fd, align 4, !dbg !16199, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !16200, metadata !DIExpression()), !dbg !16201
  %call = call i32* @__errno_location() #15, !dbg !16202
  %0 = load i32, i32* %call, align 4, !dbg !16202, !tbaa !2985, !ctir !7
  store i32 %0, i32* %save_errno, align 4, !dbg !16201, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !16203, metadata !DIExpression()), !dbg !16204
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !16205, metadata !DIExpression()), !dbg !16206
  store i32 238328, i32* %attempts, align 4, !dbg !16206, !tbaa !2985
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16207, !tbaa !2998
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !16208
  store i64 %call1, i64* %len, align 8, !dbg !16209, !tbaa !3851
  %2 = load i64, i64* %len, align 8, !dbg !16210, !tbaa !3851
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16212, !tbaa !3851
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !16213, !tbaa !2985
  %conv = sext i32 %4 to i64, !dbg !16213
  %add = add i64 %3, %conv, !dbg !16214
  %cmp = icmp ult i64 %2, %add, !dbg !16215
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16216

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !16217, !tbaa !2998
  %6 = load i64, i64* %len, align 8, !dbg !16218, !tbaa !3851
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16219, !tbaa !3851
  %sub = sub i64 %6, %7, !dbg !16220
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !16221, !tbaa !2985
  %conv3 = sext i32 %8 to i64, !dbg !16221
  %sub4 = sub i64 %sub, %conv3, !dbg !16222
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !16217, !ctir !9
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16223, !tbaa !3851
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !16224
  br i1 %call5, label %if.end, label %if.then, !dbg !16225

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #15, !dbg !16226
  store i32 22, i32* %call6, align 4, !dbg !16226, !tbaa !2985, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16228
  br label %return, !dbg !16228

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !16229, !tbaa !2998
  %11 = load i64, i64* %len, align 8, !dbg !16230, !tbaa !3851
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16231, !tbaa !3851
  %sub7 = sub i64 %11, %12, !dbg !16232
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !16233, !tbaa !2985
  %conv8 = sext i32 %13 to i64, !dbg !16233
  %sub9 = sub i64 %sub7, %conv8, !dbg !16234
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !16229, !ctir !9
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !16235, !tbaa !2998
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16236, !tbaa !3851
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !16237
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !16238, !tbaa !2998
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16239, !tbaa !2998
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !16239
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !16241

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16242
  br label %return, !dbg !16242

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !16243, !tbaa !2985
  br label %for.cond, !dbg !16245

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !16246, !tbaa !2985
  %17 = load i32, i32* %attempts, align 4, !dbg !16248, !tbaa !2985
  %cmp14 = icmp ult i32 %16, %17, !dbg !16249
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !16250

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16251, metadata !DIExpression()), !dbg !16253
  store i64 0, i64* %i, align 8, !dbg !16254, !tbaa !3851
  br label %for.cond16, !dbg !16256

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !16257, !tbaa !3851
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16259, !tbaa !3851
  %cmp17 = icmp ult i64 %18, %19, !dbg !16260
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !16261

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16262, !tbaa !2998
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !16263
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !16264, !ctir !1119
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !16264, !tbaa !3660
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !16265, !tbaa !2998
  %23 = load i64, i64* %i, align 8, !dbg !16266, !tbaa !3851
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !16265, !ctir !9
  store i8 %21, i8* %arrayidx22, align 1, !dbg !16267, !tbaa !3660
  br label %for.inc, !dbg !16265

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !16268, !tbaa !3851
  %inc = add i64 %24, 1, !dbg !16268
  store i64 %inc, i64* %i, align 8, !dbg !16268, !tbaa !3851
  br label %for.cond16, !dbg !16269, !llvm.loop !16270

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16272, !tbaa !2998
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !16273, !tbaa !2998
  %27 = load i8*, i8** %args.addr, align 8, !dbg !16274, !tbaa !2998
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !16272
  store i32 %call23, i32* %fd, align 4, !dbg !16275, !tbaa !2985
  %28 = load i32, i32* %fd, align 4, !dbg !16276, !tbaa !2985
  %cmp24 = icmp sge i32 %28, 0, !dbg !16278
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !16279

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !16280, !tbaa !2985
  %call27 = call i32* @__errno_location() #15, !dbg !16280
  store i32 %29, i32* %call27, align 4, !dbg !16280, !tbaa !2985, !ctir !7
  br label %done, !dbg !16282

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #15, !dbg !16283
  %30 = load i32, i32* %call28, align 4, !dbg !16283, !tbaa !2985, !ctir !7
  %cmp29 = icmp ne i32 %30, 17, !dbg !16285
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !16286

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !16287, !tbaa !2985
  br label %done, !dbg !16289

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !16290

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !16291, !tbaa !2985
  %inc35 = add i32 %31, 1, !dbg !16291
  store i32 %inc35, i32* %count, align 4, !dbg !16291, !tbaa !2985
  br label %for.cond, !dbg !16292, !llvm.loop !16293

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16295, !tbaa !2998
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !16296
  %call38 = call i32* @__errno_location() #15, !dbg !16297
  store i32 17, i32* %call38, align 4, !dbg !16297, !tbaa !2985, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16298
  br label %return, !dbg !16298

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !16299), !dbg !16300
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !16301, metadata !DIExpression()), !dbg !16303
  %call39 = call i32* @__errno_location() #15, !dbg !16304
  %33 = load i32, i32* %call39, align 4, !dbg !16304, !tbaa !2985, !ctir !7
  store i32 %33, i32* %saved_errno, align 4, !dbg !16303, !tbaa !2985
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16305, !tbaa !2998
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !16306
  %35 = load i32, i32* %saved_errno, align 4, !dbg !16307, !tbaa !2985
  %call41 = call i32* @__errno_location() #15, !dbg !16307
  store i32 %35, i32* %call41, align 4, !dbg !16307, !tbaa !2985, !ctir !7
  %36 = load i32, i32* %fd, align 4, !dbg !16308, !tbaa !2985
  store i32 %36, i32* %retval, align 4, !dbg !16309
  br label %return, !dbg !16309

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !16310
  ret i32 %37, !dbg !16310
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #9 !dbg !16311 !ctir !1128 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !16312, metadata !DIExpression()), !dbg !16313
  store i64 %len, i64* %len.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16314, metadata !DIExpression()), !dbg !16315
  %0 = load i64, i64* %len.addr, align 8, !dbg !16316, !tbaa !3851
  %1 = load i8*, i8** %s.addr, align 8, !dbg !16317, !tbaa !2998
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.357, i64 0, i64 0)) #14, !dbg !16318
  %cmp = icmp ule i64 %0, %call, !dbg !16319
  ret i1 %cmp, !dbg !16320
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !16321 !ctir !1122 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1115
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16322, metadata !DIExpression()), !dbg !16323
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16324, metadata !DIExpression()), !dbg !16325
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16326, metadata !DIExpression()), !dbg !16327
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16328, metadata !DIExpression()), !dbg !16329
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16330, metadata !DIExpression()), !dbg !16331
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !16332, metadata !DIExpression()), !dbg !16333
  %0 = load i32, i32* %kind.addr, align 4, !dbg !16334, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !16335

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16336, !tbaa !2998
  br label %sw.epilog, !dbg !16338

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16339, !tbaa !2998
  br label %sw.epilog, !dbg !16340

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16341, !tbaa !2998
  br label %sw.epilog, !dbg !16342

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.359, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !16343
  unreachable, !dbg !16343

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16346, !tbaa !2998
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !16347, !tbaa !2985
  %3 = bitcast i32* %flags.addr to i8*, !dbg !16348
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16349, !tbaa !2998
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16350, !tbaa !3851
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !16351
  ret i32 %call, !dbg !16352
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !16353 !ctir !572 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !129
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16354, metadata !DIExpression()), !dbg !16355
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16356, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !16358, metadata !DIExpression()), !dbg !16359
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !16360, !tbaa !2998
  %1 = bitcast i8* %0 to i32*, !dbg !16360
  store i32* %1, i32** %openflags, align 8, !dbg !16359, !tbaa !2998
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !16361, !tbaa !2998
  %3 = load i32*, i32** %openflags, align 8, !dbg !16362, !tbaa !2998
  %4 = load i32, i32* %3, align 4, !dbg !16363, !tbaa !2985, !ctir !7
  %and = and i32 %4, -4, !dbg !16364
  %or = or i32 %and, 2, !dbg !16365
  %or1 = or i32 %or, 64, !dbg !16366
  %or2 = or i32 %or1, 128, !dbg !16367
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !16368
  ret i32 %call, !dbg !16369
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !16370 !ctir !572 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16371, metadata !DIExpression()), !dbg !16372
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16373, metadata !DIExpression()), !dbg !16374
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16375, !tbaa !2998
  %call = call i32 @mkdir(i8* %0, i32 448) #10, !dbg !16376
  ret i32 %call, !dbg !16377
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !16378 !ctir !572 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !16379
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16400, metadata !DIExpression()), !dbg !16401
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16402, metadata !DIExpression()), !dbg !16403
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16404, metadata !DIExpression()), !dbg !16405
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16406, !tbaa !2998
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #10, !dbg !16406
  %cmp = icmp eq i32 %call, 0, !dbg !16408
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16409

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !16410
  %1 = load i32, i32* %call1, align 4, !dbg !16410, !tbaa !2985, !ctir !7
  %cmp2 = icmp eq i32 %1, 75, !dbg !16411
  br i1 %cmp2, label %if.then, label %if.end, !dbg !16412

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #15, !dbg !16413
  store i32 17, i32* %call3, align 4, !dbg !16413, !tbaa !2985, !ctir !7
  br label %if.end, !dbg !16413

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #15, !dbg !16414
  %2 = load i32, i32* %call4, align 4, !dbg !16414, !tbaa !2985, !ctir !7
  %cmp5 = icmp eq i32 %2, 2, !dbg !16415
  %3 = zext i1 %cmp5 to i64, !dbg !16414
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !16414
  ret i32 %cond, !dbg !16416
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !16417 !ctir !1124 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16418, metadata !DIExpression()), !dbg !16419
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16420, metadata !DIExpression()), !dbg !16421
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16422, metadata !DIExpression()), !dbg !16423
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16424, metadata !DIExpression()), !dbg !16425
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16426, !tbaa !2998
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16427, !tbaa !2985
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16428, !tbaa !2985
  %3 = load i32, i32* %kind.addr, align 4, !dbg !16429, !tbaa !2985
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !16430
  ret i32 %call, !dbg !16431
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !16432 !ctir !1126 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16433, metadata !DIExpression()), !dbg !16434
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16435, metadata !DIExpression()), !dbg !16436
  store i8* %args, i8** %args.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16437, metadata !DIExpression()), !dbg !16438
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16439, metadata !DIExpression()), !dbg !16440
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16441, !tbaa !2998
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16442, !tbaa !2985
  %2 = load i8*, i8** %args.addr, align 8, !dbg !16443, !tbaa !2998
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16444, !tbaa !2998
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !16445
  ret i32 %call, !dbg !16446
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !16447 !ctir !1830 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16449, metadata !DIExpression()), !dbg !16450
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16451, !tbaa !2985
  %cmp = icmp sle i32 0, %0, !dbg !16453
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16454

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !16455, !tbaa !2985
  %cmp1 = icmp sle i32 %1, 2, !dbg !16456
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16457

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !16458, metadata !DIExpression()), !dbg !16460
  %2 = load i32, i32* %fd.addr, align 4, !dbg !16461, !tbaa !2985
  %call = call i32 @dup_safer(i32 %2), !dbg !16462
  store i32 %call, i32* %f, align 4, !dbg !16460, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16463, metadata !DIExpression()), !dbg !16464
  %call2 = call i32* @__errno_location() #15, !dbg !16465
  %3 = load i32, i32* %call2, align 4, !dbg !16465, !tbaa !2985, !ctir !7
  store i32 %3, i32* %e, align 4, !dbg !16464, !tbaa !2985
  %4 = load i32, i32* %fd.addr, align 4, !dbg !16466, !tbaa !2985
  %call3 = call i32 @close(i32 %4), !dbg !16467
  %5 = load i32, i32* %e, align 4, !dbg !16468, !tbaa !2985
  %call4 = call i32* @__errno_location() #15, !dbg !16469
  store i32 %5, i32* %call4, align 4, !dbg !16470, !tbaa !2985, !ctir !7
  %6 = load i32, i32* %f, align 4, !dbg !16471, !tbaa !2985
  store i32 %6, i32* %fd.addr, align 4, !dbg !16472, !tbaa !2985
  br label %if.end, !dbg !16473

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !16474, !tbaa !2985
  ret i32 %7, !dbg !16475
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !16476 !ctir !1164 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16477, metadata !DIExpression()), !dbg !16478
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16479, metadata !DIExpression()), !dbg !16480
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16481, metadata !DIExpression()), !dbg !16482
  store i32 %options, i32* %options.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16483, metadata !DIExpression()), !dbg !16484
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !16485, !tbaa !2998
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16486, !tbaa !2998
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16487, !tbaa !2998
  %3 = load i32, i32* %options.addr, align 4, !dbg !16488, !tbaa !2985
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !16489
  ret i32 %call, !dbg !16490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1134 !ctir !1136 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !1166
  %src_s = alloca i64, align 8, !ctir !1166
  %dst_ns = alloca i32, align 4, !ctir !7
  %src_ns = alloca i32, align 4, !ctir !7
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1168
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1169
  %res = alloca i32, align 4, !ctir !7
  %dst_a_s = alloca i64, align 8, !ctir !1166
  %dst_c_s = alloca i64, align 8, !ctir !1166
  %dst_m_s = alloca i64, align 8, !ctir !1166
  %dst_a_ns = alloca i32, align 4, !ctir !7
  %dst_c_ns = alloca i32, align 4, !ctir !7
  %dst_m_ns = alloca i32, align 4, !ctir !7
  %odd_second = alloca i8, align 1, !ctir !120
  %a = alloca i32, align 4, !ctir !7
  %c = alloca i32, align 4, !ctir !7
  %m = alloca i32, align 4, !ctir !7
  %SR10 = alloca i32, align 4, !ctir !7
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1174
  %dst_status = alloca %struct.stat, align 8, !ctir !1140
  %s = alloca i64, align 8, !ctir !1166
  %stat_result = alloca i32, align 4, !ctir !7
  %old_res = alloca i32, align 4, !ctir !7
  %a168 = alloca i32, align 4, !ctir !7
  store i32 %dfd, i32* %dfd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !16491, metadata !DIExpression()), !dbg !16492
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16493, metadata !DIExpression()), !dbg !16494
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16495, metadata !DIExpression()), !dbg !16496
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16497, metadata !DIExpression()), !dbg !16498
  store i32 %options, i32* %options.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16499, metadata !DIExpression()), !dbg !16500
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !16501, metadata !DIExpression()), !dbg !16502
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16503, !tbaa !2998
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16504, !ctir !1139
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !16504, !ctir !1154
  %1 = load i64, i64* %tv_sec, align 8, !dbg !16504, !tbaa !16505, !ctir !341
  store i64 %1, i64* %dst_s, align 8, !dbg !16502, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !16506, metadata !DIExpression()), !dbg !16507
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16508, !tbaa !2998
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !16509, !ctir !1139
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !16509, !ctir !1154
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !16509, !tbaa !16505, !ctir !341
  store i64 %3, i64* %src_s, align 8, !dbg !16507, !tbaa !3851
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !16510, metadata !DIExpression()), !dbg !16511
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16512, !tbaa !2998
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !16513
  %conv = trunc i64 %call to i32, !dbg !16513
  store i32 %conv, i32* %dst_ns, align 4, !dbg !16511, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !16514, metadata !DIExpression()), !dbg !16515
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16516, !tbaa !2998
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !16517
  %conv4 = trunc i64 %call3 to i32, !dbg !16517
  store i32 %conv4, i32* %src_ns, align 4, !dbg !16515, !tbaa !2985
  %6 = load i32, i32* %options.addr, align 4, !dbg !16518, !tbaa !2985
  %and = and i32 %6, 1, !dbg !16520
  %tobool = icmp ne i32 %and, 0, !dbg !16520
  br i1 %tobool, label %if.then, label %if.end207, !dbg !16521

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !16522, metadata !DIExpression()), !dbg !16524
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !16524, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !16525, metadata !DIExpression()), !dbg !16526
  call void @llvm.dbg.declare(metadata i32* %res, metadata !16527, metadata !DIExpression()), !dbg !16528
  %7 = load i64, i64* %dst_s, align 8, !dbg !16529, !tbaa !3851
  %8 = load i64, i64* %src_s, align 8, !dbg !16531, !tbaa !3851
  %cmp = icmp eq i64 %7, %8, !dbg !16532
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16533

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !16534, !tbaa !2985
  %10 = load i32, i32* %src_ns, align 4, !dbg !16535, !tbaa !2985
  %cmp6 = icmp eq i32 %9, %10, !dbg !16536
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !16537

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !16538
  br label %return, !dbg !16538

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !16539, !tbaa !3851
  %12 = load i64, i64* %src_s, align 8, !dbg !16541, !tbaa !3851
  %sub = sub nsw i64 %12, 2, !dbg !16542
  %cmp9 = icmp sle i64 %11, %sub, !dbg !16543
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16544

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16545
  br label %return, !dbg !16545

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !16546, !tbaa !3851
  %14 = load i64, i64* %dst_s, align 8, !dbg !16548, !tbaa !3851
  %sub13 = sub nsw i64 %14, 2, !dbg !16549
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !16550
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !16551

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !16552
  br label %return, !dbg !16552

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16553, !tbaa !2998
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !16553
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !16555

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !16556
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16557, !tbaa !2998
  br label %if.end21, !dbg !16558

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16559, !tbaa !2998
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !16559
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !16561

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16562, !tbaa !2998
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !16562
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !16565

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #10, !dbg !16566
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !16566
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16568, !tbaa !2998
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16569, !tbaa !2998
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !16569
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !16571

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !16572

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16573, !tbaa !2998
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !16574, !ctir !1169
  store i32 2000000000, i32* %resolution, align 8, !dbg !16575, !tbaa !16576, !ctir !7
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16578, !tbaa !2998
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !16579, !ctir !1169
  store i8 0, i8* %exact, align 4, !dbg !16580, !tbaa !16581, !ctir !120
  br label %if.end30, !dbg !16582

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16583, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !16584, !ctir !1139
  %23 = load i64, i64* %st_dev, align 8, !dbg !16584, !tbaa !3876, !ctir !231
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16585, !tbaa !2998
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !16586, !ctir !1169
  store i64 %23, i64* %dev, align 8, !dbg !16587, !tbaa !16588, !ctir !230
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16589, !tbaa !2998
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16590, !tbaa !2998
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !16590
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !16591
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !16591
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !16592, !tbaa !2998
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16593, !tbaa !2998
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !16593
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !16595

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !16596

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16597, !tbaa !2998
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16599, !tbaa !2998
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !16600
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !16601

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16602, !tbaa !2998
  br label %if.end38, !dbg !16604

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !16605

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !16606

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !16607), !dbg !16609
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16610, !tbaa !2998
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !16610
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !16612

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16613, !tbaa !2998
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !16615, !ctir !1139
  %34 = load i64, i64* %st_dev41, align 8, !dbg !16615, !tbaa !3876, !ctir !231
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !16616, !ctir !1169
  store i64 %34, i64* %dev42, align 8, !dbg !16617, !tbaa !16588, !ctir !230
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16618, !tbaa !2998
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !16619
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !16620
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !16620
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !16621, !tbaa !2998
  br label %if.end44, !dbg !16622

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16623, !tbaa !2998
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !16623
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !16625

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !16626, !tbaa !2998
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16628, !tbaa !2998
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !16629, !ctir !1169
  store i32 2000000000, i32* %resolution47, align 8, !dbg !16630, !tbaa !16576, !ctir !7
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16631, !tbaa !2998
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !16632, !ctir !1169
  store i8 0, i8* %exact48, align 4, !dbg !16633, !tbaa !16581, !ctir !120
  br label %if.end49, !dbg !16634

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16635, !tbaa !2998
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !16636, !ctir !1169
  %42 = load i32, i32* %resolution51, align 8, !dbg !16636, !tbaa !16576, !ctir !7
  store i32 %42, i32* %res, align 4, !dbg !16637, !tbaa !2985
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16638, !tbaa !2998
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !16640, !ctir !1169
  %44 = load i8, i8* %exact52, align 4, !dbg !16640, !tbaa !16581
  %tobool53 = trunc i8 %44 to i1, !dbg !16640, !ctir !120
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !16641

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !16642, metadata !DIExpression()), !dbg !16644
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16645, !tbaa !2998
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !16646, !ctir !1139
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !16646, !ctir !1154
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !16646, !tbaa !16647, !ctir !341
  store i64 %46, i64* %dst_a_s, align 8, !dbg !16644, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !16648, metadata !DIExpression()), !dbg !16649
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16650, !tbaa !2998
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !16651, !ctir !1139
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !16651, !ctir !1154
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !16651, !tbaa !16652, !ctir !341
  store i64 %48, i64* %dst_c_s, align 8, !dbg !16649, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !16653, metadata !DIExpression()), !dbg !16654
  %49 = load i64, i64* %dst_s, align 8, !dbg !16655, !tbaa !3851
  store i64 %49, i64* %dst_m_s, align 8, !dbg !16654, !tbaa !3851
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !16656, metadata !DIExpression()), !dbg !16657
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16658, !tbaa !2998
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !16659
  %conv58 = trunc i64 %call57 to i32, !dbg !16659
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !16657, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !16660, metadata !DIExpression()), !dbg !16661
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16662, !tbaa !2998
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !16663
  %conv60 = trunc i64 %call59 to i32, !dbg !16663
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !16661, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !16664, metadata !DIExpression()), !dbg !16665
  %52 = load i32, i32* %dst_ns, align 4, !dbg !16666, !tbaa !2985
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !16665, !tbaa !2985
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !16667, metadata !DIExpression()), !dbg !16669
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !16670, !tbaa !3851
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !16671, !tbaa !3851
  %or = or i64 %53, %54, !dbg !16672
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !16673, !tbaa !3851
  %or61 = or i64 %or, %55, !dbg !16674
  %and62 = and i64 %or61, 1, !dbg !16675
  %tobool63 = icmp ne i64 %and62, 0, !dbg !16676
  %frombool = zext i1 %tobool63 to i8, !dbg !16669
  store i8 %frombool, i8* %odd_second, align 1, !dbg !16669, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16677, metadata !DIExpression()), !dbg !16680
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !16681, !tbaa !2985
  store i32 %56, i32* %a, align 4, !dbg !16680, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16682, metadata !DIExpression()), !dbg !16683
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !16684, !tbaa !2985
  store i32 %57, i32* %c, align 4, !dbg !16683, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %m, metadata !16685, metadata !DIExpression()), !dbg !16686
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !16687, !tbaa !2985
  store i32 %58, i32* %m, align 4, !dbg !16686, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !16688, metadata !DIExpression()), !dbg !16689
  store i32 1, i32* %SR10, align 4, !dbg !16689, !tbaa !2985
  %59 = load i32, i32* %SR10, align 4, !dbg !16690, !tbaa !2985
  %mul = mul nsw i32 %59, 10, !dbg !16690
  store i32 %mul, i32* %SR10, align 4, !dbg !16690, !tbaa !2985
  %60 = load i32, i32* %a, align 4, !dbg !16691, !tbaa !2985
  %61 = load i32, i32* %SR10, align 4, !dbg !16693, !tbaa !2985
  %rem = srem i32 %60, %61, !dbg !16694
  %62 = load i32, i32* %c, align 4, !dbg !16695, !tbaa !2985
  %63 = load i32, i32* %SR10, align 4, !dbg !16696, !tbaa !2985
  %rem64 = srem i32 %62, %63, !dbg !16697
  %or65 = or i32 %rem, %rem64, !dbg !16698
  %64 = load i32, i32* %m, align 4, !dbg !16699, !tbaa !2985
  %65 = load i32, i32* %SR10, align 4, !dbg !16700, !tbaa !2985
  %rem66 = srem i32 %64, %65, !dbg !16701
  %or67 = or i32 %or65, %rem66, !dbg !16702
  %cmp68 = icmp ne i32 %or67, 0, !dbg !16703
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !16704

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !16705, !tbaa !2985
  br label %if.end96, !dbg !16706

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !16707, !tbaa !2985
  store i32 %66, i32* %res, align 4, !dbg !16709, !tbaa !2985
  %67 = load i32, i32* %SR10, align 4, !dbg !16710, !tbaa !2985
  %68 = load i32, i32* %a, align 4, !dbg !16711, !tbaa !2985
  %div = sdiv i32 %68, %67, !dbg !16711
  store i32 %div, i32* %a, align 4, !dbg !16711, !tbaa !2985
  %69 = load i32, i32* %SR10, align 4, !dbg !16712, !tbaa !2985
  %70 = load i32, i32* %c, align 4, !dbg !16713, !tbaa !2985
  %div72 = sdiv i32 %70, %69, !dbg !16713
  store i32 %div72, i32* %c, align 4, !dbg !16713, !tbaa !2985
  %71 = load i32, i32* %SR10, align 4, !dbg !16714, !tbaa !2985
  %72 = load i32, i32* %m, align 4, !dbg !16715, !tbaa !2985
  %div73 = sdiv i32 %72, %71, !dbg !16715
  store i32 %div73, i32* %m, align 4, !dbg !16715, !tbaa !2985
  br label %for.cond, !dbg !16716

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !16717, !tbaa !2985
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16719, !tbaa !2998
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !16720, !ctir !1169
  %75 = load i32, i32* %resolution74, align 8, !dbg !16720, !tbaa !16576, !ctir !7
  %cmp75 = icmp slt i32 %73, %75, !dbg !16721
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !16722

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !16723, !tbaa !2985
  %rem77 = srem i32 %76, 10, !dbg !16724
  %77 = load i32, i32* %c, align 4, !dbg !16725, !tbaa !2985
  %rem78 = srem i32 %77, 10, !dbg !16726
  %or79 = or i32 %rem77, %rem78, !dbg !16727
  %78 = load i32, i32* %m, align 4, !dbg !16728, !tbaa !2985
  %rem80 = srem i32 %78, 10, !dbg !16729
  %or81 = or i32 %or79, %rem80, !dbg !16730
  %cmp82 = icmp eq i32 %or81, 0, !dbg !16731
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !16732
  br i1 %79, label %for.body, label %for.end, !dbg !16733

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !16734, !tbaa !2985
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !16736
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !16737

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !16738, !tbaa !3109
  %tobool87 = trunc i8 %81 to i1, !dbg !16738
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !16741

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !16742, !tbaa !2985
  %mul89 = mul nsw i32 %82, 2, !dbg !16742
  store i32 %mul89, i32* %res, align 4, !dbg !16742, !tbaa !2985
  br label %if.end90, !dbg !16743

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !16744

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !16745

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !16746, !tbaa !2985
  %mul92 = mul nsw i32 %83, 10, !dbg !16746
  store i32 %mul92, i32* %res, align 4, !dbg !16746, !tbaa !2985
  %84 = load i32, i32* %a, align 4, !dbg !16747, !tbaa !2985
  %div93 = sdiv i32 %84, 10, !dbg !16747
  store i32 %div93, i32* %a, align 4, !dbg !16747, !tbaa !2985
  %85 = load i32, i32* %c, align 4, !dbg !16748, !tbaa !2985
  %div94 = sdiv i32 %85, 10, !dbg !16748
  store i32 %div94, i32* %c, align 4, !dbg !16748, !tbaa !2985
  %86 = load i32, i32* %m, align 4, !dbg !16749, !tbaa !2985
  %div95 = sdiv i32 %86, 10, !dbg !16749
  store i32 %div95, i32* %m, align 4, !dbg !16749, !tbaa !2985
  br label %for.cond, !dbg !16750, !llvm.loop !16751

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !16753, !tbaa !2985
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16754, !tbaa !2998
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !16755, !ctir !1169
  store i32 %87, i32* %resolution97, align 8, !dbg !16756, !tbaa !16576, !ctir !7
  %89 = load i32, i32* %res, align 4, !dbg !16757, !tbaa !2985
  %cmp98 = icmp slt i32 1, %89, !dbg !16759
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !16760

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !16761, metadata !DIExpression()), !dbg !16763
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !16764, metadata !DIExpression()), !dbg !16765
  %90 = load i32, i32* %src_ns, align 4, !dbg !16766, !tbaa !2985
  %rem101 = srem i32 %90, 1, !dbg !16767
  %91 = load i32, i32* %src_ns, align 4, !dbg !16768, !tbaa !2985
  %sub102 = sub nsw i32 %91, %rem101, !dbg !16768
  store i32 %sub102, i32* %src_ns, align 4, !dbg !16768, !tbaa !2985
  call void @llvm.dbg.declare(metadata i64* %s, metadata !16769, metadata !DIExpression()), !dbg !16771
  %92 = load i64, i64* %src_s, align 8, !dbg !16772, !tbaa !3851
  %93 = load i32, i32* %res, align 4, !dbg !16773, !tbaa !2985
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !16774
  %94 = zext i1 %cmp103 to i64, !dbg !16773
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !16773
  %neg = xor i32 %cond, -1, !dbg !16775
  %conv105 = sext i32 %neg to i64, !dbg !16775
  %and106 = and i64 %92, %conv105, !dbg !16776
  store i64 %and106, i64* %s, align 8, !dbg !16771, !tbaa !3851
  %95 = load i64, i64* %src_s, align 8, !dbg !16777, !tbaa !3851
  %96 = load i64, i64* %dst_s, align 8, !dbg !16779, !tbaa !3851
  %cmp107 = icmp slt i64 %95, %96, !dbg !16780
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !16781

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !16782, !tbaa !3851
  %98 = load i64, i64* %dst_s, align 8, !dbg !16783, !tbaa !3851
  %cmp109 = icmp eq i64 %97, %98, !dbg !16784
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !16785

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !16786, !tbaa !2985
  %100 = load i32, i32* %dst_ns, align 4, !dbg !16787, !tbaa !2985
  %cmp112 = icmp sle i32 %99, %100, !dbg !16788
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !16789

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !16790
  br label %return, !dbg !16790

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !16791, !tbaa !3851
  %102 = load i64, i64* %s, align 8, !dbg !16793, !tbaa !3851
  %cmp116 = icmp slt i64 %101, %102, !dbg !16794
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !16795

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !16796, !tbaa !3851
  %104 = load i64, i64* %s, align 8, !dbg !16797, !tbaa !3851
  %cmp119 = icmp eq i64 %103, %104, !dbg !16798
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !16799

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !16800, !tbaa !2985
  %106 = load i32, i32* %src_ns, align 4, !dbg !16801, !tbaa !2985
  %107 = load i32, i32* %src_ns, align 4, !dbg !16802, !tbaa !2985
  %108 = load i32, i32* %res, align 4, !dbg !16803, !tbaa !2985
  %rem122 = srem i32 %107, %108, !dbg !16804
  %sub123 = sub nsw i32 %106, %rem122, !dbg !16805
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !16806
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !16807

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !16808
  br label %return, !dbg !16808

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !16809, !tbaa !3851
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16810, !ctir !1174
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !16811, !ctir !1154
  store i64 %109, i64* %tv_sec128, align 16, !dbg !16812, !tbaa !16144, !ctir !341
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !16813, !tbaa !2985
  %conv129 = sext i32 %110 to i64, !dbg !16813
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16814, !ctir !1174
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !16815, !ctir !1154
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !16816, !tbaa !16147, !ctir !343
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !16817, !tbaa !3851
  %112 = load i32, i32* %res, align 4, !dbg !16818, !tbaa !2985
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !16819
  %conv132 = zext i1 %cmp131 to i32, !dbg !16819
  %conv133 = sext i32 %conv132 to i64, !dbg !16820
  %or134 = or i64 %111, %conv133, !dbg !16821
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16822, !ctir !1174
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !16823, !ctir !1154
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !16824, !tbaa !16144, !ctir !341
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !16825, !tbaa !2985
  %114 = load i32, i32* %res, align 4, !dbg !16826, !tbaa !2985
  %div137 = sdiv i32 %114, 9, !dbg !16827
  %add = add nsw i32 %113, %div137, !dbg !16828
  %conv138 = sext i32 %add to i64, !dbg !16825
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16829, !ctir !1174
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !16830, !ctir !1154
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !16831, !tbaa !16147, !ctir !343
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !16832, !tbaa !2985
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !16834, !tbaa !2998
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16835
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #10, !dbg !16836
  %tobool142 = icmp ne i32 %call141, 0, !dbg !16836
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !16837

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !16838
  br label %return, !dbg !16838

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !16839, metadata !DIExpression()), !dbg !16841
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !16842, !tbaa !2985
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !16843, !tbaa !2998
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #10, !dbg !16844
  store i32 %call145, i32* %stat_result, align 4, !dbg !16841, !tbaa !2985
  %119 = load i32, i32* %stat_result, align 4, !dbg !16845, !tbaa !2985
  %conv146 = sext i32 %119 to i64, !dbg !16845
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16847, !ctir !1140
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !16847, !ctir !1154
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !16847, !tbaa !16505, !ctir !341
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !16848, !tbaa !3851
  %xor = xor i64 %120, %121, !dbg !16849
  %or149 = or i64 %conv146, %xor, !dbg !16850
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16851
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !16852, !tbaa !2985
  %conv151 = sext i32 %122 to i64, !dbg !16852
  %xor152 = xor i64 %call150, %conv151, !dbg !16853
  %or153 = or i64 %or149, %xor152, !dbg !16854
  %tobool154 = icmp ne i64 %or153, 0, !dbg !16854
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !16855

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !16856, !tbaa !3851
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16858, !ctir !1174
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !16859, !ctir !1154
  store i64 %123, i64* %tv_sec157, align 16, !dbg !16860, !tbaa !16144, !ctir !341
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !16861, !tbaa !2985
  %conv158 = sext i32 %124 to i64, !dbg !16861
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16862, !ctir !1174
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !16863, !ctir !1154
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !16864, !tbaa !16147, !ctir !343
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !16865, !tbaa !2985
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !16866, !tbaa !2998
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16867
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #10, !dbg !16868
  br label %if.end163, !dbg !16869

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !16870, !tbaa !2985
  %cmp164 = icmp ne i32 %127, 0, !dbg !16872
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !16873

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !16874
  br label %return, !dbg !16874

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !16875, metadata !DIExpression()), !dbg !16877
  %128 = load i32, i32* %res, align 4, !dbg !16878, !tbaa !2985
  store i32 %128, i32* %old_res, align 4, !dbg !16877, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !16879, metadata !DIExpression()), !dbg !16880
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16881, !ctir !1140
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !16881, !ctir !1154
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !16881, !tbaa !16505, !ctir !341
  %and171 = and i64 %129, 1, !dbg !16882
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !16883
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16884
  %add174 = add nsw i64 %mul172, %call173, !dbg !16885
  %conv175 = trunc i64 %add174 to i32, !dbg !16886
  store i32 %conv175, i32* %a168, align 4, !dbg !16880, !tbaa !2985
  store i32 1, i32* %res, align 4, !dbg !16887, !tbaa !2985
  %130 = load i32, i32* %res, align 4, !dbg !16888, !tbaa !2985
  %131 = load i32, i32* %a168, align 4, !dbg !16890, !tbaa !2985
  %div176 = sdiv i32 %131, %130, !dbg !16890
  store i32 %div176, i32* %a168, align 4, !dbg !16890, !tbaa !2985
  br label %for.cond177, !dbg !16891

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !16892, !tbaa !2985
  %rem178 = srem i32 %132, 10, !dbg !16894
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !16895
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !16896

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !16897, !tbaa !2985
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !16900
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !16901

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !16902, !tbaa !2985
  %mul185 = mul nsw i32 %134, 2, !dbg !16902
  store i32 %mul185, i32* %res, align 4, !dbg !16902, !tbaa !2985
  br label %for.end194, !dbg !16904

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !16905, !tbaa !2985
  %mul187 = mul nsw i32 %135, 10, !dbg !16905
  store i32 %mul187, i32* %res, align 4, !dbg !16905, !tbaa !2985
  %136 = load i32, i32* %res, align 4, !dbg !16906, !tbaa !2985
  %137 = load i32, i32* %old_res, align 4, !dbg !16908, !tbaa !2985
  %cmp188 = icmp eq i32 %136, %137, !dbg !16909
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !16910

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !16911

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !16912

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !16913, !tbaa !2985
  %div193 = sdiv i32 %138, 10, !dbg !16913
  store i32 %div193, i32* %a168, align 4, !dbg !16913, !tbaa !2985
  br label %for.cond177, !dbg !16914, !llvm.loop !16915

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !16917

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !16918, !tbaa !2985
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16919, !tbaa !2998
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !16920, !ctir !1169
  store i32 %139, i32* %resolution196, align 8, !dbg !16921, !tbaa !16576, !ctir !7
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16922, !tbaa !2998
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !16923, !ctir !1169
  store i8 1, i8* %exact197, align 4, !dbg !16924, !tbaa !16581, !ctir !120
  br label %if.end198, !dbg !16925

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !16926, !tbaa !2985
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !16927
  %143 = zext i1 %cmp199 to i64, !dbg !16926
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !16926
  %neg202 = xor i32 %cond201, -1, !dbg !16928
  %conv203 = sext i32 %neg202 to i64, !dbg !16928
  %144 = load i64, i64* %src_s, align 8, !dbg !16929, !tbaa !3851
  %and204 = and i64 %144, %conv203, !dbg !16929
  store i64 %and204, i64* %src_s, align 8, !dbg !16929, !tbaa !3851
  %145 = load i32, i32* %src_ns, align 4, !dbg !16930, !tbaa !2985
  %146 = load i32, i32* %res, align 4, !dbg !16931, !tbaa !2985
  %rem205 = srem i32 %145, %146, !dbg !16932
  %147 = load i32, i32* %src_ns, align 4, !dbg !16933, !tbaa !2985
  %sub206 = sub nsw i32 %147, %rem205, !dbg !16933
  store i32 %sub206, i32* %src_ns, align 4, !dbg !16933, !tbaa !2985
  br label %if.end207, !dbg !16934

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !16935, !tbaa !3851
  %149 = load i64, i64* %src_s, align 8, !dbg !16936, !tbaa !3851
  %cmp208 = icmp slt i64 %148, %149, !dbg !16937
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !16935

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !16935

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !16938, !tbaa !3851
  %151 = load i64, i64* %src_s, align 8, !dbg !16939, !tbaa !3851
  %cmp210 = icmp sgt i64 %150, %151, !dbg !16940
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !16938

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !16938

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !16941, !tbaa !2985
  %153 = load i32, i32* %src_ns, align 4, !dbg !16942, !tbaa !2985
  %cmp214 = icmp slt i32 %152, %153, !dbg !16943
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !16941

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !16941

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !16944, !tbaa !2985
  %155 = load i32, i32* %src_ns, align 4, !dbg !16945, !tbaa !2985
  %cmp218 = icmp sgt i32 %154, %155, !dbg !16946
  %conv219 = zext i1 %cmp218 to i32, !dbg !16946
  br label %cond.end, !dbg !16941

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !16941
  br label %cond.end221, !dbg !16938

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !16938
  br label %cond.end223, !dbg !16935

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !16935
  store i32 %cond224, i32* %retval, align 4, !dbg !16947
  br label %return, !dbg !16947

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !16948
  ret i32 %156, !dbg !16948
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !16949 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !1175
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16950, metadata !DIExpression()), !dbg !16951
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !16952, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !16954, metadata !DIExpression()), !dbg !16955
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16956, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16956
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !16955, !tbaa !2998
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !16957, !tbaa !2998
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !16958, !ctir !1176
  %3 = load i64, i64* %dev, align 8, !dbg !16958, !tbaa !16588, !ctir !230
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !16959, !tbaa !3851
  %rem = urem i64 %3, %4, !dbg !16960
  ret i64 %rem, !dbg !16961
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !16962 !ctir !551 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !1175
  %b = alloca %struct.fs_res*, align 8, !ctir !1175
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16963, metadata !DIExpression()), !dbg !16964
  store i8* %y, i8** %y.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !16965, metadata !DIExpression()), !dbg !16966
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !16967, metadata !DIExpression()), !dbg !16968
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16969, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16969
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !16968, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !16970, metadata !DIExpression()), !dbg !16971
  %2 = load i8*, i8** %y.addr, align 8, !dbg !16972, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !16972
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !16971, !tbaa !2998
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !16973, !tbaa !2998
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !16974, !ctir !1176
  %5 = load i64, i64* %dev, align 8, !dbg !16974, !tbaa !16588, !ctir !230
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !16975, !tbaa !2998
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !16976, !ctir !1176
  %7 = load i64, i64* %dev1, align 8, !dbg !16976, !tbaa !16588, !ctir !230
  %cmp = icmp eq i64 %5, %7, !dbg !16977
  ret i1 %cmp, !dbg !16978
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !16979 !ctir !1185 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16981, metadata !DIExpression()), !dbg !16982
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16983, metadata !DIExpression()), !dbg !16984
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !16985, metadata !DIExpression()), !dbg !16986
  %0 = load i32, i32* %dir.addr, align 4, !dbg !16987, !tbaa !2985
  %1 = load i8*, i8** %file.addr, align 8, !dbg !16988, !tbaa !2998
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !16989, !tbaa !2998
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #10, !dbg !16990
  ret i32 %call, !dbg !16991
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !16992 !ctir !1185 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1193
  %ts = alloca %struct.timespec*, align 8, !ctir !1194
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1211
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1195
  %t = alloca %struct.timespec*, align 8, !ctir !1202
  %abig = alloca i8, align 1, !ctir !120
  %mbig = alloca i8, align 1, !ctir !120
  %adiff = alloca i64, align 8, !ctir !1166
  %mdiff = alloca i64, align 8, !ctir !1166
  %tt = alloca %struct.timespec*, align 8, !ctir !1202
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1195
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16993, metadata !DIExpression()), !dbg !16994
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16995, metadata !DIExpression()), !dbg !16996
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16997, metadata !DIExpression()), !dbg !16998
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !16999, metadata !DIExpression()), !dbg !17000
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17001, metadata !DIExpression()), !dbg !17002
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17003, !tbaa !2998
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17003
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17003

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17004
  br label %cond.end, !dbg !17003

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17003

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17003
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17002, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17005, metadata !DIExpression()), !dbg !17006
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17006, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17007, metadata !DIExpression()), !dbg !17008
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17009, !tbaa !2998
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17009
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17011

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17012, !ctir !1193
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17014, !tbaa !2998
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17014, !ctir !1187
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17014
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17014
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17014, !tbaa.struct !6331
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17015, !ctir !1193
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17016, !tbaa !2998
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17016, !ctir !1187
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17016
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17016, !tbaa.struct !6331
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17017, !tbaa !2998
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17018
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17019, !tbaa !2985
  br label %if.end, !dbg !17020

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17021, !tbaa !2985
  %cmp = icmp slt i32 %9, 0, !dbg !17023
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17024

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17025
  br label %return, !dbg !17025

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !17026, !tbaa !2985
  %cmp7 = icmp slt i32 %10, 0, !dbg !17028
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !17029

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !17030, !tbaa !2998
  %tobool8 = icmp ne i8* %11, null, !dbg !17030
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !17031

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !17032
  store i32 9, i32* %call10, align 4, !dbg !17034, !tbaa !2985, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17035
  br label %return, !dbg !17035

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !17036, !tbaa !2985
  %cmp12 = icmp sle i32 0, %12, !dbg !17038
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !17039

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17040, metadata !DIExpression()), !dbg !17042
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !17043, !tbaa !2985
  %cmp14 = icmp eq i32 %13, 2, !dbg !17045
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !17046

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !17047, !tbaa !2985
  %cmp16 = icmp slt i32 %14, 0, !dbg !17050
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !17051

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !17052, !tbaa !2998
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #10, !dbg !17053
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17053
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !17047

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !17054, !tbaa !2985
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #10, !dbg !17055
  %tobool22 = icmp ne i32 %call21, 0, !dbg !17055
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !17051

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !17056
  br label %return, !dbg !17056

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17057, !tbaa !2998
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !17057, !ctir !1194
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17059, !ctir !1189
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !17059, !tbaa !16147, !ctir !343
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !17060
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !17061

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17062, !tbaa !2998
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !17062, !ctir !1194
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17063
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17063
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !17063
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !17063
  store i64 %22, i64* %21, align 8, !dbg !17063
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !17063
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !17063
  store i64 %24, i64* %23, align 8, !dbg !17063
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !17063
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !17063
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !17063, !tbaa.struct !6331
  br label %if.end38, !dbg !17062

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17064, !tbaa !2998
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17064, !ctir !1194
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !17066, !ctir !1189
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !17066, !tbaa !16147, !ctir !343
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !17067
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !17068

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17069, !tbaa !2998
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17069, !ctir !1194
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17070
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !17070
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !17070
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !17070
  store i64 %32, i64* %31, align 8, !dbg !17070
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !17070
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !17070
  store i64 %34, i64* %33, align 8, !dbg !17070
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !17070
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !17070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !17070, !tbaa.struct !6331
  br label %if.end37, !dbg !17069

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !17071, !tbaa !2985
  %inc = add nsw i32 %37, 1, !dbg !17071
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17071, !tbaa !2985
  br label %if.end39, !dbg !17072

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !17073, !tbaa !2985
  %cmp40 = icmp slt i32 %38, 0, !dbg !17075
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !17076

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !17077, !tbaa !2998
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17079, !tbaa !2998
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #10, !dbg !17080
  store i32 %call42, i32* %result, align 4, !dbg !17081, !tbaa !2985
  %41 = load i32, i32* %result, align 4, !dbg !17082, !tbaa !2985
  %cmp43 = icmp slt i32 0, %41, !dbg !17084
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !17085

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #15, !dbg !17086
  store i32 38, i32* %call45, align 4, !dbg !17087, !tbaa !2985, !ctir !7
  br label %if.end46, !dbg !17086

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !17088, !tbaa !2985
  %cmp47 = icmp eq i32 %42, 0, !dbg !17090
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !17091

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #15, !dbg !17092
  %43 = load i32, i32* %call48, align 4, !dbg !17092, !tbaa !2985, !ctir !7
  %cmp49 = icmp ne i32 %43, 38, !dbg !17093
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !17094

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17095, !tbaa !2985
  %44 = load i32, i32* %result, align 4, !dbg !17097, !tbaa !2985
  store i32 %44, i32* %retval, align 4, !dbg !17098
  br label %return, !dbg !17098

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !17099

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !17100, !tbaa !2985
  %cmp53 = icmp sle i32 0, %45, !dbg !17102
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !17103

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !17104, !tbaa !2985
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17106, !tbaa !2998
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #10, !dbg !17107
  store i32 %call55, i32* %result, align 4, !dbg !17108, !tbaa !2985
  %48 = load i32, i32* %result, align 4, !dbg !17109, !tbaa !2985
  %cmp56 = icmp slt i32 0, %48, !dbg !17111
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !17112

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #15, !dbg !17113
  store i32 38, i32* %call58, align 4, !dbg !17114, !tbaa !2985, !ctir !7
  br label %if.end59, !dbg !17113

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !17115, !tbaa !2985
  %cmp60 = icmp eq i32 %49, 0, !dbg !17117
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !17118

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #15, !dbg !17119
  %50 = load i32, i32* %call62, align 4, !dbg !17119, !tbaa !2985, !ctir !7
  %cmp63 = icmp ne i32 %50, 38, !dbg !17120
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !17121

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17122, !tbaa !2985
  %51 = load i32, i32* %result, align 4, !dbg !17124, !tbaa !2985
  store i32 %51, i32* %retval, align 4, !dbg !17125
  br label %return, !dbg !17125

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !17126

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !17127

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !17128, !tbaa !2985
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17129, !tbaa !2985
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !17130, !tbaa !2985
  %tobool68 = icmp ne i32 %52, 0, !dbg !17130
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !17132

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !17133, !tbaa !2985
  %cmp70 = icmp ne i32 %53, 3, !dbg !17136
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !17137

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !17138, !tbaa !2985
  %cmp72 = icmp slt i32 %54, 0, !dbg !17139
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !17140

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !17141, !tbaa !2998
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #10, !dbg !17142
  %tobool75 = icmp ne i32 %call74, 0, !dbg !17142
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !17138

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !17143, !tbaa !2985
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #10, !dbg !17144
  %tobool78 = icmp ne i32 %call77, 0, !dbg !17144
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !17140

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !17145
  br label %return, !dbg !17145

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17146, !tbaa !2998
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !17146
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !17148

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17149
  br i1 %call83, label %if.then84, label %if.end85, !dbg !17150

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !17151
  br label %return, !dbg !17151

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !17152

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !17153, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !17156, metadata !DIExpression()), !dbg !17157
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17158, !tbaa !2998
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !17158
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !17160

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17161, !tbaa !2998
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !17161, !ctir !1194
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !17163, !ctir !1189
  %60 = load i64, i64* %tv_sec, align 8, !dbg !17163, !tbaa !16144, !ctir !341
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17164, !ctir !1195
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !17165, !ctir !1196
  store i64 %60, i64* %tv_sec91, align 16, !dbg !17166, !tbaa !17167, !ctir !341
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17169, !tbaa !2998
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !17169, !ctir !1194
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !17170, !ctir !1189
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !17170, !tbaa !16147, !ctir !343
  %div = sdiv i64 %62, 1000, !dbg !17171
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17172, !ctir !1195
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !17173, !ctir !1196
  store i64 %div, i64* %tv_usec, align 8, !dbg !17174, !tbaa !17175, !ctir !1201
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17176, !tbaa !2998
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !17176, !ctir !1194
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !17177, !ctir !1189
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !17177, !tbaa !16144, !ctir !341
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17178, !ctir !1195
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !17179, !ctir !1196
  store i64 %64, i64* %tv_sec98, align 16, !dbg !17180, !tbaa !17167, !ctir !341
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17181, !tbaa !2998
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !17181, !ctir !1194
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !17182, !ctir !1189
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !17182, !tbaa !16147, !ctir !343
  %div101 = sdiv i64 %66, 1000, !dbg !17183
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17184, !ctir !1195
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !17185, !ctir !1196
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !17186, !tbaa !17175, !ctir !1201
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17187
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !17188, !tbaa !2998
  br label %if.end106, !dbg !17189

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !17190, !tbaa !2998
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !17191, !tbaa !2985
  %cmp107 = icmp slt i32 %67, 0, !dbg !17193
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !17194

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !17195, !tbaa !2998
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17197, !tbaa !2998
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #10, !dbg !17198
  store i32 %call109, i32* %retval, align 4, !dbg !17199
  br label %return, !dbg !17199

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !17200, !tbaa !2985
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17200, !tbaa !2998
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #10, !dbg !17200
  %cmp112 = icmp eq i32 %call111, 0, !dbg !17203
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !17204

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17205, !tbaa !2998
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !17205
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !17208

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !17209, metadata !DIExpression()), !dbg !17211
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17212, !tbaa !2998
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !17212, !ctir !1202
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !17213, !ctir !1196
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !17213, !tbaa !17175, !ctir !1201
  %cmp118 = icmp sle i64 500000, %74, !dbg !17214
  %frombool = zext i1 %cmp118 to i8, !dbg !17211
  store i8 %frombool, i8* %abig, align 1, !dbg !17211, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !17215, metadata !DIExpression()), !dbg !17216
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17217, !tbaa !2998
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !17217, !ctir !1202
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !17218, !ctir !1196
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !17218, !tbaa !17175, !ctir !1201
  %cmp121 = icmp sle i64 500000, %76, !dbg !17219
  %frombool122 = zext i1 %cmp121 to i8, !dbg !17216
  store i8 %frombool122, i8* %mbig, align 1, !dbg !17216, !tbaa !3109
  %77 = load i8, i8* %abig, align 1, !dbg !17220, !tbaa !3109
  %tobool123 = trunc i8 %77 to i1, !dbg !17220
  %conv = zext i1 %tobool123 to i32, !dbg !17220
  %78 = load i8, i8* %mbig, align 1, !dbg !17222, !tbaa !3109
  %tobool124 = trunc i8 %78 to i1, !dbg !17222
  %conv125 = zext i1 %tobool124 to i32, !dbg !17222
  %or = or i32 %conv, %conv125, !dbg !17223
  %tobool126 = icmp ne i32 %or, 0, !dbg !17223
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !17224

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !17225, !tbaa !2985
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #10, !dbg !17226
  %cmp129 = icmp eq i32 %call128, 0, !dbg !17227
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !17228

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !17229, metadata !DIExpression()), !dbg !17231
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !17232, !ctir !1211
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17232, !ctir !1189
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !17232, !tbaa !16647, !ctir !341
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17233, !tbaa !2998
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !17233, !ctir !1202
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !17234, !ctir !1196
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !17234, !tbaa !17167, !ctir !341
  %sub = sub nsw i64 %80, %82, !dbg !17235
  store i64 %sub, i64* %adiff, align 8, !dbg !17231, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !17236, metadata !DIExpression()), !dbg !17237
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !17238, !ctir !1211
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17238, !ctir !1189
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !17238, !tbaa !16505, !ctir !341
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17239, !tbaa !2998
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !17239, !ctir !1202
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !17240, !ctir !1196
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !17240, !tbaa !17167, !ctir !341
  %sub138 = sub nsw i64 %83, %85, !dbg !17241
  store i64 %sub138, i64* %mdiff, align 8, !dbg !17237, !tbaa !3851
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !17242, metadata !DIExpression()), !dbg !17243
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !17243, !tbaa !2998
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !17244, metadata !DIExpression()), !dbg !17245
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17246, !ctir !1195
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17247, !tbaa !2998
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !17247, !ctir !1202
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !17247
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !17247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !17247, !tbaa.struct !6331
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !17248, !ctir !1195
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17249, !tbaa !2998
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !17249, !ctir !1202
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !17249
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !17249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !17249, !tbaa.struct !6331
  %92 = load i8, i8* %abig, align 1, !dbg !17250, !tbaa !3109
  %tobool143 = trunc i8 %92 to i1, !dbg !17250
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !17252

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !17253, !tbaa !3851
  %cmp146 = icmp eq i64 %93, 1, !dbg !17254
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !17255

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !17256
  %cmp150 = icmp eq i64 %call149, 0, !dbg !17257
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !17258

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17259
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !17261, !tbaa !2998
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17262, !tbaa !2998
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !17262, !ctir !1202
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !17263, !ctir !1196
  store i64 0, i64* %tv_usec155, align 8, !dbg !17264, !tbaa !17175, !ctir !1201
  br label %if.end156, !dbg !17265

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !17266, !tbaa !3109
  %tobool157 = trunc i8 %95 to i1, !dbg !17266
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !17268

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !17269, !tbaa !3851
  %cmp160 = icmp eq i64 %96, 1, !dbg !17270
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !17271

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !17272
  %cmp164 = icmp eq i64 %call163, 0, !dbg !17273
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !17274

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17275
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !17277, !tbaa !2998
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17278, !tbaa !2998
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !17278, !ctir !1202
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !17279, !ctir !1196
  store i64 0, i64* %tv_usec169, align 8, !dbg !17280, !tbaa !17175, !ctir !1201
  br label %if.end170, !dbg !17281

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17282, !tbaa !2998
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !17282
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !17284

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !17285, !tbaa !2985
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17285, !tbaa !2998
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #10, !dbg !17285
  br label %if.end174, !dbg !17285

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !17286

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !17287

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !17288
  br label %return, !dbg !17288

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !17289, !tbaa !2998
  %tobool179 = icmp ne i8* %101, null, !dbg !17289
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !17291

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !17292
  br label %return, !dbg !17292

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !17294, !tbaa !2998
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17295, !tbaa !2998
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #10, !dbg !17296
  store i32 %call182, i32* %retval, align 4, !dbg !17297
  br label %return, !dbg !17297

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !17298
  ret i32 %104, !dbg !17298
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !17299 !ctir !1205 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !7
  %utime_omit_count = alloca i32, align 4, !ctir !7
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17300, metadata !DIExpression()), !dbg !17301
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17302, metadata !DIExpression()), !dbg !17303
  store i32 0, i32* %result, align 4, !dbg !17303, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !17304, metadata !DIExpression()), !dbg !17305
  store i32 0, i32* %utime_omit_count, align 4, !dbg !17305, !tbaa !2985
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17306, !tbaa !2998
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !17306, !ctir !1194
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17308, !ctir !1189
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17308, !tbaa !16147, !ctir !343
  %cmp = icmp ne i64 %1, 1073741823, !dbg !17309
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !17310

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17311, !tbaa !2998
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17311, !ctir !1194
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17312, !ctir !1189
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !17312, !tbaa !16147, !ctir !343
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !17313
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !17314

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17315, !tbaa !2998
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !17315, !ctir !1194
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !17316, !ctir !1189
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !17316, !tbaa !16147, !ctir !343
  %cmp7 = icmp sle i64 0, %5, !dbg !17317
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !17318

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17319, !tbaa !2998
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17319, !ctir !1194
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !17320, !ctir !1189
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !17320, !tbaa !16147, !ctir !343
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !17321
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !17322

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17323, !tbaa !2998
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17323, !ctir !1194
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !17324, !ctir !1189
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !17324, !tbaa !16147, !ctir !343
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !17325
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !17326

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17327, !tbaa !2998
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !17327, !ctir !1194
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !17328, !ctir !1189
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !17328, !tbaa !16147, !ctir !343
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !17329
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !17330

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17331, !tbaa !2998
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !17331, !ctir !1194
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17332, !ctir !1189
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !17332, !tbaa !16147, !ctir !343
  %cmp22 = icmp sle i64 0, %13, !dbg !17333
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !17334

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17335, !tbaa !2998
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !17335, !ctir !1194
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !17336, !ctir !1189
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !17336, !tbaa !16147, !ctir !343
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !17337
  br i1 %cmp26, label %if.end, label %if.then, !dbg !17338

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #15, !dbg !17339
  store i32 22, i32* %call, align 4, !dbg !17341, !tbaa !2985, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17342
  br label %return, !dbg !17342

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17343, !tbaa !2998
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !17343, !ctir !1194
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !17345, !ctir !1189
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !17345, !tbaa !16147, !ctir !343
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !17346
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !17347

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17348, !tbaa !2998
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !17348, !ctir !1194
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !17349, !ctir !1189
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !17349, !tbaa !16147, !ctir !343
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !17350
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !17351

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17352, !tbaa !2998
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !17352, !ctir !1194
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !17354, !ctir !1189
  store i64 0, i64* %tv_sec, align 8, !dbg !17355, !tbaa !16144, !ctir !341
  store i32 1, i32* %result, align 4, !dbg !17356, !tbaa !2985
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17357, !tbaa !2998
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !17357, !ctir !1194
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !17359, !ctir !1189
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !17359, !tbaa !16147, !ctir !343
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !17360
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !17361

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !17362, !tbaa !2985
  %inc = add nsw i32 %23, 1, !dbg !17362
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !17362, !tbaa !2985
  br label %if.end40, !dbg !17363

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !17364

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17365, !tbaa !2998
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !17365, !ctir !1194
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !17367, !ctir !1189
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !17367, !tbaa !16147, !ctir !343
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !17368
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !17369

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17370, !tbaa !2998
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !17370, !ctir !1194
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !17371, !ctir !1189
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !17371, !tbaa !16147, !ctir !343
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !17372
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !17373

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17374, !tbaa !2998
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !17374, !ctir !1194
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !17376, !ctir !1189
  store i64 0, i64* %tv_sec51, align 8, !dbg !17377, !tbaa !16144, !ctir !341
  store i32 1, i32* %result, align 4, !dbg !17378, !tbaa !2985
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17379, !tbaa !2998
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17379, !ctir !1194
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !17381, !ctir !1189
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !17381, !tbaa !16147, !ctir !343
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !17382
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !17383

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !17384, !tbaa !2985
  %inc56 = add nsw i32 %31, 1, !dbg !17384
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !17384, !tbaa !2985
  br label %if.end57, !dbg !17385

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !17386

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !17387, !tbaa !2985
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !17388, !tbaa !2985
  %cmp59 = icmp eq i32 %33, 1, !dbg !17389
  %conv = zext i1 %cmp59 to i32, !dbg !17389
  %add = add nsw i32 %32, %conv, !dbg !17390
  store i32 %add, i32* %retval, align 4, !dbg !17391
  br label %return, !dbg !17391

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !17392
  ret i32 %34, !dbg !17392
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !17393 !ctir !1207 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !1194
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !17394, metadata !DIExpression()), !dbg !17395
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !17396, metadata !DIExpression()), !dbg !17397
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !17398, metadata !DIExpression()), !dbg !17399
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17400, !tbaa !2998
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !17401, !tbaa !2998, !ctir !1194
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !17399, !tbaa !2998
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17402, !tbaa !2998
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17402, !ctir !1194
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17404, !ctir !1189
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !17404, !tbaa !16147, !ctir !343
  %cmp = icmp eq i64 %3, 1073741822, !dbg !17405
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17406

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17407, !tbaa !2998
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !17407, !ctir !1194
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17408, !ctir !1189
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !17408, !tbaa !16147, !ctir !343
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !17409
  br i1 %cmp3, label %if.then, label %if.end, !dbg !17410

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !17411
  br label %return, !dbg !17411

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17412, !tbaa !2998
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17412, !ctir !1194
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !17414, !ctir !1189
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !17414, !tbaa !16147, !ctir !343
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !17415
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !17416

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17417, !tbaa !2998
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17417, !ctir !1194
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !17418, !ctir !1189
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !17418, !tbaa !16147, !ctir !343
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !17419
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !17420

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17421, !tbaa !2998
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !17423, !tbaa !2998, !ctir !1194
  store i1 false, i1* %retval, align 1, !dbg !17424
  br label %return, !dbg !17424

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17425, !tbaa !2998
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !17425, !ctir !1194
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !17427, !ctir !1189
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !17427, !tbaa !16147, !ctir !343
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !17428
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !17429

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17430, !tbaa !2998
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17430, !ctir !1194
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17431, !tbaa !2998
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !17432
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17432
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !17432
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !17432
  store i64 %17, i64* %16, align 8, !dbg !17432
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !17432
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !17432
  store i64 %19, i64* %18, align 8, !dbg !17432
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !17432
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !17432
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !17432, !tbaa.struct !6331
  br label %if.end24, !dbg !17430

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17433, !tbaa !2998
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !17433, !ctir !1194
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !17435, !ctir !1189
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !17435, !tbaa !16147, !ctir !343
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !17436
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !17437

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17438, !tbaa !2998
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !17438, !ctir !1194
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !17439
  br label %if.end23, !dbg !17439

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17440, !tbaa !2998
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17440, !ctir !1194
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17442, !ctir !1189
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !17442, !tbaa !16147, !ctir !343
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !17443
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !17444

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17445, !tbaa !2998
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17445, !ctir !1194
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17446, !tbaa !2998
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !17447
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !17447
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !17447
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !17447
  store i64 %31, i64* %30, align 8, !dbg !17447
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !17447
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !17447
  store i64 %33, i64* %32, align 8, !dbg !17447
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !17447
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !17447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !17447, !tbaa.struct !6331
  br label %if.end39, !dbg !17445

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17448, !tbaa !2998
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !17448, !ctir !1194
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !17450, !ctir !1189
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !17450, !tbaa !16147, !ctir !343
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !17451
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !17452

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17453, !tbaa !2998
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !17453, !ctir !1194
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !17454
  br label %if.end38, !dbg !17454

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !17455
  br label %return, !dbg !17455

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !17456
  ret i1 %39, !dbg !17456
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17457 !ctir !1203 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17458, metadata !DIExpression()), !dbg !17459
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17460, metadata !DIExpression()), !dbg !17461
  %0 = load i8*, i8** %file.addr, align 8, !dbg !17462, !tbaa !2998
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17463, !tbaa !2998
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !17464
  ret i32 %call, !dbg !17465
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17466 !ctir !1203 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1193
  %ts = alloca %struct.timespec*, align 8, !ctir !1194
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1211
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17467, metadata !DIExpression()), !dbg !17468
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17469, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17471, metadata !DIExpression()), !dbg !17472
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17473, metadata !DIExpression()), !dbg !17474
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17475, !tbaa !2998
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17475
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17475

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17476
  br label %cond.end, !dbg !17475

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17475

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17475
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17474, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17477, metadata !DIExpression()), !dbg !17478
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17478, !tbaa !2985
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17479, metadata !DIExpression()), !dbg !17480
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17481, !tbaa !2998
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17481
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17483

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17484, !ctir !1193
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17486, !tbaa !2998
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17486, !ctir !1187
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17486
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17486, !tbaa.struct !6331
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17487, !ctir !1193
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17488, !tbaa !2998
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17488, !ctir !1187
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17488
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17488, !tbaa.struct !6331
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17489, !tbaa !2998
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17490
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17491, !tbaa !2985
  br label %if.end, !dbg !17492

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17493, !tbaa !2985
  %cmp = icmp slt i32 %9, 0, !dbg !17495
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17496

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17497
  br label %return, !dbg !17497

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !17498, !tbaa !2985
  %cmp7 = icmp sle i32 0, %10, !dbg !17500
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !17501

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17502, metadata !DIExpression()), !dbg !17504
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !17505, !tbaa !2985
  %cmp9 = icmp eq i32 %11, 2, !dbg !17507
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !17508

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !17509, !tbaa !2998
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #10, !dbg !17512
  %tobool12 = icmp ne i32 %call11, 0, !dbg !17512
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !17513

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !17514
  br label %return, !dbg !17514

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17515, !tbaa !2998
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17515, !ctir !1194
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !17517, !ctir !1189
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !17517, !tbaa !16147, !ctir !343
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !17518
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !17519

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17520, !tbaa !2998
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !17520, !ctir !1194
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17521
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17521
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !17521
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !17521
  store i64 %18, i64* %17, align 8, !dbg !17521
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !17521
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !17521
  store i64 %20, i64* %19, align 8, !dbg !17521
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !17521
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !17521
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !17521, !tbaa.struct !6331
  br label %if.end28, !dbg !17520

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17522, !tbaa !2998
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !17522, !ctir !1194
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17524, !ctir !1189
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !17524, !tbaa !16147, !ctir !343
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !17525
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !17526

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17527, !tbaa !2998
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17527, !ctir !1194
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17528
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !17528
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !17528
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !17528
  store i64 %28, i64* %27, align 8, !dbg !17528
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !17528
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !17528
  store i64 %30, i64* %29, align 8, !dbg !17528
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !17528
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !17528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !17528, !tbaa.struct !6331
  br label %if.end27, !dbg !17527

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !17529, !tbaa !2985
  %inc = add nsw i32 %33, 1, !dbg !17529
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17529, !tbaa !2985
  br label %if.end29, !dbg !17530

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !17531, !tbaa !2998
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17532, !tbaa !2998
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #10, !dbg !17533
  store i32 %call30, i32* %result, align 4, !dbg !17534, !tbaa !2985
  %36 = load i32, i32* %result, align 4, !dbg !17535, !tbaa !2985
  %cmp31 = icmp slt i32 0, %36, !dbg !17537
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !17538

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #15, !dbg !17539
  store i32 38, i32* %call33, align 4, !dbg !17540, !tbaa !2985, !ctir !7
  br label %if.end34, !dbg !17539

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !17541, !tbaa !2985
  %cmp35 = icmp eq i32 %37, 0, !dbg !17543
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !17544

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #15, !dbg !17545
  %38 = load i32, i32* %call36, align 4, !dbg !17545, !tbaa !2985, !ctir !7
  %cmp37 = icmp ne i32 %38, 38, !dbg !17546
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !17547

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17548, !tbaa !2985
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !17550, !tbaa !2985
  %39 = load i32, i32* %result, align 4, !dbg !17551, !tbaa !2985
  store i32 %39, i32* %retval, align 4, !dbg !17552
  br label %return, !dbg !17552

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !17553

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17554, !tbaa !2985
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !17555, !tbaa !2985
  %tobool41 = icmp ne i32 %40, 0, !dbg !17555
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !17557

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !17558, !tbaa !2985
  %cmp43 = icmp ne i32 %41, 3, !dbg !17561
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !17562

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !17563, !tbaa !2998
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #10, !dbg !17564
  %tobool45 = icmp ne i32 %call44, 0, !dbg !17564
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !17565

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !17566
  br label %return, !dbg !17566

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17567, !tbaa !2998
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !17567
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !17569

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17570
  br i1 %call50, label %if.then51, label %if.end52, !dbg !17571

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !17572
  br label %return, !dbg !17572

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !17573

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !17574, !tbaa !2985
  %tobool54 = icmp ne i32 %44, 0, !dbg !17574
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !17576

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !17577, !tbaa !2998
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #10, !dbg !17578
  %tobool57 = icmp ne i32 %call56, 0, !dbg !17578
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !17579

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !17580
  br label %return, !dbg !17580

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !17581, !ctir !1211
  %46 = load i32, i32* %st_mode, align 8, !dbg !17581, !tbaa !3181, !ctir !133
  %and = and i32 %46, 61440, !dbg !17581
  %cmp60 = icmp eq i32 %and, 40960, !dbg !17581
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !17583

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !17584, !tbaa !2998
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17585, !tbaa !2998
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !17586
  store i32 %call62, i32* %retval, align 4, !dbg !17587
  br label %return, !dbg !17587

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #15, !dbg !17588
  store i32 38, i32* %call64, align 4, !dbg !17589, !tbaa !2985, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17590
  br label %return, !dbg !17590

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !17591
  ret i32 %49, !dbg !17591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror(i32 %status, i32 %errnum, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !17592 !ctir !1947 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  store i32 %status, i32* %status.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !17594, metadata !DIExpression()), !dbg !17595
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !17596, metadata !DIExpression()), !dbg !17597
  store i8* %format, i8** %format.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !17598, metadata !DIExpression()), !dbg !17599
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17600, metadata !DIExpression()), !dbg !17601
  %0 = load i32, i32* %status.addr, align 4, !dbg !17602, !tbaa !2985
  %1 = load i32, i32* %errnum.addr, align 4, !dbg !17603, !tbaa !2985
  %2 = load i8*, i8** %format.addr, align 8, !dbg !17604, !tbaa !2998
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17605, !tbaa !2998
  call void @verror_at_line(i32 %0, i32 %1, i8* null, i32 0, i8* %2, %struct.__va_list_tag* %3), !dbg !17606
  ret void, !dbg !17607
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror_at_line(i32 %status, i32 %errnum, i8* %file, i32 %line_number, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !17608 !ctir !1956 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %line_number.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %message = alloca i8*, align 8, !ctir !9
  store i32 %status, i32* %status.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !17609, metadata !DIExpression()), !dbg !17610
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !17611, metadata !DIExpression()), !dbg !17612
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17613, metadata !DIExpression()), !dbg !17614
  store i32 %line_number, i32* %line_number.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %line_number.addr, metadata !17615, metadata !DIExpression()), !dbg !17616
  store i8* %format, i8** %format.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !17617, metadata !DIExpression()), !dbg !17618
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !17619, metadata !DIExpression()), !dbg !17620
  call void @llvm.dbg.declare(metadata i8** %message, metadata !17621, metadata !DIExpression()), !dbg !17622
  %0 = load i8*, i8** %format.addr, align 8, !dbg !17623, !tbaa !2998
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !17624, !tbaa !2998
  %call = call i8* @xvasprintf(i8* %0, %struct.__va_list_tag* %1), !dbg !17625
  store i8* %call, i8** %message, align 8, !dbg !17622, !tbaa !2998
  %2 = load i8*, i8** %message, align 8, !dbg !17626, !tbaa !2998
  %tobool = icmp ne i8* %2, null, !dbg !17626
  br i1 %tobool, label %if.then, label %if.else3, !dbg !17628

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !17629, !tbaa !2998
  %tobool1 = icmp ne i8* %3, null, !dbg !17629
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !17632

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %status.addr, align 4, !dbg !17633, !tbaa !2985
  %5 = load i32, i32* %errnum.addr, align 4, !dbg !17634, !tbaa !2985
  %6 = load i8*, i8** %file.addr, align 8, !dbg !17635, !tbaa !2998
  %7 = load i32, i32* %line_number.addr, align 4, !dbg !17636, !tbaa !2985
  %8 = load i8*, i8** %message, align 8, !dbg !17637, !tbaa !2998
  call void (i32, i32, i8*, i32, i8*, ...) @error_at_line(i32 %4, i32 %5, i8* %6, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.372, i64 0, i64 0), i8* %8), !dbg !17638
  br label %if.end, !dbg !17638

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %status.addr, align 4, !dbg !17639, !tbaa !2985
  %10 = load i32, i32* %errnum.addr, align 4, !dbg !17640, !tbaa !2985
  %11 = load i8*, i8** %message, align 8, !dbg !17641, !tbaa !2998
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.372, i64 0, i64 0), i8* %11), !dbg !17642
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !17643

if.else3:                                         ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !17644
  %12 = load i32, i32* %call4, align 4, !dbg !17644, !tbaa !2985, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.373, i64 0, i64 0)) #10, !dbg !17646
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call5), !dbg !17647
  call void @abort() #13, !dbg !17648
  unreachable, !dbg !17648

if.end6:                                          ; preds = %if.end
  %13 = load i8*, i8** %message, align 8, !dbg !17649, !tbaa !2998
  call void @free(i8* %13) #10, !dbg !17650
  ret void, !dbg !17651
}

declare dso_local void @error_at_line(i32, i32, i8*, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !17652 !ctir !1961 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17654, metadata !DIExpression()), !dbg !17655
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17656, metadata !DIExpression()), !dbg !17657
  store i8* %package, i8** %package.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17658, metadata !DIExpression()), !dbg !17659
  store i8* %version, i8** %version.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17660, metadata !DIExpression()), !dbg !17661
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17662, metadata !DIExpression()), !dbg !17663
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !17664, metadata !DIExpression()), !dbg !17665
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !17666, !tbaa !2998
  %tobool = icmp ne i8* %0, null, !dbg !17666
  br i1 %tobool, label %if.then, label %if.else, !dbg !17668

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17669, !tbaa !2998
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !17670, !tbaa !2998
  %3 = load i8*, i8** %package.addr, align 8, !dbg !17671, !tbaa !2998
  %4 = load i8*, i8** %version.addr, align 8, !dbg !17672, !tbaa !2998
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.374, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !17673
  br label %if.end, !dbg !17673

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17674, !tbaa !2998
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17675, !tbaa !2998
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17676, !tbaa !2998
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.375, i64 0, i64 0), i8* %6, i8* %7), !dbg !17677
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17678, !tbaa !2998
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.376, i64 0, i64 0)) #10, !dbg !17679
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !17680
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17681, !tbaa !2998
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.377, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !17681
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17682, !tbaa !2998
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.378, i64 0, i64 0)) #10, !dbg !17683
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.379, i64 0, i64 0)), !dbg !17684
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17685, !tbaa !2998
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.377, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !17685
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !17686, !tbaa !3851
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !17687

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !17688

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17690, !tbaa !2998
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.380, i64 0, i64 0)) #10, !dbg !17691
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !17692, !tbaa !2998
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !17692, !ctir !1262
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !17692, !tbaa !2998
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !17693
  br label %sw.epilog, !dbg !17694

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17695, !tbaa !2998
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.381, i64 0, i64 0)) #10, !dbg !17696
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !17697, !tbaa !2998
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !17697, !ctir !1262
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !17697, !tbaa !2998
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !17698, !tbaa !2998
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !17698, !ctir !1262
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !17698, !tbaa !2998
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !17699
  br label %sw.epilog, !dbg !17700

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17701, !tbaa !2998
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.382, i64 0, i64 0)) #10, !dbg !17702
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !17703, !tbaa !2998
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !17703, !ctir !1262
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !17703, !tbaa !2998
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !17704, !tbaa !2998
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !17704, !ctir !1262
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !17704, !tbaa !2998
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !17705, !tbaa !2998
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !17705, !ctir !1262
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !17705, !tbaa !2998
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !17706
  br label %sw.epilog, !dbg !17707

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17708, !tbaa !2998
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.383, i64 0, i64 0)) #10, !dbg !17709
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !17710, !tbaa !2998
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !17710, !ctir !1262
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !17710, !tbaa !2998
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !17711, !tbaa !2998
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !17711, !ctir !1262
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !17711, !tbaa !2998
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !17712, !tbaa !2998
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !17712, !ctir !1262
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !17712, !tbaa !2998
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !17713, !tbaa !2998
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !17713, !ctir !1262
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !17713, !tbaa !2998
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !17714
  br label %sw.epilog, !dbg !17715

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17716, !tbaa !2998
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.384, i64 0, i64 0)) #10, !dbg !17717
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !17718, !tbaa !2998
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !17718, !ctir !1262
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !17718, !tbaa !2998
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !17719, !tbaa !2998
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !17719, !ctir !1262
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !17719, !tbaa !2998
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !17720, !tbaa !2998
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !17720, !ctir !1262
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !17720, !tbaa !2998
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !17721, !tbaa !2998
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !17721, !ctir !1262
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !17721, !tbaa !2998
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !17722, !tbaa !2998
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !17722, !ctir !1262
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !17722, !tbaa !2998
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !17723
  br label %sw.epilog, !dbg !17724

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17725, !tbaa !2998
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.385, i64 0, i64 0)) #10, !dbg !17726
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !17727, !tbaa !2998
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !17727, !ctir !1262
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !17727, !tbaa !2998
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !17728, !tbaa !2998
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !17728, !ctir !1262
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !17728, !tbaa !2998
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !17729, !tbaa !2998
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !17729, !ctir !1262
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !17729, !tbaa !2998
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !17730, !tbaa !2998
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !17730, !ctir !1262
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !17730, !tbaa !2998
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !17731, !tbaa !2998
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !17731, !ctir !1262
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !17731, !tbaa !2998
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !17732, !tbaa !2998
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !17732, !ctir !1262
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !17732, !tbaa !2998
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !17733
  br label %sw.epilog, !dbg !17734

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17735, !tbaa !2998
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.386, i64 0, i64 0)) #10, !dbg !17736
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !17737, !tbaa !2998
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !17737, !ctir !1262
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !17737, !tbaa !2998
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !17738, !tbaa !2998
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !17738, !ctir !1262
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !17738, !tbaa !2998
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !17739, !tbaa !2998
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !17739, !ctir !1262
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !17739, !tbaa !2998
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !17740, !tbaa !2998
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !17740, !ctir !1262
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !17740, !tbaa !2998
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !17741, !tbaa !2998
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !17741, !ctir !1262
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !17741, !tbaa !2998
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !17742, !tbaa !2998
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !17742, !ctir !1262
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !17742, !tbaa !2998
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !17743, !tbaa !2998
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !17743, !ctir !1262
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !17743, !tbaa !2998
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !17744
  br label %sw.epilog, !dbg !17745

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17746, !tbaa !2998
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.387, i64 0, i64 0)) #10, !dbg !17747
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !17748, !tbaa !2998
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !17748, !ctir !1262
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !17748, !tbaa !2998
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !17749, !tbaa !2998
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !17749, !ctir !1262
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !17749, !tbaa !2998
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !17750, !tbaa !2998
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !17750, !ctir !1262
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !17750, !tbaa !2998
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !17751, !tbaa !2998
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !17751, !ctir !1262
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !17751, !tbaa !2998
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !17752, !tbaa !2998
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !17752, !ctir !1262
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !17752, !tbaa !2998
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !17753, !tbaa !2998
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !17753, !ctir !1262
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !17753, !tbaa !2998
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !17754, !tbaa !2998
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !17754, !ctir !1262
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !17754, !tbaa !2998
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !17755, !tbaa !2998
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !17755, !ctir !1262
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !17755, !tbaa !2998
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !17756
  br label %sw.epilog, !dbg !17757

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17758, !tbaa !2998
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.388, i64 0, i64 0)) #10, !dbg !17759
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !17760, !tbaa !2998
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !17760, !ctir !1262
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !17760, !tbaa !2998
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !17761, !tbaa !2998
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !17761, !ctir !1262
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !17761, !tbaa !2998
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !17762, !tbaa !2998
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !17762, !ctir !1262
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !17762, !tbaa !2998
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !17763, !tbaa !2998
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !17763, !ctir !1262
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !17763, !tbaa !2998
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !17764, !tbaa !2998
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !17764, !ctir !1262
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !17764, !tbaa !2998
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !17765, !tbaa !2998
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !17765, !ctir !1262
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !17765, !tbaa !2998
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !17766, !tbaa !2998
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !17766, !ctir !1262
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !17766, !tbaa !2998
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !17767, !tbaa !2998
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !17767, !ctir !1262
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !17767, !tbaa !2998
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !17768, !tbaa !2998
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !17768, !ctir !1262
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !17768, !tbaa !2998
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !17769
  br label %sw.epilog, !dbg !17770

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17771, !tbaa !2998
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.389, i64 0, i64 0)) #10, !dbg !17772
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !17773, !tbaa !2998
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !17773, !ctir !1262
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !17773, !tbaa !2998
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !17774, !tbaa !2998
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !17774, !ctir !1262
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !17774, !tbaa !2998
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !17775, !tbaa !2998
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !17775, !ctir !1262
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !17775, !tbaa !2998
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !17776, !tbaa !2998
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !17776, !ctir !1262
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !17776, !tbaa !2998
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !17777, !tbaa !2998
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !17777, !ctir !1262
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !17777, !tbaa !2998
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !17778, !tbaa !2998
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !17778, !ctir !1262
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !17778, !tbaa !2998
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !17779, !tbaa !2998
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !17779, !ctir !1262
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !17779, !tbaa !2998
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !17780, !tbaa !2998
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !17780, !ctir !1262
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !17780, !tbaa !2998
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !17781, !tbaa !2998
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !17781, !ctir !1262
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !17781, !tbaa !2998
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !17782
  br label %sw.epilog, !dbg !17783

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !17784
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !17785 !ctir !1998 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17786, metadata !DIExpression()), !dbg !17787
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17788, metadata !DIExpression()), !dbg !17789
  store i8* %package, i8** %package.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17790, metadata !DIExpression()), !dbg !17791
  store i8* %version, i8** %version.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17792, metadata !DIExpression()), !dbg !17793
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17794, metadata !DIExpression()), !dbg !17795
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17796, metadata !DIExpression()), !dbg !17797
  store i64 0, i64* %n_authors, align 8, !dbg !17798, !tbaa !3851
  br label %for.cond, !dbg !17800

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !17801, !tbaa !2998
  %1 = load i64, i64* %n_authors, align 8, !dbg !17803, !tbaa !3851
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !17801, !ctir !1262
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !17801, !tbaa !2998
  %tobool = icmp ne i8* %2, null, !dbg !17804
  br i1 %tobool, label %for.body, label %for.end, !dbg !17804

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17804

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !17805, !tbaa !3851
  %inc = add i64 %3, 1, !dbg !17805
  store i64 %inc, i64* %n_authors, align 8, !dbg !17805, !tbaa !3851
  br label %for.cond, !dbg !17806, !llvm.loop !17807

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17809, !tbaa !2998
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !17810, !tbaa !2998
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17811, !tbaa !2998
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17812, !tbaa !2998
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !17813, !tbaa !2998
  %9 = load i64, i64* %n_authors, align 8, !dbg !17814, !tbaa !3851
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !17815
  ret void, !dbg !17816
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !17817 !ctir !2000 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  %authtab = alloca [10 x i8*], align 16, !ctir !2009
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17818, metadata !DIExpression()), !dbg !17819
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17820, metadata !DIExpression()), !dbg !17821
  store i8* %package, i8** %package.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17822, metadata !DIExpression()), !dbg !17823
  store i8* %version, i8** %version.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17824, metadata !DIExpression()), !dbg !17825
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !17826, metadata !DIExpression()), !dbg !17827
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17828, metadata !DIExpression()), !dbg !17829
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !17830, metadata !DIExpression()), !dbg !17831
  store i64 0, i64* %n_authors, align 8, !dbg !17832, !tbaa !3851
  br label %for.cond, !dbg !17834

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !17835, !tbaa !3851
  %cmp = icmp ult i64 %0, 10, !dbg !17837
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17838

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !17839, !tbaa !2998
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !17839
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !17839
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17839
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17839

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !17839
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !17839
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17839
  %4 = bitcast i8* %3 to i8**, !dbg !17839
  %5 = add i32 %gp_offset, 8, !dbg !17839
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !17839
  br label %vaarg.end, !dbg !17839

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !17839
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17839
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !17839
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17839
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17839
  br label %vaarg.end, !dbg !17839

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !17839
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !17839
  %8 = load i64, i64* %n_authors, align 8, !dbg !17840, !tbaa !3851
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !17841, !ctir !2009
  store i8* %7, i8** %arrayidx, align 8, !dbg !17842, !tbaa !2998
  %cmp1 = icmp ne i8* %7, null, !dbg !17843
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !17844
  br i1 %9, label %for.body, label %for.end, !dbg !17845

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !17845

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !17846, !tbaa !3851
  %inc = add i64 %10, 1, !dbg !17846
  store i64 %inc, i64* %n_authors, align 8, !dbg !17846, !tbaa !3851
  br label %for.cond, !dbg !17847, !llvm.loop !17848

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17850, !tbaa !2998
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !17851, !tbaa !2998
  %13 = load i8*, i8** %package.addr, align 8, !dbg !17852, !tbaa !2998
  %14 = load i8*, i8** %version.addr, align 8, !dbg !17853, !tbaa !2998
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !17854
  %15 = load i64, i64* %n_authors, align 8, !dbg !17855, !tbaa !3851
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !17856
  ret void, !dbg !17857
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !17858 !ctir !2010 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2012
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17861, metadata !DIExpression()), !dbg !17862
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17863, metadata !DIExpression()), !dbg !17864
  store i8* %package, i8** %package.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17865, metadata !DIExpression()), !dbg !17866
  store i8* %version, i8** %version.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17867, metadata !DIExpression()), !dbg !17868
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !17869, metadata !DIExpression()), !dbg !17870
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17871
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17871
  call void @llvm.va_start(i8* %arraydecay1), !dbg !17871
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17872, !tbaa !2998
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !17873, !tbaa !2998
  %2 = load i8*, i8** %package.addr, align 8, !dbg !17874, !tbaa !2998
  %3 = load i8*, i8** %version.addr, align 8, !dbg !17875, !tbaa !2998
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17876
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !17877
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17878
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17878
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17878
  ret void, !dbg !17879
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !17880 !ctir !134 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !17881, !tbaa !2998
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.377, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !17881
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.392, i64 0, i64 0)) #10, !dbg !17882
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.393, i64 0, i64 0)), !dbg !17883
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.394, i64 0, i64 0)) #10, !dbg !17884
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.395, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.396, i64 0, i64 0)), !dbg !17885
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.397, i64 0, i64 0)) #10, !dbg !17886
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.398, i64 0, i64 0)), !dbg !17887
  ret void, !dbg !17888
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1245 !ctir !1247 {
entry:
  %can = alloca i8, align 1, !ctir !120
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !17889, !tbaa !3109
  %tobool = trunc i8 %0 to i1, !dbg !17889
  br i1 %tobool, label %if.end, label %if.then, !dbg !17891

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !17892, metadata !DIExpression()), !dbg !17894
  store i8 0, i8* %can, align 1, !dbg !17894, !tbaa !3109
  %call = call i32 @geteuid() #10, !dbg !17895
  %cmp = icmp eq i32 %call, 0, !dbg !17896
  %frombool = zext i1 %cmp to i8, !dbg !17897
  store i8 %frombool, i8* %can, align 1, !dbg !17897, !tbaa !3109
  %1 = load i8, i8* %can, align 1, !dbg !17898, !tbaa !3109
  %tobool1 = trunc i8 %1 to i1, !dbg !17898
  %frombool2 = zext i1 %tobool1 to i8, !dbg !17899
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !17899, !tbaa !3109
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !17900, !tbaa !3109
  br label %if.end, !dbg !17901

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !17902, !tbaa !3109
  %tobool3 = trunc i8 %2 to i1, !dbg !17902
  ret i1 %tobool3, !dbg !17903
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !17904 !ctir !2019 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17906, metadata !DIExpression()), !dbg !17907
  store i64 %s, i64* %s.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17908, metadata !DIExpression()), !dbg !17909
  %0 = load i64, i64* %s.addr, align 8, !dbg !17910, !tbaa !3851
  %div = udiv i64 9223372036854775807, %0, !dbg !17910
  %1 = load i64, i64* %n.addr, align 8, !dbg !17910, !tbaa !3851
  %cmp = icmp ult i64 %div, %1, !dbg !17910
  br i1 %cmp, label %if.then, label %if.end, !dbg !17912

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17913
  unreachable, !dbg !17913

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17914, !tbaa !3851
  %3 = load i64, i64* %s.addr, align 8, !dbg !17915, !tbaa !3851
  %mul = mul i64 %2, %3, !dbg !17916
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !17917
  ret i8* %call, !dbg !17918
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !17919 !ctir !2027 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17921, metadata !DIExpression()), !dbg !17922
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17923, metadata !DIExpression()), !dbg !17924
  %0 = load i64, i64* %n.addr, align 8, !dbg !17925, !tbaa !3851
  %call = call noalias i8* @malloc(i64 %0) #10, !dbg !17926
  store i8* %call, i8** %p, align 8, !dbg !17924, !tbaa !2998
  %1 = load i8*, i8** %p, align 8, !dbg !17927, !tbaa !2998
  %tobool = icmp ne i8* %1, null, !dbg !17927
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17929

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17930, !tbaa !3851
  %cmp = icmp ne i64 %2, 0, !dbg !17931
  br i1 %cmp, label %if.then, label %if.end, !dbg !17932

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #16, !dbg !17933
  unreachable, !dbg !17933

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !17934, !tbaa !2998
  ret i8* %3, !dbg !17935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !17936 !ctir !2021 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17937, metadata !DIExpression()), !dbg !17938
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17939, metadata !DIExpression()), !dbg !17940
  store i64 %s, i64* %s.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17941, metadata !DIExpression()), !dbg !17942
  %0 = load i64, i64* %s.addr, align 8, !dbg !17943, !tbaa !3851
  %div = udiv i64 9223372036854775807, %0, !dbg !17943
  %1 = load i64, i64* %n.addr, align 8, !dbg !17943, !tbaa !3851
  %cmp = icmp ult i64 %div, %1, !dbg !17943
  br i1 %cmp, label %if.then, label %if.end, !dbg !17945

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17946
  unreachable, !dbg !17946

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17947, !tbaa !2998
  %3 = load i64, i64* %n.addr, align 8, !dbg !17948, !tbaa !3851
  %4 = load i64, i64* %s.addr, align 8, !dbg !17949, !tbaa !3851
  %mul = mul i64 %3, %4, !dbg !17950
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !17951
  ret i8* %call, !dbg !17952
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !17953 !ctir !2029 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17954, metadata !DIExpression()), !dbg !17955
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17956, metadata !DIExpression()), !dbg !17957
  %0 = load i64, i64* %n.addr, align 8, !dbg !17958, !tbaa !3851
  %tobool = icmp ne i64 %0, 0, !dbg !17958
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17960

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17961, !tbaa !2998
  %tobool1 = icmp ne i8* %1, null, !dbg !17961
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17962

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17963, !tbaa !2998
  call void @free(i8* %2) #10, !dbg !17965
  store i8* null, i8** %retval, align 8, !dbg !17966
  br label %return, !dbg !17966

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !17967, !tbaa !2998
  %4 = load i64, i64* %n.addr, align 8, !dbg !17968, !tbaa !3851
  %call = call i8* @realloc(i8* %3, i64 %4) #10, !dbg !17969
  store i8* %call, i8** %p.addr, align 8, !dbg !17970, !tbaa !2998
  %5 = load i8*, i8** %p.addr, align 8, !dbg !17971, !tbaa !2998
  %tobool2 = icmp ne i8* %5, null, !dbg !17971
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !17973

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !17974, !tbaa !3851
  %tobool4 = icmp ne i64 %6, 0, !dbg !17974
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17975

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #16, !dbg !17976
  unreachable, !dbg !17976

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !17977, !tbaa !2998
  store i8* %7, i8** %retval, align 8, !dbg !17978
  br label %return, !dbg !17978

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !17979
  ret i8* %8, !dbg !17979
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !17980 !ctir !2023 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i8* %p, i8** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17981, metadata !DIExpression()), !dbg !17982
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17983, metadata !DIExpression()), !dbg !17984
  store i64 %s, i64* %s.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17985, metadata !DIExpression()), !dbg !17986
  call void @llvm.dbg.declare(metadata i64* %n, metadata !17987, metadata !DIExpression()), !dbg !17988
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !17989, !tbaa !2998
  %1 = load i64, i64* %0, align 8, !dbg !17990, !tbaa !3851, !ctir !55
  store i64 %1, i64* %n, align 8, !dbg !17988, !tbaa !3851
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17991, !tbaa !2998
  %tobool = icmp ne i8* %2, null, !dbg !17991
  br i1 %tobool, label %if.else, label %if.then, !dbg !17993

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !17994, !tbaa !3851
  %tobool1 = icmp ne i64 %3, 0, !dbg !17994
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !17997

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !17998, !tbaa !3851
  %div = udiv i64 128, %4, !dbg !18000
  store i64 %div, i64* %n, align 8, !dbg !18001, !tbaa !3851
  %5 = load i64, i64* %n, align 8, !dbg !18002, !tbaa !3851
  %tobool3 = icmp ne i64 %5, 0, !dbg !18003
  %lnot = xor i1 %tobool3, true, !dbg !18003
  %lnot.ext = zext i1 %lnot to i32, !dbg !18003
  %conv = sext i32 %lnot.ext to i64, !dbg !18003
  %6 = load i64, i64* %n, align 8, !dbg !18004, !tbaa !3851
  %add = add i64 %6, %conv, !dbg !18004
  store i64 %add, i64* %n, align 8, !dbg !18004, !tbaa !3851
  br label %if.end, !dbg !18005

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !18006, !tbaa !3851
  %div4 = udiv i64 9223372036854775807, %7, !dbg !18006
  %8 = load i64, i64* %n, align 8, !dbg !18006, !tbaa !3851
  %cmp = icmp ult i64 %div4, %8, !dbg !18006
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18008

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !18009
  unreachable, !dbg !18009

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !18010

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !18011, !tbaa !3851
  %div8 = udiv i64 6148914691236517204, %9, !dbg !18014
  %10 = load i64, i64* %n, align 8, !dbg !18015, !tbaa !3851
  %cmp9 = icmp ule i64 %div8, %10, !dbg !18016
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !18017

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #16, !dbg !18018
  unreachable, !dbg !18018

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !18019, !tbaa !3851
  %div13 = udiv i64 %11, 2, !dbg !18020
  %add14 = add i64 %div13, 1, !dbg !18021
  %12 = load i64, i64* %n, align 8, !dbg !18022, !tbaa !3851
  %add15 = add i64 %12, %add14, !dbg !18022
  store i64 %add15, i64* %n, align 8, !dbg !18022, !tbaa !3851
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !18023, !tbaa !3851
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !18024, !tbaa !2998
  store i64 %13, i64* %14, align 8, !dbg !18025, !tbaa !3851, !ctir !55
  %15 = load i8*, i8** %p.addr, align 8, !dbg !18026, !tbaa !2998
  %16 = load i64, i64* %n, align 8, !dbg !18027, !tbaa !3851
  %17 = load i64, i64* %s.addr, align 8, !dbg !18028, !tbaa !3851
  %mul = mul i64 %16, %17, !dbg !18029
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !18030
  ret i8* %call, !dbg !18031
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !18032 !ctir !2025 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18033, metadata !DIExpression()), !dbg !18034
  %0 = load i64, i64* %n.addr, align 8, !dbg !18035, !tbaa !3851
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18035
  ret i8* %call, !dbg !18036
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !18037 !ctir !2031 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18038, metadata !DIExpression()), !dbg !18039
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18040, metadata !DIExpression()), !dbg !18041
  %0 = load i8*, i8** %p.addr, align 8, !dbg !18042, !tbaa !2998
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !18043, !tbaa !2998
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !18044
  ret i8* %call, !dbg !18045
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !18046 !ctir !2027 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18047, metadata !DIExpression()), !dbg !18048
  %0 = load i64, i64* %s.addr, align 8, !dbg !18049, !tbaa !3851
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18050
  %1 = load i64, i64* %s.addr, align 8, !dbg !18051, !tbaa !3851
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !18052
  ret i8* %call, !dbg !18053
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !18054 !ctir !2019 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18055, metadata !DIExpression()), !dbg !18056
  store i64 %s, i64* %s.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18057, metadata !DIExpression()), !dbg !18058
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18059, metadata !DIExpression()), !dbg !18060
  %0 = load i64, i64* %s.addr, align 8, !dbg !18061, !tbaa !3851
  %div = udiv i64 9223372036854775807, %0, !dbg !18061
  %1 = load i64, i64* %n.addr, align 8, !dbg !18061, !tbaa !3851
  %cmp = icmp ult i64 %div, %1, !dbg !18061
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18063

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18064, !tbaa !3851
  %3 = load i64, i64* %s.addr, align 8, !dbg !18065, !tbaa !3851
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #10, !dbg !18066
  store i8* %call, i8** %p, align 8, !dbg !18067, !tbaa !2998
  %tobool = icmp ne i8* %call, null, !dbg !18067
  br i1 %tobool, label %if.end, label %if.then, !dbg !18068

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #16, !dbg !18069
  unreachable, !dbg !18069

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !18070, !tbaa !2998
  ret i8* %4, !dbg !18071
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !18072 !ctir !425 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18073, metadata !DIExpression()), !dbg !18074
  store i64 %s, i64* %s.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18075, metadata !DIExpression()), !dbg !18076
  %0 = load i64, i64* %s.addr, align 8, !dbg !18077, !tbaa !3851
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18078
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18079, !tbaa !2998
  %2 = load i64, i64* %s.addr, align 8, !dbg !18080, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !18081
  ret i8* %call, !dbg !18082
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !18083 !ctir !990 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !18084, metadata !DIExpression()), !dbg !18085
  %0 = load i8*, i8** %string.addr, align 8, !dbg !18086, !tbaa !2998
  %1 = load i8*, i8** %string.addr, align 8, !dbg !18087, !tbaa !2998
  %call = call i64 @strlen(i8* %1) #14, !dbg !18088
  %add = add i64 %call, 1, !dbg !18089
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !18090
  ret i8* %call1, !dbg !18091
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !18092 !ctir !134 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !18094, !tbaa !2985
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.419, i64 0, i64 0)) #10, !dbg !18095
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.420, i64 0, i64 0), i8* %call), !dbg !18096
  call void @abort() #13, !dbg !18097
  unreachable, !dbg !18097
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @xfts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !18098 !ctir !2039 {
entry:
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %fts = alloca %struct.FTS*, align 8, !ctir !2041
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18100, metadata !DIExpression()), !dbg !18101
  store i32 %options, i32* %options.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !18102, metadata !DIExpression()), !dbg !18103
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !18104, metadata !DIExpression()), !dbg !18105
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !18106, metadata !DIExpression()), !dbg !18107
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !18108, !tbaa !2998
  %1 = load i32, i32* %options.addr, align 4, !dbg !18109, !tbaa !2985
  %or = or i32 %1, 512, !dbg !18110
  %2 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18111, !tbaa !2998
  %call = call %struct.FTS* @rpl_fts_open(i8** %0, i32 %or, i32 (%struct._ftsent**, %struct._ftsent**)* %2), !dbg !18112
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !18107, !tbaa !2998
  %3 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !18113, !tbaa !2998
  %cmp = icmp eq %struct.FTS* %3, null, !dbg !18115
  br i1 %cmp, label %if.then, label %if.end4, !dbg !18116

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !18117
  %4 = load i32, i32* %call1, align 4, !dbg !18117, !tbaa !2985, !ctir !7
  %cmp2 = icmp ne i32 %4, 22, !dbg !18117
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !18121

if.then3:                                         ; preds = %if.then
  br label %if.end, !dbg !18121

if.else:                                          ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.423, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.424, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i64 0, i64 0)) #13, !dbg !18117
  unreachable, !dbg !18117

if.end:                                           ; preds = %if.then3
  call void @xalloc_die() #16, !dbg !18122
  unreachable, !dbg !18122

if.end4:                                          ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !18123, !tbaa !2998
  ret %struct.FTS* %5, !dbg !18124
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @cycle_warning_required(%struct.FTS* %fts, %struct._ftsent* %ent) #9 !dbg !18125 !ctir !2130 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !18126, metadata !DIExpression()), !dbg !18127
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !18128, metadata !DIExpression()), !dbg !18129
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18130, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18130, !ctir !2133
  %1 = load i32, i32* %fts_options, align 8, !dbg !18130, !tbaa !18131, !ctir !7
  %and = and i32 %1, 16, !dbg !18130
  %tobool = icmp ne i32 %and, 0, !dbg !18130
  br i1 %tobool, label %land.lhs.true, label %lor.rhs, !dbg !18132

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18133, !tbaa !2998
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !18133, !ctir !2133
  %3 = load i32, i32* %fts_options1, align 8, !dbg !18133, !tbaa !18131, !ctir !7
  %and2 = and i32 %3, 1, !dbg !18133
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18133
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !18134

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18135, !tbaa !2998
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !18135, !ctir !2133
  %5 = load i32, i32* %fts_options4, align 8, !dbg !18135, !tbaa !18131, !ctir !7
  %and5 = and i32 %5, 16, !dbg !18135
  %tobool6 = icmp ne i32 %and5, 0, !dbg !18135
  br i1 %tobool6, label %land.lhs.true7, label %land.end, !dbg !18136

land.lhs.true7:                                   ; preds = %lor.rhs
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18137, !tbaa !2998
  %fts_options8 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 10, !dbg !18137, !ctir !2133
  %7 = load i32, i32* %fts_options8, align 8, !dbg !18137, !tbaa !18131, !ctir !7
  %and9 = and i32 %7, 1, !dbg !18137
  %tobool10 = icmp ne i32 %and9, 0, !dbg !18137
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !18138

land.rhs:                                         ; preds = %land.lhs.true7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !18139, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 12, !dbg !18140, !ctir !2128
  %9 = load i64, i64* %fts_level, align 8, !dbg !18140, !tbaa !3851, !ctir !568
  %cmp = icmp ne i64 %9, 0, !dbg !18141
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true7, %lor.rhs
  %10 = phi i1 [ false, %land.lhs.true7 ], [ false, %lor.rhs ], [ %cmp, %land.rhs ], !dbg !18142
  br label %lor.end, !dbg !18134

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %11 = phi i1 [ true, %land.lhs.true ], [ %10, %land.end ]
  ret i1 %11, !dbg !18143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xvasprintf(i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18144 !ctir !2137 {
entry:
  %retval = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %argcount = alloca i64, align 8, !ctir !55
  %f = alloca i8*, align 8, !ctir !115
  store i8* %format, i8** %format.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18146, metadata !DIExpression()), !dbg !18147
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18148, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.declare(metadata i8** %result, metadata !18150, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.declare(metadata i64* %argcount, metadata !18152, metadata !DIExpression()), !dbg !18154
  store i64 0, i64* %argcount, align 8, !dbg !18154, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8** %f, metadata !18155, metadata !DIExpression()), !dbg !18156
  %0 = load i8*, i8** %format.addr, align 8, !dbg !18157, !tbaa !2998
  store i8* %0, i8** %f, align 8, !dbg !18159, !tbaa !2998
  br label %for.cond, !dbg !18160

for.cond:                                         ; preds = %if.end11, %entry
  %1 = load i8*, i8** %f, align 8, !dbg !18161, !tbaa !2998
  %2 = load i8, i8* %1, align 1, !dbg !18165, !tbaa !3660, !ctir !116
  %conv = sext i8 %2 to i32, !dbg !18165
  %cmp = icmp eq i32 %conv, 0, !dbg !18166
  br i1 %cmp, label %if.then, label %if.end, !dbg !18167

if.then:                                          ; preds = %for.cond
  %3 = load i64, i64* %argcount, align 8, !dbg !18168, !tbaa !3851
  %4 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18169, !tbaa !2998
  %call = call i8* @xstrcat(i64 %3, %struct.__va_list_tag* %4), !dbg !18170
  store i8* %call, i8** %retval, align 8, !dbg !18171
  br label %return, !dbg !18171

if.end:                                           ; preds = %for.cond
  %5 = load i8*, i8** %f, align 8, !dbg !18172, !tbaa !2998
  %6 = load i8, i8* %5, align 1, !dbg !18174, !tbaa !3660, !ctir !116
  %conv2 = sext i8 %6 to i32, !dbg !18174
  %cmp3 = icmp ne i32 %conv2, 37, !dbg !18175
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !18176

if.then5:                                         ; preds = %if.end
  br label %for.end, !dbg !18177

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %f, align 8, !dbg !18178, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !18178
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !18178, !tbaa !2998
  %8 = load i8*, i8** %f, align 8, !dbg !18179, !tbaa !2998
  %9 = load i8, i8* %8, align 1, !dbg !18181, !tbaa !3660, !ctir !116
  %conv7 = sext i8 %9 to i32, !dbg !18181
  %cmp8 = icmp ne i32 %conv7, 115, !dbg !18182
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !18183

if.then10:                                        ; preds = %if.end6
  br label %for.end, !dbg !18184

if.end11:                                         ; preds = %if.end6
  %10 = load i8*, i8** %f, align 8, !dbg !18185, !tbaa !2998
  %incdec.ptr12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !18185
  store i8* %incdec.ptr12, i8** %f, align 8, !dbg !18185, !tbaa !2998
  %11 = load i64, i64* %argcount, align 8, !dbg !18186, !tbaa !3851
  %inc = add i64 %11, 1, !dbg !18186
  store i64 %inc, i64* %argcount, align 8, !dbg !18186, !tbaa !3851
  br label %for.cond, !dbg !18187, !llvm.loop !18188

for.end:                                          ; preds = %if.then10, %if.then5
  %12 = load i8*, i8** %format.addr, align 8, !dbg !18191, !tbaa !2998
  %13 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18193, !tbaa !2998
  %call13 = call i32 @vasprintf(i8** %result, i8* %12, %struct.__va_list_tag* %13) #10, !dbg !18194
  %cmp14 = icmp slt i32 %call13, 0, !dbg !18195
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !18196

if.then16:                                        ; preds = %for.end
  %call17 = call i32* @__errno_location() #15, !dbg !18197
  %14 = load i32, i32* %call17, align 4, !dbg !18197, !tbaa !2985, !ctir !7
  %cmp18 = icmp eq i32 %14, 12, !dbg !18200
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !18201

if.then20:                                        ; preds = %if.then16
  call void @xalloc_die() #16, !dbg !18202
  unreachable, !dbg !18202

if.end21:                                         ; preds = %if.then16
  store i8* null, i8** %retval, align 8, !dbg !18203
  br label %return, !dbg !18203

if.end22:                                         ; preds = %for.end
  %15 = load i8*, i8** %result, align 8, !dbg !18204, !tbaa !2998
  store i8* %15, i8** %retval, align 8, !dbg !18205
  br label %return, !dbg !18205

return:                                           ; preds = %if.end22, %if.end21, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !18206
  ret i8* %16, !dbg !18206
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xstrcat(i64 %argcount, %struct.__va_list_tag* %args) #4 !dbg !18207 !ctir !2146 {
entry:
  %retval = alloca i8*, align 8
  %argcount.addr = alloca i64, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2148
  %totalsize = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !9
  %next = alloca i8*, align 8, !ctir !115
  %next12 = alloca i8*, align 8, !ctir !115
  %len = alloca i64, align 8, !ctir !55
  store i64 %argcount, i64* %argcount.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %argcount.addr, metadata !18208, metadata !DIExpression()), !dbg !18209
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18210, metadata !DIExpression()), !dbg !18211
  call void @llvm.dbg.declare(metadata i8** %result, metadata !18212, metadata !DIExpression()), !dbg !18213
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !18214, metadata !DIExpression()), !dbg !18215
  call void @llvm.dbg.declare(metadata i64* %totalsize, metadata !18216, metadata !DIExpression()), !dbg !18217
  call void @llvm.dbg.declare(metadata i64* %i, metadata !18218, metadata !DIExpression()), !dbg !18219
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18220, metadata !DIExpression()), !dbg !18221
  store i64 0, i64* %totalsize, align 8, !dbg !18222, !tbaa !3851
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !18223
  %0 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18223, !tbaa !2998
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18223
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !18223
  call void @llvm.va_copy(i8* %1, i8* %2), !dbg !18223
  %3 = load i64, i64* %argcount.addr, align 8, !dbg !18224, !tbaa !3851
  store i64 %3, i64* %i, align 8, !dbg !18226, !tbaa !3851
  br label %for.cond, !dbg !18227

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !18228, !tbaa !3851
  %cmp = icmp ugt i64 %4, 0, !dbg !18230
  br i1 %cmp, label %for.body, label %for.end, !dbg !18231

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %next, metadata !18232, metadata !DIExpression()), !dbg !18234
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !18235
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !18235
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !18235
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18235
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18235

vaarg.in_reg:                                     ; preds = %for.body
  %5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !18235
  %reg_save_area = load i8*, i8** %5, align 16, !dbg !18235
  %6 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18235
  %7 = bitcast i8* %6 to i8**, !dbg !18235
  %8 = add i32 %gp_offset, 8, !dbg !18235
  store i32 %8, i32* %gp_offset_p, align 16, !dbg !18235
  br label %vaarg.end, !dbg !18235

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !18235
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18235
  %9 = bitcast i8* %overflow_arg_area to i8**, !dbg !18235
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18235
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18235
  br label %vaarg.end, !dbg !18235

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %7, %vaarg.in_reg ], [ %9, %vaarg.in_mem ], !dbg !18235
  %10 = load i8*, i8** %vaarg.addr, align 8, !dbg !18235
  store i8* %10, i8** %next, align 8, !dbg !18234, !tbaa !2998
  %11 = load i64, i64* %totalsize, align 8, !dbg !18236, !tbaa !3851
  %12 = load i8*, i8** %next, align 8, !dbg !18237, !tbaa !2998
  %call = call i64 @strlen(i8* %12) #14, !dbg !18238
  %call2 = call i64 @xsum(i64 %11, i64 %call) #14, !dbg !18239
  store i64 %call2, i64* %totalsize, align 8, !dbg !18240, !tbaa !3851
  br label %for.inc, !dbg !18241

for.inc:                                          ; preds = %vaarg.end
  %13 = load i64, i64* %i, align 8, !dbg !18242, !tbaa !3851
  %dec = add i64 %13, -1, !dbg !18242
  store i64 %dec, i64* %i, align 8, !dbg !18242, !tbaa !3851
  br label %for.cond, !dbg !18243, !llvm.loop !18244

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !18246
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !18246
  call void @llvm.va_end(i8* %arraydecay34), !dbg !18246
  %14 = load i64, i64* %totalsize, align 8, !dbg !18247, !tbaa !3851
  %cmp5 = icmp eq i64 %14, -1, !dbg !18249
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !18250

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i64, i64* %totalsize, align 8, !dbg !18251, !tbaa !3851
  %cmp6 = icmp ugt i64 %15, 2147483647, !dbg !18252
  br i1 %cmp6, label %if.then, label %if.end, !dbg !18253

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %call7 = call i32* @__errno_location() #15, !dbg !18254
  store i32 75, i32* %call7, align 4, !dbg !18256, !tbaa !2985, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !18257
  br label %return, !dbg !18257

if.end:                                           ; preds = %lor.lhs.false
  %16 = load i64, i64* %totalsize, align 8, !dbg !18258, !tbaa !3851
  %add = add i64 %16, 1, !dbg !18258
  %call8 = call noalias i8* @xmalloc(i64 %add), !dbg !18258
  store i8* %call8, i8** %result, align 8, !dbg !18259, !tbaa !2998
  %17 = load i8*, i8** %result, align 8, !dbg !18260, !tbaa !2998
  store i8* %17, i8** %p, align 8, !dbg !18261, !tbaa !2998
  %18 = load i64, i64* %argcount.addr, align 8, !dbg !18262, !tbaa !3851
  store i64 %18, i64* %i, align 8, !dbg !18264, !tbaa !3851
  br label %for.cond9, !dbg !18265

for.cond9:                                        ; preds = %for.inc25, %if.end
  %19 = load i64, i64* %i, align 8, !dbg !18266, !tbaa !3851
  %cmp10 = icmp ugt i64 %19, 0, !dbg !18268
  br i1 %cmp10, label %for.body11, label %for.end27, !dbg !18269

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i8** %next12, metadata !18270, metadata !DIExpression()), !dbg !18272
  %20 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18273, !tbaa !2998
  %gp_offset_p13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 0, !dbg !18273
  %gp_offset14 = load i32, i32* %gp_offset_p13, align 8, !dbg !18273
  %fits_in_gp15 = icmp ule i32 %gp_offset14, 40, !dbg !18273
  br i1 %fits_in_gp15, label %vaarg.in_reg16, label %vaarg.in_mem18, !dbg !18273

vaarg.in_reg16:                                   ; preds = %for.body11
  %21 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 3, !dbg !18273
  %reg_save_area17 = load i8*, i8** %21, align 8, !dbg !18273
  %22 = getelementptr i8, i8* %reg_save_area17, i32 %gp_offset14, !dbg !18273
  %23 = bitcast i8* %22 to i8**, !dbg !18273
  %24 = add i32 %gp_offset14, 8, !dbg !18273
  store i32 %24, i32* %gp_offset_p13, align 8, !dbg !18273
  br label %vaarg.end22, !dbg !18273

vaarg.in_mem18:                                   ; preds = %for.body11
  %overflow_arg_area_p19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 2, !dbg !18273
  %overflow_arg_area20 = load i8*, i8** %overflow_arg_area_p19, align 8, !dbg !18273
  %25 = bitcast i8* %overflow_arg_area20 to i8**, !dbg !18273
  %overflow_arg_area.next21 = getelementptr i8, i8* %overflow_arg_area20, i32 8, !dbg !18273
  store i8* %overflow_arg_area.next21, i8** %overflow_arg_area_p19, align 8, !dbg !18273
  br label %vaarg.end22, !dbg !18273

vaarg.end22:                                      ; preds = %vaarg.in_mem18, %vaarg.in_reg16
  %vaarg.addr23 = phi i8** [ %23, %vaarg.in_reg16 ], [ %25, %vaarg.in_mem18 ], !dbg !18273
  %26 = load i8*, i8** %vaarg.addr23, align 8, !dbg !18273
  store i8* %26, i8** %next12, align 8, !dbg !18272, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18274, metadata !DIExpression()), !dbg !18275
  %27 = load i8*, i8** %next12, align 8, !dbg !18276, !tbaa !2998
  %call24 = call i64 @strlen(i8* %27) #14, !dbg !18277
  store i64 %call24, i64* %len, align 8, !dbg !18275, !tbaa !3851
  %28 = load i8*, i8** %p, align 8, !dbg !18278, !tbaa !2998
  %29 = load i8*, i8** %next12, align 8, !dbg !18279, !tbaa !2998
  %30 = load i64, i64* %len, align 8, !dbg !18280, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !18281
  %31 = load i64, i64* %len, align 8, !dbg !18282, !tbaa !3851
  %32 = load i8*, i8** %p, align 8, !dbg !18283, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !18283
  store i8* %add.ptr, i8** %p, align 8, !dbg !18283, !tbaa !2998
  br label %for.inc25, !dbg !18284

for.inc25:                                        ; preds = %vaarg.end22
  %33 = load i64, i64* %i, align 8, !dbg !18285, !tbaa !3851
  %dec26 = add i64 %33, -1, !dbg !18285
  store i64 %dec26, i64* %i, align 8, !dbg !18285, !tbaa !3851
  br label %for.cond9, !dbg !18286, !llvm.loop !18287

for.end27:                                        ; preds = %for.cond9
  %34 = load i8*, i8** %p, align 8, !dbg !18289, !tbaa !2998
  store i8 0, i8* %34, align 1, !dbg !18290, !tbaa !3660, !ctir !10
  %35 = load i8*, i8** %result, align 8, !dbg !18291, !tbaa !2998
  store i8* %35, i8** %retval, align 8, !dbg !18292
  br label %return, !dbg !18292

return:                                           ; preds = %for.end27, %if.then
  %36 = load i8*, i8** %retval, align 8, !dbg !18293
  ret i8* %36, !dbg !18293
}

; Function Attrs: nounwind
declare dso_local i32 @vasprintf(i8**, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #10

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !18294 !ctir !1247 {
entry:
  %yes = alloca i8, align 1, !ctir !120
  %response = alloca i8*, align 8, !ctir !9
  %response_size = alloca i64, align 8, !ctir !55
  %response_len = alloca i64, align 8, !ctir !608
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !18296, metadata !DIExpression()), !dbg !18297
  call void @llvm.dbg.declare(metadata i8** %response, metadata !18298, metadata !DIExpression()), !dbg !18299
  store i8* null, i8** %response, align 8, !dbg !18299, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !18300, metadata !DIExpression()), !dbg !18301
  store i64 0, i64* %response_size, align 8, !dbg !18301, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !18302, metadata !DIExpression()), !dbg !18303
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !18304, !tbaa !2998
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !18305
  store i64 %call, i64* %response_len, align 8, !dbg !18303, !tbaa !3851
  %1 = load i64, i64* %response_len, align 8, !dbg !18306, !tbaa !3851
  %cmp = icmp sle i64 %1, 0, !dbg !18308
  br i1 %cmp, label %if.then, label %if.else, !dbg !18309

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !18310, !tbaa !3109
  br label %if.end9, !dbg !18311

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !18312, !tbaa !2998
  %3 = load i64, i64* %response_len, align 8, !dbg !18315, !tbaa !3851
  %sub = sub nsw i64 %3, 1, !dbg !18316
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !18312, !ctir !9
  %4 = load i8, i8* %arrayidx, align 1, !dbg !18312, !tbaa !3660
  %conv = sext i8 %4 to i32, !dbg !18312
  %cmp1 = icmp eq i32 %conv, 10, !dbg !18317
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !18318

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !18319, !tbaa !2998
  %6 = load i64, i64* %response_len, align 8, !dbg !18320, !tbaa !3851
  %sub4 = sub nsw i64 %6, 1, !dbg !18321
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !18319, !ctir !9
  store i8 0, i8* %arrayidx5, align 1, !dbg !18322, !tbaa !3660
  br label %if.end, !dbg !18319

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !18323, !tbaa !2998
  %call6 = call i32 @rpmatch(i8* %7) #10, !dbg !18324
  %cmp7 = icmp slt i32 0, %call6, !dbg !18325
  %frombool = zext i1 %cmp7 to i8, !dbg !18326
  store i8 %frombool, i8* %yes, align 1, !dbg !18326, !tbaa !3109
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !18327, !tbaa !2998
  call void @free(i8* %8) #10, !dbg !18328
  %9 = load i8, i8* %yes, align 1, !dbg !18329, !tbaa !3109
  %tobool = trunc i8 %9 to i1, !dbg !18329
  ret i1 %tobool, !dbg !18330
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !18331 !ctir !2192 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18333, metadata !DIExpression()), !dbg !18334
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18335, !tbaa !2998
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !18337
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18338

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18339, !tbaa !2998
  %call = call i32 @__freading(%struct._IO_FILE* %1) #10, !dbg !18339
  %cmp1 = icmp ne i32 %call, 0, !dbg !18339
  br i1 %cmp1, label %if.end, label %if.then, !dbg !18340

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18341, !tbaa !2998
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !18342
  store i32 %call2, i32* %retval, align 4, !dbg !18343
  br label %return, !dbg !18343

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18344, !tbaa !2998
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !18345
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18346, !tbaa !2998
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !18347
  store i32 %call3, i32* %retval, align 4, !dbg !18348
  br label %return, !dbg !18348

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !18349
  ret i32 %5, !dbg !18349
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !18350 !ctir !2228 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18351, metadata !DIExpression()), !dbg !18352
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18353, !tbaa !2998
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !18355, !ctir !2195
  %1 = load i32, i32* %_flags, align 8, !dbg !18355, !tbaa !18356, !ctir !7
  %and = and i32 %1, 256, !dbg !18358
  %tobool = icmp ne i32 %and, 0, !dbg !18358
  br i1 %tobool, label %if.then, label %if.end, !dbg !18359

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18360, !tbaa !2998
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !18361
  br label %if.end, !dbg !18361

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18362
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #9 !dbg !18363 !ctir !2233 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18365, metadata !DIExpression()), !dbg !18366
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18367, !tbaa !2998
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !18369, !ctir !2236
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18369, !tbaa !18370, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18371, !tbaa !2998
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !18372, !ctir !2236
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !18372, !tbaa !18373, !ctir !9
  %cmp = icmp ugt i8* %1, %3, !dbg !18374
  br i1 %cmp, label %if.then, label %if.end, !dbg !18375

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !18376
  br label %return, !dbg !18376

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18377, !tbaa !2998
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !18378, !ctir !2236
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !18378, !tbaa !18379, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18380, !tbaa !2998
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !18381, !ctir !2236
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18381, !tbaa !18382, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !18383
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !18383
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18383
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18384, !tbaa !2998
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !18385, !ctir !2236
  %9 = load i32, i32* %_flags, align 8, !dbg !18385, !tbaa !18356, !ctir !7
  %and = and i32 %9, 256, !dbg !18386
  %tobool = icmp ne i32 %and, 0, !dbg !18386
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18384

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18387, !tbaa !2998
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !18388, !ctir !2236
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !18388, !tbaa !18389, !ctir !9
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18390, !tbaa !2998
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !18391, !ctir !2236
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !18391, !tbaa !18392, !ctir !9
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !18393
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !18393
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !18393
  br label %cond.end, !dbg !18384

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !18384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !18384
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !18394
  store i64 %add, i64* %retval, align 8, !dbg !18395
  br label %return, !dbg !18395

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !18396
  ret i64 %14, !dbg !18396
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !18397 !ctir !2272 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !248
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18399, metadata !DIExpression()), !dbg !18400
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !18401, metadata !DIExpression()), !dbg !18402
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !18403, metadata !DIExpression()), !dbg !18404
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18405, !tbaa !2998
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !18407, !ctir !2275
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !18407, !tbaa !18379, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18408, !tbaa !2998
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !18409, !ctir !2275
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18409, !tbaa !18382, !ctir !9
  %cmp = icmp eq i8* %1, %3, !dbg !18410
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !18411

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18412, !tbaa !2998
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !18413, !ctir !2275
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18413, !tbaa !18370, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18414, !tbaa !2998
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !18415, !ctir !2275
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !18415, !tbaa !18373, !ctir !9
  %cmp1 = icmp eq i8* %5, %7, !dbg !18416
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !18417

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18418, !tbaa !2998
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !18419, !ctir !2275
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !18419, !tbaa !18392, !ctir !9
  %cmp3 = icmp eq i8* %9, null, !dbg !18420
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !18421

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !18422, metadata !DIExpression()), !dbg !18424
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18425, !tbaa !2998
  %call = call i32 @fileno(%struct._IO_FILE* %10) #10, !dbg !18426
  %11 = load i64, i64* %offset.addr, align 8, !dbg !18427, !tbaa !3851
  %12 = load i32, i32* %whence.addr, align 4, !dbg !18428, !tbaa !2985
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #10, !dbg !18429
  store i64 %call4, i64* %pos, align 8, !dbg !18424, !tbaa !3851
  %13 = load i64, i64* %pos, align 8, !dbg !18430, !tbaa !3851
  %cmp5 = icmp eq i64 %13, -1, !dbg !18432
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !18433

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !18434
  br label %return, !dbg !18434

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18436, !tbaa !2998
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !18437, !ctir !2275
  %15 = load i32, i32* %_flags, align 8, !dbg !18438, !tbaa !18356, !ctir !7
  %and = and i32 %15, -17, !dbg !18438
  store i32 %and, i32* %_flags, align 8, !dbg !18438, !tbaa !18356, !ctir !7
  %16 = load i64, i64* %pos, align 8, !dbg !18439, !tbaa !3851
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18440, !tbaa !2998
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !18441, !ctir !2275
  store i64 %16, i64* %_offset, align 8, !dbg !18442, !tbaa !18443, !ctir !44
  store i32 0, i32* %retval, align 4, !dbg !18444
  br label %return, !dbg !18444

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18445, !tbaa !2998
  %19 = load i64, i64* %offset.addr, align 8, !dbg !18446, !tbaa !3851
  %20 = load i32, i32* %whence.addr, align 4, !dbg !18447, !tbaa !2985
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !18448
  store i32 %call8, i32* %retval, align 4, !dbg !18449
  br label %return, !dbg !18449

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !18450
  ret i32 %21, !dbg !18450
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @rpl_fts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !18451 !ctir !2415 {
entry:
  %retval = alloca %struct.FTS*, align 8
  %argv.addr = alloca i8**, align 8
  %options.addr = alloca i32, align 4
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8
  %sp = alloca %struct.FTS*, align 8, !ctir !2337
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %root = alloca %struct._ftsent*, align 8, !ctir !2420
  %nitems = alloca i64, align 8, !ctir !55
  %parent = alloca %struct._ftsent*, align 8, !ctir !2420
  %tmp = alloca %struct._ftsent*, align 8, !ctir !2420
  %defer_stat = alloca i8, align 1, !ctir !120
  %fd = alloca i32, align 4, !ctir !7
  %maxarglen = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %v = alloca i8*, align 8, !ctir !115
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18452, metadata !DIExpression()), !dbg !18453
  store i32 %options, i32* %options.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !18454, metadata !DIExpression()), !dbg !18455
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !18456, metadata !DIExpression()), !dbg !18457
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !18458, metadata !DIExpression()), !dbg !18459
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18460, metadata !DIExpression()), !dbg !18461
  call void @llvm.dbg.declare(metadata %struct._ftsent** %root, metadata !18462, metadata !DIExpression()), !dbg !18463
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !18464, metadata !DIExpression()), !dbg !18465
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !18466, metadata !DIExpression()), !dbg !18467
  store %struct._ftsent* null, %struct._ftsent** %parent, align 8, !dbg !18467, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !18468, metadata !DIExpression()), !dbg !18469
  store %struct._ftsent* null, %struct._ftsent** %tmp, align 8, !dbg !18469, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %defer_stat, metadata !18470, metadata !DIExpression()), !dbg !18471
  %0 = load i32, i32* %options.addr, align 4, !dbg !18472, !tbaa !2985
  %and = and i32 %0, -4096, !dbg !18474
  %tobool = icmp ne i32 %and, 0, !dbg !18474
  br i1 %tobool, label %if.then, label %if.end, !dbg !18475

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #15, !dbg !18476
  store i32 22, i32* %call, align 4, !dbg !18476, !tbaa !2985, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18478
  br label %return, !dbg !18478

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !18479, !tbaa !2985
  %and1 = and i32 %1, 4, !dbg !18481
  %tobool2 = icmp ne i32 %and1, 0, !dbg !18481
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !18482

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %options.addr, align 4, !dbg !18483, !tbaa !2985
  %and3 = and i32 %2, 512, !dbg !18484
  %tobool4 = icmp ne i32 %and3, 0, !dbg !18484
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !18485

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call i32* @__errno_location() #15, !dbg !18486
  store i32 22, i32* %call6, align 4, !dbg !18486, !tbaa !2985, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18488
  br label %return, !dbg !18488

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %3 = load i32, i32* %options.addr, align 4, !dbg !18489, !tbaa !2985
  %and8 = and i32 %3, 18, !dbg !18491
  %tobool9 = icmp ne i32 %and8, 0, !dbg !18491
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !18492

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #15, !dbg !18493
  store i32 22, i32* %call11, align 4, !dbg !18493, !tbaa !2985, !ctir !7
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18495
  br label %return, !dbg !18495

if.end12:                                         ; preds = %if.end7
  %call13 = call noalias i8* @malloc(i64 128) #10, !dbg !18496
  %4 = bitcast i8* %call13 to %struct.FTS*, !dbg !18496
  store %struct.FTS* %4, %struct.FTS** %sp, align 8, !dbg !18498, !tbaa !2998
  %cmp = icmp eq %struct.FTS* %4, null, !dbg !18499
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !18500

if.then14:                                        ; preds = %if.end12
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18501
  br label %return, !dbg !18501

if.end15:                                         ; preds = %if.end12
  %5 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18502, !tbaa !2998
  %6 = bitcast %struct.FTS* %5 to i8*, !dbg !18503
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 128, i1 false), !dbg !18503
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18504, !tbaa !2998
  %8 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18505, !tbaa !2998
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 9, !dbg !18506, !ctir !2338
  store i32 (%struct._ftsent**, %struct._ftsent**)* %7, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18507, !tbaa !18508, !ctir !2352
  %9 = load i32, i32* %options.addr, align 4, !dbg !18509, !tbaa !2985
  %10 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18510, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !18511, !ctir !2338
  store i32 %9, i32* %fts_options, align 8, !dbg !18512, !tbaa !18131, !ctir !7
  %11 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18513, !tbaa !2998
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !18513, !ctir !2338
  %12 = load i32, i32* %fts_options16, align 8, !dbg !18513, !tbaa !18131, !ctir !7
  %and17 = and i32 %12, 2, !dbg !18513
  %tobool18 = icmp ne i32 %and17, 0, !dbg !18513
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !18515

if.then19:                                        ; preds = %if.end15
  %13 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18516, !tbaa !2998
  %fts_options20 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 10, !dbg !18516, !ctir !2338
  %14 = load i32, i32* %fts_options20, align 8, !dbg !18516, !tbaa !18131, !ctir !7
  %or = or i32 %14, 4, !dbg !18516
  store i32 %or, i32* %fts_options20, align 8, !dbg !18516, !tbaa !18131, !ctir !7
  %15 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18518, !tbaa !2998
  %fts_options21 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !18518, !ctir !2338
  %16 = load i32, i32* %fts_options21, align 8, !dbg !18518, !tbaa !18131, !ctir !7
  %and22 = and i32 %16, -513, !dbg !18518
  store i32 %and22, i32* %fts_options21, align 8, !dbg !18518, !tbaa !18131, !ctir !7
  br label %if.end23, !dbg !18519

if.end23:                                         ; preds = %if.then19, %if.end15
  %17 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18520, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18521, !ctir !2338
  store i32 -100, i32* %fts_cwd_fd, align 4, !dbg !18522, !tbaa !3826, !ctir !7
  %18 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18523, !tbaa !2998
  %fts_options24 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !18523, !ctir !2338
  %19 = load i32, i32* %fts_options24, align 8, !dbg !18523, !tbaa !18131, !ctir !7
  %and25 = and i32 %19, 512, !dbg !18523
  %tobool26 = icmp ne i32 %and25, 0, !dbg !18523
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !18525

land.lhs.true27:                                  ; preds = %if.end23
  br i1 true, label %if.end34, label %if.then28, !dbg !18526

if.then28:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18527, metadata !DIExpression()), !dbg !18529
  %call29 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.437, i64 0, i64 0), i32 0), !dbg !18530
  store i32 %call29, i32* %fd, align 4, !dbg !18529, !tbaa !2985
  %20 = load i32, i32* %fd, align 4, !dbg !18531, !tbaa !2985
  %cmp30 = icmp slt i32 %20, 0, !dbg !18533
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !18534

if.then31:                                        ; preds = %if.then28
  br label %if.end33, !dbg !18535

if.else:                                          ; preds = %if.then28
  %21 = load i32, i32* %fd, align 4, !dbg !18537, !tbaa !2985
  %call32 = call i32 @close(i32 %21), !dbg !18539
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then31
  br label %if.end34, !dbg !18540

if.end34:                                         ; preds = %if.end33, %land.lhs.true27, %if.end23
  call void @llvm.dbg.declare(metadata i64* %maxarglen, metadata !18541, metadata !DIExpression()), !dbg !18543
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !18544, !tbaa !2998
  %call35 = call i64 @fts_maxarglen(i8** %22), !dbg !18545
  store i64 %call35, i64* %maxarglen, align 8, !dbg !18543, !tbaa !3851
  %23 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18546, !tbaa !2998
  %24 = load i64, i64* %maxarglen, align 8, !dbg !18548, !tbaa !3851
  %cmp36 = icmp ugt i64 %24, 4096, !dbg !18548
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !18548

cond.true:                                        ; preds = %if.end34
  %25 = load i64, i64* %maxarglen, align 8, !dbg !18548, !tbaa !3851
  br label %cond.end, !dbg !18548

cond.false:                                       ; preds = %if.end34
  br label %cond.end, !dbg !18548

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %25, %cond.true ], [ 4096, %cond.false ], !dbg !18548
  %call37 = call zeroext i1 @fts_palloc(%struct.FTS* %23, i64 %cond), !dbg !18549
  br i1 %call37, label %if.end39, label %if.then38, !dbg !18550

if.then38:                                        ; preds = %cond.end
  br label %mem1, !dbg !18551

if.end39:                                         ; preds = %cond.end
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !18552, !tbaa !2998
  %27 = load i8*, i8** %26, align 8, !dbg !18554, !tbaa !2998, !ctir !1340
  %cmp40 = icmp ne i8* %27, null, !dbg !18555
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !18556

if.then41:                                        ; preds = %if.end39
  %28 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18557, !tbaa !2998
  %call42 = call %struct._ftsent* @fts_alloc(%struct.FTS* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.438, i64 0, i64 0), i64 0), !dbg !18560
  store %struct._ftsent* %call42, %struct._ftsent** %parent, align 8, !dbg !18561, !tbaa !2998
  %cmp43 = icmp eq %struct._ftsent* %call42, null, !dbg !18562
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !18563

if.then44:                                        ; preds = %if.then41
  br label %mem2, !dbg !18564

if.end45:                                         ; preds = %if.then41
  %29 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18565, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 12, !dbg !18566, !ctir !2321
  store i64 -1, i64* %fts_level, align 8, !dbg !18567, !tbaa !3851, !ctir !568
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18568, !tbaa !2998
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 14, !dbg !18569, !ctir !2321
  store i64 -1, i64* %fts_n_dirs_remaining, align 8, !dbg !18570, !tbaa !3851, !ctir !1384
  br label %if.end46, !dbg !18571

if.end46:                                         ; preds = %if.end45, %if.end39
  %31 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18572, !tbaa !2998
  %cmp47 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %31, null, !dbg !18573
  br i1 %cmp47, label %lor.end, label %lor.rhs, !dbg !18574

lor.rhs:                                          ; preds = %if.end46
  %32 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18575, !tbaa !2998
  %fts_options48 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !18575, !ctir !2338
  %33 = load i32, i32* %fts_options48, align 8, !dbg !18575, !tbaa !18131, !ctir !7
  %and49 = and i32 %33, 1024, !dbg !18575
  %tobool50 = icmp ne i32 %and49, 0, !dbg !18574
  br label %lor.end, !dbg !18574

lor.end:                                          ; preds = %lor.rhs, %if.end46
  %34 = phi i1 [ true, %if.end46 ], [ %tobool50, %lor.rhs ]
  %frombool = zext i1 %34 to i8, !dbg !18576
  store i8 %frombool, i8* %defer_stat, align 1, !dbg !18576, !tbaa !3109
  store %struct._ftsent* null, %struct._ftsent** %root, align 8, !dbg !18577, !tbaa !2998
  store i64 0, i64* %nitems, align 8, !dbg !18579, !tbaa !3851
  br label %for.cond, !dbg !18580

for.cond:                                         ; preds = %for.inc, %lor.end
  %35 = load i8**, i8*** %argv.addr, align 8, !dbg !18581, !tbaa !2998
  %36 = load i8*, i8** %35, align 8, !dbg !18583, !tbaa !2998, !ctir !1340
  %cmp51 = icmp ne i8* %36, null, !dbg !18584
  br i1 %cmp51, label %for.body, label %for.end, !dbg !18585

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18586, metadata !DIExpression()), !dbg !18588
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !18589, !tbaa !2998
  %38 = load i8*, i8** %37, align 8, !dbg !18590, !tbaa !2998, !ctir !1340
  %call52 = call i64 @strlen(i8* %38) #14, !dbg !18591
  store i64 %call52, i64* %len, align 8, !dbg !18588, !tbaa !3851
  %39 = load i32, i32* %options.addr, align 4, !dbg !18592, !tbaa !2985
  %and53 = and i32 %39, 2048, !dbg !18594
  %tobool54 = icmp ne i32 %and53, 0, !dbg !18594
  br i1 %tobool54, label %if.end69, label %if.then55, !dbg !18595

if.then55:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %v, metadata !18596, metadata !DIExpression()), !dbg !18598
  %40 = load i8**, i8*** %argv.addr, align 8, !dbg !18599, !tbaa !2998
  %41 = load i8*, i8** %40, align 8, !dbg !18600, !tbaa !2998, !ctir !1340
  store i8* %41, i8** %v, align 8, !dbg !18598, !tbaa !2998
  %42 = load i64, i64* %len, align 8, !dbg !18601, !tbaa !3851
  %cmp56 = icmp ult i64 2, %42, !dbg !18603
  br i1 %cmp56, label %land.lhs.true57, label %if.end68, !dbg !18604

land.lhs.true57:                                  ; preds = %if.then55
  %43 = load i8*, i8** %v, align 8, !dbg !18605, !tbaa !2998
  %44 = load i64, i64* %len, align 8, !dbg !18606, !tbaa !3851
  %sub = sub i64 %44, 1, !dbg !18607
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 %sub, !dbg !18605, !ctir !115
  %45 = load i8, i8* %arrayidx, align 1, !dbg !18605, !tbaa !3660
  %conv = sext i8 %45 to i32, !dbg !18605
  %cmp58 = icmp eq i32 %conv, 47, !dbg !18608
  br i1 %cmp58, label %if.then60, label %if.end68, !dbg !18609

if.then60:                                        ; preds = %land.lhs.true57
  br label %while.cond, !dbg !18610

while.cond:                                       ; preds = %while.body, %if.then60
  %46 = load i64, i64* %len, align 8, !dbg !18611, !tbaa !3851
  %cmp61 = icmp ult i64 1, %46, !dbg !18612
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !18613

land.rhs:                                         ; preds = %while.cond
  %47 = load i8*, i8** %v, align 8, !dbg !18614, !tbaa !2998
  %48 = load i64, i64* %len, align 8, !dbg !18615, !tbaa !3851
  %sub63 = sub i64 %48, 2, !dbg !18616
  %arrayidx64 = getelementptr inbounds i8, i8* %47, i64 %sub63, !dbg !18614, !ctir !115
  %49 = load i8, i8* %arrayidx64, align 1, !dbg !18614, !tbaa !3660
  %conv65 = sext i8 %49 to i32, !dbg !18614
  %cmp66 = icmp eq i32 %conv65, 47, !dbg !18617
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %50 = phi i1 [ false, %while.cond ], [ %cmp66, %land.rhs ], !dbg !18618
  br i1 %50, label %while.body, label %while.end, !dbg !18610

while.body:                                       ; preds = %land.end
  %51 = load i64, i64* %len, align 8, !dbg !18619, !tbaa !3851
  %dec = add i64 %51, -1, !dbg !18619
  store i64 %dec, i64* %len, align 8, !dbg !18619, !tbaa !3851
  br label %while.cond, !dbg !18610, !llvm.loop !18620

while.end:                                        ; preds = %land.end
  br label %if.end68, !dbg !18610

if.end68:                                         ; preds = %while.end, %land.lhs.true57, %if.then55
  br label %if.end69, !dbg !18622

if.end69:                                         ; preds = %if.end68, %for.body
  %52 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18623, !tbaa !2998
  %53 = load i8**, i8*** %argv.addr, align 8, !dbg !18625, !tbaa !2998
  %54 = load i8*, i8** %53, align 8, !dbg !18626, !tbaa !2998, !ctir !1340
  %55 = load i64, i64* %len, align 8, !dbg !18627, !tbaa !3851
  %call70 = call %struct._ftsent* @fts_alloc(%struct.FTS* %52, i8* %54, i64 %55), !dbg !18628
  store %struct._ftsent* %call70, %struct._ftsent** %p, align 8, !dbg !18629, !tbaa !2998
  %cmp71 = icmp eq %struct._ftsent* %call70, null, !dbg !18630
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !18631

if.then73:                                        ; preds = %if.end69
  br label %mem3, !dbg !18632

if.end74:                                         ; preds = %if.end69
  %56 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18633, !tbaa !2998
  %fts_level75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 12, !dbg !18634, !ctir !2321
  store i64 0, i64* %fts_level75, align 8, !dbg !18635, !tbaa !3851, !ctir !568
  %57 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18636, !tbaa !2998
  %58 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18637, !tbaa !2998
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 1, !dbg !18638, !ctir !2321
  store %struct._ftsent* %57, %struct._ftsent** %fts_parent, align 8, !dbg !18639, !tbaa !2998, !ctir !2325
  %59 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18640, !tbaa !2998
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %59, i32 0, i32 19, !dbg !18641, !ctir !2321
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18640
  %60 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18642, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 6, !dbg !18643, !ctir !2321
  store i8* %arraydecay, i8** %fts_accpath, align 8, !dbg !18644, !tbaa !2998, !ctir !9
  %61 = load i8, i8* %defer_stat, align 1, !dbg !18645, !tbaa !3109
  %tobool76 = trunc i8 %61 to i1, !dbg !18645
  br i1 %tobool76, label %land.lhs.true78, label %if.else82, !dbg !18647

land.lhs.true78:                                  ; preds = %if.end74
  %62 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18648, !tbaa !2998
  %cmp79 = icmp ne %struct._ftsent* %62, null, !dbg !18649
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !18650

if.then81:                                        ; preds = %land.lhs.true78
  %63 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18651, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 15, !dbg !18653, !ctir !2321
  store i16 11, i16* %fts_info, align 8, !dbg !18654, !tbaa !3813, !ctir !33
  %64 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18655, !tbaa !2998
  call void @fts_set_stat_required(%struct._ftsent* %64, i1 zeroext true), !dbg !18656
  br label %if.end85, !dbg !18657

if.else82:                                        ; preds = %land.lhs.true78, %if.end74
  %65 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18658, !tbaa !2998
  %66 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18660, !tbaa !2998
  %call83 = call zeroext i16 @fts_stat(%struct.FTS* %65, %struct._ftsent* %66, i1 zeroext false), !dbg !18661
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18662, !tbaa !2998
  %fts_info84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %67, i32 0, i32 15, !dbg !18663, !ctir !2321
  store i16 %call83, i16* %fts_info84, align 8, !dbg !18664, !tbaa !3813, !ctir !33
  br label %if.end85

if.end85:                                         ; preds = %if.else82, %if.then81
  %68 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18665, !tbaa !2998
  %tobool86 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %68, null, !dbg !18665
  br i1 %tobool86, label %if.then87, label %if.else88, !dbg !18667

if.then87:                                        ; preds = %if.end85
  %69 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18668, !tbaa !2998
  %70 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18670, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %70, i32 0, i32 2, !dbg !18671, !ctir !2321
  store %struct._ftsent* %69, %struct._ftsent** %fts_link, align 8, !dbg !18672, !tbaa !2998, !ctir !2325
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18673, !tbaa !2998
  store %struct._ftsent* %71, %struct._ftsent** %root, align 8, !dbg !18674, !tbaa !2998
  br label %if.end96, !dbg !18675

if.else88:                                        ; preds = %if.end85
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18676, !tbaa !2998
  %fts_link89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 2, !dbg !18678, !ctir !2321
  store %struct._ftsent* null, %struct._ftsent** %fts_link89, align 8, !dbg !18679, !tbaa !2998, !ctir !2325
  %73 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18680, !tbaa !2998
  %cmp90 = icmp eq %struct._ftsent* %73, null, !dbg !18682
  br i1 %cmp90, label %if.then92, label %if.else93, !dbg !18683

if.then92:                                        ; preds = %if.else88
  %74 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18684, !tbaa !2998
  store %struct._ftsent* %74, %struct._ftsent** %root, align 8, !dbg !18685, !tbaa !2998
  store %struct._ftsent* %74, %struct._ftsent** %tmp, align 8, !dbg !18686, !tbaa !2998
  br label %if.end95, !dbg !18687

if.else93:                                        ; preds = %if.else88
  %75 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18688, !tbaa !2998
  %76 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !18690, !tbaa !2998
  %fts_link94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 2, !dbg !18691, !ctir !2321
  store %struct._ftsent* %75, %struct._ftsent** %fts_link94, align 8, !dbg !18692, !tbaa !2998, !ctir !2325
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18693, !tbaa !2998
  store %struct._ftsent* %77, %struct._ftsent** %tmp, align 8, !dbg !18694, !tbaa !2998
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.then92
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then87
  br label %for.inc, !dbg !18695

for.inc:                                          ; preds = %if.end96
  %78 = load i8**, i8*** %argv.addr, align 8, !dbg !18696, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8*, i8** %78, i32 1, !dbg !18696
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18696, !tbaa !2998
  %79 = load i64, i64* %nitems, align 8, !dbg !18697, !tbaa !3851
  %inc = add i64 %79, 1, !dbg !18697
  store i64 %inc, i64* %nitems, align 8, !dbg !18697, !tbaa !3851
  br label %for.cond, !dbg !18698, !llvm.loop !18699

for.end:                                          ; preds = %for.cond
  %80 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18701, !tbaa !2998
  %tobool97 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %80, null, !dbg !18701
  br i1 %tobool97, label %land.lhs.true98, label %if.end103, !dbg !18703

land.lhs.true98:                                  ; preds = %for.end
  %81 = load i64, i64* %nitems, align 8, !dbg !18704, !tbaa !3851
  %cmp99 = icmp ugt i64 %81, 1, !dbg !18705
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !18706

if.then101:                                       ; preds = %land.lhs.true98
  %82 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18707, !tbaa !2998
  %83 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18708, !tbaa !2998
  %84 = load i64, i64* %nitems, align 8, !dbg !18709, !tbaa !3851
  %call102 = call %struct._ftsent* @fts_sort(%struct.FTS* %82, %struct._ftsent* %83, i64 %84), !dbg !18710
  store %struct._ftsent* %call102, %struct._ftsent** %root, align 8, !dbg !18711, !tbaa !2998
  br label %if.end103, !dbg !18712

if.end103:                                        ; preds = %if.then101, %land.lhs.true98, %for.end
  %85 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18713, !tbaa !2998
  %call104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %85, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.438, i64 0, i64 0), i64 0), !dbg !18715
  %86 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18716, !tbaa !2998
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 0, !dbg !18717, !ctir !2338
  store %struct._ftsent* %call104, %struct._ftsent** %fts_cur, align 8, !dbg !18718, !tbaa !18719, !ctir !2325
  %cmp105 = icmp eq %struct._ftsent* %call104, null, !dbg !18720
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !18721

if.then107:                                       ; preds = %if.end103
  br label %mem3, !dbg !18722

if.end108:                                        ; preds = %if.end103
  %87 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18723, !tbaa !2998
  %88 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18724, !tbaa !2998
  %fts_cur109 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 0, !dbg !18725, !ctir !2338
  %89 = load %struct._ftsent*, %struct._ftsent** %fts_cur109, align 8, !dbg !18725, !tbaa !18719, !ctir !2325
  %fts_link110 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 2, !dbg !18726, !ctir !2322
  store %struct._ftsent* %87, %struct._ftsent** %fts_link110, align 8, !dbg !18727, !tbaa !2998, !ctir !2325
  %90 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18728, !tbaa !2998
  %fts_cur111 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 0, !dbg !18729, !ctir !2338
  %91 = load %struct._ftsent*, %struct._ftsent** %fts_cur111, align 8, !dbg !18729, !tbaa !18719, !ctir !2325
  %fts_info112 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !18730, !ctir !2322
  store i16 9, i16* %fts_info112, align 8, !dbg !18731, !tbaa !3813, !ctir !33
  %92 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18732, !tbaa !2998
  %fts_cur113 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 0, !dbg !18733, !ctir !2338
  %93 = load %struct._ftsent*, %struct._ftsent** %fts_cur113, align 8, !dbg !18733, !tbaa !18719, !ctir !2325
  %fts_level114 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 12, !dbg !18734, !ctir !2322
  store i64 1, i64* %fts_level114, align 8, !dbg !18735, !tbaa !3851, !ctir !568
  %94 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18736, !tbaa !2998
  %call115 = call zeroext i1 @setup_dir(%struct.FTS* %94), !dbg !18738
  br i1 %call115, label %if.end117, label %if.then116, !dbg !18739

if.then116:                                       ; preds = %if.end108
  br label %mem3, !dbg !18740

if.end117:                                        ; preds = %if.end108
  %95 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18741, !tbaa !2998
  %fts_options118 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 10, !dbg !18741, !ctir !2338
  %96 = load i32, i32* %fts_options118, align 8, !dbg !18741, !tbaa !18131, !ctir !7
  %and119 = and i32 %96, 4, !dbg !18741
  %tobool120 = icmp ne i32 %and119, 0, !dbg !18741
  br i1 %tobool120, label %if.end132, label %land.lhs.true121, !dbg !18743

land.lhs.true121:                                 ; preds = %if.end117
  %97 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18744, !tbaa !2998
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 10, !dbg !18744, !ctir !2338
  %98 = load i32, i32* %fts_options122, align 8, !dbg !18744, !tbaa !18131, !ctir !7
  %and123 = and i32 %98, 512, !dbg !18744
  %tobool124 = icmp ne i32 %and123, 0, !dbg !18744
  br i1 %tobool124, label %if.end132, label %land.lhs.true125, !dbg !18745

land.lhs.true125:                                 ; preds = %land.lhs.true121
  %99 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18746, !tbaa !2998
  %call126 = call i32 @diropen(%struct.FTS* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.437, i64 0, i64 0)), !dbg !18747
  %100 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18748, !tbaa !2998
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 5, !dbg !18749, !ctir !2338
  store i32 %call126, i32* %fts_rfd, align 8, !dbg !18750, !tbaa !18751, !ctir !7
  %cmp127 = icmp slt i32 %call126, 0, !dbg !18752
  br i1 %cmp127, label %if.then129, label %if.end132, !dbg !18753

if.then129:                                       ; preds = %land.lhs.true125
  %101 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18754, !tbaa !2998
  %fts_options130 = getelementptr inbounds %struct.FTS, %struct.FTS* %101, i32 0, i32 10, !dbg !18754, !ctir !2338
  %102 = load i32, i32* %fts_options130, align 8, !dbg !18754, !tbaa !18131, !ctir !7
  %or131 = or i32 %102, 4, !dbg !18754
  store i32 %or131, i32* %fts_options130, align 8, !dbg !18754, !tbaa !18131, !ctir !7
  br label %if.end132, !dbg !18754

if.end132:                                        ; preds = %if.then129, %land.lhs.true125, %land.lhs.true121, %if.end117
  %103 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18755, !tbaa !2998
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %103, i32 0, i32 13, !dbg !18756, !ctir !2338
  call void @i_ring_init(%struct.I_ring* %fts_fd_ring, i32 -1), !dbg !18757
  %104 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18758, !tbaa !2998
  store %struct.FTS* %104, %struct.FTS** %retval, align 8, !dbg !18759
  br label %return, !dbg !18759

mem3:                                             ; preds = %if.then116, %if.then107, %if.then73
  call void @llvm.dbg.label(metadata !18760), !dbg !18761
  %105 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18762, !tbaa !2998
  call void @fts_lfree(%struct._ftsent* %105), !dbg !18763
  %106 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18764, !tbaa !2998
  %107 = bitcast %struct._ftsent* %106 to i8*, !dbg !18764
  call void @free(i8* %107) #10, !dbg !18765
  br label %mem2, !dbg !18765

mem2:                                             ; preds = %mem3, %if.then44
  call void @llvm.dbg.label(metadata !18766), !dbg !18767
  %108 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18768, !tbaa !2998
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !18769, !ctir !2338
  %109 = load i8*, i8** %fts_path, align 8, !dbg !18769, !tbaa !18770, !ctir !9
  call void @free(i8* %109) #10, !dbg !18771
  br label %mem1, !dbg !18771

mem1:                                             ; preds = %mem2, %if.then38
  call void @llvm.dbg.label(metadata !18772), !dbg !18773
  %110 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18774, !tbaa !2998
  %111 = bitcast %struct.FTS* %110 to i8*, !dbg !18774
  call void @free(i8* %111) #10, !dbg !18775
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18776
  br label %return, !dbg !18776

return:                                           ; preds = %mem1, %if.end132, %if.then14, %if.then10, %if.then5, %if.then
  %112 = load %struct.FTS*, %struct.FTS** %retval, align 8, !dbg !18777
  ret %struct.FTS* %112, !dbg !18777
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @fts_maxarglen(i8** %argv) #4 !dbg !18778 !ctir !2498 {
entry:
  %argv.addr = alloca i8**, align 8
  %len = alloca i64, align 8, !ctir !55
  %max = alloca i64, align 8, !ctir !55
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18779, metadata !DIExpression()), !dbg !18780
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18781, metadata !DIExpression()), !dbg !18782
  call void @llvm.dbg.declare(metadata i64* %max, metadata !18783, metadata !DIExpression()), !dbg !18784
  store i64 0, i64* %max, align 8, !dbg !18785, !tbaa !3851
  br label %for.cond, !dbg !18787

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !18788, !tbaa !2998
  %1 = load i8*, i8** %0, align 8, !dbg !18790, !tbaa !2998, !ctir !1340
  %tobool = icmp ne i8* %1, null, !dbg !18791
  br i1 %tobool, label %for.body, label %for.end, !dbg !18791

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !18792, !tbaa !2998
  %3 = load i8*, i8** %2, align 8, !dbg !18794, !tbaa !2998, !ctir !1340
  %call = call i64 @strlen(i8* %3) #14, !dbg !18795
  store i64 %call, i64* %len, align 8, !dbg !18796, !tbaa !3851
  %4 = load i64, i64* %max, align 8, !dbg !18797, !tbaa !3851
  %cmp = icmp ugt i64 %call, %4, !dbg !18798
  br i1 %cmp, label %if.then, label %if.end, !dbg !18799

if.then:                                          ; preds = %for.body
  %5 = load i64, i64* %len, align 8, !dbg !18800, !tbaa !3851
  store i64 %5, i64* %max, align 8, !dbg !18801, !tbaa !3851
  br label %if.end, !dbg !18802

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18797

for.inc:                                          ; preds = %if.end
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !18803, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8*, i8** %6, i32 1, !dbg !18803
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18803, !tbaa !2998
  br label %for.cond, !dbg !18804, !llvm.loop !18805

for.end:                                          ; preds = %for.cond
  %7 = load i64, i64* %max, align 8, !dbg !18807, !tbaa !3851
  %add = add i64 %7, 1, !dbg !18808
  ret i64 %add, !dbg !18809
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS* %sp, i64 %more) #4 !dbg !18810 !ctir !2496 {
entry:
  %retval = alloca i1, align 1
  %sp.addr = alloca %struct.FTS*, align 8
  %more.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !9
  %new_len = alloca i64, align 8, !ctir !55
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18811, metadata !DIExpression()), !dbg !18812
  store i64 %more, i64* %more.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %more.addr, metadata !18813, metadata !DIExpression()), !dbg !18814
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18815, metadata !DIExpression()), !dbg !18816
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !18817, metadata !DIExpression()), !dbg !18818
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18819, !tbaa !2998
  %fts_pathlen = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 7, !dbg !18820, !ctir !2338
  %1 = load i64, i64* %fts_pathlen, align 8, !dbg !18820, !tbaa !18821, !ctir !55
  %2 = load i64, i64* %more.addr, align 8, !dbg !18822, !tbaa !3851
  %add = add i64 %1, %2, !dbg !18823
  %add1 = add i64 %add, 256, !dbg !18824
  store i64 %add1, i64* %new_len, align 8, !dbg !18818, !tbaa !3851
  %3 = load i64, i64* %new_len, align 8, !dbg !18825, !tbaa !3851
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18827, !tbaa !2998
  %fts_pathlen2 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 7, !dbg !18828, !ctir !2338
  %5 = load i64, i64* %fts_pathlen2, align 8, !dbg !18828, !tbaa !18821, !ctir !55
  %cmp = icmp ult i64 %3, %5, !dbg !18829
  br i1 %cmp, label %if.then, label %if.end, !dbg !18830

if.then:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18831, !tbaa !2998
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 4, !dbg !18833, !ctir !2338
  %7 = load i8*, i8** %fts_path, align 8, !dbg !18833, !tbaa !18770, !ctir !9
  call void @free(i8* %7) #10, !dbg !18834
  %8 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18835, !tbaa !2998
  %fts_path3 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 4, !dbg !18836, !ctir !2338
  store i8* null, i8** %fts_path3, align 8, !dbg !18837, !tbaa !18770, !ctir !9
  %call = call i32* @__errno_location() #15, !dbg !18838
  store i32 36, i32* %call, align 4, !dbg !18838, !tbaa !2985, !ctir !7
  store i1 false, i1* %retval, align 1, !dbg !18839
  br label %return, !dbg !18839

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %new_len, align 8, !dbg !18840, !tbaa !3851
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18841, !tbaa !2998
  %fts_pathlen4 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 7, !dbg !18842, !ctir !2338
  store i64 %9, i64* %fts_pathlen4, align 8, !dbg !18843, !tbaa !18821, !ctir !55
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18844, !tbaa !2998
  %fts_path5 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 4, !dbg !18845, !ctir !2338
  %12 = load i8*, i8** %fts_path5, align 8, !dbg !18845, !tbaa !18770, !ctir !9
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18846, !tbaa !2998
  %fts_pathlen6 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 7, !dbg !18847, !ctir !2338
  %14 = load i64, i64* %fts_pathlen6, align 8, !dbg !18847, !tbaa !18821, !ctir !55
  %call7 = call i8* @realloc(i8* %12, i64 %14) #10, !dbg !18848
  store i8* %call7, i8** %p, align 8, !dbg !18849, !tbaa !2998
  %15 = load i8*, i8** %p, align 8, !dbg !18850, !tbaa !2998
  %cmp8 = icmp eq i8* %15, null, !dbg !18852
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !18853

if.then9:                                         ; preds = %if.end
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18854, !tbaa !2998
  %fts_path10 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 4, !dbg !18856, !ctir !2338
  %17 = load i8*, i8** %fts_path10, align 8, !dbg !18856, !tbaa !18770, !ctir !9
  call void @free(i8* %17) #10, !dbg !18857
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18858, !tbaa !2998
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !18859, !ctir !2338
  store i8* null, i8** %fts_path11, align 8, !dbg !18860, !tbaa !18770, !ctir !9
  store i1 false, i1* %retval, align 1, !dbg !18861
  br label %return, !dbg !18861

if.end12:                                         ; preds = %if.end
  %19 = load i8*, i8** %p, align 8, !dbg !18862, !tbaa !2998
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18863, !tbaa !2998
  %fts_path13 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !18864, !ctir !2338
  store i8* %19, i8** %fts_path13, align 8, !dbg !18865, !tbaa !18770, !ctir !9
  store i1 true, i1* %retval, align 1, !dbg !18866
  br label %return, !dbg !18866

return:                                           ; preds = %if.end12, %if.then9, %if.then
  %21 = load i1, i1* %retval, align 1, !dbg !18867
  ret i1 %21, !dbg !18867
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS* %sp, i8* %name, i64 %namelen) #4 !dbg !18868 !ctir !2492 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i64, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %len = alloca i64, align 8, !ctir !55
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18869, metadata !DIExpression()), !dbg !18870
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18871, metadata !DIExpression()), !dbg !18872
  store i64 %namelen, i64* %namelen.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %namelen.addr, metadata !18873, metadata !DIExpression()), !dbg !18874
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18875, metadata !DIExpression()), !dbg !18876
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18877, metadata !DIExpression()), !dbg !18878
  %0 = load i64, i64* %namelen.addr, align 8, !dbg !18879, !tbaa !3851
  %add = add i64 %0, 1, !dbg !18879
  %add1 = add i64 271, %add, !dbg !18879
  %and = and i64 %add1, -8, !dbg !18879
  store i64 %and, i64* %len, align 8, !dbg !18880, !tbaa !3851
  %1 = load i64, i64* %len, align 8, !dbg !18881, !tbaa !3851
  %call = call noalias i8* @malloc(i64 %1) #10, !dbg !18883
  %2 = bitcast i8* %call to %struct._ftsent*, !dbg !18883
  store %struct._ftsent* %2, %struct._ftsent** %p, align 8, !dbg !18884, !tbaa !2998
  %cmp = icmp eq %struct._ftsent* %2, null, !dbg !18885
  br i1 %cmp, label %if.then, label %if.end, !dbg !18886

if.then:                                          ; preds = %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !18887
  br label %return, !dbg !18887

if.end:                                           ; preds = %entry
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18888, !tbaa !2998
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 19, !dbg !18889, !ctir !2321
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18890
  %4 = load i8*, i8** %name.addr, align 8, !dbg !18891, !tbaa !2998
  %5 = load i64, i64* %namelen.addr, align 8, !dbg !18892, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %4, i64 %5, i1 false), !dbg !18890
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18893, !tbaa !2998
  %fts_name2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 19, !dbg !18894, !ctir !2321
  %7 = load i64, i64* %namelen.addr, align 8, !dbg !18895, !tbaa !3851
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name2, i64 0, i64 %7, !dbg !18893, !ctir !1412
  store i8 0, i8* %arrayidx, align 1, !dbg !18896, !tbaa !3660
  %8 = load i64, i64* %namelen.addr, align 8, !dbg !18897, !tbaa !3851
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18898, !tbaa !2998
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 13, !dbg !18899, !ctir !2321
  store i64 %8, i64* %fts_namelen, align 8, !dbg !18900, !tbaa !3851, !ctir !55
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18901, !tbaa !2998
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18902, !tbaa !2998
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 11, !dbg !18903, !ctir !2321
  store %struct.FTS* %10, %struct.FTS** %fts_fts, align 8, !dbg !18904, !tbaa !2998, !ctir !2337
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18905, !tbaa !2998
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !18906, !ctir !2338
  %13 = load i8*, i8** %fts_path, align 8, !dbg !18906, !tbaa !18770, !ctir !9
  %14 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18907, !tbaa !2998
  %fts_path3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !18908, !ctir !2321
  store i8* %13, i8** %fts_path3, align 8, !dbg !18909, !tbaa !2998, !ctir !9
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18910, !tbaa !2998
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !18911, !ctir !2321
  store i32 0, i32* %fts_errno, align 8, !dbg !18912, !tbaa !2985, !ctir !7
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18913, !tbaa !2998
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 3, !dbg !18914, !ctir !2321
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp, align 8, !dbg !18915, !tbaa !2998, !ctir !609
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18916, !tbaa !2998
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 16, !dbg !18917, !ctir !2321
  store i16 0, i16* %fts_flags, align 2, !dbg !18918, !tbaa !3813, !ctir !33
  %18 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18919, !tbaa !2998
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 17, !dbg !18920, !ctir !2321
  store i16 3, i16* %fts_instr, align 4, !dbg !18921, !tbaa !3813, !ctir !33
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18922, !tbaa !2998
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 4, !dbg !18923, !ctir !2321
  store i64 0, i64* %fts_number, align 8, !dbg !18924, !tbaa !3851, !ctir !31
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18925, !tbaa !2998
  %fts_pointer = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 5, !dbg !18926, !ctir !2321
  store i8* null, i8** %fts_pointer, align 8, !dbg !18927, !tbaa !2998, !ctir !53
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18928, !tbaa !2998
  store %struct._ftsent* %21, %struct._ftsent** %retval, align 8, !dbg !18929
  br label %return, !dbg !18929

return:                                           ; preds = %if.end, %if.then
  %22 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18930
  ret %struct._ftsent* %22, !dbg !18930
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_set_stat_required(%struct._ftsent* %p, i1 zeroext %required) #4 !dbg !18931 !ctir !2429 {
entry:
  %p.addr = alloca %struct._ftsent*, align 8
  %required.addr = alloca i8, align 1
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18932, metadata !DIExpression()), !dbg !18933
  %frombool = zext i1 %required to i8
  store i8 %frombool, i8* %required.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %required.addr, metadata !18934, metadata !DIExpression()), !dbg !18935
  br label %do.body, !dbg !18936

do.body:                                          ; preds = %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18937, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !18937, !ctir !2321
  %1 = load i16, i16* %fts_info, align 8, !dbg !18937, !tbaa !3813, !ctir !33
  %conv = zext i16 %1 to i32, !dbg !18937
  %cmp = icmp eq i32 %conv, 11, !dbg !18937
  br i1 %cmp, label %if.end, label %if.then, !dbg !18940

if.then:                                          ; preds = %do.body
  call void @abort() #13, !dbg !18937
  unreachable, !dbg !18937

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !18940

do.end:                                           ; preds = %if.end
  %2 = load i8, i8* %required.addr, align 1, !dbg !18941, !tbaa !3109
  %tobool = trunc i8 %2 to i1, !dbg !18941
  %3 = zext i1 %tobool to i64, !dbg !18941
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !18941
  %conv3 = sext i32 %cond to i64, !dbg !18942
  %4 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18943, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !18944, !ctir !2321
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18945
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 8, !dbg !18945, !ctir !2393
  store i64 %conv3, i64* %st_size, align 8, !dbg !18946, !tbaa !4519, !ctir !29
  ret void, !dbg !18947
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @fts_stat(%struct.FTS* %sp, %struct._ftsent* %p, i1 zeroext %follow) #4 !dbg !18948 !ctir !2487 {
entry:
  %retval = alloca i16, align 2
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %follow.addr = alloca i8, align 1
  %sbp = alloca %struct.stat*, align 8, !ctir !2484
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18949, metadata !DIExpression()), !dbg !18950
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18951, metadata !DIExpression()), !dbg !18952
  %frombool = zext i1 %follow to i8
  store i8 %frombool, i8* %follow.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %follow.addr, metadata !18953, metadata !DIExpression()), !dbg !18954
  call void @llvm.dbg.declare(metadata %struct.stat** %sbp, metadata !18955, metadata !DIExpression()), !dbg !18956
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18957, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !18958, !ctir !2321
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18957
  store %struct.stat* %arraydecay, %struct.stat** %sbp, align 8, !dbg !18956, !tbaa !2998
  %1 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18959, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 12, !dbg !18961, !ctir !2321
  %2 = load i64, i64* %fts_level, align 8, !dbg !18961, !tbaa !3851, !ctir !568
  %cmp = icmp eq i64 %2, 0, !dbg !18962
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18963

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18964, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18964, !ctir !2338
  %4 = load i32, i32* %fts_options, align 8, !dbg !18964, !tbaa !18131, !ctir !7
  %and = and i32 %4, 1, !dbg !18964
  %tobool = icmp ne i32 %and, 0, !dbg !18964
  br i1 %tobool, label %if.then, label %if.end, !dbg !18965

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %follow.addr, align 1, !dbg !18966, !tbaa !3109
  br label %if.end, !dbg !18967

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18968, !tbaa !2998
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !18968, !ctir !2338
  %6 = load i32, i32* %fts_options1, align 8, !dbg !18968, !tbaa !18131, !ctir !7
  %and2 = and i32 %6, 2, !dbg !18968
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18968
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !18970

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i8, i8* %follow.addr, align 1, !dbg !18971, !tbaa !3109
  %tobool4 = trunc i8 %7 to i1, !dbg !18971
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !18972

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18973, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !18976, !ctir !2321
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !18976, !tbaa !2998, !ctir !9
  %10 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18977, !tbaa !2998
  %call = call i32 @stat(i8* %9, %struct.stat* %10) #10, !dbg !18978
  %tobool6 = icmp ne i32 %call, 0, !dbg !18978
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !18979

if.then7:                                         ; preds = %if.then5
  %call8 = call i32* @__errno_location() #15, !dbg !18980
  %11 = load i32, i32* %call8, align 4, !dbg !18980, !tbaa !2985, !ctir !7
  %cmp9 = icmp eq i32 %11, 2, !dbg !18983
  br i1 %cmp9, label %land.lhs.true10, label %if.end16, !dbg !18984

land.lhs.true10:                                  ; preds = %if.then7
  %12 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18985, !tbaa !2998
  %fts_accpath11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 6, !dbg !18986, !ctir !2321
  %13 = load i8*, i8** %fts_accpath11, align 8, !dbg !18986, !tbaa !2998, !ctir !9
  %14 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18987, !tbaa !2998
  %call12 = call i32 @lstat(i8* %13, %struct.stat* %14) #10, !dbg !18988
  %cmp13 = icmp eq i32 %call12, 0, !dbg !18989
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !18990

if.then14:                                        ; preds = %land.lhs.true10
  %call15 = call i32* @__errno_location() #15, !dbg !18991
  store i32 0, i32* %call15, align 4, !dbg !18991, !tbaa !2985, !ctir !7
  store i16 13, i16* %retval, align 2, !dbg !18993
  br label %return, !dbg !18993

if.end16:                                         ; preds = %land.lhs.true10, %if.then7
  %call17 = call i32* @__errno_location() #15, !dbg !18994
  %15 = load i32, i32* %call17, align 4, !dbg !18994, !tbaa !2985, !ctir !7
  %16 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18995, !tbaa !2998
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 8, !dbg !18996, !ctir !2321
  store i32 %15, i32* %fts_errno, align 8, !dbg !18997, !tbaa !2985, !ctir !7
  br label %err, !dbg !18998

if.end18:                                         ; preds = %if.then5
  br label %if.end26, !dbg !18999

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19000, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !19002, !ctir !2338
  %18 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19002, !tbaa !3826, !ctir !7
  %19 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19003, !tbaa !2998
  %fts_accpath19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 6, !dbg !19004, !ctir !2321
  %20 = load i8*, i8** %fts_accpath19, align 8, !dbg !19004, !tbaa !2998, !ctir !9
  %21 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !19005, !tbaa !2998
  %call20 = call i32 @fstatat(i32 %18, i8* %20, %struct.stat* %21, i32 256) #10, !dbg !19006
  %tobool21 = icmp ne i32 %call20, 0, !dbg !19006
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !19007

if.then22:                                        ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !19008
  %22 = load i32, i32* %call23, align 4, !dbg !19008, !tbaa !2985, !ctir !7
  %23 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19010, !tbaa !2998
  %fts_errno24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 8, !dbg !19011, !ctir !2321
  store i32 %22, i32* %fts_errno24, align 8, !dbg !19012, !tbaa !2985, !ctir !7
  br label %err, !dbg !19010

err:                                              ; preds = %if.then22, %if.end16
  call void @llvm.dbg.label(metadata !19013), !dbg !19014
  %24 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !19015, !tbaa !2998
  %25 = bitcast %struct.stat* %24 to i8*, !dbg !19016
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 144, i1 false), !dbg !19016
  store i16 10, i16* %retval, align 2, !dbg !19017
  br label %return, !dbg !19017

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end18
  %26 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !19018, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !19018, !ctir !2393
  %27 = load i32, i32* %st_mode, align 8, !dbg !19018, !tbaa !3181, !ctir !133
  %and27 = and i32 %27, 61440, !dbg !19018
  %cmp28 = icmp eq i32 %and27, 16384, !dbg !19018
  br i1 %cmp28, label %if.then29, label %if.end63, !dbg !19020

if.then29:                                        ; preds = %if.end26
  %28 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !19021, !tbaa !2998
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 2, !dbg !19023, !ctir !2393
  %29 = load i64, i64* %st_nlink, align 8, !dbg !19023, !tbaa !5430, !ctir !323
  %cmp30 = icmp ult i64 %29, 2, !dbg !19024
  br i1 %cmp30, label %cond.true, label %lor.lhs.false31, !dbg !19025

lor.lhs.false31:                                  ; preds = %if.then29
  %30 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19026, !tbaa !2998
  %fts_level32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 12, !dbg !19027, !ctir !2321
  %31 = load i64, i64* %fts_level32, align 8, !dbg !19027, !tbaa !3851, !ctir !568
  %cmp33 = icmp sle i64 %31, 0, !dbg !19028
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !19029

cond.true:                                        ; preds = %lor.lhs.false31, %if.then29
  br label %cond.end, !dbg !19029

cond.false:                                       ; preds = %lor.lhs.false31
  %32 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !19030, !tbaa !2998
  %st_nlink34 = getelementptr inbounds %struct.stat, %struct.stat* %32, i32 0, i32 2, !dbg !19031, !ctir !2393
  %33 = load i64, i64* %st_nlink34, align 8, !dbg !19031, !tbaa !5430, !ctir !323
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19032, !tbaa !2998
  %fts_options35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !19032, !ctir !2338
  %35 = load i32, i32* %fts_options35, align 8, !dbg !19032, !tbaa !18131, !ctir !7
  %and36 = and i32 %35, 32, !dbg !19032
  %tobool37 = icmp ne i32 %and36, 0, !dbg !19032
  %36 = zext i1 %tobool37 to i64, !dbg !19032
  %cond = select i1 %tobool37, i32 0, i32 2, !dbg !19032
  %conv = sext i32 %cond to i64, !dbg !19033
  %sub = sub i64 %33, %conv, !dbg !19034
  br label %cond.end, !dbg !19029

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond38 = phi i64 [ -1, %cond.true ], [ %sub, %cond.false ], !dbg !19029
  %37 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19035, !tbaa !2998
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !19036, !ctir !2321
  store i64 %cond38, i64* %fts_n_dirs_remaining, align 8, !dbg !19037, !tbaa !3851, !ctir !1384
  %38 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19038, !tbaa !2998
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 19, !dbg !19038, !ctir !2321
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !19038, !ctir !1412
  %39 = load i8, i8* %arrayidx, align 8, !dbg !19038, !tbaa !3660
  %conv39 = sext i8 %39 to i32, !dbg !19038
  %cmp40 = icmp eq i32 %conv39, 46, !dbg !19038
  br i1 %cmp40, label %land.lhs.true42, label %if.end62, !dbg !19038

land.lhs.true42:                                  ; preds = %cond.end
  %40 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19038, !tbaa !2998
  %fts_name43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 19, !dbg !19038, !ctir !2321
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name43, i64 0, i64 1, !dbg !19038, !ctir !1412
  %41 = load i8, i8* %arrayidx44, align 1, !dbg !19038, !tbaa !3660
  %tobool45 = icmp ne i8 %41, 0, !dbg !19038
  br i1 %tobool45, label %lor.lhs.false46, label %if.then56, !dbg !19038

lor.lhs.false46:                                  ; preds = %land.lhs.true42
  %42 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19038, !tbaa !2998
  %fts_name47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 19, !dbg !19038, !ctir !2321
  %arrayidx48 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name47, i64 0, i64 1, !dbg !19038, !ctir !1412
  %43 = load i8, i8* %arrayidx48, align 1, !dbg !19038, !tbaa !3660
  %conv49 = sext i8 %43 to i32, !dbg !19038
  %cmp50 = icmp eq i32 %conv49, 46, !dbg !19038
  br i1 %cmp50, label %land.lhs.true52, label %if.end62, !dbg !19038

land.lhs.true52:                                  ; preds = %lor.lhs.false46
  %44 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19038, !tbaa !2998
  %fts_name53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 19, !dbg !19038, !ctir !2321
  %arrayidx54 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name53, i64 0, i64 2, !dbg !19038, !ctir !1412
  %45 = load i8, i8* %arrayidx54, align 2, !dbg !19038, !tbaa !3660
  %tobool55 = icmp ne i8 %45, 0, !dbg !19038
  br i1 %tobool55, label %if.end62, label %if.then56, !dbg !19040

if.then56:                                        ; preds = %land.lhs.true52, %land.lhs.true42
  %46 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19041, !tbaa !2998
  %fts_level57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 12, !dbg !19043, !ctir !2321
  %47 = load i64, i64* %fts_level57, align 8, !dbg !19043, !tbaa !3851, !ctir !568
  %cmp58 = icmp eq i64 %47, 0, !dbg !19044
  %48 = zext i1 %cmp58 to i64, !dbg !19041
  %cond60 = select i1 %cmp58, i32 1, i32 5, !dbg !19041
  %conv61 = trunc i32 %cond60 to i16, !dbg !19045
  store i16 %conv61, i16* %retval, align 2, !dbg !19046
  br label %return, !dbg !19046

if.end62:                                         ; preds = %land.lhs.true52, %lor.lhs.false46, %cond.end
  store i16 1, i16* %retval, align 2, !dbg !19047
  br label %return, !dbg !19047

if.end63:                                         ; preds = %if.end26
  %49 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !19048, !tbaa !2998
  %st_mode64 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 3, !dbg !19048, !ctir !2393
  %50 = load i32, i32* %st_mode64, align 8, !dbg !19048, !tbaa !3181, !ctir !133
  %and65 = and i32 %50, 61440, !dbg !19048
  %cmp66 = icmp eq i32 %and65, 40960, !dbg !19048
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !19050

if.then68:                                        ; preds = %if.end63
  store i16 12, i16* %retval, align 2, !dbg !19051
  br label %return, !dbg !19051

if.end69:                                         ; preds = %if.end63
  %51 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !19052, !tbaa !2998
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %51, i32 0, i32 3, !dbg !19052, !ctir !2393
  %52 = load i32, i32* %st_mode70, align 8, !dbg !19052, !tbaa !3181, !ctir !133
  %and71 = and i32 %52, 61440, !dbg !19052
  %cmp72 = icmp eq i32 %and71, 32768, !dbg !19052
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !19054

if.then74:                                        ; preds = %if.end69
  store i16 8, i16* %retval, align 2, !dbg !19055
  br label %return, !dbg !19055

if.end75:                                         ; preds = %if.end69
  store i16 3, i16* %retval, align 2, !dbg !19056
  br label %return, !dbg !19056

return:                                           ; preds = %if.end75, %if.then74, %if.then68, %if.end62, %if.then56, %err, %if.then14
  %53 = load i16, i16* %retval, align 2, !dbg !19057
  ret i16 %53, !dbg !19057
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS* %sp, %struct._ftsent* %head, i64 %nitems) #4 !dbg !19058 !ctir !2489 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %nitems.addr = alloca i64, align 8
  %ap = alloca %struct._ftsent**, align 8, !ctir !2491
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %dummy = alloca %struct._ftsent*, align 8, !ctir !2420
  %compare = alloca i32 (i8*, i8*)*, align 8, !ctir !1089
  %a = alloca %struct._ftsent**, align 8, !ctir !2491
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19059, metadata !DIExpression()), !dbg !19060
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !19061, metadata !DIExpression()), !dbg !19062
  store i64 %nitems, i64* %nitems.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %nitems.addr, metadata !19063, metadata !DIExpression()), !dbg !19064
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %ap, metadata !19065, metadata !DIExpression()), !dbg !19066
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19067, metadata !DIExpression()), !dbg !19068
  call void @llvm.dbg.declare(metadata %struct._ftsent** %dummy, metadata !19069, metadata !DIExpression()), !dbg !19070
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare, metadata !19071, metadata !DIExpression()), !dbg !19072
  %0 = ptrtoint %struct._ftsent** %dummy to i64, !dbg !19073
  %1 = bitcast %struct._ftsent** %dummy to i8*, !dbg !19074
  %2 = ptrtoint i8* %1 to i64, !dbg !19075
  %cmp = icmp eq i64 %0, %2, !dbg !19076
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19077

cond.true:                                        ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19078, !tbaa !2998
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 9, !dbg !19079, !ctir !2338
  %4 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !19079, !tbaa !18508, !ctir !2352
  %5 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %4 to i32 (i8*, i8*)*, !dbg !19080
  br label %cond.end, !dbg !19077

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19077

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (i8*, i8*)* [ %5, %cond.true ], [ @fts_compar, %cond.false ], !dbg !19077
  store i32 (i8*, i8*)* %cond, i32 (i8*, i8*)** %compare, align 8, !dbg !19072, !tbaa !2998
  %6 = load i64, i64* %nitems.addr, align 8, !dbg !19081, !tbaa !3851
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19083, !tbaa !2998
  %fts_nitems = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 8, !dbg !19084, !ctir !2338
  %8 = load i64, i64* %fts_nitems, align 8, !dbg !19084, !tbaa !19085, !ctir !55
  %cmp1 = icmp ugt i64 %6, %8, !dbg !19086
  br i1 %cmp1, label %if.then, label %if.end11, !dbg !19087

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a, metadata !19088, metadata !DIExpression()), !dbg !19090
  %9 = load i64, i64* %nitems.addr, align 8, !dbg !19091, !tbaa !3851
  %add = add i64 %9, 40, !dbg !19092
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19093, !tbaa !2998
  %fts_nitems2 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 8, !dbg !19094, !ctir !2338
  store i64 %add, i64* %fts_nitems2, align 8, !dbg !19095, !tbaa !19085, !ctir !55
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19096, !tbaa !2998
  %fts_nitems3 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 8, !dbg !19098, !ctir !2338
  %12 = load i64, i64* %fts_nitems3, align 8, !dbg !19098, !tbaa !19085, !ctir !55
  %cmp4 = icmp ult i64 2305843009213693951, %12, !dbg !19099
  br i1 %cmp4, label %if.then6, label %lor.lhs.false, !dbg !19100

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19101, !tbaa !2998
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 2, !dbg !19102, !ctir !2338
  %14 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !19102, !tbaa !19103, !ctir !2344
  %15 = bitcast %struct._ftsent** %14 to i8*, !dbg !19101
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19104, !tbaa !2998
  %fts_nitems5 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 8, !dbg !19105, !ctir !2338
  %17 = load i64, i64* %fts_nitems5, align 8, !dbg !19105, !tbaa !19085, !ctir !55
  %mul = mul i64 %17, 8, !dbg !19106
  %call = call i8* @realloc(i8* %15, i64 %mul) #10, !dbg !19107
  %18 = bitcast i8* %call to %struct._ftsent**, !dbg !19107
  store %struct._ftsent** %18, %struct._ftsent*** %a, align 8, !dbg !19108, !tbaa !2998
  %tobool = icmp ne %struct._ftsent** %18, null, !dbg !19108
  br i1 %tobool, label %if.end, label %if.then6, !dbg !19109

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19110, !tbaa !2998
  %fts_array7 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 2, !dbg !19112, !ctir !2338
  %20 = load %struct._ftsent**, %struct._ftsent*** %fts_array7, align 8, !dbg !19112, !tbaa !19103, !ctir !2344
  %21 = bitcast %struct._ftsent** %20 to i8*, !dbg !19110
  call void @free(i8* %21) #10, !dbg !19113
  %22 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19114, !tbaa !2998
  %fts_array8 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 2, !dbg !19115, !ctir !2338
  store %struct._ftsent** null, %struct._ftsent*** %fts_array8, align 8, !dbg !19116, !tbaa !19103, !ctir !2344
  %23 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19117, !tbaa !2998
  %fts_nitems9 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 8, !dbg !19118, !ctir !2338
  store i64 0, i64* %fts_nitems9, align 8, !dbg !19119, !tbaa !19085, !ctir !55
  %24 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19120, !tbaa !2998
  store %struct._ftsent* %24, %struct._ftsent** %retval, align 8, !dbg !19121
  br label %return, !dbg !19121

if.end:                                           ; preds = %lor.lhs.false
  %25 = load %struct._ftsent**, %struct._ftsent*** %a, align 8, !dbg !19122, !tbaa !2998
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19123, !tbaa !2998
  %fts_array10 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 2, !dbg !19124, !ctir !2338
  store %struct._ftsent** %25, %struct._ftsent*** %fts_array10, align 8, !dbg !19125, !tbaa !19103, !ctir !2344
  br label %if.end11, !dbg !19126

if.end11:                                         ; preds = %if.end, %cond.end
  %27 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19127, !tbaa !2998
  %fts_array12 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 2, !dbg !19129, !ctir !2338
  %28 = load %struct._ftsent**, %struct._ftsent*** %fts_array12, align 8, !dbg !19129, !tbaa !19103, !ctir !2344
  store %struct._ftsent** %28, %struct._ftsent*** %ap, align 8, !dbg !19130, !tbaa !2998
  %29 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19131, !tbaa !2998
  store %struct._ftsent* %29, %struct._ftsent** %p, align 8, !dbg !19132, !tbaa !2998
  br label %for.cond, !dbg !19133

for.cond:                                         ; preds = %for.inc, %if.end11
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19134, !tbaa !2998
  %tobool13 = icmp ne %struct._ftsent* %30, null, !dbg !19136
  br i1 %tobool13, label %for.body, label %for.end, !dbg !19136

for.body:                                         ; preds = %for.cond
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19137, !tbaa !2998
  %32 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19138, !tbaa !2998
  %incdec.ptr = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %32, i32 1, !dbg !19138
  store %struct._ftsent** %incdec.ptr, %struct._ftsent*** %ap, align 8, !dbg !19138, !tbaa !2998
  store %struct._ftsent* %31, %struct._ftsent** %32, align 8, !dbg !19139, !tbaa !2998, !ctir !2420
  br label %for.inc, !dbg !19140

for.inc:                                          ; preds = %for.body
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19141, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 2, !dbg !19142, !ctir !2321
  %34 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19142, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %34, %struct._ftsent** %p, align 8, !dbg !19143, !tbaa !2998
  br label %for.cond, !dbg !19144, !llvm.loop !19145

for.end:                                          ; preds = %for.cond
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19147, !tbaa !2998
  %fts_array14 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 2, !dbg !19148, !ctir !2338
  %36 = load %struct._ftsent**, %struct._ftsent*** %fts_array14, align 8, !dbg !19148, !tbaa !19103, !ctir !2344
  %37 = bitcast %struct._ftsent** %36 to i8*, !dbg !19149
  %38 = load i64, i64* %nitems.addr, align 8, !dbg !19150, !tbaa !3851
  %39 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !19151, !tbaa !2998
  call void @qsort(i8* %37, i64 %38, i64 8, i32 (i8*, i8*)* %39), !dbg !19152
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19153, !tbaa !2998
  %fts_array15 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !19155, !ctir !2338
  %41 = load %struct._ftsent**, %struct._ftsent*** %fts_array15, align 8, !dbg !19155, !tbaa !19103, !ctir !2344
  store %struct._ftsent** %41, %struct._ftsent*** %ap, align 8, !dbg !19156, !tbaa !2998
  %42 = load %struct._ftsent*, %struct._ftsent** %41, align 8, !dbg !19157, !tbaa !2998, !ctir !2420
  store %struct._ftsent* %42, %struct._ftsent** %head.addr, align 8, !dbg !19158, !tbaa !2998
  br label %for.cond16, !dbg !19159

for.cond16:                                       ; preds = %for.inc21, %for.end
  %43 = load i64, i64* %nitems.addr, align 8, !dbg !19160, !tbaa !3851
  %dec = add i64 %43, -1, !dbg !19160
  store i64 %dec, i64* %nitems.addr, align 8, !dbg !19160, !tbaa !3851
  %tobool17 = icmp ne i64 %dec, 0, !dbg !19162
  br i1 %tobool17, label %for.body18, label %for.end23, !dbg !19162

for.body18:                                       ; preds = %for.cond16
  %44 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19163, !tbaa !2998
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %44, i64 1, !dbg !19163, !ctir !2491
  %45 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !19163, !tbaa !2998
  %46 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19164, !tbaa !2998
  %arrayidx19 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %46, i64 0, !dbg !19164, !ctir !2491
  %47 = load %struct._ftsent*, %struct._ftsent** %arrayidx19, align 8, !dbg !19164, !tbaa !2998
  %fts_link20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 2, !dbg !19165, !ctir !2321
  store %struct._ftsent* %45, %struct._ftsent** %fts_link20, align 8, !dbg !19166, !tbaa !2998, !ctir !2325
  br label %for.inc21, !dbg !19164

for.inc21:                                        ; preds = %for.body18
  %48 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19167, !tbaa !2998
  %incdec.ptr22 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %48, i32 1, !dbg !19167
  store %struct._ftsent** %incdec.ptr22, %struct._ftsent*** %ap, align 8, !dbg !19167, !tbaa !2998
  br label %for.cond16, !dbg !19168, !llvm.loop !19169

for.end23:                                        ; preds = %for.cond16
  %49 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !19171, !tbaa !2998
  %arrayidx24 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %49, i64 0, !dbg !19171, !ctir !2491
  %50 = load %struct._ftsent*, %struct._ftsent** %arrayidx24, align 8, !dbg !19171, !tbaa !2998
  %fts_link25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 2, !dbg !19172, !ctir !2321
  store %struct._ftsent* null, %struct._ftsent** %fts_link25, align 8, !dbg !19173, !tbaa !2998, !ctir !2325
  %51 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19174, !tbaa !2998
  store %struct._ftsent* %51, %struct._ftsent** %retval, align 8, !dbg !19175
  br label %return, !dbg !19175

return:                                           ; preds = %for.end23, %if.then6
  %52 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !19176
  ret %struct._ftsent* %52, !dbg !19176
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @setup_dir(%struct.FTS* %fts) #4 !dbg !19177 !ctir !2431 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !19178, metadata !DIExpression()), !dbg !19179
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19180, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19182, !ctir !2338
  %1 = load i32, i32* %fts_options, align 8, !dbg !19182, !tbaa !18131, !ctir !7
  %and = and i32 %1, 258, !dbg !19183
  %tobool = icmp ne i32 %and, 0, !dbg !19183
  br i1 %tobool, label %if.then, label %if.else, !dbg !19184

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !19185
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19187, !tbaa !2998
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !19188, !ctir !2338
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19189
  store %struct.hash_table* %call, %struct.hash_table** %ht, align 8, !dbg !19190, !tbaa !3660, !ctir !2361
  %3 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19191, !tbaa !2998
  %fts_cycle1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 12, !dbg !19193, !ctir !2338
  %ht2 = bitcast %union.anon* %fts_cycle1 to %struct.hash_table**, !dbg !19194
  %4 = load %struct.hash_table*, %struct.hash_table** %ht2, align 8, !dbg !19194, !tbaa !3660, !ctir !2361
  %tobool3 = icmp ne %struct.hash_table* %4, null, !dbg !19191
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !19195

if.then4:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !19196
  br label %return, !dbg !19196

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !19197

if.else:                                          ; preds = %entry
  %call5 = call noalias i8* @malloc(i64 32) #10, !dbg !19198
  %5 = bitcast i8* %call5 to %struct.cycle_check_state*, !dbg !19198
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19200, !tbaa !2998
  %fts_cycle6 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !19201, !ctir !2338
  %state = bitcast %union.anon* %fts_cycle6 to %struct.cycle_check_state**, !dbg !19202
  store %struct.cycle_check_state* %5, %struct.cycle_check_state** %state, align 8, !dbg !19203, !tbaa !3660, !ctir !2361
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19204, !tbaa !2998
  %fts_cycle7 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !19206, !ctir !2338
  %state8 = bitcast %union.anon* %fts_cycle7 to %struct.cycle_check_state**, !dbg !19207
  %8 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state8, align 8, !dbg !19207, !tbaa !3660, !ctir !2361
  %tobool9 = icmp ne %struct.cycle_check_state* %8, null, !dbg !19204
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !19208

if.then10:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !19209
  br label %return, !dbg !19209

if.end11:                                         ; preds = %if.else
  %9 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19210, !tbaa !2998
  %fts_cycle12 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !19211, !ctir !2338
  %state13 = bitcast %union.anon* %fts_cycle12 to %struct.cycle_check_state**, !dbg !19212
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state13, align 8, !dbg !19212, !tbaa !3660, !ctir !2361
  call void @cycle_check_init(%struct.cycle_check_state* %10), !dbg !19213
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %if.end
  store i1 true, i1* %retval, align 1, !dbg !19214
  br label %return, !dbg !19214

return:                                           ; preds = %if.end14, %if.then10, %if.then4
  %11 = load i1, i1* %retval, align 1, !dbg !19215
  ret i1 %11, !dbg !19215
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @diropen(%struct.FTS* %sp, i8* %dir) #4 !dbg !19216 !ctir !2441 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %dir.addr = alloca i8*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19217, metadata !DIExpression()), !dbg !19218
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !19219, metadata !DIExpression()), !dbg !19220
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !19221, metadata !DIExpression()), !dbg !19222
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19223, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19223, !ctir !2444
  %1 = load i32, i32* %fts_options, align 8, !dbg !19223, !tbaa !18131, !ctir !7
  %and = and i32 %1, 16, !dbg !19223
  %tobool = icmp ne i32 %and, 0, !dbg !19223
  %2 = zext i1 %tobool to i64, !dbg !19223
  %cond = select i1 %tobool, i32 131072, i32 0, !dbg !19223
  %or = or i32 592128, %cond, !dbg !19224
  store i32 %or, i32* %open_flags, align 4, !dbg !19222, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19225, metadata !DIExpression()), !dbg !19226
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19227, !tbaa !2998
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !19227, !ctir !2444
  %4 = load i32, i32* %fts_options1, align 8, !dbg !19227, !tbaa !18131, !ctir !7
  %and2 = and i32 %4, 512, !dbg !19227
  %tobool3 = icmp ne i32 %and2, 0, !dbg !19227
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !19227

cond.true:                                        ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19228, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 6, !dbg !19229, !ctir !2444
  %6 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19229, !tbaa !3826, !ctir !7
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !19230, !tbaa !2998
  %8 = load i32, i32* %open_flags, align 4, !dbg !19231, !tbaa !2985
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %6, i8* %7, i32 %8), !dbg !19232
  br label %cond.end, !dbg !19227

cond.false:                                       ; preds = %entry
  %9 = load i8*, i8** %dir.addr, align 8, !dbg !19233, !tbaa !2998
  %10 = load i32, i32* %open_flags, align 4, !dbg !19234, !tbaa !2985
  %call4 = call i32 (i8*, i32, ...) @open_safer(i8* %9, i32 %10), !dbg !19235
  br label %cond.end, !dbg !19227

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %call, %cond.true ], [ %call4, %cond.false ], !dbg !19227
  store i32 %cond5, i32* %fd, align 4, !dbg !19226, !tbaa !2985
  %11 = load i32, i32* %fd, align 4, !dbg !19236, !tbaa !2985
  ret i32 %11, !dbg !19237
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_lfree(%struct._ftsent* %head) #4 !dbg !19238 !ctir !2494 {
entry:
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !19239, metadata !DIExpression()), !dbg !19240
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19241, metadata !DIExpression()), !dbg !19242
  br label %while.cond, !dbg !19243

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19244, !tbaa !2998
  store %struct._ftsent* %0, %struct._ftsent** %p, align 8, !dbg !19245, !tbaa !2998
  %tobool = icmp ne %struct._ftsent* %0, null, !dbg !19243
  br i1 %tobool, label %while.body, label %while.end, !dbg !19243

while.body:                                       ; preds = %while.cond
  %1 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !19246, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 2, !dbg !19248, !ctir !2321
  %2 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19248, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %2, %struct._ftsent** %head.addr, align 8, !dbg !19249, !tbaa !2998
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19250, !tbaa !2998
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 3, !dbg !19252, !ctir !2321
  %4 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19252, !tbaa !2998, !ctir !609
  %tobool1 = icmp ne %struct.__dirstream* %4, null, !dbg !19250
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19253

if.then:                                          ; preds = %while.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19254, !tbaa !2998
  %fts_dirp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !19255, !ctir !2321
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp2, align 8, !dbg !19255, !tbaa !2998, !ctir !609
  %call = call i32 @closedir(%struct.__dirstream* %6), !dbg !19256
  br label %if.end, !dbg !19256

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19257, !tbaa !2998
  %8 = bitcast %struct._ftsent* %7 to i8*, !dbg !19257
  call void @free(i8* %8) #10, !dbg !19258
  br label %while.cond, !dbg !19243, !llvm.loop !19259

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19261
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @AD_hash(i8* %x, i64 %table_size) #4 !dbg !19262 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !2433
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !19263, metadata !DIExpression()), !dbg !19264
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !19265, metadata !DIExpression()), !dbg !19266
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !19267, metadata !DIExpression()), !dbg !19268
  %0 = load i8*, i8** %x.addr, align 8, !dbg !19269, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !19269
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !19268, !tbaa !2998
  %2 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !19270, !tbaa !2998
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %2, i32 0, i32 1, !dbg !19271, !ctir !2434
  %3 = load i64, i64* %ino, align 8, !dbg !19271, !tbaa !19272, !ctir !227
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !19274, !tbaa !3851
  %rem = urem i64 %3, %4, !dbg !19275
  ret i64 %rem, !dbg !19276
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @AD_compare(i8* %x, i8* %y) #4 !dbg !19277 !ctir !551 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.Active_dir*, align 8, !ctir !2433
  %ay = alloca %struct.Active_dir*, align 8, !ctir !2433
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !19278, metadata !DIExpression()), !dbg !19279
  store i8* %y, i8** %y.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !19280, metadata !DIExpression()), !dbg !19281
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !19282, metadata !DIExpression()), !dbg !19283
  %0 = load i8*, i8** %x.addr, align 8, !dbg !19284, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !19284
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !19283, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ay, metadata !19285, metadata !DIExpression()), !dbg !19286
  %2 = load i8*, i8** %y.addr, align 8, !dbg !19287, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.Active_dir*, !dbg !19287
  store %struct.Active_dir* %3, %struct.Active_dir** %ay, align 8, !dbg !19286, !tbaa !2998
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !19288, !tbaa !2998
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %4, i32 0, i32 1, !dbg !19289, !ctir !2434
  %5 = load i64, i64* %ino, align 8, !dbg !19289, !tbaa !19272, !ctir !227
  %6 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !19290, !tbaa !2998
  %ino1 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !19291, !ctir !2434
  %7 = load i64, i64* %ino1, align 8, !dbg !19291, !tbaa !19272, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !19292
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19293

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !19294, !tbaa !2998
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 0, !dbg !19295, !ctir !2434
  %9 = load i64, i64* %dev, align 8, !dbg !19295, !tbaa !19296, !ctir !230
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !19297, !tbaa !2998
  %dev2 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 0, !dbg !19298, !ctir !2434
  %11 = load i64, i64* %dev2, align 8, !dbg !19298, !tbaa !19296, !ctir !230
  %cmp3 = icmp eq i64 %9, %11, !dbg !19299
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !19300
  ret i1 %12, !dbg !19301
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compar(i8* %a, i8* %b) #4 !dbg !19302 !ctir !1090 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %pa = alloca %struct._ftsent**, align 8, !ctir !2318
  %pb = alloca %struct._ftsent**, align 8, !ctir !2318
  store i8* %a, i8** %a.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !19303, metadata !DIExpression()), !dbg !19304
  store i8* %b, i8** %b.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !19305, metadata !DIExpression()), !dbg !19306
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pa, metadata !19307, metadata !DIExpression()), !dbg !19308
  %0 = load i8*, i8** %a.addr, align 8, !dbg !19309, !tbaa !2998
  %1 = bitcast i8* %0 to %struct._ftsent**, !dbg !19310
  store %struct._ftsent** %1, %struct._ftsent*** %pa, align 8, !dbg !19308, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pb, metadata !19311, metadata !DIExpression()), !dbg !19312
  %2 = load i8*, i8** %b.addr, align 8, !dbg !19313, !tbaa !2998
  %3 = bitcast i8* %2 to %struct._ftsent**, !dbg !19314
  store %struct._ftsent** %3, %struct._ftsent*** %pb, align 8, !dbg !19312, !tbaa !2998
  %4 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !19315, !tbaa !2998
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %4, i64 0, !dbg !19315, !ctir !2318
  %5 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !19315, !tbaa !2998
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 11, !dbg !19316, !ctir !2320
  %6 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !19316, !tbaa !2998, !ctir !2337
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 9, !dbg !19317, !ctir !2338
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !19317, !tbaa !18508, !ctir !2352
  %8 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !19318, !tbaa !2998
  %9 = load %struct._ftsent**, %struct._ftsent*** %pb, align 8, !dbg !19319, !tbaa !2998
  %call = call i32 %7(%struct._ftsent** %8, %struct._ftsent** %9), !dbg !19315
  ret i32 %call, !dbg !19320
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_close(%struct.FTS* %sp) #4 !dbg !19321 !ctir !2421 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %freep = alloca %struct._ftsent*, align 8, !ctir !2420
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %saved_errno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19322, metadata !DIExpression()), !dbg !19323
  call void @llvm.dbg.declare(metadata %struct._ftsent** %freep, metadata !19324, metadata !DIExpression()), !dbg !19325
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19326, metadata !DIExpression()), !dbg !19327
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19328, metadata !DIExpression()), !dbg !19329
  store i32 0, i32* %saved_errno, align 4, !dbg !19329, !tbaa !2985
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19330, !tbaa !2998
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19332, !ctir !2338
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19332, !tbaa !18719, !ctir !2325
  %tobool = icmp ne %struct._ftsent* %1, null, !dbg !19330
  br i1 %tobool, label %if.then, label %if.end, !dbg !19333

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19334, !tbaa !2998
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !19337, !ctir !2338
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !19337, !tbaa !18719, !ctir !2325
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !19338, !tbaa !2998
  br label %for.cond, !dbg !19339

for.cond:                                         ; preds = %cond.end, %if.then
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19340, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 12, !dbg !19342, !ctir !2321
  %5 = load i64, i64* %fts_level, align 8, !dbg !19342, !tbaa !3851, !ctir !568
  %cmp = icmp sge i64 %5, 0, !dbg !19343
  br i1 %cmp, label %for.body, label %for.end, !dbg !19344

for.body:                                         ; preds = %for.cond
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19345, !tbaa !2998
  store %struct._ftsent* %6, %struct._ftsent** %freep, align 8, !dbg !19347, !tbaa !2998
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19348, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 2, !dbg !19349, !ctir !2321
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19349, !tbaa !2998, !ctir !2325
  %cmp2 = icmp ne %struct._ftsent* %8, null, !dbg !19350
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !19348

cond.true:                                        ; preds = %for.body
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19351, !tbaa !2998
  %fts_link3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 2, !dbg !19352, !ctir !2321
  %10 = load %struct._ftsent*, %struct._ftsent** %fts_link3, align 8, !dbg !19352, !tbaa !2998, !ctir !2325
  br label %cond.end, !dbg !19348

cond.false:                                       ; preds = %for.body
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19353, !tbaa !2998
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 1, !dbg !19354, !ctir !2321
  %12 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19354, !tbaa !2998, !ctir !2325
  br label %cond.end, !dbg !19348

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !19348
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !19355, !tbaa !2998
  %13 = load %struct._ftsent*, %struct._ftsent** %freep, align 8, !dbg !19356, !tbaa !2998
  %14 = bitcast %struct._ftsent* %13 to i8*, !dbg !19356
  call void @free(i8* %14) #10, !dbg !19357
  br label %for.cond, !dbg !19358, !llvm.loop !19359

for.end:                                          ; preds = %for.cond
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19361, !tbaa !2998
  %16 = bitcast %struct._ftsent* %15 to i8*, !dbg !19361
  call void @free(i8* %16) #10, !dbg !19362
  br label %if.end, !dbg !19363

if.end:                                           ; preds = %for.end, %entry
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19364, !tbaa !2998
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 1, !dbg !19366, !ctir !2338
  %18 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !19366, !tbaa !19367, !ctir !2325
  %tobool4 = icmp ne %struct._ftsent* %18, null, !dbg !19364
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !19368

if.then5:                                         ; preds = %if.end
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19369, !tbaa !2998
  %fts_child6 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 1, !dbg !19370, !ctir !2338
  %20 = load %struct._ftsent*, %struct._ftsent** %fts_child6, align 8, !dbg !19370, !tbaa !19367, !ctir !2325
  call void @fts_lfree(%struct._ftsent* %20), !dbg !19371
  br label %if.end7, !dbg !19371

if.end7:                                          ; preds = %if.then5, %if.end
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19372, !tbaa !2998
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 2, !dbg !19373, !ctir !2338
  %22 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !19373, !tbaa !19103, !ctir !2344
  %23 = bitcast %struct._ftsent** %22 to i8*, !dbg !19372
  call void @free(i8* %23) #10, !dbg !19374
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19375, !tbaa !2998
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 4, !dbg !19376, !ctir !2338
  %25 = load i8*, i8** %fts_path, align 8, !dbg !19376, !tbaa !18770, !ctir !9
  call void @free(i8* %25) #10, !dbg !19377
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19378, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !19378, !ctir !2338
  %27 = load i32, i32* %fts_options, align 8, !dbg !19378, !tbaa !18131, !ctir !7
  %and = and i32 %27, 512, !dbg !19378
  %tobool8 = icmp ne i32 %and, 0, !dbg !19378
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !19380

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19381, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 6, !dbg !19384, !ctir !2338
  %29 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19384, !tbaa !3826, !ctir !7
  %cmp10 = icmp sle i32 0, %29, !dbg !19385
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !19386

if.then11:                                        ; preds = %if.then9
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19387, !tbaa !2998
  %fts_cwd_fd12 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 6, !dbg !19389, !ctir !2338
  %31 = load i32, i32* %fts_cwd_fd12, align 4, !dbg !19389, !tbaa !3826, !ctir !7
  %call = call i32 @close(i32 %31), !dbg !19390
  %tobool13 = icmp ne i32 %call, 0, !dbg !19390
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !19391

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !19392
  %32 = load i32, i32* %call15, align 4, !dbg !19392, !tbaa !2985, !ctir !7
  store i32 %32, i32* %saved_errno, align 4, !dbg !19393, !tbaa !2985
  br label %if.end16, !dbg !19394

if.end16:                                         ; preds = %if.then14, %if.then11
  br label %if.end17, !dbg !19395

if.end17:                                         ; preds = %if.end16, %if.then9
  br label %if.end37, !dbg !19396

if.else:                                          ; preds = %if.end7
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19397, !tbaa !2998
  %fts_options18 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 10, !dbg !19397, !ctir !2338
  %34 = load i32, i32* %fts_options18, align 8, !dbg !19397, !tbaa !18131, !ctir !7
  %and19 = and i32 %34, 4, !dbg !19397
  %tobool20 = icmp ne i32 %and19, 0, !dbg !19397
  br i1 %tobool20, label %if.end36, label %if.then21, !dbg !19399

if.then21:                                        ; preds = %if.else
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19400, !tbaa !2998
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 5, !dbg !19403, !ctir !2338
  %36 = load i32, i32* %fts_rfd, align 8, !dbg !19403, !tbaa !18751, !ctir !7
  %call22 = call i32 @fchdir(i32 %36) #10, !dbg !19404
  %tobool23 = icmp ne i32 %call22, 0, !dbg !19404
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !19405

if.then24:                                        ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !19406
  %37 = load i32, i32* %call25, align 4, !dbg !19406, !tbaa !2985, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !19407, !tbaa !2985
  br label %if.end26, !dbg !19408

if.end26:                                         ; preds = %if.then24, %if.then21
  %38 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19409, !tbaa !2998
  %fts_rfd27 = getelementptr inbounds %struct.FTS, %struct.FTS* %38, i32 0, i32 5, !dbg !19411, !ctir !2338
  %39 = load i32, i32* %fts_rfd27, align 8, !dbg !19411, !tbaa !18751, !ctir !7
  %call28 = call i32 @close(i32 %39), !dbg !19412
  %tobool29 = icmp ne i32 %call28, 0, !dbg !19412
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !19413

if.then30:                                        ; preds = %if.end26
  %40 = load i32, i32* %saved_errno, align 4, !dbg !19414, !tbaa !2985
  %cmp31 = icmp eq i32 %40, 0, !dbg !19416
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !19417

if.then32:                                        ; preds = %if.then30
  %call33 = call i32* @__errno_location() #15, !dbg !19418
  %41 = load i32, i32* %call33, align 4, !dbg !19418, !tbaa !2985, !ctir !7
  store i32 %41, i32* %saved_errno, align 4, !dbg !19419, !tbaa !2985
  br label %if.end34, !dbg !19420

if.end34:                                         ; preds = %if.then32, %if.then30
  br label %if.end35, !dbg !19421

if.end35:                                         ; preds = %if.end34, %if.end26
  br label %if.end36, !dbg !19422

if.end36:                                         ; preds = %if.end35, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end17
  %42 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19423, !tbaa !2998
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 13, !dbg !19424, !ctir !2338
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !19425
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19426, !tbaa !2998
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 11, !dbg !19428, !ctir !2338
  %44 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !19428, !tbaa !19429, !ctir !1433
  %tobool38 = icmp ne %struct.hash_table* %44, null, !dbg !19426
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !19430

if.then39:                                        ; preds = %if.end37
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19431, !tbaa !2998
  %fts_leaf_optimization_works_ht40 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 11, !dbg !19432, !ctir !2338
  %46 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht40, align 8, !dbg !19432, !tbaa !19429, !ctir !1433
  call void @hash_free(%struct.hash_table* %46), !dbg !19433
  br label %if.end41, !dbg !19433

if.end41:                                         ; preds = %if.then39, %if.end37
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19434, !tbaa !2998
  call void @free_dir(%struct.FTS* %47), !dbg !19435
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19436, !tbaa !2998
  %49 = bitcast %struct.FTS* %48 to i8*, !dbg !19436
  call void @free(i8* %49) #10, !dbg !19437
  %50 = load i32, i32* %saved_errno, align 4, !dbg !19438, !tbaa !2985
  %tobool42 = icmp ne i32 %50, 0, !dbg !19438
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !19440

if.then43:                                        ; preds = %if.end41
  %51 = load i32, i32* %saved_errno, align 4, !dbg !19441, !tbaa !2985
  %call44 = call i32* @__errno_location() #15, !dbg !19441
  store i32 %51, i32* %call44, align 4, !dbg !19441, !tbaa !2985, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !19443
  br label %return, !dbg !19443

if.end45:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !19444
  br label %return, !dbg !19444

return:                                           ; preds = %if.end45, %if.then43
  %52 = load i32, i32* %retval, align 4, !dbg !19445
  ret i32 %52, !dbg !19445
}

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fd_ring_clear(%struct.I_ring* %fd_ring) #4 !dbg !19446 !ctir !2445 {
entry:
  %fd_ring.addr = alloca %struct.I_ring*, align 8
  %fd = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %fd_ring, %struct.I_ring** %fd_ring.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.I_ring** %fd_ring.addr, metadata !19447, metadata !DIExpression()), !dbg !19448
  br label %while.cond, !dbg !19449

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19450, !tbaa !2998
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !19451
  %lnot = xor i1 %call, true, !dbg !19452
  br i1 %lnot, label %while.body, label %while.end, !dbg !19449

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19453, metadata !DIExpression()), !dbg !19455
  %1 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19456, !tbaa !2998
  %call1 = call i32 @i_ring_pop(%struct.I_ring* %1), !dbg !19457
  store i32 %call1, i32* %fd, align 4, !dbg !19455, !tbaa !2985
  %2 = load i32, i32* %fd, align 4, !dbg !19458, !tbaa !2985
  %cmp = icmp sle i32 0, %2, !dbg !19460
  br i1 %cmp, label %if.then, label %if.end, !dbg !19461

if.then:                                          ; preds = %while.body
  %3 = load i32, i32* %fd, align 4, !dbg !19462, !tbaa !2985
  %call2 = call i32 @close(i32 %3), !dbg !19463
  br label %if.end, !dbg !19463

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !19449, !llvm.loop !19464

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19466
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_dir(%struct.FTS* %sp) #4 !dbg !19467 !ctir !2448 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19468, metadata !DIExpression()), !dbg !19469
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19470, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19472, !ctir !2338
  %1 = load i32, i32* %fts_options, align 8, !dbg !19472, !tbaa !18131, !ctir !7
  %and = and i32 %1, 258, !dbg !19473
  %tobool = icmp ne i32 %and, 0, !dbg !19473
  br i1 %tobool, label %if.then, label %if.else, !dbg !19474

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19475, !tbaa !2998
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !19478, !ctir !2338
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19479
  %3 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !19479, !tbaa !3660, !ctir !2361
  %tobool1 = icmp ne %struct.hash_table* %3, null, !dbg !19475
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !19480

if.then2:                                         ; preds = %if.then
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19481, !tbaa !2998
  %fts_cycle3 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 12, !dbg !19482, !ctir !2338
  %ht4 = bitcast %union.anon* %fts_cycle3 to %struct.hash_table**, !dbg !19483
  %5 = load %struct.hash_table*, %struct.hash_table** %ht4, align 8, !dbg !19483, !tbaa !3660, !ctir !2361
  call void @hash_free(%struct.hash_table* %5), !dbg !19484
  br label %if.end, !dbg !19484

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !19485

if.else:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19486, !tbaa !2998
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !19487, !ctir !2338
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !19488
  %7 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !19488, !tbaa !3660, !ctir !2361
  %8 = bitcast %struct.cycle_check_state* %7 to i8*, !dbg !19486
  call void @free(i8* %8) #10, !dbg !19489
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !19490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_read(%struct.FTS* %sp) #4 !dbg !19491 !ctir !2423 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %tmp = alloca %struct._ftsent*, align 8, !ctir !2420
  %instr = alloca i16, align 2, !ctir !33
  %t = alloca i8*, align 8, !ctir !9
  %parent = alloca %struct._ftsent*, align 8, !ctir !2420
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19492, metadata !DIExpression()), !dbg !19493
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19494, metadata !DIExpression()), !dbg !19495
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !19496, metadata !DIExpression()), !dbg !19497
  call void @llvm.dbg.declare(metadata i16* %instr, metadata !19498, metadata !DIExpression()), !dbg !19499
  call void @llvm.dbg.declare(metadata i8** %t, metadata !19500, metadata !DIExpression()), !dbg !19501
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19502, !tbaa !2998
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19504, !ctir !2338
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19504, !tbaa !18719, !ctir !2325
  %cmp = icmp eq %struct._ftsent* %1, null, !dbg !19505
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19506

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19507, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !19507, !ctir !2338
  %3 = load i32, i32* %fts_options, align 8, !dbg !19507, !tbaa !18131, !ctir !7
  %and = and i32 %3, 8192, !dbg !19507
  %tobool = icmp ne i32 %and, 0, !dbg !19507
  br i1 %tobool, label %if.then, label %if.end, !dbg !19508

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19509
  br label %return, !dbg !19509

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19510, !tbaa !2998
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 0, !dbg !19511, !ctir !2338
  %5 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !19511, !tbaa !18719, !ctir !2325
  store %struct._ftsent* %5, %struct._ftsent** %p, align 8, !dbg !19512, !tbaa !2998
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19513, !tbaa !2998
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !19514, !ctir !2321
  %7 = load i16, i16* %fts_instr, align 4, !dbg !19514, !tbaa !3813, !ctir !33
  store i16 %7, i16* %instr, align 2, !dbg !19515, !tbaa !3813
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19516, !tbaa !2998
  %fts_instr2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 17, !dbg !19517, !ctir !2321
  store i16 3, i16* %fts_instr2, align 4, !dbg !19518, !tbaa !3813, !ctir !33
  %9 = load i16, i16* %instr, align 2, !dbg !19519, !tbaa !3813
  %conv = zext i16 %9 to i32, !dbg !19519
  %cmp3 = icmp eq i32 %conv, 1, !dbg !19521
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !19522

if.then5:                                         ; preds = %if.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19523, !tbaa !2998
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19525, !tbaa !2998
  %call = call zeroext i16 @fts_stat(%struct.FTS* %10, %struct._ftsent* %11, i1 zeroext false), !dbg !19526
  %12 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19527, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 15, !dbg !19528, !ctir !2321
  store i16 %call, i16* %fts_info, align 8, !dbg !19529, !tbaa !3813, !ctir !33
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19530, !tbaa !2998
  store %struct._ftsent* %13, %struct._ftsent** %retval, align 8, !dbg !19531
  br label %return, !dbg !19531

if.end6:                                          ; preds = %if.end
  %14 = load i16, i16* %instr, align 2, !dbg !19532, !tbaa !3813
  %conv7 = zext i16 %14 to i32, !dbg !19532
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !19534
  br i1 %cmp8, label %land.lhs.true, label %if.end41, !dbg !19535

land.lhs.true:                                    ; preds = %if.end6
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19536, !tbaa !2998
  %fts_info10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 15, !dbg !19537, !ctir !2321
  %16 = load i16, i16* %fts_info10, align 8, !dbg !19537, !tbaa !3813, !ctir !33
  %conv11 = zext i16 %16 to i32, !dbg !19536
  %cmp12 = icmp eq i32 %conv11, 12, !dbg !19538
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14, !dbg !19539

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19540, !tbaa !2998
  %fts_info15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 15, !dbg !19541, !ctir !2321
  %18 = load i16, i16* %fts_info15, align 8, !dbg !19541, !tbaa !3813, !ctir !33
  %conv16 = zext i16 %18 to i32, !dbg !19540
  %cmp17 = icmp eq i32 %conv16, 13, !dbg !19542
  br i1 %cmp17, label %if.then19, label %if.end41, !dbg !19543

if.then19:                                        ; preds = %lor.lhs.false14, %land.lhs.true
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19544, !tbaa !2998
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19546, !tbaa !2998
  %call20 = call zeroext i16 @fts_stat(%struct.FTS* %19, %struct._ftsent* %20, i1 zeroext true), !dbg !19547
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19548, !tbaa !2998
  %fts_info21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 15, !dbg !19549, !ctir !2321
  store i16 %call20, i16* %fts_info21, align 8, !dbg !19550, !tbaa !3813, !ctir !33
  %22 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19551, !tbaa !2998
  %fts_info22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 15, !dbg !19553, !ctir !2321
  %23 = load i16, i16* %fts_info22, align 8, !dbg !19553, !tbaa !3813, !ctir !33
  %conv23 = zext i16 %23 to i32, !dbg !19551
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !19554
  br i1 %cmp24, label %land.lhs.true26, label %if.end40, !dbg !19555

land.lhs.true26:                                  ; preds = %if.then19
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19556, !tbaa !2998
  %fts_options27 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !19556, !ctir !2338
  %25 = load i32, i32* %fts_options27, align 8, !dbg !19556, !tbaa !18131, !ctir !7
  %and28 = and i32 %25, 4, !dbg !19556
  %tobool29 = icmp ne i32 %and28, 0, !dbg !19556
  br i1 %tobool29, label %if.end40, label %if.then30, !dbg !19557

if.then30:                                        ; preds = %land.lhs.true26
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19558, !tbaa !2998
  %call31 = call i32 @diropen(%struct.FTS* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.437, i64 0, i64 0)), !dbg !19561
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19562, !tbaa !2998
  %fts_symfd = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 9, !dbg !19563, !ctir !2321
  store i32 %call31, i32* %fts_symfd, align 4, !dbg !19564, !tbaa !2985, !ctir !7
  %cmp32 = icmp slt i32 %call31, 0, !dbg !19565
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !19566

if.then34:                                        ; preds = %if.then30
  %call35 = call i32* @__errno_location() #15, !dbg !19567
  %28 = load i32, i32* %call35, align 4, !dbg !19567, !tbaa !2985, !ctir !7
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19569, !tbaa !2998
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 8, !dbg !19570, !ctir !2321
  store i32 %28, i32* %fts_errno, align 8, !dbg !19571, !tbaa !2985, !ctir !7
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19572, !tbaa !2998
  %fts_info36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 15, !dbg !19573, !ctir !2321
  store i16 7, i16* %fts_info36, align 8, !dbg !19574, !tbaa !3813, !ctir !33
  br label %if.end39, !dbg !19575

if.else:                                          ; preds = %if.then30
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19576, !tbaa !2998
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 16, !dbg !19577, !ctir !2321
  %32 = load i16, i16* %fts_flags, align 2, !dbg !19578, !tbaa !3813, !ctir !33
  %conv37 = zext i16 %32 to i32, !dbg !19578
  %or = or i32 %conv37, 2, !dbg !19578
  %conv38 = trunc i32 %or to i16, !dbg !19578
  store i16 %conv38, i16* %fts_flags, align 2, !dbg !19578, !tbaa !3813, !ctir !33
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then34
  br label %if.end40, !dbg !19579

if.end40:                                         ; preds = %if.end39, %land.lhs.true26, %if.then19
  br label %check_for_dir, !dbg !19580

if.end41:                                         ; preds = %lor.lhs.false14, %if.end6
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19581, !tbaa !2998
  %fts_info42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 15, !dbg !19583, !ctir !2321
  %34 = load i16, i16* %fts_info42, align 8, !dbg !19583, !tbaa !3813, !ctir !33
  %conv43 = zext i16 %34 to i32, !dbg !19581
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !19584
  br i1 %cmp44, label %if.then46, label %if.end132, !dbg !19585

if.then46:                                        ; preds = %if.end41
  %35 = load i16, i16* %instr, align 2, !dbg !19586, !tbaa !3813
  %conv47 = zext i16 %35 to i32, !dbg !19586
  %cmp48 = icmp eq i32 %conv47, 4, !dbg !19589
  br i1 %cmp48, label %if.then57, label %lor.lhs.false50, !dbg !19590

lor.lhs.false50:                                  ; preds = %if.then46
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19591, !tbaa !2998
  %fts_options51 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !19591, !ctir !2338
  %37 = load i32, i32* %fts_options51, align 8, !dbg !19591, !tbaa !18131, !ctir !7
  %and52 = and i32 %37, 64, !dbg !19591
  %tobool53 = icmp ne i32 %and52, 0, !dbg !19591
  br i1 %tobool53, label %land.lhs.true54, label %if.end72, !dbg !19592

land.lhs.true54:                                  ; preds = %lor.lhs.false50
  %38 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19593, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 18, !dbg !19594, !ctir !2321
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19595
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !19595, !ctir !2393
  %39 = load i64, i64* %st_dev, align 8, !dbg !19595, !tbaa !3876, !ctir !231
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19596, !tbaa !2998
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 3, !dbg !19597, !ctir !2338
  %41 = load i64, i64* %fts_dev, align 8, !dbg !19597, !tbaa !3923, !ctir !230
  %cmp55 = icmp ne i64 %39, %41, !dbg !19598
  br i1 %cmp55, label %if.then57, label %if.end72, !dbg !19599

if.then57:                                        ; preds = %land.lhs.true54, %if.then46
  %42 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19600, !tbaa !2998
  %fts_flags58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !19603, !ctir !2321
  %43 = load i16, i16* %fts_flags58, align 2, !dbg !19603, !tbaa !3813, !ctir !33
  %conv59 = zext i16 %43 to i32, !dbg !19600
  %and60 = and i32 %conv59, 2, !dbg !19604
  %tobool61 = icmp ne i32 %and60, 0, !dbg !19604
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !19605

if.then62:                                        ; preds = %if.then57
  %44 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19606, !tbaa !2998
  %fts_symfd63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 9, !dbg !19607, !ctir !2321
  %45 = load i32, i32* %fts_symfd63, align 4, !dbg !19607, !tbaa !2985, !ctir !7
  %call64 = call i32 @close(i32 %45), !dbg !19608
  br label %if.end65, !dbg !19609

if.end65:                                         ; preds = %if.then62, %if.then57
  %46 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19610, !tbaa !2998
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %46, i32 0, i32 1, !dbg !19612, !ctir !2338
  %47 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !19612, !tbaa !19367, !ctir !2325
  %tobool66 = icmp ne %struct._ftsent* %47, null, !dbg !19610
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !19613

if.then67:                                        ; preds = %if.end65
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19614, !tbaa !2998
  %fts_child68 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 1, !dbg !19616, !ctir !2338
  %49 = load %struct._ftsent*, %struct._ftsent** %fts_child68, align 8, !dbg !19616, !tbaa !19367, !ctir !2325
  call void @fts_lfree(%struct._ftsent* %49), !dbg !19617
  %50 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19618, !tbaa !2998
  %fts_child69 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !19619, !ctir !2338
  store %struct._ftsent* null, %struct._ftsent** %fts_child69, align 8, !dbg !19620, !tbaa !19367, !ctir !2325
  br label %if.end70, !dbg !19621

if.end70:                                         ; preds = %if.then67, %if.end65
  %51 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19622, !tbaa !2998
  %fts_info71 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 15, !dbg !19623, !ctir !2321
  store i16 6, i16* %fts_info71, align 8, !dbg !19624, !tbaa !3813, !ctir !33
  br label %do.body, !dbg !19625

do.body:                                          ; preds = %if.end70
  %52 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19626, !tbaa !2998
  %53 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19626, !tbaa !2998
  call void @leave_dir(%struct.FTS* %52, %struct._ftsent* %53), !dbg !19626
  br label %do.end, !dbg !19626

do.end:                                           ; preds = %do.body
  %54 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19628, !tbaa !2998
  store %struct._ftsent* %54, %struct._ftsent** %retval, align 8, !dbg !19629
  br label %return, !dbg !19629

if.end72:                                         ; preds = %land.lhs.true54, %lor.lhs.false50
  %55 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19630, !tbaa !2998
  %fts_child73 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 1, !dbg !19632, !ctir !2338
  %56 = load %struct._ftsent*, %struct._ftsent** %fts_child73, align 8, !dbg !19632, !tbaa !19367, !ctir !2325
  %cmp74 = icmp ne %struct._ftsent* %56, null, !dbg !19633
  br i1 %cmp74, label %land.lhs.true76, label %if.end85, !dbg !19634

land.lhs.true76:                                  ; preds = %if.end72
  %57 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19635, !tbaa !2998
  %fts_options77 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !19635, !ctir !2338
  %58 = load i32, i32* %fts_options77, align 8, !dbg !19635, !tbaa !18131, !ctir !7
  %and78 = and i32 %58, 4096, !dbg !19635
  %tobool79 = icmp ne i32 %and78, 0, !dbg !19635
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !19636

if.then80:                                        ; preds = %land.lhs.true76
  %59 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19637, !tbaa !2998
  %fts_options81 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !19637, !ctir !2338
  %60 = load i32, i32* %fts_options81, align 8, !dbg !19637, !tbaa !18131, !ctir !7
  %and82 = and i32 %60, -4097, !dbg !19637
  store i32 %and82, i32* %fts_options81, align 8, !dbg !19637, !tbaa !18131, !ctir !7
  %61 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19639, !tbaa !2998
  %fts_child83 = getelementptr inbounds %struct.FTS, %struct.FTS* %61, i32 0, i32 1, !dbg !19640, !ctir !2338
  %62 = load %struct._ftsent*, %struct._ftsent** %fts_child83, align 8, !dbg !19640, !tbaa !19367, !ctir !2325
  call void @fts_lfree(%struct._ftsent* %62), !dbg !19641
  %63 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19642, !tbaa !2998
  %fts_child84 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 1, !dbg !19643, !ctir !2338
  store %struct._ftsent* null, %struct._ftsent** %fts_child84, align 8, !dbg !19644, !tbaa !19367, !ctir !2325
  br label %if.end85, !dbg !19645

if.end85:                                         ; preds = %if.then80, %land.lhs.true76, %if.end72
  %64 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19646, !tbaa !2998
  %fts_child86 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 1, !dbg !19648, !ctir !2338
  %65 = load %struct._ftsent*, %struct._ftsent** %fts_child86, align 8, !dbg !19648, !tbaa !19367, !ctir !2325
  %cmp87 = icmp ne %struct._ftsent* %65, null, !dbg !19649
  br i1 %cmp87, label %if.then89, label %if.else105, !dbg !19650

if.then89:                                        ; preds = %if.end85
  %66 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19651, !tbaa !2998
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19654, !tbaa !2998
  %68 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19655, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 6, !dbg !19656, !ctir !2321
  %69 = load i8*, i8** %fts_accpath, align 8, !dbg !19656, !tbaa !2998, !ctir !9
  %call90 = call i32 @fts_safe_changedir(%struct.FTS* %66, %struct._ftsent* %67, i32 -1, i8* %69), !dbg !19657
  %tobool91 = icmp ne i32 %call90, 0, !dbg !19657
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !19658

if.then92:                                        ; preds = %if.then89
  %call93 = call i32* @__errno_location() #15, !dbg !19659
  %70 = load i32, i32* %call93, align 4, !dbg !19659, !tbaa !2985, !ctir !7
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19661, !tbaa !2998
  %fts_errno94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %71, i32 0, i32 8, !dbg !19662, !ctir !2321
  store i32 %70, i32* %fts_errno94, align 8, !dbg !19663, !tbaa !2985, !ctir !7
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19664, !tbaa !2998
  %fts_flags95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 16, !dbg !19665, !ctir !2321
  %73 = load i16, i16* %fts_flags95, align 2, !dbg !19666, !tbaa !3813, !ctir !33
  %conv96 = zext i16 %73 to i32, !dbg !19666
  %or97 = or i32 %conv96, 1, !dbg !19666
  %conv98 = trunc i32 %or97 to i16, !dbg !19666
  store i16 %conv98, i16* %fts_flags95, align 2, !dbg !19666, !tbaa !3813, !ctir !33
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19667, !tbaa !2998
  %fts_child99 = getelementptr inbounds %struct.FTS, %struct.FTS* %74, i32 0, i32 1, !dbg !19669, !ctir !2338
  %75 = load %struct._ftsent*, %struct._ftsent** %fts_child99, align 8, !dbg !19669, !tbaa !19367, !ctir !2325
  store %struct._ftsent* %75, %struct._ftsent** %p, align 8, !dbg !19670, !tbaa !2998
  br label %for.cond, !dbg !19671

for.cond:                                         ; preds = %for.inc, %if.then92
  %76 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19672, !tbaa !2998
  %cmp100 = icmp ne %struct._ftsent* %76, null, !dbg !19674
  br i1 %cmp100, label %for.body, label %for.end, !dbg !19675

for.body:                                         ; preds = %for.cond
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19676, !tbaa !2998
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %77, i32 0, i32 1, !dbg !19677, !ctir !2321
  %78 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19677, !tbaa !2998, !ctir !2325
  %fts_accpath102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 6, !dbg !19678, !ctir !2322
  %79 = load i8*, i8** %fts_accpath102, align 8, !dbg !19678, !tbaa !2998, !ctir !9
  %80 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19679, !tbaa !2998
  %fts_accpath103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !19680, !ctir !2321
  store i8* %79, i8** %fts_accpath103, align 8, !dbg !19681, !tbaa !2998, !ctir !9
  br label %for.inc, !dbg !19679

for.inc:                                          ; preds = %for.body
  %81 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19682, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 2, !dbg !19683, !ctir !2321
  %82 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19683, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %82, %struct._ftsent** %p, align 8, !dbg !19684, !tbaa !2998
  br label %for.cond, !dbg !19685, !llvm.loop !19686

for.end:                                          ; preds = %for.cond
  br label %if.end104, !dbg !19688

if.end104:                                        ; preds = %for.end, %if.then89
  br label %if.end129, !dbg !19689

if.else105:                                       ; preds = %if.end85
  %83 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19690, !tbaa !2998
  %call106 = call %struct._ftsent* @fts_build(%struct.FTS* %83, i32 3), !dbg !19692
  %84 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19693, !tbaa !2998
  %fts_child107 = getelementptr inbounds %struct.FTS, %struct.FTS* %84, i32 0, i32 1, !dbg !19694, !ctir !2338
  store %struct._ftsent* %call106, %struct._ftsent** %fts_child107, align 8, !dbg !19695, !tbaa !19367, !ctir !2325
  %cmp108 = icmp eq %struct._ftsent* %call106, null, !dbg !19696
  br i1 %cmp108, label %if.then110, label %if.end128, !dbg !19697

if.then110:                                       ; preds = %if.else105
  %85 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19698, !tbaa !2998
  %fts_options111 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 10, !dbg !19698, !ctir !2338
  %86 = load i32, i32* %fts_options111, align 8, !dbg !19698, !tbaa !18131, !ctir !7
  %and112 = and i32 %86, 8192, !dbg !19698
  %tobool113 = icmp ne i32 %and112, 0, !dbg !19698
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !19701

if.then114:                                       ; preds = %if.then110
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19702
  br label %return, !dbg !19702

if.end115:                                        ; preds = %if.then110
  %87 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19703, !tbaa !2998
  %fts_errno116 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 8, !dbg !19705, !ctir !2321
  %88 = load i32, i32* %fts_errno116, align 8, !dbg !19705, !tbaa !2985, !ctir !7
  %tobool117 = icmp ne i32 %88, 0, !dbg !19703
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !19706

land.lhs.true118:                                 ; preds = %if.end115
  %89 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19707, !tbaa !2998
  %fts_info119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 15, !dbg !19708, !ctir !2321
  %90 = load i16, i16* %fts_info119, align 8, !dbg !19708, !tbaa !3813, !ctir !33
  %conv120 = zext i16 %90 to i32, !dbg !19707
  %cmp121 = icmp ne i32 %conv120, 4, !dbg !19709
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !19710

if.then123:                                       ; preds = %land.lhs.true118
  %91 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19711, !tbaa !2998
  %fts_info124 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !19712, !ctir !2321
  store i16 7, i16* %fts_info124, align 8, !dbg !19713, !tbaa !3813, !ctir !33
  br label %if.end125, !dbg !19711

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end115
  br label %do.body126, !dbg !19714

do.body126:                                       ; preds = %if.end125
  %92 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19715, !tbaa !2998
  %93 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19715, !tbaa !2998
  call void @leave_dir(%struct.FTS* %92, %struct._ftsent* %93), !dbg !19715
  br label %do.end127, !dbg !19715

do.end127:                                        ; preds = %do.body126
  %94 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19717, !tbaa !2998
  store %struct._ftsent* %94, %struct._ftsent** %retval, align 8, !dbg !19718
  br label %return, !dbg !19718

if.end128:                                        ; preds = %if.else105
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end104
  %95 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19719, !tbaa !2998
  %fts_child130 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 1, !dbg !19720, !ctir !2338
  %96 = load %struct._ftsent*, %struct._ftsent** %fts_child130, align 8, !dbg !19720, !tbaa !19367, !ctir !2325
  store %struct._ftsent* %96, %struct._ftsent** %p, align 8, !dbg !19721, !tbaa !2998
  %97 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19722, !tbaa !2998
  %fts_child131 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 1, !dbg !19723, !ctir !2338
  store %struct._ftsent* null, %struct._ftsent** %fts_child131, align 8, !dbg !19724, !tbaa !19367, !ctir !2325
  br label %name, !dbg !19725

if.end132:                                        ; preds = %if.end41
  br label %next, !dbg !19726

next:                                             ; preds = %if.then173, %if.end132
  call void @llvm.dbg.label(metadata !19727), !dbg !19728
  %98 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19729, !tbaa !2998
  store %struct._ftsent* %98, %struct._ftsent** %tmp, align 8, !dbg !19730, !tbaa !2998
  %99 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19731, !tbaa !2998
  %fts_link133 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 2, !dbg !19733, !ctir !2321
  %100 = load %struct._ftsent*, %struct._ftsent** %fts_link133, align 8, !dbg !19733, !tbaa !2998, !ctir !2325
  %cmp134 = icmp eq %struct._ftsent* %100, null, !dbg !19734
  br i1 %cmp134, label %land.lhs.true136, label %if.end152, !dbg !19735

land.lhs.true136:                                 ; preds = %next
  %101 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19736, !tbaa !2998
  %fts_parent137 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 1, !dbg !19737, !ctir !2321
  %102 = load %struct._ftsent*, %struct._ftsent** %fts_parent137, align 8, !dbg !19737, !tbaa !2998, !ctir !2325
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 3, !dbg !19738, !ctir !2322
  %103 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19738, !tbaa !2998, !ctir !609
  %tobool138 = icmp ne %struct.__dirstream* %103, null, !dbg !19736
  br i1 %tobool138, label %if.then139, label %if.end152, !dbg !19739

if.then139:                                       ; preds = %land.lhs.true136
  %104 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19740, !tbaa !2998
  %fts_parent140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %104, i32 0, i32 1, !dbg !19742, !ctir !2321
  %105 = load %struct._ftsent*, %struct._ftsent** %fts_parent140, align 8, !dbg !19742, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %105, %struct._ftsent** %p, align 8, !dbg !19743, !tbaa !2998
  %106 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19744, !tbaa !2998
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19745, !tbaa !2998
  %fts_cur141 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 0, !dbg !19746, !ctir !2338
  store %struct._ftsent* %106, %struct._ftsent** %fts_cur141, align 8, !dbg !19747, !tbaa !18719, !ctir !2325
  %108 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19748, !tbaa !2998
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !19749, !ctir !2338
  %109 = load i8*, i8** %fts_path, align 8, !dbg !19749, !tbaa !18770, !ctir !9
  %110 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19750, !tbaa !2998
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 10, !dbg !19751, !ctir !2321
  %111 = load i64, i64* %fts_pathlen, align 8, !dbg !19751, !tbaa !3851, !ctir !55
  %arrayidx = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !19748, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !19752, !tbaa !3660
  %112 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19753, !tbaa !2998
  %call142 = call %struct._ftsent* @fts_build(%struct.FTS* %112, i32 3), !dbg !19755
  store %struct._ftsent* %call142, %struct._ftsent** %p, align 8, !dbg !19756, !tbaa !2998
  %cmp143 = icmp eq %struct._ftsent* %call142, null, !dbg !19757
  br i1 %cmp143, label %if.then145, label %if.end151, !dbg !19758

if.then145:                                       ; preds = %if.then139
  %113 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19759, !tbaa !2998
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %113, i32 0, i32 10, !dbg !19759, !ctir !2338
  %114 = load i32, i32* %fts_options146, align 8, !dbg !19759, !tbaa !18131, !ctir !7
  %and147 = and i32 %114, 8192, !dbg !19759
  %tobool148 = icmp ne i32 %and147, 0, !dbg !19759
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !19762

if.then149:                                       ; preds = %if.then145
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19763
  br label %return, !dbg !19763

if.end150:                                        ; preds = %if.then145
  br label %cd_dot_dot, !dbg !19764

if.end151:                                        ; preds = %if.then139
  %115 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19765, !tbaa !2998
  %116 = bitcast %struct._ftsent* %115 to i8*, !dbg !19765
  call void @free(i8* %116) #10, !dbg !19766
  br label %name, !dbg !19767

if.end152:                                        ; preds = %land.lhs.true136, %next
  %117 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19768, !tbaa !2998
  %fts_link153 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %117, i32 0, i32 2, !dbg !19770, !ctir !2321
  %118 = load %struct._ftsent*, %struct._ftsent** %fts_link153, align 8, !dbg !19770, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %118, %struct._ftsent** %p, align 8, !dbg !19771, !tbaa !2998
  %cmp154 = icmp ne %struct._ftsent* %118, null, !dbg !19772
  br i1 %cmp154, label %if.then156, label %if.end305, !dbg !19773

if.then156:                                       ; preds = %if.end152
  %119 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19774, !tbaa !2998
  %120 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19776, !tbaa !2998
  %fts_cur157 = getelementptr inbounds %struct.FTS, %struct.FTS* %120, i32 0, i32 0, !dbg !19777, !ctir !2338
  store %struct._ftsent* %119, %struct._ftsent** %fts_cur157, align 8, !dbg !19778, !tbaa !18719, !ctir !2325
  %121 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19779, !tbaa !2998
  %122 = bitcast %struct._ftsent* %121 to i8*, !dbg !19779
  call void @free(i8* %122) #10, !dbg !19780
  %123 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19781, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %123, i32 0, i32 12, !dbg !19783, !ctir !2321
  %124 = load i64, i64* %fts_level, align 8, !dbg !19783, !tbaa !3851, !ctir !568
  %cmp158 = icmp eq i64 %124, 0, !dbg !19784
  br i1 %cmp158, label %if.then160, label %if.end168, !dbg !19785

if.then160:                                       ; preds = %if.then156
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19786, !tbaa !2998
  %call161 = call i32 @restore_initial_cwd(%struct.FTS* %125), !dbg !19789
  %tobool162 = icmp ne i32 %call161, 0, !dbg !19789
  br i1 %tobool162, label %if.then163, label %if.end166, !dbg !19790

if.then163:                                       ; preds = %if.then160
  %126 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19791, !tbaa !2998
  %fts_options164 = getelementptr inbounds %struct.FTS, %struct.FTS* %126, i32 0, i32 10, !dbg !19791, !ctir !2338
  %127 = load i32, i32* %fts_options164, align 8, !dbg !19791, !tbaa !18131, !ctir !7
  %or165 = or i32 %127, 8192, !dbg !19791
  store i32 %or165, i32* %fts_options164, align 8, !dbg !19791, !tbaa !18131, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19793
  br label %return, !dbg !19793

if.end166:                                        ; preds = %if.then160
  %128 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19794, !tbaa !2998
  call void @free_dir(%struct.FTS* %128), !dbg !19795
  %129 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19796, !tbaa !2998
  %130 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19797, !tbaa !2998
  call void @fts_load(%struct.FTS* %129, %struct._ftsent* %130), !dbg !19798
  %131 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19799, !tbaa !2998
  %call167 = call zeroext i1 @setup_dir(%struct.FTS* %131), !dbg !19800
  br label %check_for_dir, !dbg !19801

if.end168:                                        ; preds = %if.then156
  %132 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19802, !tbaa !2998
  %fts_instr169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %132, i32 0, i32 17, !dbg !19804, !ctir !2321
  %133 = load i16, i16* %fts_instr169, align 4, !dbg !19804, !tbaa !3813, !ctir !33
  %conv170 = zext i16 %133 to i32, !dbg !19802
  %cmp171 = icmp eq i32 %conv170, 4, !dbg !19805
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !19806

if.then173:                                       ; preds = %if.end168
  br label %next, !dbg !19807

if.end174:                                        ; preds = %if.end168
  %134 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19808, !tbaa !2998
  %fts_instr175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %134, i32 0, i32 17, !dbg !19810, !ctir !2321
  %135 = load i16, i16* %fts_instr175, align 4, !dbg !19810, !tbaa !3813, !ctir !33
  %conv176 = zext i16 %135 to i32, !dbg !19808
  %cmp177 = icmp eq i32 %conv176, 2, !dbg !19811
  br i1 %cmp177, label %if.then179, label %if.end207, !dbg !19812

if.then179:                                       ; preds = %if.end174
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19813, !tbaa !2998
  %137 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19815, !tbaa !2998
  %call180 = call zeroext i16 @fts_stat(%struct.FTS* %136, %struct._ftsent* %137, i1 zeroext true), !dbg !19816
  %138 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19817, !tbaa !2998
  %fts_info181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 15, !dbg !19818, !ctir !2321
  store i16 %call180, i16* %fts_info181, align 8, !dbg !19819, !tbaa !3813, !ctir !33
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19820, !tbaa !2998
  %fts_info182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %139, i32 0, i32 15, !dbg !19822, !ctir !2321
  %140 = load i16, i16* %fts_info182, align 8, !dbg !19822, !tbaa !3813, !ctir !33
  %conv183 = zext i16 %140 to i32, !dbg !19820
  %cmp184 = icmp eq i32 %conv183, 1, !dbg !19823
  br i1 %cmp184, label %land.lhs.true186, label %if.end205, !dbg !19824

land.lhs.true186:                                 ; preds = %if.then179
  %141 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19825, !tbaa !2998
  %fts_options187 = getelementptr inbounds %struct.FTS, %struct.FTS* %141, i32 0, i32 10, !dbg !19825, !ctir !2338
  %142 = load i32, i32* %fts_options187, align 8, !dbg !19825, !tbaa !18131, !ctir !7
  %and188 = and i32 %142, 4, !dbg !19825
  %tobool189 = icmp ne i32 %and188, 0, !dbg !19825
  br i1 %tobool189, label %if.end205, label %if.then190, !dbg !19826

if.then190:                                       ; preds = %land.lhs.true186
  %143 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19827, !tbaa !2998
  %call191 = call i32 @diropen(%struct.FTS* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.437, i64 0, i64 0)), !dbg !19830
  %144 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19831, !tbaa !2998
  %fts_symfd192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %144, i32 0, i32 9, !dbg !19832, !ctir !2321
  store i32 %call191, i32* %fts_symfd192, align 4, !dbg !19833, !tbaa !2985, !ctir !7
  %cmp193 = icmp slt i32 %call191, 0, !dbg !19834
  br i1 %cmp193, label %if.then195, label %if.else199, !dbg !19835

if.then195:                                       ; preds = %if.then190
  %call196 = call i32* @__errno_location() #15, !dbg !19836
  %145 = load i32, i32* %call196, align 4, !dbg !19836, !tbaa !2985, !ctir !7
  %146 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19838, !tbaa !2998
  %fts_errno197 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 8, !dbg !19839, !ctir !2321
  store i32 %145, i32* %fts_errno197, align 8, !dbg !19840, !tbaa !2985, !ctir !7
  %147 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19841, !tbaa !2998
  %fts_info198 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %147, i32 0, i32 15, !dbg !19842, !ctir !2321
  store i16 7, i16* %fts_info198, align 8, !dbg !19843, !tbaa !3813, !ctir !33
  br label %if.end204, !dbg !19844

if.else199:                                       ; preds = %if.then190
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19845, !tbaa !2998
  %fts_flags200 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %148, i32 0, i32 16, !dbg !19846, !ctir !2321
  %149 = load i16, i16* %fts_flags200, align 2, !dbg !19847, !tbaa !3813, !ctir !33
  %conv201 = zext i16 %149 to i32, !dbg !19847
  %or202 = or i32 %conv201, 2, !dbg !19847
  %conv203 = trunc i32 %or202 to i16, !dbg !19847
  store i16 %conv203, i16* %fts_flags200, align 2, !dbg !19847, !tbaa !3813, !ctir !33
  br label %if.end204

if.end204:                                        ; preds = %if.else199, %if.then195
  br label %if.end205, !dbg !19848

if.end205:                                        ; preds = %if.end204, %land.lhs.true186, %if.then179
  %150 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19849, !tbaa !2998
  %fts_instr206 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %150, i32 0, i32 17, !dbg !19850, !ctir !2321
  store i16 3, i16* %fts_instr206, align 4, !dbg !19851, !tbaa !3813, !ctir !33
  br label %if.end207, !dbg !19852

if.end207:                                        ; preds = %if.end205, %if.end174
  br label %name, !dbg !19853

name:                                             ; preds = %if.end207, %if.end151, %if.end129
  call void @llvm.dbg.label(metadata !19854), !dbg !19855
  %151 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19856, !tbaa !2998
  %fts_path208 = getelementptr inbounds %struct.FTS, %struct.FTS* %151, i32 0, i32 4, !dbg !19857, !ctir !2338
  %152 = load i8*, i8** %fts_path208, align 8, !dbg !19857, !tbaa !18770, !ctir !9
  %153 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19858, !tbaa !2998
  %fts_parent209 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 1, !dbg !19858, !ctir !2321
  %154 = load %struct._ftsent*, %struct._ftsent** %fts_parent209, align 8, !dbg !19858, !tbaa !2998, !ctir !2325
  %fts_path210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 7, !dbg !19858, !ctir !2322
  %155 = load i8*, i8** %fts_path210, align 8, !dbg !19858, !tbaa !2998, !ctir !9
  %156 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19858, !tbaa !2998
  %fts_parent211 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %156, i32 0, i32 1, !dbg !19858, !ctir !2321
  %157 = load %struct._ftsent*, %struct._ftsent** %fts_parent211, align 8, !dbg !19858, !tbaa !2998, !ctir !2325
  %fts_pathlen212 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %157, i32 0, i32 10, !dbg !19858, !ctir !2322
  %158 = load i64, i64* %fts_pathlen212, align 8, !dbg !19858, !tbaa !3851, !ctir !55
  %sub = sub i64 %158, 1, !dbg !19858
  %arrayidx213 = getelementptr inbounds i8, i8* %155, i64 %sub, !dbg !19858, !ctir !9
  %159 = load i8, i8* %arrayidx213, align 1, !dbg !19858, !tbaa !3660
  %conv214 = sext i8 %159 to i32, !dbg !19858
  %cmp215 = icmp eq i32 %conv214, 47, !dbg !19858
  br i1 %cmp215, label %cond.true, label %cond.false, !dbg !19858

cond.true:                                        ; preds = %name
  %160 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19858, !tbaa !2998
  %fts_parent217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %160, i32 0, i32 1, !dbg !19858, !ctir !2321
  %161 = load %struct._ftsent*, %struct._ftsent** %fts_parent217, align 8, !dbg !19858, !tbaa !2998, !ctir !2325
  %fts_pathlen218 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 10, !dbg !19858, !ctir !2322
  %162 = load i64, i64* %fts_pathlen218, align 8, !dbg !19858, !tbaa !3851, !ctir !55
  %sub219 = sub i64 %162, 1, !dbg !19858
  br label %cond.end, !dbg !19858

cond.false:                                       ; preds = %name
  %163 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19858, !tbaa !2998
  %fts_parent220 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %163, i32 0, i32 1, !dbg !19858, !ctir !2321
  %164 = load %struct._ftsent*, %struct._ftsent** %fts_parent220, align 8, !dbg !19858, !tbaa !2998, !ctir !2325
  %fts_pathlen221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %164, i32 0, i32 10, !dbg !19858, !ctir !2322
  %165 = load i64, i64* %fts_pathlen221, align 8, !dbg !19858, !tbaa !3851, !ctir !55
  br label %cond.end, !dbg !19858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub219, %cond.true ], [ %165, %cond.false ], !dbg !19858
  %add.ptr = getelementptr inbounds i8, i8* %152, i64 %cond, !dbg !19859
  store i8* %add.ptr, i8** %t, align 8, !dbg !19860, !tbaa !2998
  %166 = load i8*, i8** %t, align 8, !dbg !19861, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %166, i32 1, !dbg !19861
  store i8* %incdec.ptr, i8** %t, align 8, !dbg !19861, !tbaa !2998
  store i8 47, i8* %166, align 1, !dbg !19862, !tbaa !3660, !ctir !10
  %167 = load i8*, i8** %t, align 8, !dbg !19863, !tbaa !2998
  %168 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19864, !tbaa !2998
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 19, !dbg !19865, !ctir !2321
  %arraydecay222 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !19866
  %169 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19867, !tbaa !2998
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %169, i32 0, i32 13, !dbg !19868, !ctir !2321
  %170 = load i64, i64* %fts_namelen, align 8, !dbg !19868, !tbaa !3851, !ctir !55
  %add = add i64 %170, 1, !dbg !19869
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %167, i8* align 8 %arraydecay222, i64 %add, i1 false), !dbg !19866
  br label %check_for_dir, !dbg !19866

check_for_dir:                                    ; preds = %cond.end, %if.end166, %if.end40
  call void @llvm.dbg.label(metadata !19870), !dbg !19871
  %171 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19872, !tbaa !2998
  %172 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19873, !tbaa !2998
  %fts_cur223 = getelementptr inbounds %struct.FTS, %struct.FTS* %172, i32 0, i32 0, !dbg !19874, !ctir !2338
  store %struct._ftsent* %171, %struct._ftsent** %fts_cur223, align 8, !dbg !19875, !tbaa !18719, !ctir !2325
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19876, !tbaa !2998
  %fts_info224 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %173, i32 0, i32 15, !dbg !19878, !ctir !2321
  %174 = load i16, i16* %fts_info224, align 8, !dbg !19878, !tbaa !3813, !ctir !33
  %conv225 = zext i16 %174 to i32, !dbg !19876
  %cmp226 = icmp eq i32 %conv225, 11, !dbg !19879
  br i1 %cmp226, label %if.then228, label %if.end285, !dbg !19880

if.then228:                                       ; preds = %check_for_dir
  %175 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19881, !tbaa !2998
  %fts_statp229 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %175, i32 0, i32 18, !dbg !19884, !ctir !2321
  %arraydecay230 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp229, i64 0, i64 0, !dbg !19885
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay230, i32 0, i32 8, !dbg !19885, !ctir !2393
  %176 = load i64, i64* %st_size, align 8, !dbg !19885, !tbaa !4519, !ctir !29
  %cmp231 = icmp eq i64 %176, 2, !dbg !19886
  br i1 %cmp231, label %if.then233, label %if.else274, !dbg !19887

if.then233:                                       ; preds = %if.then228
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19888, metadata !DIExpression()), !dbg !19890
  %177 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19891, !tbaa !2998
  %fts_parent234 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 1, !dbg !19892, !ctir !2321
  %178 = load %struct._ftsent*, %struct._ftsent** %fts_parent234, align 8, !dbg !19892, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %178, %struct._ftsent** %parent, align 8, !dbg !19890, !tbaa !2998
  %179 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19893, !tbaa !2998
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 14, !dbg !19895, !ctir !2321
  %180 = load i64, i64* %fts_n_dirs_remaining, align 8, !dbg !19895, !tbaa !3851, !ctir !1384
  %cmp235 = icmp eq i64 %180, 0, !dbg !19896
  br i1 %cmp235, label %land.lhs.true237, label %if.else250, !dbg !19897

land.lhs.true237:                                 ; preds = %if.then233
  %181 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19898, !tbaa !2998
  %fts_options238 = getelementptr inbounds %struct.FTS, %struct.FTS* %181, i32 0, i32 10, !dbg !19898, !ctir !2338
  %182 = load i32, i32* %fts_options238, align 8, !dbg !19898, !tbaa !18131, !ctir !7
  %and239 = and i32 %182, 8, !dbg !19898
  %tobool240 = icmp ne i32 %and239, 0, !dbg !19898
  br i1 %tobool240, label %land.lhs.true241, label %if.else250, !dbg !19899

land.lhs.true241:                                 ; preds = %land.lhs.true237
  %183 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19900, !tbaa !2998
  %fts_options242 = getelementptr inbounds %struct.FTS, %struct.FTS* %183, i32 0, i32 10, !dbg !19900, !ctir !2338
  %184 = load i32, i32* %fts_options242, align 8, !dbg !19900, !tbaa !18131, !ctir !7
  %and243 = and i32 %184, 16, !dbg !19900
  %tobool244 = icmp ne i32 %and243, 0, !dbg !19900
  br i1 %tobool244, label %land.lhs.true245, label %if.else250, !dbg !19901

land.lhs.true245:                                 ; preds = %land.lhs.true241
  %185 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19902, !tbaa !2998
  %186 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19903, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %186, i32 0, i32 6, !dbg !19904, !ctir !2338
  %187 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19904, !tbaa !3826, !ctir !7
  %call246 = call i32 @leaf_optimization(%struct._ftsent* %185, i32 %187), !dbg !19905
  %cmp247 = icmp eq i32 %call246, 2, !dbg !19906
  br i1 %cmp247, label %if.then249, label %if.else250, !dbg !19907

if.then249:                                       ; preds = %land.lhs.true245
  br label %if.end273, !dbg !19908

if.else250:                                       ; preds = %land.lhs.true245, %land.lhs.true241, %land.lhs.true237, %if.then233
  %188 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19910, !tbaa !2998
  %189 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19912, !tbaa !2998
  %call251 = call zeroext i16 @fts_stat(%struct.FTS* %188, %struct._ftsent* %189, i1 zeroext false), !dbg !19913
  %190 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19914, !tbaa !2998
  %fts_info252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %190, i32 0, i32 15, !dbg !19915, !ctir !2321
  store i16 %call251, i16* %fts_info252, align 8, !dbg !19916, !tbaa !3813, !ctir !33
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19917, !tbaa !2998
  %fts_statp253 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !19917, !ctir !2321
  %arraydecay254 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp253, i64 0, i64 0, !dbg !19917
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay254, i32 0, i32 3, !dbg !19917, !ctir !2393
  %192 = load i32, i32* %st_mode, align 8, !dbg !19917, !tbaa !3181, !ctir !133
  %and255 = and i32 %192, 61440, !dbg !19917
  %cmp256 = icmp eq i32 %and255, 16384, !dbg !19917
  br i1 %cmp256, label %land.lhs.true258, label %if.end272, !dbg !19919

land.lhs.true258:                                 ; preds = %if.else250
  %193 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19920, !tbaa !2998
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %193, i32 0, i32 12, !dbg !19921, !ctir !2321
  %194 = load i64, i64* %fts_level259, align 8, !dbg !19921, !tbaa !3851, !ctir !568
  %cmp260 = icmp ne i64 %194, 0, !dbg !19922
  br i1 %cmp260, label %land.lhs.true262, label %if.end272, !dbg !19923

land.lhs.true262:                                 ; preds = %land.lhs.true258
  %195 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19924, !tbaa !2998
  %fts_n_dirs_remaining263 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %195, i32 0, i32 14, !dbg !19925, !ctir !2321
  %196 = load i64, i64* %fts_n_dirs_remaining263, align 8, !dbg !19925, !tbaa !3851, !ctir !1384
  %cmp264 = icmp ult i64 0, %196, !dbg !19926
  br i1 %cmp264, label %land.lhs.true266, label %if.end272, !dbg !19927

land.lhs.true266:                                 ; preds = %land.lhs.true262
  %197 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19928, !tbaa !2998
  %fts_n_dirs_remaining267 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %197, i32 0, i32 14, !dbg !19929, !ctir !2321
  %198 = load i64, i64* %fts_n_dirs_remaining267, align 8, !dbg !19929, !tbaa !3851, !ctir !1384
  %cmp268 = icmp ne i64 %198, -1, !dbg !19930
  br i1 %cmp268, label %if.then270, label %if.end272, !dbg !19931

if.then270:                                       ; preds = %land.lhs.true266
  %199 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19932, !tbaa !2998
  %fts_n_dirs_remaining271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 14, !dbg !19933, !ctir !2321
  %200 = load i64, i64* %fts_n_dirs_remaining271, align 8, !dbg !19934, !tbaa !3851, !ctir !1384
  %dec = add i64 %200, -1, !dbg !19934
  store i64 %dec, i64* %fts_n_dirs_remaining271, align 8, !dbg !19934, !tbaa !3851, !ctir !1384
  br label %if.end272, !dbg !19932

if.end272:                                        ; preds = %if.then270, %land.lhs.true266, %land.lhs.true262, %land.lhs.true258, %if.else250
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then249
  br label %if.end284, !dbg !19935

if.else274:                                       ; preds = %if.then228
  br label %do.body275, !dbg !19936

do.body275:                                       ; preds = %if.else274
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19937, !tbaa !2998
  %fts_statp276 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 18, !dbg !19937, !ctir !2321
  %arraydecay277 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp276, i64 0, i64 0, !dbg !19937
  %st_size278 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay277, i32 0, i32 8, !dbg !19937, !ctir !2393
  %202 = load i64, i64* %st_size278, align 8, !dbg !19937, !tbaa !4519, !ctir !29
  %cmp279 = icmp eq i64 %202, 1, !dbg !19937
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !19940

if.then281:                                       ; preds = %do.body275
  call void @abort() #13, !dbg !19937
  unreachable, !dbg !19937

if.end282:                                        ; preds = %do.body275
  br label %do.end283, !dbg !19940

do.end283:                                        ; preds = %if.end282
  br label %if.end284

if.end284:                                        ; preds = %do.end283, %if.end273
  br label %if.end285, !dbg !19941

if.end285:                                        ; preds = %if.end284, %check_for_dir
  %203 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19942, !tbaa !2998
  %fts_info286 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %203, i32 0, i32 15, !dbg !19944, !ctir !2321
  %204 = load i16, i16* %fts_info286, align 8, !dbg !19944, !tbaa !3813, !ctir !33
  %conv287 = zext i16 %204 to i32, !dbg !19942
  %cmp288 = icmp eq i32 %conv287, 1, !dbg !19945
  br i1 %cmp288, label %if.then290, label %if.end304, !dbg !19946

if.then290:                                       ; preds = %if.end285
  %205 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19947, !tbaa !2998
  %fts_level291 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %205, i32 0, i32 12, !dbg !19950, !ctir !2321
  %206 = load i64, i64* %fts_level291, align 8, !dbg !19950, !tbaa !3851, !ctir !568
  %cmp292 = icmp eq i64 %206, 0, !dbg !19951
  br i1 %cmp292, label %if.then294, label %if.end299, !dbg !19952

if.then294:                                       ; preds = %if.then290
  %207 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19953, !tbaa !2998
  %fts_statp295 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %207, i32 0, i32 18, !dbg !19954, !ctir !2321
  %arraydecay296 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp295, i64 0, i64 0, !dbg !19955
  %st_dev297 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay296, i32 0, i32 0, !dbg !19955, !ctir !2393
  %208 = load i64, i64* %st_dev297, align 8, !dbg !19955, !tbaa !3876, !ctir !231
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19956, !tbaa !2998
  %fts_dev298 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 3, !dbg !19957, !ctir !2338
  store i64 %208, i64* %fts_dev298, align 8, !dbg !19958, !tbaa !3923, !ctir !230
  br label %if.end299, !dbg !19956

if.end299:                                        ; preds = %if.then294, %if.then290
  %210 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19959, !tbaa !2998
  %211 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19961, !tbaa !2998
  %call300 = call zeroext i1 @enter_dir(%struct.FTS* %210, %struct._ftsent* %211), !dbg !19962
  br i1 %call300, label %if.end303, label %if.then301, !dbg !19963

if.then301:                                       ; preds = %if.end299
  %call302 = call i32* @__errno_location() #15, !dbg !19964
  store i32 12, i32* %call302, align 4, !dbg !19964, !tbaa !2985, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19966
  br label %return, !dbg !19966

if.end303:                                        ; preds = %if.end299
  br label %if.end304, !dbg !19967

if.end304:                                        ; preds = %if.end303, %if.end285
  %212 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19968, !tbaa !2998
  store %struct._ftsent* %212, %struct._ftsent** %retval, align 8, !dbg !19969
  br label %return, !dbg !19969

if.end305:                                        ; preds = %if.end152
  br label %cd_dot_dot, !dbg !19970

cd_dot_dot:                                       ; preds = %if.end305, %if.end150
  call void @llvm.dbg.label(metadata !19971), !dbg !19972
  %213 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19973, !tbaa !2998
  %fts_parent306 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 1, !dbg !19974, !ctir !2321
  %214 = load %struct._ftsent*, %struct._ftsent** %fts_parent306, align 8, !dbg !19974, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %214, %struct._ftsent** %p, align 8, !dbg !19975, !tbaa !2998
  %215 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19976, !tbaa !2998
  %216 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19977, !tbaa !2998
  %fts_cur307 = getelementptr inbounds %struct.FTS, %struct.FTS* %216, i32 0, i32 0, !dbg !19978, !ctir !2338
  store %struct._ftsent* %215, %struct._ftsent** %fts_cur307, align 8, !dbg !19979, !tbaa !18719, !ctir !2325
  %217 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19980, !tbaa !2998
  %218 = bitcast %struct._ftsent* %217 to i8*, !dbg !19980
  call void @free(i8* %218) #10, !dbg !19981
  %219 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19982, !tbaa !2998
  %fts_level308 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %219, i32 0, i32 12, !dbg !19984, !ctir !2321
  %220 = load i64, i64* %fts_level308, align 8, !dbg !19984, !tbaa !3851, !ctir !568
  %cmp309 = icmp eq i64 %220, -1, !dbg !19985
  br i1 %cmp309, label %if.then311, label %if.end314, !dbg !19986

if.then311:                                       ; preds = %cd_dot_dot
  %221 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19987, !tbaa !2998
  %222 = bitcast %struct._ftsent* %221 to i8*, !dbg !19987
  call void @free(i8* %222) #10, !dbg !19989
  %call312 = call i32* @__errno_location() #15, !dbg !19990
  store i32 0, i32* %call312, align 4, !dbg !19990, !tbaa !2985, !ctir !7
  %223 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19991, !tbaa !2998
  %fts_cur313 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 0, !dbg !19992, !ctir !2338
  store %struct._ftsent* null, %struct._ftsent** %fts_cur313, align 8, !dbg !19993, !tbaa !18719, !ctir !2325
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19994
  br label %return, !dbg !19994

if.end314:                                        ; preds = %cd_dot_dot
  br label %do.body315, !dbg !19995

do.body315:                                       ; preds = %if.end314
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19996, !tbaa !2998
  %fts_info316 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !19996, !ctir !2321
  %225 = load i16, i16* %fts_info316, align 8, !dbg !19996, !tbaa !3813, !ctir !33
  %conv317 = zext i16 %225 to i32, !dbg !19996
  %cmp318 = icmp ne i32 %conv317, 11, !dbg !19996
  br i1 %cmp318, label %if.end321, label %if.then320, !dbg !19999

if.then320:                                       ; preds = %do.body315
  call void @abort() #13, !dbg !19996
  unreachable, !dbg !19996

if.end321:                                        ; preds = %do.body315
  br label %do.end322, !dbg !19999

do.end322:                                        ; preds = %if.end321
  %226 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20000, !tbaa !2998
  %fts_path323 = getelementptr inbounds %struct.FTS, %struct.FTS* %226, i32 0, i32 4, !dbg !20001, !ctir !2338
  %227 = load i8*, i8** %fts_path323, align 8, !dbg !20001, !tbaa !18770, !ctir !9
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20002, !tbaa !2998
  %fts_pathlen324 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %228, i32 0, i32 10, !dbg !20003, !ctir !2321
  %229 = load i64, i64* %fts_pathlen324, align 8, !dbg !20003, !tbaa !3851, !ctir !55
  %arrayidx325 = getelementptr inbounds i8, i8* %227, i64 %229, !dbg !20000, !ctir !9
  store i8 0, i8* %arrayidx325, align 1, !dbg !20004, !tbaa !3660
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20005, !tbaa !2998
  %fts_level326 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %230, i32 0, i32 12, !dbg !20007, !ctir !2321
  %231 = load i64, i64* %fts_level326, align 8, !dbg !20007, !tbaa !3851, !ctir !568
  %cmp327 = icmp eq i64 %231, 0, !dbg !20008
  br i1 %cmp327, label %if.then329, label %if.else338, !dbg !20009

if.then329:                                       ; preds = %do.end322
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20010, !tbaa !2998
  %call330 = call i32 @restore_initial_cwd(%struct.FTS* %232), !dbg !20013
  %tobool331 = icmp ne i32 %call330, 0, !dbg !20013
  br i1 %tobool331, label %if.then332, label %if.end337, !dbg !20014

if.then332:                                       ; preds = %if.then329
  %call333 = call i32* @__errno_location() #15, !dbg !20015
  %233 = load i32, i32* %call333, align 4, !dbg !20015, !tbaa !2985, !ctir !7
  %234 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20017, !tbaa !2998
  %fts_errno334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %234, i32 0, i32 8, !dbg !20018, !ctir !2321
  store i32 %233, i32* %fts_errno334, align 8, !dbg !20019, !tbaa !2985, !ctir !7
  %235 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20020, !tbaa !2998
  %fts_options335 = getelementptr inbounds %struct.FTS, %struct.FTS* %235, i32 0, i32 10, !dbg !20020, !ctir !2338
  %236 = load i32, i32* %fts_options335, align 8, !dbg !20020, !tbaa !18131, !ctir !7
  %or336 = or i32 %236, 8192, !dbg !20020
  store i32 %or336, i32* %fts_options335, align 8, !dbg !20020, !tbaa !18131, !ctir !7
  br label %if.end337, !dbg !20021

if.end337:                                        ; preds = %if.then332, %if.then329
  br label %if.end381, !dbg !20022

if.else338:                                       ; preds = %do.end322
  %237 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20023, !tbaa !2998
  %fts_flags339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %237, i32 0, i32 16, !dbg !20025, !ctir !2321
  %238 = load i16, i16* %fts_flags339, align 2, !dbg !20025, !tbaa !3813, !ctir !33
  %conv340 = zext i16 %238 to i32, !dbg !20023
  %and341 = and i32 %conv340, 2, !dbg !20026
  %tobool342 = icmp ne i32 %and341, 0, !dbg !20026
  br i1 %tobool342, label %if.then343, label %if.else365, !dbg !20027

if.then343:                                       ; preds = %if.else338
  %239 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20028, !tbaa !2998
  %fts_options344 = getelementptr inbounds %struct.FTS, %struct.FTS* %239, i32 0, i32 10, !dbg !20028, !ctir !2338
  %240 = load i32, i32* %fts_options344, align 8, !dbg !20028, !tbaa !18131, !ctir !7
  %and345 = and i32 %240, 4, !dbg !20028
  %tobool346 = icmp ne i32 %and345, 0, !dbg !20028
  br i1 %tobool346, label %if.end362, label %land.lhs.true347, !dbg !20028

land.lhs.true347:                                 ; preds = %if.then343
  %241 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20028, !tbaa !2998
  %fts_options348 = getelementptr inbounds %struct.FTS, %struct.FTS* %241, i32 0, i32 10, !dbg !20028, !ctir !2338
  %242 = load i32, i32* %fts_options348, align 8, !dbg !20028, !tbaa !18131, !ctir !7
  %and349 = and i32 %242, 512, !dbg !20028
  %tobool350 = icmp ne i32 %and349, 0, !dbg !20028
  br i1 %tobool350, label %cond.true351, label %cond.false353, !dbg !20031

cond.true351:                                     ; preds = %land.lhs.true347
  %243 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20028, !tbaa !2998
  %244 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20028, !tbaa !2998
  %fts_symfd352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %244, i32 0, i32 9, !dbg !20028, !ctir !2321
  %245 = load i32, i32* %fts_symfd352, align 4, !dbg !20028, !tbaa !2985, !ctir !7
  call void @cwd_advance_fd(%struct.FTS* %243, i32 %245, i1 zeroext true), !dbg !20028
  br i1 false, label %if.then357, label %if.end362, !dbg !20028

cond.false353:                                    ; preds = %land.lhs.true347
  %246 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20028, !tbaa !2998
  %fts_symfd354 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %246, i32 0, i32 9, !dbg !20028, !ctir !2321
  %247 = load i32, i32* %fts_symfd354, align 4, !dbg !20028, !tbaa !2985, !ctir !7
  %call355 = call i32 @fchdir(i32 %247) #10, !dbg !20028
  %tobool356 = icmp ne i32 %call355, 0, !dbg !20028
  br i1 %tobool356, label %if.then357, label %if.end362, !dbg !20031

if.then357:                                       ; preds = %cond.false353, %cond.true351
  %call358 = call i32* @__errno_location() #15, !dbg !20032
  %248 = load i32, i32* %call358, align 4, !dbg !20032, !tbaa !2985, !ctir !7
  %249 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20034, !tbaa !2998
  %fts_errno359 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %249, i32 0, i32 8, !dbg !20035, !ctir !2321
  store i32 %248, i32* %fts_errno359, align 8, !dbg !20036, !tbaa !2985, !ctir !7
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20037, !tbaa !2998
  %fts_options360 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 10, !dbg !20037, !ctir !2338
  %251 = load i32, i32* %fts_options360, align 8, !dbg !20037, !tbaa !18131, !ctir !7
  %or361 = or i32 %251, 8192, !dbg !20037
  store i32 %or361, i32* %fts_options360, align 8, !dbg !20037, !tbaa !18131, !ctir !7
  br label %if.end362, !dbg !20038

if.end362:                                        ; preds = %if.then357, %cond.false353, %cond.true351, %if.then343
  %252 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20039, !tbaa !2998
  %fts_symfd363 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %252, i32 0, i32 9, !dbg !20040, !ctir !2321
  %253 = load i32, i32* %fts_symfd363, align 4, !dbg !20040, !tbaa !2985, !ctir !7
  %call364 = call i32 @close(i32 %253), !dbg !20041
  br label %if.end380, !dbg !20042

if.else365:                                       ; preds = %if.else338
  %254 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20043, !tbaa !2998
  %fts_flags366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %254, i32 0, i32 16, !dbg !20045, !ctir !2321
  %255 = load i16, i16* %fts_flags366, align 2, !dbg !20045, !tbaa !3813, !ctir !33
  %conv367 = zext i16 %255 to i32, !dbg !20043
  %and368 = and i32 %conv367, 1, !dbg !20046
  %tobool369 = icmp ne i32 %and368, 0, !dbg !20046
  br i1 %tobool369, label %if.end379, label %land.lhs.true370, !dbg !20047

land.lhs.true370:                                 ; preds = %if.else365
  %256 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20048, !tbaa !2998
  %257 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20049, !tbaa !2998
  %fts_parent371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %257, i32 0, i32 1, !dbg !20050, !ctir !2321
  %258 = load %struct._ftsent*, %struct._ftsent** %fts_parent371, align 8, !dbg !20050, !tbaa !2998, !ctir !2325
  %call372 = call i32 @fts_safe_changedir(%struct.FTS* %256, %struct._ftsent* %258, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.443, i64 0, i64 0)), !dbg !20051
  %tobool373 = icmp ne i32 %call372, 0, !dbg !20051
  br i1 %tobool373, label %if.then374, label %if.end379, !dbg !20052

if.then374:                                       ; preds = %land.lhs.true370
  %call375 = call i32* @__errno_location() #15, !dbg !20053
  %259 = load i32, i32* %call375, align 4, !dbg !20053, !tbaa !2985, !ctir !7
  %260 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20055, !tbaa !2998
  %fts_errno376 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 8, !dbg !20056, !ctir !2321
  store i32 %259, i32* %fts_errno376, align 8, !dbg !20057, !tbaa !2985, !ctir !7
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20058, !tbaa !2998
  %fts_options377 = getelementptr inbounds %struct.FTS, %struct.FTS* %261, i32 0, i32 10, !dbg !20058, !ctir !2338
  %262 = load i32, i32* %fts_options377, align 8, !dbg !20058, !tbaa !18131, !ctir !7
  %or378 = or i32 %262, 8192, !dbg !20058
  store i32 %or378, i32* %fts_options377, align 8, !dbg !20058, !tbaa !18131, !ctir !7
  br label %if.end379, !dbg !20059

if.end379:                                        ; preds = %if.then374, %land.lhs.true370, %if.else365
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.end362
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.end337
  %263 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20060, !tbaa !2998
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 15, !dbg !20062, !ctir !2321
  %264 = load i16, i16* %fts_info382, align 8, !dbg !20062, !tbaa !3813, !ctir !33
  %conv383 = zext i16 %264 to i32, !dbg !20060
  %cmp384 = icmp ne i32 %conv383, 2, !dbg !20063
  br i1 %cmp384, label %if.then386, label %if.end399, !dbg !20064

if.then386:                                       ; preds = %if.end381
  %265 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20065, !tbaa !2998
  %fts_errno387 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 8, !dbg !20067, !ctir !2321
  %266 = load i32, i32* %fts_errno387, align 8, !dbg !20067, !tbaa !2985, !ctir !7
  %tobool388 = icmp ne i32 %266, 0, !dbg !20065
  %267 = zext i1 %tobool388 to i64, !dbg !20065
  %cond389 = select i1 %tobool388, i32 7, i32 6, !dbg !20065
  %conv390 = trunc i32 %cond389 to i16, !dbg !20065
  %268 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20068, !tbaa !2998
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %268, i32 0, i32 15, !dbg !20069, !ctir !2321
  store i16 %conv390, i16* %fts_info391, align 8, !dbg !20070, !tbaa !3813, !ctir !33
  %269 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20071, !tbaa !2998
  %fts_errno392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %269, i32 0, i32 8, !dbg !20073, !ctir !2321
  %270 = load i32, i32* %fts_errno392, align 8, !dbg !20073, !tbaa !2985, !ctir !7
  %cmp393 = icmp eq i32 %270, 0, !dbg !20074
  br i1 %cmp393, label %if.then395, label %if.end398, !dbg !20075

if.then395:                                       ; preds = %if.then386
  br label %do.body396, !dbg !20076

do.body396:                                       ; preds = %if.then395
  %271 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20077, !tbaa !2998
  %272 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20077, !tbaa !2998
  call void @leave_dir(%struct.FTS* %271, %struct._ftsent* %272), !dbg !20077
  br label %do.end397, !dbg !20077

do.end397:                                        ; preds = %do.body396
  br label %if.end398, !dbg !20077

if.end398:                                        ; preds = %do.end397, %if.then386
  br label %if.end399, !dbg !20079

if.end399:                                        ; preds = %if.end398, %if.end381
  %273 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20080, !tbaa !2998
  %fts_options400 = getelementptr inbounds %struct.FTS, %struct.FTS* %273, i32 0, i32 10, !dbg !20080, !ctir !2338
  %274 = load i32, i32* %fts_options400, align 8, !dbg !20080, !tbaa !18131, !ctir !7
  %and401 = and i32 %274, 8192, !dbg !20080
  %tobool402 = icmp ne i32 %and401, 0, !dbg !20080
  br i1 %tobool402, label %cond.true403, label %cond.false404, !dbg !20080

cond.true403:                                     ; preds = %if.end399
  br label %cond.end405, !dbg !20080

cond.false404:                                    ; preds = %if.end399
  %275 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20081, !tbaa !2998
  br label %cond.end405, !dbg !20080

cond.end405:                                      ; preds = %cond.false404, %cond.true403
  %cond406 = phi %struct._ftsent* [ null, %cond.true403 ], [ %275, %cond.false404 ], !dbg !20080
  store %struct._ftsent* %cond406, %struct._ftsent** %retval, align 8, !dbg !20082
  br label %return, !dbg !20082

return:                                           ; preds = %cond.end405, %if.then311, %if.end304, %if.then301, %if.then163, %if.then149, %do.end127, %if.then114, %do.end, %if.then5, %if.then
  %276 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !20083
  ret %struct._ftsent* %276, !dbg !20083
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @leave_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !20084 !ctir !2450 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !2452
  %obj = alloca %struct.Active_dir, align 8, !ctir !2435
  %found = alloca i8*, align 8, !ctir !53
  %parent = alloca %struct._ftsent*, align 8, !ctir !2420
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !20085, metadata !DIExpression()), !dbg !20086
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !20087, metadata !DIExpression()), !dbg !20088
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !20089, metadata !DIExpression()), !dbg !20090
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20091, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !20092, !ctir !2321
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20091
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !20090, !tbaa !2998
  %1 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20093, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %1, i32 0, i32 10, !dbg !20095, !ctir !2338
  %2 = load i32, i32* %fts_options, align 8, !dbg !20095, !tbaa !18131, !ctir !7
  %and = and i32 %2, 258, !dbg !20096
  %tobool = icmp ne i32 %and, 0, !dbg !20096
  br i1 %tobool, label %if.then, label %if.else, !dbg !20097

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %obj, metadata !20098, metadata !DIExpression()), !dbg !20100
  call void @llvm.dbg.declare(metadata i8** %found, metadata !20101, metadata !DIExpression()), !dbg !20102
  %3 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20103, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 0, !dbg !20104, !ctir !2453
  %4 = load i64, i64* %st_dev, align 8, !dbg !20104, !tbaa !3876, !ctir !231
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 0, !dbg !20105, !ctir !2435
  store i64 %4, i64* %dev, align 8, !dbg !20106, !tbaa !19296, !ctir !230
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20107, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !20108, !ctir !2453
  %6 = load i64, i64* %st_ino, align 8, !dbg !20108, !tbaa !3873, !ctir !228
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 1, !dbg !20109, !ctir !2435
  store i64 %6, i64* %ino, align 8, !dbg !20110, !tbaa !19272, !ctir !227
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20111, !tbaa !2998
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !20112, !ctir !2338
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !20113
  %8 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !20113, !tbaa !3660, !ctir !2361
  %9 = bitcast %struct.Active_dir* %obj to i8*, !dbg !20114
  %call = call i8* @hash_delete(%struct.hash_table* %8, i8* %9), !dbg !20115
  store i8* %call, i8** %found, align 8, !dbg !20116, !tbaa !2998
  %10 = load i8*, i8** %found, align 8, !dbg !20117, !tbaa !2998
  %tobool1 = icmp ne i8* %10, null, !dbg !20117
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !20119

if.then2:                                         ; preds = %if.then
  call void @abort() #13, !dbg !20120
  unreachable, !dbg !20120

if.end:                                           ; preds = %if.then
  %11 = load i8*, i8** %found, align 8, !dbg !20121, !tbaa !2998
  call void @free(i8* %11) #10, !dbg !20122
  br label %if.end38, !dbg !20123

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !20124, metadata !DIExpression()), !dbg !20126
  %12 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20127, !tbaa !2998
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 1, !dbg !20128, !ctir !2321
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !20128, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %13, %struct._ftsent** %parent, align 8, !dbg !20126, !tbaa !2998
  %14 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20129, !tbaa !2998
  %cmp = icmp ne %struct._ftsent* %14, null, !dbg !20131
  br i1 %cmp, label %land.lhs.true, label %if.end37, !dbg !20132

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20133, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 12, !dbg !20134, !ctir !2321
  %16 = load i64, i64* %fts_level, align 8, !dbg !20134, !tbaa !3851, !ctir !568
  %cmp3 = icmp sle i64 0, %16, !dbg !20135
  br i1 %cmp3, label %if.then4, label %if.end37, !dbg !20136

if.then4:                                         ; preds = %land.lhs.true
  br label %do.body, !dbg !20137

do.body:                                          ; preds = %if.then4
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20138, !tbaa !2998
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 12, !dbg !20138, !ctir !2338
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !20138
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !20138, !tbaa !3660, !ctir !2361
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 1, !dbg !20138, !ctir !2366
  %19 = load i64, i64* %chdir_counter, align 8, !dbg !20138, !tbaa !20141, !ctir !458
  %cmp6 = icmp eq i64 %19, 0, !dbg !20138
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !20143

if.then7:                                         ; preds = %do.body
  call void @abort() #13, !dbg !20138
  unreachable, !dbg !20138

if.end8:                                          ; preds = %do.body
  %20 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20144, !tbaa !2998
  %fts_cycle9 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 12, !dbg !20144, !ctir !2338
  %state10 = bitcast %union.anon* %fts_cycle9 to %struct.cycle_check_state**, !dbg !20144
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state10, align 8, !dbg !20144, !tbaa !3660, !ctir !2361
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !20144, !ctir !2366
  %st_ino11 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !20144, !ctir !2370
  %22 = load i64, i64* %st_ino11, align 8, !dbg !20144, !tbaa !20146, !ctir !227
  %23 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20144, !tbaa !2998
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !20144, !ctir !2453
  %24 = load i64, i64* %st_ino12, align 8, !dbg !20144, !tbaa !3873, !ctir !228
  %cmp13 = icmp eq i64 %22, %24, !dbg !20144
  br i1 %cmp13, label %land.lhs.true14, label %if.end36, !dbg !20144

land.lhs.true14:                                  ; preds = %if.end8
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20144, !tbaa !2998
  %fts_cycle15 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 12, !dbg !20144, !ctir !2338
  %state16 = bitcast %union.anon* %fts_cycle15 to %struct.cycle_check_state**, !dbg !20144
  %26 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state16, align 8, !dbg !20144, !tbaa !3660, !ctir !2361
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %26, i32 0, i32 0, !dbg !20144, !ctir !2366
  %st_dev18 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino17, i32 0, i32 1, !dbg !20144, !ctir !2370
  %27 = load i64, i64* %st_dev18, align 8, !dbg !20144, !tbaa !20147, !ctir !230
  %28 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20144, !tbaa !2998
  %st_dev19 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 0, !dbg !20144, !ctir !2453
  %29 = load i64, i64* %st_dev19, align 8, !dbg !20144, !tbaa !3876, !ctir !231
  %cmp20 = icmp eq i64 %27, %29, !dbg !20144
  br i1 %cmp20, label %if.then21, label %if.end36, !dbg !20143

if.then21:                                        ; preds = %land.lhs.true14
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20148, !tbaa !2998
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 18, !dbg !20148, !ctir !2321
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !20148
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !20148, !ctir !2393
  %31 = load i64, i64* %st_dev24, align 8, !dbg !20148, !tbaa !3876, !ctir !231
  %32 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20148, !tbaa !2998
  %fts_cycle25 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 12, !dbg !20148, !ctir !2338
  %state26 = bitcast %union.anon* %fts_cycle25 to %struct.cycle_check_state**, !dbg !20148
  %33 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state26, align 8, !dbg !20148, !tbaa !3660, !ctir !2361
  %dev_ino27 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %33, i32 0, i32 0, !dbg !20148, !ctir !2366
  %st_dev28 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino27, i32 0, i32 1, !dbg !20148, !ctir !2370
  store i64 %31, i64* %st_dev28, align 8, !dbg !20148, !tbaa !20147, !ctir !230
  %34 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !20148, !tbaa !2998
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !20148, !ctir !2321
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !20148
  %st_ino31 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 1, !dbg !20148, !ctir !2393
  %35 = load i64, i64* %st_ino31, align 8, !dbg !20148, !tbaa !3873, !ctir !228
  %36 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20148, !tbaa !2998
  %fts_cycle32 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 12, !dbg !20148, !ctir !2338
  %state33 = bitcast %union.anon* %fts_cycle32 to %struct.cycle_check_state**, !dbg !20148
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state33, align 8, !dbg !20148, !tbaa !3660, !ctir !2361
  %dev_ino34 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 0, !dbg !20148, !ctir !2366
  %st_ino35 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino34, i32 0, i32 0, !dbg !20148, !ctir !2370
  store i64 %35, i64* %st_ino35, align 8, !dbg !20148, !tbaa !20146, !ctir !227
  br label %if.end36, !dbg !20148

if.end36:                                         ; preds = %if.then21, %land.lhs.true14, %if.end8
  br label %do.end, !dbg !20143

do.end:                                           ; preds = %if.end36
  br label %if.end37, !dbg !20143

if.end37:                                         ; preds = %do.end, %land.lhs.true, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end
  ret void, !dbg !20150
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_safe_changedir(%struct.FTS* %sp, %struct._ftsent* %p, i32 %fd, i8* %dir) #4 !dbg !20151 !ctir !2500 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %is_dotdot = alloca i8, align 1, !ctir !120
  %newfd = alloca i32, align 4, !ctir !7
  %parent_fd = alloca i32, align 4, !ctir !7
  %sb = alloca %struct.stat, align 8, !ctir !2393
  %oerrno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20152, metadata !DIExpression()), !dbg !20153
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20154, metadata !DIExpression()), !dbg !20155
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20156, metadata !DIExpression()), !dbg !20157
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !20158, metadata !DIExpression()), !dbg !20159
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !20160, metadata !DIExpression()), !dbg !20161
  call void @llvm.dbg.declare(metadata i8* %is_dotdot, metadata !20162, metadata !DIExpression()), !dbg !20163
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !20164, !tbaa !2998
  %tobool = icmp ne i8* %0, null, !dbg !20164
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !20165

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !20166, !tbaa !2998
  %call = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.443, i64 0, i64 0)) #14, !dbg !20166
  %cmp = icmp eq i32 %call, 0, !dbg !20166
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !20167
  %frombool = zext i1 %2 to i8, !dbg !20163
  store i8 %frombool, i8* %is_dotdot, align 1, !dbg !20163, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %newfd, metadata !20168, metadata !DIExpression()), !dbg !20169
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20170, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !20170, !ctir !2338
  %4 = load i32, i32* %fts_options, align 8, !dbg !20170, !tbaa !18131, !ctir !7
  %and = and i32 %4, 4, !dbg !20170
  %tobool1 = icmp ne i32 %and, 0, !dbg !20170
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !20172

if.then:                                          ; preds = %land.end
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20173, !tbaa !2998
  %fts_options2 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !20173, !ctir !2338
  %6 = load i32, i32* %fts_options2, align 8, !dbg !20173, !tbaa !18131, !ctir !7
  %and3 = and i32 %6, 512, !dbg !20173
  %tobool4 = icmp ne i32 %and3, 0, !dbg !20173
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !20176

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %fd.addr, align 4, !dbg !20177, !tbaa !2985
  %cmp5 = icmp sle i32 0, %7, !dbg !20178
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !20179

if.then6:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %fd.addr, align 4, !dbg !20180, !tbaa !2985
  %call7 = call i32 @close(i32 %8), !dbg !20181
  br label %if.end, !dbg !20181

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !20182
  br label %return, !dbg !20182

if.end8:                                          ; preds = %land.end
  %9 = load i32, i32* %fd.addr, align 4, !dbg !20183, !tbaa !2985
  %cmp9 = icmp slt i32 %9, 0, !dbg !20185
  br i1 %cmp9, label %land.lhs.true10, label %if.end25, !dbg !20186

land.lhs.true10:                                  ; preds = %if.end8
  %10 = load i8, i8* %is_dotdot, align 1, !dbg !20187, !tbaa !3109
  %tobool11 = trunc i8 %10 to i1, !dbg !20187
  br i1 %tobool11, label %land.lhs.true12, label %if.end25, !dbg !20188

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20189, !tbaa !2998
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !20189, !ctir !2338
  %12 = load i32, i32* %fts_options13, align 8, !dbg !20189, !tbaa !18131, !ctir !7
  %and14 = and i32 %12, 512, !dbg !20189
  %tobool15 = icmp ne i32 %and14, 0, !dbg !20189
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !20190

if.then16:                                        ; preds = %land.lhs.true12
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20191, !tbaa !2998
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 13, !dbg !20194, !ctir !2338
  %call17 = call zeroext i1 @i_ring_empty(%struct.I_ring* %fts_fd_ring) #14, !dbg !20195
  br i1 %call17, label %if.end24, label %if.then18, !dbg !20196

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i32* %parent_fd, metadata !20197, metadata !DIExpression()), !dbg !20199
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20200, !tbaa !2998
  %fts_fd_ring19 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !20201, !ctir !2338
  %call20 = call i32 @i_ring_pop(%struct.I_ring* %fts_fd_ring19), !dbg !20202
  store i32 %call20, i32* %parent_fd, align 4, !dbg !20203, !tbaa !2985
  %15 = load i32, i32* %parent_fd, align 4, !dbg !20204, !tbaa !2985
  %cmp21 = icmp sle i32 0, %15, !dbg !20206
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !20207

if.then22:                                        ; preds = %if.then18
  %16 = load i32, i32* %parent_fd, align 4, !dbg !20208, !tbaa !2985
  store i32 %16, i32* %fd.addr, align 4, !dbg !20210, !tbaa !2985
  store i8* null, i8** %dir.addr, align 8, !dbg !20211, !tbaa !2998
  br label %if.end23, !dbg !20212

if.end23:                                         ; preds = %if.then22, %if.then18
  br label %if.end24, !dbg !20213

if.end24:                                         ; preds = %if.end23, %if.then16
  br label %if.end25, !dbg !20214

if.end25:                                         ; preds = %if.end24, %land.lhs.true12, %land.lhs.true10, %if.end8
  %17 = load i32, i32* %fd.addr, align 4, !dbg !20215, !tbaa !2985
  store i32 %17, i32* %newfd, align 4, !dbg !20216, !tbaa !2985
  %18 = load i32, i32* %fd.addr, align 4, !dbg !20217, !tbaa !2985
  %cmp26 = icmp slt i32 %18, 0, !dbg !20219
  br i1 %cmp26, label %land.lhs.true27, label %if.end31, !dbg !20220

land.lhs.true27:                                  ; preds = %if.end25
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20221, !tbaa !2998
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !20222, !tbaa !2998
  %call28 = call i32 @diropen(%struct.FTS* %19, i8* %20), !dbg !20223
  store i32 %call28, i32* %newfd, align 4, !dbg !20224, !tbaa !2985
  %cmp29 = icmp slt i32 %call28, 0, !dbg !20225
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !20226

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -1, i32* %retval, align 4, !dbg !20227
  br label %return, !dbg !20227

if.end31:                                         ; preds = %land.lhs.true27, %if.end25
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20228, !tbaa !2998
  %fts_options32 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !20228, !ctir !2338
  %22 = load i32, i32* %fts_options32, align 8, !dbg !20228, !tbaa !18131, !ctir !7
  %and33 = and i32 %22, 2, !dbg !20228
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20228
  br i1 %tobool34, label %if.then39, label %lor.lhs.false, !dbg !20230

lor.lhs.false:                                    ; preds = %if.end31
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !20231, !tbaa !2998
  %tobool35 = icmp ne i8* %23, null, !dbg !20231
  br i1 %tobool35, label %land.lhs.true36, label %if.end54, !dbg !20232

land.lhs.true36:                                  ; preds = %lor.lhs.false
  %24 = load i8*, i8** %dir.addr, align 8, !dbg !20233, !tbaa !2998
  %call37 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.443, i64 0, i64 0)) #14, !dbg !20233
  %cmp38 = icmp eq i32 %call37, 0, !dbg !20233
  br i1 %cmp38, label %if.then39, label %if.end54, !dbg !20234

if.then39:                                        ; preds = %land.lhs.true36, %if.end31
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !20235, metadata !DIExpression()), !dbg !20237
  %25 = load i32, i32* %newfd, align 4, !dbg !20238, !tbaa !2985
  %call40 = call i32 @fstat(i32 %25, %struct.stat* %sb) #10, !dbg !20240
  %tobool41 = icmp ne i32 %call40, 0, !dbg !20240
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !20241

if.then42:                                        ; preds = %if.then39
  store i32 -1, i32* %ret, align 4, !dbg !20242, !tbaa !2985
  br label %bail, !dbg !20244

if.end43:                                         ; preds = %if.then39
  %26 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20245, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 18, !dbg !20247, !ctir !2321
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20248
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !20248, !ctir !2393
  %27 = load i64, i64* %st_dev, align 8, !dbg !20248, !tbaa !3876, !ctir !231
  %st_dev44 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 0, !dbg !20249, !ctir !2393
  %28 = load i64, i64* %st_dev44, align 8, !dbg !20249, !tbaa !3876, !ctir !231
  %cmp45 = icmp ne i64 %27, %28, !dbg !20250
  br i1 %cmp45, label %if.then51, label %lor.lhs.false46, !dbg !20251

lor.lhs.false46:                                  ; preds = %if.end43
  %29 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20252, !tbaa !2998
  %fts_statp47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !20253, !ctir !2321
  %arraydecay48 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp47, i64 0, i64 0, !dbg !20254
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay48, i32 0, i32 1, !dbg !20254, !ctir !2393
  %30 = load i64, i64* %st_ino, align 8, !dbg !20254, !tbaa !3873, !ctir !228
  %st_ino49 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !20255, !ctir !2393
  %31 = load i64, i64* %st_ino49, align 8, !dbg !20255, !tbaa !3873, !ctir !228
  %cmp50 = icmp ne i64 %30, %31, !dbg !20256
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !20257

if.then51:                                        ; preds = %lor.lhs.false46, %if.end43
  %call52 = call i32* @__errno_location() #15, !dbg !20258
  store i32 2, i32* %call52, align 4, !dbg !20258, !tbaa !2985, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !20260, !tbaa !2985
  br label %bail, !dbg !20261

if.end53:                                         ; preds = %lor.lhs.false46
  br label %if.end54, !dbg !20262

if.end54:                                         ; preds = %if.end53, %land.lhs.true36, %lor.lhs.false
  %32 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20263, !tbaa !2998
  %fts_options55 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !20263, !ctir !2338
  %33 = load i32, i32* %fts_options55, align 8, !dbg !20263, !tbaa !18131, !ctir !7
  %and56 = and i32 %33, 512, !dbg !20263
  %tobool57 = icmp ne i32 %and56, 0, !dbg !20263
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !20265

if.then58:                                        ; preds = %if.end54
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20266, !tbaa !2998
  %35 = load i32, i32* %newfd, align 4, !dbg !20268, !tbaa !2985
  %36 = load i8, i8* %is_dotdot, align 1, !dbg !20269, !tbaa !3109
  %tobool59 = trunc i8 %36 to i1, !dbg !20269
  %lnot = xor i1 %tobool59, true, !dbg !20270
  call void @cwd_advance_fd(%struct.FTS* %34, i32 %35, i1 zeroext %lnot), !dbg !20271
  store i32 0, i32* %retval, align 4, !dbg !20272
  br label %return, !dbg !20272

if.end60:                                         ; preds = %if.end54
  %37 = load i32, i32* %newfd, align 4, !dbg !20273, !tbaa !2985
  %call61 = call i32 @fchdir(i32 %37) #10, !dbg !20274
  store i32 %call61, i32* %ret, align 4, !dbg !20275, !tbaa !2985
  br label %bail, !dbg !20276

bail:                                             ; preds = %if.end60, %if.then51, %if.then42
  call void @llvm.dbg.label(metadata !20277), !dbg !20278
  %38 = load i32, i32* %fd.addr, align 4, !dbg !20279, !tbaa !2985
  %cmp62 = icmp slt i32 %38, 0, !dbg !20281
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !20282

if.then63:                                        ; preds = %bail
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !20283, metadata !DIExpression()), !dbg !20285
  %call64 = call i32* @__errno_location() #15, !dbg !20286
  %39 = load i32, i32* %call64, align 4, !dbg !20286, !tbaa !2985, !ctir !7
  store i32 %39, i32* %oerrno, align 4, !dbg !20285, !tbaa !2985
  %40 = load i32, i32* %newfd, align 4, !dbg !20287, !tbaa !2985
  %call65 = call i32 @close(i32 %40), !dbg !20288
  %41 = load i32, i32* %oerrno, align 4, !dbg !20289, !tbaa !2985
  %call66 = call i32* @__errno_location() #15, !dbg !20289
  store i32 %41, i32* %call66, align 4, !dbg !20289, !tbaa !2985, !ctir !7
  br label %if.end67, !dbg !20290

if.end67:                                         ; preds = %if.then63, %bail
  %42 = load i32, i32* %ret, align 4, !dbg !20291, !tbaa !2985
  store i32 %42, i32* %retval, align 4, !dbg !20292
  br label %return, !dbg !20292

return:                                           ; preds = %if.end67, %if.then58, %if.then30, %if.end
  %43 = load i32, i32* %retval, align 4, !dbg !20293
  ret i32 %43, !dbg !20293
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS* %sp, i32 %type) #4 !dbg !20294 !ctir !2427 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %type.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %head = alloca %struct._ftsent*, align 8, !ctir !2420
  %nitems = alloca i64, align 8, !ctir !55
  %tail = alloca %struct._ftsent*, align 8, !ctir !2420
  %oldaddr = alloca i8*, align 8, !ctir !53
  %saved_errno = alloca i32, align 4, !ctir !7
  %descend = alloca i8, align 1, !ctir !120
  %doadjust = alloca i8, align 1, !ctir !120
  %level = alloca i64, align 8, !ctir !568
  %len = alloca i64, align 8, !ctir !55
  %maxlen = alloca i64, align 8, !ctir !55
  %new_len = alloca i64, align 8, !ctir !55
  %cp = alloca i8*, align 8, !ctir !9
  %dir_fd = alloca i32, align 4, !ctir !7
  %cur = alloca %struct._ftsent*, align 8, !ctir !2420
  %continue_readdir = alloca i8, align 1, !ctir !120
  %sort_by_inode = alloca i8, align 1, !ctir !120
  %max_entries = alloca i64, align 8, !ctir !55
  %dp = alloca %struct.__dirstream*, align 8, !ctir !609
  %d_namelen = alloca i64, align 8, !ctir !55
  %dp159 = alloca %struct.dirent*, align 8, !ctir !2474
  %skip_stat = alloca i8, align 1, !ctir !120
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20295, metadata !DIExpression()), !dbg !20296
  store i32 %type, i32* %type.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !20297, metadata !DIExpression()), !dbg !20298
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !20299, metadata !DIExpression()), !dbg !20300
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head, metadata !20301, metadata !DIExpression()), !dbg !20302
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !20303, metadata !DIExpression()), !dbg !20304
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tail, metadata !20305, metadata !DIExpression()), !dbg !20306
  call void @llvm.dbg.declare(metadata i8** %oldaddr, metadata !20307, metadata !DIExpression()), !dbg !20308
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !20309, metadata !DIExpression()), !dbg !20310
  call void @llvm.dbg.declare(metadata i8* %descend, metadata !20311, metadata !DIExpression()), !dbg !20312
  call void @llvm.dbg.declare(metadata i8* %doadjust, metadata !20313, metadata !DIExpression()), !dbg !20314
  call void @llvm.dbg.declare(metadata i64* %level, metadata !20315, metadata !DIExpression()), !dbg !20316
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20317, metadata !DIExpression()), !dbg !20318
  call void @llvm.dbg.declare(metadata i64* %maxlen, metadata !20319, metadata !DIExpression()), !dbg !20320
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !20321, metadata !DIExpression()), !dbg !20322
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !20323, metadata !DIExpression()), !dbg !20324
  call void @llvm.dbg.declare(metadata i32* %dir_fd, metadata !20325, metadata !DIExpression()), !dbg !20326
  call void @llvm.dbg.declare(metadata %struct._ftsent** %cur, metadata !20327, metadata !DIExpression()), !dbg !20328
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20329, !tbaa !2998
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !20330, !ctir !2338
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !20330, !tbaa !18719, !ctir !2325
  store %struct._ftsent* %1, %struct._ftsent** %cur, align 8, !dbg !20328, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %continue_readdir, metadata !20331, metadata !DIExpression()), !dbg !20332
  %2 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20333, !tbaa !2998
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 3, !dbg !20334, !ctir !2321
  %3 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !20334, !tbaa !2998, !ctir !609
  %tobool = icmp ne %struct.__dirstream* %3, null, !dbg !20335
  %lnot = xor i1 %tobool, true, !dbg !20335
  %lnot1 = xor i1 %lnot, true, !dbg !20336
  %frombool = zext i1 %lnot1 to i8, !dbg !20332
  store i8 %frombool, i8* %continue_readdir, align 1, !dbg !20332, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %sort_by_inode, metadata !20337, metadata !DIExpression()), !dbg !20338
  store i8 0, i8* %sort_by_inode, align 1, !dbg !20338, !tbaa !3109
  call void @llvm.dbg.declare(metadata i64* %max_entries, metadata !20339, metadata !DIExpression()), !dbg !20340
  %4 = load i8, i8* %continue_readdir, align 1, !dbg !20341, !tbaa !3109
  %tobool2 = trunc i8 %4 to i1, !dbg !20341
  br i1 %tobool2, label %if.then, label %if.else, !dbg !20343

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !20344, metadata !DIExpression()), !dbg !20346
  %5 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20347, !tbaa !2998
  %fts_dirp3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !20348, !ctir !2321
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp3, align 8, !dbg !20348, !tbaa !2998, !ctir !609
  store %struct.__dirstream* %6, %struct.__dirstream** %dp, align 8, !dbg !20346, !tbaa !2998
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20349, !tbaa !2998
  %call = call i32 @dirfd(%struct.__dirstream* %7) #10, !dbg !20350
  store i32 %call, i32* %dir_fd, align 4, !dbg !20351, !tbaa !2985
  %8 = load i32, i32* %dir_fd, align 4, !dbg !20352, !tbaa !2985
  %cmp = icmp slt i32 %8, 0, !dbg !20354
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !20355

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !20356

do.body:                                          ; preds = %if.then4
  %9 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20358, !tbaa !2998
  %fts_dirp5 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 3, !dbg !20358, !ctir !2321
  %10 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp5, align 8, !dbg !20358, !tbaa !2998, !ctir !609
  %call6 = call i32 @closedir(%struct.__dirstream* %10), !dbg !20358
  %11 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20358, !tbaa !2998
  %fts_dirp7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 3, !dbg !20358, !ctir !2321
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp7, align 8, !dbg !20358, !tbaa !2998, !ctir !609
  br label %do.end, !dbg !20358

do.end:                                           ; preds = %do.body
  %12 = load i32, i32* %type.addr, align 4, !dbg !20360, !tbaa !2985
  %cmp8 = icmp eq i32 %12, 3, !dbg !20362
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !20363

if.then9:                                         ; preds = %do.end
  %13 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20364, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 15, !dbg !20366, !ctir !2321
  store i16 4, i16* %fts_info, align 8, !dbg !20367, !tbaa !3813, !ctir !33
  %call10 = call i32* @__errno_location() #15, !dbg !20368
  %14 = load i32, i32* %call10, align 4, !dbg !20368, !tbaa !2985, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20369, !tbaa !2998
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !20370, !ctir !2321
  store i32 %14, i32* %fts_errno, align 8, !dbg !20371, !tbaa !2985, !ctir !7
  br label %if.end, !dbg !20372

if.end:                                           ; preds = %if.then9, %do.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20373
  br label %return, !dbg !20373

if.end11:                                         ; preds = %if.then
  br label %if.end58, !dbg !20374

if.else:                                          ; preds = %entry
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20375, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !20375, !ctir !2338
  %17 = load i32, i32* %fts_options, align 8, !dbg !20375, !tbaa !18131, !ctir !7
  %and = and i32 %17, 4, !dbg !20375
  %tobool12 = icmp ne i32 %and, 0, !dbg !20375
  br i1 %tobool12, label %cond.false, label %land.lhs.true, !dbg !20375

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20375, !tbaa !2998
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !20375, !ctir !2338
  %19 = load i32, i32* %fts_options13, align 8, !dbg !20375, !tbaa !18131, !ctir !7
  %and14 = and i32 %19, 512, !dbg !20375
  %tobool15 = icmp ne i32 %and14, 0, !dbg !20375
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !20375

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20375, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 6, !dbg !20375, !ctir !2338
  %21 = load i32, i32* %fts_cwd_fd, align 4, !dbg !20375, !tbaa !3826, !ctir !7
  br label %cond.end, !dbg !20375

cond.false:                                       ; preds = %land.lhs.true, %if.else
  br label %cond.end, !dbg !20375

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ -100, %cond.false ], !dbg !20375
  %22 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20375, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 6, !dbg !20375, !ctir !2321
  %23 = load i8*, i8** %fts_accpath, align 8, !dbg !20375, !tbaa !2998, !ctir !9
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20375, !tbaa !2998
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !20375, !ctir !2338
  %25 = load i32, i32* %fts_options16, align 8, !dbg !20375, !tbaa !18131, !ctir !7
  %and17 = and i32 %25, 16, !dbg !20375
  %tobool18 = icmp ne i32 %and17, 0, !dbg !20375
  br i1 %tobool18, label %land.rhs, label %land.end25, !dbg !20375

land.rhs:                                         ; preds = %cond.end
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20375, !tbaa !2998
  %fts_options19 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !20375, !ctir !2338
  %27 = load i32, i32* %fts_options19, align 8, !dbg !20375, !tbaa !18131, !ctir !7
  %and20 = and i32 %27, 1, !dbg !20375
  %tobool21 = icmp ne i32 %and20, 0, !dbg !20375
  br i1 %tobool21, label %land.rhs22, label %land.end, !dbg !20375

land.rhs22:                                       ; preds = %land.rhs
  %28 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20375, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !20375, !ctir !2321
  %29 = load i64, i64* %fts_level, align 8, !dbg !20375, !tbaa !3851, !ctir !568
  %cmp23 = icmp eq i64 %29, 0, !dbg !20375
  br label %land.end

land.end:                                         ; preds = %land.rhs22, %land.rhs
  %30 = phi i1 [ false, %land.rhs ], [ %cmp23, %land.rhs22 ], !dbg !20378
  %lnot24 = xor i1 %30, true, !dbg !20375
  br label %land.end25

land.end25:                                       ; preds = %land.end, %cond.end
  %31 = phi i1 [ false, %cond.end ], [ %lnot24, %land.end ], !dbg !20378
  %32 = zext i1 %31 to i64, !dbg !20375
  %cond26 = select i1 %31, i32 131072, i32 0, !dbg !20375
  %call27 = call %struct.__dirstream* @opendirat(i32 %cond, i8* %23, i32 %cond26, i32* %dir_fd), !dbg !20375
  %33 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20379, !tbaa !2998
  %fts_dirp28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 3, !dbg !20380, !ctir !2321
  store %struct.__dirstream* %call27, %struct.__dirstream** %fts_dirp28, align 8, !dbg !20381, !tbaa !2998, !ctir !609
  %cmp29 = icmp eq %struct.__dirstream* %call27, null, !dbg !20382
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !20383

if.then30:                                        ; preds = %land.end25
  %34 = load i32, i32* %type.addr, align 4, !dbg !20384, !tbaa !2985
  %cmp31 = icmp eq i32 %34, 3, !dbg !20387
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !20388

if.then32:                                        ; preds = %if.then30
  %35 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20389, !tbaa !2998
  %fts_info33 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 15, !dbg !20391, !ctir !2321
  store i16 4, i16* %fts_info33, align 8, !dbg !20392, !tbaa !3813, !ctir !33
  %call34 = call i32* @__errno_location() #15, !dbg !20393
  %36 = load i32, i32* %call34, align 4, !dbg !20393, !tbaa !2985, !ctir !7
  %37 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20394, !tbaa !2998
  %fts_errno35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 8, !dbg !20395, !ctir !2321
  store i32 %36, i32* %fts_errno35, align 8, !dbg !20396, !tbaa !2985, !ctir !7
  br label %if.end36, !dbg !20397

if.end36:                                         ; preds = %if.then32, %if.then30
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20398
  br label %return, !dbg !20398

if.end37:                                         ; preds = %land.end25
  %38 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20399, !tbaa !2998
  %fts_info38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 15, !dbg !20401, !ctir !2321
  %39 = load i16, i16* %fts_info38, align 8, !dbg !20401, !tbaa !3813, !ctir !33
  %conv = zext i16 %39 to i32, !dbg !20399
  %cmp39 = icmp eq i32 %conv, 11, !dbg !20402
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !20403

if.then41:                                        ; preds = %if.end37
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20404, !tbaa !2998
  %41 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20405, !tbaa !2998
  %call42 = call zeroext i16 @fts_stat(%struct.FTS* %40, %struct._ftsent* %41, i1 zeroext false), !dbg !20406
  %42 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20407, !tbaa !2998
  %fts_info43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 15, !dbg !20408, !ctir !2321
  store i16 %call42, i16* %fts_info43, align 8, !dbg !20409, !tbaa !3813, !ctir !33
  br label %if.end57, !dbg !20407

if.else44:                                        ; preds = %if.end37
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20410, !tbaa !2998
  %fts_options45 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 10, !dbg !20412, !ctir !2338
  %44 = load i32, i32* %fts_options45, align 8, !dbg !20412, !tbaa !18131, !ctir !7
  %and46 = and i32 %44, 256, !dbg !20413
  %tobool47 = icmp ne i32 %and46, 0, !dbg !20413
  br i1 %tobool47, label %if.then48, label %if.end56, !dbg !20414

if.then48:                                        ; preds = %if.else44
  br label %do.body49, !dbg !20415

do.body49:                                        ; preds = %if.then48
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20417, !tbaa !2998
  %46 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20417, !tbaa !2998
  call void @leave_dir(%struct.FTS* %45, %struct._ftsent* %46), !dbg !20417
  br label %do.end50, !dbg !20417

do.end50:                                         ; preds = %do.body49
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20419, !tbaa !2998
  %48 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20420, !tbaa !2998
  %call51 = call zeroext i16 @fts_stat(%struct.FTS* %47, %struct._ftsent* %48, i1 zeroext false), !dbg !20421
  %49 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20422, !tbaa !2998
  %50 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20424, !tbaa !2998
  %call52 = call zeroext i1 @enter_dir(%struct.FTS* %49, %struct._ftsent* %50), !dbg !20425
  br i1 %call52, label %if.end55, label %if.then53, !dbg !20426

if.then53:                                        ; preds = %do.end50
  %call54 = call i32* @__errno_location() #15, !dbg !20427
  store i32 12, i32* %call54, align 4, !dbg !20427, !tbaa !2985, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20429
  br label %return, !dbg !20429

if.end55:                                         ; preds = %do.end50
  br label %if.end56, !dbg !20430

if.end56:                                         ; preds = %if.end55, %if.else44
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end11
  %51 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20431, !tbaa !2998
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 9, !dbg !20432, !ctir !2338
  %52 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !20432, !tbaa !18508, !ctir !2352
  %tobool59 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %52, null, !dbg !20431
  %53 = zext i1 %tobool59 to i64, !dbg !20431
  %cond60 = select i1 %tobool59, i64 -1, i64 100000, !dbg !20431
  store i64 %cond60, i64* %max_entries, align 8, !dbg !20433, !tbaa !3851
  %54 = load i8, i8* %continue_readdir, align 1, !dbg !20434, !tbaa !3109
  %tobool61 = trunc i8 %54 to i1, !dbg !20434
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !20436

if.then62:                                        ; preds = %if.end58
  store i8 1, i8* %descend, align 1, !dbg !20437, !tbaa !3109
  br label %if.end135, !dbg !20439

if.else63:                                        ; preds = %if.end58
  %55 = load i32, i32* %type.addr, align 4, !dbg !20440, !tbaa !2985
  %cmp64 = icmp ne i32 %55, 2, !dbg !20442
  br i1 %cmp64, label %land.rhs66, label %land.end87, !dbg !20443

land.rhs66:                                       ; preds = %if.else63
  %56 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20444, !tbaa !2998
  %fts_options67 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 10, !dbg !20444, !ctir !2338
  %57 = load i32, i32* %fts_options67, align 8, !dbg !20444, !tbaa !18131, !ctir !7
  %and68 = and i32 %57, 8, !dbg !20444
  %tobool69 = icmp ne i32 %and68, 0, !dbg !20444
  br i1 %tobool69, label %land.lhs.true70, label %land.end85, !dbg !20445

land.lhs.true70:                                  ; preds = %land.rhs66
  %58 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20446, !tbaa !2998
  %fts_options71 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !20446, !ctir !2338
  %59 = load i32, i32* %fts_options71, align 8, !dbg !20446, !tbaa !18131, !ctir !7
  %and72 = and i32 %59, 16, !dbg !20446
  %tobool73 = icmp ne i32 %and72, 0, !dbg !20446
  br i1 %tobool73, label %land.lhs.true74, label %land.end85, !dbg !20447

land.lhs.true74:                                  ; preds = %land.lhs.true70
  %60 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20448, !tbaa !2998
  %fts_options75 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 10, !dbg !20448, !ctir !2338
  %61 = load i32, i32* %fts_options75, align 8, !dbg !20448, !tbaa !18131, !ctir !7
  %and76 = and i32 %61, 32, !dbg !20448
  %tobool77 = icmp ne i32 %and76, 0, !dbg !20448
  br i1 %tobool77, label %land.end85, label %land.lhs.true78, !dbg !20449

land.lhs.true78:                                  ; preds = %land.lhs.true74
  %62 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20450, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 18, !dbg !20451, !ctir !2321
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20452
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 2, !dbg !20452, !ctir !2393
  %63 = load i64, i64* %st_nlink, align 8, !dbg !20452, !tbaa !5430, !ctir !323
  %cmp79 = icmp eq i64 %63, 2, !dbg !20453
  br i1 %cmp79, label %land.rhs81, label %land.end85, !dbg !20454

land.rhs81:                                       ; preds = %land.lhs.true78
  %64 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20455, !tbaa !2998
  %65 = load i32, i32* %dir_fd, align 4, !dbg !20456, !tbaa !2985
  %call82 = call i32 @leaf_optimization(%struct._ftsent* %64, i32 %65), !dbg !20457
  %cmp83 = icmp ne i32 %call82, 0, !dbg !20458
  br label %land.end85

land.end85:                                       ; preds = %land.rhs81, %land.lhs.true78, %land.lhs.true74, %land.lhs.true70, %land.rhs66
  %66 = phi i1 [ false, %land.lhs.true78 ], [ false, %land.lhs.true74 ], [ false, %land.lhs.true70 ], [ false, %land.rhs66 ], [ %cmp83, %land.rhs81 ], !dbg !20459
  %lnot86 = xor i1 %66, true, !dbg !20460
  br label %land.end87

land.end87:                                       ; preds = %land.end85, %if.else63
  %67 = phi i1 [ false, %if.else63 ], [ %lnot86, %land.end85 ], !dbg !20459
  %frombool88 = zext i1 %67 to i8, !dbg !20461
  store i8 %frombool88, i8* %descend, align 1, !dbg !20461, !tbaa !3109
  %68 = load i8, i8* %descend, align 1, !dbg !20462, !tbaa !3109
  %tobool89 = trunc i8 %68 to i1, !dbg !20462
  br i1 %tobool89, label %if.then93, label %lor.lhs.false, !dbg !20464

lor.lhs.false:                                    ; preds = %land.end87
  %69 = load i32, i32* %type.addr, align 4, !dbg !20465, !tbaa !2985
  %cmp91 = icmp eq i32 %69, 3, !dbg !20466
  br i1 %cmp91, label %if.then93, label %if.end134, !dbg !20467

if.then93:                                        ; preds = %lor.lhs.false, %land.end87
  %70 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20468, !tbaa !2998
  %fts_options94 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !20468, !ctir !2338
  %71 = load i32, i32* %fts_options94, align 8, !dbg !20468, !tbaa !18131, !ctir !7
  %and95 = and i32 %71, 512, !dbg !20468
  %tobool96 = icmp ne i32 %and95, 0, !dbg !20468
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !20471

if.then97:                                        ; preds = %if.then93
  %72 = load i32, i32* %dir_fd, align 4, !dbg !20472, !tbaa !2985
  %call98 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %72, i32 1030, i32 3), !dbg !20473
  store i32 %call98, i32* %dir_fd, align 4, !dbg !20474, !tbaa !2985
  br label %if.end99, !dbg !20475

if.end99:                                         ; preds = %if.then97, %if.then93
  %73 = load i32, i32* %dir_fd, align 4, !dbg !20476, !tbaa !2985
  %cmp100 = icmp slt i32 %73, 0, !dbg !20478
  br i1 %cmp100, label %if.then105, label %lor.lhs.false102, !dbg !20479

lor.lhs.false102:                                 ; preds = %if.end99
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20480, !tbaa !2998
  %75 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20481, !tbaa !2998
  %76 = load i32, i32* %dir_fd, align 4, !dbg !20482, !tbaa !2985
  %call103 = call i32 @fts_safe_changedir(%struct.FTS* %74, %struct._ftsent* %75, i32 %76, i8* null), !dbg !20483
  %tobool104 = icmp ne i32 %call103, 0, !dbg !20483
  br i1 %tobool104, label %if.then105, label %if.else132, !dbg !20484

if.then105:                                       ; preds = %lor.lhs.false102, %if.end99
  %77 = load i8, i8* %descend, align 1, !dbg !20485, !tbaa !3109
  %tobool106 = trunc i8 %77 to i1, !dbg !20485
  br i1 %tobool106, label %land.lhs.true108, label %if.end114, !dbg !20488

land.lhs.true108:                                 ; preds = %if.then105
  %78 = load i32, i32* %type.addr, align 4, !dbg !20489, !tbaa !2985
  %cmp109 = icmp eq i32 %78, 3, !dbg !20490
  br i1 %cmp109, label %if.then111, label %if.end114, !dbg !20491

if.then111:                                       ; preds = %land.lhs.true108
  %call112 = call i32* @__errno_location() #15, !dbg !20492
  %79 = load i32, i32* %call112, align 4, !dbg !20492, !tbaa !2985, !ctir !7
  %80 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20493, !tbaa !2998
  %fts_errno113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 8, !dbg !20494, !ctir !2321
  store i32 %79, i32* %fts_errno113, align 8, !dbg !20495, !tbaa !2985, !ctir !7
  br label %if.end114, !dbg !20493

if.end114:                                        ; preds = %if.then111, %land.lhs.true108, %if.then105
  %81 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20496, !tbaa !2998
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 16, !dbg !20497, !ctir !2321
  %82 = load i16, i16* %fts_flags, align 2, !dbg !20498, !tbaa !3813, !ctir !33
  %conv115 = zext i16 %82 to i32, !dbg !20498
  %or = or i32 %conv115, 1, !dbg !20498
  %conv116 = trunc i32 %or to i16, !dbg !20498
  store i16 %conv116, i16* %fts_flags, align 2, !dbg !20498, !tbaa !3813, !ctir !33
  store i8 0, i8* %descend, align 1, !dbg !20499, !tbaa !3109
  br label %do.body117, !dbg !20500

do.body117:                                       ; preds = %if.end114
  %83 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20501, !tbaa !2998
  %fts_dirp118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 3, !dbg !20501, !ctir !2321
  %84 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp118, align 8, !dbg !20501, !tbaa !2998, !ctir !609
  %call119 = call i32 @closedir(%struct.__dirstream* %84), !dbg !20501
  %85 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20501, !tbaa !2998
  %fts_dirp120 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 3, !dbg !20501, !ctir !2321
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp120, align 8, !dbg !20501, !tbaa !2998, !ctir !609
  br label %do.end121, !dbg !20501

do.end121:                                        ; preds = %do.body117
  %86 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20503, !tbaa !2998
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 10, !dbg !20503, !ctir !2338
  %87 = load i32, i32* %fts_options122, align 8, !dbg !20503, !tbaa !18131, !ctir !7
  %and123 = and i32 %87, 512, !dbg !20503
  %tobool124 = icmp ne i32 %and123, 0, !dbg !20503
  br i1 %tobool124, label %land.lhs.true125, label %if.end130, !dbg !20505

land.lhs.true125:                                 ; preds = %do.end121
  %88 = load i32, i32* %dir_fd, align 4, !dbg !20506, !tbaa !2985
  %cmp126 = icmp sle i32 0, %88, !dbg !20507
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !20508

if.then128:                                       ; preds = %land.lhs.true125
  %89 = load i32, i32* %dir_fd, align 4, !dbg !20509, !tbaa !2985
  %call129 = call i32 @close(i32 %89), !dbg !20510
  br label %if.end130, !dbg !20510

if.end130:                                        ; preds = %if.then128, %land.lhs.true125, %do.end121
  %90 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20511, !tbaa !2998
  %fts_dirp131 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %90, i32 0, i32 3, !dbg !20512, !ctir !2321
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp131, align 8, !dbg !20513, !tbaa !2998, !ctir !609
  br label %if.end133, !dbg !20514

if.else132:                                       ; preds = %lor.lhs.false102
  store i8 1, i8* %descend, align 1, !dbg !20515, !tbaa !3109
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.end130
  br label %if.end134, !dbg !20516

if.end134:                                        ; preds = %if.end133, %lor.lhs.false
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then62
  %91 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20517, !tbaa !2998
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 7, !dbg !20517, !ctir !2321
  %92 = load i8*, i8** %fts_path, align 8, !dbg !20517, !tbaa !2998, !ctir !9
  %93 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20517, !tbaa !2998
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 10, !dbg !20517, !ctir !2321
  %94 = load i64, i64* %fts_pathlen, align 8, !dbg !20517, !tbaa !3851, !ctir !55
  %sub = sub i64 %94, 1, !dbg !20517
  %arrayidx = getelementptr inbounds i8, i8* %92, i64 %sub, !dbg !20517, !ctir !9
  %95 = load i8, i8* %arrayidx, align 1, !dbg !20517, !tbaa !3660
  %conv136 = sext i8 %95 to i32, !dbg !20517
  %cmp137 = icmp eq i32 %conv136, 47, !dbg !20517
  br i1 %cmp137, label %cond.true139, label %cond.false142, !dbg !20517

cond.true139:                                     ; preds = %if.end135
  %96 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20517, !tbaa !2998
  %fts_pathlen140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 10, !dbg !20517, !ctir !2321
  %97 = load i64, i64* %fts_pathlen140, align 8, !dbg !20517, !tbaa !3851, !ctir !55
  %sub141 = sub i64 %97, 1, !dbg !20517
  br label %cond.end144, !dbg !20517

cond.false142:                                    ; preds = %if.end135
  %98 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20517, !tbaa !2998
  %fts_pathlen143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 10, !dbg !20517, !ctir !2321
  %99 = load i64, i64* %fts_pathlen143, align 8, !dbg !20517, !tbaa !3851, !ctir !55
  br label %cond.end144, !dbg !20517

cond.end144:                                      ; preds = %cond.false142, %cond.true139
  %cond145 = phi i64 [ %sub141, %cond.true139 ], [ %99, %cond.false142 ], !dbg !20517
  store i64 %cond145, i64* %len, align 8, !dbg !20518, !tbaa !3851
  %100 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20519, !tbaa !2998
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !20519, !ctir !2338
  %101 = load i32, i32* %fts_options146, align 8, !dbg !20519, !tbaa !18131, !ctir !7
  %and147 = and i32 %101, 4, !dbg !20519
  %tobool148 = icmp ne i32 %and147, 0, !dbg !20519
  br i1 %tobool148, label %if.then149, label %if.else151, !dbg !20521

if.then149:                                       ; preds = %cond.end144
  %102 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20522, !tbaa !2998
  %fts_path150 = getelementptr inbounds %struct.FTS, %struct.FTS* %102, i32 0, i32 4, !dbg !20524, !ctir !2338
  %103 = load i8*, i8** %fts_path150, align 8, !dbg !20524, !tbaa !18770, !ctir !9
  %104 = load i64, i64* %len, align 8, !dbg !20525, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %103, i64 %104, !dbg !20526
  store i8* %add.ptr, i8** %cp, align 8, !dbg !20527, !tbaa !2998
  %105 = load i8*, i8** %cp, align 8, !dbg !20528, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %105, i32 1, !dbg !20528
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20528, !tbaa !2998
  store i8 47, i8* %105, align 1, !dbg !20529, !tbaa !3660, !ctir !10
  br label %if.end152, !dbg !20530

if.else151:                                       ; preds = %cond.end144
  store i8* null, i8** %cp, align 8, !dbg !20531, !tbaa !2998
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then149
  %106 = load i64, i64* %len, align 8, !dbg !20533, !tbaa !3851
  %inc = add i64 %106, 1, !dbg !20533
  store i64 %inc, i64* %len, align 8, !dbg !20533, !tbaa !3851
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20534, !tbaa !2998
  %fts_pathlen153 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 7, !dbg !20535, !ctir !2338
  %108 = load i64, i64* %fts_pathlen153, align 8, !dbg !20535, !tbaa !18821, !ctir !55
  %109 = load i64, i64* %len, align 8, !dbg !20536, !tbaa !3851
  %sub154 = sub i64 %108, %109, !dbg !20537
  store i64 %sub154, i64* %maxlen, align 8, !dbg !20538, !tbaa !3851
  %110 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20539, !tbaa !2998
  %fts_level155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 12, !dbg !20540, !ctir !2321
  %111 = load i64, i64* %fts_level155, align 8, !dbg !20540, !tbaa !3851, !ctir !568
  %add = add nsw i64 %111, 1, !dbg !20541
  store i64 %add, i64* %level, align 8, !dbg !20542, !tbaa !3851
  store i8 0, i8* %doadjust, align 1, !dbg !20543, !tbaa !3109
  store %struct._ftsent* null, %struct._ftsent** %head, align 8, !dbg !20544, !tbaa !2998
  store %struct._ftsent* null, %struct._ftsent** %tail, align 8, !dbg !20545, !tbaa !2998
  store i64 0, i64* %nitems, align 8, !dbg !20546, !tbaa !3851
  br label %while.cond, !dbg !20547

while.cond:                                       ; preds = %if.end334, %if.then200, %if.end152
  %112 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20548, !tbaa !2998
  %fts_dirp156 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 3, !dbg !20549, !ctir !2321
  %113 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp156, align 8, !dbg !20549, !tbaa !2998, !ctir !609
  %tobool157 = icmp ne %struct.__dirstream* %113, null, !dbg !20547
  br i1 %tobool157, label %while.body, label %while.end, !dbg !20547

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %d_namelen, metadata !20550, metadata !DIExpression()), !dbg !20552
  %call158 = call i32* @__errno_location() #15, !dbg !20553
  store i32 0, i32* %call158, align 4, !dbg !20553, !tbaa !2985, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp159, metadata !20554, metadata !DIExpression()), !dbg !20555
  %114 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20556, !tbaa !2998
  %fts_dirp160 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 3, !dbg !20557, !ctir !2321
  %115 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp160, align 8, !dbg !20557, !tbaa !2998, !ctir !609
  %call161 = call %struct.dirent* @readdir(%struct.__dirstream* %115), !dbg !20558
  store %struct.dirent* %call161, %struct.dirent** %dp159, align 8, !dbg !20555, !tbaa !2998
  %116 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20559, !tbaa !2998
  %cmp162 = icmp eq %struct.dirent* %116, null, !dbg !20561
  br i1 %cmp162, label %if.then164, label %if.end177, !dbg !20562

if.then164:                                       ; preds = %while.body
  %call165 = call i32* @__errno_location() #15, !dbg !20563
  %117 = load i32, i32* %call165, align 4, !dbg !20563, !tbaa !2985, !ctir !7
  %tobool166 = icmp ne i32 %117, 0, !dbg !20563
  br i1 %tobool166, label %if.then167, label %if.end176, !dbg !20566

if.then167:                                       ; preds = %if.then164
  %call168 = call i32* @__errno_location() #15, !dbg !20567
  %118 = load i32, i32* %call168, align 4, !dbg !20567, !tbaa !2985, !ctir !7
  %119 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20569, !tbaa !2998
  %fts_errno169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 8, !dbg !20570, !ctir !2321
  store i32 %118, i32* %fts_errno169, align 8, !dbg !20571, !tbaa !2985, !ctir !7
  %120 = load i8, i8* %continue_readdir, align 1, !dbg !20572, !tbaa !3109
  %tobool170 = trunc i8 %120 to i1, !dbg !20572
  br i1 %tobool170, label %lor.end, label %lor.rhs, !dbg !20573

lor.rhs:                                          ; preds = %if.then167
  %121 = load i64, i64* %nitems, align 8, !dbg !20574, !tbaa !3851
  %tobool172 = icmp ne i64 %121, 0, !dbg !20573
  br label %lor.end, !dbg !20573

lor.end:                                          ; preds = %lor.rhs, %if.then167
  %122 = phi i1 [ true, %if.then167 ], [ %tobool172, %lor.rhs ]
  %123 = zext i1 %122 to i64, !dbg !20575
  %cond173 = select i1 %122, i32 7, i32 4, !dbg !20575
  %conv174 = trunc i32 %cond173 to i16, !dbg !20575
  %124 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20576, !tbaa !2998
  %fts_info175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %124, i32 0, i32 15, !dbg !20577, !ctir !2321
  store i16 %conv174, i16* %fts_info175, align 8, !dbg !20578, !tbaa !3813, !ctir !33
  br label %if.end176, !dbg !20579

if.end176:                                        ; preds = %lor.end, %if.then164
  br label %while.end, !dbg !20580

if.end177:                                        ; preds = %while.body
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20581, !tbaa !2998
  %fts_options178 = getelementptr inbounds %struct.FTS, %struct.FTS* %125, i32 0, i32 10, !dbg !20581, !ctir !2338
  %126 = load i32, i32* %fts_options178, align 8, !dbg !20581, !tbaa !18131, !ctir !7
  %and179 = and i32 %126, 32, !dbg !20581
  %tobool180 = icmp ne i32 %and179, 0, !dbg !20581
  br i1 %tobool180, label %if.end201, label %land.lhs.true181, !dbg !20583

land.lhs.true181:                                 ; preds = %if.end177
  %127 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20584, !tbaa !2998
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %127, i32 0, i32 4, !dbg !20584, !ctir !2475
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !20584, !ctir !561
  %128 = load i8, i8* %arrayidx182, align 1, !dbg !20584, !tbaa !3660
  %conv183 = sext i8 %128 to i32, !dbg !20584
  %cmp184 = icmp eq i32 %conv183, 46, !dbg !20584
  br i1 %cmp184, label %land.lhs.true186, label %if.end201, !dbg !20584

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %129 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20584, !tbaa !2998
  %d_name187 = getelementptr inbounds %struct.dirent, %struct.dirent* %129, i32 0, i32 4, !dbg !20584, !ctir !2475
  %arrayidx188 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name187, i64 0, i64 1, !dbg !20584, !ctir !561
  %130 = load i8, i8* %arrayidx188, align 1, !dbg !20584, !tbaa !3660
  %tobool189 = icmp ne i8 %130, 0, !dbg !20584
  br i1 %tobool189, label %lor.lhs.false190, label %if.then200, !dbg !20584

lor.lhs.false190:                                 ; preds = %land.lhs.true186
  %131 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20584, !tbaa !2998
  %d_name191 = getelementptr inbounds %struct.dirent, %struct.dirent* %131, i32 0, i32 4, !dbg !20584, !ctir !2475
  %arrayidx192 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name191, i64 0, i64 1, !dbg !20584, !ctir !561
  %132 = load i8, i8* %arrayidx192, align 1, !dbg !20584, !tbaa !3660
  %conv193 = sext i8 %132 to i32, !dbg !20584
  %cmp194 = icmp eq i32 %conv193, 46, !dbg !20584
  br i1 %cmp194, label %land.lhs.true196, label %if.end201, !dbg !20584

land.lhs.true196:                                 ; preds = %lor.lhs.false190
  %133 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20584, !tbaa !2998
  %d_name197 = getelementptr inbounds %struct.dirent, %struct.dirent* %133, i32 0, i32 4, !dbg !20584, !ctir !2475
  %arrayidx198 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name197, i64 0, i64 2, !dbg !20584, !ctir !561
  %134 = load i8, i8* %arrayidx198, align 1, !dbg !20584, !tbaa !3660
  %tobool199 = icmp ne i8 %134, 0, !dbg !20584
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !20585

if.then200:                                       ; preds = %land.lhs.true196, %land.lhs.true186
  br label %while.cond, !dbg !20586, !llvm.loop !20587

if.end201:                                        ; preds = %land.lhs.true196, %lor.lhs.false190, %land.lhs.true181, %if.end177
  %135 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20589, !tbaa !2998
  %d_name202 = getelementptr inbounds %struct.dirent, %struct.dirent* %135, i32 0, i32 4, !dbg !20589, !ctir !2475
  %arraydecay203 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name202, i64 0, i64 0, !dbg !20589
  %call204 = call i64 @strlen(i8* %arraydecay203) #14, !dbg !20589
  store i64 %call204, i64* %d_namelen, align 8, !dbg !20590, !tbaa !3851
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20591, !tbaa !2998
  %137 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20592, !tbaa !2998
  %d_name205 = getelementptr inbounds %struct.dirent, %struct.dirent* %137, i32 0, i32 4, !dbg !20593, !ctir !2475
  %arraydecay206 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name205, i64 0, i64 0, !dbg !20592
  %138 = load i64, i64* %d_namelen, align 8, !dbg !20594, !tbaa !3851
  %call207 = call %struct._ftsent* @fts_alloc(%struct.FTS* %136, i8* %arraydecay206, i64 %138), !dbg !20595
  store %struct._ftsent* %call207, %struct._ftsent** %p, align 8, !dbg !20596, !tbaa !2998
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20597, !tbaa !2998
  %tobool208 = icmp ne %struct._ftsent* %139, null, !dbg !20597
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !20599

if.then209:                                       ; preds = %if.end201
  br label %mem1, !dbg !20600

if.end210:                                        ; preds = %if.end201
  %140 = load i64, i64* %d_namelen, align 8, !dbg !20601, !tbaa !3851
  %141 = load i64, i64* %maxlen, align 8, !dbg !20603, !tbaa !3851
  %cmp211 = icmp uge i64 %140, %141, !dbg !20604
  br i1 %cmp211, label %if.then213, label %if.end244, !dbg !20605

if.then213:                                       ; preds = %if.end210
  %142 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20606, !tbaa !2998
  %fts_path214 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 4, !dbg !20608, !ctir !2338
  %143 = load i8*, i8** %fts_path214, align 8, !dbg !20608, !tbaa !18770, !ctir !9
  store i8* %143, i8** %oldaddr, align 8, !dbg !20609, !tbaa !2998
  %144 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20610, !tbaa !2998
  %145 = load i64, i64* %d_namelen, align 8, !dbg !20612, !tbaa !3851
  %146 = load i64, i64* %len, align 8, !dbg !20613, !tbaa !3851
  %add215 = add i64 %145, %146, !dbg !20614
  %add216 = add i64 %add215, 1, !dbg !20615
  %call217 = call zeroext i1 @fts_palloc(%struct.FTS* %144, i64 %add216), !dbg !20616
  br i1 %call217, label %if.end229, label %if.then218, !dbg !20617

if.then218:                                       ; preds = %if.then213
  br label %mem1, !dbg !20618

mem1:                                             ; preds = %if.then218, %if.then209
  call void @llvm.dbg.label(metadata !20619), !dbg !20621
  %call219 = call i32* @__errno_location() #15, !dbg !20622
  %147 = load i32, i32* %call219, align 4, !dbg !20622, !tbaa !2985, !ctir !7
  store i32 %147, i32* %saved_errno, align 4, !dbg !20623, !tbaa !2985
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20624, !tbaa !2998
  %149 = bitcast %struct._ftsent* %148 to i8*, !dbg !20624
  call void @free(i8* %149) #10, !dbg !20625
  %150 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20626, !tbaa !2998
  call void @fts_lfree(%struct._ftsent* %150), !dbg !20627
  br label %do.body220, !dbg !20628

do.body220:                                       ; preds = %mem1
  %151 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20629, !tbaa !2998
  %fts_dirp221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %151, i32 0, i32 3, !dbg !20629, !ctir !2321
  %152 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp221, align 8, !dbg !20629, !tbaa !2998, !ctir !609
  %call222 = call i32 @closedir(%struct.__dirstream* %152), !dbg !20629
  %153 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20629, !tbaa !2998
  %fts_dirp223 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 3, !dbg !20629, !ctir !2321
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp223, align 8, !dbg !20629, !tbaa !2998, !ctir !609
  br label %do.end224, !dbg !20629

do.end224:                                        ; preds = %do.body220
  %154 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20631, !tbaa !2998
  %fts_info225 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 15, !dbg !20632, !ctir !2321
  store i16 7, i16* %fts_info225, align 8, !dbg !20633, !tbaa !3813, !ctir !33
  %155 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20634, !tbaa !2998
  %fts_options226 = getelementptr inbounds %struct.FTS, %struct.FTS* %155, i32 0, i32 10, !dbg !20634, !ctir !2338
  %156 = load i32, i32* %fts_options226, align 8, !dbg !20634, !tbaa !18131, !ctir !7
  %or227 = or i32 %156, 8192, !dbg !20634
  store i32 %or227, i32* %fts_options226, align 8, !dbg !20634, !tbaa !18131, !ctir !7
  %157 = load i32, i32* %saved_errno, align 4, !dbg !20635, !tbaa !2985
  %call228 = call i32* @__errno_location() #15, !dbg !20635
  store i32 %157, i32* %call228, align 4, !dbg !20635, !tbaa !2985, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20636
  br label %return, !dbg !20636

if.end229:                                        ; preds = %if.then213
  %158 = load i8*, i8** %oldaddr, align 8, !dbg !20637, !tbaa !2998
  %159 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20639, !tbaa !2998
  %fts_path230 = getelementptr inbounds %struct.FTS, %struct.FTS* %159, i32 0, i32 4, !dbg !20640, !ctir !2338
  %160 = load i8*, i8** %fts_path230, align 8, !dbg !20640, !tbaa !18770, !ctir !9
  %cmp231 = icmp ne i8* %158, %160, !dbg !20641
  br i1 %cmp231, label %if.then233, label %if.end241, !dbg !20642

if.then233:                                       ; preds = %if.end229
  store i8 1, i8* %doadjust, align 1, !dbg !20643, !tbaa !3109
  %161 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20645, !tbaa !2998
  %fts_options234 = getelementptr inbounds %struct.FTS, %struct.FTS* %161, i32 0, i32 10, !dbg !20645, !ctir !2338
  %162 = load i32, i32* %fts_options234, align 8, !dbg !20645, !tbaa !18131, !ctir !7
  %and235 = and i32 %162, 4, !dbg !20645
  %tobool236 = icmp ne i32 %and235, 0, !dbg !20645
  br i1 %tobool236, label %if.then237, label %if.end240, !dbg !20647

if.then237:                                       ; preds = %if.then233
  %163 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20648, !tbaa !2998
  %fts_path238 = getelementptr inbounds %struct.FTS, %struct.FTS* %163, i32 0, i32 4, !dbg !20649, !ctir !2338
  %164 = load i8*, i8** %fts_path238, align 8, !dbg !20649, !tbaa !18770, !ctir !9
  %165 = load i64, i64* %len, align 8, !dbg !20650, !tbaa !3851
  %add.ptr239 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !20651
  store i8* %add.ptr239, i8** %cp, align 8, !dbg !20652, !tbaa !2998
  br label %if.end240, !dbg !20653

if.end240:                                        ; preds = %if.then237, %if.then233
  br label %if.end241, !dbg !20654

if.end241:                                        ; preds = %if.end240, %if.end229
  %166 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20655, !tbaa !2998
  %fts_pathlen242 = getelementptr inbounds %struct.FTS, %struct.FTS* %166, i32 0, i32 7, !dbg !20656, !ctir !2338
  %167 = load i64, i64* %fts_pathlen242, align 8, !dbg !20656, !tbaa !18821, !ctir !55
  %168 = load i64, i64* %len, align 8, !dbg !20657, !tbaa !3851
  %sub243 = sub i64 %167, %168, !dbg !20658
  store i64 %sub243, i64* %maxlen, align 8, !dbg !20659, !tbaa !3851
  br label %if.end244, !dbg !20660

if.end244:                                        ; preds = %if.end241, %if.end210
  %169 = load i64, i64* %len, align 8, !dbg !20661, !tbaa !3851
  %170 = load i64, i64* %d_namelen, align 8, !dbg !20662, !tbaa !3851
  %add245 = add i64 %169, %170, !dbg !20663
  store i64 %add245, i64* %new_len, align 8, !dbg !20664, !tbaa !3851
  %171 = load i64, i64* %new_len, align 8, !dbg !20665, !tbaa !3851
  %172 = load i64, i64* %len, align 8, !dbg !20667, !tbaa !3851
  %cmp246 = icmp ult i64 %171, %172, !dbg !20668
  br i1 %cmp246, label %if.then248, label %if.end258, !dbg !20669

if.then248:                                       ; preds = %if.end244
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20670, !tbaa !2998
  %174 = bitcast %struct._ftsent* %173 to i8*, !dbg !20670
  call void @free(i8* %174) #10, !dbg !20672
  %175 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20673, !tbaa !2998
  call void @fts_lfree(%struct._ftsent* %175), !dbg !20674
  br label %do.body249, !dbg !20675

do.body249:                                       ; preds = %if.then248
  %176 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20676, !tbaa !2998
  %fts_dirp250 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %176, i32 0, i32 3, !dbg !20676, !ctir !2321
  %177 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp250, align 8, !dbg !20676, !tbaa !2998, !ctir !609
  %call251 = call i32 @closedir(%struct.__dirstream* %177), !dbg !20676
  %178 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20676, !tbaa !2998
  %fts_dirp252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %178, i32 0, i32 3, !dbg !20676, !ctir !2321
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp252, align 8, !dbg !20676, !tbaa !2998, !ctir !609
  br label %do.end253, !dbg !20676

do.end253:                                        ; preds = %do.body249
  %179 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20678, !tbaa !2998
  %fts_info254 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 15, !dbg !20679, !ctir !2321
  store i16 7, i16* %fts_info254, align 8, !dbg !20680, !tbaa !3813, !ctir !33
  %180 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20681, !tbaa !2998
  %fts_options255 = getelementptr inbounds %struct.FTS, %struct.FTS* %180, i32 0, i32 10, !dbg !20681, !ctir !2338
  %181 = load i32, i32* %fts_options255, align 8, !dbg !20681, !tbaa !18131, !ctir !7
  %or256 = or i32 %181, 8192, !dbg !20681
  store i32 %or256, i32* %fts_options255, align 8, !dbg !20681, !tbaa !18131, !ctir !7
  %call257 = call i32* @__errno_location() #15, !dbg !20682
  store i32 36, i32* %call257, align 4, !dbg !20682, !tbaa !2985, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20683
  br label %return, !dbg !20683

if.end258:                                        ; preds = %if.end244
  %182 = load i64, i64* %level, align 8, !dbg !20684, !tbaa !3851
  %183 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20685, !tbaa !2998
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %183, i32 0, i32 12, !dbg !20686, !ctir !2321
  store i64 %182, i64* %fts_level259, align 8, !dbg !20687, !tbaa !3851, !ctir !568
  %184 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20688, !tbaa !2998
  %fts_cur260 = getelementptr inbounds %struct.FTS, %struct.FTS* %184, i32 0, i32 0, !dbg !20689, !ctir !2338
  %185 = load %struct._ftsent*, %struct._ftsent** %fts_cur260, align 8, !dbg !20689, !tbaa !18719, !ctir !2325
  %186 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20690, !tbaa !2998
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %186, i32 0, i32 1, !dbg !20691, !ctir !2321
  store %struct._ftsent* %185, %struct._ftsent** %fts_parent, align 8, !dbg !20692, !tbaa !2998, !ctir !2325
  %187 = load i64, i64* %new_len, align 8, !dbg !20693, !tbaa !3851
  %188 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20694, !tbaa !2998
  %fts_pathlen261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 10, !dbg !20695, !ctir !2321
  store i64 %187, i64* %fts_pathlen261, align 8, !dbg !20696, !tbaa !3851, !ctir !55
  %189 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20697, !tbaa !2998
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %189, i32 0, i32 0, !dbg !20697, !ctir !2475
  %190 = load i64, i64* %d_ino, align 8, !dbg !20697, !tbaa !15763, !ctir !228
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20698, !tbaa !2998
  %fts_statp262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !20699, !ctir !2321
  %arraydecay263 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp262, i64 0, i64 0, !dbg !20700
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay263, i32 0, i32 1, !dbg !20700, !ctir !2393
  store i64 %190, i64* %st_ino, align 8, !dbg !20701, !tbaa !3873, !ctir !228
  %192 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20702, !tbaa !2998
  %fts_options264 = getelementptr inbounds %struct.FTS, %struct.FTS* %192, i32 0, i32 10, !dbg !20702, !ctir !2338
  %193 = load i32, i32* %fts_options264, align 8, !dbg !20702, !tbaa !18131, !ctir !7
  %and265 = and i32 %193, 4, !dbg !20702
  %tobool266 = icmp ne i32 %and265, 0, !dbg !20702
  br i1 %tobool266, label %if.then267, label %if.else272, !dbg !20704

if.then267:                                       ; preds = %if.end258
  %194 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20705, !tbaa !2998
  %fts_path268 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %194, i32 0, i32 7, !dbg !20707, !ctir !2321
  %195 = load i8*, i8** %fts_path268, align 8, !dbg !20707, !tbaa !2998, !ctir !9
  %196 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20708, !tbaa !2998
  %fts_accpath269 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %196, i32 0, i32 6, !dbg !20709, !ctir !2321
  store i8* %195, i8** %fts_accpath269, align 8, !dbg !20710, !tbaa !2998, !ctir !9
  %197 = load i8*, i8** %cp, align 8, !dbg !20711, !tbaa !2998
  %198 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20712, !tbaa !2998
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %198, i32 0, i32 19, !dbg !20713, !ctir !2321
  %arraydecay270 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20714
  %199 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20715, !tbaa !2998
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 13, !dbg !20716, !ctir !2321
  %200 = load i64, i64* %fts_namelen, align 8, !dbg !20716, !tbaa !3851, !ctir !55
  %add271 = add i64 %200, 1, !dbg !20717
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 8 %arraydecay270, i64 %add271, i1 false), !dbg !20714
  br label %if.end276, !dbg !20718

if.else272:                                       ; preds = %if.end258
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20719, !tbaa !2998
  %fts_name273 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 19, !dbg !20720, !ctir !2321
  %arraydecay274 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name273, i64 0, i64 0, !dbg !20719
  %202 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20721, !tbaa !2998
  %fts_accpath275 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %202, i32 0, i32 6, !dbg !20722, !ctir !2321
  store i8* %arraydecay274, i8** %fts_accpath275, align 8, !dbg !20723, !tbaa !2998, !ctir !9
  br label %if.end276

if.end276:                                        ; preds = %if.else272, %if.then267
  %203 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20724, !tbaa !2998
  %fts_compar277 = getelementptr inbounds %struct.FTS, %struct.FTS* %203, i32 0, i32 9, !dbg !20726, !ctir !2338
  %204 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar277, align 8, !dbg !20726, !tbaa !18508, !ctir !2352
  %cmp278 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %204, null, !dbg !20727
  br i1 %cmp278, label %if.then284, label %lor.lhs.false280, !dbg !20728

lor.lhs.false280:                                 ; preds = %if.end276
  %205 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20729, !tbaa !2998
  %fts_options281 = getelementptr inbounds %struct.FTS, %struct.FTS* %205, i32 0, i32 10, !dbg !20729, !ctir !2338
  %206 = load i32, i32* %fts_options281, align 8, !dbg !20729, !tbaa !18131, !ctir !7
  %and282 = and i32 %206, 1024, !dbg !20729
  %tobool283 = icmp ne i32 %and282, 0, !dbg !20729
  br i1 %tobool283, label %if.then284, label %if.else311, !dbg !20730

if.then284:                                       ; preds = %lor.lhs.false280, %if.end276
  call void @llvm.dbg.declare(metadata i8* %skip_stat, metadata !20731, metadata !DIExpression()), !dbg !20733
  %207 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20734, !tbaa !2998
  %fts_options285 = getelementptr inbounds %struct.FTS, %struct.FTS* %207, i32 0, i32 10, !dbg !20734, !ctir !2338
  %208 = load i32, i32* %fts_options285, align 8, !dbg !20734, !tbaa !18131, !ctir !7
  %and286 = and i32 %208, 16, !dbg !20734
  %tobool287 = icmp ne i32 %and286, 0, !dbg !20734
  br i1 %tobool287, label %land.lhs.true288, label %land.end302, !dbg !20735

land.lhs.true288:                                 ; preds = %if.then284
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20736, !tbaa !2998
  %fts_options289 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 10, !dbg !20736, !ctir !2338
  %210 = load i32, i32* %fts_options289, align 8, !dbg !20736, !tbaa !18131, !ctir !7
  %and290 = and i32 %210, 8, !dbg !20736
  %tobool291 = icmp ne i32 %and290, 0, !dbg !20736
  br i1 %tobool291, label %land.lhs.true292, label %land.end302, !dbg !20737

land.lhs.true292:                                 ; preds = %land.lhs.true288
  %211 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20738, !tbaa !2998
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %211, i32 0, i32 3, !dbg !20738, !ctir !2475
  %212 = load i8, i8* %d_type, align 2, !dbg !20738, !tbaa !20739, !ctir !468
  %conv293 = zext i8 %212 to i32, !dbg !20738
  %cmp294 = icmp ne i32 %conv293, 0, !dbg !20738
  br i1 %cmp294, label %land.rhs296, label %land.end302, !dbg !20740

land.rhs296:                                      ; preds = %land.lhs.true292
  %213 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20741, !tbaa !2998
  %d_type297 = getelementptr inbounds %struct.dirent, %struct.dirent* %213, i32 0, i32 3, !dbg !20741, !ctir !2475
  %214 = load i8, i8* %d_type297, align 2, !dbg !20741, !tbaa !20739, !ctir !468
  %conv298 = zext i8 %214 to i32, !dbg !20741
  %cmp299 = icmp eq i32 %conv298, 4, !dbg !20741
  %lnot301 = xor i1 %cmp299, true, !dbg !20742
  br label %land.end302

land.end302:                                      ; preds = %land.rhs296, %land.lhs.true292, %land.lhs.true288, %if.then284
  %215 = phi i1 [ false, %land.lhs.true292 ], [ false, %land.lhs.true288 ], [ false, %if.then284 ], [ %lnot301, %land.rhs296 ], !dbg !20743
  %frombool303 = zext i1 %215 to i8, !dbg !20733
  store i8 %frombool303, i8* %skip_stat, align 1, !dbg !20733, !tbaa !3109
  %216 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20744, !tbaa !2998
  %fts_info304 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 15, !dbg !20745, !ctir !2321
  store i16 11, i16* %fts_info304, align 8, !dbg !20746, !tbaa !3813, !ctir !33
  %217 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20747, !tbaa !2998
  %fts_statp305 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %217, i32 0, i32 18, !dbg !20748, !ctir !2321
  %arraydecay306 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp305, i64 0, i64 0, !dbg !20747
  %218 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20749, !tbaa !2998
  %d_type307 = getelementptr inbounds %struct.dirent, %struct.dirent* %218, i32 0, i32 3, !dbg !20749, !ctir !2475
  %219 = load i8, i8* %d_type307, align 2, !dbg !20749, !tbaa !20739, !ctir !468
  %conv308 = zext i8 %219 to i32, !dbg !20749
  call void @set_stat_type(%struct.stat* %arraydecay306, i32 %conv308), !dbg !20750
  %220 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20751, !tbaa !2998
  %221 = load i8, i8* %skip_stat, align 1, !dbg !20752, !tbaa !3109
  %tobool309 = trunc i8 %221 to i1, !dbg !20752
  %lnot310 = xor i1 %tobool309, true, !dbg !20753
  call void @fts_set_stat_required(%struct._ftsent* %220, i1 zeroext %lnot310), !dbg !20754
  br label %if.end314, !dbg !20755

if.else311:                                       ; preds = %lor.lhs.false280
  %222 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20756, !tbaa !2998
  %223 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20758, !tbaa !2998
  %call312 = call zeroext i16 @fts_stat(%struct.FTS* %222, %struct._ftsent* %223, i1 zeroext false), !dbg !20759
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20760, !tbaa !2998
  %fts_info313 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !20761, !ctir !2321
  store i16 %call312, i16* %fts_info313, align 8, !dbg !20762, !tbaa !3813, !ctir !33
  br label %if.end314

if.end314:                                        ; preds = %if.else311, %land.end302
  %225 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20763, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %225, i32 0, i32 2, !dbg !20764, !ctir !2321
  store %struct._ftsent* null, %struct._ftsent** %fts_link, align 8, !dbg !20765, !tbaa !2998, !ctir !2325
  %226 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20766, !tbaa !2998
  %cmp315 = icmp eq %struct._ftsent* %226, null, !dbg !20768
  br i1 %cmp315, label %if.then317, label %if.else318, !dbg !20769

if.then317:                                       ; preds = %if.end314
  %227 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20770, !tbaa !2998
  store %struct._ftsent* %227, %struct._ftsent** %tail, align 8, !dbg !20771, !tbaa !2998
  store %struct._ftsent* %227, %struct._ftsent** %head, align 8, !dbg !20772, !tbaa !2998
  br label %if.end320, !dbg !20773

if.else318:                                       ; preds = %if.end314
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20774, !tbaa !2998
  %229 = load %struct._ftsent*, %struct._ftsent** %tail, align 8, !dbg !20776, !tbaa !2998
  %fts_link319 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %229, i32 0, i32 2, !dbg !20777, !ctir !2321
  store %struct._ftsent* %228, %struct._ftsent** %fts_link319, align 8, !dbg !20778, !tbaa !2998, !ctir !2325
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20779, !tbaa !2998
  store %struct._ftsent* %230, %struct._ftsent** %tail, align 8, !dbg !20780, !tbaa !2998
  br label %if.end320

if.end320:                                        ; preds = %if.else318, %if.then317
  %231 = load i64, i64* %nitems, align 8, !dbg !20781, !tbaa !3851
  %cmp321 = icmp eq i64 %231, 10000, !dbg !20783
  br i1 %cmp321, label %land.lhs.true323, label %if.end329, !dbg !20784

land.lhs.true323:                                 ; preds = %if.end320
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20785, !tbaa !2998
  %fts_compar324 = getelementptr inbounds %struct.FTS, %struct.FTS* %232, i32 0, i32 9, !dbg !20786, !ctir !2338
  %233 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar324, align 8, !dbg !20786, !tbaa !18508, !ctir !2352
  %tobool325 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %233, null, !dbg !20785
  br i1 %tobool325, label %if.end329, label %if.then326, !dbg !20787

if.then326:                                       ; preds = %land.lhs.true323
  %234 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20788, !tbaa !2998
  %235 = load i32, i32* %dir_fd, align 4, !dbg !20789, !tbaa !2985
  %call327 = call zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %234, i32 %235), !dbg !20790
  %frombool328 = zext i1 %call327 to i8, !dbg !20791
  store i8 %frombool328, i8* %sort_by_inode, align 1, !dbg !20791, !tbaa !3109
  br label %if.end329, !dbg !20792

if.end329:                                        ; preds = %if.then326, %land.lhs.true323, %if.end320
  %236 = load i64, i64* %nitems, align 8, !dbg !20793, !tbaa !3851
  %inc330 = add i64 %236, 1, !dbg !20793
  store i64 %inc330, i64* %nitems, align 8, !dbg !20793, !tbaa !3851
  %237 = load i64, i64* %max_entries, align 8, !dbg !20794, !tbaa !3851
  %238 = load i64, i64* %nitems, align 8, !dbg !20796, !tbaa !3851
  %cmp331 = icmp ule i64 %237, %238, !dbg !20797
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !20798

if.then333:                                       ; preds = %if.end329
  br label %break_without_closedir, !dbg !20799

if.end334:                                        ; preds = %if.end329
  br label %while.cond, !dbg !20547, !llvm.loop !20587

while.end:                                        ; preds = %if.end176, %while.cond
  %239 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20801, !tbaa !2998
  %fts_dirp335 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %239, i32 0, i32 3, !dbg !20803, !ctir !2321
  %240 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp335, align 8, !dbg !20803, !tbaa !2998, !ctir !609
  %tobool336 = icmp ne %struct.__dirstream* %240, null, !dbg !20801
  br i1 %tobool336, label %if.then337, label %if.end343, !dbg !20804

if.then337:                                       ; preds = %while.end
  br label %do.body338, !dbg !20805

do.body338:                                       ; preds = %if.then337
  %241 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20806, !tbaa !2998
  %fts_dirp339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %241, i32 0, i32 3, !dbg !20806, !ctir !2321
  %242 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp339, align 8, !dbg !20806, !tbaa !2998, !ctir !609
  %call340 = call i32 @closedir(%struct.__dirstream* %242), !dbg !20806
  %243 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20806, !tbaa !2998
  %fts_dirp341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %243, i32 0, i32 3, !dbg !20806, !ctir !2321
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp341, align 8, !dbg !20806, !tbaa !2998, !ctir !609
  br label %do.end342, !dbg !20806

do.end342:                                        ; preds = %do.body338
  br label %if.end343, !dbg !20806

if.end343:                                        ; preds = %do.end342, %while.end
  br label %break_without_closedir, !dbg !20803

break_without_closedir:                           ; preds = %if.end343, %if.then333
  call void @llvm.dbg.label(metadata !20808), !dbg !20809
  %244 = load i8, i8* %doadjust, align 1, !dbg !20810, !tbaa !3109
  %tobool344 = trunc i8 %244 to i1, !dbg !20810
  br i1 %tobool344, label %if.then345, label %if.end346, !dbg !20812

if.then345:                                       ; preds = %break_without_closedir
  %245 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20813, !tbaa !2998
  %246 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20814, !tbaa !2998
  call void @fts_padjust(%struct.FTS* %245, %struct._ftsent* %246), !dbg !20815
  br label %if.end346, !dbg !20815

if.end346:                                        ; preds = %if.then345, %break_without_closedir
  %247 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20816, !tbaa !2998
  %fts_options347 = getelementptr inbounds %struct.FTS, %struct.FTS* %247, i32 0, i32 10, !dbg !20816, !ctir !2338
  %248 = load i32, i32* %fts_options347, align 8, !dbg !20816, !tbaa !18131, !ctir !7
  %and348 = and i32 %248, 4, !dbg !20816
  %tobool349 = icmp ne i32 %and348, 0, !dbg !20816
  br i1 %tobool349, label %if.then350, label %if.end360, !dbg !20818

if.then350:                                       ; preds = %if.end346
  %249 = load i64, i64* %len, align 8, !dbg !20819, !tbaa !3851
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20822, !tbaa !2998
  %fts_pathlen351 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 7, !dbg !20823, !ctir !2338
  %251 = load i64, i64* %fts_pathlen351, align 8, !dbg !20823, !tbaa !18821, !ctir !55
  %cmp352 = icmp eq i64 %249, %251, !dbg !20824
  br i1 %cmp352, label %if.then357, label %lor.lhs.false354, !dbg !20825

lor.lhs.false354:                                 ; preds = %if.then350
  %252 = load i64, i64* %nitems, align 8, !dbg !20826, !tbaa !3851
  %cmp355 = icmp eq i64 %252, 0, !dbg !20827
  br i1 %cmp355, label %if.then357, label %if.end359, !dbg !20828

if.then357:                                       ; preds = %lor.lhs.false354, %if.then350
  %253 = load i8*, i8** %cp, align 8, !dbg !20829, !tbaa !2998
  %incdec.ptr358 = getelementptr inbounds i8, i8* %253, i32 -1, !dbg !20829
  store i8* %incdec.ptr358, i8** %cp, align 8, !dbg !20829, !tbaa !2998
  br label %if.end359, !dbg !20829

if.end359:                                        ; preds = %if.then357, %lor.lhs.false354
  %254 = load i8*, i8** %cp, align 8, !dbg !20830, !tbaa !2998
  store i8 0, i8* %254, align 1, !dbg !20831, !tbaa !3660, !ctir !10
  br label %if.end360, !dbg !20832

if.end360:                                        ; preds = %if.end359, %if.end346
  %255 = load i8, i8* %continue_readdir, align 1, !dbg !20833, !tbaa !3109
  %tobool361 = trunc i8 %255 to i1, !dbg !20833
  br i1 %tobool361, label %if.end385, label %land.lhs.true362, !dbg !20835

land.lhs.true362:                                 ; preds = %if.end360
  %256 = load i8, i8* %descend, align 1, !dbg !20836, !tbaa !3109
  %tobool363 = trunc i8 %256 to i1, !dbg !20836
  br i1 %tobool363, label %land.lhs.true365, label %if.end385, !dbg !20837

land.lhs.true365:                                 ; preds = %land.lhs.true362
  %257 = load i32, i32* %type.addr, align 4, !dbg !20838, !tbaa !2985
  %cmp366 = icmp eq i32 %257, 1, !dbg !20839
  br i1 %cmp366, label %land.lhs.true370, label %lor.lhs.false368, !dbg !20840

lor.lhs.false368:                                 ; preds = %land.lhs.true365
  %258 = load i64, i64* %nitems, align 8, !dbg !20841, !tbaa !3851
  %tobool369 = icmp ne i64 %258, 0, !dbg !20841
  br i1 %tobool369, label %if.end385, label %land.lhs.true370, !dbg !20842

land.lhs.true370:                                 ; preds = %lor.lhs.false368, %land.lhs.true365
  %259 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20843, !tbaa !2998
  %fts_level371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %259, i32 0, i32 12, !dbg !20844, !ctir !2321
  %260 = load i64, i64* %fts_level371, align 8, !dbg !20844, !tbaa !3851, !ctir !568
  %cmp372 = icmp eq i64 %260, 0, !dbg !20845
  br i1 %cmp372, label %cond.true374, label %cond.false377, !dbg !20846

cond.true374:                                     ; preds = %land.lhs.true370
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20847, !tbaa !2998
  %call375 = call i32 @restore_initial_cwd(%struct.FTS* %261), !dbg !20848
  %tobool376 = icmp ne i32 %call375, 0, !dbg !20848
  br i1 %tobool376, label %if.then381, label %if.end385, !dbg !20843

cond.false377:                                    ; preds = %land.lhs.true370
  %262 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20849, !tbaa !2998
  %263 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20850, !tbaa !2998
  %fts_parent378 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 1, !dbg !20851, !ctir !2321
  %264 = load %struct._ftsent*, %struct._ftsent** %fts_parent378, align 8, !dbg !20851, !tbaa !2998, !ctir !2325
  %call379 = call i32 @fts_safe_changedir(%struct.FTS* %262, %struct._ftsent* %264, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.443, i64 0, i64 0)), !dbg !20852
  %tobool380 = icmp ne i32 %call379, 0, !dbg !20852
  br i1 %tobool380, label %if.then381, label %if.end385, !dbg !20846

if.then381:                                       ; preds = %cond.false377, %cond.true374
  %265 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20853, !tbaa !2998
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 15, !dbg !20855, !ctir !2321
  store i16 7, i16* %fts_info382, align 8, !dbg !20856, !tbaa !3813, !ctir !33
  %266 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20857, !tbaa !2998
  %fts_options383 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 10, !dbg !20857, !ctir !2338
  %267 = load i32, i32* %fts_options383, align 8, !dbg !20857, !tbaa !18131, !ctir !7
  %or384 = or i32 %267, 8192, !dbg !20857
  store i32 %or384, i32* %fts_options383, align 8, !dbg !20857, !tbaa !18131, !ctir !7
  %268 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20858, !tbaa !2998
  call void @fts_lfree(%struct._ftsent* %268), !dbg !20859
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20860
  br label %return, !dbg !20860

if.end385:                                        ; preds = %cond.false377, %cond.true374, %lor.lhs.false368, %land.lhs.true362, %if.end360
  %269 = load i64, i64* %nitems, align 8, !dbg !20861, !tbaa !3851
  %tobool386 = icmp ne i64 %269, 0, !dbg !20861
  br i1 %tobool386, label %if.end403, label %if.then387, !dbg !20863

if.then387:                                       ; preds = %if.end385
  %270 = load i32, i32* %type.addr, align 4, !dbg !20864, !tbaa !2985
  %cmp388 = icmp eq i32 %270, 3, !dbg !20867
  br i1 %cmp388, label %land.lhs.true390, label %if.end402, !dbg !20868

land.lhs.true390:                                 ; preds = %if.then387
  %271 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20869, !tbaa !2998
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %271, i32 0, i32 15, !dbg !20870, !ctir !2321
  %272 = load i16, i16* %fts_info391, align 8, !dbg !20870, !tbaa !3813, !ctir !33
  %conv392 = zext i16 %272 to i32, !dbg !20869
  %cmp393 = icmp ne i32 %conv392, 4, !dbg !20871
  br i1 %cmp393, label %land.lhs.true395, label %if.end402, !dbg !20872

land.lhs.true395:                                 ; preds = %land.lhs.true390
  %273 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20873, !tbaa !2998
  %fts_info396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %273, i32 0, i32 15, !dbg !20874, !ctir !2321
  %274 = load i16, i16* %fts_info396, align 8, !dbg !20874, !tbaa !3813, !ctir !33
  %conv397 = zext i16 %274 to i32, !dbg !20873
  %cmp398 = icmp ne i32 %conv397, 7, !dbg !20875
  br i1 %cmp398, label %if.then400, label %if.end402, !dbg !20876

if.then400:                                       ; preds = %land.lhs.true395
  %275 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20877, !tbaa !2998
  %fts_info401 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %275, i32 0, i32 15, !dbg !20878, !ctir !2321
  store i16 6, i16* %fts_info401, align 8, !dbg !20879, !tbaa !3813, !ctir !33
  br label %if.end402, !dbg !20877

if.end402:                                        ; preds = %if.then400, %land.lhs.true395, %land.lhs.true390, %if.then387
  %276 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20880, !tbaa !2998
  call void @fts_lfree(%struct._ftsent* %276), !dbg !20881
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20882
  br label %return, !dbg !20882

if.end403:                                        ; preds = %if.end385
  %277 = load i8, i8* %sort_by_inode, align 1, !dbg !20883, !tbaa !3109
  %tobool404 = trunc i8 %277 to i1, !dbg !20883
  br i1 %tobool404, label %if.then405, label %if.end409, !dbg !20885

if.then405:                                       ; preds = %if.end403
  %278 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20886, !tbaa !2998
  %fts_compar406 = getelementptr inbounds %struct.FTS, %struct.FTS* %278, i32 0, i32 9, !dbg !20888, !ctir !2338
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar406, align 8, !dbg !20889, !tbaa !18508, !ctir !2352
  %279 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20890, !tbaa !2998
  %280 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20891, !tbaa !2998
  %281 = load i64, i64* %nitems, align 8, !dbg !20892, !tbaa !3851
  %call407 = call %struct._ftsent* @fts_sort(%struct.FTS* %279, %struct._ftsent* %280, i64 %281), !dbg !20893
  store %struct._ftsent* %call407, %struct._ftsent** %head, align 8, !dbg !20894, !tbaa !2998
  %282 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20895, !tbaa !2998
  %fts_compar408 = getelementptr inbounds %struct.FTS, %struct.FTS* %282, i32 0, i32 9, !dbg !20896, !ctir !2338
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar408, align 8, !dbg !20897, !tbaa !18508, !ctir !2352
  br label %if.end409, !dbg !20898

if.end409:                                        ; preds = %if.then405, %if.end403
  %283 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20899, !tbaa !2998
  %fts_compar410 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 9, !dbg !20901, !ctir !2338
  %284 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar410, align 8, !dbg !20901, !tbaa !18508, !ctir !2352
  %tobool411 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %284, null, !dbg !20899
  br i1 %tobool411, label %land.lhs.true412, label %if.end417, !dbg !20902

land.lhs.true412:                                 ; preds = %if.end409
  %285 = load i64, i64* %nitems, align 8, !dbg !20903, !tbaa !3851
  %cmp413 = icmp ugt i64 %285, 1, !dbg !20904
  br i1 %cmp413, label %if.then415, label %if.end417, !dbg !20905

if.then415:                                       ; preds = %land.lhs.true412
  %286 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20906, !tbaa !2998
  %287 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20907, !tbaa !2998
  %288 = load i64, i64* %nitems, align 8, !dbg !20908, !tbaa !3851
  %call416 = call %struct._ftsent* @fts_sort(%struct.FTS* %286, %struct._ftsent* %287, i64 %288), !dbg !20909
  store %struct._ftsent* %call416, %struct._ftsent** %head, align 8, !dbg !20910, !tbaa !2998
  br label %if.end417, !dbg !20911

if.end417:                                        ; preds = %if.then415, %land.lhs.true412, %if.end409
  %289 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20912, !tbaa !2998
  store %struct._ftsent* %289, %struct._ftsent** %retval, align 8, !dbg !20913
  br label %return, !dbg !20913

return:                                           ; preds = %if.end417, %if.end402, %if.then381, %do.end253, %do.end224, %if.then53, %if.end36, %if.end
  %290 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !20914
  ret %struct._ftsent* %290, !dbg !20914
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @restore_initial_cwd(%struct.FTS* %sp) #4 !dbg !20915 !ctir !2421 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fail = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20916, metadata !DIExpression()), !dbg !20917
  call void @llvm.dbg.declare(metadata i32* %fail, metadata !20918, metadata !DIExpression()), !dbg !20919
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20920, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20920, !ctir !2338
  %1 = load i32, i32* %fts_options, align 8, !dbg !20920, !tbaa !18131, !ctir !7
  %and = and i32 %1, 4, !dbg !20920
  %tobool = icmp ne i32 %and, 0, !dbg !20920
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !20920

land.rhs:                                         ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20920, !tbaa !2998
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !20920, !ctir !2338
  %3 = load i32, i32* %fts_options1, align 8, !dbg !20920, !tbaa !18131, !ctir !7
  %and2 = and i32 %3, 512, !dbg !20920
  %tobool3 = icmp ne i32 %and2, 0, !dbg !20920
  br i1 %tobool3, label %cond.true, label %cond.false8, !dbg !20920

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20920, !tbaa !2998
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20920, !tbaa !2998
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !20920, !ctir !2338
  %6 = load i32, i32* %fts_options4, align 8, !dbg !20920, !tbaa !18131, !ctir !7
  %and5 = and i32 %6, 512, !dbg !20920
  %tobool6 = icmp ne i32 %and5, 0, !dbg !20920
  br i1 %tobool6, label %cond.true7, label %cond.false, !dbg !20920

cond.true7:                                       ; preds = %cond.true
  br label %cond.end, !dbg !20920

cond.false:                                       ; preds = %cond.true
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20920, !tbaa !2998
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 5, !dbg !20920, !ctir !2338
  %8 = load i32, i32* %fts_rfd, align 8, !dbg !20920, !tbaa !18751, !ctir !7
  br label %cond.end, !dbg !20920

cond.end:                                         ; preds = %cond.false, %cond.true7
  %cond = phi i32 [ -100, %cond.true7 ], [ %8, %cond.false ], !dbg !20920
  call void @cwd_advance_fd(%struct.FTS* %4, i32 %cond, i1 zeroext true), !dbg !20920
  br label %cond.end17, !dbg !20920

cond.false8:                                      ; preds = %land.rhs
  %9 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20920, !tbaa !2998
  %fts_options9 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !20920, !ctir !2338
  %10 = load i32, i32* %fts_options9, align 8, !dbg !20920, !tbaa !18131, !ctir !7
  %and10 = and i32 %10, 512, !dbg !20920
  %tobool11 = icmp ne i32 %and10, 0, !dbg !20920
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !20920

cond.true12:                                      ; preds = %cond.false8
  br label %cond.end15, !dbg !20920

cond.false13:                                     ; preds = %cond.false8
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20920, !tbaa !2998
  %fts_rfd14 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 5, !dbg !20920, !ctir !2338
  %12 = load i32, i32* %fts_rfd14, align 8, !dbg !20920, !tbaa !18751, !ctir !7
  br label %cond.end15, !dbg !20920

cond.end15:                                       ; preds = %cond.false13, %cond.true12
  %cond16 = phi i32 [ -100, %cond.true12 ], [ %12, %cond.false13 ], !dbg !20920
  %call = call i32 @fchdir(i32 %cond16) #10, !dbg !20920
  br label %cond.end17, !dbg !20920

cond.end17:                                       ; preds = %cond.end15, %cond.end
  %cond18 = phi i32 [ 0, %cond.end ], [ %call, %cond.end15 ], !dbg !20920
  %tobool19 = icmp ne i32 %cond18, 0, !dbg !20920
  br label %land.end

land.end:                                         ; preds = %cond.end17, %entry
  %13 = phi i1 [ false, %entry ], [ %tobool19, %cond.end17 ], !dbg !20921
  %land.ext = zext i1 %13 to i32, !dbg !20920
  store i32 %land.ext, i32* %fail, align 4, !dbg !20919, !tbaa !2985
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20922, !tbaa !2998
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !20923, !ctir !2338
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !20924
  %15 = load i32, i32* %fail, align 4, !dbg !20925, !tbaa !2985
  ret i32 %15, !dbg !20926
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_load(%struct.FTS* %sp, %struct._ftsent* %p) #4 !dbg !20927 !ctir !2450 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %len = alloca i64, align 8, !ctir !55
  %cp = alloca i8*, align 8, !ctir !9
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20928, metadata !DIExpression()), !dbg !20929
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20930, metadata !DIExpression()), !dbg !20931
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20932, metadata !DIExpression()), !dbg !20933
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !20934, metadata !DIExpression()), !dbg !20935
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20936, !tbaa !2998
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 13, !dbg !20937, !ctir !2321
  %1 = load i64, i64* %fts_namelen, align 8, !dbg !20937, !tbaa !3851, !ctir !55
  %2 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20938, !tbaa !2998
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 10, !dbg !20939, !ctir !2321
  store i64 %1, i64* %fts_pathlen, align 8, !dbg !20940, !tbaa !3851, !ctir !55
  store i64 %1, i64* %len, align 8, !dbg !20941, !tbaa !3851
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20942, !tbaa !2998
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 4, !dbg !20943, !ctir !2338
  %4 = load i8*, i8** %fts_path, align 8, !dbg !20943, !tbaa !18770, !ctir !9
  %5 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20944, !tbaa !2998
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 19, !dbg !20945, !ctir !2321
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20946
  %6 = load i64, i64* %len, align 8, !dbg !20947, !tbaa !3851
  %add = add i64 %6, 1, !dbg !20948
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %4, i8* align 8 %arraydecay, i64 %add, i1 false), !dbg !20946
  %7 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20949, !tbaa !2998
  %fts_name1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20951, !ctir !2321
  %arraydecay2 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name1, i64 0, i64 0, !dbg !20949
  %call = call i8* @strrchr(i8* %arraydecay2, i32 47) #14, !dbg !20952
  store i8* %call, i8** %cp, align 8, !dbg !20953, !tbaa !2998
  %tobool = icmp ne i8* %call, null, !dbg !20953
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !20954

land.lhs.true:                                    ; preds = %entry
  %8 = load i8*, i8** %cp, align 8, !dbg !20955, !tbaa !2998
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20956, !tbaa !2998
  %fts_name3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 19, !dbg !20957, !ctir !2321
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name3, i64 0, i64 0, !dbg !20956
  %cmp = icmp ne i8* %8, %arraydecay4, !dbg !20958
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20959

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i8*, i8** %cp, align 8, !dbg !20960, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 1, !dbg !20960, !ctir !9
  %11 = load i8, i8* %arrayidx, align 1, !dbg !20960, !tbaa !3660
  %conv = sext i8 %11 to i32, !dbg !20960
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20960
  br i1 %tobool5, label %if.then, label %if.end, !dbg !20961

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load i8*, i8** %cp, align 8, !dbg !20962, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !20962
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20962, !tbaa !2998
  %call6 = call i64 @strlen(i8* %incdec.ptr) #14, !dbg !20964
  store i64 %call6, i64* %len, align 8, !dbg !20965, !tbaa !3851
  %13 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20966, !tbaa !2998
  %fts_name7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 19, !dbg !20967, !ctir !2321
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name7, i64 0, i64 0, !dbg !20968
  %14 = load i8*, i8** %cp, align 8, !dbg !20969, !tbaa !2998
  %15 = load i64, i64* %len, align 8, !dbg !20970, !tbaa !3851
  %add9 = add i64 %15, 1, !dbg !20971
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %arraydecay8, i8* align 1 %14, i64 %add9, i1 false), !dbg !20968
  %16 = load i64, i64* %len, align 8, !dbg !20972, !tbaa !3851
  %17 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20973, !tbaa !2998
  %fts_namelen10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 13, !dbg !20974, !ctir !2321
  store i64 %16, i64* %fts_namelen10, align 8, !dbg !20975, !tbaa !3851, !ctir !55
  br label %if.end, !dbg !20976

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20977, !tbaa !2998
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !20978, !ctir !2338
  %19 = load i8*, i8** %fts_path11, align 8, !dbg !20978, !tbaa !18770, !ctir !9
  %20 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20979, !tbaa !2998
  %fts_path12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 7, !dbg !20980, !ctir !2321
  store i8* %19, i8** %fts_path12, align 8, !dbg !20981, !tbaa !2998, !ctir !9
  %21 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20982, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20983, !ctir !2321
  store i8* %19, i8** %fts_accpath, align 8, !dbg !20984, !tbaa !2998, !ctir !9
  ret void, !dbg !20985
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @leaf_optimization(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20986 !ctir !2454 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20987, metadata !DIExpression()), !dbg !20988
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20989, metadata !DIExpression()), !dbg !20990
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20991, !tbaa !2998
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20992, !tbaa !2985
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20993
  switch i64 %call, label %sw.default [
    i64 1382369651, label %sw.bb
    i64 1481003842, label %sw.bb
    i64 0, label %sw.bb1
    i64 1397113167, label %sw.bb2
    i64 4283649346, label %sw.bb3
    i64 26985, label %sw.bb4
    i64 40864, label %sw.bb5
  ], !dbg !20994

sw.bb:                                            ; preds = %entry, %entry
  store i32 2, i32* %retval, align 4, !dbg !20995
  br label %return, !dbg !20995

sw.bb1:                                           ; preds = %entry
  br label %sw.bb2, !dbg !20997

sw.bb2:                                           ; preds = %entry, %sw.bb1
  br label %sw.bb3, !dbg !20998

sw.bb3:                                           ; preds = %entry, %sw.bb2
  br label %sw.bb4, !dbg !20999

sw.bb4:                                           ; preds = %entry, %sw.bb3
  br label %sw.bb5, !dbg !21000

sw.bb5:                                           ; preds = %entry, %sw.bb4
  store i32 0, i32* %retval, align 4, !dbg !21001
  br label %return, !dbg !21001

sw.default:                                       ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !21002
  br label %return, !dbg !21002

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !21003
  ret i32 %2, !dbg !21003
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @enter_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !21004 !ctir !2469 {
entry:
  %retval = alloca i1, align 1
  %fts.addr = alloca %struct.FTS*, align 8
  %ent.addr = alloca %struct._ftsent*, align 8
  %st = alloca %struct.stat*, align 8, !ctir !2452
  %ad = alloca %struct.Active_dir*, align 8, !ctir !2471
  %ad_from_table = alloca %struct.Active_dir*, align 8, !ctir !2471
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !21005, metadata !DIExpression()), !dbg !21006
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !21007, metadata !DIExpression()), !dbg !21008
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !21009, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !21011, !ctir !2338
  %1 = load i32, i32* %fts_options, align 8, !dbg !21011, !tbaa !18131, !ctir !7
  %and = and i32 %1, 258, !dbg !21012
  %tobool = icmp ne i32 %and, 0, !dbg !21012
  br i1 %tobool, label %if.then, label %if.else, !dbg !21013

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !21014, metadata !DIExpression()), !dbg !21016
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21017, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 18, !dbg !21018, !ctir !2321
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !21017
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !21016, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad, metadata !21019, metadata !DIExpression()), !dbg !21020
  %call = call noalias i8* @malloc(i64 24) #10, !dbg !21021
  %3 = bitcast i8* %call to %struct.Active_dir*, !dbg !21021
  store %struct.Active_dir* %3, %struct.Active_dir** %ad, align 8, !dbg !21020, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad_from_table, metadata !21022, metadata !DIExpression()), !dbg !21023
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !21024, !tbaa !2998
  %tobool1 = icmp ne %struct.Active_dir* %4, null, !dbg !21024
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !21026

if.then2:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !21027
  br label %return, !dbg !21027

if.end:                                           ; preds = %if.then
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !21028, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 0, !dbg !21029, !ctir !2453
  %6 = load i64, i64* %st_dev, align 8, !dbg !21029, !tbaa !3876, !ctir !231
  %7 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !21030, !tbaa !2998
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %7, i32 0, i32 0, !dbg !21031, !ctir !2435
  store i64 %6, i64* %dev, align 8, !dbg !21032, !tbaa !19296, !ctir !230
  %8 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !21033, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !21034, !ctir !2453
  %9 = load i64, i64* %st_ino, align 8, !dbg !21034, !tbaa !3873, !ctir !228
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !21035, !tbaa !2998
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 1, !dbg !21036, !ctir !2435
  store i64 %9, i64* %ino, align 8, !dbg !21037, !tbaa !19272, !ctir !227
  %11 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21038, !tbaa !2998
  %12 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !21039, !tbaa !2998
  %fts_ent = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %12, i32 0, i32 2, !dbg !21040, !ctir !2435
  store %struct._ftsent* %11, %struct._ftsent** %fts_ent, align 8, !dbg !21041, !tbaa !21042, !ctir !2420
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !21043, !tbaa !2998
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 12, !dbg !21044, !ctir !2338
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !21045
  %14 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !21045, !tbaa !3660, !ctir !2361
  %15 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !21046, !tbaa !2998
  %16 = bitcast %struct.Active_dir* %15 to i8*, !dbg !21046
  %call3 = call i8* @hash_insert(%struct.hash_table* %14, i8* %16), !dbg !21047
  %17 = bitcast i8* %call3 to %struct.Active_dir*, !dbg !21047
  store %struct.Active_dir* %17, %struct.Active_dir** %ad_from_table, align 8, !dbg !21048, !tbaa !2998
  %18 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !21049, !tbaa !2998
  %19 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !21051, !tbaa !2998
  %cmp = icmp ne %struct.Active_dir* %18, %19, !dbg !21052
  br i1 %cmp, label %if.then4, label %if.end10, !dbg !21053

if.then4:                                         ; preds = %if.end
  %20 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !21054, !tbaa !2998
  %21 = bitcast %struct.Active_dir* %20 to i8*, !dbg !21054
  call void @free(i8* %21) #10, !dbg !21056
  %22 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !21057, !tbaa !2998
  %tobool5 = icmp ne %struct.Active_dir* %22, null, !dbg !21057
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !21059

if.then6:                                         ; preds = %if.then4
  store i1 false, i1* %retval, align 1, !dbg !21060
  br label %return, !dbg !21060

if.end7:                                          ; preds = %if.then4
  %23 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !21061, !tbaa !2998
  %fts_ent8 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %23, i32 0, i32 2, !dbg !21062, !ctir !2435
  %24 = load %struct._ftsent*, %struct._ftsent** %fts_ent8, align 8, !dbg !21062, !tbaa !21042, !ctir !2420
  %25 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21063, !tbaa !2998
  %fts_cycle9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 0, !dbg !21064, !ctir !2321
  store %struct._ftsent* %24, %struct._ftsent** %fts_cycle9, align 8, !dbg !21065, !tbaa !2998, !ctir !2325
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21066, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 15, !dbg !21067, !ctir !2321
  store i16 2, i16* %fts_info, align 8, !dbg !21068, !tbaa !3813, !ctir !33
  br label %if.end10, !dbg !21069

if.end10:                                         ; preds = %if.end7, %if.end
  br label %if.end19, !dbg !21070

if.else:                                          ; preds = %entry
  %27 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !21071, !tbaa !2998
  %fts_cycle11 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !21074, !ctir !2338
  %state = bitcast %union.anon* %fts_cycle11 to %struct.cycle_check_state**, !dbg !21075
  %28 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !21075, !tbaa !3660, !ctir !2361
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21076, !tbaa !2998
  %fts_statp12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !21077, !ctir !2321
  %arraydecay13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp12, i64 0, i64 0, !dbg !21076
  %call14 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %28, %struct.stat* %arraydecay13), !dbg !21078
  br i1 %call14, label %if.then15, label %if.end18, !dbg !21079

if.then15:                                        ; preds = %if.else
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21080, !tbaa !2998
  %31 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21082, !tbaa !2998
  %fts_cycle16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 0, !dbg !21083, !ctir !2321
  store %struct._ftsent* %30, %struct._ftsent** %fts_cycle16, align 8, !dbg !21084, !tbaa !2998, !ctir !2325
  %32 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !21085, !tbaa !2998
  %fts_info17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 15, !dbg !21086, !ctir !2321
  store i16 2, i16* %fts_info17, align 8, !dbg !21087, !tbaa !3813, !ctir !33
  br label %if.end18, !dbg !21088

if.end18:                                         ; preds = %if.then15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end10
  store i1 true, i1* %retval, align 1, !dbg !21089
  br label %return, !dbg !21089

return:                                           ; preds = %if.end19, %if.then6, %if.then2
  %33 = load i1, i1* %retval, align 1, !dbg !21090
  ret i1 %33, !dbg !21090
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cwd_advance_fd(%struct.FTS* %sp, i32 %fd, i1 zeroext %chdir_down_one) #4 !dbg !21091 !ctir !2472 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %fd.addr = alloca i32, align 4
  %chdir_down_one.addr = alloca i8, align 1
  %old = alloca i32, align 4, !ctir !7
  %prev_fd_in_slot = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21092, metadata !DIExpression()), !dbg !21093
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21094, metadata !DIExpression()), !dbg !21095
  %frombool = zext i1 %chdir_down_one to i8
  store i8 %frombool, i8* %chdir_down_one.addr, align 1, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %chdir_down_one.addr, metadata !21096, metadata !DIExpression()), !dbg !21097
  call void @llvm.dbg.declare(metadata i32* %old, metadata !21098, metadata !DIExpression()), !dbg !21099
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21100, !tbaa !2998
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !21101, !ctir !2338
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !21101, !tbaa !3826, !ctir !7
  store i32 %1, i32* %old, align 4, !dbg !21099, !tbaa !2985
  br label %do.body, !dbg !21102

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %old, align 4, !dbg !21103, !tbaa !2985
  %3 = load i32, i32* %fd.addr, align 4, !dbg !21103, !tbaa !2985
  %cmp = icmp ne i32 %2, %3, !dbg !21103
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !21103

lor.lhs.false:                                    ; preds = %do.body
  %4 = load i32, i32* %old, align 4, !dbg !21103, !tbaa !2985
  %cmp1 = icmp eq i32 %4, -100, !dbg !21103
  br i1 %cmp1, label %if.end, label %if.then, !dbg !21106

if.then:                                          ; preds = %lor.lhs.false
  call void @abort() #13, !dbg !21103
  unreachable, !dbg !21103

if.end:                                           ; preds = %lor.lhs.false, %do.body
  br label %do.end, !dbg !21106

do.end:                                           ; preds = %if.end
  %5 = load i8, i8* %chdir_down_one.addr, align 1, !dbg !21107, !tbaa !3109
  %tobool = trunc i8 %5 to i1, !dbg !21107
  br i1 %tobool, label %if.then2, label %if.else, !dbg !21109

if.then2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %prev_fd_in_slot, metadata !21110, metadata !DIExpression()), !dbg !21112
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21113, !tbaa !2998
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 13, !dbg !21114, !ctir !2338
  %7 = load i32, i32* %old, align 4, !dbg !21115, !tbaa !2985
  %call = call i32 @i_ring_push(%struct.I_ring* %fts_fd_ring, i32 %7), !dbg !21116
  store i32 %call, i32* %prev_fd_in_slot, align 4, !dbg !21112, !tbaa !2985
  %8 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !21117, !tbaa !2985
  %cmp3 = icmp sle i32 0, %8, !dbg !21119
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !21120

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !21121, !tbaa !2985
  %call5 = call i32 @close(i32 %9), !dbg !21122
  br label %if.end6, !dbg !21122

if.end6:                                          ; preds = %if.then4, %if.then2
  br label %if.end14, !dbg !21123

if.else:                                          ; preds = %do.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21124, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !21124, !ctir !2338
  %11 = load i32, i32* %fts_options, align 8, !dbg !21124, !tbaa !18131, !ctir !7
  %and = and i32 %11, 4, !dbg !21124
  %tobool7 = icmp ne i32 %and, 0, !dbg !21124
  br i1 %tobool7, label %if.end13, label %if.then8, !dbg !21126

if.then8:                                         ; preds = %if.else
  %12 = load i32, i32* %old, align 4, !dbg !21127, !tbaa !2985
  %cmp9 = icmp sle i32 0, %12, !dbg !21130
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !21131

if.then10:                                        ; preds = %if.then8
  %13 = load i32, i32* %old, align 4, !dbg !21132, !tbaa !2985
  %call11 = call i32 @close(i32 %13), !dbg !21133
  br label %if.end12, !dbg !21133

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %if.end13, !dbg !21134

if.end13:                                         ; preds = %if.end12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end6
  %14 = load i32, i32* %fd.addr, align 4, !dbg !21135, !tbaa !2985
  %15 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21136, !tbaa !2998
  %fts_cwd_fd15 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 6, !dbg !21137, !ctir !2338
  store i32 %14, i32* %fts_cwd_fd15, align 4, !dbg !21138, !tbaa !3826, !ctir !7
  ret void, !dbg !21139
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @filesystem_type(%struct._ftsent* %p, i32 %fd) #4 !dbg !21140 !ctir !2456 {
entry:
  %retval = alloca i64, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %fd.addr = alloca i32, align 4
  %sp = alloca %struct.FTS*, align 8, !ctir !2337
  %h = alloca %struct.hash_table*, align 8, !ctir !2460
  %ent = alloca %struct.timespec*, align 8, !ctir !2462
  %fs_buf = alloca %struct.statfs, align 8, !ctir !21141
  %tmp = alloca %struct.timespec, align 8, !ctir !2463
  %t2 = alloca %struct.timespec*, align 8, !ctir !2462
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21164, metadata !DIExpression()), !dbg !21165
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21166, metadata !DIExpression()), !dbg !21167
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !21168, metadata !DIExpression()), !dbg !21169
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21170, !tbaa !2998
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 11, !dbg !21171, !ctir !2320
  %1 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !21171, !tbaa !2998, !ctir !2337
  store %struct.FTS* %1, %struct.FTS** %sp, align 8, !dbg !21169, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.hash_table** %h, metadata !21172, metadata !DIExpression()), !dbg !21173
  %2 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !21174, !tbaa !2998
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 11, !dbg !21175, !ctir !2338
  %3 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !21175, !tbaa !19429, !ctir !1433
  store %struct.hash_table* %3, %struct.hash_table** %h, align 8, !dbg !21173, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %ent, metadata !21176, metadata !DIExpression()), !dbg !21177
  call void @llvm.dbg.declare(metadata %struct.statfs* %fs_buf, metadata !21178, metadata !DIExpression()), !dbg !21179
  %4 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !21180, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !21180, !ctir !2338
  %5 = load i32, i32* %fts_options, align 8, !dbg !21180, !tbaa !18131, !ctir !7
  %and = and i32 %5, 512, !dbg !21180
  %tobool = icmp ne i32 %and, 0, !dbg !21180
  br i1 %tobool, label %if.end, label %if.then, !dbg !21182

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !21183
  br label %return, !dbg !21183

if.end:                                           ; preds = %entry
  %6 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21184, !tbaa !2998
  %tobool1 = icmp ne %struct.hash_table* %6, null, !dbg !21184
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !21186

if.then2:                                         ; preds = %if.end
  %call = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_type_hash, i1 (i8*, i8*)* @dev_type_compare, void (i8*)* @free), !dbg !21187
  %7 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !21188, !tbaa !2998
  %fts_leaf_optimization_works_ht3 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 11, !dbg !21189, !ctir !2338
  store %struct.hash_table* %call, %struct.hash_table** %fts_leaf_optimization_works_ht3, align 8, !dbg !21190, !tbaa !19429, !ctir !1433
  store %struct.hash_table* %call, %struct.hash_table** %h, align 8, !dbg !21191, !tbaa !2998
  br label %if.end4, !dbg !21192

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21193, !tbaa !2998
  %tobool5 = icmp ne %struct.hash_table* %8, null, !dbg !21193
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !21195

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.timespec* %tmp, metadata !21196, metadata !DIExpression()), !dbg !21198
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21199, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 18, !dbg !21200, !ctir !2320
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !21201
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !21201, !ctir !2453
  %10 = load i64, i64* %st_dev, align 8, !dbg !21201, !tbaa !3876, !ctir !231
  %st_dev7 = getelementptr inbounds %struct.timespec, %struct.timespec* %tmp, i32 0, i32 0, !dbg !21202, !ctir !2463
  store i64 %10, i64* %st_dev7, align 8, !dbg !21203, !tbaa !21204, !ctir !230
  %11 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21206, !tbaa !2998
  %12 = bitcast %struct.timespec* %tmp to i8*, !dbg !21207
  %call8 = call i8* @hash_lookup(%struct.hash_table* %11, i8* %12), !dbg !21208
  %13 = bitcast i8* %call8 to %struct.timespec*, !dbg !21208
  store %struct.timespec* %13, %struct.timespec** %ent, align 8, !dbg !21209, !tbaa !2998
  %14 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21210, !tbaa !2998
  %tobool9 = icmp ne %struct.timespec* %14, null, !dbg !21210
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !21212

if.then10:                                        ; preds = %if.then6
  %15 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21213, !tbaa !2998
  %f_type = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i32 0, i32 1, !dbg !21214, !ctir !2463
  %16 = load i64, i64* %f_type, align 8, !dbg !21214, !tbaa !21215, !ctir !2458
  store i64 %16, i64* %retval, align 8, !dbg !21216
  br label %return, !dbg !21216

if.end11:                                         ; preds = %if.then6
  br label %if.end12, !dbg !21217

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load i32, i32* %fd.addr, align 4, !dbg !21218, !tbaa !2985
  %cmp = icmp slt i32 %17, 0, !dbg !21220
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !21221

lor.lhs.false:                                    ; preds = %if.end12
  %18 = load i32, i32* %fd.addr, align 4, !dbg !21222, !tbaa !2985
  %call13 = call i32 @fstatfs(i32 %18, %struct.statfs* %fs_buf) #10, !dbg !21223
  %cmp14 = icmp ne i32 %call13, 0, !dbg !21224
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !21225

if.then15:                                        ; preds = %lor.lhs.false, %if.end12
  store i64 0, i64* %retval, align 8, !dbg !21226
  br label %return, !dbg !21226

if.end16:                                         ; preds = %lor.lhs.false
  %19 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21227, !tbaa !2998
  %tobool17 = icmp ne %struct.hash_table* %19, null, !dbg !21227
  br i1 %tobool17, label %if.then18, label %if.end36, !dbg !21229

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata %struct.timespec** %t2, metadata !21230, metadata !DIExpression()), !dbg !21232
  %call19 = call noalias i8* @malloc(i64 16) #10, !dbg !21233
  %20 = bitcast i8* %call19 to %struct.timespec*, !dbg !21233
  store %struct.timespec* %20, %struct.timespec** %t2, align 8, !dbg !21232, !tbaa !2998
  %21 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21234, !tbaa !2998
  %tobool20 = icmp ne %struct.timespec* %21, null, !dbg !21234
  br i1 %tobool20, label %if.then21, label %if.end35, !dbg !21236

if.then21:                                        ; preds = %if.then18
  %22 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21237, !tbaa !2998
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 18, !dbg !21239, !ctir !2320
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !21240
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !21240, !ctir !2453
  %23 = load i64, i64* %st_dev24, align 8, !dbg !21240, !tbaa !3876, !ctir !231
  %24 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21241, !tbaa !2998
  %st_dev25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i32 0, i32 0, !dbg !21242, !ctir !2463
  store i64 %23, i64* %st_dev25, align 8, !dbg !21243, !tbaa !21204, !ctir !230
  %f_type26 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !21244, !ctir !21141
  %25 = load i64, i64* %f_type26, align 8, !dbg !21244, !tbaa !21245, !ctir !2459
  %26 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21248, !tbaa !2998
  %f_type27 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i32 0, i32 1, !dbg !21249, !ctir !2463
  store i64 %25, i64* %f_type27, align 8, !dbg !21250, !tbaa !21215, !ctir !2458
  %27 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !21251, !tbaa !2998
  %28 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21252, !tbaa !2998
  %29 = bitcast %struct.timespec* %28 to i8*, !dbg !21252
  %call28 = call i8* @hash_insert(%struct.hash_table* %27, i8* %29), !dbg !21253
  %30 = bitcast i8* %call28 to %struct.timespec*, !dbg !21253
  store %struct.timespec* %30, %struct.timespec** %ent, align 8, !dbg !21254, !tbaa !2998
  %31 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21255, !tbaa !2998
  %tobool29 = icmp ne %struct.timespec* %31, null, !dbg !21255
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !21257

if.then30:                                        ; preds = %if.then21
  br label %do.body, !dbg !21258

do.body:                                          ; preds = %if.then30
  %32 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !21259, !tbaa !2998
  %33 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21259, !tbaa !2998
  %cmp31 = icmp eq %struct.timespec* %32, %33, !dbg !21259
  br i1 %cmp31, label %if.end33, label %if.then32, !dbg !21262

if.then32:                                        ; preds = %do.body
  call void @abort() #13, !dbg !21259
  unreachable, !dbg !21259

if.end33:                                         ; preds = %do.body
  br label %do.end, !dbg !21262

do.end:                                           ; preds = %if.end33
  br label %if.end34, !dbg !21262

if.else:                                          ; preds = %if.then21
  %34 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !21263, !tbaa !2998
  %35 = bitcast %struct.timespec* %34 to i8*, !dbg !21263
  call void @free(i8* %35) #10, !dbg !21264
  br label %if.end34

if.end34:                                         ; preds = %if.else, %do.end
  br label %if.end35, !dbg !21265

if.end35:                                         ; preds = %if.end34, %if.then18
  br label %if.end36, !dbg !21266

if.end36:                                         ; preds = %if.end35, %if.end16
  %f_type37 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !21267, !ctir !21141
  %36 = load i64, i64* %f_type37, align 8, !dbg !21267, !tbaa !21245, !ctir !2459
  store i64 %36, i64* %retval, align 8, !dbg !21268
  br label %return, !dbg !21268

return:                                           ; preds = %if.end36, %if.then15, %if.then10, %if.then
  %37 = load i64, i64* %retval, align 8, !dbg !21269
  ret i64 %37, !dbg !21269
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_type_hash(i8* %x, i64 %table_size) #4 !dbg !21270 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !2467
  %dev = alloca i64, align 8, !ctir !458
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21271, metadata !DIExpression()), !dbg !21272
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !21273, metadata !DIExpression()), !dbg !21274
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !21275, metadata !DIExpression()), !dbg !21276
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21277, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !21277
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !21276, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %dev, metadata !21278, metadata !DIExpression()), !dbg !21279
  %2 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !21280, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !21281, !ctir !2468
  %3 = load i64, i64* %st_dev, align 8, !dbg !21281, !tbaa !21204, !ctir !230
  store i64 %3, i64* %dev, align 8, !dbg !21279, !tbaa !3851
  %4 = load i64, i64* %dev, align 8, !dbg !21282, !tbaa !3851
  %5 = load i64, i64* %table_size.addr, align 8, !dbg !21283, !tbaa !3851
  %rem = urem i64 %4, %5, !dbg !21284
  ret i64 %rem, !dbg !21285
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_type_compare(i8* %x, i8* %y) #4 !dbg !21286 !ctir !551 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %ax = alloca %struct.timespec*, align 8, !ctir !2467
  %ay = alloca %struct.timespec*, align 8, !ctir !2467
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !21287, metadata !DIExpression()), !dbg !21288
  store i8* %y, i8** %y.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !21289, metadata !DIExpression()), !dbg !21290
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !21291, metadata !DIExpression()), !dbg !21292
  %0 = load i8*, i8** %x.addr, align 8, !dbg !21293, !tbaa !2998
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !21293
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !21292, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %ay, metadata !21294, metadata !DIExpression()), !dbg !21295
  %2 = load i8*, i8** %y.addr, align 8, !dbg !21296, !tbaa !2998
  %3 = bitcast i8* %2 to %struct.timespec*, !dbg !21296
  store %struct.timespec* %3, %struct.timespec** %ay, align 8, !dbg !21295, !tbaa !2998
  %4 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !21297, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !21298, !ctir !2468
  %5 = load i64, i64* %st_dev, align 8, !dbg !21298, !tbaa !21204, !ctir !230
  %6 = load %struct.timespec*, %struct.timespec** %ay, align 8, !dbg !21299, !tbaa !2998
  %st_dev1 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 0, !dbg !21300, !ctir !2468
  %7 = load i64, i64* %st_dev1, align 8, !dbg !21300, !tbaa !21204, !ctir !230
  %cmp = icmp eq i64 %5, %7, !dbg !21301
  ret i1 %cmp, !dbg !21302
}

; Function Attrs: nounwind
declare dso_local i32 @fstatfs(i32, %struct.statfs*) #2

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_stat_type(%struct.stat* %st, i32 %dtype) #4 !dbg !21303 !ctir !2482 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  %dtype.addr = alloca i32, align 4
  %type = alloca i32, align 4, !ctir !160
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !21304, metadata !DIExpression()), !dbg !21305
  store i32 %dtype, i32* %dtype.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dtype.addr, metadata !21306, metadata !DIExpression()), !dbg !21307
  call void @llvm.dbg.declare(metadata i32* %type, metadata !21308, metadata !DIExpression()), !dbg !21309
  %0 = load i32, i32* %dtype.addr, align 4, !dbg !21310, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 6, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 1, label %sw.bb3
    i32 10, label %sw.bb4
    i32 8, label %sw.bb5
    i32 12, label %sw.bb6
  ], !dbg !21311

sw.bb:                                            ; preds = %entry
  store i32 24576, i32* %type, align 4, !dbg !21312, !tbaa !2985
  br label %sw.epilog, !dbg !21314

sw.bb1:                                           ; preds = %entry
  store i32 8192, i32* %type, align 4, !dbg !21315, !tbaa !2985
  br label %sw.epilog, !dbg !21316

sw.bb2:                                           ; preds = %entry
  store i32 16384, i32* %type, align 4, !dbg !21317, !tbaa !2985
  br label %sw.epilog, !dbg !21318

sw.bb3:                                           ; preds = %entry
  store i32 4096, i32* %type, align 4, !dbg !21319, !tbaa !2985
  br label %sw.epilog, !dbg !21320

sw.bb4:                                           ; preds = %entry
  store i32 40960, i32* %type, align 4, !dbg !21321, !tbaa !2985
  br label %sw.epilog, !dbg !21322

sw.bb5:                                           ; preds = %entry
  store i32 32768, i32* %type, align 4, !dbg !21323, !tbaa !2985
  br label %sw.epilog, !dbg !21324

sw.bb6:                                           ; preds = %entry
  store i32 49152, i32* %type, align 4, !dbg !21325, !tbaa !2985
  br label %sw.epilog, !dbg !21326

sw.default:                                       ; preds = %entry
  store i32 0, i32* %type, align 4, !dbg !21327, !tbaa !2985
  br label %sw.epilog, !dbg !21328

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %type, align 4, !dbg !21329, !tbaa !2985
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !21330, !tbaa !2998
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3, !dbg !21331, !ctir !2393
  store i32 %1, i32* %st_mode, align 8, !dbg !21332, !tbaa !3181, !ctir !133
  ret void, !dbg !21333
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !21334 !ctir !2485 {
entry:
  %retval = alloca i1, align 1
  %p.addr = alloca %struct._ftsent*, align 8
  %dir_fd.addr = alloca i32, align 4
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21335, metadata !DIExpression()), !dbg !21336
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !21337, metadata !DIExpression()), !dbg !21338
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21339, !tbaa !2998
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !21340, !tbaa !2985
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !21341
  switch i64 %call, label %sw.default [
    i64 4283649346, label %sw.bb
    i64 26985, label %sw.bb
    i64 16914836, label %sw.bb
  ], !dbg !21342

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i1 false, i1* %retval, align 1, !dbg !21343
  br label %return, !dbg !21343

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21345
  br label %return, !dbg !21345

return:                                           ; preds = %sw.default, %sw.bb
  %2 = load i1, i1* %retval, align 1, !dbg !21346
  ret i1 %2, !dbg !21346
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_padjust(%struct.FTS* %sp, %struct._ftsent* %head) #4 !dbg !21347 !ctir !2450 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8
  %head.addr = alloca %struct._ftsent*, align 8
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %addr = alloca i8*, align 8, !ctir !9
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21348, metadata !DIExpression()), !dbg !21349
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !21350, metadata !DIExpression()), !dbg !21351
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !21352, metadata !DIExpression()), !dbg !21353
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !21354, metadata !DIExpression()), !dbg !21355
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21356, !tbaa !2998
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 4, !dbg !21357, !ctir !2338
  %1 = load i8*, i8** %fts_path, align 8, !dbg !21357, !tbaa !18770, !ctir !9
  store i8* %1, i8** %addr, align 8, !dbg !21355, !tbaa !2998
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21358, !tbaa !2998
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 1, !dbg !21360, !ctir !2338
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !21360, !tbaa !19367, !ctir !2325
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !21361, !tbaa !2998
  br label %for.cond, !dbg !21362

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21363, !tbaa !2998
  %tobool = icmp ne %struct._ftsent* %4, null, !dbg !21365
  br i1 %tobool, label %for.body, label %for.end, !dbg !21365

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !21366

do.body:                                          ; preds = %for.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21367, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 6, !dbg !21367, !ctir !2321
  %6 = load i8*, i8** %fts_accpath, align 8, !dbg !21367, !tbaa !2998, !ctir !9
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21367, !tbaa !2998
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !21367, !ctir !2321
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !21367
  %cmp = icmp ne i8* %6, %arraydecay, !dbg !21367
  br i1 %cmp, label %if.then, label %if.end, !dbg !21370

if.then:                                          ; preds = %do.body
  %8 = load i8*, i8** %addr, align 8, !dbg !21371, !tbaa !2998
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21371, !tbaa !2998
  %fts_accpath1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 6, !dbg !21371, !ctir !2321
  %10 = load i8*, i8** %fts_accpath1, align 8, !dbg !21371, !tbaa !2998, !ctir !9
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21371, !tbaa !2998
  %fts_path2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 7, !dbg !21371, !ctir !2321
  %12 = load i8*, i8** %fts_path2, align 8, !dbg !21371, !tbaa !2998, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !21371
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !21371
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !21371
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %sub.ptr.sub, !dbg !21371
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21371, !tbaa !2998
  %fts_accpath3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 6, !dbg !21371, !ctir !2321
  store i8* %add.ptr, i8** %fts_accpath3, align 8, !dbg !21371, !tbaa !2998, !ctir !9
  br label %if.end, !dbg !21371

if.end:                                           ; preds = %if.then, %do.body
  %14 = load i8*, i8** %addr, align 8, !dbg !21370, !tbaa !2998
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21370, !tbaa !2998
  %fts_path4 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 7, !dbg !21370, !ctir !2321
  store i8* %14, i8** %fts_path4, align 8, !dbg !21370, !tbaa !2998, !ctir !9
  br label %do.end, !dbg !21370

do.end:                                           ; preds = %if.end
  br label %for.inc, !dbg !21370

for.inc:                                          ; preds = %do.end
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21373, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 2, !dbg !21374, !ctir !2321
  %17 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !21374, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %17, %struct._ftsent** %p, align 8, !dbg !21375, !tbaa !2998
  br label %for.cond, !dbg !21376, !llvm.loop !21377

for.end:                                          ; preds = %for.cond
  %18 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !21379, !tbaa !2998
  store %struct._ftsent* %18, %struct._ftsent** %p, align 8, !dbg !21381, !tbaa !2998
  br label %for.cond5, !dbg !21382

for.cond5:                                        ; preds = %cond.end, %for.end
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21383, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !21385, !ctir !2321
  %20 = load i64, i64* %fts_level, align 8, !dbg !21385, !tbaa !3851, !ctir !568
  %cmp6 = icmp sge i64 %20, 0, !dbg !21386
  br i1 %cmp6, label %for.body7, label %for.end27, !dbg !21387

for.body7:                                        ; preds = %for.cond5
  br label %do.body8, !dbg !21388

do.body8:                                         ; preds = %for.body7
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21390, !tbaa !2998
  %fts_accpath9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !21390, !ctir !2321
  %22 = load i8*, i8** %fts_accpath9, align 8, !dbg !21390, !tbaa !2998, !ctir !9
  %23 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21390, !tbaa !2998
  %fts_name10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 19, !dbg !21390, !ctir !2321
  %arraydecay11 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name10, i64 0, i64 0, !dbg !21390
  %cmp12 = icmp ne i8* %22, %arraydecay11, !dbg !21390
  br i1 %cmp12, label %if.then13, label %if.end21, !dbg !21393

if.then13:                                        ; preds = %do.body8
  %24 = load i8*, i8** %addr, align 8, !dbg !21394, !tbaa !2998
  %25 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21394, !tbaa !2998
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 6, !dbg !21394, !ctir !2321
  %26 = load i8*, i8** %fts_accpath14, align 8, !dbg !21394, !tbaa !2998, !ctir !9
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21394, !tbaa !2998
  %fts_path15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 7, !dbg !21394, !ctir !2321
  %28 = load i8*, i8** %fts_path15, align 8, !dbg !21394, !tbaa !2998, !ctir !9
  %sub.ptr.lhs.cast16 = ptrtoint i8* %26 to i64, !dbg !21394
  %sub.ptr.rhs.cast17 = ptrtoint i8* %28 to i64, !dbg !21394
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !21394
  %add.ptr19 = getelementptr inbounds i8, i8* %24, i64 %sub.ptr.sub18, !dbg !21394
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21394, !tbaa !2998
  %fts_accpath20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 6, !dbg !21394, !ctir !2321
  store i8* %add.ptr19, i8** %fts_accpath20, align 8, !dbg !21394, !tbaa !2998, !ctir !9
  br label %if.end21, !dbg !21394

if.end21:                                         ; preds = %if.then13, %do.body8
  %30 = load i8*, i8** %addr, align 8, !dbg !21393, !tbaa !2998
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21393, !tbaa !2998
  %fts_path22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 7, !dbg !21393, !ctir !2321
  store i8* %30, i8** %fts_path22, align 8, !dbg !21393, !tbaa !2998, !ctir !9
  br label %do.end23, !dbg !21393

do.end23:                                         ; preds = %if.end21
  %32 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21396, !tbaa !2998
  %fts_link24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 2, !dbg !21397, !ctir !2321
  %33 = load %struct._ftsent*, %struct._ftsent** %fts_link24, align 8, !dbg !21397, !tbaa !2998, !ctir !2325
  %tobool25 = icmp ne %struct._ftsent* %33, null, !dbg !21396
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !21396

cond.true:                                        ; preds = %do.end23
  %34 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21398, !tbaa !2998
  %fts_link26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !21399, !ctir !2321
  %35 = load %struct._ftsent*, %struct._ftsent** %fts_link26, align 8, !dbg !21399, !tbaa !2998, !ctir !2325
  br label %cond.end, !dbg !21396

cond.false:                                       ; preds = %do.end23
  %36 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21400, !tbaa !2998
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 1, !dbg !21401, !ctir !2321
  %37 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !21401, !tbaa !2998, !ctir !2325
  br label %cond.end, !dbg !21396

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !21396
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !21402, !tbaa !2998
  br label %for.cond5, !dbg !21403, !llvm.loop !21404

for.end27:                                        ; preds = %for.cond5
  ret void, !dbg !21406
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compare_ino(%struct._ftsent** %a, %struct._ftsent** %b) #4 !dbg !21407 !ctir !2353 {
entry:
  %a.addr = alloca %struct._ftsent**, align 8
  %b.addr = alloca %struct._ftsent**, align 8
  store %struct._ftsent** %a, %struct._ftsent*** %a.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a.addr, metadata !21408, metadata !DIExpression()), !dbg !21409
  store %struct._ftsent** %b, %struct._ftsent*** %b.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %b.addr, metadata !21410, metadata !DIExpression()), !dbg !21411
  %0 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21412, !tbaa !2998
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %0, i64 0, !dbg !21412, !ctir !2355
  %1 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !21412, !tbaa !2998
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 18, !dbg !21413, !ctir !2357
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !21414
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !21414, !ctir !2453
  %2 = load i64, i64* %st_ino, align 8, !dbg !21414, !tbaa !3873, !ctir !228
  %3 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21415, !tbaa !2998
  %arrayidx1 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %3, i64 0, !dbg !21415, !ctir !2355
  %4 = load %struct._ftsent*, %struct._ftsent** %arrayidx1, align 8, !dbg !21415, !tbaa !2998
  %fts_statp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !21416, !ctir !2357
  %arraydecay3 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp2, i64 0, i64 0, !dbg !21417
  %st_ino4 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay3, i32 0, i32 1, !dbg !21417, !ctir !2453
  %5 = load i64, i64* %st_ino4, align 8, !dbg !21417, !tbaa !3873, !ctir !228
  %cmp = icmp ult i64 %2, %5, !dbg !21418
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21412

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !21412

cond.false:                                       ; preds = %entry
  %6 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21419, !tbaa !2998
  %arrayidx5 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %6, i64 0, !dbg !21419, !ctir !2355
  %7 = load %struct._ftsent*, %struct._ftsent** %arrayidx5, align 8, !dbg !21419, !tbaa !2998
  %fts_statp6 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 18, !dbg !21420, !ctir !2357
  %arraydecay7 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp6, i64 0, i64 0, !dbg !21421
  %st_ino8 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay7, i32 0, i32 1, !dbg !21421, !ctir !2453
  %8 = load i64, i64* %st_ino8, align 8, !dbg !21421, !tbaa !3873, !ctir !228
  %9 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21422, !tbaa !2998
  %arrayidx9 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %9, i64 0, !dbg !21422, !ctir !2355
  %10 = load %struct._ftsent*, %struct._ftsent** %arrayidx9, align 8, !dbg !21422, !tbaa !2998
  %fts_statp10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 18, !dbg !21423, !ctir !2357
  %arraydecay11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp10, i64 0, i64 0, !dbg !21424
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay11, i32 0, i32 1, !dbg !21424, !ctir !2453
  %11 = load i64, i64* %st_ino12, align 8, !dbg !21424, !tbaa !3873, !ctir !228
  %cmp13 = icmp ult i64 %8, %11, !dbg !21425
  %12 = zext i1 %cmp13 to i64, !dbg !21419
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !21419
  br label %cond.end, !dbg !21412

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i32 [ -1, %cond.true ], [ %cond, %cond.false ], !dbg !21412
  ret i32 %cond14, !dbg !21426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_set(%struct.FTS* %sp, %struct._ftsent* %p, i32 %instr) #4 !dbg !21427 !ctir !2425 {
entry:
  %retval = alloca i32, align 4
  %sp.addr = alloca %struct.FTS*, align 8
  %p.addr = alloca %struct._ftsent*, align 8
  %instr.addr = alloca i32, align 4
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21428, metadata !DIExpression()), !dbg !21429
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21430, metadata !DIExpression()), !dbg !21431
  store i32 %instr, i32* %instr.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21432, metadata !DIExpression()), !dbg !21433
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21434, !tbaa !2985
  %cmp = icmp ne i32 %0, 0, !dbg !21436
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21437

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21438, !tbaa !2985
  %cmp1 = icmp ne i32 %1, 1, !dbg !21439
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !21440

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %instr.addr, align 4, !dbg !21441, !tbaa !2985
  %cmp3 = icmp ne i32 %2, 2, !dbg !21442
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !21443

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %3 = load i32, i32* %instr.addr, align 4, !dbg !21444, !tbaa !2985
  %cmp5 = icmp ne i32 %3, 3, !dbg !21445
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !21446

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %4 = load i32, i32* %instr.addr, align 4, !dbg !21447, !tbaa !2985
  %cmp7 = icmp ne i32 %4, 4, !dbg !21448
  br i1 %cmp7, label %if.then, label %if.end, !dbg !21449

if.then:                                          ; preds = %land.lhs.true6
  %call = call i32* @__errno_location() #15, !dbg !21450
  store i32 22, i32* %call, align 4, !dbg !21450, !tbaa !2985, !ctir !7
  store i32 1, i32* %retval, align 4, !dbg !21452
  br label %return, !dbg !21452

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i32, i32* %instr.addr, align 4, !dbg !21453, !tbaa !2985
  %conv = trunc i32 %5 to i16, !dbg !21453
  %6 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21454, !tbaa !2998
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !21455, !ctir !2321
  store i16 %conv, i16* %fts_instr, align 4, !dbg !21456, !tbaa !3813, !ctir !33
  store i32 0, i32* %retval, align 4, !dbg !21457
  br label %return, !dbg !21457

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !21458
  ret i32 %7, !dbg !21458
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_children(%struct.FTS* %sp, i32 %instr) #4 !dbg !21459 !ctir !2427 {
entry:
  %retval = alloca %struct._ftsent*, align 8
  %sp.addr = alloca %struct.FTS*, align 8
  %instr.addr = alloca i32, align 4
  %p = alloca %struct._ftsent*, align 8, !ctir !2420
  %fd = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21460, metadata !DIExpression()), !dbg !21461
  store i32 %instr, i32* %instr.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21462, metadata !DIExpression()), !dbg !21463
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !21464, metadata !DIExpression()), !dbg !21465
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21466, metadata !DIExpression()), !dbg !21467
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21468, !tbaa !2985
  %cmp = icmp ne i32 %0, 0, !dbg !21470
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21471

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21472, !tbaa !2985
  %cmp1 = icmp ne i32 %1, 4096, !dbg !21473
  br i1 %cmp1, label %if.then, label %if.end, !dbg !21474

if.then:                                          ; preds = %land.lhs.true
  %call = call i32* @__errno_location() #15, !dbg !21475
  store i32 22, i32* %call, align 4, !dbg !21475, !tbaa !2985, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21477
  br label %return, !dbg !21477

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21478, !tbaa !2998
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !21479, !ctir !2338
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !21479, !tbaa !18719, !ctir !2325
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !21480, !tbaa !2998
  %call2 = call i32* @__errno_location() #15, !dbg !21481
  store i32 0, i32* %call2, align 4, !dbg !21481, !tbaa !2985, !ctir !7
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21482, !tbaa !2998
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !21482, !ctir !2338
  %5 = load i32, i32* %fts_options, align 8, !dbg !21482, !tbaa !18131, !ctir !7
  %and = and i32 %5, 8192, !dbg !21482
  %tobool = icmp ne i32 %and, 0, !dbg !21482
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !21484

if.then3:                                         ; preds = %if.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21485
  br label %return, !dbg !21485

if.end4:                                          ; preds = %if.end
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21486, !tbaa !2998
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 15, !dbg !21488, !ctir !2321
  %7 = load i16, i16* %fts_info, align 8, !dbg !21488, !tbaa !3813, !ctir !33
  %conv = zext i16 %7 to i32, !dbg !21486
  %cmp5 = icmp eq i32 %conv, 9, !dbg !21489
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !21490

if.then7:                                         ; preds = %if.end4
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21491, !tbaa !2998
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !21492, !ctir !2321
  %9 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !21492, !tbaa !2998, !ctir !2325
  store %struct._ftsent* %9, %struct._ftsent** %retval, align 8, !dbg !21493
  br label %return, !dbg !21493

if.end8:                                          ; preds = %if.end4
  %10 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21494, !tbaa !2998
  %fts_info9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 15, !dbg !21496, !ctir !2321
  %11 = load i16, i16* %fts_info9, align 8, !dbg !21496, !tbaa !3813, !ctir !33
  %conv10 = zext i16 %11 to i32, !dbg !21494
  %cmp11 = icmp ne i32 %conv10, 1, !dbg !21497
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !21498

if.then13:                                        ; preds = %if.end8
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21499
  br label %return, !dbg !21499

if.end14:                                         ; preds = %if.end8
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21500, !tbaa !2998
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 1, !dbg !21502, !ctir !2338
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !21502, !tbaa !19367, !ctir !2325
  %cmp15 = icmp ne %struct._ftsent* %13, null, !dbg !21503
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !21504

if.then17:                                        ; preds = %if.end14
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21505, !tbaa !2998
  %fts_child18 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 1, !dbg !21506, !ctir !2338
  %15 = load %struct._ftsent*, %struct._ftsent** %fts_child18, align 8, !dbg !21506, !tbaa !19367, !ctir !2325
  call void @fts_lfree(%struct._ftsent* %15), !dbg !21507
  br label %if.end19, !dbg !21507

if.end19:                                         ; preds = %if.then17, %if.end14
  %16 = load i32, i32* %instr.addr, align 4, !dbg !21508, !tbaa !2985
  %cmp20 = icmp eq i32 %16, 4096, !dbg !21510
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !21511

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21512, !tbaa !2998
  %fts_options23 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !21512, !ctir !2338
  %18 = load i32, i32* %fts_options23, align 8, !dbg !21512, !tbaa !18131, !ctir !7
  %or = or i32 %18, 4096, !dbg !21512
  store i32 %or, i32* %fts_options23, align 8, !dbg !21512, !tbaa !18131, !ctir !7
  store i32 2, i32* %instr.addr, align 4, !dbg !21514, !tbaa !2985
  br label %if.end24, !dbg !21515

if.else:                                          ; preds = %if.end19
  store i32 1, i32* %instr.addr, align 4, !dbg !21516, !tbaa !2985
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21517, !tbaa !2998
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !21519, !ctir !2321
  %20 = load i64, i64* %fts_level, align 8, !dbg !21519, !tbaa !3851, !ctir !568
  %cmp25 = icmp ne i64 %20, 0, !dbg !21520
  br i1 %cmp25, label %if.then34, label %lor.lhs.false, !dbg !21521

lor.lhs.false:                                    ; preds = %if.end24
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21522, !tbaa !2998
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !21523, !ctir !2321
  %22 = load i8*, i8** %fts_accpath, align 8, !dbg !21523, !tbaa !2998, !ctir !9
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 0, !dbg !21522, !ctir !9
  %23 = load i8, i8* %arrayidx, align 1, !dbg !21522, !tbaa !3660
  %conv27 = sext i8 %23 to i32, !dbg !21522
  %cmp28 = icmp eq i32 %conv27, 47, !dbg !21524
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !21525

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21526, !tbaa !2998
  %fts_options31 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !21526, !ctir !2338
  %25 = load i32, i32* %fts_options31, align 8, !dbg !21526, !tbaa !18131, !ctir !7
  %and32 = and i32 %25, 4, !dbg !21526
  %tobool33 = icmp ne i32 %and32, 0, !dbg !21526
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !21527

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %if.end24
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21528, !tbaa !2998
  %27 = load i32, i32* %instr.addr, align 4, !dbg !21529, !tbaa !2985
  %call35 = call %struct._ftsent* @fts_build(%struct.FTS* %26, i32 %27), !dbg !21530
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21531, !tbaa !2998
  %fts_child36 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 1, !dbg !21532, !ctir !2338
  store %struct._ftsent* %call35, %struct._ftsent** %fts_child36, align 8, !dbg !21533, !tbaa !19367, !ctir !2325
  store %struct._ftsent* %call35, %struct._ftsent** %retval, align 8, !dbg !21534
  br label %return, !dbg !21534

if.end37:                                         ; preds = %lor.lhs.false30
  %29 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21535, !tbaa !2998
  %call38 = call i32 @diropen(%struct.FTS* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.437, i64 0, i64 0)), !dbg !21537
  store i32 %call38, i32* %fd, align 4, !dbg !21538, !tbaa !2985
  %cmp39 = icmp slt i32 %call38, 0, !dbg !21539
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !21540

if.then41:                                        ; preds = %if.end37
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21541, !tbaa !2998
  %fts_child42 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 1, !dbg !21542, !ctir !2338
  store %struct._ftsent* null, %struct._ftsent** %fts_child42, align 8, !dbg !21543, !tbaa !19367, !ctir !2325
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21544
  br label %return, !dbg !21544

if.end43:                                         ; preds = %if.end37
  %31 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21545, !tbaa !2998
  %32 = load i32, i32* %instr.addr, align 4, !dbg !21546, !tbaa !2985
  %call44 = call %struct._ftsent* @fts_build(%struct.FTS* %31, i32 %32), !dbg !21547
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21548, !tbaa !2998
  %fts_child45 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 1, !dbg !21549, !ctir !2338
  store %struct._ftsent* %call44, %struct._ftsent** %fts_child45, align 8, !dbg !21550, !tbaa !19367, !ctir !2325
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21551, !tbaa !2998
  %fts_options46 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !21551, !ctir !2338
  %35 = load i32, i32* %fts_options46, align 8, !dbg !21551, !tbaa !18131, !ctir !7
  %and47 = and i32 %35, 512, !dbg !21551
  %tobool48 = icmp ne i32 %and47, 0, !dbg !21551
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !21553

if.then49:                                        ; preds = %if.end43
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21554, !tbaa !2998
  %37 = load i32, i32* %fd, align 4, !dbg !21556, !tbaa !2985
  call void @cwd_advance_fd(%struct.FTS* %36, i32 %37, i1 zeroext true), !dbg !21557
  br label %if.end59, !dbg !21558

if.else50:                                        ; preds = %if.end43
  %38 = load i32, i32* %fd, align 4, !dbg !21559, !tbaa !2985
  %call51 = call i32 @fchdir(i32 %38) #10, !dbg !21562
  %tobool52 = icmp ne i32 %call51, 0, !dbg !21562
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !21563

if.then53:                                        ; preds = %if.else50
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21564, metadata !DIExpression()), !dbg !21566
  %call54 = call i32* @__errno_location() #15, !dbg !21567
  %39 = load i32, i32* %call54, align 4, !dbg !21567, !tbaa !2985, !ctir !7
  store i32 %39, i32* %saved_errno, align 4, !dbg !21566, !tbaa !2985
  %40 = load i32, i32* %fd, align 4, !dbg !21568, !tbaa !2985
  %call55 = call i32 @close(i32 %40), !dbg !21569
  %41 = load i32, i32* %saved_errno, align 4, !dbg !21570, !tbaa !2985
  %call56 = call i32* @__errno_location() #15, !dbg !21570
  store i32 %41, i32* %call56, align 4, !dbg !21570, !tbaa !2985, !ctir !7
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21571
  br label %return, !dbg !21571

if.end57:                                         ; preds = %if.else50
  %42 = load i32, i32* %fd, align 4, !dbg !21572, !tbaa !2985
  %call58 = call i32 @close(i32 %42), !dbg !21573
  br label %if.end59

if.end59:                                         ; preds = %if.end57, %if.then49
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21574, !tbaa !2998
  %fts_child60 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 1, !dbg !21575, !ctir !2338
  %44 = load %struct._ftsent*, %struct._ftsent** %fts_child60, align 8, !dbg !21575, !tbaa !19367, !ctir !2325
  store %struct._ftsent* %44, %struct._ftsent** %retval, align 8, !dbg !21576
  br label %return, !dbg !21576

return:                                           ; preds = %if.end59, %if.then53, %if.then41, %if.then34, %if.then13, %if.then7, %if.then3, %if.then
  %45 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !21577
  ret %struct._ftsent* %45, !dbg !21577
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #4 !dbg !21578 !ctir !2505 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.__mbstate_t*, align 8
  %ret = alloca i64, align 8, !ctir !55
  %wc = alloca i32, align 4, !ctir !1043
  %uc = alloca i8, align 1, !ctir !468
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !21580, metadata !DIExpression()), !dbg !21581
  store i8* %s, i8** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !21582, metadata !DIExpression()), !dbg !21583
  store i64 %n, i64* %n.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !21584, metadata !DIExpression()), !dbg !21585
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !21586, metadata !DIExpression()), !dbg !21587
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !21588, metadata !DIExpression()), !dbg !21589
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !21590, metadata !DIExpression()), !dbg !21591
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !21592, !tbaa !2998
  %tobool = icmp ne i32* %0, null, !dbg !21592
  br i1 %tobool, label %if.end, label %if.then, !dbg !21594

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !21595, !tbaa !2998
  br label %if.end, !dbg !21596

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !21597, !tbaa !2998
  %2 = load i8*, i8** %s.addr, align 8, !dbg !21598, !tbaa !2998
  %3 = load i64, i64* %n.addr, align 8, !dbg !21599, !tbaa !3851
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !21600, !tbaa !2998
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #10, !dbg !21601
  store i64 %call, i64* %ret, align 8, !dbg !21602, !tbaa !3851
  %5 = load i64, i64* %ret, align 8, !dbg !21603, !tbaa !3851
  %cmp = icmp ule i64 -2, %5, !dbg !21605
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !21606

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !21607, !tbaa !3851
  %cmp1 = icmp ne i64 %6, 0, !dbg !21608
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !21609

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !21610
  br i1 %call3, label %if.end5, label %if.then4, !dbg !21611

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !21612, metadata !DIExpression()), !dbg !21614
  %7 = load i8*, i8** %s.addr, align 8, !dbg !21615, !tbaa !2998
  %8 = load i8, i8* %7, align 1, !dbg !21616, !tbaa !3660, !ctir !116
  store i8 %8, i8* %uc, align 1, !dbg !21614, !tbaa !3660
  %9 = load i8, i8* %uc, align 1, !dbg !21617, !tbaa !3660
  %conv = zext i8 %9 to i32, !dbg !21617
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !21618, !tbaa !2998
  store i32 %conv, i32* %10, align 4, !dbg !21619, !tbaa !2985, !ctir !1043
  store i64 1, i64* %retval, align 8, !dbg !21620
  br label %return, !dbg !21620

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !21621, !tbaa !3851
  store i64 %11, i64* %retval, align 8, !dbg !21622
  br label %return, !dbg !21622

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !21623
  ret i64 %12, !dbg !21623
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_access_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !21624 !ctir !2522 {
entry:
  %retval = alloca i32, align 4
  %acl.addr = alloca %struct.__acl_ext*, align 8
  %ace = alloca %struct.__acl_entry_ext*, align 8, !ctir !2528
  %got_one = alloca i32, align 4, !ctir !7
  %tag = alloca i32, align 4, !ctir !2531
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !21626, metadata !DIExpression()), !dbg !21627
  call void @llvm.dbg.declare(metadata %struct.__acl_entry_ext** %ace, metadata !21628, metadata !DIExpression()), !dbg !21629
  call void @llvm.dbg.declare(metadata i32* %got_one, metadata !21630, metadata !DIExpression()), !dbg !21631
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21632, !tbaa !2998
  %call = call i32 @acl_get_entry(%struct.__acl_ext* %0, i32 0, %struct.__acl_entry_ext** %ace), !dbg !21634
  store i32 %call, i32* %got_one, align 4, !dbg !21635, !tbaa !2985
  br label %for.cond, !dbg !21636

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %got_one, align 4, !dbg !21637, !tbaa !2985
  %cmp = icmp sgt i32 %1, 0, !dbg !21639
  br i1 %cmp, label %for.body, label %for.end, !dbg !21640

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !21641, metadata !DIExpression()), !dbg !21643
  %2 = load %struct.__acl_entry_ext*, %struct.__acl_entry_ext** %ace, align 8, !dbg !21644, !tbaa !2998
  %call1 = call i32 @acl_get_tag_type(%struct.__acl_entry_ext* %2, i32* %tag), !dbg !21646
  %cmp2 = icmp slt i32 %call1, 0, !dbg !21647
  br i1 %cmp2, label %if.then, label %if.end, !dbg !21648

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !21649
  br label %return, !dbg !21649

if.end:                                           ; preds = %for.body
  %3 = load i32, i32* %tag, align 4, !dbg !21650, !tbaa !2985
  %cmp3 = icmp eq i32 %3, 1, !dbg !21652
  br i1 %cmp3, label %if.end8, label %lor.lhs.false, !dbg !21653

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %tag, align 4, !dbg !21654, !tbaa !2985
  %cmp4 = icmp eq i32 %4, 4, !dbg !21655
  br i1 %cmp4, label %if.end8, label %lor.lhs.false5, !dbg !21656

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %tag, align 4, !dbg !21657, !tbaa !2985
  %cmp6 = icmp eq i32 %5, 32, !dbg !21658
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !21659

if.then7:                                         ; preds = %lor.lhs.false5
  store i32 1, i32* %retval, align 4, !dbg !21660
  br label %return, !dbg !21660

if.end8:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  br label %for.inc, !dbg !21661

for.inc:                                          ; preds = %if.end8
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21662, !tbaa !2998
  %call9 = call i32 @acl_get_entry(%struct.__acl_ext* %6, i32 1, %struct.__acl_entry_ext** %ace), !dbg !21663
  store i32 %call9, i32* %got_one, align 4, !dbg !21664, !tbaa !2985
  br label %for.cond, !dbg !21665, !llvm.loop !21666

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %got_one, align 4, !dbg !21668, !tbaa !2985
  store i32 %7, i32* %retval, align 4, !dbg !21669
  br label %return, !dbg !21669

return:                                           ; preds = %for.end, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !21670
  ret i32 %8, !dbg !21670
}

declare dso_local i32 @acl_get_entry(%struct.__acl_ext*, i32, %struct.__acl_entry_ext**) #3

declare dso_local i32 @acl_get_tag_type(%struct.__acl_entry_ext*, i32*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_default_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !21671 !ctir !2522 {
entry:
  %acl.addr = alloca %struct.__acl_ext*, align 8
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !21672, metadata !DIExpression()), !dbg !21673
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !21674, !tbaa !2998
  %call = call i32 @acl_entries(%struct.__acl_ext* %0), !dbg !21675
  %cmp = icmp sgt i32 %call, 0, !dbg !21676
  %conv = zext i1 %cmp to i32, !dbg !21676
  ret i32 %conv, !dbg !21677
}

declare dso_local i32 @acl_entries(%struct.__acl_ext*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !21678 !ctir !2532 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21679, metadata !DIExpression()), !dbg !21680
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21681, !tbaa !2998
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 1, !dbg !21683, !ctir !2535
  %1 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !21683, !tbaa !21684, !ctir !2524
  %tobool = icmp ne %struct.__acl_ext* %1, null, !dbg !21681
  br i1 %tobool, label %if.then, label %if.end, !dbg !21685

if.then:                                          ; preds = %entry
  %2 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21686, !tbaa !2998
  %acl1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %2, i32 0, i32 1, !dbg !21687, !ctir !2535
  %3 = load %struct.__acl_ext*, %struct.__acl_ext** %acl1, align 8, !dbg !21687, !tbaa !21684, !ctir !2524
  %4 = bitcast %struct.__acl_ext* %3 to i8*, !dbg !21686
  %call = call i32 @acl_free(i8* %4), !dbg !21688
  br label %if.end, !dbg !21688

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21689, !tbaa !2998
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 2, !dbg !21691, !ctir !2535
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !21691, !tbaa !21692, !ctir !2524
  %tobool2 = icmp ne %struct.__acl_ext* %6, null, !dbg !21689
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !21693

if.then3:                                         ; preds = %if.end
  %7 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21694, !tbaa !2998
  %default_acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %7, i32 0, i32 2, !dbg !21695, !ctir !2535
  %8 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl4, align 8, !dbg !21695, !tbaa !21692, !ctir !2524
  %9 = bitcast %struct.__acl_ext* %8 to i8*, !dbg !21694
  %call5 = call i32 @acl_free(i8* %9), !dbg !21696
  br label %if.end6, !dbg !21696

if.end6:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !21697
}

declare dso_local i32 @acl_free(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !21698 !ctir !2545 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21700, metadata !DIExpression()), !dbg !21701
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21702, metadata !DIExpression()), !dbg !21703
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21704, metadata !DIExpression()), !dbg !21705
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21706, metadata !DIExpression()), !dbg !21707
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21708, !tbaa !2998
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !21709
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !21709
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21710, !tbaa !2985
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21711, !tbaa !2998
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !21712, !ctir !2548
  store i32 %2, i32* %mode1, align 8, !dbg !21713, !tbaa !13617, !ctir !160
  %4 = load i32, i32* %desc.addr, align 4, !dbg !21714, !tbaa !2985
  %cmp = icmp ne i32 %4, -1, !dbg !21716
  br i1 %cmp, label %if.then, label %if.else, !dbg !21717

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %desc.addr, align 4, !dbg !21718, !tbaa !2985
  %call = call %struct.__acl_ext* @acl_get_fd(i32 %5), !dbg !21719
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21720, !tbaa !2998
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !21721, !ctir !2548
  store %struct.__acl_ext* %call, %struct.__acl_ext** %acl, align 8, !dbg !21722, !tbaa !21684, !ctir !2524
  br label %if.end, !dbg !21720

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %name.addr, align 8, !dbg !21723, !tbaa !2998
  %call2 = call %struct.__acl_ext* @acl_get_file(i8* %7, i32 32768), !dbg !21724
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21725, !tbaa !2998
  %acl3 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %8, i32 0, i32 1, !dbg !21726, !ctir !2548
  store %struct.__acl_ext* %call2, %struct.__acl_ext** %acl3, align 8, !dbg !21727, !tbaa !21684, !ctir !2524
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21728, !tbaa !2998
  %acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 1, !dbg !21730, !ctir !2548
  %10 = load %struct.__acl_ext*, %struct.__acl_ext** %acl4, align 8, !dbg !21730, !tbaa !21684, !ctir !2524
  %cmp5 = icmp eq %struct.__acl_ext* %10, null, !dbg !21731
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !21732

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #15, !dbg !21733
  %11 = load i32, i32* %call7, align 4, !dbg !21733, !tbaa !2985, !ctir !7
  %call8 = call zeroext i1 @acl_errno_valid(i32 %11) #15, !dbg !21734
  %12 = zext i1 %call8 to i64, !dbg !21734
  %cond = select i1 %call8, i32 -1, i32 0, !dbg !21734
  store i32 %cond, i32* %retval, align 4, !dbg !21735
  br label %return, !dbg !21735

if.end9:                                          ; preds = %if.end
  %13 = load i32, i32* %mode.addr, align 4, !dbg !21736, !tbaa !2985
  %and = and i32 %13, 61440, !dbg !21736
  %cmp10 = icmp eq i32 %and, 16384, !dbg !21736
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !21738

if.then11:                                        ; preds = %if.end9
  %14 = load i8*, i8** %name.addr, align 8, !dbg !21739, !tbaa !2998
  %call12 = call %struct.__acl_ext* @acl_get_file(i8* %14, i32 16384), !dbg !21741
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21742, !tbaa !2998
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 2, !dbg !21743, !ctir !2548
  store %struct.__acl_ext* %call12, %struct.__acl_ext** %default_acl, align 8, !dbg !21744, !tbaa !21692, !ctir !2524
  %16 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21745, !tbaa !2998
  %default_acl13 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %16, i32 0, i32 2, !dbg !21747, !ctir !2548
  %17 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl13, align 8, !dbg !21747, !tbaa !21692, !ctir !2524
  %cmp14 = icmp eq %struct.__acl_ext* %17, null, !dbg !21748
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !21749

if.then15:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !21750
  br label %return, !dbg !21750

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !21751

if.end17:                                         ; preds = %if.end16, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !21752
  br label %return, !dbg !21752

return:                                           ; preds = %if.end17, %if.then15, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !21753
  ret i32 %18, !dbg !21753
}

declare dso_local %struct.__acl_ext* @acl_get_fd(i32) #3

declare dso_local %struct.__acl_ext* @acl_get_file(i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !21754 !ctir !1589 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21756, metadata !DIExpression()), !dbg !21757
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21758, metadata !DIExpression()), !dbg !21759
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21760, metadata !DIExpression()), !dbg !21761
  %0 = load i32, i32* %desc.addr, align 4, !dbg !21762, !tbaa !2985
  %cmp = icmp ne i32 %0, -1, !dbg !21764
  br i1 %cmp, label %if.then, label %if.else, !dbg !21765

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !21766, !tbaa !2985
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21767, !tbaa !2985
  %call = call i32 @fchmod(i32 %1, i32 %2) #10, !dbg !21768
  store i32 %call, i32* %retval, align 4, !dbg !21769
  br label %return, !dbg !21769

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21770, !tbaa !2998
  %4 = load i32, i32* %mode.addr, align 4, !dbg !21771, !tbaa !2985
  %call1 = call i32 @chmod(i8* %3, i32 %4) #10, !dbg !21772
  store i32 %call1, i32* %retval, align 4, !dbg !21773
  br label %return, !dbg !21773

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21774
  ret i32 %5, !dbg !21774
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !21775 !ctir !2557 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !120
  %early_chmod = alloca i8, align 1, !ctir !120
  %must_chmod = alloca i8, align 1, !ctir !120
  %ret = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  %saved_errno22 = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21776, metadata !DIExpression()), !dbg !21777
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21778, metadata !DIExpression()), !dbg !21779
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21780, metadata !DIExpression()), !dbg !21781
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !21782, metadata !DIExpression()), !dbg !21783
  store i8 0, i8* %acls_set, align 1, !dbg !21783, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !21784, metadata !DIExpression()), !dbg !21785
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !21786, metadata !DIExpression()), !dbg !21787
  store i8 0, i8* %must_chmod, align 1, !dbg !21787, !tbaa !3109
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21788, metadata !DIExpression()), !dbg !21789
  store i32 0, i32* %ret, align 4, !dbg !21789, !tbaa !2985
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21790, !tbaa !2998
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 0, !dbg !21791, !ctir !2560
  %1 = load i32, i32* %mode, align 8, !dbg !21791, !tbaa !13617, !ctir !160
  %and = and i32 %1, 3584, !dbg !21792
  %tobool = icmp ne i32 %and, 0, !dbg !21793
  %frombool = zext i1 %tobool to i8, !dbg !21794
  store i8 %frombool, i8* %early_chmod, align 1, !dbg !21794, !tbaa !3109
  %2 = load i8, i8* %early_chmod, align 1, !dbg !21795, !tbaa !3109
  %tobool1 = trunc i8 %2 to i1, !dbg !21795
  br i1 %tobool1, label %if.then, label %if.end4, !dbg !21797

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21798, !tbaa !2998
  %4 = load i32, i32* %desc.addr, align 4, !dbg !21800, !tbaa !2985
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21801, !tbaa !2998
  %mode2 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 0, !dbg !21802, !ctir !2560
  %6 = load i32, i32* %mode2, align 8, !dbg !21802, !tbaa !13617, !ctir !160
  %call = call i32 @chmod_or_fchmod(i8* %3, i32 %4, i32 %6), !dbg !21803
  store i32 %call, i32* %ret, align 4, !dbg !21804, !tbaa !2985
  %7 = load i32, i32* %ret, align 4, !dbg !21805, !tbaa !2985
  %cmp = icmp ne i32 %7, 0, !dbg !21807
  br i1 %cmp, label %if.then3, label %if.end, !dbg !21808

if.then3:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21809
  br label %return, !dbg !21809

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !21810

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21811, !tbaa !2998
  %9 = load i8*, i8** %name.addr, align 8, !dbg !21812, !tbaa !2998
  %10 = load i32, i32* %desc.addr, align 4, !dbg !21813, !tbaa !2985
  %call5 = call i32 @set_acls(%struct.permission_context* %8, i8* %9, i32 %10, i32 0, i8* %must_chmod, i8* %acls_set), !dbg !21814
  store i32 %call5, i32* %ret, align 4, !dbg !21815, !tbaa !2985
  %11 = load i8, i8* %acls_set, align 1, !dbg !21816, !tbaa !3109
  %tobool6 = trunc i8 %11 to i1, !dbg !21816
  br i1 %tobool6, label %if.end18, label %if.then7, !dbg !21818

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21819, metadata !DIExpression()), !dbg !21821
  %12 = load i32, i32* %ret, align 4, !dbg !21822, !tbaa !2985
  %tobool8 = icmp ne i32 %12, 0, !dbg !21822
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !21822

cond.true:                                        ; preds = %if.then7
  %call9 = call i32* @__errno_location() #15, !dbg !21823
  %13 = load i32, i32* %call9, align 4, !dbg !21823, !tbaa !2985, !ctir !7
  br label %cond.end, !dbg !21822

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !21822

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 0, %cond.false ], !dbg !21822
  store i32 %cond, i32* %saved_errno, align 4, !dbg !21821, !tbaa !2985
  %14 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21824, !tbaa !2998
  %15 = load i8*, i8** %name.addr, align 8, !dbg !21825, !tbaa !2998
  %16 = load i32, i32* %desc.addr, align 4, !dbg !21826, !tbaa !2985
  %call10 = call i32 @set_acls(%struct.permission_context* %14, i8* %15, i32 %16, i32 1, i8* %must_chmod, i8* %acls_set), !dbg !21827
  store i32 %call10, i32* %ret, align 4, !dbg !21828, !tbaa !2985
  %17 = load i8, i8* %acls_set, align 1, !dbg !21829, !tbaa !3109
  %tobool11 = trunc i8 %17 to i1, !dbg !21829
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !21831

if.then12:                                        ; preds = %cond.end
  store i8 1, i8* %must_chmod, align 1, !dbg !21832, !tbaa !3109
  br label %if.end13, !dbg !21833

if.end13:                                         ; preds = %if.then12, %cond.end
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21834, !tbaa !2985
  %tobool14 = icmp ne i32 %18, 0, !dbg !21834
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !21836

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %saved_errno, align 4, !dbg !21837, !tbaa !2985
  %call16 = call i32* @__errno_location() #15, !dbg !21839
  store i32 %19, i32* %call16, align 4, !dbg !21840, !tbaa !2985, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !21841, !tbaa !2985
  br label %if.end17, !dbg !21842

if.end17:                                         ; preds = %if.then15, %if.end13
  br label %if.end18, !dbg !21843

if.end18:                                         ; preds = %if.end17, %if.end4
  %20 = load i8, i8* %must_chmod, align 1, !dbg !21844, !tbaa !3109
  %tobool19 = trunc i8 %20 to i1, !dbg !21844
  br i1 %tobool19, label %land.lhs.true, label %if.end35, !dbg !21846

land.lhs.true:                                    ; preds = %if.end18
  %21 = load i8, i8* %early_chmod, align 1, !dbg !21847, !tbaa !3109
  %tobool20 = trunc i8 %21 to i1, !dbg !21847
  br i1 %tobool20, label %if.end35, label %if.then21, !dbg !21848

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno22, metadata !21849, metadata !DIExpression()), !dbg !21851
  %22 = load i32, i32* %ret, align 4, !dbg !21852, !tbaa !2985
  %tobool23 = icmp ne i32 %22, 0, !dbg !21852
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !21852

cond.true24:                                      ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !21853
  %23 = load i32, i32* %call25, align 4, !dbg !21853, !tbaa !2985, !ctir !7
  br label %cond.end27, !dbg !21852

cond.false26:                                     ; preds = %if.then21
  br label %cond.end27, !dbg !21852

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i32 [ %23, %cond.true24 ], [ 0, %cond.false26 ], !dbg !21852
  store i32 %cond28, i32* %saved_errno22, align 4, !dbg !21851, !tbaa !2985
  %24 = load i8*, i8** %name.addr, align 8, !dbg !21854, !tbaa !2998
  %25 = load i32, i32* %desc.addr, align 4, !dbg !21855, !tbaa !2985
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21856, !tbaa !2998
  %mode29 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 0, !dbg !21857, !ctir !2560
  %27 = load i32, i32* %mode29, align 8, !dbg !21857, !tbaa !13617, !ctir !160
  %call30 = call i32 @chmod_or_fchmod(i8* %24, i32 %25, i32 %27), !dbg !21858
  store i32 %call30, i32* %ret, align 4, !dbg !21859, !tbaa !2985
  %28 = load i32, i32* %saved_errno22, align 4, !dbg !21860, !tbaa !2985
  %tobool31 = icmp ne i32 %28, 0, !dbg !21860
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !21862

if.then32:                                        ; preds = %cond.end27
  %29 = load i32, i32* %saved_errno22, align 4, !dbg !21863, !tbaa !2985
  %call33 = call i32* @__errno_location() #15, !dbg !21865
  store i32 %29, i32* %call33, align 4, !dbg !21866, !tbaa !2985, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !21867, !tbaa !2985
  br label %if.end34, !dbg !21868

if.end34:                                         ; preds = %if.then32, %cond.end27
  br label %if.end35, !dbg !21869

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %if.end18
  %30 = load i32, i32* %ret, align 4, !dbg !21870, !tbaa !2985
  store i32 %30, i32* %retval, align 4, !dbg !21871
  br label %return, !dbg !21871

return:                                           ; preds = %if.end35, %if.then3
  %31 = load i32, i32* %retval, align 4, !dbg !21872
  ret i32 %31, !dbg !21872
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_acls(%struct.permission_context* %ctx, i8* %name, i32 %desc, i32 %from_mode, i8* %must_chmod, i8* %acls_set) #4 !dbg !21873 !ctir !2566 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %from_mode.addr = alloca i32, align 4
  %must_chmod.addr = alloca i8*, align 8
  %acls_set.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21874, metadata !DIExpression()), !dbg !21875
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21876, metadata !DIExpression()), !dbg !21877
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21878, metadata !DIExpression()), !dbg !21879
  store i32 %from_mode, i32* %from_mode.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %from_mode.addr, metadata !21880, metadata !DIExpression()), !dbg !21881
  store i8* %must_chmod, i8** %must_chmod.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %must_chmod.addr, metadata !21882, metadata !DIExpression()), !dbg !21883
  store i8* %acls_set, i8** %acls_set.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %acls_set.addr, metadata !21884, metadata !DIExpression()), !dbg !21885
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21886, metadata !DIExpression()), !dbg !21887
  store i32 0, i32* %ret, align 4, !dbg !21887, !tbaa !2985
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21888, !tbaa !2998
  %acls_not_supported = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 3, !dbg !21890, !ctir !2560
  %1 = load i8, i8* %acls_not_supported, align 8, !dbg !21890, !tbaa !21891
  %tobool = trunc i8 %1 to i1, !dbg !21890, !ctir !120
  br i1 %tobool, label %if.end58, label %if.then, !dbg !21892

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !21893, !tbaa !2985
  %cmp = icmp eq i32 %2, 0, !dbg !21896
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !21897

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* %from_mode.addr, align 4, !dbg !21898, !tbaa !2985
  %tobool1 = icmp ne i32 %3, 0, !dbg !21898
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !21899

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21900, !tbaa !2998
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %4, i32 0, i32 1, !dbg !21903, !ctir !2560
  %5 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !21903, !tbaa !21684, !ctir !2524
  %tobool3 = icmp ne %struct.__acl_ext* %5, null, !dbg !21900
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !21904

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21905, !tbaa !2998
  %acl5 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !21906, !ctir !2560
  %7 = load %struct.__acl_ext*, %struct.__acl_ext** %acl5, align 8, !dbg !21906, !tbaa !21684, !ctir !2524
  %8 = bitcast %struct.__acl_ext* %7 to i8*, !dbg !21905
  %call = call i32 @acl_free(i8* %8), !dbg !21907
  br label %if.end, !dbg !21907

if.end:                                           ; preds = %if.then4, %if.then2
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21908, !tbaa !2998
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 0, !dbg !21909, !ctir !2560
  %10 = load i32, i32* %mode, align 8, !dbg !21909, !tbaa !13617, !ctir !160
  %call6 = call %struct.__acl_ext* @acl_from_mode(i32 %10), !dbg !21910
  %11 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21911, !tbaa !2998
  %acl7 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %11, i32 0, i32 1, !dbg !21912, !ctir !2560
  store %struct.__acl_ext* %call6, %struct.__acl_ext** %acl7, align 8, !dbg !21913, !tbaa !21684, !ctir !2524
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21914, !tbaa !2998
  %acl8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 1, !dbg !21916, !ctir !2560
  %13 = load %struct.__acl_ext*, %struct.__acl_ext** %acl8, align 8, !dbg !21916, !tbaa !21684, !ctir !2524
  %cmp9 = icmp eq %struct.__acl_ext* %13, null, !dbg !21917
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !21918

if.then10:                                        ; preds = %if.end
  store i32 -1, i32* %ret, align 4, !dbg !21919, !tbaa !2985
  br label %if.end11, !dbg !21920

if.end11:                                         ; preds = %if.then10, %if.end
  br label %if.end12, !dbg !21921

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !21922, !tbaa !2985
  %cmp13 = icmp eq i32 %14, 0, !dbg !21924
  br i1 %cmp13, label %land.lhs.true14, label %if.end57, !dbg !21925

land.lhs.true14:                                  ; preds = %if.end12
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21926, !tbaa !2998
  %acl15 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 1, !dbg !21927, !ctir !2560
  %16 = load %struct.__acl_ext*, %struct.__acl_ext** %acl15, align 8, !dbg !21927, !tbaa !21684, !ctir !2524
  %tobool16 = icmp ne %struct.__acl_ext* %16, null, !dbg !21926
  br i1 %tobool16, label %if.then17, label %if.end57, !dbg !21928

if.then17:                                        ; preds = %land.lhs.true14
  %17 = load i32, i32* %desc.addr, align 4, !dbg !21929, !tbaa !2985
  %cmp18 = icmp ne i32 %17, -1, !dbg !21932
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !21933

if.then19:                                        ; preds = %if.then17
  %18 = load i32, i32* %desc.addr, align 4, !dbg !21934, !tbaa !2985
  %19 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21935, !tbaa !2998
  %acl20 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %19, i32 0, i32 1, !dbg !21936, !ctir !2560
  %20 = load %struct.__acl_ext*, %struct.__acl_ext** %acl20, align 8, !dbg !21936, !tbaa !21684, !ctir !2524
  %call21 = call i32 @acl_set_fd(i32 %18, %struct.__acl_ext* %20), !dbg !21937
  store i32 %call21, i32* %ret, align 4, !dbg !21938, !tbaa !2985
  br label %if.end24, !dbg !21939

if.else:                                          ; preds = %if.then17
  %21 = load i8*, i8** %name.addr, align 8, !dbg !21940, !tbaa !2998
  %22 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21941, !tbaa !2998
  %acl22 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %22, i32 0, i32 1, !dbg !21942, !ctir !2560
  %23 = load %struct.__acl_ext*, %struct.__acl_ext** %acl22, align 8, !dbg !21942, !tbaa !21684, !ctir !2524
  %call23 = call i32 @acl_set_file(i8* %21, i32 32768, %struct.__acl_ext* %23), !dbg !21943
  store i32 %call23, i32* %ret, align 4, !dbg !21944, !tbaa !2985
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !21945, !tbaa !2985
  %cmp25 = icmp ne i32 %24, 0, !dbg !21947
  br i1 %cmp25, label %if.then26, label %if.else38, !dbg !21948

if.then26:                                        ; preds = %if.end24
  %call27 = call i32* @__errno_location() #15, !dbg !21949
  %25 = load i32, i32* %call27, align 4, !dbg !21949, !tbaa !2985, !ctir !7
  %call28 = call zeroext i1 @acl_errno_valid(i32 %25) #15, !dbg !21952
  br i1 %call28, label %if.end37, label %if.then29, !dbg !21953

if.then29:                                        ; preds = %if.then26
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21954, !tbaa !2998
  %acls_not_supported30 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 3, !dbg !21956, !ctir !2560
  store i8 1, i8* %acls_not_supported30, align 8, !dbg !21957, !tbaa !21891, !ctir !120
  %27 = load i32, i32* %from_mode.addr, align 4, !dbg !21958, !tbaa !2985
  %tobool31 = icmp ne i32 %27, 0, !dbg !21958
  br i1 %tobool31, label %if.then35, label %lor.lhs.false, !dbg !21960

lor.lhs.false:                                    ; preds = %if.then29
  %28 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21961, !tbaa !2998
  %acl32 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %28, i32 0, i32 1, !dbg !21962, !ctir !2560
  %29 = load %struct.__acl_ext*, %struct.__acl_ext** %acl32, align 8, !dbg !21962, !tbaa !21684, !ctir !2524
  %call33 = call i32 @acl_access_nontrivial(%struct.__acl_ext* %29), !dbg !21963
  %cmp34 = icmp eq i32 %call33, 0, !dbg !21964
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !21965

if.then35:                                        ; preds = %lor.lhs.false, %if.then29
  store i32 0, i32* %ret, align 4, !dbg !21966, !tbaa !2985
  br label %if.end36, !dbg !21967

if.end36:                                         ; preds = %if.then35, %lor.lhs.false
  br label %if.end37, !dbg !21968

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end56, !dbg !21969

if.else38:                                        ; preds = %if.end24
  %30 = load i8*, i8** %acls_set.addr, align 8, !dbg !21970, !tbaa !2998
  store i8 1, i8* %30, align 1, !dbg !21972, !tbaa !3109, !ctir !120
  %31 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21973, !tbaa !2998
  %mode39 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %31, i32 0, i32 0, !dbg !21973, !ctir !2560
  %32 = load i32, i32* %mode39, align 8, !dbg !21973, !tbaa !13617, !ctir !160
  %and = and i32 %32, 61440, !dbg !21973
  %cmp40 = icmp eq i32 %and, 16384, !dbg !21973
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !21975

if.then41:                                        ; preds = %if.else38
  %33 = load i32, i32* %from_mode.addr, align 4, !dbg !21976, !tbaa !2985
  %tobool42 = icmp ne i32 %33, 0, !dbg !21976
  br i1 %tobool42, label %if.else52, label %land.lhs.true43, !dbg !21979

land.lhs.true43:                                  ; preds = %if.then41
  %34 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21980, !tbaa !2998
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %34, i32 0, i32 2, !dbg !21981, !ctir !2560
  %35 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !21981, !tbaa !21692, !ctir !2524
  %tobool44 = icmp ne %struct.__acl_ext* %35, null, !dbg !21980
  br i1 %tobool44, label %land.lhs.true45, label %if.else52, !dbg !21982

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %36 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21983, !tbaa !2998
  %default_acl46 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %36, i32 0, i32 2, !dbg !21984, !ctir !2560
  %37 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl46, align 8, !dbg !21984, !tbaa !21692, !ctir !2524
  %call47 = call i32 @acl_default_nontrivial(%struct.__acl_ext* %37), !dbg !21985
  %tobool48 = icmp ne i32 %call47, 0, !dbg !21985
  br i1 %tobool48, label %if.then49, label %if.else52, !dbg !21986

if.then49:                                        ; preds = %land.lhs.true45
  %38 = load i8*, i8** %name.addr, align 8, !dbg !21987, !tbaa !2998
  %39 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21988, !tbaa !2998
  %default_acl50 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %39, i32 0, i32 2, !dbg !21989, !ctir !2560
  %40 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl50, align 8, !dbg !21989, !tbaa !21692, !ctir !2524
  %call51 = call i32 @acl_set_file(i8* %38, i32 16384, %struct.__acl_ext* %40), !dbg !21990
  store i32 %call51, i32* %ret, align 4, !dbg !21991, !tbaa !2985
  br label %if.end54, !dbg !21992

if.else52:                                        ; preds = %land.lhs.true45, %land.lhs.true43, %if.then41
  %41 = load i8*, i8** %name.addr, align 8, !dbg !21993, !tbaa !2998
  %call53 = call i32 @acl_delete_def_file(i8* %41), !dbg !21994
  store i32 %call53, i32* %ret, align 4, !dbg !21995, !tbaa !2985
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then49
  br label %if.end55, !dbg !21996

if.end55:                                         ; preds = %if.end54, %if.else38
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end37
  br label %if.end57, !dbg !21997

if.end57:                                         ; preds = %if.end56, %land.lhs.true14, %if.end12
  br label %if.end58, !dbg !21998

if.end58:                                         ; preds = %if.end57, %entry
  %42 = load i32, i32* %ret, align 4, !dbg !21999, !tbaa !2985
  ret i32 %42, !dbg !22000
}

declare dso_local %struct.__acl_ext* @acl_from_mode(i32) #3

declare dso_local i32 @acl_set_fd(i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_set_file(i8*, i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_delete_def_file(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !22001 !ctir !134 {
entry:
  call void @usage(i32 1), !dbg !22002
  ret void, !dbg !22003
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !22004 !ctir !1260 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %arglen = alloca i64, align 8, !ctir !55
  %matchind = alloca i64, align 8, !ctir !568
  %ambiguous = alloca i8, align 1, !ctir !120
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !22005, metadata !DIExpression()), !dbg !22006
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !22007, metadata !DIExpression()), !dbg !22008
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !22009, metadata !DIExpression()), !dbg !22010
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !22011, metadata !DIExpression()), !dbg !22012
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22013, metadata !DIExpression()), !dbg !22014
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !22015, metadata !DIExpression()), !dbg !22016
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !22017, metadata !DIExpression()), !dbg !22018
  store i64 -1, i64* %matchind, align 8, !dbg !22018, !tbaa !3851
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !22019, metadata !DIExpression()), !dbg !22020
  store i8 0, i8* %ambiguous, align 1, !dbg !22020, !tbaa !3109
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !22021, !tbaa !2998
  %call = call i64 @strlen(i8* %0) #14, !dbg !22022
  store i64 %call, i64* %arglen, align 8, !dbg !22023, !tbaa !3851
  store i64 0, i64* %i, align 8, !dbg !22024, !tbaa !3851
  br label %for.cond, !dbg !22026

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !22027, !tbaa !2998
  %2 = load i64, i64* %i, align 8, !dbg !22029, !tbaa !3851
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !22027, !ctir !1262
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !22027, !tbaa !2998
  %tobool = icmp ne i8* %3, null, !dbg !22030
  br i1 %tobool, label %for.body, label %for.end, !dbg !22030

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !22031, !tbaa !2998
  %5 = load i64, i64* %i, align 8, !dbg !22034, !tbaa !3851
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !22031, !ctir !1262
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !22031, !tbaa !2998
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !22035, !tbaa !2998
  %8 = load i64, i64* %arglen, align 8, !dbg !22036, !tbaa !3851
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !22037
  %tobool3 = icmp ne i32 %call2, 0, !dbg !22037
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !22038

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !22039, !tbaa !2998
  %10 = load i64, i64* %i, align 8, !dbg !22042, !tbaa !3851
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !22039, !ctir !1262
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !22039, !tbaa !2998
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !22043
  %12 = load i64, i64* %arglen, align 8, !dbg !22044, !tbaa !3851
  %cmp = icmp eq i64 %call5, %12, !dbg !22045
  br i1 %cmp, label %if.then6, label %if.else, !dbg !22046

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !22047, !tbaa !3851
  store i64 %13, i64* %retval, align 8, !dbg !22048
  br label %return, !dbg !22048

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !22049, !tbaa !3851
  %cmp7 = icmp eq i64 %14, -1, !dbg !22051
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !22052

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !22053, !tbaa !3851
  store i64 %15, i64* %matchind, align 8, !dbg !22054, !tbaa !3851
  br label %if.end16, !dbg !22055

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !22056, !tbaa !2998
  %cmp10 = icmp eq i8* %16, null, !dbg !22059
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !22060

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !22061, !tbaa !2998
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !22062, !tbaa !3851
  %19 = load i64, i64* %matchind, align 8, !dbg !22063, !tbaa !3851
  %mul = mul i64 %18, %19, !dbg !22064
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !22065
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !22066, !tbaa !2998
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !22067, !tbaa !3851
  %22 = load i64, i64* %i, align 8, !dbg !22068, !tbaa !3851
  %mul11 = mul i64 %21, %22, !dbg !22069
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !22070
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !22071, !tbaa !3851
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !22072
  %tobool14 = icmp ne i32 %call13, 0, !dbg !22072
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !22073

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !22074, !tbaa !3109
  br label %if.end, !dbg !22076

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !22077

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !22078

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !22079, !tbaa !3851
  %inc = add i64 %24, 1, !dbg !22079
  store i64 %inc, i64* %i, align 8, !dbg !22079, !tbaa !3851
  br label %for.cond, !dbg !22080, !llvm.loop !22081

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !22083, !tbaa !3109
  %tobool19 = trunc i8 %25 to i1, !dbg !22083
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !22085

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !22086
  br label %return, !dbg !22086

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !22087, !tbaa !3851
  store i64 %26, i64* %retval, align 8, !dbg !22088
  br label %return, !dbg !22088

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !22089
  ret i64 %27, !dbg !22089
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !22090 !ctir !1263 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !115
  store i8* %context, i8** %context.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !22091, metadata !DIExpression()), !dbg !22092
  store i8* %value, i8** %value.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !22093, metadata !DIExpression()), !dbg !22094
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !22095, metadata !DIExpression()), !dbg !22096
  call void @llvm.dbg.declare(metadata i8** %format, metadata !22097, metadata !DIExpression()), !dbg !22098
  %0 = load i64, i64* %problem.addr, align 8, !dbg !22099, !tbaa !3851
  %cmp = icmp eq i64 %0, -1, !dbg !22100
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !22099

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.456, i64 0, i64 0)) #10, !dbg !22101
  br label %cond.end, !dbg !22099

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.457, i64 0, i64 0)) #10, !dbg !22102
  br label %cond.end, !dbg !22099

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !22099
  store i8* %cond, i8** %format, align 8, !dbg !22098, !tbaa !2998
  %1 = load i8*, i8** %format, align 8, !dbg !22103, !tbaa !2998
  %2 = load i8*, i8** %value.addr, align 8, !dbg !22104, !tbaa !2998
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !22105
  %3 = load i8*, i8** %context.addr, align 8, !dbg !22106, !tbaa !2998
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !22107
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !22108
  ret void, !dbg !22109
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !22110 !ctir !1265 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %last_val = alloca i8*, align 8, !ctir !115
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !22111, metadata !DIExpression()), !dbg !22112
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !22113, metadata !DIExpression()), !dbg !22114
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !22115, metadata !DIExpression()), !dbg !22116
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22117, metadata !DIExpression()), !dbg !22118
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !22119, metadata !DIExpression()), !dbg !22120
  store i8* null, i8** %last_val, align 8, !dbg !22120, !tbaa !2998
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.458, i64 0, i64 0)) #10, !dbg !22121
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22121, !tbaa !2998
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !22121
  store i64 0, i64* %i, align 8, !dbg !22122, !tbaa !3851
  br label %for.cond, !dbg !22124

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !22125, !tbaa !2998
  %2 = load i64, i64* %i, align 8, !dbg !22127, !tbaa !3851
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !22125, !ctir !1262
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !22125, !tbaa !2998
  %tobool = icmp ne i8* %3, null, !dbg !22128
  br i1 %tobool, label %for.body, label %for.end, !dbg !22128

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !22129, !tbaa !3851
  %cmp = icmp eq i64 %4, 0, !dbg !22131
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !22132

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !22133, !tbaa !2998
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !22134, !tbaa !2998
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !22135, !tbaa !3851
  %8 = load i64, i64* %i, align 8, !dbg !22136, !tbaa !3851
  %mul = mul i64 %7, %8, !dbg !22137
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !22138
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !22139, !tbaa !3851
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !22140
  %tobool3 = icmp ne i32 %call2, 0, !dbg !22140
  br i1 %tobool3, label %if.then, label %if.else, !dbg !22141

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22142, !tbaa !2998
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !22144, !tbaa !2998
  %12 = load i64, i64* %i, align 8, !dbg !22145, !tbaa !3851
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !22144, !ctir !1262
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !22144, !tbaa !2998
  %call5 = call i8* @quote(i8* %13), !dbg !22146
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.459, i64 0, i64 0), i8* %call5), !dbg !22147
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !22148, !tbaa !2998
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !22149, !tbaa !3851
  %16 = load i64, i64* %i, align 8, !dbg !22150, !tbaa !3851
  %mul7 = mul i64 %15, %16, !dbg !22151
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !22152
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !22153, !tbaa !2998
  br label %if.end, !dbg !22154

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22155, !tbaa !2998
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !22157, !tbaa !2998
  %19 = load i64, i64* %i, align 8, !dbg !22158, !tbaa !3851
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !22157, !ctir !1262
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !22157, !tbaa !2998
  %call10 = call i8* @quote(i8* %20), !dbg !22159
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.460, i64 0, i64 0), i8* %call10), !dbg !22160
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !22161

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !22162, !tbaa !3851
  %inc = add i64 %21, 1, !dbg !22162
  store i64 %inc, i64* %i, align 8, !dbg !22162, !tbaa !3851
  br label %for.cond, !dbg !22163, !llvm.loop !22164

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !22166, !tbaa !2998
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !22166
  ret void, !dbg !22167
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !22168 !ctir !1301 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !568
  store i8* %context, i8** %context.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !22169, metadata !DIExpression()), !dbg !22170
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !22171, metadata !DIExpression()), !dbg !22172
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !22173, metadata !DIExpression()), !dbg !22174
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !22175, metadata !DIExpression()), !dbg !22176
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !22177, metadata !DIExpression()), !dbg !22178
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !22179, metadata !DIExpression()), !dbg !22180
  call void @llvm.dbg.declare(metadata i64* %res, metadata !22181, metadata !DIExpression()), !dbg !22182
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !22183, !tbaa !2998
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !22184, !tbaa !2998
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !22185, !tbaa !2998
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !22186, !tbaa !3851
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !22187
  store i64 %call, i64* %res, align 8, !dbg !22182, !tbaa !3851
  %4 = load i64, i64* %res, align 8, !dbg !22188, !tbaa !3851
  %cmp = icmp sge i64 %4, 0, !dbg !22190
  br i1 %cmp, label %if.then, label %if.end, !dbg !22191

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !22192, !tbaa !3851
  store i64 %5, i64* %retval, align 8, !dbg !22193
  br label %return, !dbg !22193

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !22194, !tbaa !2998
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !22195, !tbaa !2998
  %8 = load i64, i64* %res, align 8, !dbg !22196, !tbaa !3851
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !22197
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !22198, !tbaa !2998
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !22199, !tbaa !2998
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !22200, !tbaa !3851
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !22201
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !22202, !tbaa !2998
  call void %12(), !dbg !22203
  store i64 -1, i64* %retval, align 8, !dbg !22204
  br label %return, !dbg !22204

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !22205
  ret i64 %13, !dbg !22205
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !22206 !ctir !1303 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8* %value, i8** %value.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !22207, metadata !DIExpression()), !dbg !22208
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !22209, metadata !DIExpression()), !dbg !22210
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !22211, metadata !DIExpression()), !dbg !22212
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !22213, metadata !DIExpression()), !dbg !22214
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22215, metadata !DIExpression()), !dbg !22216
  store i64 0, i64* %i, align 8, !dbg !22217, !tbaa !3851
  br label %for.cond, !dbg !22219

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !22220, !tbaa !2998
  %1 = load i64, i64* %i, align 8, !dbg !22222, !tbaa !3851
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !22220, !ctir !1262
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !22220, !tbaa !2998
  %tobool = icmp ne i8* %2, null, !dbg !22223
  br i1 %tobool, label %for.body, label %for.end, !dbg !22223

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !22224, !tbaa !2998
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !22226, !tbaa !2998
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !22227, !tbaa !3851
  %6 = load i64, i64* %i, align 8, !dbg !22228, !tbaa !3851
  %mul = mul i64 %5, %6, !dbg !22229
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !22230
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !22231, !tbaa !3851
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !22232
  %tobool1 = icmp ne i32 %call, 0, !dbg !22232
  br i1 %tobool1, label %if.end, label %if.then, !dbg !22233

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !22234, !tbaa !2998
  %9 = load i64, i64* %i, align 8, !dbg !22235, !tbaa !3851
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !22234, !ctir !1262
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !22234, !tbaa !2998
  store i8* %10, i8** %retval, align 8, !dbg !22236
  br label %return, !dbg !22236

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !22237

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !22238, !tbaa !3851
  %inc = add i64 %11, 1, !dbg !22238
  store i64 %inc, i64* %i, align 8, !dbg !22238, !tbaa !3851
  br label %for.cond, !dbg !22239, !llvm.loop !22240

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !22242
  br label %return, !dbg !22242

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !22243
  ret i8* %12, !dbg !22243
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !22244 !ctir !2571 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22246, metadata !DIExpression()), !dbg !22247
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22248, metadata !DIExpression()), !dbg !22249
  %0 = load i64, i64* %x.addr, align 8, !dbg !22250, !tbaa !3851
  %1 = load i32, i32* %n.addr, align 4, !dbg !22251, !tbaa !2985
  %sh_prom = zext i32 %1 to i64, !dbg !22252
  %shl = shl i64 %0, %sh_prom, !dbg !22252
  %2 = load i64, i64* %x.addr, align 8, !dbg !22253, !tbaa !3851
  %3 = load i32, i32* %n.addr, align 4, !dbg !22254, !tbaa !2985
  %sub = sub nsw i32 64, %3, !dbg !22255
  %sh_prom1 = zext i32 %sub to i64, !dbg !22256
  %shr = lshr i64 %2, %sh_prom1, !dbg !22256
  %or = or i64 %shl, %shr, !dbg !22257
  ret i64 %or, !dbg !22258
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !22259 !ctir !2571 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22260, metadata !DIExpression()), !dbg !22261
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22262, metadata !DIExpression()), !dbg !22263
  %0 = load i64, i64* %x.addr, align 8, !dbg !22264, !tbaa !3851
  %1 = load i32, i32* %n.addr, align 4, !dbg !22265, !tbaa !2985
  %sh_prom = zext i32 %1 to i64, !dbg !22266
  %shr = lshr i64 %0, %sh_prom, !dbg !22266
  %2 = load i64, i64* %x.addr, align 8, !dbg !22267, !tbaa !3851
  %3 = load i32, i32* %n.addr, align 4, !dbg !22268, !tbaa !2985
  %sub = sub nsw i32 64, %3, !dbg !22269
  %sh_prom1 = zext i32 %sub to i64, !dbg !22270
  %shl = shl i64 %2, %sh_prom1, !dbg !22270
  %or = or i64 %shr, %shl, !dbg !22271
  ret i64 %or, !dbg !22272
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !22273 !ctir !2573 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !22274, metadata !DIExpression()), !dbg !22275
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22276, metadata !DIExpression()), !dbg !22277
  %0 = load i32, i32* %x.addr, align 4, !dbg !22278, !tbaa !2985
  %1 = load i32, i32* %n.addr, align 4, !dbg !22279, !tbaa !2985
  %shl = shl i32 %0, %1, !dbg !22280
  %2 = load i32, i32* %x.addr, align 4, !dbg !22281, !tbaa !2985
  %3 = load i32, i32* %n.addr, align 4, !dbg !22282, !tbaa !2985
  %sub = sub nsw i32 32, %3, !dbg !22283
  %shr = lshr i32 %2, %sub, !dbg !22284
  %or = or i32 %shl, %shr, !dbg !22285
  ret i32 %or, !dbg !22286
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !22287 !ctir !2573 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !22288, metadata !DIExpression()), !dbg !22289
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22290, metadata !DIExpression()), !dbg !22291
  %0 = load i32, i32* %x.addr, align 4, !dbg !22292, !tbaa !2985
  %1 = load i32, i32* %n.addr, align 4, !dbg !22293, !tbaa !2985
  %shr = lshr i32 %0, %1, !dbg !22294
  %2 = load i32, i32* %x.addr, align 4, !dbg !22295, !tbaa !2985
  %3 = load i32, i32* %n.addr, align 4, !dbg !22296, !tbaa !2985
  %sub = sub nsw i32 32, %3, !dbg !22297
  %shl = shl i32 %2, %sub, !dbg !22298
  %or = or i32 %shr, %shl, !dbg !22299
  ret i32 %or, !dbg !22300
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !22301 !ctir !2575 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22302, metadata !DIExpression()), !dbg !22303
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22304, metadata !DIExpression()), !dbg !22305
  %0 = load i64, i64* %x.addr, align 8, !dbg !22306, !tbaa !3851
  %1 = load i32, i32* %n.addr, align 4, !dbg !22307, !tbaa !2985
  %sh_prom = zext i32 %1 to i64, !dbg !22308
  %shl = shl i64 %0, %sh_prom, !dbg !22308
  %2 = load i64, i64* %x.addr, align 8, !dbg !22309, !tbaa !3851
  %3 = load i32, i32* %n.addr, align 4, !dbg !22310, !tbaa !2985
  %conv = sext i32 %3 to i64, !dbg !22310
  %sub = sub i64 64, %conv, !dbg !22311
  %shr = lshr i64 %2, %sub, !dbg !22312
  %or = or i64 %shl, %shr, !dbg !22313
  ret i64 %or, !dbg !22314
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !22315 !ctir !2575 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22316, metadata !DIExpression()), !dbg !22317
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22318, metadata !DIExpression()), !dbg !22319
  %0 = load i64, i64* %x.addr, align 8, !dbg !22320, !tbaa !3851
  %1 = load i32, i32* %n.addr, align 4, !dbg !22321, !tbaa !2985
  %sh_prom = zext i32 %1 to i64, !dbg !22322
  %shr = lshr i64 %0, %sh_prom, !dbg !22322
  %2 = load i64, i64* %x.addr, align 8, !dbg !22323, !tbaa !3851
  %3 = load i32, i32* %n.addr, align 4, !dbg !22324, !tbaa !2985
  %conv = sext i32 %3 to i64, !dbg !22324
  %sub = sub i64 64, %conv, !dbg !22325
  %shl = shl i64 %2, %sub, !dbg !22326
  %or = or i64 %shr, %shl, !dbg !22327
  ret i64 %or, !dbg !22328
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !22329 !ctir !2577 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !3813
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !22330, metadata !DIExpression()), !dbg !22331
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22332, metadata !DIExpression()), !dbg !22333
  %0 = load i16, i16* %x.addr, align 2, !dbg !22334, !tbaa !3813
  %conv = zext i16 %0 to i32, !dbg !22335
  %1 = load i32, i32* %n.addr, align 4, !dbg !22336, !tbaa !2985
  %shl = shl i32 %conv, %1, !dbg !22337
  %2 = load i16, i16* %x.addr, align 2, !dbg !22338, !tbaa !3813
  %conv1 = zext i16 %2 to i32, !dbg !22339
  %3 = load i32, i32* %n.addr, align 4, !dbg !22340, !tbaa !2985
  %sub = sub nsw i32 16, %3, !dbg !22341
  %shr = lshr i32 %conv1, %sub, !dbg !22342
  %or = or i32 %shl, %shr, !dbg !22343
  %and = and i32 %or, 65535, !dbg !22344
  %conv2 = trunc i32 %and to i16, !dbg !22345
  ret i16 %conv2, !dbg !22346
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !22347 !ctir !2577 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !3813
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !22348, metadata !DIExpression()), !dbg !22349
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22350, metadata !DIExpression()), !dbg !22351
  %0 = load i16, i16* %x.addr, align 2, !dbg !22352, !tbaa !3813
  %conv = zext i16 %0 to i32, !dbg !22353
  %1 = load i32, i32* %n.addr, align 4, !dbg !22354, !tbaa !2985
  %shr = lshr i32 %conv, %1, !dbg !22355
  %2 = load i16, i16* %x.addr, align 2, !dbg !22356, !tbaa !3813
  %conv1 = zext i16 %2 to i32, !dbg !22357
  %3 = load i32, i32* %n.addr, align 4, !dbg !22358, !tbaa !2985
  %sub = sub nsw i32 16, %3, !dbg !22359
  %shl = shl i32 %conv1, %sub, !dbg !22360
  %or = or i32 %shr, %shl, !dbg !22361
  %and = and i32 %or, 65535, !dbg !22362
  %conv2 = trunc i32 %and to i16, !dbg !22363
  ret i16 %conv2, !dbg !22364
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !22365 !ctir !2581 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3660
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !22366, metadata !DIExpression()), !dbg !22367
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22368, metadata !DIExpression()), !dbg !22369
  %0 = load i8, i8* %x.addr, align 1, !dbg !22370, !tbaa !3660
  %conv = zext i8 %0 to i32, !dbg !22371
  %1 = load i32, i32* %n.addr, align 4, !dbg !22372, !tbaa !2985
  %shl = shl i32 %conv, %1, !dbg !22373
  %2 = load i8, i8* %x.addr, align 1, !dbg !22374, !tbaa !3660
  %conv1 = zext i8 %2 to i32, !dbg !22375
  %3 = load i32, i32* %n.addr, align 4, !dbg !22376, !tbaa !2985
  %sub = sub nsw i32 8, %3, !dbg !22377
  %shr = lshr i32 %conv1, %sub, !dbg !22378
  %or = or i32 %shl, %shr, !dbg !22379
  %and = and i32 %or, 255, !dbg !22380
  %conv2 = trunc i32 %and to i8, !dbg !22381
  ret i8 %conv2, !dbg !22382
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !22383 !ctir !2581 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3660
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !22384, metadata !DIExpression()), !dbg !22385
  store i32 %n, i32* %n.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !22386, metadata !DIExpression()), !dbg !22387
  %0 = load i8, i8* %x.addr, align 1, !dbg !22388, !tbaa !3660
  %conv = zext i8 %0 to i32, !dbg !22389
  %1 = load i32, i32* %n.addr, align 4, !dbg !22390, !tbaa !2985
  %shr = lshr i32 %conv, %1, !dbg !22391
  %2 = load i8, i8* %x.addr, align 1, !dbg !22392, !tbaa !3660
  %conv1 = zext i8 %2 to i32, !dbg !22393
  %3 = load i32, i32* %n.addr, align 4, !dbg !22394, !tbaa !2985
  %sub = sub nsw i32 8, %3, !dbg !22395
  %shl = shl i32 %conv1, %sub, !dbg !22396
  %or = or i32 %shr, %shl, !dbg !22397
  %and = and i32 %or, 255, !dbg !22398
  %conv2 = trunc i32 %and to i8, !dbg !22399
  ret i8 %conv2, !dbg !22400
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !22401 !ctir !1879 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !466
  %p2 = alloca i8*, align 8, !ctir !466
  %c1 = alloca i8, align 1, !ctir !468
  %c2 = alloca i8, align 1, !ctir !468
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !22403, metadata !DIExpression()), !dbg !22404
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !22405, metadata !DIExpression()), !dbg !22406
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !22407, metadata !DIExpression()), !dbg !22408
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !22409, !tbaa !2998
  store i8* %0, i8** %p1, align 8, !dbg !22408, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !22410, metadata !DIExpression()), !dbg !22411
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !22412, !tbaa !2998
  store i8* %1, i8** %p2, align 8, !dbg !22411, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !22413, metadata !DIExpression()), !dbg !22414
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !22415, metadata !DIExpression()), !dbg !22416
  %2 = load i8*, i8** %p1, align 8, !dbg !22417, !tbaa !2998
  %3 = load i8*, i8** %p2, align 8, !dbg !22419, !tbaa !2998
  %cmp = icmp eq i8* %2, %3, !dbg !22420
  br i1 %cmp, label %if.then, label %if.end, !dbg !22421

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !22422
  br label %return, !dbg !22422

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !22423

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !22424, !tbaa !2998
  %5 = load i8, i8* %4, align 1, !dbg !22426, !tbaa !3660, !ctir !467
  %conv = zext i8 %5 to i32, !dbg !22426
  %call = call i32 @c_tolower(i32 %conv), !dbg !22427
  %conv1 = trunc i32 %call to i8, !dbg !22427
  store i8 %conv1, i8* %c1, align 1, !dbg !22428, !tbaa !3660
  %6 = load i8*, i8** %p2, align 8, !dbg !22429, !tbaa !2998
  %7 = load i8, i8* %6, align 1, !dbg !22430, !tbaa !3660, !ctir !467
  %conv2 = zext i8 %7 to i32, !dbg !22430
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !22431
  %conv4 = trunc i32 %call3 to i8, !dbg !22431
  store i8 %conv4, i8* %c2, align 1, !dbg !22432, !tbaa !3660
  %8 = load i8, i8* %c1, align 1, !dbg !22433, !tbaa !3660
  %conv5 = zext i8 %8 to i32, !dbg !22433
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !22435
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !22436

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !22437

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !22438, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !22438
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !22438, !tbaa !2998
  %10 = load i8*, i8** %p2, align 8, !dbg !22439, !tbaa !2998
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !22439
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !22439, !tbaa !2998
  br label %do.cond, !dbg !22440

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !22441, !tbaa !3660
  %conv11 = zext i8 %11 to i32, !dbg !22441
  %12 = load i8, i8* %c2, align 1, !dbg !22442, !tbaa !3660
  %conv12 = zext i8 %12 to i32, !dbg !22442
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !22443
  br i1 %cmp13, label %do.body, label %do.end, !dbg !22440, !llvm.loop !22444

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !22446, !tbaa !3660
  %conv15 = zext i8 %13 to i32, !dbg !22446
  %14 = load i8, i8* %c2, align 1, !dbg !22448, !tbaa !3660
  %conv16 = zext i8 %14 to i32, !dbg !22448
  %sub = sub nsw i32 %conv15, %conv16, !dbg !22449
  store i32 %sub, i32* %retval, align 4, !dbg !22450
  br label %return, !dbg !22450

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !22451
  ret i32 %15, !dbg !22451
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !22452 !ctir !2591 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !2627
  %prev_fail = alloca i8, align 1, !ctir !2627
  %fclose_fail = alloca i8, align 1, !ctir !2627
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !22454, metadata !DIExpression()), !dbg !22455
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !22456, metadata !DIExpression()), !dbg !22457
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22458, !tbaa !2998
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #10, !dbg !22459
  %cmp = icmp ne i64 %call, 0, !dbg !22460
  %frombool = zext i1 %cmp to i8, !dbg !22457
  store i8 %frombool, i8* %some_pending, align 1, !dbg !22457, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !22461, metadata !DIExpression()), !dbg !22462
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22463, !tbaa !2998
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #10, !dbg !22463
  %cmp2 = icmp ne i32 %call1, 0, !dbg !22464
  %frombool3 = zext i1 %cmp2 to i8, !dbg !22462
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !22462, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !22465, metadata !DIExpression()), !dbg !22466
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !22467, !tbaa !2998
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !22468
  %cmp5 = icmp ne i32 %call4, 0, !dbg !22469
  %frombool6 = zext i1 %cmp5 to i8, !dbg !22466
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !22466, !tbaa !3109
  %3 = load i8, i8* %prev_fail, align 1, !dbg !22470, !tbaa !3109
  %tobool = trunc i8 %3 to i1, !dbg !22470
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !22472

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !22473, !tbaa !3109
  %tobool7 = trunc i8 %4 to i1, !dbg !22473
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !22474

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !22475, !tbaa !3109
  %tobool8 = trunc i8 %5 to i1, !dbg !22475
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !22476

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !22477
  %6 = load i32, i32* %call10, align 4, !dbg !22477, !tbaa !2985, !ctir !7
  %cmp11 = icmp ne i32 %6, 9, !dbg !22478
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !22479

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !22480, !tbaa !3109
  %tobool12 = trunc i8 %7 to i1, !dbg !22480
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !22483

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !22484
  store i32 0, i32* %call14, align 4, !dbg !22485, !tbaa !2985, !ctir !7
  br label %if.end, !dbg !22484

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !22486
  br label %return, !dbg !22486

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !22487
  br label %return, !dbg !22487

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !22488
  ret i32 %8, !dbg !22488
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cycle_check_init(%struct.cycle_check_state* %state) #4 !dbg !22489 !ctir !2631 {
entry:
  %state.addr = alloca %struct.cycle_check_state*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !22491, metadata !DIExpression()), !dbg !22492
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22493, !tbaa !2998
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 1, !dbg !22494, !ctir !2634
  store i64 0, i64* %chdir_counter, align 8, !dbg !22495, !tbaa !20141, !ctir !458
  %1 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22496, !tbaa !2998
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %1, i32 0, i32 2, !dbg !22497, !ctir !2634
  store i32 9827862, i32* %magic, align 8, !dbg !22498, !tbaa !22499, !ctir !7
  ret void, !dbg !22500
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @cycle_check(%struct.cycle_check_state* %state, %struct.stat* %sb) #4 !dbg !22501 !ctir !2643 {
entry:
  %retval = alloca i1, align 1
  %state.addr = alloca %struct.cycle_check_state*, align 8
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !22502, metadata !DIExpression()), !dbg !22503
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !22504, metadata !DIExpression()), !dbg !22505
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22506, !tbaa !2998
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 2, !dbg !22506, !ctir !2634
  %1 = load i32, i32* %magic, align 8, !dbg !22506, !tbaa !22499, !ctir !7
  %cmp = icmp eq i32 %1, 9827862, !dbg !22506
  br i1 %cmp, label %if.then, label %if.else, !dbg !22509

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !22509

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.473, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.474, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i64 0, i64 0)) #13, !dbg !22506
  unreachable, !dbg !22506

if.end:                                           ; preds = %if.then
  %2 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22510, !tbaa !2998
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %2, i32 0, i32 1, !dbg !22512, !ctir !2634
  %3 = load i64, i64* %chdir_counter, align 8, !dbg !22512, !tbaa !20141, !ctir !458
  %tobool = icmp ne i64 %3, 0, !dbg !22510
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !22513

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22514, !tbaa !2998
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !22514, !ctir !2646
  %5 = load i64, i64* %st_ino, align 8, !dbg !22514, !tbaa !3873, !ctir !228
  %6 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22514, !tbaa !2998
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %6, i32 0, i32 0, !dbg !22514, !ctir !2634
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !22514, !ctir !2637
  %7 = load i64, i64* %st_ino1, align 8, !dbg !22514, !tbaa !20146, !ctir !227
  %cmp2 = icmp eq i64 %5, %7, !dbg !22514
  br i1 %cmp2, label %land.lhs.true3, label %if.end8, !dbg !22514

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22514, !tbaa !2998
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 0, !dbg !22514, !ctir !2646
  %9 = load i64, i64* %st_dev, align 8, !dbg !22514, !tbaa !3876, !ctir !231
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22514, !tbaa !2998
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %10, i32 0, i32 0, !dbg !22514, !ctir !2634
  %st_dev5 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino4, i32 0, i32 1, !dbg !22514, !ctir !2637
  %11 = load i64, i64* %st_dev5, align 8, !dbg !22514, !tbaa !20147, !ctir !230
  %cmp6 = icmp eq i64 %9, %11, !dbg !22514
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !22515

if.then7:                                         ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !22516
  br label %return, !dbg !22516

if.end8:                                          ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  %12 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22517, !tbaa !2998
  %chdir_counter9 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %12, i32 0, i32 1, !dbg !22519, !ctir !2634
  %13 = load i64, i64* %chdir_counter9, align 8, !dbg !22520, !tbaa !20141, !ctir !458
  %inc = add i64 %13, 1, !dbg !22520
  store i64 %inc, i64* %chdir_counter9, align 8, !dbg !22520, !tbaa !20141, !ctir !458
  %call = call zeroext i1 @is_zero_or_power_of_two(i64 %inc), !dbg !22521
  br i1 %call, label %if.then10, label %if.end21, !dbg !22522

if.then10:                                        ; preds = %if.end8
  %14 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22523, !tbaa !2998
  %chdir_counter11 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %14, i32 0, i32 1, !dbg !22526, !ctir !2634
  %15 = load i64, i64* %chdir_counter11, align 8, !dbg !22526, !tbaa !20141, !ctir !458
  %cmp12 = icmp eq i64 %15, 0, !dbg !22527
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !22528

if.then13:                                        ; preds = %if.then10
  store i1 true, i1* %retval, align 1, !dbg !22529
  br label %return, !dbg !22529

if.end14:                                         ; preds = %if.then10
  %16 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22530, !tbaa !2998
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 0, !dbg !22531, !ctir !2646
  %17 = load i64, i64* %st_dev15, align 8, !dbg !22531, !tbaa !3876, !ctir !231
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22532, !tbaa !2998
  %dev_ino16 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 0, !dbg !22533, !ctir !2634
  %st_dev17 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino16, i32 0, i32 1, !dbg !22534, !ctir !2637
  store i64 %17, i64* %st_dev17, align 8, !dbg !22535, !tbaa !20147, !ctir !230
  %19 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !22536, !tbaa !2998
  %st_ino18 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 1, !dbg !22537, !ctir !2646
  %20 = load i64, i64* %st_ino18, align 8, !dbg !22537, !tbaa !3873, !ctir !228
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !22538, !tbaa !2998
  %dev_ino19 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !22539, !ctir !2634
  %st_ino20 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino19, i32 0, i32 0, !dbg !22540, !ctir !2637
  store i64 %20, i64* %st_ino20, align 8, !dbg !22541, !tbaa !20146, !ctir !227
  br label %if.end21, !dbg !22542

if.end21:                                         ; preds = %if.end14, %if.end8
  store i1 false, i1* %retval, align 1, !dbg !22543
  br label %return, !dbg !22543

return:                                           ; preds = %if.end21, %if.then13, %if.then7
  %22 = load i1, i1* %retval, align 1, !dbg !22544
  ret i1 %22, !dbg !22544
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64 %i) #4 !dbg !22545 !ctir !2668 {
entry:
  %i.addr = alloca i64, align 8
  store i64 %i, i64* %i.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !22546, metadata !DIExpression()), !dbg !22547
  %0 = load i64, i64* %i.addr, align 8, !dbg !22548, !tbaa !3851
  %1 = load i64, i64* %i.addr, align 8, !dbg !22549, !tbaa !3851
  %sub = sub i64 %1, 1, !dbg !22550
  %and = and i64 %0, %sub, !dbg !22551
  %cmp = icmp eq i64 %and, 0, !dbg !22552
  ret i1 %cmp, !dbg !22553
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !22554 !ctir !2673 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !609
  %fd = alloca i32, align 4, !ctir !7
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !609
  %e = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22556, metadata !DIExpression()), !dbg !22557
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !22558, metadata !DIExpression()), !dbg !22559
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22560, !tbaa !2998
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !22561
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !22559, !tbaa !2998
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22562, !tbaa !2998
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !22562
  br i1 %tobool, label %if.then, label %if.end17, !dbg !22564

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22565, metadata !DIExpression()), !dbg !22567
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22568, !tbaa !2998
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #10, !dbg !22569
  store i32 %call1, i32* %fd, align 4, !dbg !22567, !tbaa !2985
  %3 = load i32, i32* %fd, align 4, !dbg !22570, !tbaa !2985
  %cmp = icmp sle i32 0, %3, !dbg !22572
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !22573

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !22574, !tbaa !2985
  %cmp2 = icmp sle i32 %4, 2, !dbg !22575
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !22576

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !22577, metadata !DIExpression()), !dbg !22579
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22580, metadata !DIExpression()), !dbg !22581
  call void @llvm.dbg.declare(metadata i32* %f, metadata !22582, metadata !DIExpression()), !dbg !22583
  %5 = load i32, i32* %fd, align 4, !dbg !22584, !tbaa !2985
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !22585
  store i32 %call4, i32* %f, align 4, !dbg !22583, !tbaa !2985
  %6 = load i32, i32* %f, align 4, !dbg !22586, !tbaa !2985
  %cmp5 = icmp slt i32 %6, 0, !dbg !22588
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !22589

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #15, !dbg !22590
  %7 = load i32, i32* %call7, align 4, !dbg !22590, !tbaa !2985, !ctir !7
  store i32 %7, i32* %e, align 4, !dbg !22592, !tbaa !2985
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !22593, !tbaa !2998
  br label %if.end13, !dbg !22594

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !22595, !tbaa !2985
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !22597
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !22598, !tbaa !2998
  %call9 = call i32* @__errno_location() #15, !dbg !22599
  %9 = load i32, i32* %call9, align 4, !dbg !22599, !tbaa !2985, !ctir !7
  store i32 %9, i32* %e, align 4, !dbg !22600, !tbaa !2985
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !22601, !tbaa !2998
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !22601
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !22603

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !22604, !tbaa !2985
  %call12 = call i32 @close(i32 %11), !dbg !22605
  br label %if.end, !dbg !22605

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22606, !tbaa !2998
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !22607
  %13 = load i32, i32* %e, align 4, !dbg !22608, !tbaa !2985
  %call15 = call i32* @__errno_location() #15, !dbg !22609
  store i32 %13, i32* %call15, align 4, !dbg !22610, !tbaa !2985, !ctir !7
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !22611, !tbaa !2998
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !22612, !tbaa !2998
  br label %if.end16, !dbg !22613

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !22614

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !22615, !tbaa !2998
  ret %struct.__dirstream* %15, !dbg !22616
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !22617 !ctir !2678 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !22619, metadata !DIExpression()), !dbg !22620
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !22621, !tbaa !2998
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #10, !dbg !22622
  ret void, !dbg !22623
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !22624 !ctir !2685 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !22625, metadata !DIExpression()), !dbg !22626
  call void @gettime(%struct.timespec* %retval), !dbg !22627
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !22628
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !22628
  ret { i64, i64 } %1, !dbg !22628
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !22629 !ctir !307 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !120
  %p = alloca i8*, align 8, !ctir !115
  store i32 %category, i32* %category.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !22631, metadata !DIExpression()), !dbg !22632
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !22633, metadata !DIExpression()), !dbg !22634
  store i8 1, i8* %hard, align 1, !dbg !22634, !tbaa !3109
  call void @llvm.dbg.declare(metadata i8** %p, metadata !22635, metadata !DIExpression()), !dbg !22636
  %0 = load i32, i32* %category.addr, align 4, !dbg !22637, !tbaa !2985
  %call = call i8* @setlocale(i32 %0, i8* null) #10, !dbg !22638
  store i8* %call, i8** %p, align 8, !dbg !22636, !tbaa !2998
  %1 = load i8*, i8** %p, align 8, !dbg !22639, !tbaa !2998
  %tobool = icmp ne i8* %1, null, !dbg !22639
  br i1 %tobool, label %if.then, label %if.end5, !dbg !22641

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !22642, !tbaa !2998
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.481, i64 0, i64 0)) #14, !dbg !22647
  %cmp = icmp eq i32 %call1, 0, !dbg !22648
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !22649

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !22650, !tbaa !2998
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.482, i64 0, i64 0)) #14, !dbg !22651
  %cmp3 = icmp eq i32 %call2, 0, !dbg !22652
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !22653

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !22654, !tbaa !3109
  br label %if.end, !dbg !22655

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !22656

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !22657, !tbaa !3109
  %tobool6 = trunc i8 %4 to i1, !dbg !22657
  ret i1 %tobool6, !dbg !22658
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !22659 !ctir !549 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !115
  %h = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !22661, metadata !DIExpression()), !dbg !22662
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !22663, metadata !DIExpression()), !dbg !22664
  call void @llvm.dbg.declare(metadata i8** %s, metadata !22665, metadata !DIExpression()), !dbg !22666
  call void @llvm.dbg.declare(metadata i64* %h, metadata !22667, metadata !DIExpression()), !dbg !22668
  store i64 0, i64* %h, align 8, !dbg !22668, !tbaa !3851
  %0 = load i8*, i8** %x.addr, align 8, !dbg !22669, !tbaa !2998
  store i8* %0, i8** %s, align 8, !dbg !22671, !tbaa !2998
  br label %for.cond, !dbg !22672

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !22673, !tbaa !2998
  %2 = load i8, i8* %1, align 1, !dbg !22675, !tbaa !3660, !ctir !116
  %tobool = icmp ne i8 %2, 0, !dbg !22676
  br i1 %tobool, label %for.body, label %for.end, !dbg !22676

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !22677, !tbaa !2998
  %4 = load i8, i8* %3, align 1, !dbg !22678, !tbaa !3660, !ctir !116
  %conv = sext i8 %4 to i64, !dbg !22678
  %5 = load i64, i64* %h, align 8, !dbg !22679, !tbaa !3851
  %shl = shl i64 %5, 9, !dbg !22680
  %6 = load i64, i64* %h, align 8, !dbg !22681, !tbaa !3851
  %shr = lshr i64 %6, 55, !dbg !22682
  %or = or i64 %shl, %shr, !dbg !22683
  %add = add i64 %conv, %or, !dbg !22684
  store i64 %add, i64* %h, align 8, !dbg !22685, !tbaa !3851
  br label %for.inc, !dbg !22686

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !22687, !tbaa !2998
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !22687
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !22687, !tbaa !2998
  br label %for.cond, !dbg !22688, !llvm.loop !22689

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !22691, !tbaa !3851
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !22692, !tbaa !3851
  %rem = urem i64 %8, %9, !dbg !22693
  ret i64 %rem, !dbg !22694
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @i_ring_init(%struct.I_ring* %ir, i32 %default_val) #4 !dbg !22695 !ctir !2696 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %default_val.addr = alloca i32, align 4
  %i = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22697, metadata !DIExpression()), !dbg !22698
  store i32 %default_val, i32* %default_val.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %default_val.addr, metadata !22699, metadata !DIExpression()), !dbg !22700
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22701, metadata !DIExpression()), !dbg !22702
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22703, !tbaa !2998
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22704, !ctir !2699
  store i8 1, i8* %ir_empty, align 4, !dbg !22705, !tbaa !22706, !ctir !120
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22707, !tbaa !2998
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 2, !dbg !22708, !ctir !2699
  store i32 0, i32* %ir_front, align 4, !dbg !22709, !tbaa !22710, !ctir !70
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22711, !tbaa !2998
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 3, !dbg !22712, !ctir !2699
  store i32 0, i32* %ir_back, align 4, !dbg !22713, !tbaa !22714, !ctir !70
  store i32 0, i32* %i, align 4, !dbg !22715, !tbaa !2985
  br label %for.cond, !dbg !22717

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !22718, !tbaa !2985
  %cmp = icmp slt i32 %3, 4, !dbg !22720
  br i1 %cmp, label %for.body, label %for.end, !dbg !22721

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %default_val.addr, align 4, !dbg !22722, !tbaa !2985
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22723, !tbaa !2998
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 0, !dbg !22724, !ctir !2699
  %6 = load i32, i32* %i, align 4, !dbg !22725, !tbaa !2985
  %idxprom = sext i32 %6 to i64, !dbg !22723
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22723, !ctir !1448
  store i32 %4, i32* %arrayidx, align 4, !dbg !22726, !tbaa !2985
  br label %for.inc, !dbg !22723

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !22727, !tbaa !2985
  %inc = add nsw i32 %7, 1, !dbg !22727
  store i32 %inc, i32* %i, align 4, !dbg !22727, !tbaa !2985
  br label %for.cond, !dbg !22728, !llvm.loop !22729

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %default_val.addr, align 4, !dbg !22731, !tbaa !2985
  %9 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22732, !tbaa !2998
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %9, i32 0, i32 1, !dbg !22733, !ctir !2699
  store i32 %8, i32* %ir_default_val, align 4, !dbg !22734, !tbaa !22735, !ctir !7
  ret void, !dbg !22736
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @i_ring_empty(%struct.I_ring* %ir) #9 !dbg !22737 !ctir !2707 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22738, metadata !DIExpression()), !dbg !22739
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22740, !tbaa !2998
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22741, !ctir !2710
  %1 = load i8, i8* %ir_empty, align 4, !dbg !22741, !tbaa !22706
  %tobool = trunc i8 %1 to i1, !dbg !22741, !ctir !120
  ret i1 %tobool, !dbg !22742
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_push(%struct.I_ring* %ir, i32 %val) #4 !dbg !22743 !ctir !2711 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %val.addr = alloca i32, align 4
  %dest_idx = alloca i32, align 4, !ctir !70
  %old_val = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22744, metadata !DIExpression()), !dbg !22745
  store i32 %val, i32* %val.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22746, metadata !DIExpression()), !dbg !22747
  call void @llvm.dbg.declare(metadata i32* %dest_idx, metadata !22748, metadata !DIExpression()), !dbg !22749
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22750, !tbaa !2998
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 2, !dbg !22751, !ctir !2699
  %1 = load i32, i32* %ir_front, align 4, !dbg !22751, !tbaa !22710, !ctir !70
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22752, !tbaa !2998
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 4, !dbg !22753, !ctir !2699
  %3 = load i8, i8* %ir_empty, align 4, !dbg !22753, !tbaa !22706
  %tobool = trunc i8 %3 to i1, !dbg !22753, !ctir !120
  %lnot = xor i1 %tobool, true, !dbg !22754
  %lnot.ext = zext i1 %lnot to i32, !dbg !22754
  %add = add i32 %1, %lnot.ext, !dbg !22755
  %rem = urem i32 %add, 4, !dbg !22756
  store i32 %rem, i32* %dest_idx, align 4, !dbg !22749, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %old_val, metadata !22757, metadata !DIExpression()), !dbg !22758
  %4 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22759, !tbaa !2998
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %4, i32 0, i32 0, !dbg !22760, !ctir !2699
  %5 = load i32, i32* %dest_idx, align 4, !dbg !22761, !tbaa !2985
  %idxprom = zext i32 %5 to i64, !dbg !22759
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22759, !ctir !1448
  %6 = load i32, i32* %arrayidx, align 4, !dbg !22759, !tbaa !2985
  store i32 %6, i32* %old_val, align 4, !dbg !22758, !tbaa !2985
  %7 = load i32, i32* %val.addr, align 4, !dbg !22762, !tbaa !2985
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22763, !tbaa !2998
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !22764, !ctir !2699
  %9 = load i32, i32* %dest_idx, align 4, !dbg !22765, !tbaa !2985
  %idxprom2 = zext i32 %9 to i64, !dbg !22763
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom2, !dbg !22763, !ctir !1448
  store i32 %7, i32* %arrayidx3, align 4, !dbg !22766, !tbaa !2985
  %10 = load i32, i32* %dest_idx, align 4, !dbg !22767, !tbaa !2985
  %11 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22768, !tbaa !2998
  %ir_front4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %11, i32 0, i32 2, !dbg !22769, !ctir !2699
  store i32 %10, i32* %ir_front4, align 4, !dbg !22770, !tbaa !22710, !ctir !70
  %12 = load i32, i32* %dest_idx, align 4, !dbg !22771, !tbaa !2985
  %13 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22773, !tbaa !2998
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %13, i32 0, i32 3, !dbg !22774, !ctir !2699
  %14 = load i32, i32* %ir_back, align 4, !dbg !22774, !tbaa !22714, !ctir !70
  %cmp = icmp eq i32 %12, %14, !dbg !22775
  br i1 %cmp, label %if.then, label %if.end, !dbg !22776

if.then:                                          ; preds = %entry
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22777, !tbaa !2998
  %ir_back5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 3, !dbg !22778, !ctir !2699
  %16 = load i32, i32* %ir_back5, align 4, !dbg !22778, !tbaa !22714, !ctir !70
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22779, !tbaa !2998
  %ir_empty6 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 4, !dbg !22780, !ctir !2699
  %18 = load i8, i8* %ir_empty6, align 4, !dbg !22780, !tbaa !22706
  %tobool7 = trunc i8 %18 to i1, !dbg !22780, !ctir !120
  %lnot8 = xor i1 %tobool7, true, !dbg !22781
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !22781
  %add10 = add i32 %16, %lnot.ext9, !dbg !22782
  %rem11 = urem i32 %add10, 4, !dbg !22783
  %19 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22784, !tbaa !2998
  %ir_back12 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 3, !dbg !22785, !ctir !2699
  store i32 %rem11, i32* %ir_back12, align 4, !dbg !22786, !tbaa !22714, !ctir !70
  br label %if.end, !dbg !22784

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22787, !tbaa !2998
  %ir_empty13 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %20, i32 0, i32 4, !dbg !22788, !ctir !2699
  store i8 0, i8* %ir_empty13, align 4, !dbg !22789, !tbaa !22706, !ctir !120
  %21 = load i32, i32* %old_val, align 4, !dbg !22790, !tbaa !2985
  ret i32 %21, !dbg !22791
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_pop(%struct.I_ring* %ir) #4 !dbg !22792 !ctir !2713 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8
  %top_val = alloca i32, align 4, !ctir !7
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22793, metadata !DIExpression()), !dbg !22794
  call void @llvm.dbg.declare(metadata i32* %top_val, metadata !22795, metadata !DIExpression()), !dbg !22796
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22797, !tbaa !2998
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !22799
  br i1 %call, label %if.then, label %if.end, !dbg !22800

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !22801
  unreachable, !dbg !22801

if.end:                                           ; preds = %entry
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22802, !tbaa !2998
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 0, !dbg !22803, !ctir !2699
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22804, !tbaa !2998
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 2, !dbg !22805, !ctir !2699
  %3 = load i32, i32* %ir_front, align 4, !dbg !22805, !tbaa !22710, !ctir !70
  %idxprom = zext i32 %3 to i64, !dbg !22802
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22802, !ctir !1448
  %4 = load i32, i32* %arrayidx, align 4, !dbg !22802, !tbaa !2985
  store i32 %4, i32* %top_val, align 4, !dbg !22806, !tbaa !2985
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22807, !tbaa !2998
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 1, !dbg !22808, !ctir !2699
  %6 = load i32, i32* %ir_default_val, align 4, !dbg !22808, !tbaa !22735, !ctir !7
  %7 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22809, !tbaa !2998
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 0, !dbg !22810, !ctir !2699
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22811, !tbaa !2998
  %ir_front2 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !22812, !ctir !2699
  %9 = load i32, i32* %ir_front2, align 4, !dbg !22812, !tbaa !22710, !ctir !70
  %idxprom3 = zext i32 %9 to i64, !dbg !22809
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom3, !dbg !22809, !ctir !1448
  store i32 %6, i32* %arrayidx4, align 4, !dbg !22813, !tbaa !2985
  %10 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22814, !tbaa !2998
  %ir_front5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !22816, !ctir !2699
  %11 = load i32, i32* %ir_front5, align 4, !dbg !22816, !tbaa !22710, !ctir !70
  %12 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22817, !tbaa !2998
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %12, i32 0, i32 3, !dbg !22818, !ctir !2699
  %13 = load i32, i32* %ir_back, align 4, !dbg !22818, !tbaa !22714, !ctir !70
  %cmp = icmp eq i32 %11, %13, !dbg !22819
  br i1 %cmp, label %if.then6, label %if.else, !dbg !22820

if.then6:                                         ; preds = %if.end
  %14 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22821, !tbaa !2998
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %14, i32 0, i32 4, !dbg !22822, !ctir !2699
  store i8 1, i8* %ir_empty, align 4, !dbg !22823, !tbaa !22706, !ctir !120
  br label %if.end9, !dbg !22821

if.else:                                          ; preds = %if.end
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22824, !tbaa !2998
  %ir_front7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 2, !dbg !22825, !ctir !2699
  %16 = load i32, i32* %ir_front7, align 4, !dbg !22825, !tbaa !22710, !ctir !70
  %add = add i32 %16, 4, !dbg !22826
  %sub = sub i32 %add, 1, !dbg !22827
  %rem = urem i32 %sub, 4, !dbg !22828
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22829, !tbaa !2998
  %ir_front8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 2, !dbg !22830, !ctir !2699
  store i32 %rem, i32* %ir_front8, align 4, !dbg !22831, !tbaa !22710, !ctir !70
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %18 = load i32, i32* %top_val, align 4, !dbg !22832, !tbaa !2985
  ret i32 %18, !dbg !22833
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !22834 !ctir !2718 {
entry:
  %codeset = alloca i8*, align 8, !ctir !115
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !22836, metadata !DIExpression()), !dbg !22837
  %call = call i8* @nl_langinfo(i32 14) #10, !dbg !22838
  store i8* %call, i8** %codeset, align 8, !dbg !22839, !tbaa !2998
  %0 = load i8*, i8** %codeset, align 8, !dbg !22840, !tbaa !2998
  %cmp = icmp eq i8* %0, null, !dbg !22842
  br i1 %cmp, label %if.then, label %if.end, !dbg !22843

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.495, i64 0, i64 0), i8** %codeset, align 8, !dbg !22844, !tbaa !2998
  br label %if.end, !dbg !22845

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !22846, !tbaa !2998
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !22846, !ctir !115
  %2 = load i8, i8* %arrayidx, align 1, !dbg !22846, !tbaa !3660
  %conv = sext i8 %2 to i32, !dbg !22846
  %cmp1 = icmp eq i32 %conv, 0, !dbg !22850
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !22851

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.496, i64 0, i64 0), i8** %codeset, align 8, !dbg !22852, !tbaa !2998
  br label %if.end4, !dbg !22853

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !22854, !tbaa !2998
  ret i8* %3, !dbg !22855
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !22856 !ctir !2722 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !160
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2724
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22860, metadata !DIExpression()), !dbg !22861
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !22862, metadata !DIExpression()), !dbg !22863
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !22864, metadata !DIExpression()), !dbg !22865
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !22866, metadata !DIExpression()), !dbg !22867
  store i32 0, i32* %mode, align 4, !dbg !22867, !tbaa !2985
  %0 = load i32, i32* %flags.addr, align 4, !dbg !22868, !tbaa !2985
  %and = and i32 %0, 64, !dbg !22870
  %tobool = icmp ne i32 %and, 0, !dbg !22870
  br i1 %tobool, label %if.then, label %if.end, !dbg !22871

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !22872, metadata !DIExpression()), !dbg !22874
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22875
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !22875
  call void @llvm.va_start(i8* %arraydecay1), !dbg !22875
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22876
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !22876
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !22876
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !22876
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !22876

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !22876
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !22876
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !22876
  %3 = bitcast i8* %2 to i32*, !dbg !22876
  %4 = add i32 %gp_offset, 8, !dbg !22876
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !22876
  br label %vaarg.end, !dbg !22876

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !22876
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !22876
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !22876
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !22876
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !22876
  br label %vaarg.end, !dbg !22876

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !22876
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !22876
  store i32 %6, i32* %mode, align 4, !dbg !22877, !tbaa !2985
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22878
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !22878
  call void @llvm.va_end(i8* %arraydecay34), !dbg !22878
  br label %if.end, !dbg !22879

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !22880, !tbaa !2985
  %8 = load i8*, i8** %file.addr, align 8, !dbg !22881, !tbaa !2998
  %9 = load i32, i32* %flags.addr, align 4, !dbg !22882, !tbaa !2985
  %10 = load i32, i32* %mode, align 4, !dbg !22883, !tbaa !2985
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !22884
  %call5 = call i32 @fd_safer(i32 %call), !dbg !22885
  ret i32 %call5, !dbg !22886
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !22887 !ctir !2736 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !2738
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !22888, metadata !DIExpression()), !dbg !22889
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !22890, metadata !DIExpression()), !dbg !22891
  %call = call noalias i8* @xmalloc(i64 24), !dbg !22892
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !22892
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !22891, !tbaa !2998
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !22893, !tbaa !2998
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22894, !tbaa !2998
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !22895, !ctir !2739
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !22896, !tbaa !22897, !ctir !2743
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22899, !tbaa !2998
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !22900, !ctir !2739
  store i64 0, i64* %randmax, align 8, !dbg !22901, !tbaa !22902, !ctir !2747
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22903, !tbaa !2998
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !22904, !ctir !2739
  store i64 0, i64* %randnum, align 8, !dbg !22905, !tbaa !22906, !ctir !2747
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22907, !tbaa !2998
  ret %struct.randint_source* %5, !dbg !22908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !22909 !ctir !2749 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2743
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22910, metadata !DIExpression()), !dbg !22911
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22912, metadata !DIExpression()), !dbg !22913
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22914, metadata !DIExpression()), !dbg !22915
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22916, !tbaa !2998
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22917, !tbaa !3851
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !22918
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !22915, !tbaa !2998
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22919, !tbaa !2998
  %tobool = icmp ne %struct.randread_source* %2, null, !dbg !22919
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22919

cond.true:                                        ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22920, !tbaa !2998
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %3), !dbg !22921
  br label %cond.end, !dbg !22919

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !22919

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.randint_source* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !22919
  ret %struct.randint_source* %cond, !dbg !22922
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #9 !dbg !22923 !ctir !2751 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22924, metadata !DIExpression()), !dbg !22925
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22926, !tbaa !2998
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22927, !ctir !2754
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22927, !tbaa !22897, !ctir !2743
  ret %struct.randread_source* %1, !dbg !22928
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !22929 !ctir !2755 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2743
  %randnum = alloca i64, align 8, !ctir !2747
  %randmax = alloca i64, align 8, !ctir !2747
  %choices = alloca i64, align 8, !ctir !2747
  %i = alloca i64, align 8, !ctir !55
  %rmax = alloca i64, align 8, !ctir !2747
  %buf = alloca [8 x i8], align 1, !ctir !2757
  %excess_choices = alloca i64, align 8, !ctir !2747
  %unusable_choices = alloca i64, align 8, !ctir !2747
  %last_usable_choice = alloca i64, align 8, !ctir !2747
  %reduced_randnum = alloca i64, align 8, !ctir !2747
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22930, metadata !DIExpression()), !dbg !22931
  store i64 %genmax, i64* %genmax.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !22932, metadata !DIExpression()), !dbg !22933
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22934, metadata !DIExpression()), !dbg !22935
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22936, !tbaa !2998
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22937, !ctir !2739
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !22937, !tbaa !22897, !ctir !2743
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !22935, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !22938, metadata !DIExpression()), !dbg !22939
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22940, !tbaa !2998
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !22941, !ctir !2739
  %3 = load i64, i64* %randnum2, align 8, !dbg !22941, !tbaa !22906, !ctir !2747
  store i64 %3, i64* %randnum, align 8, !dbg !22939, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !22942, metadata !DIExpression()), !dbg !22943
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22944, !tbaa !2998
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !22945, !ctir !2739
  %5 = load i64, i64* %randmax3, align 8, !dbg !22945, !tbaa !22902, !ctir !2747
  store i64 %5, i64* %randmax, align 8, !dbg !22943, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !22946, metadata !DIExpression()), !dbg !22947
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !22948, !tbaa !3851
  %add = add i64 %6, 1, !dbg !22949
  store i64 %add, i64* %choices, align 8, !dbg !22947, !tbaa !3851
  br label %while.body, !dbg !22950

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !22951, !tbaa !3851
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !22954, !tbaa !3851
  %cmp = icmp ult i64 %7, %8, !dbg !22955
  br i1 %cmp, label %if.then, label %if.end, !dbg !22956

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22957, metadata !DIExpression()), !dbg !22959
  store i64 0, i64* %i, align 8, !dbg !22959, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !22960, metadata !DIExpression()), !dbg !22961
  %9 = load i64, i64* %randmax, align 8, !dbg !22962, !tbaa !3851
  store i64 %9, i64* %rmax, align 8, !dbg !22961, !tbaa !3851
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !22963, metadata !DIExpression()), !dbg !22964
  br label %do.body, !dbg !22965

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !22966, !tbaa !3851
  %call = call i64 @shift_left(i64 %10), !dbg !22968
  %add4 = add i64 %call, 255, !dbg !22969
  store i64 %add4, i64* %rmax, align 8, !dbg !22970, !tbaa !3851
  %11 = load i64, i64* %i, align 8, !dbg !22971, !tbaa !3851
  %inc = add i64 %11, 1, !dbg !22971
  store i64 %inc, i64* %i, align 8, !dbg !22971, !tbaa !3851
  br label %do.cond, !dbg !22972

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !22973, !tbaa !3851
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !22974, !tbaa !3851
  %cmp5 = icmp ult i64 %12, %13, !dbg !22975
  br i1 %cmp5, label %do.body, label %do.end, !dbg !22972, !llvm.loop !22976

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22978, !tbaa !2998
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !22979
  %15 = load i64, i64* %i, align 8, !dbg !22980, !tbaa !3851
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !22981
  store i64 0, i64* %i, align 8, !dbg !22982, !tbaa !3851
  br label %do.body6, !dbg !22983

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !22984, !tbaa !3851
  %call7 = call i64 @shift_left(i64 %16), !dbg !22986
  %17 = load i64, i64* %i, align 8, !dbg !22987, !tbaa !3851
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !22988, !ctir !2757
  %18 = load i8, i8* %arrayidx, align 1, !dbg !22988, !tbaa !3660
  %conv = zext i8 %18 to i64, !dbg !22988
  %add8 = add i64 %call7, %conv, !dbg !22989
  store i64 %add8, i64* %randnum, align 8, !dbg !22990, !tbaa !3851
  %19 = load i64, i64* %randmax, align 8, !dbg !22991, !tbaa !3851
  %call9 = call i64 @shift_left(i64 %19), !dbg !22992
  %add10 = add i64 %call9, 255, !dbg !22993
  store i64 %add10, i64* %randmax, align 8, !dbg !22994, !tbaa !3851
  %20 = load i64, i64* %i, align 8, !dbg !22995, !tbaa !3851
  %inc11 = add i64 %20, 1, !dbg !22995
  store i64 %inc11, i64* %i, align 8, !dbg !22995, !tbaa !3851
  br label %do.cond12, !dbg !22996

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !22997, !tbaa !3851
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !22998, !tbaa !3851
  %cmp13 = icmp ult i64 %21, %22, !dbg !22999
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !22996, !llvm.loop !23000

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !23002

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !23003, !tbaa !3851
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !23005, !tbaa !3851
  %cmp16 = icmp eq i64 %23, %24, !dbg !23006
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !23007

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23008, !tbaa !2998
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !23010, !ctir !2739
  store i64 0, i64* %randmax19, align 8, !dbg !23011, !tbaa !22902, !ctir !2747
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23012, !tbaa !2998
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !23013, !ctir !2739
  store i64 0, i64* %randnum20, align 8, !dbg !23014, !tbaa !22906, !ctir !2747
  %27 = load i64, i64* %randnum, align 8, !dbg !23015, !tbaa !3851
  store i64 %27, i64* %retval, align 8, !dbg !23016
  br label %return, !dbg !23016

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !23017, metadata !DIExpression()), !dbg !23019
  %28 = load i64, i64* %randmax, align 8, !dbg !23020, !tbaa !3851
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !23021, !tbaa !3851
  %sub = sub i64 %28, %29, !dbg !23022
  store i64 %sub, i64* %excess_choices, align 8, !dbg !23019, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !23023, metadata !DIExpression()), !dbg !23024
  %30 = load i64, i64* %excess_choices, align 8, !dbg !23025, !tbaa !3851
  %31 = load i64, i64* %choices, align 8, !dbg !23026, !tbaa !3851
  %rem = urem i64 %30, %31, !dbg !23027
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !23024, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !23028, metadata !DIExpression()), !dbg !23029
  %32 = load i64, i64* %randmax, align 8, !dbg !23030, !tbaa !3851
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !23031, !tbaa !3851
  %sub21 = sub i64 %32, %33, !dbg !23032
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !23029, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !23033, metadata !DIExpression()), !dbg !23034
  %34 = load i64, i64* %randnum, align 8, !dbg !23035, !tbaa !3851
  %35 = load i64, i64* %choices, align 8, !dbg !23036, !tbaa !3851
  %rem22 = urem i64 %34, %35, !dbg !23037
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !23034, !tbaa !3851
  %36 = load i64, i64* %randnum, align 8, !dbg !23038, !tbaa !3851
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !23040, !tbaa !3851
  %cmp23 = icmp ule i64 %36, %37, !dbg !23041
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !23042

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !23043, !tbaa !3851
  %39 = load i64, i64* %choices, align 8, !dbg !23045, !tbaa !3851
  %div = udiv i64 %38, %39, !dbg !23046
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23047, !tbaa !2998
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !23048, !ctir !2739
  store i64 %div, i64* %randnum26, align 8, !dbg !23049, !tbaa !22906, !ctir !2747
  %41 = load i64, i64* %excess_choices, align 8, !dbg !23050, !tbaa !3851
  %42 = load i64, i64* %choices, align 8, !dbg !23051, !tbaa !3851
  %div27 = udiv i64 %41, %42, !dbg !23052
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23053, !tbaa !2998
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !23054, !ctir !2739
  store i64 %div27, i64* %randmax28, align 8, !dbg !23055, !tbaa !22902, !ctir !2747
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !23056, !tbaa !3851
  store i64 %44, i64* %retval, align 8, !dbg !23057
  br label %return, !dbg !23057

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !23058, !tbaa !3851
  store i64 %45, i64* %randnum, align 8, !dbg !23059, !tbaa !3851
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !23060, !tbaa !3851
  %sub30 = sub i64 %46, 1, !dbg !23061
  store i64 %sub30, i64* %randmax, align 8, !dbg !23062, !tbaa !3851
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !22950, !llvm.loop !23063

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !23065
  ret i64 %47, !dbg !23065
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !23066 !ctir !2762 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !23067, metadata !DIExpression()), !dbg !23068
  %0 = load i64, i64* %x.addr, align 8, !dbg !23069, !tbaa !3851
  %shl = shl i64 %0, 8, !dbg !23070
  ret i64 %shl, !dbg !23071
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !23072 !ctir !2758 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !23073, metadata !DIExpression()), !dbg !23074
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23075, !tbaa !2998
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !23075
  call void @explicit_bzero(i8* %1, i64 24) #10, !dbg !23076
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23077, !tbaa !2998
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !23077
  call void @free(i8* %3) #10, !dbg !23078
  ret void, !dbg !23079
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !23080 !ctir !2760 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !23081, metadata !DIExpression()), !dbg !23082
  call void @llvm.dbg.declare(metadata i32* %r, metadata !23083, metadata !DIExpression()), !dbg !23084
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23085, !tbaa !2998
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !23086, !ctir !2739
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !23086, !tbaa !22897, !ctir !2743
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !23087
  store i32 %call, i32* %r, align 4, !dbg !23084, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %e, metadata !23088, metadata !DIExpression()), !dbg !23089
  %call1 = call i32* @__errno_location() #15, !dbg !23090
  %2 = load i32, i32* %call1, align 4, !dbg !23090, !tbaa !2985, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !23089, !tbaa !2985
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !23091, !tbaa !2998
  call void @randint_free(%struct.randint_source* %3), !dbg !23092
  %4 = load i32, i32* %e, align 4, !dbg !23093, !tbaa !2985
  %call2 = call i32* @__errno_location() #15, !dbg !23094
  store i32 %4, i32* %call2, align 4, !dbg !23095, !tbaa !2985, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !23096, !tbaa !2985
  ret i32 %5, !dbg !23097
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !23098 !ctir !2767 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2774
  %s = alloca %struct.randread_source*, align 8, !ctir !2769
  store i8* %name, i8** %name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !23099, metadata !DIExpression()), !dbg !23100
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !23101, metadata !DIExpression()), !dbg !23102
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23103, !tbaa !3851
  %cmp = icmp eq i64 %0, 0, !dbg !23105
  br i1 %cmp, label %if.then, label %if.else, !dbg !23106

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !23107
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !23108
  br label %return, !dbg !23108

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !23109, metadata !DIExpression()), !dbg !23111
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !23111, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !23112, metadata !DIExpression()), !dbg !23113
  %1 = load i8*, i8** %name.addr, align 8, !dbg !23114, !tbaa !2998
  %tobool = icmp ne i8* %1, null, !dbg !23114
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !23116

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !23117, !tbaa !2998
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.507, i64 0, i64 0)), !dbg !23119
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !23120, !tbaa !2998
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !23120
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !23121

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !23122
  br label %return, !dbg !23122

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !23123

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23124, !tbaa !2998
  %4 = load i8*, i8** %name.addr, align 8, !dbg !23125, !tbaa !2998
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !23126
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !23127, !tbaa !2998
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23128, !tbaa !2998
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !23128
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !23130

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23131, !tbaa !2998
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23132, !tbaa !2998
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !23133, !ctir !2770
  %c = bitcast %union.anon.147* %buf to [4096 x i8]*, !dbg !23134
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !23132
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23135, !tbaa !3851
  %cmp9 = icmp ult i64 4096, %8, !dbg !23135
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !23135

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !23135

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23135, !tbaa !3851
  br label %cond.end, !dbg !23135

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !23135
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #10, !dbg !23136
  br label %if.end19, !dbg !23136

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23137, !tbaa !2998
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !23139, !ctir !2770
  %isaac = bitcast %union.anon.147* %buf12 to %struct.isaac*, !dbg !23140
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !23141, !ctir !2821
  store i64 0, i64* %buffered, align 8, !dbg !23142, !tbaa !3660, !ctir !55
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23143, !tbaa !2998
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !23144, !ctir !2770
  %isaac14 = bitcast %union.anon.147* %buf13 to %struct.isaac*, !dbg !23145
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !23146, !ctir !2821
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !23147, !ctir !2825
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !23143
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !23143
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23148, !tbaa !3851
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !23149
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23150, !tbaa !2998
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !23151, !ctir !2770
  %isaac17 = bitcast %union.anon.147* %buf16 to %struct.isaac*, !dbg !23152
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !23153, !ctir !2821
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !23154
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23155, !tbaa !2998
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !23156
  br label %return, !dbg !23156

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !23157
  ret %struct.randread_source* %16, !dbg !23157
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !23158 !ctir !2852 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !2769
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !23159, metadata !DIExpression()), !dbg !23160
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !23161, metadata !DIExpression()), !dbg !23162
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !23163, metadata !DIExpression()), !dbg !23164
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !23165
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !23165
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !23164, !tbaa !2998
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !23166, !tbaa !2998
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23167, !tbaa !2998
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !23168, !ctir !2770
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !23169, !tbaa !23170, !ctir !2774
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23172, !tbaa !2998
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !23173, !ctir !2770
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !23174, !tbaa !23175, !ctir !2809
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !23176, !tbaa !2998
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23177, !tbaa !2998
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !23178, !ctir !2770
  store i8* %4, i8** %handler_arg2, align 8, !dbg !23179, !tbaa !23180, !ctir !427
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !23181, !tbaa !2998
  ret %struct.randread_source* %6, !dbg !23182
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !23183 !ctir !2854 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %seeded = alloca i64, align 8, !ctir !608
  %fd = alloca i32, align 4, !ctir !7
  %v = alloca %struct.timespec, align 8, !ctir !23184
  %nbytes = alloca i64, align 8, !ctir !55
  %v19 = alloca i32, align 4, !ctir !2856
  %nbytes20 = alloca i64, align 8, !ctir !55
  %v34 = alloca i32, align 4, !ctir !2856
  %nbytes35 = alloca i64, align 8, !ctir !55
  %v49 = alloca i32, align 4, !ctir !477
  %nbytes50 = alloca i64, align 8, !ctir !55
  %v64 = alloca i32, align 4, !ctir !477
  %nbytes65 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !23188, metadata !DIExpression()), !dbg !23189
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !23190, metadata !DIExpression()), !dbg !23191
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !23192, metadata !DIExpression()), !dbg !23193
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !23194, metadata !DIExpression()), !dbg !23195
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !23196, !tbaa !2998
  store i8* %0, i8** %buf, align 8, !dbg !23195, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !23197, metadata !DIExpression()), !dbg !23198
  store i64 0, i64* %seeded, align 8, !dbg !23198, !tbaa !3851
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23199, metadata !DIExpression()), !dbg !23200
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.508, i64 0, i64 0), i32 0), !dbg !23201
  store i32 %call, i32* %fd, align 4, !dbg !23200, !tbaa !2985
  %1 = load i32, i32* %fd, align 4, !dbg !23202, !tbaa !2985
  %cmp = icmp sle i32 0, %1, !dbg !23204
  br i1 %cmp, label %if.then, label %if.end6, !dbg !23205

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !23206, !tbaa !2985
  %3 = load i8*, i8** %buf, align 8, !dbg !23208, !tbaa !2998
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !23209, !tbaa !3851
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23209, !tbaa !3851
  %cmp1 = icmp ult i64 %4, %5, !dbg !23209
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !23209

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !23209, !tbaa !3851
  br label %cond.end, !dbg !23209

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !23209, !tbaa !3851
  br label %cond.end, !dbg !23209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !23209
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !23210
  store i64 %call2, i64* %seeded, align 8, !dbg !23211, !tbaa !3851
  %8 = load i64, i64* %seeded, align 8, !dbg !23212, !tbaa !3851
  %cmp3 = icmp slt i64 %8, 0, !dbg !23214
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !23215

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !23216, !tbaa !3851
  br label %if.end, !dbg !23217

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !23218, !tbaa !2985
  %call5 = call i32 @close(i32 %9), !dbg !23219
  br label %if.end6, !dbg !23220

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !23221, !tbaa !3851
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !23221, !tbaa !3851
  %cmp7 = icmp ult i64 %10, %11, !dbg !23221
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !23223

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !23224, metadata !DIExpression()), !dbg !23226
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !23227, metadata !DIExpression()), !dbg !23226
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !23226, !tbaa !3851
  %13 = load i64, i64* %seeded, align 8, !dbg !23226, !tbaa !3851
  %sub = sub i64 %12, %13, !dbg !23226
  %cmp9 = icmp ult i64 16, %sub, !dbg !23226
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !23226

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !23226

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !23226, !tbaa !3851
  %15 = load i64, i64* %seeded, align 8, !dbg !23226, !tbaa !3851
  %sub12 = sub i64 %14, %15, !dbg !23226
  br label %cond.end13, !dbg !23226

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !23226
  store i64 %cond14, i64* %nbytes, align 8, !dbg !23226, !tbaa !3851
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #10, !dbg !23226
  %16 = load i8*, i8** %buf, align 8, !dbg !23226, !tbaa !2998
  %17 = load i64, i64* %seeded, align 8, !dbg !23226, !tbaa !3851
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !23226
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !23226
  %19 = load i64, i64* %nbytes, align 8, !dbg !23226, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !23226
  %20 = load i64, i64* %nbytes, align 8, !dbg !23226, !tbaa !3851
  %21 = load i64, i64* %seeded, align 8, !dbg !23226, !tbaa !3851
  %add = add i64 %21, %20, !dbg !23226
  store i64 %add, i64* %seeded, align 8, !dbg !23226, !tbaa !3851
  br label %if.end16, !dbg !23226

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !23228, !tbaa !3851
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !23228, !tbaa !3851
  %cmp17 = icmp ult i64 %22, %23, !dbg !23228
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !23230

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !23231, metadata !DIExpression()), !dbg !23233
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !23234, metadata !DIExpression()), !dbg !23233
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !23233, !tbaa !3851
  %25 = load i64, i64* %seeded, align 8, !dbg !23233, !tbaa !3851
  %sub21 = sub i64 %24, %25, !dbg !23233
  %cmp22 = icmp ult i64 4, %sub21, !dbg !23233
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !23233

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !23233

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !23233, !tbaa !3851
  %27 = load i64, i64* %seeded, align 8, !dbg !23233, !tbaa !3851
  %sub25 = sub i64 %26, %27, !dbg !23233
  br label %cond.end26, !dbg !23233

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !23233
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !23233, !tbaa !3851
  %call28 = call i32 @getpid() #10, !dbg !23233
  store i32 %call28, i32* %v19, align 4, !dbg !23233, !tbaa !2985
  %28 = load i8*, i8** %buf, align 8, !dbg !23233, !tbaa !2998
  %29 = load i64, i64* %seeded, align 8, !dbg !23233, !tbaa !3851
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !23233
  %30 = bitcast i32* %v19 to i8*, !dbg !23233
  %31 = load i64, i64* %nbytes20, align 8, !dbg !23233, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !23233
  %32 = load i64, i64* %nbytes20, align 8, !dbg !23233, !tbaa !3851
  %33 = load i64, i64* %seeded, align 8, !dbg !23233, !tbaa !3851
  %add30 = add i64 %33, %32, !dbg !23233
  store i64 %add30, i64* %seeded, align 8, !dbg !23233, !tbaa !3851
  br label %if.end31, !dbg !23233

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !23235, !tbaa !3851
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !23235, !tbaa !3851
  %cmp32 = icmp ult i64 %34, %35, !dbg !23235
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !23237

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !23238, metadata !DIExpression()), !dbg !23240
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !23241, metadata !DIExpression()), !dbg !23240
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !23240, !tbaa !3851
  %37 = load i64, i64* %seeded, align 8, !dbg !23240, !tbaa !3851
  %sub36 = sub i64 %36, %37, !dbg !23240
  %cmp37 = icmp ult i64 4, %sub36, !dbg !23240
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !23240

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !23240

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !23240, !tbaa !3851
  %39 = load i64, i64* %seeded, align 8, !dbg !23240, !tbaa !3851
  %sub40 = sub i64 %38, %39, !dbg !23240
  br label %cond.end41, !dbg !23240

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !23240
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !23240, !tbaa !3851
  %call43 = call i32 @getppid() #10, !dbg !23240
  store i32 %call43, i32* %v34, align 4, !dbg !23240, !tbaa !2985
  %40 = load i8*, i8** %buf, align 8, !dbg !23240, !tbaa !2998
  %41 = load i64, i64* %seeded, align 8, !dbg !23240, !tbaa !3851
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !23240
  %42 = bitcast i32* %v34 to i8*, !dbg !23240
  %43 = load i64, i64* %nbytes35, align 8, !dbg !23240, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !23240
  %44 = load i64, i64* %nbytes35, align 8, !dbg !23240, !tbaa !3851
  %45 = load i64, i64* %seeded, align 8, !dbg !23240, !tbaa !3851
  %add45 = add i64 %45, %44, !dbg !23240
  store i64 %add45, i64* %seeded, align 8, !dbg !23240, !tbaa !3851
  br label %if.end46, !dbg !23240

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !23242, !tbaa !3851
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !23242, !tbaa !3851
  %cmp47 = icmp ult i64 %46, %47, !dbg !23242
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !23244

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !23245, metadata !DIExpression()), !dbg !23247
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !23248, metadata !DIExpression()), !dbg !23247
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !23247, !tbaa !3851
  %49 = load i64, i64* %seeded, align 8, !dbg !23247, !tbaa !3851
  %sub51 = sub i64 %48, %49, !dbg !23247
  %cmp52 = icmp ult i64 4, %sub51, !dbg !23247
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !23247

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !23247

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !23247, !tbaa !3851
  %51 = load i64, i64* %seeded, align 8, !dbg !23247, !tbaa !3851
  %sub55 = sub i64 %50, %51, !dbg !23247
  br label %cond.end56, !dbg !23247

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !23247
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !23247, !tbaa !3851
  %call58 = call i32 @getuid() #10, !dbg !23247
  store i32 %call58, i32* %v49, align 4, !dbg !23247, !tbaa !2985
  %52 = load i8*, i8** %buf, align 8, !dbg !23247, !tbaa !2998
  %53 = load i64, i64* %seeded, align 8, !dbg !23247, !tbaa !3851
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !23247
  %54 = bitcast i32* %v49 to i8*, !dbg !23247
  %55 = load i64, i64* %nbytes50, align 8, !dbg !23247, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !23247
  %56 = load i64, i64* %nbytes50, align 8, !dbg !23247, !tbaa !3851
  %57 = load i64, i64* %seeded, align 8, !dbg !23247, !tbaa !3851
  %add60 = add i64 %57, %56, !dbg !23247
  store i64 %add60, i64* %seeded, align 8, !dbg !23247, !tbaa !3851
  br label %if.end61, !dbg !23247

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !23249, !tbaa !3851
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !23249, !tbaa !3851
  %cmp62 = icmp ult i64 %58, %59, !dbg !23249
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !23251

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !23252, metadata !DIExpression()), !dbg !23254
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !23255, metadata !DIExpression()), !dbg !23254
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !23254, !tbaa !3851
  %61 = load i64, i64* %seeded, align 8, !dbg !23254, !tbaa !3851
  %sub66 = sub i64 %60, %61, !dbg !23254
  %cmp67 = icmp ult i64 4, %sub66, !dbg !23254
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !23254

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !23254

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !23254, !tbaa !3851
  %63 = load i64, i64* %seeded, align 8, !dbg !23254, !tbaa !3851
  %sub70 = sub i64 %62, %63, !dbg !23254
  br label %cond.end71, !dbg !23254

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !23254
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !23254, !tbaa !3851
  %call73 = call i32 @getgid() #10, !dbg !23254
  store i32 %call73, i32* %v64, align 4, !dbg !23254, !tbaa !2985
  %64 = load i8*, i8** %buf, align 8, !dbg !23254, !tbaa !2998
  %65 = load i64, i64* %seeded, align 8, !dbg !23254, !tbaa !3851
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !23254
  %66 = bitcast i32* %v64 to i8*, !dbg !23254
  %67 = load i64, i64* %nbytes65, align 8, !dbg !23254, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !23254
  %68 = load i64, i64* %nbytes65, align 8, !dbg !23254, !tbaa !3851
  %69 = load i64, i64* %seeded, align 8, !dbg !23254, !tbaa !3851
  %add75 = add i64 %69, %68, !dbg !23254
  store i64 %add75, i64* %seeded, align 8, !dbg !23254, !tbaa !3851
  br label %if.end76, !dbg !23254

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !23256
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !23257 !ctir !2810 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !23258, metadata !DIExpression()), !dbg !23259
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !23260, !tbaa !2998
  %tobool = icmp ne i8* %0, null, !dbg !23260
  br i1 %tobool, label %if.then, label %if.end, !dbg !23262

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !23263, !tbaa !2985
  %call = call i32* @__errno_location() #15, !dbg !23264
  %2 = load i32, i32* %call, align 4, !dbg !23264, !tbaa !2985, !ctir !7
  %call1 = call i32* @__errno_location() #15, !dbg !23265
  %3 = load i32, i32* %call1, align 4, !dbg !23265, !tbaa !2985, !ctir !7
  %cmp = icmp eq i32 %3, 0, !dbg !23266
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23265

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.509, i64 0, i64 0)) #10, !dbg !23267
  br label %cond.end, !dbg !23265

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.510, i64 0, i64 0)) #10, !dbg !23268
  br label %cond.end, !dbg !23265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !23265
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !23269, !tbaa !2998
  %call4 = call i8* @quote(i8* %4), !dbg !23270
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !23271
  br label %if.end, !dbg !23271

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !23272
  unreachable, !dbg !23272
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !23273 !ctir !2844 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23274, metadata !DIExpression()), !dbg !23275
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !23276, metadata !DIExpression()), !dbg !23277
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !23278, !tbaa !2998
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23279, !tbaa !2998
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !23280, !ctir !2770
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !23281, !tbaa !23175, !ctir !2809
  ret void, !dbg !23282
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !23283 !ctir !2846 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23284, metadata !DIExpression()), !dbg !23285
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !23286, metadata !DIExpression()), !dbg !23287
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !23288, !tbaa !2998
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23289, !tbaa !2998
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !23290, !ctir !2770
  store i8* %0, i8** %handler_arg1, align 8, !dbg !23291, !tbaa !23180, !ctir !427
  ret void, !dbg !23292
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !23293 !ctir !2848 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23294, metadata !DIExpression()), !dbg !23295
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !23296, metadata !DIExpression()), !dbg !23297
  store i64 %size, i64* %size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23298, metadata !DIExpression()), !dbg !23299
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23300, !tbaa !2998
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !23302, !ctir !2770
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23302, !tbaa !23170, !ctir !2774
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !23300
  br i1 %tobool, label %if.then, label %if.else, !dbg !23303

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23304, !tbaa !2998
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !23305, !tbaa !2998
  %4 = load i64, i64* %size.addr, align 8, !dbg !23306, !tbaa !3851
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !23307
  br label %if.end, !dbg !23307

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23308, !tbaa !2998
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !23309, !ctir !2770
  %isaac = bitcast %union.anon.147* %buf1 to %struct.isaac*, !dbg !23310
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !23311, !tbaa !2998
  %7 = load i64, i64* %size.addr, align 8, !dbg !23312, !tbaa !3851
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !23313
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !23314
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !23315 !ctir !2858 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %fread_errno = alloca i32, align 4, !ctir !7
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23316, metadata !DIExpression()), !dbg !23317
  store i8* %p, i8** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !23318, metadata !DIExpression()), !dbg !23319
  store i64 %size, i64* %size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23320, metadata !DIExpression()), !dbg !23321
  br label %while.body, !dbg !23322

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !23323, metadata !DIExpression()), !dbg !23325
  %0 = load i8*, i8** %p.addr, align 8, !dbg !23326, !tbaa !2998
  %1 = load i64, i64* %size.addr, align 8, !dbg !23326, !tbaa !3851
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23326, !tbaa !2998
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !23326, !ctir !2770
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23326, !tbaa !23170, !ctir !2774
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !23326
  store i64 %call, i64* %inbytes, align 8, !dbg !23325, !tbaa !3851
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !23327, metadata !DIExpression()), !dbg !23328
  %call1 = call i32* @__errno_location() #15, !dbg !23329
  %4 = load i32, i32* %call1, align 4, !dbg !23329, !tbaa !2985, !ctir !7
  store i32 %4, i32* %fread_errno, align 4, !dbg !23328, !tbaa !2985
  %5 = load i64, i64* %inbytes, align 8, !dbg !23330, !tbaa !3851
  %6 = load i8*, i8** %p.addr, align 8, !dbg !23331, !tbaa !2998
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !23331
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !23331, !tbaa !2998
  %7 = load i64, i64* %inbytes, align 8, !dbg !23332, !tbaa !3851
  %8 = load i64, i64* %size.addr, align 8, !dbg !23333, !tbaa !3851
  %sub = sub i64 %8, %7, !dbg !23333
  store i64 %sub, i64* %size.addr, align 8, !dbg !23333, !tbaa !3851
  %9 = load i64, i64* %size.addr, align 8, !dbg !23334, !tbaa !3851
  %cmp = icmp eq i64 %9, 0, !dbg !23336
  br i1 %cmp, label %if.then, label %if.end, !dbg !23337

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !23338

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23339, !tbaa !2998
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !23339, !ctir !2770
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !23339, !tbaa !23170, !ctir !2774
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #10, !dbg !23339
  %tobool = icmp ne i32 %call3, 0, !dbg !23339
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !23339

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !23340, !tbaa !2985
  br label %cond.end, !dbg !23339

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !23339

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !23339
  %call4 = call i32* @__errno_location() #15, !dbg !23341
  store i32 %cond, i32* %call4, align 4, !dbg !23342, !tbaa !2985, !ctir !7
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23343, !tbaa !2998
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !23344, !ctir !2770
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !23344, !tbaa !23175, !ctir !2809
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23345, !tbaa !2998
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !23346, !ctir !2770
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !23346, !tbaa !23180, !ctir !427
  call void %14(i8* %16), !dbg !23343
  br label %while.body, !dbg !23322, !llvm.loop !23347

while.end:                                        ; preds = %if.then
  ret void, !dbg !23349
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !23350 !ctir !2861 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %char_p = alloca i8*, align 8, !ctir !9
  %wp = alloca i64*, align 8, !ctir !2864
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !23351, metadata !DIExpression()), !dbg !23352
  store i8* %p, i8** %p.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !23353, metadata !DIExpression()), !dbg !23354
  store i64 %size, i64* %size.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !23355, metadata !DIExpression()), !dbg !23356
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !23357, metadata !DIExpression()), !dbg !23358
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23359, !tbaa !2998
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !23360, !ctir !2821
  %1 = load i64, i64* %buffered, align 8, !dbg !23360, !tbaa !23361, !ctir !55
  store i64 %1, i64* %inbytes, align 8, !dbg !23358, !tbaa !3851
  br label %while.body, !dbg !23364

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !23365, metadata !DIExpression()), !dbg !23367
  %2 = load i8*, i8** %p.addr, align 8, !dbg !23368, !tbaa !2998
  store i8* %2, i8** %char_p, align 8, !dbg !23367, !tbaa !2998
  %3 = load i64, i64* %size.addr, align 8, !dbg !23369, !tbaa !3851
  %4 = load i64, i64* %inbytes, align 8, !dbg !23371, !tbaa !3851
  %cmp = icmp ule i64 %3, %4, !dbg !23372
  br i1 %cmp, label %if.then, label %if.end, !dbg !23373

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !23374, !tbaa !2998
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23376, !tbaa !2998
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !23377, !ctir !2821
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !23378
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !23376
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !23379
  %7 = load i64, i64* %inbytes, align 8, !dbg !23380, !tbaa !3851
  %idx.neg = sub i64 0, %7, !dbg !23381
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !23381
  %8 = load i64, i64* %size.addr, align 8, !dbg !23382, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !23383
  %9 = load i64, i64* %inbytes, align 8, !dbg !23384, !tbaa !3851
  %10 = load i64, i64* %size.addr, align 8, !dbg !23385, !tbaa !3851
  %sub = sub i64 %9, %10, !dbg !23386
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23387, !tbaa !2998
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !23388, !ctir !2821
  store i64 %sub, i64* %buffered2, align 8, !dbg !23389, !tbaa !23361, !ctir !55
  br label %return, !dbg !23390

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !23391, !tbaa !2998
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23392, !tbaa !2998
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !23393, !ctir !2821
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !23394
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !23392
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !23395
  %14 = load i64, i64* %inbytes, align 8, !dbg !23396, !tbaa !3851
  %idx.neg7 = sub i64 0, %14, !dbg !23397
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !23397
  %15 = load i64, i64* %inbytes, align 8, !dbg !23398, !tbaa !3851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !23399
  %16 = load i8*, i8** %char_p, align 8, !dbg !23400, !tbaa !2998
  %17 = load i64, i64* %inbytes, align 8, !dbg !23401, !tbaa !3851
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !23402
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !23403, !tbaa !2998
  %18 = load i64, i64* %inbytes, align 8, !dbg !23404, !tbaa !3851
  %19 = load i64, i64* %size.addr, align 8, !dbg !23405, !tbaa !3851
  %sub10 = sub i64 %19, %18, !dbg !23405
  store i64 %sub10, i64* %size.addr, align 8, !dbg !23405, !tbaa !3851
  %20 = load i8*, i8** %p.addr, align 8, !dbg !23406, !tbaa !2998
  %21 = ptrtoint i8* %20 to i64, !dbg !23406
  %rem = urem i64 %21, 8, !dbg !23406
  %cmp11 = icmp eq i64 %rem, 0, !dbg !23406
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !23408

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !23409, metadata !DIExpression()), !dbg !23411
  %22 = load i8*, i8** %p.addr, align 8, !dbg !23412, !tbaa !2998
  %23 = bitcast i8* %22 to i64*, !dbg !23412
  store i64* %23, i64** %wp, align 8, !dbg !23411, !tbaa !2998
  br label %while.cond13, !dbg !23413

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !23414, !tbaa !3851
  %cmp14 = icmp ule i64 2048, %24, !dbg !23415
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !23413

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23416, !tbaa !2998
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !23418, !ctir !2821
  %26 = load i64*, i64** %wp, align 8, !dbg !23419, !tbaa !2998
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !23420
  %27 = load i64*, i64** %wp, align 8, !dbg !23421, !tbaa !2998
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !23421
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !23421, !tbaa !2998
  %28 = load i64, i64* %size.addr, align 8, !dbg !23422, !tbaa !3851
  %sub17 = sub i64 %28, 2048, !dbg !23422
  store i64 %sub17, i64* %size.addr, align 8, !dbg !23422, !tbaa !3851
  %29 = load i64, i64* %size.addr, align 8, !dbg !23423, !tbaa !3851
  %cmp18 = icmp eq i64 %29, 0, !dbg !23425
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !23426

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23427, !tbaa !2998
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !23429, !ctir !2821
  store i64 0, i64* %buffered20, align 8, !dbg !23430, !tbaa !23361, !ctir !55
  br label %return, !dbg !23431

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !23413, !llvm.loop !23432

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !23434, !tbaa !2998
  %32 = bitcast i64* %31 to i8*, !dbg !23434
  store i8* %32, i8** %p.addr, align 8, !dbg !23435, !tbaa !2998
  br label %if.end22, !dbg !23436

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23437, !tbaa !2998
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !23438, !ctir !2821
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !23439, !tbaa !2998
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !23440, !ctir !2821
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !23441
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !23439
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !23442
  store i64 2048, i64* %inbytes, align 8, !dbg !23443, !tbaa !3851
  br label %while.body, !dbg !23364, !llvm.loop !23444

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !23446
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !23447 !ctir !2850 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2774
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !23448, metadata !DIExpression()), !dbg !23449
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !23450, metadata !DIExpression()), !dbg !23451
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23452, !tbaa !2998
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !23453, !ctir !2770
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !23453, !tbaa !23170, !ctir !2774
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !23451, !tbaa !2998
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23454, !tbaa !2998
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !23454
  call void @explicit_bzero(i8* %3, i64 4152) #10, !dbg !23455
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !23456, !tbaa !2998
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !23456
  call void @free(i8* %5) #10, !dbg !23457
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23458, !tbaa !2998
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !23458
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !23458

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !23459, !tbaa !2998
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !23460
  br label %cond.end, !dbg !23458

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !23458

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !23458
  ret i32 %cond, !dbg !23461
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !23462 !ctir !2868 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !2830
  %b = alloca i64, align 8, !ctir !2830
  %m = alloca i64*, align 8, !ctir !2864
  %r = alloca i64*, align 8, !ctir !2864
  %x = alloca i64, align 8, !ctir !2830
  %y = alloca i64, align 8, !ctir !2830
  %x18 = alloca i64, align 8, !ctir !2830
  %y19 = alloca i64, align 8, !ctir !2830
  %x40 = alloca i64, align 8, !ctir !2830
  %y41 = alloca i64, align 8, !ctir !2830
  %x61 = alloca i64, align 8, !ctir !2830
  %y62 = alloca i64, align 8, !ctir !2830
  %x88 = alloca i64, align 8, !ctir !2830
  %y89 = alloca i64, align 8, !ctir !2830
  %x110 = alloca i64, align 8, !ctir !2830
  %y111 = alloca i64, align 8, !ctir !2830
  %x132 = alloca i64, align 8, !ctir !2830
  %y133 = alloca i64, align 8, !ctir !2830
  %x153 = alloca i64, align 8, !ctir !2830
  %y154 = alloca i64, align 8, !ctir !2830
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !23464, metadata !DIExpression()), !dbg !23465
  store i64* %result, i64** %result.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !23466, metadata !DIExpression()), !dbg !23467
  call void @llvm.dbg.declare(metadata i64* %a, metadata !23468, metadata !DIExpression()), !dbg !23469
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23470, !tbaa !2998
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !23471, !ctir !2871
  %1 = load i64, i64* %a1, align 8, !dbg !23471, !tbaa !23472, !ctir !2830
  store i64 %1, i64* %a, align 8, !dbg !23469, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %b, metadata !23473, metadata !DIExpression()), !dbg !23474
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23475, !tbaa !2998
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !23476, !ctir !2871
  %3 = load i64, i64* %b2, align 8, !dbg !23476, !tbaa !23477, !ctir !2830
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23478, !tbaa !2998
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !23479, !ctir !2871
  %5 = load i64, i64* %c, align 8, !dbg !23480, !tbaa !23481, !ctir !2830
  %inc = add i64 %5, 1, !dbg !23480
  store i64 %inc, i64* %c, align 8, !dbg !23480, !tbaa !23481, !ctir !2830
  %add = add i64 %3, %inc, !dbg !23482
  store i64 %add, i64* %b, align 8, !dbg !23474, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64** %m, metadata !23483, metadata !DIExpression()), !dbg !23484
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23485, !tbaa !2998
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !23486, !ctir !2871
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !23485
  store i64* %arraydecay, i64** %m, align 8, !dbg !23484, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %r, metadata !23487, metadata !DIExpression()), !dbg !23488
  %7 = load i64*, i64** %result.addr, align 8, !dbg !23489, !tbaa !2998
  store i64* %7, i64** %r, align 8, !dbg !23488, !tbaa !2998
  br label %do.body, !dbg !23490

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !23491, metadata !DIExpression()), !dbg !23494
  call void @llvm.dbg.declare(metadata i64* %y, metadata !23495, metadata !DIExpression()), !dbg !23494
  %8 = load i64, i64* %a, align 8, !dbg !23494, !tbaa !3851
  %9 = load i64, i64* %a, align 8, !dbg !23494, !tbaa !3851
  %shl = shl i64 %9, 21, !dbg !23494
  %xor = xor i64 %8, %shl, !dbg !23494
  %neg = xor i64 %xor, -1, !dbg !23494
  %xor4 = xor i64 0, %neg, !dbg !23494
  %10 = load i64*, i64** %m, align 8, !dbg !23494, !tbaa !2998
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !23494, !ctir !2864
  %11 = load i64, i64* %arrayidx, align 8, !dbg !23494, !tbaa !3851
  %add5 = add i64 %xor4, %11, !dbg !23494
  store i64 %add5, i64* %a, align 8, !dbg !23494, !tbaa !3851
  %12 = load i64*, i64** %m, align 8, !dbg !23494, !tbaa !2998
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !23494, !ctir !2864
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !23494, !tbaa !3851
  store i64 %13, i64* %x, align 8, !dbg !23494, !tbaa !3851
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23494, !tbaa !2998
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !23494, !ctir !2871
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !23494
  %15 = load i64, i64* %x, align 8, !dbg !23494, !tbaa !3851
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !23494
  %16 = load i64, i64* %a, align 8, !dbg !23494, !tbaa !3851
  %add9 = add i64 %call, %16, !dbg !23494
  %17 = load i64, i64* %b, align 8, !dbg !23494, !tbaa !3851
  %add10 = add i64 %add9, %17, !dbg !23494
  store i64 %add10, i64* %y, align 8, !dbg !23494, !tbaa !3851
  %18 = load i64*, i64** %m, align 8, !dbg !23494, !tbaa !2998
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !23494, !ctir !2864
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !23494, !tbaa !3851
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23494, !tbaa !2998
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !23494, !ctir !2871
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !23494
  %20 = load i64, i64* %y, align 8, !dbg !23494, !tbaa !3851
  %shr = lshr i64 %20, 8, !dbg !23494
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !23494
  %21 = load i64, i64* %x, align 8, !dbg !23494, !tbaa !3851
  %add15 = add i64 %call14, %21, !dbg !23494
  %call16 = call i64 @just(i64 %add15), !dbg !23494
  store i64 %call16, i64* %b, align 8, !dbg !23494, !tbaa !3851
  %22 = load i64*, i64** %r, align 8, !dbg !23494, !tbaa !2998
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !23494, !ctir !2864
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !23494, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !23496, metadata !DIExpression()), !dbg !23498
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !23499, metadata !DIExpression()), !dbg !23498
  %23 = load i64, i64* %a, align 8, !dbg !23498, !tbaa !3851
  %24 = load i64, i64* %a, align 8, !dbg !23498, !tbaa !3851
  %call20 = call i64 @just(i64 %24), !dbg !23498
  %shr21 = lshr i64 %call20, 5, !dbg !23498
  %xor22 = xor i64 %23, %shr21, !dbg !23498
  %xor23 = xor i64 0, %xor22, !dbg !23498
  %25 = load i64*, i64** %m, align 8, !dbg !23498, !tbaa !2998
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !23498, !ctir !2864
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !23498, !tbaa !3851
  %add25 = add i64 %xor23, %26, !dbg !23498
  store i64 %add25, i64* %a, align 8, !dbg !23498, !tbaa !3851
  %27 = load i64*, i64** %m, align 8, !dbg !23498, !tbaa !2998
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !23498, !ctir !2864
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !23498, !tbaa !3851
  store i64 %28, i64* %x18, align 8, !dbg !23498, !tbaa !3851
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23498, !tbaa !2998
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !23498, !ctir !2871
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !23498
  %30 = load i64, i64* %x18, align 8, !dbg !23498, !tbaa !3851
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !23498
  %31 = load i64, i64* %a, align 8, !dbg !23498, !tbaa !3851
  %add30 = add i64 %call29, %31, !dbg !23498
  %32 = load i64, i64* %b, align 8, !dbg !23498, !tbaa !3851
  %add31 = add i64 %add30, %32, !dbg !23498
  store i64 %add31, i64* %y19, align 8, !dbg !23498, !tbaa !3851
  %33 = load i64*, i64** %m, align 8, !dbg !23498, !tbaa !2998
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !23498, !ctir !2864
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !23498, !tbaa !3851
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23498, !tbaa !2998
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !23498, !ctir !2871
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !23498
  %35 = load i64, i64* %y19, align 8, !dbg !23498, !tbaa !3851
  %shr35 = lshr i64 %35, 8, !dbg !23498
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !23498
  %36 = load i64, i64* %x18, align 8, !dbg !23498, !tbaa !3851
  %add37 = add i64 %call36, %36, !dbg !23498
  %call38 = call i64 @just(i64 %add37), !dbg !23498
  store i64 %call38, i64* %b, align 8, !dbg !23498, !tbaa !3851
  %37 = load i64*, i64** %r, align 8, !dbg !23498, !tbaa !2998
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !23498, !ctir !2864
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !23498, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !23500, metadata !DIExpression()), !dbg !23502
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !23503, metadata !DIExpression()), !dbg !23502
  %38 = load i64, i64* %a, align 8, !dbg !23502, !tbaa !3851
  %39 = load i64, i64* %a, align 8, !dbg !23502, !tbaa !3851
  %shl42 = shl i64 %39, 12, !dbg !23502
  %xor43 = xor i64 %38, %shl42, !dbg !23502
  %xor44 = xor i64 0, %xor43, !dbg !23502
  %40 = load i64*, i64** %m, align 8, !dbg !23502, !tbaa !2998
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !23502, !ctir !2864
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !23502, !tbaa !3851
  %add46 = add i64 %xor44, %41, !dbg !23502
  store i64 %add46, i64* %a, align 8, !dbg !23502, !tbaa !3851
  %42 = load i64*, i64** %m, align 8, !dbg !23502, !tbaa !2998
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !23502, !ctir !2864
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !23502, !tbaa !3851
  store i64 %43, i64* %x40, align 8, !dbg !23502, !tbaa !3851
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23502, !tbaa !2998
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !23502, !ctir !2871
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !23502
  %45 = load i64, i64* %x40, align 8, !dbg !23502, !tbaa !3851
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !23502
  %46 = load i64, i64* %a, align 8, !dbg !23502, !tbaa !3851
  %add51 = add i64 %call50, %46, !dbg !23502
  %47 = load i64, i64* %b, align 8, !dbg !23502, !tbaa !3851
  %add52 = add i64 %add51, %47, !dbg !23502
  store i64 %add52, i64* %y41, align 8, !dbg !23502, !tbaa !3851
  %48 = load i64*, i64** %m, align 8, !dbg !23502, !tbaa !2998
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !23502, !ctir !2864
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !23502, !tbaa !3851
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23502, !tbaa !2998
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !23502, !ctir !2871
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !23502
  %50 = load i64, i64* %y41, align 8, !dbg !23502, !tbaa !3851
  %shr56 = lshr i64 %50, 8, !dbg !23502
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !23502
  %51 = load i64, i64* %x40, align 8, !dbg !23502, !tbaa !3851
  %add58 = add i64 %call57, %51, !dbg !23502
  %call59 = call i64 @just(i64 %add58), !dbg !23502
  store i64 %call59, i64* %b, align 8, !dbg !23502, !tbaa !3851
  %52 = load i64*, i64** %r, align 8, !dbg !23502, !tbaa !2998
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !23502, !ctir !2864
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !23502, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !23504, metadata !DIExpression()), !dbg !23506
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !23507, metadata !DIExpression()), !dbg !23506
  %53 = load i64, i64* %a, align 8, !dbg !23506, !tbaa !3851
  %54 = load i64, i64* %a, align 8, !dbg !23506, !tbaa !3851
  %call63 = call i64 @just(i64 %54), !dbg !23506
  %shr64 = lshr i64 %call63, 33, !dbg !23506
  %xor65 = xor i64 %53, %shr64, !dbg !23506
  %xor66 = xor i64 0, %xor65, !dbg !23506
  %55 = load i64*, i64** %m, align 8, !dbg !23506, !tbaa !2998
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !23506, !ctir !2864
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !23506, !tbaa !3851
  %add68 = add i64 %xor66, %56, !dbg !23506
  store i64 %add68, i64* %a, align 8, !dbg !23506, !tbaa !3851
  %57 = load i64*, i64** %m, align 8, !dbg !23506, !tbaa !2998
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !23506, !ctir !2864
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !23506, !tbaa !3851
  store i64 %58, i64* %x61, align 8, !dbg !23506, !tbaa !3851
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23506, !tbaa !2998
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !23506, !ctir !2871
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !23506
  %60 = load i64, i64* %x61, align 8, !dbg !23506, !tbaa !3851
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !23506
  %61 = load i64, i64* %a, align 8, !dbg !23506, !tbaa !3851
  %add73 = add i64 %call72, %61, !dbg !23506
  %62 = load i64, i64* %b, align 8, !dbg !23506, !tbaa !3851
  %add74 = add i64 %add73, %62, !dbg !23506
  store i64 %add74, i64* %y62, align 8, !dbg !23506, !tbaa !3851
  %63 = load i64*, i64** %m, align 8, !dbg !23506, !tbaa !2998
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !23506, !ctir !2864
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !23506, !tbaa !3851
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23506, !tbaa !2998
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !23506, !ctir !2871
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !23506
  %65 = load i64, i64* %y62, align 8, !dbg !23506, !tbaa !3851
  %shr78 = lshr i64 %65, 8, !dbg !23506
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !23506
  %66 = load i64, i64* %x61, align 8, !dbg !23506, !tbaa !3851
  %add80 = add i64 %call79, %66, !dbg !23506
  %call81 = call i64 @just(i64 %add80), !dbg !23506
  store i64 %call81, i64* %b, align 8, !dbg !23506, !tbaa !3851
  %67 = load i64*, i64** %r, align 8, !dbg !23506, !tbaa !2998
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !23506, !ctir !2864
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !23506, !tbaa !3851
  %68 = load i64*, i64** %r, align 8, !dbg !23508, !tbaa !2998
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !23508
  store i64* %add.ptr, i64** %r, align 8, !dbg !23508, !tbaa !2998
  br label %do.cond, !dbg !23509

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !23510, !tbaa !2998
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !23510
  store i64* %add.ptr83, i64** %m, align 8, !dbg !23510, !tbaa !2998
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23511, !tbaa !2998
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !23512, !ctir !2871
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !23511
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !23513
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !23514
  br i1 %cmp, label %do.body, label %do.end, !dbg !23509, !llvm.loop !23515

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !23517

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !23518, metadata !DIExpression()), !dbg !23521
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !23522, metadata !DIExpression()), !dbg !23521
  %71 = load i64, i64* %a, align 8, !dbg !23521, !tbaa !3851
  %72 = load i64, i64* %a, align 8, !dbg !23521, !tbaa !3851
  %shl90 = shl i64 %72, 21, !dbg !23521
  %xor91 = xor i64 %71, %shl90, !dbg !23521
  %neg92 = xor i64 %xor91, -1, !dbg !23521
  %xor93 = xor i64 0, %neg92, !dbg !23521
  %73 = load i64*, i64** %m, align 8, !dbg !23521, !tbaa !2998
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !23521, !ctir !2864
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !23521, !tbaa !3851
  %add95 = add i64 %xor93, %74, !dbg !23521
  store i64 %add95, i64* %a, align 8, !dbg !23521, !tbaa !3851
  %75 = load i64*, i64** %m, align 8, !dbg !23521, !tbaa !2998
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !23521, !ctir !2864
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !23521, !tbaa !3851
  store i64 %76, i64* %x88, align 8, !dbg !23521, !tbaa !3851
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23521, !tbaa !2998
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !23521, !ctir !2871
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !23521
  %78 = load i64, i64* %x88, align 8, !dbg !23521, !tbaa !3851
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !23521
  %79 = load i64, i64* %a, align 8, !dbg !23521, !tbaa !3851
  %add100 = add i64 %call99, %79, !dbg !23521
  %80 = load i64, i64* %b, align 8, !dbg !23521, !tbaa !3851
  %add101 = add i64 %add100, %80, !dbg !23521
  store i64 %add101, i64* %y89, align 8, !dbg !23521, !tbaa !3851
  %81 = load i64*, i64** %m, align 8, !dbg !23521, !tbaa !2998
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !23521, !ctir !2864
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !23521, !tbaa !3851
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23521, !tbaa !2998
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !23521, !ctir !2871
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !23521
  %83 = load i64, i64* %y89, align 8, !dbg !23521, !tbaa !3851
  %shr105 = lshr i64 %83, 8, !dbg !23521
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !23521
  %84 = load i64, i64* %x88, align 8, !dbg !23521, !tbaa !3851
  %add107 = add i64 %call106, %84, !dbg !23521
  %call108 = call i64 @just(i64 %add107), !dbg !23521
  store i64 %call108, i64* %b, align 8, !dbg !23521, !tbaa !3851
  %85 = load i64*, i64** %r, align 8, !dbg !23521, !tbaa !2998
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !23521, !ctir !2864
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !23521, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !23523, metadata !DIExpression()), !dbg !23525
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !23526, metadata !DIExpression()), !dbg !23525
  %86 = load i64, i64* %a, align 8, !dbg !23525, !tbaa !3851
  %87 = load i64, i64* %a, align 8, !dbg !23525, !tbaa !3851
  %call112 = call i64 @just(i64 %87), !dbg !23525
  %shr113 = lshr i64 %call112, 5, !dbg !23525
  %xor114 = xor i64 %86, %shr113, !dbg !23525
  %xor115 = xor i64 0, %xor114, !dbg !23525
  %88 = load i64*, i64** %m, align 8, !dbg !23525, !tbaa !2998
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !23525, !ctir !2864
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !23525, !tbaa !3851
  %add117 = add i64 %xor115, %89, !dbg !23525
  store i64 %add117, i64* %a, align 8, !dbg !23525, !tbaa !3851
  %90 = load i64*, i64** %m, align 8, !dbg !23525, !tbaa !2998
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !23525, !ctir !2864
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !23525, !tbaa !3851
  store i64 %91, i64* %x110, align 8, !dbg !23525, !tbaa !3851
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23525, !tbaa !2998
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !23525, !ctir !2871
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !23525
  %93 = load i64, i64* %x110, align 8, !dbg !23525, !tbaa !3851
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !23525
  %94 = load i64, i64* %a, align 8, !dbg !23525, !tbaa !3851
  %add122 = add i64 %call121, %94, !dbg !23525
  %95 = load i64, i64* %b, align 8, !dbg !23525, !tbaa !3851
  %add123 = add i64 %add122, %95, !dbg !23525
  store i64 %add123, i64* %y111, align 8, !dbg !23525, !tbaa !3851
  %96 = load i64*, i64** %m, align 8, !dbg !23525, !tbaa !2998
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !23525, !ctir !2864
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !23525, !tbaa !3851
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23525, !tbaa !2998
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !23525, !ctir !2871
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !23525
  %98 = load i64, i64* %y111, align 8, !dbg !23525, !tbaa !3851
  %shr127 = lshr i64 %98, 8, !dbg !23525
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !23525
  %99 = load i64, i64* %x110, align 8, !dbg !23525, !tbaa !3851
  %add129 = add i64 %call128, %99, !dbg !23525
  %call130 = call i64 @just(i64 %add129), !dbg !23525
  store i64 %call130, i64* %b, align 8, !dbg !23525, !tbaa !3851
  %100 = load i64*, i64** %r, align 8, !dbg !23525, !tbaa !2998
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !23525, !ctir !2864
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !23525, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !23527, metadata !DIExpression()), !dbg !23529
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !23530, metadata !DIExpression()), !dbg !23529
  %101 = load i64, i64* %a, align 8, !dbg !23529, !tbaa !3851
  %102 = load i64, i64* %a, align 8, !dbg !23529, !tbaa !3851
  %shl134 = shl i64 %102, 12, !dbg !23529
  %xor135 = xor i64 %101, %shl134, !dbg !23529
  %xor136 = xor i64 0, %xor135, !dbg !23529
  %103 = load i64*, i64** %m, align 8, !dbg !23529, !tbaa !2998
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !23529, !ctir !2864
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !23529, !tbaa !3851
  %add138 = add i64 %xor136, %104, !dbg !23529
  store i64 %add138, i64* %a, align 8, !dbg !23529, !tbaa !3851
  %105 = load i64*, i64** %m, align 8, !dbg !23529, !tbaa !2998
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !23529, !ctir !2864
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !23529, !tbaa !3851
  store i64 %106, i64* %x132, align 8, !dbg !23529, !tbaa !3851
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2998
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !23529, !ctir !2871
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !23529
  %108 = load i64, i64* %x132, align 8, !dbg !23529, !tbaa !3851
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !23529
  %109 = load i64, i64* %a, align 8, !dbg !23529, !tbaa !3851
  %add143 = add i64 %call142, %109, !dbg !23529
  %110 = load i64, i64* %b, align 8, !dbg !23529, !tbaa !3851
  %add144 = add i64 %add143, %110, !dbg !23529
  store i64 %add144, i64* %y133, align 8, !dbg !23529, !tbaa !3851
  %111 = load i64*, i64** %m, align 8, !dbg !23529, !tbaa !2998
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !23529, !ctir !2864
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !23529, !tbaa !3851
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23529, !tbaa !2998
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !23529, !ctir !2871
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !23529
  %113 = load i64, i64* %y133, align 8, !dbg !23529, !tbaa !3851
  %shr148 = lshr i64 %113, 8, !dbg !23529
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !23529
  %114 = load i64, i64* %x132, align 8, !dbg !23529, !tbaa !3851
  %add150 = add i64 %call149, %114, !dbg !23529
  %call151 = call i64 @just(i64 %add150), !dbg !23529
  store i64 %call151, i64* %b, align 8, !dbg !23529, !tbaa !3851
  %115 = load i64*, i64** %r, align 8, !dbg !23529, !tbaa !2998
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !23529, !ctir !2864
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !23529, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !23531, metadata !DIExpression()), !dbg !23533
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !23534, metadata !DIExpression()), !dbg !23533
  %116 = load i64, i64* %a, align 8, !dbg !23533, !tbaa !3851
  %117 = load i64, i64* %a, align 8, !dbg !23533, !tbaa !3851
  %call155 = call i64 @just(i64 %117), !dbg !23533
  %shr156 = lshr i64 %call155, 33, !dbg !23533
  %xor157 = xor i64 %116, %shr156, !dbg !23533
  %xor158 = xor i64 0, %xor157, !dbg !23533
  %118 = load i64*, i64** %m, align 8, !dbg !23533, !tbaa !2998
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !23533, !ctir !2864
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !23533, !tbaa !3851
  %add160 = add i64 %xor158, %119, !dbg !23533
  store i64 %add160, i64* %a, align 8, !dbg !23533, !tbaa !3851
  %120 = load i64*, i64** %m, align 8, !dbg !23533, !tbaa !2998
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !23533, !ctir !2864
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !23533, !tbaa !3851
  store i64 %121, i64* %x153, align 8, !dbg !23533, !tbaa !3851
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23533, !tbaa !2998
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !23533, !ctir !2871
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !23533
  %123 = load i64, i64* %x153, align 8, !dbg !23533, !tbaa !3851
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !23533
  %124 = load i64, i64* %a, align 8, !dbg !23533, !tbaa !3851
  %add165 = add i64 %call164, %124, !dbg !23533
  %125 = load i64, i64* %b, align 8, !dbg !23533, !tbaa !3851
  %add166 = add i64 %add165, %125, !dbg !23533
  store i64 %add166, i64* %y154, align 8, !dbg !23533, !tbaa !3851
  %126 = load i64*, i64** %m, align 8, !dbg !23533, !tbaa !2998
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !23533, !ctir !2864
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !23533, !tbaa !3851
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23533, !tbaa !2998
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !23533, !ctir !2871
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !23533
  %128 = load i64, i64* %y154, align 8, !dbg !23533, !tbaa !3851
  %shr170 = lshr i64 %128, 8, !dbg !23533
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !23533
  %129 = load i64, i64* %x153, align 8, !dbg !23533, !tbaa !3851
  %add172 = add i64 %call171, %129, !dbg !23533
  %call173 = call i64 @just(i64 %add172), !dbg !23533
  store i64 %call173, i64* %b, align 8, !dbg !23533, !tbaa !3851
  %130 = load i64*, i64** %r, align 8, !dbg !23533, !tbaa !2998
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !23533, !ctir !2864
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !23533, !tbaa !3851
  %131 = load i64*, i64** %r, align 8, !dbg !23535, !tbaa !2998
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !23535
  store i64* %add.ptr175, i64** %r, align 8, !dbg !23535, !tbaa !2998
  br label %do.cond176, !dbg !23536

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !23537, !tbaa !2998
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !23537
  store i64* %add.ptr177, i64** %m, align 8, !dbg !23537, !tbaa !2998
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23538, !tbaa !2998
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !23539, !ctir !2871
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !23538
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !23540
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !23541
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !23536, !llvm.loop !23542

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !23544, !tbaa !3851
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23545, !tbaa !2998
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !23546, !ctir !2871
  store i64 %134, i64* %a183, align 8, !dbg !23547, !tbaa !23472, !ctir !2830
  %136 = load i64, i64* %b, align 8, !dbg !23548, !tbaa !3851
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23549, !tbaa !2998
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !23550, !ctir !2871
  store i64 %136, i64* %b184, align 8, !dbg !23551, !tbaa !23477, !ctir !2830
  ret void, !dbg !23552
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !23553 !ctir !2879 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !427
  %base_p = alloca i8*, align 8, !ctir !115
  %word_p = alloca i8*, align 8, !ctir !427
  %p = alloca i64*, align 8, !ctir !2881
  store i64* %m, i64** %m.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !23554, metadata !DIExpression()), !dbg !23555
  store i64 %x, i64* %x.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !23556, metadata !DIExpression()), !dbg !23557
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !23558, metadata !DIExpression()), !dbg !23561
  %0 = load i64*, i64** %m.addr, align 8, !dbg !23562, !tbaa !2998
  %1 = bitcast i64* %0 to i8*, !dbg !23562
  store i8* %1, i8** %void_m, align 8, !dbg !23561, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !23563, metadata !DIExpression()), !dbg !23564
  %2 = load i8*, i8** %void_m, align 8, !dbg !23565, !tbaa !2998
  store i8* %2, i8** %base_p, align 8, !dbg !23564, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !23566, metadata !DIExpression()), !dbg !23567
  %3 = load i8*, i8** %base_p, align 8, !dbg !23568, !tbaa !2998
  %4 = load i64, i64* %x.addr, align 8, !dbg !23569, !tbaa !3851
  %and = and i64 %4, 2040, !dbg !23570
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !23571
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !23567, !tbaa !2998
  call void @llvm.dbg.declare(metadata i64** %p, metadata !23572, metadata !DIExpression()), !dbg !23573
  %5 = load i8*, i8** %word_p, align 8, !dbg !23574, !tbaa !2998
  %6 = bitcast i8* %5 to i64*, !dbg !23574
  store i64* %6, i64** %p, align 8, !dbg !23573, !tbaa !2998
  %7 = load i64*, i64** %p, align 8, !dbg !23575, !tbaa !2998
  %8 = load i64, i64* %7, align 8, !dbg !23576, !tbaa !3851, !ctir !2882
  ret i64 %8, !dbg !23577
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !23578 !ctir !2883 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !2830
  store i64 %a, i64* %a.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !23579, metadata !DIExpression()), !dbg !23580
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !23581, metadata !DIExpression()), !dbg !23582
  store i64 -1, i64* %desired_bits, align 8, !dbg !23582, !tbaa !3851
  %0 = load i64, i64* %a.addr, align 8, !dbg !23583, !tbaa !3851
  %1 = load i64, i64* %desired_bits, align 8, !dbg !23584, !tbaa !3851
  %and = and i64 %0, %1, !dbg !23585
  ret i64 %and, !dbg !23586
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !23587 !ctir !2877 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !2830
  %b = alloca i64, align 8, !ctir !2830
  %c = alloca i64, align 8, !ctir !2830
  %d = alloca i64, align 8, !ctir !2830
  %e = alloca i64, align 8, !ctir !2830
  %f = alloca i64, align 8, !ctir !2830
  %g = alloca i64, align 8, !ctir !2830
  %h = alloca i64, align 8, !ctir !2830
  %i = alloca i32, align 4, !ctir !7
  %i99 = alloca i32, align 4, !ctir !7
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !23588, metadata !DIExpression()), !dbg !23589
  call void @llvm.dbg.declare(metadata i64* %a, metadata !23590, metadata !DIExpression()), !dbg !23591
  store i64 7240739780546808700, i64* %a, align 8, !dbg !23591, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %b, metadata !23592, metadata !DIExpression()), !dbg !23593
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !23593, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %c, metadata !23594, metadata !DIExpression()), !dbg !23595
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !23595, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %d, metadata !23596, metadata !DIExpression()), !dbg !23597
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !23597, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %e, metadata !23598, metadata !DIExpression()), !dbg !23599
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !23599, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %f, metadata !23600, metadata !DIExpression()), !dbg !23601
  store i64 5259722845879046933, i64* %f, align 8, !dbg !23601, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %g, metadata !23602, metadata !DIExpression()), !dbg !23603
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !23603, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %h, metadata !23604, metadata !DIExpression()), !dbg !23605
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !23605, !tbaa !3851
  call void @llvm.dbg.declare(metadata i32* %i, metadata !23606, metadata !DIExpression()), !dbg !23608
  store i32 0, i32* %i, align 4, !dbg !23609, !tbaa !2985
  br label %for.cond, !dbg !23609

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !23611, !tbaa !2985
  %cmp = icmp slt i32 %0, 256, !dbg !23611
  br i1 %cmp, label %for.body, label %for.end, !dbg !23609

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !23613, !ctir !2871
  %2 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %idxprom = sext i32 %2 to i64, !dbg !23613
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !23613, !ctir !2829
  %3 = load i64, i64* %arrayidx, align 8, !dbg !23613, !tbaa !3851
  %4 = load i64, i64* %a, align 8, !dbg !23613, !tbaa !3851
  %add = add i64 %4, %3, !dbg !23613
  store i64 %add, i64* %a, align 8, !dbg !23613, !tbaa !3851
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !23613, !ctir !2871
  %6 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add2 = add nsw i32 %6, 1, !dbg !23613
  %idxprom3 = sext i32 %add2 to i64, !dbg !23613
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !23613, !ctir !2829
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !23613, !tbaa !3851
  %8 = load i64, i64* %b, align 8, !dbg !23613, !tbaa !3851
  %add5 = add i64 %8, %7, !dbg !23613
  store i64 %add5, i64* %b, align 8, !dbg !23613, !tbaa !3851
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !23613, !ctir !2871
  %10 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add7 = add nsw i32 %10, 2, !dbg !23613
  %idxprom8 = sext i32 %add7 to i64, !dbg !23613
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !23613, !ctir !2829
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !23613, !tbaa !3851
  %12 = load i64, i64* %c, align 8, !dbg !23613, !tbaa !3851
  %add10 = add i64 %12, %11, !dbg !23613
  store i64 %add10, i64* %c, align 8, !dbg !23613, !tbaa !3851
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !23613, !ctir !2871
  %14 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add12 = add nsw i32 %14, 3, !dbg !23613
  %idxprom13 = sext i32 %add12 to i64, !dbg !23613
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !23613, !ctir !2829
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !23613, !tbaa !3851
  %16 = load i64, i64* %d, align 8, !dbg !23613, !tbaa !3851
  %add15 = add i64 %16, %15, !dbg !23613
  store i64 %add15, i64* %d, align 8, !dbg !23613, !tbaa !3851
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !23613, !ctir !2871
  %18 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add17 = add nsw i32 %18, 4, !dbg !23613
  %idxprom18 = sext i32 %add17 to i64, !dbg !23613
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !23613, !ctir !2829
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !23613, !tbaa !3851
  %20 = load i64, i64* %e, align 8, !dbg !23613, !tbaa !3851
  %add20 = add i64 %20, %19, !dbg !23613
  store i64 %add20, i64* %e, align 8, !dbg !23613, !tbaa !3851
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !23613, !ctir !2871
  %22 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add22 = add nsw i32 %22, 5, !dbg !23613
  %idxprom23 = sext i32 %add22 to i64, !dbg !23613
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !23613, !ctir !2829
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !23613, !tbaa !3851
  %24 = load i64, i64* %f, align 8, !dbg !23613, !tbaa !3851
  %add25 = add i64 %24, %23, !dbg !23613
  store i64 %add25, i64* %f, align 8, !dbg !23613, !tbaa !3851
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !23613, !ctir !2871
  %26 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add27 = add nsw i32 %26, 6, !dbg !23613
  %idxprom28 = sext i32 %add27 to i64, !dbg !23613
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !23613, !ctir !2829
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !23613, !tbaa !3851
  %28 = load i64, i64* %g, align 8, !dbg !23613, !tbaa !3851
  %add30 = add i64 %28, %27, !dbg !23613
  store i64 %add30, i64* %g, align 8, !dbg !23613, !tbaa !3851
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !23613, !ctir !2871
  %30 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add32 = add nsw i32 %30, 7, !dbg !23613
  %idxprom33 = sext i32 %add32 to i64, !dbg !23613
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !23613, !ctir !2829
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !23613, !tbaa !3851
  %32 = load i64, i64* %h, align 8, !dbg !23613, !tbaa !3851
  %add35 = add i64 %32, %31, !dbg !23613
  store i64 %add35, i64* %h, align 8, !dbg !23613, !tbaa !3851
  %33 = load i64, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %34 = load i64, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %sub = sub i64 %34, %33, !dbg !23615
  store i64 %sub, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %35 = load i64, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %call = call i64 @just(i64 %35), !dbg !23615
  %shr = lshr i64 %call, 9, !dbg !23615
  %36 = load i64, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %xor = xor i64 %36, %shr, !dbg !23615
  store i64 %xor, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %37 = load i64, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %38 = load i64, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %add36 = add i64 %38, %37, !dbg !23615
  store i64 %add36, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %39 = load i64, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %40 = load i64, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %sub37 = sub i64 %40, %39, !dbg !23615
  store i64 %sub37, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %41 = load i64, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %shl = shl i64 %41, 9, !dbg !23615
  %42 = load i64, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %xor38 = xor i64 %42, %shl, !dbg !23615
  store i64 %xor38, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %43 = load i64, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %44 = load i64, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %add39 = add i64 %44, %43, !dbg !23615
  store i64 %add39, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %45 = load i64, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %46 = load i64, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %sub40 = sub i64 %46, %45, !dbg !23615
  store i64 %sub40, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %47 = load i64, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %call41 = call i64 @just(i64 %47), !dbg !23615
  %shr42 = lshr i64 %call41, 23, !dbg !23615
  %48 = load i64, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %xor43 = xor i64 %48, %shr42, !dbg !23615
  store i64 %xor43, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %49 = load i64, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %50 = load i64, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %add44 = add i64 %50, %49, !dbg !23615
  store i64 %add44, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %51 = load i64, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %52 = load i64, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %sub45 = sub i64 %52, %51, !dbg !23615
  store i64 %sub45, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %53 = load i64, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %shl46 = shl i64 %53, 15, !dbg !23615
  %54 = load i64, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %xor47 = xor i64 %54, %shl46, !dbg !23615
  store i64 %xor47, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %55 = load i64, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %56 = load i64, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %add48 = add i64 %56, %55, !dbg !23615
  store i64 %add48, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %57 = load i64, i64* %a, align 8, !dbg !23615, !tbaa !3851
  %58 = load i64, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %sub49 = sub i64 %58, %57, !dbg !23615
  store i64 %sub49, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %59 = load i64, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %call50 = call i64 @just(i64 %59), !dbg !23615
  %shr51 = lshr i64 %call50, 14, !dbg !23615
  %60 = load i64, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %xor52 = xor i64 %60, %shr51, !dbg !23615
  store i64 %xor52, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %61 = load i64, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %62 = load i64, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %add53 = add i64 %62, %61, !dbg !23615
  store i64 %add53, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %63 = load i64, i64* %b, align 8, !dbg !23615, !tbaa !3851
  %64 = load i64, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %sub54 = sub i64 %64, %63, !dbg !23615
  store i64 %sub54, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %65 = load i64, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %shl55 = shl i64 %65, 20, !dbg !23615
  %66 = load i64, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %xor56 = xor i64 %66, %shl55, !dbg !23615
  store i64 %xor56, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %67 = load i64, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %68 = load i64, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %add57 = add i64 %68, %67, !dbg !23615
  store i64 %add57, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %69 = load i64, i64* %c, align 8, !dbg !23615, !tbaa !3851
  %70 = load i64, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %sub58 = sub i64 %70, %69, !dbg !23615
  store i64 %sub58, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %71 = load i64, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %call59 = call i64 @just(i64 %71), !dbg !23615
  %shr60 = lshr i64 %call59, 17, !dbg !23615
  %72 = load i64, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %xor61 = xor i64 %72, %shr60, !dbg !23615
  store i64 %xor61, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %73 = load i64, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %74 = load i64, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %add62 = add i64 %74, %73, !dbg !23615
  store i64 %add62, i64* %f, align 8, !dbg !23615, !tbaa !3851
  %75 = load i64, i64* %d, align 8, !dbg !23615, !tbaa !3851
  %76 = load i64, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %sub63 = sub i64 %76, %75, !dbg !23615
  store i64 %sub63, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %77 = load i64, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %shl64 = shl i64 %77, 14, !dbg !23615
  %78 = load i64, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %xor65 = xor i64 %78, %shl64, !dbg !23615
  store i64 %xor65, i64* %e, align 8, !dbg !23615, !tbaa !3851
  %79 = load i64, i64* %h, align 8, !dbg !23615, !tbaa !3851
  %80 = load i64, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %add66 = add i64 %80, %79, !dbg !23615
  store i64 %add66, i64* %g, align 8, !dbg !23615, !tbaa !3851
  %81 = load i64, i64* %a, align 8, !dbg !23613, !tbaa !3851
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !23613, !ctir !2871
  %83 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %idxprom68 = sext i32 %83 to i64, !dbg !23613
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !23613, !ctir !2829
  store i64 %81, i64* %arrayidx69, align 8, !dbg !23613, !tbaa !3851
  %84 = load i64, i64* %b, align 8, !dbg !23613, !tbaa !3851
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !23613, !ctir !2871
  %86 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add71 = add nsw i32 %86, 1, !dbg !23613
  %idxprom72 = sext i32 %add71 to i64, !dbg !23613
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !23613, !ctir !2829
  store i64 %84, i64* %arrayidx73, align 8, !dbg !23613, !tbaa !3851
  %87 = load i64, i64* %c, align 8, !dbg !23613, !tbaa !3851
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !23613, !ctir !2871
  %89 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add75 = add nsw i32 %89, 2, !dbg !23613
  %idxprom76 = sext i32 %add75 to i64, !dbg !23613
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !23613, !ctir !2829
  store i64 %87, i64* %arrayidx77, align 8, !dbg !23613, !tbaa !3851
  %90 = load i64, i64* %d, align 8, !dbg !23613, !tbaa !3851
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !23613, !ctir !2871
  %92 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add79 = add nsw i32 %92, 3, !dbg !23613
  %idxprom80 = sext i32 %add79 to i64, !dbg !23613
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !23613, !ctir !2829
  store i64 %90, i64* %arrayidx81, align 8, !dbg !23613, !tbaa !3851
  %93 = load i64, i64* %e, align 8, !dbg !23613, !tbaa !3851
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !23613, !ctir !2871
  %95 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add83 = add nsw i32 %95, 4, !dbg !23613
  %idxprom84 = sext i32 %add83 to i64, !dbg !23613
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !23613, !ctir !2829
  store i64 %93, i64* %arrayidx85, align 8, !dbg !23613, !tbaa !3851
  %96 = load i64, i64* %f, align 8, !dbg !23613, !tbaa !3851
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !23613, !ctir !2871
  %98 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add87 = add nsw i32 %98, 5, !dbg !23613
  %idxprom88 = sext i32 %add87 to i64, !dbg !23613
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !23613, !ctir !2829
  store i64 %96, i64* %arrayidx89, align 8, !dbg !23613, !tbaa !3851
  %99 = load i64, i64* %g, align 8, !dbg !23613, !tbaa !3851
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !23613, !ctir !2871
  %101 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add91 = add nsw i32 %101, 6, !dbg !23613
  %idxprom92 = sext i32 %add91 to i64, !dbg !23613
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !23613, !ctir !2829
  store i64 %99, i64* %arrayidx93, align 8, !dbg !23613, !tbaa !3851
  %102 = load i64, i64* %h, align 8, !dbg !23613, !tbaa !3851
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23613, !tbaa !2998
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !23613, !ctir !2871
  %104 = load i32, i32* %i, align 4, !dbg !23613, !tbaa !2985
  %add95 = add nsw i32 %104, 7, !dbg !23613
  %idxprom96 = sext i32 %add95 to i64, !dbg !23613
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !23613, !ctir !2829
  store i64 %102, i64* %arrayidx97, align 8, !dbg !23613, !tbaa !3851
  br label %for.inc, !dbg !23613

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !23611, !tbaa !2985
  %add98 = add nsw i32 %105, 8, !dbg !23611
  store i32 %add98, i32* %i, align 4, !dbg !23611, !tbaa !2985
  br label %for.cond, !dbg !23611, !llvm.loop !23617

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !23618, metadata !DIExpression()), !dbg !23620
  store i32 0, i32* %i99, align 4, !dbg !23621, !tbaa !2985
  br label %for.cond100, !dbg !23621

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !23623, !tbaa !2985
  %cmp101 = icmp slt i32 %106, 256, !dbg !23623
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !23621

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !23625, !ctir !2871
  %108 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %idxprom104 = sext i32 %108 to i64, !dbg !23625
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !23625, !ctir !2829
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !23625, !tbaa !3851
  %110 = load i64, i64* %a, align 8, !dbg !23625, !tbaa !3851
  %add106 = add i64 %110, %109, !dbg !23625
  store i64 %add106, i64* %a, align 8, !dbg !23625, !tbaa !3851
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !23625, !ctir !2871
  %112 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add108 = add nsw i32 %112, 1, !dbg !23625
  %idxprom109 = sext i32 %add108 to i64, !dbg !23625
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !23625, !ctir !2829
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !23625, !tbaa !3851
  %114 = load i64, i64* %b, align 8, !dbg !23625, !tbaa !3851
  %add111 = add i64 %114, %113, !dbg !23625
  store i64 %add111, i64* %b, align 8, !dbg !23625, !tbaa !3851
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !23625, !ctir !2871
  %116 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add113 = add nsw i32 %116, 2, !dbg !23625
  %idxprom114 = sext i32 %add113 to i64, !dbg !23625
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !23625, !ctir !2829
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !23625, !tbaa !3851
  %118 = load i64, i64* %c, align 8, !dbg !23625, !tbaa !3851
  %add116 = add i64 %118, %117, !dbg !23625
  store i64 %add116, i64* %c, align 8, !dbg !23625, !tbaa !3851
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !23625, !ctir !2871
  %120 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add118 = add nsw i32 %120, 3, !dbg !23625
  %idxprom119 = sext i32 %add118 to i64, !dbg !23625
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !23625, !ctir !2829
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !23625, !tbaa !3851
  %122 = load i64, i64* %d, align 8, !dbg !23625, !tbaa !3851
  %add121 = add i64 %122, %121, !dbg !23625
  store i64 %add121, i64* %d, align 8, !dbg !23625, !tbaa !3851
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !23625, !ctir !2871
  %124 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add123 = add nsw i32 %124, 4, !dbg !23625
  %idxprom124 = sext i32 %add123 to i64, !dbg !23625
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !23625, !ctir !2829
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !23625, !tbaa !3851
  %126 = load i64, i64* %e, align 8, !dbg !23625, !tbaa !3851
  %add126 = add i64 %126, %125, !dbg !23625
  store i64 %add126, i64* %e, align 8, !dbg !23625, !tbaa !3851
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !23625, !ctir !2871
  %128 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add128 = add nsw i32 %128, 5, !dbg !23625
  %idxprom129 = sext i32 %add128 to i64, !dbg !23625
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !23625, !ctir !2829
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !23625, !tbaa !3851
  %130 = load i64, i64* %f, align 8, !dbg !23625, !tbaa !3851
  %add131 = add i64 %130, %129, !dbg !23625
  store i64 %add131, i64* %f, align 8, !dbg !23625, !tbaa !3851
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !23625, !ctir !2871
  %132 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add133 = add nsw i32 %132, 6, !dbg !23625
  %idxprom134 = sext i32 %add133 to i64, !dbg !23625
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !23625, !ctir !2829
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !23625, !tbaa !3851
  %134 = load i64, i64* %g, align 8, !dbg !23625, !tbaa !3851
  %add136 = add i64 %134, %133, !dbg !23625
  store i64 %add136, i64* %g, align 8, !dbg !23625, !tbaa !3851
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !23625, !ctir !2871
  %136 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add138 = add nsw i32 %136, 7, !dbg !23625
  %idxprom139 = sext i32 %add138 to i64, !dbg !23625
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !23625, !ctir !2829
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !23625, !tbaa !3851
  %138 = load i64, i64* %h, align 8, !dbg !23625, !tbaa !3851
  %add141 = add i64 %138, %137, !dbg !23625
  store i64 %add141, i64* %h, align 8, !dbg !23625, !tbaa !3851
  %139 = load i64, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %140 = load i64, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %sub142 = sub i64 %140, %139, !dbg !23627
  store i64 %sub142, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %141 = load i64, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %call143 = call i64 @just(i64 %141), !dbg !23627
  %shr144 = lshr i64 %call143, 9, !dbg !23627
  %142 = load i64, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %xor145 = xor i64 %142, %shr144, !dbg !23627
  store i64 %xor145, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %143 = load i64, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %144 = load i64, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %add146 = add i64 %144, %143, !dbg !23627
  store i64 %add146, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %145 = load i64, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %146 = load i64, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %sub147 = sub i64 %146, %145, !dbg !23627
  store i64 %sub147, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %147 = load i64, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %shl148 = shl i64 %147, 9, !dbg !23627
  %148 = load i64, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %xor149 = xor i64 %148, %shl148, !dbg !23627
  store i64 %xor149, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %149 = load i64, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %150 = load i64, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %add150 = add i64 %150, %149, !dbg !23627
  store i64 %add150, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %151 = load i64, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %152 = load i64, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %sub151 = sub i64 %152, %151, !dbg !23627
  store i64 %sub151, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %153 = load i64, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %call152 = call i64 @just(i64 %153), !dbg !23627
  %shr153 = lshr i64 %call152, 23, !dbg !23627
  %154 = load i64, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %xor154 = xor i64 %154, %shr153, !dbg !23627
  store i64 %xor154, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %155 = load i64, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %156 = load i64, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %add155 = add i64 %156, %155, !dbg !23627
  store i64 %add155, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %157 = load i64, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %158 = load i64, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %sub156 = sub i64 %158, %157, !dbg !23627
  store i64 %sub156, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %159 = load i64, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %shl157 = shl i64 %159, 15, !dbg !23627
  %160 = load i64, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %xor158 = xor i64 %160, %shl157, !dbg !23627
  store i64 %xor158, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %161 = load i64, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %162 = load i64, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %add159 = add i64 %162, %161, !dbg !23627
  store i64 %add159, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %163 = load i64, i64* %a, align 8, !dbg !23627, !tbaa !3851
  %164 = load i64, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %sub160 = sub i64 %164, %163, !dbg !23627
  store i64 %sub160, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %165 = load i64, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %call161 = call i64 @just(i64 %165), !dbg !23627
  %shr162 = lshr i64 %call161, 14, !dbg !23627
  %166 = load i64, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %xor163 = xor i64 %166, %shr162, !dbg !23627
  store i64 %xor163, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %167 = load i64, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %168 = load i64, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %add164 = add i64 %168, %167, !dbg !23627
  store i64 %add164, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %169 = load i64, i64* %b, align 8, !dbg !23627, !tbaa !3851
  %170 = load i64, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %sub165 = sub i64 %170, %169, !dbg !23627
  store i64 %sub165, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %171 = load i64, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %shl166 = shl i64 %171, 20, !dbg !23627
  %172 = load i64, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %xor167 = xor i64 %172, %shl166, !dbg !23627
  store i64 %xor167, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %173 = load i64, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %174 = load i64, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %add168 = add i64 %174, %173, !dbg !23627
  store i64 %add168, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %175 = load i64, i64* %c, align 8, !dbg !23627, !tbaa !3851
  %176 = load i64, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %sub169 = sub i64 %176, %175, !dbg !23627
  store i64 %sub169, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %177 = load i64, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %call170 = call i64 @just(i64 %177), !dbg !23627
  %shr171 = lshr i64 %call170, 17, !dbg !23627
  %178 = load i64, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %xor172 = xor i64 %178, %shr171, !dbg !23627
  store i64 %xor172, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %179 = load i64, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %180 = load i64, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %add173 = add i64 %180, %179, !dbg !23627
  store i64 %add173, i64* %f, align 8, !dbg !23627, !tbaa !3851
  %181 = load i64, i64* %d, align 8, !dbg !23627, !tbaa !3851
  %182 = load i64, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %sub174 = sub i64 %182, %181, !dbg !23627
  store i64 %sub174, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %183 = load i64, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %shl175 = shl i64 %183, 14, !dbg !23627
  %184 = load i64, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %xor176 = xor i64 %184, %shl175, !dbg !23627
  store i64 %xor176, i64* %e, align 8, !dbg !23627, !tbaa !3851
  %185 = load i64, i64* %h, align 8, !dbg !23627, !tbaa !3851
  %186 = load i64, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %add177 = add i64 %186, %185, !dbg !23627
  store i64 %add177, i64* %g, align 8, !dbg !23627, !tbaa !3851
  %187 = load i64, i64* %a, align 8, !dbg !23625, !tbaa !3851
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !23625, !ctir !2871
  %189 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %idxprom179 = sext i32 %189 to i64, !dbg !23625
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !23625, !ctir !2829
  store i64 %187, i64* %arrayidx180, align 8, !dbg !23625, !tbaa !3851
  %190 = load i64, i64* %b, align 8, !dbg !23625, !tbaa !3851
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !23625, !ctir !2871
  %192 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add182 = add nsw i32 %192, 1, !dbg !23625
  %idxprom183 = sext i32 %add182 to i64, !dbg !23625
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !23625, !ctir !2829
  store i64 %190, i64* %arrayidx184, align 8, !dbg !23625, !tbaa !3851
  %193 = load i64, i64* %c, align 8, !dbg !23625, !tbaa !3851
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !23625, !ctir !2871
  %195 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add186 = add nsw i32 %195, 2, !dbg !23625
  %idxprom187 = sext i32 %add186 to i64, !dbg !23625
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !23625, !ctir !2829
  store i64 %193, i64* %arrayidx188, align 8, !dbg !23625, !tbaa !3851
  %196 = load i64, i64* %d, align 8, !dbg !23625, !tbaa !3851
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !23625, !ctir !2871
  %198 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add190 = add nsw i32 %198, 3, !dbg !23625
  %idxprom191 = sext i32 %add190 to i64, !dbg !23625
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !23625, !ctir !2829
  store i64 %196, i64* %arrayidx192, align 8, !dbg !23625, !tbaa !3851
  %199 = load i64, i64* %e, align 8, !dbg !23625, !tbaa !3851
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !23625, !ctir !2871
  %201 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add194 = add nsw i32 %201, 4, !dbg !23625
  %idxprom195 = sext i32 %add194 to i64, !dbg !23625
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !23625, !ctir !2829
  store i64 %199, i64* %arrayidx196, align 8, !dbg !23625, !tbaa !3851
  %202 = load i64, i64* %f, align 8, !dbg !23625, !tbaa !3851
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !23625, !ctir !2871
  %204 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add198 = add nsw i32 %204, 5, !dbg !23625
  %idxprom199 = sext i32 %add198 to i64, !dbg !23625
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !23625, !ctir !2829
  store i64 %202, i64* %arrayidx200, align 8, !dbg !23625, !tbaa !3851
  %205 = load i64, i64* %g, align 8, !dbg !23625, !tbaa !3851
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !23625, !ctir !2871
  %207 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add202 = add nsw i32 %207, 6, !dbg !23625
  %idxprom203 = sext i32 %add202 to i64, !dbg !23625
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !23625, !ctir !2829
  store i64 %205, i64* %arrayidx204, align 8, !dbg !23625, !tbaa !3851
  %208 = load i64, i64* %h, align 8, !dbg !23625, !tbaa !3851
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23625, !tbaa !2998
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !23625, !ctir !2871
  %210 = load i32, i32* %i99, align 4, !dbg !23625, !tbaa !2985
  %add206 = add nsw i32 %210, 7, !dbg !23625
  %idxprom207 = sext i32 %add206 to i64, !dbg !23625
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !23625, !ctir !2829
  store i64 %208, i64* %arrayidx208, align 8, !dbg !23625, !tbaa !3851
  br label %for.inc209, !dbg !23625

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !23623, !tbaa !2985
  %add210 = add nsw i32 %211, 8, !dbg !23623
  store i32 %add210, i32* %i99, align 4, !dbg !23623, !tbaa !2985
  br label %for.cond100, !dbg !23623, !llvm.loop !23629

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23630, !tbaa !2998
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !23631, !ctir !2871
  store i64 0, i64* %c212, align 8, !dbg !23632, !tbaa !23481, !ctir !2830
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23633, !tbaa !2998
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !23634, !ctir !2871
  store i64 0, i64* %b213, align 8, !dbg !23635, !tbaa !23477, !ctir !2830
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !23636, !tbaa !2998
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !23637, !ctir !2871
  store i64 0, i64* %a214, align 8, !dbg !23638, !tbaa !23472, !ctir !2830
  ret void, !dbg !23639
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !23640 !ctir !1830 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23642, metadata !DIExpression()), !dbg !23643
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23644, !tbaa !2985
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !23645
  ret i32 %call, !dbg !23646
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum(i64 %size1, i64 %size2) #9 !dbg !23647 !ctir !2891 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %sum = alloca i64, align 8, !ctir !55
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23649, metadata !DIExpression()), !dbg !23650
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23651, metadata !DIExpression()), !dbg !23652
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !23653, metadata !DIExpression()), !dbg !23654
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23655, !tbaa !3851
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23656, !tbaa !3851
  %add = add i64 %0, %1, !dbg !23657
  store i64 %add, i64* %sum, align 8, !dbg !23654, !tbaa !3851
  %2 = load i64, i64* %sum, align 8, !dbg !23658, !tbaa !3851
  %3 = load i64, i64* %size1.addr, align 8, !dbg !23659, !tbaa !3851
  %cmp = icmp uge i64 %2, %3, !dbg !23660
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23658

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %sum, align 8, !dbg !23661, !tbaa !3851
  br label %cond.end, !dbg !23658

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !23658

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !23658
  ret i64 %cond, !dbg !23662
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) #9 !dbg !23663 !ctir !1603 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23664, metadata !DIExpression()), !dbg !23665
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23666, metadata !DIExpression()), !dbg !23667
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !23668, metadata !DIExpression()), !dbg !23669
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23670, !tbaa !3851
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23671, !tbaa !3851
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !23672
  %2 = load i64, i64* %size3.addr, align 8, !dbg !23673, !tbaa !3851
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !23674
  ret i64 %call1, !dbg !23675
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) #9 !dbg !23676 !ctir !2893 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  %size4.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23677, metadata !DIExpression()), !dbg !23678
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23679, metadata !DIExpression()), !dbg !23680
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !23681, metadata !DIExpression()), !dbg !23682
  store i64 %size4, i64* %size4.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size4.addr, metadata !23683, metadata !DIExpression()), !dbg !23684
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23685, !tbaa !3851
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23686, !tbaa !3851
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !23687
  %2 = load i64, i64* %size3.addr, align 8, !dbg !23688, !tbaa !3851
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !23689
  %3 = load i64, i64* %size4.addr, align 8, !dbg !23690, !tbaa !3851
  %call2 = call i64 @xsum(i64 %call1, i64 %3) #14, !dbg !23691
  ret i64 %call2, !dbg !23692
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xmax(i64 %size1, i64 %size2) #9 !dbg !23693 !ctir !2891 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !23694, metadata !DIExpression()), !dbg !23695
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3851
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !23696, metadata !DIExpression()), !dbg !23697
  %0 = load i64, i64* %size1.addr, align 8, !dbg !23698, !tbaa !3851
  %1 = load i64, i64* %size2.addr, align 8, !dbg !23699, !tbaa !3851
  %cmp = icmp uge i64 %0, %1, !dbg !23700
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23698

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %size1.addr, align 8, !dbg !23701, !tbaa !3851
  br label %cond.end, !dbg !23698

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %size2.addr, align 8, !dbg !23702, !tbaa !3851
  br label %cond.end, !dbg !23698

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !23698
  ret i64 %cond, !dbg !23703
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !23704 !ctir !2898 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !23706, metadata !DIExpression()), !dbg !23707
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23708, metadata !DIExpression()), !dbg !23709
  store i32 0, i32* %saved_errno, align 4, !dbg !23709, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23710, metadata !DIExpression()), !dbg !23711
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23712, metadata !DIExpression()), !dbg !23713
  store i32 0, i32* %result, align 4, !dbg !23713, !tbaa !2985
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23714, !tbaa !2998
  %call = call i32 @fileno(%struct._IO_FILE* %0) #10, !dbg !23715
  store i32 %call, i32* %fd, align 4, !dbg !23716, !tbaa !2985
  %1 = load i32, i32* %fd, align 4, !dbg !23717, !tbaa !2985
  %cmp = icmp slt i32 %1, 0, !dbg !23719
  br i1 %cmp, label %if.then, label %if.end, !dbg !23720

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23721, !tbaa !2998
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !23722
  store i32 %call1, i32* %retval, align 4, !dbg !23723
  br label %return, !dbg !23723

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23724, !tbaa !2998
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #10, !dbg !23724
  %cmp3 = icmp ne i32 %call2, 0, !dbg !23724
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !23726

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23727, !tbaa !2998
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #10, !dbg !23728
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #10, !dbg !23729
  %cmp6 = icmp ne i64 %call5, -1, !dbg !23730
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !23731

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23732, !tbaa !2998
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !23733
  %tobool = icmp ne i32 %call7, 0, !dbg !23733
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !23734

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #15, !dbg !23735
  %6 = load i32, i32* %call9, align 4, !dbg !23735, !tbaa !2985, !ctir !7
  store i32 %6, i32* %saved_errno, align 4, !dbg !23736, !tbaa !2985
  br label %if.end10, !dbg !23737

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23738, !tbaa !2998
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !23739
  store i32 %call11, i32* %result, align 4, !dbg !23740, !tbaa !2985
  %8 = load i32, i32* %saved_errno, align 4, !dbg !23741, !tbaa !2985
  %cmp12 = icmp ne i32 %8, 0, !dbg !23743
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !23744

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !23745, !tbaa !2985
  %call14 = call i32* @__errno_location() #15, !dbg !23747
  store i32 %9, i32* %call14, align 4, !dbg !23748, !tbaa !2985, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !23749, !tbaa !2985
  br label %if.end15, !dbg !23750

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !23751, !tbaa !2985
  store i32 %10, i32* %retval, align 4, !dbg !23752
  br label %return, !dbg !23752

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !23753
  ret i32 %11, !dbg !23753
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !23754 !ctir !419 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1314
  %result = alloca i32, align 4, !ctir !7
  %target = alloca i32, align 4, !ctir !7
  %target4 = alloca i32, align 4, !ctir !7
  %x = alloca i32, align 4, !ctir !7
  %p = alloca i8*, align 8, !ctir !53
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23757, metadata !DIExpression()), !dbg !23758
  store i32 %action, i32* %action.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !23759, metadata !DIExpression()), !dbg !23760
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !23761, metadata !DIExpression()), !dbg !23762
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23763, metadata !DIExpression()), !dbg !23764
  store i32 -1, i32* %result, align 4, !dbg !23764, !tbaa !2985
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23765
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !23765
  call void @llvm.va_start(i8* %arraydecay1), !dbg !23765
  %0 = load i32, i32* %action.addr, align 4, !dbg !23766, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !23767

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !23768, metadata !DIExpression()), !dbg !23771
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23772
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !23772
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !23772
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !23772
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !23772

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !23772
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !23772
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !23772
  %3 = bitcast i8* %2 to i32*, !dbg !23772
  %4 = add i32 %gp_offset, 8, !dbg !23772
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !23772
  br label %vaarg.end, !dbg !23772

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !23772
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !23772
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !23772
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !23772
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !23772
  br label %vaarg.end, !dbg !23772

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !23772
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !23772
  store i32 %6, i32* %target, align 4, !dbg !23771, !tbaa !2985
  %7 = load i32, i32* %fd.addr, align 4, !dbg !23773, !tbaa !2985
  %8 = load i32, i32* %target, align 4, !dbg !23774, !tbaa !2985
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !23775
  store i32 %call, i32* %result, align 4, !dbg !23776, !tbaa !2985
  br label %sw.epilog48, !dbg !23777

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !23778, metadata !DIExpression()), !dbg !23780
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23781
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !23781
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !23781
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !23781
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !23781

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !23781
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !23781
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !23781
  %11 = bitcast i8* %10 to i32*, !dbg !23781
  %12 = add i32 %gp_offset7, 8, !dbg !23781
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !23781
  br label %vaarg.end15, !dbg !23781

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !23781
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !23781
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !23781
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !23781
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !23781
  br label %vaarg.end15, !dbg !23781

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !23781
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !23781
  store i32 %14, i32* %target4, align 4, !dbg !23780, !tbaa !2985
  %15 = load i32, i32* %fd.addr, align 4, !dbg !23782, !tbaa !2985
  %16 = load i32, i32* %target4, align 4, !dbg !23783, !tbaa !2985
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !23784
  store i32 %call17, i32* %result, align 4, !dbg !23785, !tbaa !2985
  br label %sw.epilog48, !dbg !23786

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !23787, !tbaa !2985
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 1034, label %sw.bb18
    i32 11, label %sw.bb18
    i32 1033, label %sw.bb20
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !23789

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !23790, !tbaa !2985
  %19 = load i32, i32* %action.addr, align 4, !dbg !23792, !tbaa !2985
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !23793
  store i32 %call19, i32* %result, align 4, !dbg !23794, !tbaa !2985
  br label %sw.epilog, !dbg !23795

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !23796, metadata !DIExpression()), !dbg !23798
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23799
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !23799
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !23799
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !23799
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !23799

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !23799
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !23799
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !23799
  %22 = bitcast i8* %21 to i32*, !dbg !23799
  %23 = add i32 %gp_offset23, 8, !dbg !23799
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !23799
  br label %vaarg.end31, !dbg !23799

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !23799
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !23799
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !23799
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !23799
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !23799
  br label %vaarg.end31, !dbg !23799

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !23799
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !23799
  store i32 %25, i32* %x, align 4, !dbg !23798, !tbaa !2985
  %26 = load i32, i32* %fd.addr, align 4, !dbg !23800, !tbaa !2985
  %27 = load i32, i32* %action.addr, align 4, !dbg !23801, !tbaa !2985
  %28 = load i32, i32* %x, align 4, !dbg !23802, !tbaa !2985
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !23803
  store i32 %call33, i32* %result, align 4, !dbg !23804, !tbaa !2985
  br label %sw.epilog, !dbg !23805

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !23806, metadata !DIExpression()), !dbg !23808
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23809
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !23809
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !23809
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !23809
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !23809

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !23809
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !23809
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !23809
  %31 = bitcast i8* %30 to i8**, !dbg !23809
  %32 = add i32 %gp_offset37, 8, !dbg !23809
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !23809
  br label %vaarg.end45, !dbg !23809

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !23809
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !23809
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !23809
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !23809
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !23809
  br label %vaarg.end45, !dbg !23809

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !23809
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !23809
  store i8* %34, i8** %p, align 8, !dbg !23808, !tbaa !2998
  %35 = load i32, i32* %fd.addr, align 4, !dbg !23810, !tbaa !2985
  %36 = load i32, i32* %action.addr, align 4, !dbg !23811, !tbaa !2985
  %37 = load i8*, i8** %p, align 8, !dbg !23812, !tbaa !2998
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !23813
  store i32 %call47, i32* %result, align 4, !dbg !23814, !tbaa !2985
  br label %sw.epilog, !dbg !23815

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !23816

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23817
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !23817
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !23817
  %38 = load i32, i32* %result, align 4, !dbg !23818, !tbaa !2985
  ret i32 %38, !dbg !23819
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !23820 !ctir !419 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23821, metadata !DIExpression()), !dbg !23822
  store i32 %target, i32* %target.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23823, metadata !DIExpression()), !dbg !23824
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23825, metadata !DIExpression()), !dbg !23826
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23827, !tbaa !2985
  %1 = load i32, i32* %target.addr, align 4, !dbg !23828, !tbaa !2985
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !23829
  store i32 %call, i32* %result, align 4, !dbg !23830, !tbaa !2985
  %2 = load i32, i32* %result, align 4, !dbg !23831, !tbaa !2985
  ret i32 %2, !dbg !23832
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1309 !ctir !419 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23833, metadata !DIExpression()), !dbg !23834
  store i32 %target, i32* %target.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23835, metadata !DIExpression()), !dbg !23836
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23837, metadata !DIExpression()), !dbg !23838
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23839, !tbaa !2985
  %cmp = icmp sle i32 0, %0, !dbg !23841
  br i1 %cmp, label %if.then, label %if.else9, !dbg !23842

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !23843, !tbaa !2985
  %2 = load i32, i32* %target.addr, align 4, !dbg !23845, !tbaa !2985
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !23846
  store i32 %call, i32* %result, align 4, !dbg !23847, !tbaa !2985
  %3 = load i32, i32* %result, align 4, !dbg !23848, !tbaa !2985
  %cmp1 = icmp sle i32 0, %3, !dbg !23850
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !23851

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !23852
  %4 = load i32, i32* %call2, align 4, !dbg !23852, !tbaa !2985, !ctir !7
  %cmp3 = icmp ne i32 %4, 22, !dbg !23853
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !23854

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23855, !tbaa !2985
  br label %if.end8, !dbg !23857

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !23858, !tbaa !2985
  %6 = load i32, i32* %target.addr, align 4, !dbg !23860, !tbaa !2985
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !23861
  store i32 %call5, i32* %result, align 4, !dbg !23862, !tbaa !2985
  %7 = load i32, i32* %result, align 4, !dbg !23863, !tbaa !2985
  %cmp6 = icmp sge i32 %7, 0, !dbg !23865
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !23866

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23867, !tbaa !2985
  br label %if.end, !dbg !23868

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !23869

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !23870, !tbaa !2985
  %9 = load i32, i32* %target.addr, align 4, !dbg !23871, !tbaa !2985
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !23872
  store i32 %call10, i32* %result, align 4, !dbg !23873, !tbaa !2985
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !23874, !tbaa !2985
  %cmp12 = icmp sle i32 0, %10, !dbg !23876
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !23877

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23878, !tbaa !2985
  %cmp13 = icmp eq i32 %11, -1, !dbg !23879
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !23880

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !23881, metadata !DIExpression()), !dbg !23883
  %12 = load i32, i32* %result, align 4, !dbg !23884, !tbaa !2985
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !23885
  store i32 %call15, i32* %flags, align 4, !dbg !23883, !tbaa !2985
  %13 = load i32, i32* %flags, align 4, !dbg !23886, !tbaa !2985
  %cmp16 = icmp slt i32 %13, 0, !dbg !23888
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !23889

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !23890, !tbaa !2985
  %15 = load i32, i32* %flags, align 4, !dbg !23891, !tbaa !2985
  %or = or i32 %15, 1, !dbg !23892
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !23893
  %cmp19 = icmp eq i32 %call18, -1, !dbg !23894
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !23895

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23896, metadata !DIExpression()), !dbg !23898
  %call21 = call i32* @__errno_location() #15, !dbg !23899
  %16 = load i32, i32* %call21, align 4, !dbg !23899, !tbaa !2985, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !23898, !tbaa !2985
  %17 = load i32, i32* %result, align 4, !dbg !23900, !tbaa !2985
  %call22 = call i32 @close(i32 %17), !dbg !23901
  %18 = load i32, i32* %saved_errno, align 4, !dbg !23902, !tbaa !2985
  %call23 = call i32* @__errno_location() #15, !dbg !23903
  store i32 %18, i32* %call23, align 4, !dbg !23904, !tbaa !2985, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !23905, !tbaa !2985
  br label %if.end24, !dbg !23906

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !23907

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !23908, !tbaa !2985
  ret i32 %19, !dbg !23909
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #11 !dbg !23910 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !23912, metadata !DIExpression()), !dbg !23913
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !23914, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !23915

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23916
  br label %return, !dbg !23916

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23918
  br label %return, !dbg !23918

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23919
  br label %return, !dbg !23919

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23920
  br label %return, !dbg !23920

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !23921
  br label %return, !dbg !23921

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23922
  ret i1 %1, !dbg !23922
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !23923 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23925, metadata !DIExpression()), !dbg !23926
  %0 = load i32, i32* %c.addr, align 4, !dbg !23927, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23928

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23929
  br label %return, !dbg !23929

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23931
  br label %return, !dbg !23931

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23932
  ret i1 %1, !dbg !23932
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !23933 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23934, metadata !DIExpression()), !dbg !23935
  %0 = load i32, i32* %c.addr, align 4, !dbg !23936, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23937

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23938
  br label %return, !dbg !23938

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23940
  br label %return, !dbg !23940

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23941
  ret i1 %1, !dbg !23941
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !23942 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23943, metadata !DIExpression()), !dbg !23944
  %0 = load i32, i32* %c.addr, align 4, !dbg !23945, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23946

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23947
  br label %return, !dbg !23947

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23949
  br label %return, !dbg !23949

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23950
  ret i1 %1, !dbg !23950
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !23951 !ctir !307 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23952, metadata !DIExpression()), !dbg !23953
  %0 = load i32, i32* %c.addr, align 4, !dbg !23954, !tbaa !2985
  %cmp = icmp eq i32 %0, 32, !dbg !23955
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !23956

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23957, !tbaa !2985
  %cmp1 = icmp eq i32 %1, 9, !dbg !23958
  br label %lor.end, !dbg !23956

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !23959
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !23960 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23961, metadata !DIExpression()), !dbg !23962
  %0 = load i32, i32* %c.addr, align 4, !dbg !23963, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !23964

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23965
  br label %return, !dbg !23965

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23967
  br label %return, !dbg !23967

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23968
  ret i1 %1, !dbg !23968
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !23969 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23970, metadata !DIExpression()), !dbg !23971
  %0 = load i32, i32* %c.addr, align 4, !dbg !23972, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !23973

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23974
  br label %return, !dbg !23974

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23976
  br label %return, !dbg !23976

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23977
  ret i1 %1, !dbg !23977
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !23978 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23979, metadata !DIExpression()), !dbg !23980
  %0 = load i32, i32* %c.addr, align 4, !dbg !23981, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23982

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23983
  br label %return, !dbg !23983

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23985
  br label %return, !dbg !23985

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23986
  ret i1 %1, !dbg !23986
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !23987 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23988, metadata !DIExpression()), !dbg !23989
  %0 = load i32, i32* %c.addr, align 4, !dbg !23990, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23991

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23992
  br label %return, !dbg !23992

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23994
  br label %return, !dbg !23994

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23995
  ret i1 %1, !dbg !23995
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !23996 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23997, metadata !DIExpression()), !dbg !23998
  %0 = load i32, i32* %c.addr, align 4, !dbg !23999, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !24000

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !24001
  br label %return, !dbg !24001

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !24003
  br label %return, !dbg !24003

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !24004
  ret i1 %1, !dbg !24004
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !24005 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !24006, metadata !DIExpression()), !dbg !24007
  %0 = load i32, i32* %c.addr, align 4, !dbg !24008, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !24009

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !24010
  br label %return, !dbg !24010

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !24012
  br label %return, !dbg !24012

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !24013
  ret i1 %1, !dbg !24013
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !24014 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !24015, metadata !DIExpression()), !dbg !24016
  %0 = load i32, i32* %c.addr, align 4, !dbg !24017, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !24018

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !24019
  br label %return, !dbg !24019

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !24021
  br label %return, !dbg !24021

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !24022
  ret i1 %1, !dbg !24022
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !24023 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !24024, metadata !DIExpression()), !dbg !24025
  %0 = load i32, i32* %c.addr, align 4, !dbg !24026, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !24027

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !24028
  br label %return, !dbg !24028

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !24030
  br label %return, !dbg !24030

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !24031
  ret i1 %1, !dbg !24031
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !24032 !ctir !307 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !24033, metadata !DIExpression()), !dbg !24034
  %0 = load i32, i32* %c.addr, align 4, !dbg !24035, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !24036

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !24037
  br label %return, !dbg !24037

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !24039
  br label %return, !dbg !24039

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !24040
  ret i1 %1, !dbg !24040
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !24041 !ctir !1830 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !24042, metadata !DIExpression()), !dbg !24043
  %0 = load i32, i32* %c.addr, align 4, !dbg !24044, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !24045

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !24046, !tbaa !2985
  %sub = sub nsw i32 %1, 65, !dbg !24048
  %add = add nsw i32 %sub, 97, !dbg !24049
  store i32 %add, i32* %retval, align 4, !dbg !24050
  br label %return, !dbg !24050

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !24051, !tbaa !2985
  store i32 %2, i32* %retval, align 4, !dbg !24052
  br label %return, !dbg !24052

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !24053
  ret i32 %3, !dbg !24053
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !24054 !ctir !1830 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2985
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !24055, metadata !DIExpression()), !dbg !24056
  %0 = load i32, i32* %c.addr, align 4, !dbg !24057, !tbaa !2985
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !24058

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !24059, !tbaa !2985
  %sub = sub nsw i32 %1, 97, !dbg !24061
  %add = add nsw i32 %sub, 65, !dbg !24062
  store i32 %add, i32* %retval, align 4, !dbg !24063
  br label %return, !dbg !24063

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !24064, !tbaa !2985
  store i32 %2, i32* %retval, align 4, !dbg !24065
  br label %return, !dbg !24065

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !24066
  ret i32 %3, !dbg !24066
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !24067 !ctir !2943 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2945
  %fd = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  %e15 = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !24069, metadata !DIExpression()), !dbg !24070
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2998
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !24071, metadata !DIExpression()), !dbg !24072
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !24073, metadata !DIExpression()), !dbg !24074
  %0 = load i8*, i8** %file.addr, align 8, !dbg !24075, !tbaa !2998
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !24076, !tbaa !2998
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !24077
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !24074, !tbaa !2998
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24078, !tbaa !2998
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !24078
  br i1 %tobool, label %if.then, label %if.end21, !dbg !24080

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !24081, metadata !DIExpression()), !dbg !24083
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24084, !tbaa !2998
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #10, !dbg !24085
  store i32 %call1, i32* %fd, align 4, !dbg !24083, !tbaa !2985
  %4 = load i32, i32* %fd, align 4, !dbg !24086, !tbaa !2985
  %cmp = icmp sle i32 0, %4, !dbg !24088
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !24089

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !24090, !tbaa !2985
  %cmp2 = icmp sle i32 %5, 2, !dbg !24091
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !24092

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !24093, metadata !DIExpression()), !dbg !24095
  %6 = load i32, i32* %fd, align 4, !dbg !24096, !tbaa !2985
  %call4 = call i32 @dup_safer(i32 %6), !dbg !24097
  store i32 %call4, i32* %f, align 4, !dbg !24095, !tbaa !2985
  %7 = load i32, i32* %f, align 4, !dbg !24098, !tbaa !2985
  %cmp5 = icmp slt i32 %7, 0, !dbg !24100
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !24101

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !24102, metadata !DIExpression()), !dbg !24104
  %call7 = call i32* @__errno_location() #15, !dbg !24105
  %8 = load i32, i32* %call7, align 4, !dbg !24105, !tbaa !2985, !ctir !7
  store i32 %8, i32* %e, align 4, !dbg !24104, !tbaa !2985
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24106, !tbaa !2998
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !24107
  %10 = load i32, i32* %e, align 4, !dbg !24108, !tbaa !2985
  %call9 = call i32* @__errno_location() #15, !dbg !24109
  store i32 %10, i32* %call9, align 4, !dbg !24110, !tbaa !2985, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !24111
  br label %return, !dbg !24111

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24112, !tbaa !2998
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !24114
  %cmp11 = icmp ne i32 %call10, 0, !dbg !24115
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !24116

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !24117, !tbaa !2985
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !24118, !tbaa !2998
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #10, !dbg !24119
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !24120, !tbaa !2998
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !24120
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !24121

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !24122, metadata !DIExpression()), !dbg !24124
  %call16 = call i32* @__errno_location() #15, !dbg !24125
  %14 = load i32, i32* %call16, align 4, !dbg !24125, !tbaa !2985, !ctir !7
  store i32 %14, i32* %e15, align 4, !dbg !24124, !tbaa !2985
  %15 = load i32, i32* %f, align 4, !dbg !24126, !tbaa !2985
  %call17 = call i32 @close(i32 %15), !dbg !24127
  %16 = load i32, i32* %e15, align 4, !dbg !24128, !tbaa !2985
  %call18 = call i32* @__errno_location() #15, !dbg !24129
  store i32 %16, i32* %call18, align 4, !dbg !24130, !tbaa !2985, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !24131
  br label %return, !dbg !24131

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !24132

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !24133

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !24134, !tbaa !2998
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !24135
  br label %return, !dbg !24135

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !24136
  ret %struct._IO_FILE* %18, !dbg !24136
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind readnone }
attributes #16 = { noreturn }

!llvm.dbg.cu = !{!65, !1324, !244, !530, !1527, !556, !1579, !589, !1581, !1586, !1591, !595, !1597, !632, !1600, !655, !697, !1605, !1608, !1613, !1616, !742, !1621, !1673, !1687, !1726, !1754, !1786, !1791, !1794, !749, !1799, !1810, !1815, !884, !1820, !1822, !925, !1825, !1832, !1842, !1845, !1067, !1852, !1881, !1914, !1110, !1941, !1161, !1182, !1944, !1958, !1235, !1249, !2016, !2033, !2036, !2134, !2152, !2189, !2230, !2269, !2308, !2502, !2519, !2542, !2554, !1257, !2568, !2585, !2588, !2628, !2670, !2675, !2687, !2690, !2693, !2715, !2719, !2733, !2764, !2865, !2885, !2888, !2895, !1311, !2934, !2937, !2940}
!llvm.ident = !{}
!llvm.module.flags = !{!2980, !2981, !2982, !2983}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3)
!2 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!3 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!5 = !{!6, !8, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !48, !51, !52, !54, !58, !59}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3, file: !4, line: 51, baseType: !7, size: 32)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4, line: 36, flags: DIFlagFwdDecl)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3, file: !4, line: 70, baseType: !25, size: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 152, baseType: !31)
!30 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4, line: 43, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 153, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4, line: 37, flags: DIFlagFwdDecl)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4, line: 38, flags: DIFlagFwdDecl)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3, file: !4, line: 93, baseType: !25, size: 64, offset: 1344)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "software/llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 20)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "long_options", scope: !65, file: !66, line: 56, type: !121, isLocal: true, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, retainedTypes: !112, globals: !236, nameTableKind: None)
!66 = !DIFile(filename: "src/mv.c", directory: "/home/mbarbar/clone/coreutils")
!67 = !{!68, !76, !83, !89, !95, !100, !106}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !69, line: 30, baseType: !70, size: 32, elements: !71)
!69 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mbarbar/clone/coreutils")
!70 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!71 = !{!72, !73, !74, !75}
!72 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !77, line: 69, baseType: !70, size: 32, elements: !78)
!77 = !DIFile(filename: "src/copy.h", directory: "/home/mbarbar/clone/coreutils")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !77, line: 60, baseType: !70, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !77, line: 26, baseType: !70, size: 32, elements: !90)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !77, line: 47, baseType: !70, size: 32, elements: !96)
!96 = !{!97, !98, !99}
!97 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rm_interactive", file: !101, line: 23, baseType: !70, size: 32, elements: !102)
!101 = !DIFile(filename: "src/remove.h", directory: "/home/mbarbar/clone/coreutils")
!102 = !{!103, !104, !105}
!103 = !DIEnumerator(name: "RMI_ALWAYS", value: 3, isUnsigned: true)
!104 = !DIEnumerator(name: "RMI_SOMETIMES", value: 4, isUnsigned: true)
!105 = !DIEnumerator(name: "RMI_NEVER", value: 5, isUnsigned: true)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RM_status", file: !101, line: 78, baseType: !70, size: 32, elements: !107)
!107 = !{!108, !109, !110, !111}
!108 = !DIEnumerator(name: "RM_OK", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "RM_USER_DECLINED", value: 3, isUnsigned: true)
!110 = !DIEnumerator(name: "RM_ERROR", value: 4, isUnsigned: true)
!111 = !DIEnumerator(name: "RM_NONEMPTY_DIR", value: 5, isUnsigned: true)
!112 = !{!9, !53, !113, !0, !115, !117, !7, !120, !119, !121, !133, !134, !136, !138, !149, !150, !160, !195, !200, !202, !206, !208, !211, !222}
!113 = !DISubroutineType(types: !114)
!114 = !{null, !7}
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!117 = !DISubroutineType(types: !118)
!118 = !{!7, !7, !119}
!119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!120 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !122, size: 3584, elements: !131)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !124, line: 50, size: 256, elements: !125)
!124 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!125 = !{!126, !127, !128, !130}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !123, file: !124, line: 52, baseType: !115, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !123, file: !124, line: 55, baseType: !7, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !123, file: !124, line: 56, baseType: !129, size: 64, offset: 128)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !123, file: !124, line: 57, baseType: !7, size: 32, offset: 192)
!131 = !{!132}
!132 = !DISubrange(count: 14)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !30, line: 150, baseType: !70)
!134 = !DISubroutineType(types: !135)
!135 = !{null}
!136 = !DISubroutineType(types: !137)
!137 = !{null, !115}
!138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !139, size: 896, elements: !147)
!139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !140)
!140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !142, file: !141, line: 633, size: 128, elements: !144)
!141 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/clone/coreutils")
!142 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !141, file: !141, line: 631, type: !136, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!143 = !{}
!144 = !{!145, !146}
!145 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !140, file: !141, line: 633, baseType: !115, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !140, file: !141, line: 633, baseType: !115, size: 64, offset: 64)
!147 = !{!148}
!148 = !DISubrange(count: 7)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!150 = !DISubroutineType(types: !151)
!151 = !{null, !152}
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !154)
!154 = !{!155, !156, !157, !158, !159, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !199}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !153, file: !77, line: 100, baseType: !68, size: 32)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !153, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !153, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !153, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !153, file: !77, line: 115, baseType: !160, size: 32, offset: 128)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !161, line: 69, baseType: !133)
!161 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!162 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !153, file: !77, line: 119, baseType: !120, size: 8, offset: 160)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !153, file: !77, line: 123, baseType: !120, size: 8, offset: 168)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !153, file: !77, line: 130, baseType: !120, size: 8, offset: 176)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !153, file: !77, line: 134, baseType: !120, size: 8, offset: 184)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !153, file: !77, line: 138, baseType: !120, size: 8, offset: 192)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !153, file: !77, line: 141, baseType: !120, size: 8, offset: 200)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !153, file: !77, line: 145, baseType: !120, size: 8, offset: 208)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !153, file: !77, line: 152, baseType: !120, size: 8, offset: 216)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !153, file: !77, line: 156, baseType: !120, size: 8, offset: 224)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !153, file: !77, line: 160, baseType: !120, size: 8, offset: 232)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !153, file: !77, line: 161, baseType: !120, size: 8, offset: 240)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !153, file: !77, line: 162, baseType: !120, size: 8, offset: 248)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !153, file: !77, line: 163, baseType: !120, size: 8, offset: 256)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !153, file: !77, line: 166, baseType: !120, size: 8, offset: 264)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !153, file: !77, line: 178, baseType: !120, size: 8, offset: 272)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !153, file: !77, line: 182, baseType: !120, size: 8, offset: 280)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !153, file: !77, line: 188, baseType: !120, size: 8, offset: 288)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !153, file: !77, line: 192, baseType: !120, size: 8, offset: 296)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !153, file: !77, line: 201, baseType: !120, size: 8, offset: 304)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !153, file: !77, line: 205, baseType: !120, size: 8, offset: 312)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !153, file: !77, line: 214, baseType: !120, size: 8, offset: 320)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !153, file: !77, line: 223, baseType: !120, size: 8, offset: 328)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !153, file: !77, line: 227, baseType: !120, size: 8, offset: 336)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !153, file: !77, line: 231, baseType: !120, size: 8, offset: 344)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !153, file: !77, line: 235, baseType: !120, size: 8, offset: 352)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !153, file: !77, line: 239, baseType: !120, size: 8, offset: 360)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !153, file: !77, line: 242, baseType: !120, size: 8, offset: 368)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !153, file: !77, line: 245, baseType: !120, size: 8, offset: 376)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !153, file: !77, line: 250, baseType: !120, size: 8, offset: 384)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !153, file: !77, line: 254, baseType: !120, size: 8, offset: 392)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !153, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !153, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !153, file: !77, line: 273, baseType: !195, size: 64, offset: 512)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !197, line: 69, baseType: !198)
!197 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/clone/coreutils")
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !197, line: 67, flags: DIFlagFwdDecl)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !153, file: !77, line: 276, baseType: !195, size: 64, offset: 576)
!200 = !DISubroutineType(types: !201)
!201 = !{!120, !115}
!202 = !DISubroutineType(types: !203)
!203 = !{!120, !9, !9, !120, !204}
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!206 = !DISubroutineType(types: !207)
!207 = !{!120, !115, !115, !204}
!208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 128, elements: !209)
!209 = !{!210}
!210 = !DISubrange(count: 2)
!211 = !DISubroutineType(types: !212)
!212 = !{null, !213}
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !101, line: 32, size: 256, elements: !215)
!215 = !{!216, !217, !218, !219, !220, !221, !232, !233, !234, !235}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !214, file: !101, line: 35, baseType: !120, size: 8)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !214, file: !101, line: 38, baseType: !100, size: 32, offset: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !214, file: !101, line: 47, baseType: !120, size: 8, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !214, file: !101, line: 50, baseType: !120, size: 8, offset: 72)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !214, file: !101, line: 53, baseType: !120, size: 8, offset: 80)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !214, file: !101, line: 57, baseType: !222, size: 64, offset: 128)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !225)
!224 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mbarbar/clone/coreutils")
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !223, file: !224, line: 9, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !161, line: 47, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !30, line: 148, baseType: !57)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !223, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !161, line: 59, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !30, line: 145, baseType: !57)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !214, file: !101, line: 61, baseType: !120, size: 8, offset: 192)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !214, file: !101, line: 64, baseType: !120, size: 8, offset: 200)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !214, file: !101, line: 67, baseType: !120, size: 8, offset: 208)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !214, file: !101, line: 75, baseType: !120, size: 8, offset: 216)
!236 = !{!237, !63, !239}
!237 = !DIGlobalVariableExpression(var: !238, expr: !DIExpression())
!238 = distinct !DIGlobalVariable(name: "remove_trailing_slashes", scope: !65, file: !66, line: 54, type: !120, isLocal: true, isDefinition: true)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !241, file: !66, line: 96, type: !223, isLocal: true, isDefinition: true)
!241 = distinct !DISubprogram(name: "rm_option_init", scope: !66, file: !66, line: 75, type: !211, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!242 = !DIGlobalVariableExpression(var: !243, expr: !DIExpression())
!243 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !244, file: !245, line: 147, type: !115, isLocal: true, isDefinition: true)
!244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !245, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !246, retainedTypes: !247, globals: !512, nameTableKind: None)
!245 = !DIFile(filename: "src/copy.c", directory: "/home/mbarbar/clone/coreutils")
!246 = !{!68, !76, !83, !89, !95}
!247 = !{!160, !53, !70, !9, !57, !55, !248, !250, !120, !7, !295, !297, !195, !300, !115, !303, !305, !307, !309, !311, !313, !133, !231, !228, !323, !356, !350, !227, !230, !116, !29, !326, !328, !357, !358, !360, !362, !315, !364, !366, !368, !370, !373, !200, !10, !407, !409, !411, !415, !417, !333, !419, !421, !423, !335, !425, !429, !431, !438, !450, !452, !454, !456, !462, !464, !466, !468, !467, !469, !134, !471, !475, !477, !478, !479, !481, !497, !493, !508, !510}
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !249, line: 63, baseType: !29)
!249 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!250 = !DISubroutineType(types: !251)
!251 = !{!120, !115, !115, !160, !120, !252}
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !255)
!255 = !{!256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !254, file: !77, line: 100, baseType: !68, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !254, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !254, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !254, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !254, file: !77, line: 115, baseType: !160, size: 32, offset: 128)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !254, file: !77, line: 119, baseType: !120, size: 8, offset: 160)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !254, file: !77, line: 123, baseType: !120, size: 8, offset: 168)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !254, file: !77, line: 130, baseType: !120, size: 8, offset: 176)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !254, file: !77, line: 134, baseType: !120, size: 8, offset: 184)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !254, file: !77, line: 138, baseType: !120, size: 8, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !254, file: !77, line: 141, baseType: !120, size: 8, offset: 200)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !254, file: !77, line: 145, baseType: !120, size: 8, offset: 208)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !254, file: !77, line: 152, baseType: !120, size: 8, offset: 216)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !254, file: !77, line: 156, baseType: !120, size: 8, offset: 224)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !254, file: !77, line: 160, baseType: !120, size: 8, offset: 232)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !254, file: !77, line: 161, baseType: !120, size: 8, offset: 240)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !254, file: !77, line: 162, baseType: !120, size: 8, offset: 248)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !254, file: !77, line: 163, baseType: !120, size: 8, offset: 256)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !254, file: !77, line: 166, baseType: !120, size: 8, offset: 264)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !254, file: !77, line: 178, baseType: !120, size: 8, offset: 272)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !254, file: !77, line: 182, baseType: !120, size: 8, offset: 280)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !254, file: !77, line: 188, baseType: !120, size: 8, offset: 288)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !254, file: !77, line: 192, baseType: !120, size: 8, offset: 296)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !254, file: !77, line: 201, baseType: !120, size: 8, offset: 304)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !254, file: !77, line: 205, baseType: !120, size: 8, offset: 312)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !254, file: !77, line: 214, baseType: !120, size: 8, offset: 320)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !254, file: !77, line: 223, baseType: !120, size: 8, offset: 328)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !254, file: !77, line: 227, baseType: !120, size: 8, offset: 336)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !254, file: !77, line: 231, baseType: !120, size: 8, offset: 344)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !254, file: !77, line: 235, baseType: !120, size: 8, offset: 352)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !254, file: !77, line: 239, baseType: !120, size: 8, offset: 360)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !254, file: !77, line: 242, baseType: !120, size: 8, offset: 368)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !254, file: !77, line: 245, baseType: !120, size: 8, offset: 376)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !254, file: !77, line: 250, baseType: !120, size: 8, offset: 384)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !254, file: !77, line: 254, baseType: !120, size: 8, offset: 392)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !254, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !254, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !254, file: !77, line: 273, baseType: !195, size: 64, offset: 512)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !254, file: !77, line: 276, baseType: !195, size: 64, offset: 576)
!295 = !DISubroutineType(types: !296)
!296 = !{!120, !115, !120, !120, !252}
!297 = !DISubroutineType(types: !298)
!298 = !{null, !299}
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!120, !115, !115, !120, !252, !302, !302}
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{!120, !252}
!305 = !DISubroutineType(types: !306)
!306 = !{!160}
!307 = !DISubroutineType(types: !308)
!308 = !{!120, !7}
!309 = !DISubroutineType(types: !310)
!310 = !{!7, !115, !160}
!311 = !DISubroutineType(types: !312)
!312 = !{!120, !115, !120, !120}
!313 = !DISubroutineType(types: !314)
!314 = !{!120, !115, !115, !120, !315, !350, !252, !120, !302, !302, !302}
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !319)
!318 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!319 = !{!320, !321, !322, !324, !325, !327, !329, !330, !331, !332, !334, !336, !344, !345, !346}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !317, file: !318, line: 48, baseType: !231, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !317, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !317, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !30, line: 151, baseType: !57)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !317, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !317, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !30, line: 146, baseType: !70)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !317, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !30, line: 147, baseType: !70)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !317, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !317, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !317, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !317, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !30, line: 174, baseType: !31)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !317, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !30, line: 179, baseType: !31)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !317, file: !318, line: 91, baseType: !337, size: 128, offset: 576)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !339)
!338 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!339 = !{!340, !342}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !337, file: !338, line: 11, baseType: !341, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !30, line: 160, baseType: !31)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !337, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !30, line: 196, baseType: !31)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !317, file: !318, line: 92, baseType: !337, size: 128, offset: 704)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !317, file: !318, line: 93, baseType: !337, size: 128, offset: 832)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !317, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 192, elements: !348)
!348 = !{!349}
!349 = !DISubrange(count: 3)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !245, line: 125, size: 192, elements: !352)
!352 = !{!353, !354, !355}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !351, file: !245, line: 127, baseType: !350, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !351, file: !245, line: 128, baseType: !227, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !351, file: !245, line: 129, baseType: !230, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !209)
!358 = !DISubroutineType(types: !359)
!359 = !{!7, !7, !115, !356, !7}
!360 = !DISubroutineType(types: !361)
!361 = !{!120, !252, !120}
!362 = !DISubroutineType(types: !363)
!363 = !{!120, !115, !315, !115, !315, !252, !302}
!364 = !DISubroutineType(types: !365)
!365 = !{!120, !115, !115, !120, !120, !120}
!366 = !DISubroutineType(types: !367)
!367 = !{!120, !252, !115, !315}
!368 = !DISubroutineType(types: !369)
!369 = !{!120, !115, !160}
!370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 96, elements: !371)
!371 = !{!372}
!372 = !DISubrange(count: 12)
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !375)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !376)
!376 = !{!377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !375, file: !4, line: 51, baseType: !7, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !375, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !375, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !375, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !375, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !375, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !375, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !375, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !375, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !375, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !375, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !375, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !375, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !375, file: !4, line: 70, baseType: !391, size: 64, offset: 832)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !375, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !375, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !375, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !375, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !375, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !375, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !375, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !375, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !375, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !375, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !375, file: !4, line: 93, baseType: !391, size: 64, offset: 1344)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !375, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !375, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !375, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !375, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!407 = !DISubroutineType(types: !408)
!408 = !{!120, !115, !315, !115}
!409 = !DISubroutineType(types: !410)
!410 = !{null, !115, !115, !115}
!411 = !DISubroutineType(types: !412)
!412 = !{!120, !315, !413}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !351)
!415 = !DISubroutineType(types: !416)
!416 = !{!120, !115, !115, !120, !315, !350, !252, !302, !302}
!417 = !DISubroutineType(types: !418)
!418 = !{!120, !115, !115, !252, !160, !160, !302, !315}
!419 = !DISubroutineType(types: !420)
!420 = !{!7, !7, !7}
!421 = !DISubroutineType(types: !422)
!422 = !{!55, !317}
!423 = !DISubroutineType(types: !424)
!424 = !{!120, !315}
!425 = !DISubroutineType(types: !426)
!426 = !{!53, !427, !55}
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!429 = !DISubroutineType(types: !430)
!430 = !{!120, !7, !7, !9, !55, !55, !248, !89, !115, !115, !302}
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !433, line: 23, size: 192, elements: !434)
!433 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mbarbar/clone/coreutils")
!434 = !{!435, !436, !437}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !432, file: !433, line: 26, baseType: !248, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !432, file: !433, line: 29, baseType: !248, size: 64, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !432, file: !433, line: 32, baseType: !70, size: 32, offset: 128)
!438 = !DISubroutineType(types: !439)
!439 = !{null, !440}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !433, line: 36, size: 384, elements: !442)
!442 = !{!443, !444, !445, !446, !447, !448, !449}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !441, file: !433, line: 39, baseType: !7, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !441, file: !433, line: 42, baseType: !248, size: 64, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !441, file: !433, line: 45, baseType: !70, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !441, file: !433, line: 48, baseType: !55, size: 64, offset: 192)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !441, file: !433, line: 52, baseType: !120, size: 8, offset: 256)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !441, file: !433, line: 55, baseType: !120, size: 8, offset: 264)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !441, file: !433, line: 58, baseType: !431, size: 64, offset: 320)
!450 = !DISubroutineType(types: !451)
!451 = !{!120, !7, !115, !120, !248}
!452 = !DISubroutineType(types: !453)
!453 = !{!120, !7, !248}
!454 = !DISubroutineType(types: !455)
!455 = !{!7, !7, !248, !248}
!456 = !DISubroutineType(types: !457)
!457 = !{!120, !7, !7, !9, !55, !55, !120, !115, !115, !458, !461, !302}
!458 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !459, line: 102, baseType: !460)
!459 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !30, line: 73, baseType: !57)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !249, line: 77, baseType: !463)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !30, line: 193, baseType: !31)
!464 = !DISubroutineType(types: !465)
!465 = !{!120, !427, !55}
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!469 = !DISubroutineType(types: !470)
!470 = !{!7, !7, !115, !160}
!471 = !DISubroutineType(types: !472)
!472 = !{!7, !115, !473}
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !337)
!475 = !DISubroutineType(types: !476)
!476 = !{!7, !252, !115, !7, !315, !120, !315}
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !161, line: 79, baseType: !326)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !161, line: 64, baseType: !328)
!479 = !DISubroutineType(types: !480)
!480 = !{!120, !115, !7, !115, !7, !252}
!481 = !DISubroutineType(types: !482)
!482 = !{null, !483, !115}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "error_context", file: !485, line: 25, size: 192, elements: !486)
!485 = !DIFile(filename: "/usr/include/attr/error_context.h", directory: "")
!486 = !{!487, !491, !495}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !484, file: !485, line: 27, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{null, !483, !115, null}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !484, file: !485, line: 30, baseType: !492, size: 64, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!115, !483, !115}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "quote_free", scope: !484, file: !485, line: 33, baseType: !496, size: 64, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !249, line: 52, baseType: !498)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !499, line: 32, baseType: !500)
!499 = !DIFile(filename: "software/llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar")
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !245, line: 659, baseType: !501)
!501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !502, size: 192, elements: !38)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !245, line: 659, size: 192, elements: !503)
!503 = !{!504, !505, !506, !507}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !502, file: !245, line: 659, baseType: !70, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !502, file: !245, line: 659, baseType: !70, size: 32, offset: 32)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !502, file: !245, line: 659, baseType: !53, size: 64, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !502, file: !245, line: 659, baseType: !53, size: 64, offset: 128)
!508 = !DISubroutineType(types: !509)
!509 = !{!7, !115, !483}
!510 = !DISubroutineType(types: !511)
!511 = !{null, !115, !7, !315}
!512 = !{!513, !242, !516, !518, !521, !523}
!513 = !DIGlobalVariableExpression(var: !514, expr: !DIExpression())
!514 = distinct !DIGlobalVariable(name: "mask", scope: !515, file: !245, line: 3089, type: !160, isLocal: true, isDefinition: true)
!515 = distinct !DISubprogram(name: "cached_umask", scope: !245, file: !245, line: 3087, type: !305, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!516 = !DIGlobalVariableExpression(var: !517, expr: !DIExpression())
!517 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !244, file: !245, line: 148, type: !115, isLocal: true, isDefinition: true)
!518 = !DIGlobalVariableExpression(var: !519, expr: !DIExpression())
!519 = distinct !DIGlobalVariable(name: "zeros", scope: !520, file: !245, line: 387, type: !9, isLocal: true, isDefinition: true)
!520 = distinct !DISubprogram(name: "write_zeros", scope: !245, file: !245, line: 385, type: !452, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!521 = !DIGlobalVariableExpression(var: !522, expr: !DIExpression())
!522 = distinct !DIGlobalVariable(name: "nz", scope: !520, file: !245, line: 388, type: !55, isLocal: true, isDefinition: true)
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "fallback", scope: !520, file: !245, line: 395, type: !525, isLocal: true, isDefinition: true)
!525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !526)
!526 = !{!527}
!527 = !DISubrange(count: 1024)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !530, file: !531, line: 45, type: !195, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !532, globals: !553, nameTableKind: None)
!531 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mbarbar/clone/coreutils")
!532 = !{!53, !9, !458, !533, !535, !227, !230, !195, !541, !543, !545, !134, !547, !549, !551}
!533 = !DISubroutineType(types: !534)
!534 = !{null, !227, !230}
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !531, line: 33, size: 192, elements: !537)
!537 = !{!538, !539, !540}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !536, file: !531, line: 35, baseType: !227, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !536, file: !531, line: 36, baseType: !230, size: 64, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !536, file: !531, line: 40, baseType: !9, size: 64, offset: 128)
!541 = !DISubroutineType(types: !542)
!542 = !{!9, !227, !230}
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !536)
!545 = !DISubroutineType(types: !546)
!546 = !{!9, !115, !227, !230}
!547 = !DISubroutineType(types: !548)
!548 = !{null, !53}
!549 = !DISubroutineType(types: !550)
!550 = !{!55, !427, !55}
!551 = !DISubroutineType(types: !552)
!552 = !{!120, !427, !427}
!553 = !{!528}
!554 = !DIGlobalVariableExpression(var: !555, expr: !DIExpression())
!555 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !556, file: !557, line: 38, type: !569, isLocal: true, isDefinition: true)
!556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !557, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !558, globals: !586, nameTableKind: None)
!557 = !DIFile(filename: "src/force-link.c", directory: "/home/mbarbar/clone/coreutils")
!558 = !{!559, !7, !561, !9, !564, !566, !568, !55, !569, !572, !574, !115, !581}
!559 = !DISubroutineType(types: !560)
!560 = !{!7, !7, !115, !7, !115, !7, !120, !7}
!561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2048, elements: !562)
!562 = !{!563}
!563 = !DISubrange(count: 256)
!564 = !DISubroutineType(types: !565)
!565 = !{!7, !115, !7, !115, !120, !7}
!566 = !DISubroutineType(types: !567)
!567 = !{!9, !115, !9}
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !31)
!569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 72, elements: !570)
!570 = !{!571}
!571 = !DISubrange(count: 9)
!572 = !DISubroutineType(types: !573)
!573 = !{!7, !9, !53}
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !557, line: 71, size: 192, elements: !576)
!576 = !{!577, !578, !579, !580}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !575, file: !557, line: 73, baseType: !7, size: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !575, file: !557, line: 74, baseType: !115, size: 64, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !575, file: !557, line: 75, baseType: !7, size: 32, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !575, file: !557, line: 76, baseType: !7, size: 32, offset: 160)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !557, line: 131, size: 128, elements: !583)
!583 = !{!584, !585}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !582, file: !557, line: 133, baseType: !115, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !582, file: !557, line: 134, baseType: !7, size: 32, offset: 64)
!586 = !{!554}
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "Version", scope: !589, file: !590, line: 2, type: !115, isLocal: false, isDefinition: true)
!589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !590, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !591, globals: !592, nameTableKind: None)
!590 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/clone/coreutils")
!591 = !{!115}
!592 = !{!587}
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !595, file: !599, line: 82, type: !115, isLocal: false, isDefinition: true)
!595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !596, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !597, retainedTypes: !605, globals: !629, nameTableKind: None)
!596 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mbarbar/clone/coreutils")
!597 = !{!68, !598}
!598 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !599, line: 172, baseType: !70, size: 32, elements: !600)
!599 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mbarbar/clone/coreutils")
!600 = !{!601, !602, !603, !604}
!601 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!602 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!603 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!604 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!605 = !{!53, !70, !55, !115, !136, !116, !606, !568, !608, !9, !609, !7, !613, !616, !625, !120, !10, !626, !31}
!606 = !DISubroutineType(types: !607)
!607 = !{!9, !7, !115, !68, !120}
!608 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !161, line: 108, baseType: !463)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !611, line: 127, baseType: !612)
!611 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !611, line: 127, flags: DIFlagFwdDecl)
!613 = !DISubroutineType(types: !614)
!614 = !{!598, !7, !119, !55, !55, !568, !615, !129}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !618, line: 22, size: 2240, elements: !619)
!618 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!619 = !{!620, !621, !622, !623, !624}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !617, file: !618, line: 25, baseType: !228, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !617, file: !618, line: 26, baseType: !29, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !617, file: !618, line: 31, baseType: !33, size: 16, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !617, file: !618, line: 32, baseType: !468, size: 8, offset: 144)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !617, file: !618, line: 33, baseType: !561, size: 2048, offset: 152)
!625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 16, elements: !209)
!626 = !DISubroutineType(types: !627)
!627 = !{null, !9, !55, !10, !7, !628}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!629 = !{!593}
!630 = !DIGlobalVariableExpression(var: !631, expr: !DIExpression())
!631 = distinct !DIGlobalVariable(name: "backup_args", scope: !632, file: !652, line: 42, type: !644, isLocal: true, isDefinition: true)
!632 = distinct !DICompileUnit(language: DW_LANG_C99, file: !633, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !634, retainedTypes: !635, globals: !649, nameTableKind: None)
!633 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mbarbar/clone/coreutils")
!634 = !{!68}
!635 = !{!427, !636, !9, !638, !116, !640, !644, !646}
!636 = !DISubroutineType(types: !637)
!637 = !{!9, !7, !115, !68}
!638 = !DISubroutineType(types: !639)
!639 = !{!68, !115, !115}
!640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 256, elements: !642)
!641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!642 = !{!643}
!643 = !DISubrange(count: 8)
!644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 576, elements: !570)
!645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !647, line: 61, baseType: !648)
!647 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/clone/coreutils")
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!649 = !{!650, !630}
!650 = !DIGlobalVariableExpression(var: !651, expr: !DIExpression())
!651 = distinct !DIGlobalVariable(name: "backup_types", scope: !632, file: !652, line: 53, type: !640, isLocal: true, isDefinition: true)
!652 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mbarbar/clone/coreutils")
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "file_name", scope: !655, file: !694, line: 37, type: !115, isLocal: true, isDefinition: true)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !656, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !657, globals: !693, nameTableKind: None)
!656 = !DIFile(filename: "./lib/closein.c", directory: "/home/mbarbar/clone/coreutils")
!657 = !{!136, !115, !134, !120, !658, !7, !692}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !661)
!661 = !{!662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !660, file: !4, line: 51, baseType: !7, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !660, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !660, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !660, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !660, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !660, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !660, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !660, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !660, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !660, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !660, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !660, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !660, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !660, file: !4, line: 70, baseType: !676, size: 64, offset: 832)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !660, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !660, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !660, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !660, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !660, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !660, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !660, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !660, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !660, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !660, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !660, file: !4, line: 93, baseType: !676, size: 64, offset: 1344)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !660, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !660, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !660, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !660, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!692 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!693 = !{!653}
!694 = !DIFile(filename: "lib/closein.c", directory: "/home/mbarbar/clone/coreutils")
!695 = !DIGlobalVariableExpression(var: !696, expr: !DIExpression())
!696 = distinct !DIGlobalVariable(name: "file_name", scope: !697, file: !739, line: 46, type: !115, isLocal: true, isDefinition: true)
!697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !698, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !699, globals: !736, nameTableKind: None)
!698 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/clone/coreutils")
!699 = !{!136, !115, !700, !120, !134, !702, !7, !692}
!700 = !DISubroutineType(types: !701)
!701 = !{null, !120}
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !705)
!705 = !{!706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !704, file: !4, line: 51, baseType: !7, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !704, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !704, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !704, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !704, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !704, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !704, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !704, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !704, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !704, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !704, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !704, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !704, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !704, file: !4, line: 70, baseType: !720, size: 64, offset: 832)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !704, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !704, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !704, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !704, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !704, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !704, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !704, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !704, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !704, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !704, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !704, file: !4, line: 93, baseType: !720, size: 64, offset: 1344)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !704, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !704, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !704, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !704, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!736 = !{!695, !737}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !697, file: !739, line: 56, type: !120, isLocal: true, isDefinition: true)
!739 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/clone/coreutils")
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "exit_failure", scope: !742, file: !746, line: 24, type: !692, isLocal: false, isDefinition: true)
!742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !743, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !744, globals: !745, nameTableKind: None)
!743 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/clone/coreutils")
!744 = !{!692}
!745 = !{!740}
!746 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/clone/coreutils")
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "default_tuning", scope: !749, file: !758, line: 130, type: !774, isLocal: true, isDefinition: true)
!749 = distinct !DICompileUnit(language: DW_LANG_C99, file: !750, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !751, globals: !881, nameTableKind: None)
!750 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/clone/coreutils")
!751 = !{!57, !53, !55, !752, !755, !767, !761, !794, !796, !832, !788, !834, !836, !838, !839, !845, !468, !116, !847, !774, !850, !852, !756, !773, !785, !791, !853, !855, !857, !427, !779, !120, !860, !7, !862, !549, !551, !864, !866, !868, !870, !872, !874, !876, !879}
!752 = !DISubroutineType(types: !753)
!753 = !{!55, !754}
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !756)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !197, line: 69, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !758, line: 52, size: 640, elements: !759)
!758 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/clone/coreutils")
!759 = !{!760, !766, !769, !770, !771, !772, !784, !787, !790, !793}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !757, file: !758, line: 57, baseType: !761, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !758, line: 46, size: 128, elements: !763)
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !762, file: !758, line: 48, baseType: !53, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !762, file: !758, line: 49, baseType: !761, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !757, file: !758, line: 58, baseType: !767, size: 64, offset: 64)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !762)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !757, file: !758, line: 59, baseType: !55, size: 64, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !757, file: !758, line: 60, baseType: !55, size: 64, offset: 192)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !757, file: !758, line: 61, baseType: !55, size: 64, offset: 256)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !757, file: !758, line: 64, baseType: !773, size: 64, offset: 320)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !197, line: 65, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !197, line: 53, size: 160, elements: !777)
!777 = !{!778, !780, !781, !782, !783}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !776, file: !197, line: 58, baseType: !779, size: 32)
!779 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !776, file: !197, line: 59, baseType: !779, size: 32, offset: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !776, file: !197, line: 60, baseType: !779, size: 32, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !776, file: !197, line: 61, baseType: !779, size: 32, offset: 96)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !776, file: !197, line: 62, baseType: !120, size: 8, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !757, file: !758, line: 71, baseType: !785, size: 64, offset: 384)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !197, line: 48, baseType: !786)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !757, file: !758, line: 72, baseType: !788, size: 64, offset: 448)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !197, line: 49, baseType: !789)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !757, file: !758, line: 73, baseType: !791, size: 64, offset: 512)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !197, line: 50, baseType: !792)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !757, file: !758, line: 76, baseType: !761, size: 64, offset: 576)
!794 = !DISubroutineType(types: !795)
!795 = !{!120, !754}
!796 = !DISubroutineType(types: !797)
!797 = !{null, !754, !798}
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !801)
!801 = !{!802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !800, file: !4, line: 51, baseType: !7, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !800, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !800, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !800, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !800, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !800, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !800, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !800, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !800, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !800, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !800, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !800, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !800, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !800, file: !4, line: 70, baseType: !816, size: 64, offset: 832)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !800, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !800, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !800, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !800, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !800, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !800, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !800, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !800, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !800, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !800, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !800, file: !4, line: 93, baseType: !816, size: 64, offset: 1344)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !800, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !800, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !800, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !800, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!832 = !DISubroutineType(types: !833)
!833 = !{!53, !754, !427}
!834 = !DISubroutineType(types: !835)
!835 = !{!53, !754}
!836 = !DISubroutineType(types: !837)
!837 = !{!55, !754, !838, !55}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!55, !754, !841, !53}
!841 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !197, line: 51, baseType: !842)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!120, !53, !53}
!845 = !DISubroutineType(types: !846)
!846 = !{!55, !115, !55}
!847 = !DISubroutineType(types: !848)
!848 = !{null, !849}
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{!852, !55, !773, !785, !788, !791}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!853 = !DISubroutineType(types: !854)
!854 = !{null, !852}
!855 = !DISubroutineType(types: !856)
!856 = !{!120, !852, !55}
!857 = !DISubroutineType(types: !858)
!858 = !{!7, !852, !427, !859}
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!53, !852, !427}
!862 = !DISubroutineType(types: !863)
!863 = !{!761, !754, !427}
!864 = !DISubroutineType(types: !865)
!865 = !{!120, !852}
!866 = !DISubroutineType(types: !867)
!867 = !{!55, !55, !773}
!868 = !DISubroutineType(types: !869)
!869 = !{!55, !55}
!870 = !DISubroutineType(types: !871)
!871 = !{!120, !55}
!872 = !DISubroutineType(types: !873)
!873 = !{!120, !852, !852, !120}
!874 = !DISubroutineType(types: !875)
!875 = !{null, !852, !761}
!876 = !DISubroutineType(types: !877)
!877 = !{!53, !852, !427, !878, !120}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!761, !852}
!881 = !{!747}
!882 = !DIGlobalVariableExpression(var: !883, expr: !DIExpression())
!883 = distinct !DIGlobalVariable(name: "program_name", scope: !884, file: !922, line: 33, type: !115, isLocal: false, isDefinition: true)
!884 = distinct !DICompileUnit(language: DW_LANG_C99, file: !885, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !886, globals: !921, nameTableKind: None)
!885 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/clone/coreutils")
!886 = !{!53, !9, !115, !136, !887}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !890)
!890 = !{!891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !889, file: !4, line: 51, baseType: !7, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !889, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !889, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !889, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !889, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !889, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !889, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !889, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !889, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !889, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !889, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !889, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !889, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !889, file: !4, line: 70, baseType: !905, size: 64, offset: 832)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !889, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !889, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !889, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !889, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !889, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !889, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !889, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !889, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !889, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !889, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !889, file: !4, line: 93, baseType: !905, size: 64, offset: 1344)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !889, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !889, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !889, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !889, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!921 = !{!882}
!922 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/clone/coreutils")
!923 = !DIGlobalVariableExpression(var: !924, expr: !DIExpression())
!924 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !925, file: !954, line: 85, type: !943, isLocal: false, isDefinition: true)
!925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !926, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !927, retainedTypes: !942, globals: !1050, nameTableKind: None)
!926 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/clone/coreutils")
!927 = !{!928}
!928 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !929, line: 32, baseType: !70, size: 32, elements: !930)
!929 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/clone/coreutils")
!930 = !{!931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941}
!931 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!932 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!933 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!934 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!935 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!936 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!937 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!938 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!939 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!940 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!941 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!942 = !{!7, !33, !55, !943, !946, !950, !952, !962, !966, !968, !468, !970, !70, !971, !973, !115, !975, !964, !977, !979, !9, !134, !981, !561, !986, !988, !990, !992, !994, !996, !998, !1000, !1002, !1004, !1006, !1008, !1010, !1012, !1014, !1016, !1018, !1020, !1022, !120, !116, !1026, !1028, !1043, !1024, !1044, !1046, !1048}
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 704, elements: !944)
!944 = !{!945}
!945 = !DISubrange(count: 11)
!946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !947, size: 320, elements: !948)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!948 = !{!949}
!949 = !DISubrange(count: 10)
!950 = !DISubroutineType(types: !951)
!951 = !{!952, !952}
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !954, line: 65, size: 448, elements: !955)
!954 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/clone/coreutils")
!955 = !{!956, !957, !958, !960, !961}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !953, file: !954, line: 68, baseType: !928, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !953, file: !954, line: 71, baseType: !7, size: 32, offset: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !953, file: !954, line: 75, baseType: !959, size: 256, offset: 64)
!959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 256, elements: !642)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !953, file: !954, line: 78, baseType: !115, size: 64, offset: 320)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !953, file: !954, line: 81, baseType: !115, size: 64, offset: 384)
!962 = !DISubroutineType(types: !963)
!963 = !{!928, !964}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!966 = !DISubroutineType(types: !967)
!967 = !{null, !952, !928}
!968 = !DISubroutineType(types: !969)
!969 = !{!7, !952, !10, !7}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!7, !952, !7}
!973 = !DISubroutineType(types: !974)
!974 = !{null, !952, !115, !115}
!975 = !DISubroutineType(types: !976)
!976 = !{!55, !9, !55, !115, !55, !964}
!977 = !DISubroutineType(types: !978)
!978 = !{!9, !115, !55, !964}
!979 = !DISubroutineType(types: !980)
!980 = !{!9, !115, !55, !628, !964}
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !954, line: 834, size: 128, elements: !983)
!983 = !{!984, !985}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !982, file: !954, line: 836, baseType: !55, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !982, file: !954, line: 837, baseType: !9, size: 64, offset: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!9, !7, !115}
!988 = !DISubroutineType(types: !989)
!989 = !{!9, !7, !115, !55}
!990 = !DISubroutineType(types: !991)
!991 = !{!9, !115}
!992 = !DISubroutineType(types: !993)
!993 = !{!9, !115, !55}
!994 = !DISubroutineType(types: !995)
!995 = !{!9, !7, !928, !115}
!996 = !DISubroutineType(types: !997)
!997 = !{!9, !7, !928, !115, !55}
!998 = !DISubroutineType(types: !999)
!999 = !{!9, !928, !115}
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!9, !928, !115, !55}
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!9, !115, !55, !10}
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!9, !115, !10}
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!9, !7, !115, !115, !115}
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!9, !7, !115, !115, !115, !55}
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!9, !115, !115, !115}
!1012 = !DISubroutineType(types: !1013)
!1013 = !{!9, !115, !115, !115, !55}
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!115, !7, !115, !55}
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!115, !115, !55}
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!115, !7, !115}
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!115, !115}
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!55, !9, !55, !115, !55, !928, !7, !1024, !115, !115}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1029, line: 6, baseType: !1030)
!1029 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1031, line: 21, baseType: !1032)
!1031 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 13, size: 64, elements: !1033)
!1033 = !{!1034, !1035}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1032, file: !1031, line: 15, baseType: !7, size: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1032, file: !1031, line: 20, baseType: !1036, size: 32, offset: 32)
!1036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1032, file: !1031, line: 16, size: 32, elements: !1037)
!1037 = !{!1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1036, file: !1031, line: 18, baseType: !70, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1036, file: !1031, line: 19, baseType: !1040, size: 32)
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32, elements: !1041)
!1041 = !{!1042}
!1042 = !DISubrange(count: 4)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !56, line: 74, baseType: !7)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!115, !115, !928}
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!9, !7, !115, !55, !964}
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!953, !928}
!1050 = !{!923, !1051, !1053, !1055, !1057, !1059, !1061, !1063}
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !925, file: !954, line: 101, type: !946, isLocal: false, isDefinition: true)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !925, file: !954, line: 1052, type: !953, isLocal: false, isDefinition: true)
!1055 = !DIGlobalVariableExpression(var: !1056, expr: !DIExpression())
!1056 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !925, file: !954, line: 116, type: !953, isLocal: true, isDefinition: true)
!1057 = !DIGlobalVariableExpression(var: !1058, expr: !DIExpression())
!1058 = distinct !DIGlobalVariable(name: "slot0", scope: !925, file: !954, line: 842, type: !561, isLocal: true, isDefinition: true)
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "slotvec", scope: !925, file: !954, line: 845, type: !981, isLocal: true, isDefinition: true)
!1061 = !DIGlobalVariableExpression(var: !1062, expr: !DIExpression())
!1062 = distinct !DIGlobalVariable(name: "nslots", scope: !925, file: !954, line: 843, type: !7, isLocal: true, isDefinition: true)
!1063 = !DIGlobalVariableExpression(var: !1064, expr: !DIExpression())
!1064 = distinct !DIGlobalVariable(name: "slotvec0", scope: !925, file: !954, line: 844, type: !982, isLocal: true, isDefinition: true)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !1067, file: !1082, line: 74, type: !1092, isLocal: true, isDefinition: true)
!1067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1068, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1069, retainedTypes: !1077, globals: !1107, nameTableKind: None)
!1068 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mbarbar/clone/coreutils")
!1069 = !{!1070}
!1070 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !1071, line: 26, baseType: !70, size: 32, elements: !1072)
!1071 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mbarbar/clone/coreutils")
!1072 = !{!1073, !1074, !1075, !1076}
!1073 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!1074 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!1075 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!1076 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!1077 = !{!53, !1078, !9, !55, !1080, !7, !1088, !1092, !1094, !115, !1081, !228, !1087, !1103, !609, !1090, !1105, !1106}
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!9, !609, !1070}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !1082, line: 46, baseType: !1083)
!1082 = !DIFile(filename: "lib/savedir.c", directory: "/home/mbarbar/clone/coreutils")
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1082, line: 40, size: 128, elements: !1084)
!1084 = !{!1085, !1086}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1083, file: !1082, line: 42, baseType: !9, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1083, file: !1082, line: 44, baseType: !1087, size: 64, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !611, line: 34, baseType: !228)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1082, line: 72, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!7, !427, !427}
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 192, elements: !348)
!1093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !618, line: 22, size: 2240, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1102}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1096, file: !618, line: 25, baseType: !228, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1096, file: !618, line: 26, baseType: !29, size: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1096, file: !618, line: 31, baseType: !33, size: 16, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1096, file: !618, line: 32, baseType: !468, size: 8, offset: 144)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1096, file: !618, line: 33, baseType: !561, size: 2048, offset: 152)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{!9, !115, !1070}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1081)
!1107 = !{!1065}
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "letters", scope: !1110, file: !1131, line: 184, type: !1119, isLocal: true, isDefinition: true)
!1110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1111, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1112, globals: !1130, nameTableKind: None)
!1111 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mbarbar/clone/coreutils")
!1112 = !{!1113, !55, !9, !70, !7, !1116, !1119, !1122, !1115, !1124, !1126, !1128, !572, !129}
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!7, !9, !7, !53, !1115, !55}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1118, line: 33, flags: DIFlagFwdDecl)
!1118 = !DIFile(filename: "./lib/randint.h", directory: "/home/mbarbar/clone/coreutils")
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 504, elements: !1120)
!1120 = !{!1121}
!1121 = !DISubrange(count: 63)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!7, !9, !7, !7, !7, !55}
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!7, !9, !7, !7, !7}
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!7, !9, !7, !53, !1115}
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!120, !115, !55}
!1130 = !{!1108}
!1131 = !DIFile(filename: "lib/tempname.c", directory: "/home/mbarbar/clone/coreutils")
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "ht", scope: !1134, file: !1135, line: 163, type: !195, isLocal: true, isDefinition: true)
!1134 = distinct !DISubprogram(name: "utimecmpat", scope: !1135, file: !1135, line: 132, type: !1136, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1161, retainedNodes: !143)
!1135 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mbarbar/clone/coreutils")
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!7, !7, !115, !1138, !1138, !7}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1141)
!1141 = !{!1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1158, !1159, !1160}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1140, file: !318, line: 48, baseType: !231, size: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1140, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1140, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1140, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1140, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1140, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1140, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1140, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1140, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1140, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1140, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1140, file: !318, line: 91, baseType: !1154, size: 128, offset: 576)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1155)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1154, file: !338, line: 11, baseType: !341, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1154, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1140, file: !318, line: 92, baseType: !1154, size: 128, offset: 704)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1140, file: !318, line: 93, baseType: !1154, size: 128, offset: 832)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1140, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1161 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1162, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1163, globals: !1177, nameTableKind: None)
!1162 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mbarbar/clone/coreutils")
!1163 = !{!1164, !1136, !1166, !341, !7, !1168, !120, !231, !230, !1174, !343, !549, !1175, !551}
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!7, !115, !1138, !1138, !7}
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1167, line: 7, baseType: !341)
!1167 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1135, line: 66, size: 128, elements: !1170)
!1170 = !{!1171, !1172, !1173}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1169, file: !1135, line: 69, baseType: !230, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1169, file: !1135, line: 76, baseType: !7, size: 32, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1169, file: !1135, line: 80, baseType: !120, size: 8, offset: 96)
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1154, size: 256, elements: !209)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!1177 = !{!1132, !1178}
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1134, file: !1135, line: 166, type: !1168, isLocal: true, isDefinition: true)
!1180 = !DIGlobalVariableExpression(var: !1181, expr: !DIExpression())
!1181 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1182, file: !1232, line: 75, type: !7, isLocal: true, isDefinition: true)
!1182 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1183, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1184, globals: !1229, nameTableKind: None)
!1183 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mbarbar/clone/coreutils")
!1184 = !{!1185, !1193, !1194, !7, !343, !1195, !1202, !341, !1201, !120, !1166, !1203, !133, !1205, !1207}
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!7, !7, !115, !1187}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1189, file: !338, line: 11, baseType: !341, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1189, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1189, size: 256, elements: !209)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1196, size: 256, elements: !209)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1197, line: 8, size: 128, elements: !1198)
!1197 = !DIFile(filename: "/usr/include/bits/types/struct_timeval.h", directory: "")
!1198 = !{!1199, !1200}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1196, file: !1197, line: 10, baseType: !341, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1196, file: !1197, line: 11, baseType: !1201, size: 64, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !30, line: 162, baseType: !31)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!7, !115, !1187}
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!7, !1194}
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!120, !1209, !1228}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1211, file: !318, line: 48, baseType: !231, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1211, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1211, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1211, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1211, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1211, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1211, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1211, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1211, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1211, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1211, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1211, file: !318, line: 91, baseType: !1189, size: 128, offset: 576)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1211, file: !318, line: 92, baseType: !1189, size: 128, offset: 704)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1211, file: !318, line: 93, baseType: !1189, size: 128, offset: 832)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1211, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1229 = !{!1180, !1230}
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1182, file: !1232, line: 76, type: !7, isLocal: true, isDefinition: true)
!1232 = !DIFile(filename: "lib/utimens.c", directory: "/home/mbarbar/clone/coreutils")
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1235, file: !1242, line: 26, type: !1238, isLocal: false, isDefinition: true)
!1235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1236, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1237, globals: !1241, nameTableKind: None)
!1236 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/clone/coreutils")
!1237 = !{!1238}
!1238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 376, elements: !1239)
!1239 = !{!1240}
!1240 = !DISubrange(count: 47)
!1241 = !{!1233}
!1242 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/clone/coreutils")
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "initialized", scope: !1245, file: !1246, line: 34, type: !120, isLocal: true, isDefinition: true)
!1245 = distinct !DISubprogram(name: "can_write_any_file", scope: !1246, file: !1246, line: 32, type: !1247, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1249, retainedNodes: !143)
!1246 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mbarbar/clone/coreutils")
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!120}
!1249 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1250, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1251, globals: !1252, nameTableKind: None)
!1250 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mbarbar/clone/coreutils")
!1251 = !{!1247, !120}
!1252 = !{!1243, !1253}
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "can_write", scope: !1245, file: !1246, line: 35, type: !120, isLocal: true, isDefinition: true)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1257, file: !1306, line: 67, type: !646, isLocal: false, isDefinition: true)
!1257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1258, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1259, globals: !1305, nameTableKind: None)
!1258 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/clone/coreutils")
!1259 = !{!53, !115, !646, !1260, !55, !568, !120, !1262, !1263, !1265, !1267, !1301, !1303, !134}
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!568, !115, !1262, !427, !55}
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!1263 = !DISubroutineType(types: !1264)
!1264 = !{null, !115, !115, !568}
!1265 = !DISubroutineType(types: !1266)
!1266 = !{null, !1262, !427, !55}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1270)
!1270 = !{!1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1269, file: !4, line: 51, baseType: !7, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1269, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1269, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1269, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1269, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1269, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1269, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1269, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1269, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1269, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1269, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1269, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1269, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1269, file: !4, line: 70, baseType: !1285, size: 64, offset: 832)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1269, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1269, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1269, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1269, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1269, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1269, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1269, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1269, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1269, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1269, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1269, file: !4, line: 93, baseType: !1285, size: 64, offset: 1344)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1269, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1269, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1269, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1269, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!568, !115, !115, !1262, !427, !55, !646}
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!115, !427, !1262, !427, !55}
!1305 = !{!1255}
!1306 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/clone/coreutils")
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1309, file: !1310, line: 507, type: !7, isLocal: true, isDefinition: true)
!1309 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1310, file: !1310, line: 488, type: !419, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1311, retainedNodes: !143)
!1310 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mbarbar/clone/coreutils")
!1311 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1312, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1313, globals: !1323, nameTableKind: None)
!1312 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mbarbar/clone/coreutils")
!1313 = !{!419, !1314, !7, !53}
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !499, line: 14, baseType: !1315)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1312, line: 208, baseType: !1316)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1317, size: 192, elements: !38)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1312, line: 208, size: 192, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1317, file: !1312, line: 208, baseType: !70, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1317, file: !1312, line: 208, baseType: !70, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1317, file: !1312, line: 208, baseType: !53, size: 64, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1317, file: !1312, line: 208, baseType: !53, size: 64, offset: 128)
!1323 = !{!1307}
!1324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1325, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1326, retainedTypes: !1336, nameTableKind: None)
!1325 = !DIFile(filename: "src/remove.c", directory: "/home/mbarbar/clone/coreutils")
!1326 = !{!106, !100, !1327, !1332}
!1327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ternary", file: !1325, line: 35, baseType: !70, size: 32, elements: !1328)
!1328 = !{!1329, !1330, !1331}
!1329 = !DIEnumerator(name: "T_UNKNOWN", value: 2, isUnsigned: true)
!1330 = !DIEnumerator(name: "T_NO", value: 3, isUnsigned: true)
!1331 = !DIEnumerator(name: "T_YES", value: 4, isUnsigned: true)
!1332 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Prompt_action", file: !1325, line: 46, baseType: !70, size: 32, elements: !1333)
!1333 = !{!1334, !1335}
!1334 = !DIEnumerator(name: "PA_DESCEND_INTO_DIR", value: 2, isUnsigned: true)
!1335 = !DIEnumerator(name: "PA_REMOVE_DIR", value: 3, isUnsigned: true)
!1336 = !{!53, !7, !1337, !1340, !120, !1360, !1453, !1455, !1454, !33, !1361, !9, !568, !1351, !228, !227, !231, !230, !1457, !1458, !609, !1460, !1469, !1471, !1366, !31, !1473, !200, !115, !10, !1475, !1478, !1480, !1482, !133, !1483, !1517, !29, !1519, !1521, !1523, !1525, !307}
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!106, !1339, !1341}
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !101, line: 32, size: 256, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349, !1350, !1356, !1357, !1358, !1359}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !1343, file: !101, line: 35, baseType: !120, size: 8)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !1343, file: !101, line: 38, baseType: !100, size: 32, offset: 32)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !1343, file: !101, line: 47, baseType: !120, size: 8, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !1343, file: !101, line: 50, baseType: !120, size: 8, offset: 72)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !1343, file: !101, line: 53, baseType: !120, size: 8, offset: 80)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !1343, file: !101, line: 57, baseType: !1351, size: 64, offset: 128)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !1353)
!1353 = !{!1354, !1355}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1352, file: !224, line: 9, baseType: !227, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1352, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !1343, file: !101, line: 61, baseType: !120, size: 8, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !1343, file: !101, line: 64, baseType: !120, size: 8, offset: 200)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1343, file: !101, line: 67, baseType: !120, size: 8, offset: 208)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !1343, file: !101, line: 75, baseType: !120, size: 8, offset: 216)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1362, line: 197, baseType: !1363)
!1362 = !DIFile(filename: "./lib/fts_.h", directory: "/home/mbarbar/clone/coreutils")
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1362, line: 80, size: 1024, elements: !1364)
!1364 = !{!1365, !1415, !1416, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1431, !1432, !1435, !1442}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1363, file: !1362, line: 81, baseType: !1366, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1362, line: 199, size: 2112, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1385, !1386, !1387, !1388, !1411}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1367, file: !1362, line: 200, baseType: !1366, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1367, file: !1362, line: 201, baseType: !1366, size: 64, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1367, file: !1362, line: 202, baseType: !1366, size: 64, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1367, file: !1362, line: 203, baseType: !609, size: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1367, file: !1362, line: 206, baseType: !31, size: 64, offset: 256)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1367, file: !1362, line: 207, baseType: !53, size: 64, offset: 320)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1367, file: !1362, line: 208, baseType: !9, size: 64, offset: 384)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1367, file: !1362, line: 209, baseType: !9, size: 64, offset: 448)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1367, file: !1362, line: 210, baseType: !7, size: 32, offset: 512)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1367, file: !1362, line: 211, baseType: !7, size: 32, offset: 544)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1367, file: !1362, line: 212, baseType: !55, size: 64, offset: 576)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1367, file: !1362, line: 214, baseType: !1360, size: 64, offset: 640)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1367, file: !1362, line: 218, baseType: !568, size: 64, offset: 704)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1367, file: !1362, line: 220, baseType: !55, size: 64, offset: 768)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1367, file: !1362, line: 225, baseType: !1384, size: 64, offset: 832)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !161, line: 74, baseType: !323)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1367, file: !1362, line: 241, baseType: !33, size: 16, offset: 896)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1367, file: !1362, line: 245, baseType: !33, size: 16, offset: 912)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1367, file: !1362, line: 251, baseType: !33, size: 16, offset: 928)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1367, file: !1362, line: 253, baseType: !1389, size: 1152, offset: 960)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 1152, elements: !38)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1408, !1409, !1410}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1390, file: !318, line: 48, baseType: !231, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1390, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1390, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1390, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1390, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1390, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1390, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1390, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1390, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1390, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1390, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1390, file: !318, line: 91, baseType: !1404, size: 128, offset: 576)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1405)
!1405 = !{!1406, !1407}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1404, file: !338, line: 11, baseType: !341, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1404, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1390, file: !318, line: 92, baseType: !1404, size: 128, offset: 704)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1390, file: !318, line: 93, baseType: !1404, size: 128, offset: 832)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1390, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1367, file: !1362, line: 254, baseType: !1412, offset: 2112)
!1412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, elements: !1413)
!1413 = !{!1414}
!1414 = !DISubrange(count: -1)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1363, file: !1362, line: 82, baseType: !1366, size: 64, offset: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1363, file: !1362, line: 83, baseType: !1417, size: 64, offset: 128)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1363, file: !1362, line: 84, baseType: !230, size: 64, offset: 192)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1363, file: !1362, line: 85, baseType: !9, size: 64, offset: 256)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1363, file: !1362, line: 86, baseType: !7, size: 32, offset: 320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1363, file: !1362, line: 87, baseType: !7, size: 32, offset: 352)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1363, file: !1362, line: 89, baseType: !55, size: 64, offset: 384)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1363, file: !1362, line: 90, baseType: !55, size: 64, offset: 448)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1363, file: !1362, line: 91, baseType: !1425, size: 64, offset: 512)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!7, !1428, !1428}
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1363, file: !1362, line: 160, baseType: !7, size: 32, offset: 576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1363, file: !1362, line: 169, baseType: !1433, size: 64, offset: 640)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1362, line: 169, flags: DIFlagFwdDecl)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1363, file: !1362, line: 191, baseType: !1436, size: 64, offset: 704)
!1436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1363, file: !1362, line: 171, size: 64, elements: !1437)
!1437 = !{!1438, !1439}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1436, file: !1362, line: 184, baseType: !1433, size: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1436, file: !1362, line: 190, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1362, line: 190, flags: DIFlagFwdDecl)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1363, file: !1362, line: 196, baseType: !1443, size: 256, offset: 768)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1444, line: 39, baseType: !1445)
!1444 = !DIFile(filename: "./lib/i-ring.h", directory: "/home/mbarbar/clone/coreutils")
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1444, line: 31, size: 256, elements: !1446)
!1446 = !{!1447, !1449, !1450, !1451, !1452}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1445, file: !1444, line: 33, baseType: !1448, size: 128)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1041)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1445, file: !1444, line: 34, baseType: !7, size: 32, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1445, file: !1444, line: 35, baseType: !70, size: 32, offset: 160)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1445, file: !1444, line: 36, baseType: !70, size: 32, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1445, file: !1444, line: 37, baseType: !120, size: 8, offset: 224)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1362, line: 255, baseType: !1367)
!1455 = !DISubroutineType(types: !1456)
!1456 = !{!106, !1360, !1453, !1341}
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ternary", file: !1325, line: 41, baseType: !1327)
!1458 = !DISubroutineType(types: !1459)
!1459 = !{!120, !7, !115}
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !618, line: 22, size: 2240, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1462, file: !618, line: 25, baseType: !228, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1462, file: !618, line: 26, baseType: !29, size: 64, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1462, file: !618, line: 31, baseType: !33, size: 16, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1462, file: !618, line: 32, baseType: !468, size: 8, offset: 144)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1462, file: !618, line: 33, baseType: !561, size: 2048, offset: 152)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!1460, !609}
!1471 = !DISubroutineType(types: !1472)
!1472 = !{null, !1453}
!1473 = !DISubroutineType(types: !1474)
!1474 = !{null, !1360, !1453}
!1475 = !DISubroutineType(types: !1476)
!1476 = !{!106, !1477, !1479, !120, !1341, !1332, !1481}
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1485)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1486)
!1486 = !{!1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1485, file: !4, line: 51, baseType: !7, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1485, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1485, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1485, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1485, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1485, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1485, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1485, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1485, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1485, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1485, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1485, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1485, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1485, file: !4, line: 70, baseType: !1501, size: 64, offset: 832)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1485, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1485, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1485, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1485, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1485, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1485, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1485, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1485, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1485, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1485, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1485, file: !4, line: 93, baseType: !1501, size: 64, offset: 1344)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1485, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1485, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1485, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1485, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!1482, !1482}
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!7, !7, !115, !1482}
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!7, !7, !115, !1482, !7}
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!106, !1360, !1453, !1341, !120}
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!120, !1341, !7}
!1527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1528, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1529, nameTableKind: None)
!1528 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mbarbar/clone/coreutils")
!1529 = !{!1530, !1531, !7, !55, !1543, !120, !70, !1549, !1551, !1578, !1567, !1556, !1561, !1247}
!1530 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !161, line: 85, baseType: !29)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{null, !7, !1533}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !433, line: 36, size: 384, elements: !1535)
!1535 = !{!1536, !1537, !1538, !1539, !1540, !1541, !1542}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1534, file: !433, line: 39, baseType: !7, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !1534, file: !433, line: 42, baseType: !1530, size: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1534, file: !433, line: 45, baseType: !70, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !1534, file: !433, line: 48, baseType: !55, size: 64, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !1534, file: !433, line: 52, baseType: !120, size: 8, offset: 256)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !1534, file: !433, line: 55, baseType: !120, size: 8, offset: 264)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !1534, file: !433, line: 58, baseType: !1543, size: 64, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !433, line: 23, size: 192, elements: !1545)
!1545 = !{!1546, !1547, !1548}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1544, file: !433, line: 26, baseType: !1530, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1544, file: !433, line: 29, baseType: !1530, size: 64, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1544, file: !433, line: 32, baseType: !70, size: 32, offset: 128)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!120, !1533}
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1553, line: 35, size: 256, elements: !1554)
!1553 = !DIFile(filename: "src/fiemap.h", directory: "/home/mbarbar/clone/coreutils")
!1554 = !{!1555, !1559, !1560, !1563, !1564, !1565, !1566}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1552, file: !1553, line: 38, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1557, line: 27, baseType: !1558)
!1557 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !30, line: 45, baseType: !57)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1552, file: !1553, line: 41, baseType: !1556, size: 64, offset: 64)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1552, file: !1553, line: 44, baseType: !1561, size: 32, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1557, line: 26, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !30, line: 42, baseType: !70)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1552, file: !1553, line: 47, baseType: !1561, size: 32, offset: 160)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1552, file: !1553, line: 50, baseType: !1561, size: 32, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1552, file: !1553, line: 52, baseType: !1561, size: 32, offset: 224)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1552, file: !1553, line: 55, baseType: !1567, offset: 256)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1568, elements: !1413)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1553, line: 14, size: 448, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1575, !1576}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1568, file: !1553, line: 18, baseType: !1556, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1568, file: !1553, line: 22, baseType: !1556, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1568, file: !1553, line: 25, baseType: !1556, size: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1568, file: !1553, line: 27, baseType: !1574, size: 128, offset: 192)
!1574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1556, size: 128, elements: !209)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1568, file: !1553, line: 30, baseType: !1561, size: 32, offset: 320)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1568, file: !1553, line: 32, baseType: !1577, size: 96, offset: 352)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1561, size: 96, elements: !348)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1580, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, nameTableKind: None)
!1580 = !DIFile(filename: "src/selinux.c", directory: "/home/mbarbar/clone/coreutils")
!1581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1582, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1583, nameTableKind: None)
!1582 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1583 = !{!1584, !7}
!1584 = !DISubroutineType(types: !1585)
!1585 = !{!7, !115, !7, !115, !7, !160}
!1586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1587, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1588, nameTableKind: None)
!1587 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1588 = !{!1589, !7}
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!7, !115, !7, !160}
!1591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1592, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1593, nameTableKind: None)
!1592 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/clone/coreutils")
!1593 = !{!53, !992, !55, !608, !1594, !9, !7}
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1024, elements: !1595)
!1595 = !{!1596}
!1596 = !DISubrange(count: 128)
!1597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1598, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !634, retainedTypes: !1599, nameTableKind: None)
!1598 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mbarbar/clone/coreutils")
!1599 = !{!636}
!1600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1601, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1602, nameTableKind: None)
!1601 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mbarbar/clone/coreutils")
!1602 = !{!1603, !55}
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!55, !55, !55, !55}
!1605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1606, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1607, nameTableKind: None)
!1606 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/clone/coreutils")
!1607 = !{!990, !9}
!1608 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1609, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1610, nameTableKind: None)
!1609 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1610 = !{!1611, !55, !115, !990, !120, !9}
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!55, !115}
!1613 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1614, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1615, nameTableKind: None)
!1614 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1615 = !{!9, !990, !115, !120, !116, !1611, !55}
!1616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1617, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1618, nameTableKind: None)
!1617 = !DIFile(filename: "./lib/stripslash.c", directory: "/home/mbarbar/clone/coreutils")
!1618 = !{!1619, !9, !120, !10}
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!120, !9}
!1621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1622, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1623, retainedTypes: !1633, nameTableKind: None)
!1622 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mbarbar/clone/coreutils")
!1623 = !{!1624}
!1624 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1625, line: 45, baseType: !70, size: 32, elements: !1626)
!1625 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mbarbar/clone/coreutils")
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632}
!1627 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1628 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1629 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1630 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1631 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1632 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1633 = !{!1634, !1637}
!1634 = !DISubroutineType(types: !1635)
!1635 = !{null, !7, !248, !248, !1636}
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1625, line: 52, baseType: !1624)
!1637 = !DISubroutineType(types: !1638)
!1638 = !{null, !1639, !1636}
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1642)
!1642 = !{!1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1641, file: !4, line: 51, baseType: !7, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1641, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1641, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1641, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1641, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1641, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1641, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1641, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1641, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1641, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1641, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1641, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1641, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1641, file: !4, line: 70, baseType: !1657, size: 64, offset: 832)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1641, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1641, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1641, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1641, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1641, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1641, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1641, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1641, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1641, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1641, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1641, file: !4, line: 93, baseType: !1657, size: 64, offset: 1344)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1641, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1641, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1641, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1641, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1674, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1675, nameTableKind: None)
!1674 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mbarbar/clone/coreutils")
!1675 = !{!1676, !160, !1678}
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!7, !115, !7}
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !499, line: 14, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1674, line: 35, baseType: !1680)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1681, size: 192, elements: !38)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1674, line: 35, size: 192, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1681, file: !1674, line: 35, baseType: !70, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1681, file: !1674, line: 35, baseType: !70, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1681, file: !1674, line: 35, baseType: !53, size: 64, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1681, file: !1674, line: 35, baseType: !53, size: 64, offset: 128)
!1687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1688, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1689, nameTableKind: None)
!1688 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/clone/coreutils")
!1689 = !{!53, !9, !1690, !1715, !228, !227, !231, !230, !1722}
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !195, !115, !1692}
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1695)
!1695 = !{!1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1712, !1713, !1714}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1694, file: !318, line: 48, baseType: !231, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1694, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1694, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1694, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1694, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1694, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1694, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1694, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1694, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1694, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1694, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1694, file: !318, line: 91, baseType: !1708, size: 128, offset: 576)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1709)
!1709 = !{!1710, !1711}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1708, file: !338, line: 11, baseType: !341, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1708, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1694, file: !318, line: 92, baseType: !1708, size: 128, offset: 704)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1694, file: !318, line: 93, baseType: !1708, size: 128, offset: 832)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1694, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1717, line: 9, size: 192, elements: !1718)
!1717 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/clone/coreutils")
!1718 = !{!1719, !1720, !1721}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1716, file: !1717, line: 11, baseType: !9, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1716, file: !1717, line: 12, baseType: !227, size: 64, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1716, file: !1717, line: 13, baseType: !230, size: 64, offset: 128)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!120, !1724, !115, !1692}
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!1726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1727, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1728, nameTableKind: None)
!1727 = !DIFile(filename: "./lib/file-type.c", directory: "/home/mbarbar/clone/coreutils")
!1728 = !{!1729, !133, !29}
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!115, !1731}
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1751, !1752, !1753}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1733, file: !318, line: 48, baseType: !231, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1733, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1733, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1733, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1733, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1733, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1733, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1733, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1733, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1733, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1733, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1733, file: !318, line: 91, baseType: !1747, size: 128, offset: 576)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1748)
!1748 = !{!1749, !1750}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1747, file: !338, line: 11, baseType: !341, size: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1747, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1733, file: !318, line: 92, baseType: !1747, size: 128, offset: 704)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1733, file: !318, line: 93, baseType: !1747, size: 128, offset: 832)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1733, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1754 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1755, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1756, nameTableKind: None)
!1755 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/clone/coreutils")
!1756 = !{!1757, !9, !1759, !133, !1784}
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !160, !9}
!1759 = !DISubroutineType(types: !1760)
!1760 = !{null, !1761, !9}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1781, !1782, !1783}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1763, file: !318, line: 48, baseType: !231, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1763, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1763, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1763, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1763, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1763, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1763, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1763, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1763, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1763, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1763, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1763, file: !318, line: 91, baseType: !1777, size: 128, offset: 576)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1778)
!1778 = !{!1779, !1780}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1777, file: !338, line: 11, baseType: !341, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1777, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1763, file: !318, line: 92, baseType: !1777, size: 128, offset: 704)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1763, file: !318, line: 93, baseType: !1777, size: 128, offset: 832)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1763, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!10, !160}
!1786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1787, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1788, nameTableKind: None)
!1787 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/clone/coreutils")
!1788 = !{!53, !1789, !9}
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!9, !115, !115, !119}
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1793, nameTableKind: None)
!1792 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1793 = !{!53, !1789, !115, !55, !10, !116, !9}
!1794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1795, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1796, nameTableKind: None)
!1795 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mbarbar/clone/coreutils")
!1796 = !{!115, !55, !1797, !7}
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!55, !7, !427, !55}
!1799 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1800, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1801, nameTableKind: None)
!1800 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/clone/coreutils")
!1801 = !{!549, !1802, !55, !9, !227, !551, !230, !547, !1809}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1717, line: 9, size: 192, elements: !1805)
!1805 = !{!1806, !1807, !1808}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1804, file: !1717, line: 11, baseType: !9, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1804, file: !1717, line: 12, baseType: !227, size: 64, offset: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1804, file: !1717, line: 13, baseType: !230, size: 64, offset: 128)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1811, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1812, nameTableKind: None)
!1811 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mbarbar/clone/coreutils")
!1812 = !{!1813, !7, !609}
!1813 = !DISubroutineType(types: !1814)
!1814 = !{!609, !7, !115, !7, !129}
!1815 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1816, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1817, nameTableKind: None)
!1816 = !DIFile(filename: "./lib/priv-set.c", directory: "/home/mbarbar/clone/coreutils")
!1817 = !{!1818}
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!7}
!1820 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1821, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1583, nameTableKind: None)
!1821 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1822 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1823, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1824, nameTableKind: None)
!1823 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1824 = !{!1589, !7, !160}
!1825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1826, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1827, nameTableKind: None)
!1826 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mbarbar/clone/coreutils")
!1827 = !{!9, !1828, !7, !55, !120, !115, !133, !1830}
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!7, !7, !115, !7, !115, !70}
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!7, !7}
!1832 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1833, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1834, nameTableKind: None)
!1833 = !DIFile(filename: "./lib/root-dev-ino.c", directory: "/home/mbarbar/clone/coreutils")
!1834 = !{!1835, !228, !227, !231, !230}
!1835 = !DISubroutineType(types: !1836)
!1836 = !{!1837, !1837}
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !1839)
!1839 = !{!1840, !1841}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1838, file: !224, line: 9, baseType: !227, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1838, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!1842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1843, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1844, nameTableKind: None)
!1843 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mbarbar/clone/coreutils")
!1844 = !{!1797, !608, !7}
!1845 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1846, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1847, nameTableKind: None)
!1846 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/clone/coreutils")
!1847 = !{!1848, !1850, !115, !55, !120, !9, !7, !228, !231}
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!120, !115, !115}
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!120, !7, !115, !7, !115}
!1852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1853, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1854, nameTableKind: None)
!1853 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/clone/coreutils")
!1854 = !{!1855, !7, !1860, !1862, !1864, !1866, !1868, !1870, !1872, !1874, !1877, !1879}
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!7, !1857}
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1859, line: 83, baseType: !9)
!1859 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/clone/coreutils")
!1860 = !DISubroutineType(types: !1861)
!1861 = !{null, !1858}
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!7, !1858}
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!7, !115, !160, !1857}
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!7, !115, !1857}
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!7, !7, !1857}
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!7, !115, !1858}
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!7, !7, !1858}
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!7, !1858, !1858, !1876, !1857}
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1859, line: 82, baseType: !33)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!1876, !115}
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!7, !115, !115}
!1881 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1882, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1883, nameTableKind: None)
!1882 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/clone/coreutils")
!1883 = !{!1884, !343, !1909, !341, !1911}
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!31, !1886}
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1906, !1907, !1908}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1888, file: !318, line: 48, baseType: !231, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1888, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1888, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1888, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1888, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1888, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1888, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1888, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1888, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1888, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1888, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1888, file: !318, line: 91, baseType: !1902, size: 128, offset: 576)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1903)
!1903 = !{!1904, !1905}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1902, file: !338, line: 11, baseType: !341, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1902, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1888, file: !318, line: 92, baseType: !1902, size: 128, offset: 704)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1888, file: !318, line: 93, baseType: !1902, size: 128, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1888, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!1902, !1886}
!1911 = !DISubroutineType(types: !1912)
!1912 = !{!7, !7, !1913}
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1915, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1916, nameTableKind: None)
!1915 = !DIFile(filename: "./lib/statat.c", directory: "/home/mbarbar/clone/coreutils")
!1916 = !{!1917}
!1917 = !DISubroutineType(types: !1918)
!1918 = !{!7, !7, !115, !1919}
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1938, !1939, !1940}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1920, file: !318, line: 48, baseType: !231, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1920, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1920, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1920, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1920, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1920, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1920, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1920, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1920, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1920, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1920, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1920, file: !318, line: 91, baseType: !1934, size: 128, offset: 576)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !1935)
!1935 = !{!1936, !1937}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1934, file: !338, line: 11, baseType: !341, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1934, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1920, file: !318, line: 92, baseType: !1934, size: 128, offset: 704)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1920, file: !318, line: 93, baseType: !1934, size: 128, offset: 832)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1920, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!1941 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1942, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1943, nameTableKind: None)
!1942 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mbarbar/clone/coreutils")
!1943 = !{!1830, !7}
!1944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1945, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1946, nameTableKind: None)
!1945 = !DIFile(filename: "./lib/verror.c", directory: "/home/mbarbar/clone/coreutils")
!1946 = !{!1947, !1956, !9, !7}
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !7, !7, !115, !1949}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1945, size: 192, elements: !1951)
!1951 = !{!1952, !1953, !1954, !1955}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1950, file: !1945, baseType: !70, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1950, file: !1945, baseType: !70, size: 32, offset: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1950, file: !1945, baseType: !53, size: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1950, file: !1945, baseType: !53, size: 64, offset: 128)
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !7, !7, !115, !70, !115, !1949}
!1958 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1959, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !1960, nameTableKind: None)
!1959 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/clone/coreutils")
!1960 = !{!53, !1961, !1997, !1262, !1998, !55, !2000, !2009, !2010, !2012, !134, !1963}
!1961 = !DISubroutineType(types: !1962)
!1962 = !{null, !1963, !115, !115, !115, !1262, !55}
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1966)
!1966 = !{!1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1965, file: !4, line: 51, baseType: !7, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1965, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1965, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1965, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1965, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1965, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1965, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1965, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1965, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1965, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1965, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1965, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1965, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1965, file: !4, line: 70, baseType: !1981, size: 64, offset: 832)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1965, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1965, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1965, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1965, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1965, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1965, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1965, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1965, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1965, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1965, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1965, file: !4, line: 93, baseType: !1981, size: 64, offset: 1344)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1965, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1965, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1965, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1965, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, elements: !1413)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !1963, !115, !115, !115, !1262}
!2000 = !DISubroutineType(types: !2001)
!2001 = !{null, !1963, !115, !115, !115, !2002}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1959, line: 192, size: 192, elements: !2004)
!2004 = !{!2005, !2006, !2007, !2008}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2003, file: !1959, line: 192, baseType: !70, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2003, file: !1959, line: 192, baseType: !70, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2003, file: !1959, line: 192, baseType: !53, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2003, file: !1959, line: 192, baseType: !53, size: 64, offset: 128)
!2009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 640, elements: !948)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{null, !1963, !115, !115, !115}
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !249, line: 52, baseType: !2013)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !499, line: 32, baseType: !2014)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1959, line: 234, baseType: !2015)
!2015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2003, size: 192, elements: !38)
!2016 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2017, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2018, nameTableKind: None)
!2017 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/clone/coreutils")
!2018 = !{!55, !9, !53, !2019, !2021, !2023, !2025, !2027, !2029, !2031, !425, !990}
!2019 = !DISubroutineType(types: !2020)
!2020 = !{!53, !55, !55}
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!53, !53, !55, !55}
!2023 = !DISubroutineType(types: !2024)
!2024 = !{!53, !53, !628, !55}
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!9, !55}
!2027 = !DISubroutineType(types: !2028)
!2028 = !{!53, !55}
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!53, !53, !55}
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!53, !53, !628}
!2033 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2034, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2035, nameTableKind: None)
!2034 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/clone/coreutils")
!2035 = !{!134, !692}
!2036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2037, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2038, nameTableKind: None)
!2037 = !DIFile(filename: "./lib/xfts.c", directory: "/home/mbarbar/clone/coreutils")
!2038 = !{!53, !2039, !2041, !7, !2130, !2133, !2128, !568}
!2039 = !DISubroutineType(types: !2040)
!2040 = !{!2041, !1339, !7, !2123}
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1362, line: 197, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1362, line: 80, size: 1024, elements: !2044)
!2044 = !{!2045, !2091, !2092, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2107, !2108, !2109, !2114}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !2043, file: !1362, line: 81, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1362, line: 199, size: 2112, elements: !2048)
!2048 = !{!2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2090}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2047, file: !1362, line: 200, baseType: !2046, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !2047, file: !1362, line: 201, baseType: !2046, size: 64, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !2047, file: !1362, line: 202, baseType: !2046, size: 64, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !2047, file: !1362, line: 203, baseType: !609, size: 64, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !2047, file: !1362, line: 206, baseType: !31, size: 64, offset: 256)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !2047, file: !1362, line: 207, baseType: !53, size: 64, offset: 320)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !2047, file: !1362, line: 208, baseType: !9, size: 64, offset: 384)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2047, file: !1362, line: 209, baseType: !9, size: 64, offset: 448)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !2047, file: !1362, line: 210, baseType: !7, size: 32, offset: 512)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !2047, file: !1362, line: 211, baseType: !7, size: 32, offset: 544)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2047, file: !1362, line: 212, baseType: !55, size: 64, offset: 576)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !2047, file: !1362, line: 214, baseType: !2041, size: 64, offset: 640)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !2047, file: !1362, line: 218, baseType: !568, size: 64, offset: 704)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !2047, file: !1362, line: 220, baseType: !55, size: 64, offset: 768)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !2047, file: !1362, line: 225, baseType: !1384, size: 64, offset: 832)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !2047, file: !1362, line: 241, baseType: !33, size: 16, offset: 896)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !2047, file: !1362, line: 245, baseType: !33, size: 16, offset: 912)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !2047, file: !1362, line: 251, baseType: !33, size: 16, offset: 928)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !2047, file: !1362, line: 253, baseType: !2068, size: 1152, offset: 960)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2069, size: 1152, elements: !38)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2087, !2088, !2089}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2069, file: !318, line: 48, baseType: !231, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2069, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2069, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2069, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2069, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2069, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2069, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2069, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2069, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2069, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2069, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2069, file: !318, line: 91, baseType: !2083, size: 128, offset: 576)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2083, file: !338, line: 11, baseType: !341, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2083, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2069, file: !318, line: 92, baseType: !2083, size: 128, offset: 704)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2069, file: !318, line: 93, baseType: !2083, size: 128, offset: 832)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2069, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !2047, file: !1362, line: 254, baseType: !1412, offset: 2112)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !2043, file: !1362, line: 82, baseType: !2046, size: 64, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !2043, file: !1362, line: 83, baseType: !2093, size: 64, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !2043, file: !1362, line: 84, baseType: !230, size: 64, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2043, file: !1362, line: 85, baseType: !9, size: 64, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !2043, file: !1362, line: 86, baseType: !7, size: 32, offset: 320)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !2043, file: !1362, line: 87, baseType: !7, size: 32, offset: 352)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2043, file: !1362, line: 89, baseType: !55, size: 64, offset: 384)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !2043, file: !1362, line: 90, baseType: !55, size: 64, offset: 448)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !2043, file: !1362, line: 91, baseType: !2101, size: 64, offset: 512)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{!7, !2104, !2104}
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2047)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !2043, file: !1362, line: 160, baseType: !7, size: 32, offset: 576)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !2043, file: !1362, line: 169, baseType: !1433, size: 64, offset: 640)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2043, file: !1362, line: 191, baseType: !2110, size: 64, offset: 704)
!2110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2043, file: !1362, line: 171, size: 64, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2110, file: !1362, line: 184, baseType: !1433, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2110, file: !1362, line: 190, baseType: !1440, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !2043, file: !1362, line: 196, baseType: !2115, size: 256, offset: 768)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1444, line: 39, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1444, line: 31, size: 256, elements: !2117)
!2117 = !{!2118, !2119, !2120, !2121, !2122}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2116, file: !1444, line: 33, baseType: !1448, size: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2116, file: !1444, line: 34, baseType: !7, size: 32, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2116, file: !1444, line: 35, baseType: !70, size: 32, offset: 160)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2116, file: !1444, line: 36, baseType: !70, size: 32, offset: 192)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2116, file: !1444, line: 37, baseType: !120, size: 8, offset: 224)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!7, !2126, !2126}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2129)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1362, line: 255, baseType: !2047)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{!120, !2132, !2127}
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2042)
!2134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2135, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2136, nameTableKind: None)
!2135 = !DIFile(filename: "./lib/xvasprintf.c", directory: "/home/mbarbar/clone/coreutils")
!2136 = !{!9, !2137, !55, !115, !116, !7, !2146, !2148, !10}
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!9, !115, !2139}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2135, size: 192, elements: !2141)
!2141 = !{!2142, !2143, !2144, !2145}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2140, file: !2135, baseType: !70, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2140, file: !2135, baseType: !70, size: 32, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2140, file: !2135, baseType: !53, size: 64, offset: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2140, file: !2135, baseType: !53, size: 64, offset: 128)
!2146 = !DISubroutineType(types: !2147)
!2147 = !{!9, !55, !2139}
!2148 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !249, line: 52, baseType: !2149)
!2149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !499, line: 32, baseType: !2150)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2135, line: 36, baseType: !2151)
!2151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2140, size: 192, elements: !38)
!2152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2153, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2154, nameTableKind: None)
!2153 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mbarbar/clone/coreutils")
!2154 = !{!1247, !120, !9, !55, !608, !2155}
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2158)
!2158 = !{!2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2157, file: !4, line: 51, baseType: !7, size: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2157, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2157, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2157, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2157, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2157, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2157, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2157, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2157, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2157, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2157, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2157, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2157, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2157, file: !4, line: 70, baseType: !2173, size: 64, offset: 832)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2157, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2157, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2157, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2157, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2157, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2157, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2157, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2157, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2157, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2157, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2157, file: !4, line: 93, baseType: !2173, size: 64, offset: 1344)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2157, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2157, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2157, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2157, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2189 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2190, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2191, nameTableKind: None)
!2190 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/clone/coreutils")
!2191 = !{!53, !2192, !2228, !2195, !7}
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!7, !2194}
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2196)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2197)
!2197 = !{!2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2196, file: !4, line: 51, baseType: !7, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2196, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2196, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2196, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2196, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2196, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2196, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2196, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2196, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2196, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2196, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2196, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2196, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2196, file: !4, line: 70, baseType: !2212, size: 64, offset: 832)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2196, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2196, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2196, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2196, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2196, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2196, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2196, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2196, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2196, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2196, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2196, file: !4, line: 93, baseType: !2212, size: 64, offset: 1344)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2196, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2196, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2196, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2196, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2228 = !DISubroutineType(types: !2229)
!2229 = !{null, !2194}
!2230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2231, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2232, nameTableKind: None)
!2231 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mbarbar/clone/coreutils")
!2232 = !{!2233, !2236, !9, !7}
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!55, !2235}
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2237)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2238)
!2238 = !{!2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2237, file: !4, line: 51, baseType: !7, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2237, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2237, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2237, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2237, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2237, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2237, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2237, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2237, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2237, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2237, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2237, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2237, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2237, file: !4, line: 70, baseType: !2253, size: 64, offset: 832)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2237, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2237, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2237, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2237, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2237, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2237, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2237, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2237, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2237, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2237, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2237, file: !4, line: 93, baseType: !2253, size: 64, offset: 1344)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2237, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2237, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2237, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2237, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2270, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2271, nameTableKind: None)
!2270 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/clone/coreutils")
!2271 = !{!53, !2272, !2275, !9, !248, !7, !44}
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!7, !2274, !248, !7}
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2277)
!2277 = !{!2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2276, file: !4, line: 51, baseType: !7, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2276, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2276, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2276, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2276, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2276, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2276, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2276, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2276, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2276, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2276, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2276, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2276, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2276, file: !4, line: 70, baseType: !2292, size: 64, offset: 832)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2276, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2276, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2276, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2276, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2276, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2276, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2276, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2276, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2276, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2276, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2276, file: !4, line: 93, baseType: !2292, size: 64, offset: 1344)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2276, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2276, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2276, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2276, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2309, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2310, retainedTypes: !2317, nameTableKind: None)
!2309 = !DIFile(filename: "./lib/fts.c", directory: "/home/mbarbar/clone/coreutils")
!2310 = !{!2311}
!2311 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "leaf_optimization", file: !2312, line: 643, baseType: !70, size: 32, elements: !2313)
!2312 = !DIFile(filename: "lib/fts.c", directory: "/home/mbarbar/clone/coreutils")
!2313 = !{!2314, !2315, !2316}
!2314 = !DIEnumerator(name: "NO_LEAF_OPTIMIZATION", value: 0, isUnsigned: true)
!2315 = !DIEnumerator(name: "OK_LEAF_OPTIMIZATION", value: 1, isUnsigned: true)
!2316 = !DIEnumerator(name: "NOSTAT_LEAF_OPTIMIZATION", value: 2, isUnsigned: true)
!2317 = !{!53, !1384, !458, !9, !31, !1089, !2318, !2415, !2337, !2420, !55, !120, !7, !2338, !2352, !1340, !2321, !568, !115, !2325, !33, !2421, !2344, !1433, !2423, !231, !230, !609, !10, !29, !133, !2425, !2427, !2429, !2431, !2361, !549, !2433, !227, !551, !2441, !2444, !2445, !2448, !2450, !2452, !228, !2454, !2456, !2320, !2460, !2462, !2458, !2459, !2467, !2469, !2471, !2472, !323, !2474, !561, !468, !2482, !160, !2485, !2353, !2355, !2487, !2484, !1412, !2489, !2491, !1090, !2492, !2494, !2496, !2498, !2500}
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2321)
!2321 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1362, line: 255, baseType: !2322)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1362, line: 199, size: 2112, elements: !2323)
!2323 = !{!2324, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2414}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2322, file: !1362, line: 200, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !2322, file: !1362, line: 201, baseType: !2325, size: 64, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !2322, file: !1362, line: 202, baseType: !2325, size: 64, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !2322, file: !1362, line: 203, baseType: !609, size: 64, offset: 192)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !2322, file: !1362, line: 206, baseType: !31, size: 64, offset: 256)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !2322, file: !1362, line: 207, baseType: !53, size: 64, offset: 320)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !2322, file: !1362, line: 208, baseType: !9, size: 64, offset: 384)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2322, file: !1362, line: 209, baseType: !9, size: 64, offset: 448)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !2322, file: !1362, line: 210, baseType: !7, size: 32, offset: 512)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !2322, file: !1362, line: 211, baseType: !7, size: 32, offset: 544)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2322, file: !1362, line: 212, baseType: !55, size: 64, offset: 576)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !2322, file: !1362, line: 214, baseType: !2337, size: 64, offset: 640)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1362, line: 197, baseType: !2339)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1362, line: 80, size: 1024, elements: !2340)
!2340 = !{!2341, !2342, !2343, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2358, !2359, !2360, !2376}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !2339, file: !1362, line: 81, baseType: !2325, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !2339, file: !1362, line: 82, baseType: !2325, size: 64, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !2339, file: !1362, line: 83, baseType: !2344, size: 64, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !2339, file: !1362, line: 84, baseType: !230, size: 64, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2339, file: !1362, line: 85, baseType: !9, size: 64, offset: 256)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !2339, file: !1362, line: 86, baseType: !7, size: 32, offset: 320)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !2339, file: !1362, line: 87, baseType: !7, size: 32, offset: 352)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2339, file: !1362, line: 89, baseType: !55, size: 64, offset: 384)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !2339, file: !1362, line: 90, baseType: !55, size: 64, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !2339, file: !1362, line: 91, baseType: !2352, size: 64, offset: 512)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!7, !2355, !2355}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2322)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !2339, file: !1362, line: 160, baseType: !7, size: 32, offset: 576)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !2339, file: !1362, line: 169, baseType: !1433, size: 64, offset: 640)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2339, file: !1362, line: 191, baseType: !2361, size: 64, offset: 704)
!2361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2339, file: !1362, line: 171, size: 64, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2361, file: !1362, line: 184, baseType: !1433, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2361, file: !1362, line: 190, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !2367, line: 28, size: 256, elements: !2368)
!2367 = !DIFile(filename: "./lib/cycle-check.h", directory: "/home/mbarbar/clone/coreutils")
!2368 = !{!2369, !2374, !2375}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !2366, file: !2367, line: 30, baseType: !2370, size: 128)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !2371)
!2371 = !{!2372, !2373}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2370, file: !224, line: 9, baseType: !227, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2370, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !2366, file: !2367, line: 31, baseType: !458, size: 64, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2366, file: !2367, line: 32, baseType: !7, size: 32, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !2339, file: !1362, line: 196, baseType: !2377, size: 256, offset: 768)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1444, line: 39, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1444, line: 31, size: 256, elements: !2379)
!2379 = !{!2380, !2381, !2382, !2383, !2384}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2378, file: !1444, line: 33, baseType: !1448, size: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2378, file: !1444, line: 34, baseType: !7, size: 32, offset: 128)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2378, file: !1444, line: 35, baseType: !70, size: 32, offset: 160)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2378, file: !1444, line: 36, baseType: !70, size: 32, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2378, file: !1444, line: 37, baseType: !120, size: 8, offset: 224)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !2322, file: !1362, line: 218, baseType: !568, size: 64, offset: 704)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !2322, file: !1362, line: 220, baseType: !55, size: 64, offset: 768)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !2322, file: !1362, line: 225, baseType: !1384, size: 64, offset: 832)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !2322, file: !1362, line: 241, baseType: !33, size: 16, offset: 896)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !2322, file: !1362, line: 245, baseType: !33, size: 16, offset: 912)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !2322, file: !1362, line: 251, baseType: !33, size: 16, offset: 928)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !2322, file: !1362, line: 253, baseType: !2392, size: 1152, offset: 960)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2393, size: 1152, elements: !38)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2411, !2412, !2413}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2393, file: !318, line: 48, baseType: !231, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2393, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2393, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2393, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2393, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2393, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2393, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2393, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2393, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2393, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2393, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2393, file: !318, line: 91, baseType: !2407, size: 128, offset: 576)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2408)
!2408 = !{!2409, !2410}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2407, file: !338, line: 11, baseType: !341, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2407, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2393, file: !318, line: 92, baseType: !2407, size: 128, offset: 704)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2393, file: !318, line: 93, baseType: !2407, size: 128, offset: 832)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2393, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !2322, file: !1362, line: 254, baseType: !1412, offset: 2112)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!2337, !1339, !7, !2417}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DISubroutineType(types: !2419)
!2419 = !{!7, !2318, !2318}
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!7, !2337}
!2423 = !DISubroutineType(types: !2424)
!2424 = !{!2420, !2337}
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!7, !2337, !2420, !7}
!2427 = !DISubroutineType(types: !2428)
!2428 = !{!2420, !2337, !7}
!2429 = !DISubroutineType(types: !2430)
!2430 = !{null, !2420, !120}
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!120, !2337}
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2435)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !2436, line: 24, size: 192, elements: !2437)
!2436 = !DIFile(filename: "./lib/fts-cycle.c", directory: "/home/mbarbar/clone/coreutils")
!2437 = !{!2438, !2439, !2440}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2435, file: !2436, line: 26, baseType: !230, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2435, file: !2436, line: 27, baseType: !227, size: 64, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !2435, file: !2436, line: 28, baseType: !2420, size: 64, offset: 128)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{!7, !2443, !115}
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2338)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{null, !2447}
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{null, !2337}
!2450 = !DISubroutineType(types: !2451)
!2451 = !{null, !2337, !2420}
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2393)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!2311, !2319, !7}
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!2458, !2319, !7}
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsword", file: !2312, line: 671, baseType: !2459)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !30, line: 191, baseType: !31)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !197, line: 69, baseType: !1434)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_type", file: !2312, line: 677, size: 128, elements: !2464)
!2464 = !{!2465, !2466}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2463, file: !2312, line: 679, baseType: !230, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !2463, file: !2312, line: 680, baseType: !2458, size: 64, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2463)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!120, !2337, !2420}
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{null, !2337, !7, !120}
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !618, line: 22, size: 2240, elements: !2476)
!2476 = !{!2477, !2478, !2479, !2480, !2481}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !2475, file: !618, line: 25, baseType: !228, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !2475, file: !618, line: 26, baseType: !29, size: 64, offset: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !2475, file: !618, line: 31, baseType: !33, size: 16, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !2475, file: !618, line: 32, baseType: !468, size: 8, offset: 144)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !2475, file: !618, line: 33, baseType: !561, size: 2048, offset: 152)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !2484, !70}
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!120, !2319, !7}
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!33, !2337, !2420, !120}
!2489 = !DISubroutineType(types: !2490)
!2490 = !{!2420, !2337, !2420, !55}
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{!2420, !2337, !115, !55}
!2494 = !DISubroutineType(types: !2495)
!2495 = !{null, !2420}
!2496 = !DISubroutineType(types: !2497)
!2497 = !{!120, !2337, !55}
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!55, !1339}
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!7, !2337, !2420, !7, !115}
!2502 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2503, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2504, nameTableKind: None)
!2503 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/clone/coreutils")
!2504 = !{!55, !2505, !1043, !468, !116}
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!55, !2507, !115, !55, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1029, line: 6, baseType: !2510)
!2510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1031, line: 21, baseType: !2511)
!2511 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1031, line: 13, size: 64, elements: !2512)
!2512 = !{!2513, !2514}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2511, file: !1031, line: 15, baseType: !7, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2511, file: !1031, line: 20, baseType: !2515, size: 32, offset: 32)
!2515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2511, file: !1031, line: 16, size: 32, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2515, file: !1031, line: 18, baseType: !70, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2515, file: !1031, line: 19, baseType: !1040, size: 32)
!2519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2520, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2521, nameTableKind: None)
!2520 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mbarbar/clone/coreutils")
!2521 = !{!2522, !2528, !7, !2531, !2532, !2524}
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!7, !2524}
!2524 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_t", file: !2525, line: 40, baseType: !2526)
!2525 = !DIFile(filename: "/usr/include/sys/acl.h", directory: "")
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_ext", file: !2525, line: 32, flags: DIFlagFwdDecl)
!2528 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_entry_t", file: !2525, line: 41, baseType: !2529)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_entry_ext", file: !2525, line: 33, flags: DIFlagFwdDecl)
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_tag_t", file: !2525, line: 37, baseType: !7)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{null, !2534}
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2536, line: 260, size: 256, elements: !2537)
!2536 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mbarbar/clone/coreutils")
!2537 = !{!2538, !2539, !2540, !2541}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2535, file: !2536, line: 261, baseType: !160, size: 32)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2535, file: !2536, line: 264, baseType: !2524, size: 64, offset: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2535, file: !2536, line: 266, baseType: !2524, size: 64, offset: 128)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2535, file: !2536, line: 268, baseType: !120, size: 8, offset: 192)
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2544, nameTableKind: None)
!2543 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!2544 = !{!53, !2545, !160, !2524, !7}
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!7, !115, !7, !160, !2547}
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2536, line: 260, size: 256, elements: !2549)
!2549 = !{!2550, !2551, !2552, !2553}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2548, file: !2536, line: 261, baseType: !160, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2548, file: !2536, line: 264, baseType: !2524, size: 64, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2548, file: !2536, line: 266, baseType: !2524, size: 64, offset: 128)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2548, file: !2536, line: 268, baseType: !120, size: 8, offset: 192)
!2554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2555, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2556, nameTableKind: None)
!2555 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!2556 = !{!53, !1589, !2557, !120, !7, !160, !2566, !2524}
!2557 = !DISubroutineType(types: !2558)
!2558 = !{!7, !2559, !115, !7}
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2536, line: 260, size: 256, elements: !2561)
!2561 = !{!2562, !2563, !2564, !2565}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2560, file: !2536, line: 261, baseType: !160, size: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2560, file: !2536, line: 264, baseType: !2524, size: 64, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2560, file: !2536, line: 266, baseType: !2524, size: 64, offset: 128)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2560, file: !2536, line: 268, baseType: !120, size: 8, offset: 192)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!7, !2559, !115, !7, !7, !302, !302}
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2570, nameTableKind: None)
!2569 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/clone/coreutils")
!2570 = !{!70, !2571, !2573, !2575, !2577, !2581}
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!1556, !1556, !7}
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!1561, !1561, !7}
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!55, !55, !7}
!2577 = !DISubroutineType(types: !2578)
!2578 = !{!2579, !2579, !7}
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1557, line: 25, baseType: !2580)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !30, line: 40, baseType: !33)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!2583, !2583, !7}
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1557, line: 24, baseType: !2584)
!2584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !30, line: 38, baseType: !468)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2587, nameTableKind: None)
!2586 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!2587 = !{!466, !1879, !468, !467}
!2588 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2589, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2590, nameTableKind: None)
!2589 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/clone/coreutils")
!2590 = !{!2591, !2627, !7}
!2591 = !DISubroutineType(types: !2592)
!2592 = !{!7, !2593}
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2595)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2595, file: !4, line: 51, baseType: !7, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2595, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2595, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2595, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2595, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2595, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2595, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2595, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2595, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2595, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2595, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2595, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2595, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2595, file: !4, line: 70, baseType: !2611, size: 64, offset: 832)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2595, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2595, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2595, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2595, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2595, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2595, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2595, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2595, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2595, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2595, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2595, file: !4, line: 93, baseType: !2611, size: 64, offset: 1344)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2595, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2595, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2595, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2595, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2630, nameTableKind: None)
!2629 = !DIFile(filename: "./lib/cycle-check.c", directory: "/home/mbarbar/clone/coreutils")
!2630 = !{!2631, !458, !7, !2643, !228, !227, !231, !230, !2668}
!2631 = !DISubroutineType(types: !2632)
!2632 = !{null, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !2367, line: 28, size: 256, elements: !2635)
!2635 = !{!2636, !2641, !2642}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !2634, file: !2367, line: 30, baseType: !2637, size: 128)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !224, line: 7, size: 128, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2637, file: !224, line: 9, baseType: !227, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2637, file: !224, line: 10, baseType: !230, size: 64, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !2634, file: !2367, line: 31, baseType: !458, size: 64, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2634, file: !2367, line: 32, baseType: !7, size: 32, offset: 192)
!2643 = !DISubroutineType(types: !2644)
!2644 = !{!120, !2633, !2645}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2665, !2666, !2667}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2647, file: !318, line: 48, baseType: !231, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2647, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2647, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2647, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2647, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2647, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2647, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2647, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2647, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2647, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2647, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2647, file: !318, line: 91, baseType: !2661, size: 128, offset: 576)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2662)
!2662 = !{!2663, !2664}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2661, file: !338, line: 11, baseType: !341, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2661, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2647, file: !318, line: 92, baseType: !2661, size: 128, offset: 704)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2647, file: !318, line: 93, baseType: !2661, size: 128, offset: 832)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2647, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!120, !458}
!2670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2671, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2672, nameTableKind: None)
!2671 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2672 = !{!2673, !609, !7}
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!609, !115}
!2675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2676, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2677, nameTableKind: None)
!2676 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/clone/coreutils")
!2677 = !{!2678, !2685}
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null, !2680}
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !2682)
!2682 = !{!2683, !2684}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2681, file: !338, line: 11, baseType: !341, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2681, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{!2681}
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2689, nameTableKind: None)
!2688 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/clone/coreutils")
!2689 = !{!307, !120, !115}
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2692, nameTableKind: None)
!2691 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/clone/coreutils")
!2692 = !{!549, !115, !55, !116}
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2695, nameTableKind: None)
!2694 = !DIFile(filename: "./lib/i-ring.c", directory: "/home/mbarbar/clone/coreutils")
!2695 = !{!2696, !7, !2699, !120, !70, !1448, !2707, !2710, !2711, !2713}
!2696 = !DISubroutineType(types: !2697)
!2697 = !{null, !2698, !7}
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1444, line: 39, baseType: !2700)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1444, line: 31, size: 256, elements: !2701)
!2701 = !{!2702, !2703, !2704, !2705, !2706}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2700, file: !1444, line: 33, baseType: !1448, size: 128)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2700, file: !1444, line: 34, baseType: !7, size: 32, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2700, file: !1444, line: 35, baseType: !70, size: 32, offset: 160)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2700, file: !1444, line: 36, baseType: !70, size: 32, offset: 192)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2700, file: !1444, line: 37, baseType: !120, size: 8, offset: 224)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!120, !2709}
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2699)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{!7, !2698, !7}
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!7, !2698}
!2715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2716, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2717, nameTableKind: None)
!2716 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/clone/coreutils")
!2717 = !{!53, !2718, !115}
!2718 = !DISubroutineType(types: !591)
!2719 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2720, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2721, nameTableKind: None)
!2720 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2721 = !{!2722, !160, !2724}
!2722 = !DISubroutineType(types: !2723)
!2723 = !{!7, !7, !115, !7}
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !499, line: 14, baseType: !2725)
!2725 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2720, line: 35, baseType: !2726)
!2726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2727, size: 192, elements: !38)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2720, line: 35, size: 192, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2727, file: !2720, line: 35, baseType: !70, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2727, file: !2720, line: 35, baseType: !70, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2727, file: !2720, line: 35, baseType: !53, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2727, file: !2720, line: 35, baseType: !53, size: 64, offset: 128)
!2733 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2734, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2735, nameTableKind: None)
!2734 = !DIFile(filename: "./lib/randint.c", directory: "/home/mbarbar/clone/coreutils")
!2735 = !{!2736, !2738, !2743, !2747, !2749, !2751, !2755, !55, !2757, !2758, !2760, !7, !2762}
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!2738, !2743}
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !2740, line: 54, size: 192, elements: !2741)
!2740 = !DIFile(filename: "lib/randint.c", directory: "/home/mbarbar/clone/coreutils")
!2741 = !{!2742, !2746, !2748}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2739, file: !2740, line: 57, baseType: !2743, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2745, line: 25, flags: DIFlagFwdDecl)
!2745 = !DIFile(filename: "./lib/randread.h", directory: "/home/mbarbar/clone/coreutils")
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !2739, file: !2740, line: 64, baseType: !2747, size: 64, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1118, line: 30, baseType: !458)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !2739, file: !2740, line: 65, baseType: !2747, size: 64, offset: 128)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!2738, !115, !55}
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!2743, !2753}
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2739)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!2747, !2738, !2747}
!2757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 64, elements: !642)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{null, !2738}
!2760 = !DISubroutineType(types: !2761)
!2761 = !{!7, !2738}
!2762 = !DISubroutineType(types: !2763)
!2763 = !{!2747, !2747}
!2764 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2765, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2766, nameTableKind: None)
!2765 = !DIFile(filename: "./lib/randread.c", directory: "/home/mbarbar/clone/coreutils")
!2766 = !{!55, !2767, !2774, !2769, !2844, !2809, !2846, !427, !2848, !2850, !2852, !2810, !692, !7, !2854, !9, !608, !2856, !477, !2858, !2861, !2864}
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!2769, !115, !55}
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2771, line: 79, size: 33216, elements: !2772)
!2771 = !DIFile(filename: "lib/randread.c", directory: "/home/mbarbar/clone/coreutils")
!2772 = !{!2773, !2808, !2812, !2813}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2770, file: !2771, line: 83, baseType: !2774, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2776)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2777)
!2777 = !{!2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2776, file: !4, line: 51, baseType: !7, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2776, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2776, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2776, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2776, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2776, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2776, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2776, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2776, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2776, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2776, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2776, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2776, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2776, file: !4, line: 70, baseType: !2792, size: 64, offset: 832)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2776, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2776, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2776, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2776, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2776, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2776, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2776, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2776, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2776, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2776, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2776, file: !4, line: 93, baseType: !2792, size: 64, offset: 1344)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2776, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2776, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2776, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2776, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2770, file: !2771, line: 90, baseType: !2809, size: 64, offset: 64)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{null, !427}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !2770, file: !2771, line: 91, baseType: !427, size: 64, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2770, file: !2771, line: 117, baseType: !2814, size: 33024, offset: 192)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2770, file: !2771, line: 96, size: 33024, elements: !2815)
!2815 = !{!2816, !2820}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2814, file: !2771, line: 99, baseType: !2817, size: 32768)
!2817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32768, elements: !2818)
!2818 = !{!2819}
!2819 = !DISubrange(count: 4096)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !2814, file: !2771, line: 116, baseType: !2821, size: 33024)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !2771, line: 102, size: 33024, elements: !2822)
!2822 = !{!2823, !2824, !2836}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !2821, file: !2771, line: 105, baseType: !55, size: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2821, file: !2771, line: 108, baseType: !2825, size: 16576, offset: 64)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2826, line: 56, size: 16576, elements: !2827)
!2826 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mbarbar/clone/coreutils")
!2827 = !{!2828, !2833, !2834, !2835}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2825, file: !2826, line: 58, baseType: !2829, size: 16384)
!2829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2830, size: 16384, elements: !562)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2826, line: 44, baseType: !2831)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !459, line: 52, baseType: !2832)
!2832 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !30, line: 59, baseType: !1558)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2825, file: !2826, line: 59, baseType: !2830, size: 64, offset: 16384)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2825, file: !2826, line: 59, baseType: !2830, size: 64, offset: 16448)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2825, file: !2826, line: 59, baseType: !2830, size: 64, offset: 16512)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2821, file: !2771, line: 115, baseType: !2837, size: 16384, offset: 16640)
!2837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2821, file: !2771, line: 111, size: 16384, elements: !2838)
!2838 = !{!2839, !2840}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2837, file: !2771, line: 113, baseType: !2829, size: 16384)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2837, file: !2771, line: 114, baseType: !2841, size: 16384)
!2841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 16384, elements: !2842)
!2842 = !{!2843}
!2843 = !DISubrange(count: 2048)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{null, !2769, !2809}
!2846 = !DISubroutineType(types: !2847)
!2847 = !{null, !2769, !427}
!2848 = !DISubroutineType(types: !2849)
!2849 = !{null, !2769, !53, !55}
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!7, !2769}
!2852 = !DISubroutineType(types: !2853)
!2853 = !{!2769, !2774, !427}
!2854 = !DISubroutineType(types: !2855)
!2855 = !{null, !53, !55, !55}
!2856 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !161, line: 97, baseType: !2857)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !30, line: 154, baseType: !7)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{null, !2769, !2860, !55}
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{null, !2863, !53, !55}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2865 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2866, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2867, nameTableKind: None)
!2866 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mbarbar/clone/coreutils")
!2867 = !{!2830, !2868, !2864, !2877, !7, !2829, !2879, !427, !115, !2881, !2882, !2883}
!2868 = !DISubroutineType(types: !2869)
!2869 = !{null, !2870, !2864}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2826, line: 56, size: 16576, elements: !2872)
!2872 = !{!2873, !2874, !2875, !2876}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2871, file: !2826, line: 58, baseType: !2829, size: 16384)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2871, file: !2826, line: 59, baseType: !2830, size: 64, offset: 16384)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2871, file: !2826, line: 59, baseType: !2830, size: 64, offset: 16448)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2871, file: !2826, line: 59, baseType: !2830, size: 64, offset: 16512)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{null, !2870}
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!2830, !2881, !2830}
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2830)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!2830, !2830}
!2885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2886, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2887, nameTableKind: None)
!2886 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2887 = !{!1830}
!2888 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2889, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2890, nameTableKind: None)
!2889 = !DIFile(filename: "./lib/xsize.c", directory: "/home/mbarbar/clone/coreutils")
!2890 = !{!2891, !55, !1603, !2893}
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!55, !55, !55}
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!55, !55, !55, !55, !55}
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2897, nameTableKind: None)
!2896 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/clone/coreutils")
!2897 = !{!2898, !7}
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!7, !2900}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2902)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2903)
!2903 = !{!2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2902, file: !4, line: 51, baseType: !7, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2902, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2902, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2902, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2902, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2902, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2902, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2902, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2902, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2902, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2902, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2902, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2902, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2902, file: !4, line: 70, baseType: !2918, size: 64, offset: 832)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2902, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2902, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2902, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2902, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2902, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2902, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2902, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2902, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2902, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2902, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2902, file: !4, line: 93, baseType: !2918, size: 64, offset: 1344)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2902, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2902, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2902, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2902, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2934 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2935, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2936, nameTableKind: None)
!2935 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/clone/coreutils")
!2936 = !{!307}
!2937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2938, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2939, nameTableKind: None)
!2938 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/clone/coreutils")
!2939 = !{!307, !1830}
!2940 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2941, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !143, retainedTypes: !2942, nameTableKind: None)
!2941 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2942 = !{!2943, !2945, !7}
!2943 = !DISubroutineType(types: !2944)
!2944 = !{!2945, !115, !115}
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2947)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2947, file: !4, line: 51, baseType: !7, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2947, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2947, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2947, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2947, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2947, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2947, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2947, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2947, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2947, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2947, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2947, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2947, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2947, file: !4, line: 70, baseType: !2963, size: 64, offset: 832)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2947, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2947, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2947, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2947, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2947, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2947, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2947, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2947, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2947, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2947, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2947, file: !4, line: 93, baseType: !2963, size: 64, offset: 1344)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2947, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2947, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2947, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2947, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2979 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)"}
!2980 = !{i32 2, !"ctir", i32 1}
!2981 = !{i32 2, !"Dwarf Version", i32 4}
!2982 = !{i32 2, !"Debug Info Version", i32 3}
!2983 = !{i32 1, !"wchar_size", i32 4}
!2984 = distinct !DISubprogram(name: "usage", scope: !66, file: !66, line: 286, type: !113, scopeLine: 287, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !143)
!2985 = !{!2986, !2986, i64 0}
!2986 = !{!"int", !2987, i64 0}
!2987 = !{!"omnipotent char", !2988, i64 0}
!2988 = !{!"Simple C/C++ TBAA"}
!2989 = !DILocalVariable(name: "status", arg: 1, scope: !2984, file: !66, line: 286, type: !7)
!2990 = !DILocation(line: 286, column: 12, scope: !2984)
!2991 = !DILocation(line: 288, column: 7, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2984, file: !66, line: 288, column: 7)
!2993 = !DILocation(line: 288, column: 14, scope: !2992)
!2994 = !DILocation(line: 288, column: 7, scope: !2984)
!2995 = !DILocation(line: 289, column: 5, scope: !2992)
!2996 = !DILocation(line: 289, column: 5, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2992, file: !66, line: 289, column: 5)
!2998 = !{!2999, !2999, i64 0}
!2999 = !{!"any pointer", !2987, i64 0}
!3000 = !DILocation(line: 292, column: 15, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2992, file: !66, line: 291, column: 5)
!3002 = !DILocation(line: 297, column: 15, scope: !3001)
!3003 = !DILocation(line: 297, column: 29, scope: !3001)
!3004 = !DILocation(line: 297, column: 43, scope: !3001)
!3005 = !DILocation(line: 292, column: 7, scope: !3001)
!3006 = !DILocation(line: 298, column: 7, scope: !3001)
!3007 = !DILocation(line: 302, column: 7, scope: !3001)
!3008 = !DILocation(line: 304, column: 7, scope: !3001)
!3009 = !DILocation(line: 313, column: 7, scope: !3001)
!3010 = !DILocation(line: 318, column: 7, scope: !3001)
!3011 = !DILocation(line: 328, column: 7, scope: !3001)
!3012 = !DILocation(line: 329, column: 7, scope: !3001)
!3013 = !DILocation(line: 330, column: 7, scope: !3001)
!3014 = !DILocation(line: 331, column: 7, scope: !3001)
!3015 = !DILocation(line: 333, column: 9, scope: !2984)
!3016 = !DILocation(line: 333, column: 3, scope: !2984)
!3017 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !141, file: !141, line: 585, type: !134, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3018 = !DILocation(line: 587, column: 3, scope: !3017)
!3019 = !DILocation(line: 590, column: 1, scope: !3017)
!3020 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !141, file: !141, line: 613, type: !134, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3021 = !DILocation(line: 615, column: 3, scope: !3020)
!3022 = !DILocation(line: 622, column: 3, scope: !3020)
!3023 = !DILocation(line: 628, column: 1, scope: !3020)
!3024 = !DILocalVariable(name: "program", arg: 1, scope: !142, file: !141, line: 631, type: !115)
!3025 = !DILocation(line: 631, column: 34, scope: !142)
!3026 = !DILocalVariable(name: "infomap", scope: !142, file: !141, line: 633, type: !138)
!3027 = !DILocation(line: 633, column: 67, scope: !142)
!3028 = !DILocalVariable(name: "node", scope: !142, file: !141, line: 643, type: !115)
!3029 = !DILocation(line: 643, column: 15, scope: !142)
!3030 = !DILocation(line: 643, column: 22, scope: !142)
!3031 = !DILocalVariable(name: "map_prog", scope: !142, file: !141, line: 644, type: !149)
!3032 = !DILocation(line: 644, column: 25, scope: !142)
!3033 = !DILocation(line: 644, column: 36, scope: !142)
!3034 = !DILocation(line: 646, column: 3, scope: !142)
!3035 = !DILocation(line: 646, column: 10, scope: !142)
!3036 = !DILocation(line: 646, column: 20, scope: !142)
!3037 = !{!3038, !2999, i64 0}
!3038 = !{!"infomap", !2999, i64 0, !2999, i64 8}
!3039 = !DILocation(line: 646, column: 28, scope: !142)
!3040 = !DILocation(line: 646, column: 33, scope: !142)
!3041 = !DILocation(line: 646, column: 31, scope: !142)
!3042 = !DILocation(line: 0, scope: !142)
!3043 = !DILocation(line: 647, column: 13, scope: !142)
!3044 = distinct !{!3044, !3034, !3043}
!3045 = !DILocation(line: 649, column: 7, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !142, file: !141, line: 649, column: 7)
!3047 = !DILocation(line: 649, column: 17, scope: !3046)
!3048 = !{!3038, !2999, i64 8}
!3049 = !DILocation(line: 649, column: 7, scope: !142)
!3050 = !DILocation(line: 650, column: 12, scope: !3046)
!3051 = !DILocation(line: 650, column: 22, scope: !3046)
!3052 = !DILocation(line: 650, column: 10, scope: !3046)
!3053 = !DILocation(line: 650, column: 5, scope: !3046)
!3054 = !DILocation(line: 652, column: 11, scope: !142)
!3055 = !DILocation(line: 652, column: 3, scope: !142)
!3056 = !DILocalVariable(name: "lc_messages", scope: !142, file: !141, line: 656, type: !115)
!3057 = !DILocation(line: 656, column: 15, scope: !142)
!3058 = !DILocation(line: 656, column: 29, scope: !142)
!3059 = !DILocation(line: 657, column: 7, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !142, file: !141, line: 657, column: 7)
!3061 = !DILocation(line: 657, column: 19, scope: !3060)
!3062 = !DILocation(line: 657, column: 22, scope: !3060)
!3063 = !DILocation(line: 657, column: 7, scope: !142)
!3064 = !DILocation(line: 663, column: 7, scope: !3065)
!3065 = distinct !DILexicalBlock(scope: !3060, file: !141, line: 658, column: 5)
!3066 = !DILocation(line: 665, column: 5, scope: !3065)
!3067 = !DILocation(line: 666, column: 11, scope: !142)
!3068 = !DILocation(line: 667, column: 24, scope: !142)
!3069 = !DILocation(line: 666, column: 3, scope: !142)
!3070 = !DILocation(line: 668, column: 11, scope: !142)
!3071 = !DILocation(line: 669, column: 11, scope: !142)
!3072 = !DILocation(line: 669, column: 17, scope: !142)
!3073 = !DILocation(line: 669, column: 25, scope: !142)
!3074 = !DILocation(line: 669, column: 22, scope: !142)
!3075 = !DILocation(line: 668, column: 3, scope: !142)
!3076 = !DILocation(line: 670, column: 1, scope: !142)
!3077 = distinct !DISubprogram(name: "main", scope: !66, file: !66, line: 337, type: !117, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !3079)
!3079 = !{!3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3096, !3097, !3098}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3078, file: !318, line: 48, baseType: !231, size: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3078, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3078, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3078, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3078, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3078, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3078, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3078, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3078, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3078, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3078, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3078, file: !318, line: 91, baseType: !3092, size: 128, offset: 576)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3092, file: !338, line: 11, baseType: !341, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3092, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3078, file: !318, line: 92, baseType: !3092, size: 128, offset: 704)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3078, file: !318, line: 93, baseType: !3092, size: 128, offset: 832)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3078, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!3099 = !DILocalVariable(name: "argc", arg: 1, scope: !3077, file: !66, line: 337, type: !7)
!3100 = !DILocation(line: 337, column: 11, scope: !3077)
!3101 = !DILocalVariable(name: "argv", arg: 2, scope: !3077, file: !66, line: 337, type: !119)
!3102 = !DILocation(line: 337, column: 24, scope: !3077)
!3103 = !DILocalVariable(name: "c", scope: !3077, file: !66, line: 339, type: !7)
!3104 = !DILocation(line: 339, column: 7, scope: !3077)
!3105 = !DILocalVariable(name: "ok", scope: !3077, file: !66, line: 340, type: !120)
!3106 = !DILocation(line: 340, column: 8, scope: !3077)
!3107 = !DILocalVariable(name: "make_backups", scope: !3077, file: !66, line: 341, type: !120)
!3108 = !DILocation(line: 341, column: 8, scope: !3077)
!3109 = !{!3110, !3110, i64 0}
!3110 = !{!"_Bool", !2987, i64 0}
!3111 = !DILocalVariable(name: "backup_suffix", scope: !3077, file: !66, line: 342, type: !115)
!3112 = !DILocation(line: 342, column: 15, scope: !3077)
!3113 = !DILocalVariable(name: "version_control_string", scope: !3077, file: !66, line: 343, type: !9)
!3114 = !DILocation(line: 343, column: 9, scope: !3077)
!3115 = !DILocalVariable(name: "x", scope: !3077, file: !66, line: 344, type: !153)
!3116 = !DILocation(line: 344, column: 21, scope: !3077)
!3117 = !DILocalVariable(name: "target_directory", scope: !3077, file: !66, line: 345, type: !9)
!3118 = !DILocation(line: 345, column: 9, scope: !3077)
!3119 = !DILocalVariable(name: "no_target_directory", scope: !3077, file: !66, line: 346, type: !120)
!3120 = !DILocation(line: 346, column: 8, scope: !3077)
!3121 = !DILocalVariable(name: "n_files", scope: !3077, file: !66, line: 347, type: !7)
!3122 = !DILocation(line: 347, column: 7, scope: !3077)
!3123 = !DILocalVariable(name: "file", scope: !3077, file: !66, line: 348, type: !119)
!3124 = !DILocation(line: 348, column: 10, scope: !3077)
!3125 = !DILocalVariable(name: "selinux_enabled", scope: !3077, file: !66, line: 349, type: !120)
!3126 = !DILocation(line: 349, column: 8, scope: !3077)
!3127 = !DILocation(line: 352, column: 21, scope: !3077)
!3128 = !DILocation(line: 352, column: 3, scope: !3077)
!3129 = !DILocation(line: 353, column: 3, scope: !3077)
!3130 = !DILocation(line: 354, column: 3, scope: !3077)
!3131 = !DILocation(line: 355, column: 3, scope: !3077)
!3132 = !DILocation(line: 357, column: 3, scope: !3077)
!3133 = !DILocation(line: 359, column: 3, scope: !3077)
!3134 = !DILocation(line: 362, column: 3, scope: !3077)
!3135 = !DILocation(line: 364, column: 3, scope: !3077)
!3136 = !DILocation(line: 364, column: 28, scope: !3077)
!3137 = !DILocation(line: 364, column: 34, scope: !3077)
!3138 = !DILocation(line: 364, column: 15, scope: !3077)
!3139 = !DILocation(line: 364, column: 13, scope: !3077)
!3140 = !DILocation(line: 365, column: 10, scope: !3077)
!3141 = !DILocation(line: 367, column: 15, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3077, file: !66, line: 366, column: 5)
!3143 = !DILocation(line: 367, column: 7, scope: !3142)
!3144 = !DILocation(line: 370, column: 24, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3142, file: !66, line: 368, column: 9)
!3146 = !DILocation(line: 371, column: 15, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3145, file: !66, line: 371, column: 15)
!3148 = !DILocation(line: 371, column: 15, scope: !3145)
!3149 = !DILocation(line: 372, column: 38, scope: !3147)
!3150 = !DILocation(line: 372, column: 36, scope: !3147)
!3151 = !DILocation(line: 372, column: 13, scope: !3147)
!3152 = !DILocation(line: 373, column: 11, scope: !3145)
!3153 = !DILocation(line: 375, column: 13, scope: !3145)
!3154 = !DILocation(line: 375, column: 25, scope: !3145)
!3155 = !{!3156, !2987, i64 8}
!3156 = !{!"cp_options", !2987, i64 0, !2987, i64 4, !2987, i64 8, !2987, i64 12, !2986, i64 16, !3110, i64 20, !3110, i64 21, !3110, i64 22, !3110, i64 23, !3110, i64 24, !3110, i64 25, !3110, i64 26, !3110, i64 27, !3110, i64 28, !3110, i64 29, !3110, i64 30, !3110, i64 31, !3110, i64 32, !3110, i64 33, !3110, i64 34, !3110, i64 35, !3110, i64 36, !3110, i64 37, !3110, i64 38, !3110, i64 39, !3110, i64 40, !3110, i64 41, !3110, i64 42, !3110, i64 43, !3110, i64 44, !3110, i64 45, !3110, i64 46, !3110, i64 47, !3110, i64 48, !3110, i64 49, !2986, i64 52, !2987, i64 56, !2999, i64 64, !2999, i64 72}
!3157 = !DILocation(line: 376, column: 11, scope: !3145)
!3158 = !DILocation(line: 378, column: 13, scope: !3145)
!3159 = !DILocation(line: 378, column: 25, scope: !3145)
!3160 = !DILocation(line: 379, column: 11, scope: !3145)
!3161 = !DILocation(line: 381, column: 13, scope: !3145)
!3162 = !DILocation(line: 381, column: 25, scope: !3145)
!3163 = !DILocation(line: 382, column: 11, scope: !3145)
!3164 = !DILocation(line: 384, column: 35, scope: !3145)
!3165 = !DILocation(line: 385, column: 11, scope: !3145)
!3166 = !DILocation(line: 387, column: 15, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3145, file: !66, line: 387, column: 15)
!3168 = !DILocation(line: 387, column: 15, scope: !3145)
!3169 = !DILocation(line: 388, column: 13, scope: !3167)
!3170 = !DILocalVariable(name: "st", scope: !3171, file: !66, line: 391, type: !3078)
!3171 = distinct !DILexicalBlock(scope: !3167, file: !66, line: 390, column: 13)
!3172 = !DILocation(line: 391, column: 27, scope: !3171)
!3173 = !DILocation(line: 392, column: 25, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3171, file: !66, line: 392, column: 19)
!3175 = !DILocation(line: 392, column: 19, scope: !3174)
!3176 = !DILocation(line: 392, column: 38, scope: !3174)
!3177 = !DILocation(line: 392, column: 19, scope: !3171)
!3178 = !DILocation(line: 393, column: 17, scope: !3174)
!3179 = !DILocation(line: 395, column: 21, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3171, file: !66, line: 395, column: 19)
!3181 = !{!3182, !2986, i64 24}
!3182 = !{!"stat", !3183, i64 0, !3183, i64 8, !3183, i64 16, !2986, i64 24, !2986, i64 28, !2986, i64 32, !2986, i64 36, !3183, i64 40, !3183, i64 48, !3183, i64 56, !3183, i64 64, !3184, i64 72, !3184, i64 88, !3184, i64 104, !2987, i64 120}
!3183 = !{!"long", !2987, i64 0}
!3184 = !{!"timespec", !3183, i64 0, !3183, i64 8}
!3185 = !DILocation(line: 395, column: 19, scope: !3171)
!3186 = !DILocation(line: 396, column: 17, scope: !3180)
!3187 = !DILocation(line: 399, column: 30, scope: !3145)
!3188 = !DILocation(line: 399, column: 28, scope: !3145)
!3189 = !DILocation(line: 400, column: 11, scope: !3145)
!3190 = !DILocation(line: 402, column: 31, scope: !3145)
!3191 = !DILocation(line: 403, column: 11, scope: !3145)
!3192 = !DILocation(line: 405, column: 13, scope: !3145)
!3193 = !DILocation(line: 405, column: 20, scope: !3145)
!3194 = !{!3156, !3110, i64 45}
!3195 = !DILocation(line: 406, column: 11, scope: !3145)
!3196 = !DILocation(line: 408, column: 13, scope: !3145)
!3197 = !DILocation(line: 408, column: 21, scope: !3145)
!3198 = !{!3156, !3110, i64 46}
!3199 = !DILocation(line: 409, column: 11, scope: !3145)
!3200 = !DILocation(line: 411, column: 24, scope: !3145)
!3201 = !DILocation(line: 412, column: 27, scope: !3145)
!3202 = !DILocation(line: 412, column: 25, scope: !3145)
!3203 = !DILocation(line: 413, column: 11, scope: !3145)
!3204 = !DILocation(line: 417, column: 15, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3145, file: !66, line: 417, column: 15)
!3206 = !DILocation(line: 417, column: 15, scope: !3145)
!3207 = !DILocation(line: 419, column: 17, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3205, file: !66, line: 418, column: 13)
!3209 = !DILocation(line: 419, column: 43, scope: !3208)
!3210 = !{!3156, !3110, i64 37}
!3211 = !DILocation(line: 420, column: 17, scope: !3208)
!3212 = !DILocation(line: 420, column: 38, scope: !3208)
!3213 = !{!3156, !3110, i64 33}
!3214 = !DILocation(line: 421, column: 13, scope: !3208)
!3215 = !DILocation(line: 422, column: 11, scope: !3145)
!3216 = !DILocation(line: 423, column: 9, scope: !3145)
!3217 = !DILocation(line: 424, column: 9, scope: !3145)
!3218 = !DILocation(line: 426, column: 11, scope: !3145)
!3219 = distinct !{!3219, !3135, !3220}
!3220 = !DILocation(line: 428, column: 5, scope: !3077)
!3221 = !DILocation(line: 430, column: 13, scope: !3077)
!3222 = !DILocation(line: 430, column: 20, scope: !3077)
!3223 = !DILocation(line: 430, column: 18, scope: !3077)
!3224 = !DILocation(line: 430, column: 11, scope: !3077)
!3225 = !DILocation(line: 431, column: 10, scope: !3077)
!3226 = !DILocation(line: 431, column: 17, scope: !3077)
!3227 = !DILocation(line: 431, column: 15, scope: !3077)
!3228 = !DILocation(line: 431, column: 8, scope: !3077)
!3229 = !DILocation(line: 433, column: 7, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3077, file: !66, line: 433, column: 7)
!3231 = !DILocation(line: 433, column: 19, scope: !3230)
!3232 = !DILocation(line: 433, column: 18, scope: !3230)
!3233 = !DILocation(line: 433, column: 15, scope: !3230)
!3234 = !DILocation(line: 433, column: 7, scope: !3077)
!3235 = !DILocation(line: 435, column: 11, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3237, file: !66, line: 435, column: 11)
!3237 = distinct !DILexicalBlock(scope: !3230, file: !66, line: 434, column: 5)
!3238 = !DILocation(line: 435, column: 19, scope: !3236)
!3239 = !DILocation(line: 435, column: 11, scope: !3237)
!3240 = !DILocation(line: 436, column: 22, scope: !3236)
!3241 = !DILocation(line: 436, column: 9, scope: !3236)
!3242 = !DILocation(line: 438, column: 22, scope: !3236)
!3243 = !DILocation(line: 439, column: 16, scope: !3236)
!3244 = !DILocation(line: 438, column: 9, scope: !3236)
!3245 = !DILocation(line: 440, column: 7, scope: !3237)
!3246 = !DILocation(line: 443, column: 7, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3077, file: !66, line: 443, column: 7)
!3248 = !DILocation(line: 443, column: 7, scope: !3077)
!3249 = !DILocation(line: 445, column: 11, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3251, file: !66, line: 445, column: 11)
!3251 = distinct !DILexicalBlock(scope: !3247, file: !66, line: 444, column: 5)
!3252 = !DILocation(line: 445, column: 11, scope: !3251)
!3253 = !DILocation(line: 446, column: 9, scope: !3250)
!3254 = !DILocation(line: 449, column: 15, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3251, file: !66, line: 449, column: 11)
!3256 = !DILocation(line: 449, column: 13, scope: !3255)
!3257 = !DILocation(line: 449, column: 11, scope: !3251)
!3258 = !DILocation(line: 451, column: 24, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3255, file: !66, line: 450, column: 9)
!3260 = !DILocation(line: 451, column: 47, scope: !3259)
!3261 = !DILocation(line: 451, column: 11, scope: !3259)
!3262 = !DILocation(line: 452, column: 11, scope: !3259)
!3263 = !DILocation(line: 454, column: 5, scope: !3251)
!3264 = !DILocation(line: 455, column: 13, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3247, file: !66, line: 455, column: 12)
!3266 = !DILocation(line: 455, column: 12, scope: !3247)
!3267 = !DILocation(line: 457, column: 7, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3269, file: !66, line: 457, column: 7)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !66, line: 457, column: 7)
!3270 = distinct !DILexicalBlock(scope: !3265, file: !66, line: 456, column: 5)
!3271 = !DILocation(line: 457, column: 7, scope: !3269)
!3272 = !DILocation(line: 458, column: 11, scope: !3273)
!3273 = distinct !DILexicalBlock(scope: !3270, file: !66, line: 458, column: 11)
!3274 = !DILocation(line: 458, column: 19, scope: !3273)
!3275 = !DILocation(line: 458, column: 11, scope: !3270)
!3276 = !DILocation(line: 459, column: 48, scope: !3273)
!3277 = !DILocation(line: 459, column: 67, scope: !3273)
!3278 = !DILocation(line: 459, column: 27, scope: !3273)
!3279 = !DILocation(line: 461, column: 29, scope: !3273)
!3280 = !DILocation(line: 459, column: 11, scope: !3273)
!3281 = !DILocation(line: 459, column: 24, scope: !3273)
!3282 = !{!3156, !2986, i64 52}
!3283 = !DILocation(line: 459, column: 9, scope: !3273)
!3284 = !DILocation(line: 462, column: 13, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3270, file: !66, line: 462, column: 11)
!3286 = !DILocation(line: 462, column: 26, scope: !3285)
!3287 = !DILocation(line: 462, column: 31, scope: !3285)
!3288 = !DILocation(line: 462, column: 60, scope: !3285)
!3289 = !DILocation(line: 462, column: 65, scope: !3285)
!3290 = !DILocation(line: 462, column: 73, scope: !3285)
!3291 = !DILocation(line: 462, column: 34, scope: !3285)
!3292 = !DILocation(line: 462, column: 11, scope: !3270)
!3293 = !DILocation(line: 464, column: 13, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3285, file: !66, line: 463, column: 9)
!3295 = !DILocation(line: 464, column: 26, scope: !3294)
!3296 = !DILocation(line: 465, column: 30, scope: !3294)
!3297 = !DILocation(line: 465, column: 35, scope: !3294)
!3298 = !DILocation(line: 465, column: 28, scope: !3294)
!3299 = !DILocation(line: 466, column: 9, scope: !3294)
!3300 = !DILocation(line: 467, column: 20, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3285, file: !66, line: 467, column: 16)
!3302 = !DILocation(line: 467, column: 18, scope: !3301)
!3303 = !DILocation(line: 467, column: 16, scope: !3285)
!3304 = !DILocation(line: 468, column: 9, scope: !3301)
!3305 = !DILocation(line: 470, column: 5, scope: !3270)
!3306 = !DILocation(line: 472, column: 9, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3077, file: !66, line: 472, column: 7)
!3308 = !DILocation(line: 472, column: 21, scope: !3307)
!3309 = !DILocation(line: 472, column: 7, scope: !3077)
!3310 = !DILocation(line: 473, column: 7, scope: !3307)
!3311 = !DILocation(line: 473, column: 14, scope: !3307)
!3312 = !DILocation(line: 473, column: 5, scope: !3307)
!3313 = !DILocation(line: 475, column: 7, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3077, file: !66, line: 475, column: 7)
!3315 = !DILocation(line: 475, column: 20, scope: !3314)
!3316 = !DILocation(line: 475, column: 25, scope: !3314)
!3317 = !DILocation(line: 475, column: 37, scope: !3314)
!3318 = !DILocation(line: 475, column: 7, scope: !3077)
!3319 = !DILocation(line: 478, column: 14, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3314, file: !66, line: 476, column: 5)
!3321 = !DILocation(line: 477, column: 7, scope: !3320)
!3322 = !DILocation(line: 479, column: 7, scope: !3320)
!3323 = !DILocation(line: 482, column: 20, scope: !3077)
!3324 = !DILocation(line: 483, column: 36, scope: !3077)
!3325 = !DILocation(line: 484, column: 36, scope: !3077)
!3326 = !DILocation(line: 483, column: 22, scope: !3077)
!3327 = !DILocation(line: 482, column: 5, scope: !3077)
!3328 = !DILocation(line: 482, column: 17, scope: !3077)
!3329 = !{!3156, !2987, i64 0}
!3330 = !DILocation(line: 486, column: 29, scope: !3077)
!3331 = !DILocation(line: 486, column: 3, scope: !3077)
!3332 = !DILocation(line: 488, column: 3, scope: !3077)
!3333 = !DILocation(line: 490, column: 7, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3077, file: !66, line: 490, column: 7)
!3335 = !DILocation(line: 490, column: 7, scope: !3077)
!3336 = !DILocation(line: 495, column: 16, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !66, line: 495, column: 11)
!3338 = distinct !DILexicalBlock(scope: !3334, file: !66, line: 491, column: 5)
!3339 = !DILocation(line: 495, column: 13, scope: !3337)
!3340 = !DILocation(line: 495, column: 11, scope: !3338)
!3341 = !DILocation(line: 496, column: 9, scope: !3337)
!3342 = !DILocation(line: 498, column: 10, scope: !3338)
!3343 = !DILocalVariable(name: "i", scope: !3344, file: !66, line: 499, type: !7)
!3344 = distinct !DILexicalBlock(scope: !3338, file: !66, line: 499, column: 7)
!3345 = !DILocation(line: 499, column: 16, scope: !3344)
!3346 = !DILocation(line: 499, column: 12, scope: !3344)
!3347 = !DILocation(line: 499, column: 23, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3344, file: !66, line: 499, column: 7)
!3349 = !DILocation(line: 499, column: 27, scope: !3348)
!3350 = !DILocation(line: 499, column: 25, scope: !3348)
!3351 = !DILocation(line: 499, column: 7, scope: !3344)
!3352 = !DILocation(line: 501, column: 25, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3348, file: !66, line: 500, column: 9)
!3354 = !DILocation(line: 501, column: 27, scope: !3353)
!3355 = !DILocation(line: 501, column: 34, scope: !3353)
!3356 = !DILocation(line: 501, column: 31, scope: !3353)
!3357 = !DILocation(line: 501, column: 13, scope: !3353)
!3358 = !DILocation(line: 501, column: 23, scope: !3353)
!3359 = !{!3156, !3110, i64 49}
!3360 = !DILocation(line: 502, column: 27, scope: !3353)
!3361 = !DILocation(line: 502, column: 32, scope: !3353)
!3362 = !DILocation(line: 502, column: 36, scope: !3353)
!3363 = !DILocation(line: 502, column: 17, scope: !3353)
!3364 = !DILocation(line: 502, column: 14, scope: !3353)
!3365 = !DILocation(line: 503, column: 9, scope: !3353)
!3366 = !DILocation(line: 499, column: 36, scope: !3348)
!3367 = !DILocation(line: 499, column: 7, scope: !3348)
!3368 = distinct !{!3368, !3351, !3369}
!3369 = !DILocation(line: 503, column: 9, scope: !3344)
!3370 = !DILocation(line: 504, column: 5, scope: !3338)
!3371 = !DILocation(line: 507, column: 9, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3334, file: !66, line: 506, column: 5)
!3373 = !DILocation(line: 507, column: 19, scope: !3372)
!3374 = !DILocation(line: 508, column: 22, scope: !3372)
!3375 = !DILocation(line: 508, column: 31, scope: !3372)
!3376 = !DILocation(line: 508, column: 12, scope: !3372)
!3377 = !DILocation(line: 508, column: 10, scope: !3372)
!3378 = !DILocation(line: 511, column: 10, scope: !3077)
!3379 = !DILocation(line: 511, column: 3, scope: !3077)
!3380 = distinct !DISubprogram(name: "cp_option_init", scope: !66, file: !66, line: 107, type: !150, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3381 = !DILocalVariable(name: "x", arg: 1, scope: !3380, file: !66, line: 107, type: !152)
!3382 = !DILocation(line: 107, column: 36, scope: !3380)
!3383 = !DILocalVariable(name: "selinux_enabled", scope: !3380, file: !66, line: 109, type: !120)
!3384 = !DILocation(line: 109, column: 8, scope: !3380)
!3385 = !DILocation(line: 111, column: 23, scope: !3380)
!3386 = !DILocation(line: 111, column: 3, scope: !3380)
!3387 = !DILocation(line: 112, column: 3, scope: !3380)
!3388 = !DILocation(line: 112, column: 6, scope: !3380)
!3389 = !DILocation(line: 112, column: 22, scope: !3380)
!3390 = !{!3156, !3110, i64 20}
!3391 = !DILocation(line: 113, column: 3, scope: !3380)
!3392 = !DILocation(line: 113, column: 6, scope: !3380)
!3393 = !DILocation(line: 113, column: 19, scope: !3380)
!3394 = !{!3156, !2987, i64 56}
!3395 = !DILocation(line: 114, column: 3, scope: !3380)
!3396 = !DILocation(line: 114, column: 6, scope: !3380)
!3397 = !DILocation(line: 114, column: 18, scope: !3380)
!3398 = !{!3156, !2987, i64 4}
!3399 = !DILocation(line: 115, column: 3, scope: !3380)
!3400 = !DILocation(line: 115, column: 6, scope: !3380)
!3401 = !DILocation(line: 115, column: 33, scope: !3380)
!3402 = !{!3156, !3110, i64 21}
!3403 = !DILocation(line: 116, column: 3, scope: !3380)
!3404 = !DILocation(line: 116, column: 6, scope: !3380)
!3405 = !DILocation(line: 116, column: 36, scope: !3380)
!3406 = !{!3156, !3110, i64 22}
!3407 = !DILocation(line: 117, column: 3, scope: !3380)
!3408 = !DILocation(line: 117, column: 6, scope: !3380)
!3409 = !DILocation(line: 117, column: 16, scope: !3380)
!3410 = !{!3156, !3110, i64 23}
!3411 = !DILocation(line: 118, column: 3, scope: !3380)
!3412 = !DILocation(line: 118, column: 6, scope: !3380)
!3413 = !DILocation(line: 118, column: 18, scope: !3380)
!3414 = !DILocation(line: 119, column: 3, scope: !3380)
!3415 = !DILocation(line: 119, column: 6, scope: !3380)
!3416 = !DILocation(line: 119, column: 16, scope: !3380)
!3417 = !{!3156, !3110, i64 24}
!3418 = !DILocation(line: 120, column: 3, scope: !3380)
!3419 = !DILocation(line: 120, column: 6, scope: !3380)
!3420 = !DILocation(line: 120, column: 19, scope: !3380)
!3421 = !{!3156, !3110, i64 25}
!3422 = !DILocation(line: 121, column: 3, scope: !3380)
!3423 = !DILocation(line: 121, column: 6, scope: !3380)
!3424 = !DILocation(line: 121, column: 22, scope: !3380)
!3425 = !{!3156, !3110, i64 28}
!3426 = !DILocation(line: 122, column: 3, scope: !3380)
!3427 = !DILocation(line: 122, column: 6, scope: !3380)
!3428 = !DILocation(line: 122, column: 25, scope: !3380)
!3429 = !{!3156, !3110, i64 29}
!3430 = !DILocation(line: 123, column: 3, scope: !3380)
!3431 = !DILocation(line: 123, column: 6, scope: !3380)
!3432 = !DILocation(line: 123, column: 21, scope: !3380)
!3433 = !{!3156, !3110, i64 34}
!3434 = !DILocation(line: 124, column: 3, scope: !3380)
!3435 = !DILocation(line: 124, column: 6, scope: !3380)
!3436 = !DILocation(line: 124, column: 20, scope: !3380)
!3437 = !{!3156, !3110, i64 30}
!3438 = !DILocation(line: 125, column: 3, scope: !3380)
!3439 = !DILocation(line: 125, column: 6, scope: !3380)
!3440 = !DILocation(line: 125, column: 26, scope: !3380)
!3441 = !{!3156, !3110, i64 31}
!3442 = !DILocation(line: 126, column: 3, scope: !3380)
!3443 = !DILocation(line: 126, column: 6, scope: !3380)
!3444 = !DILocation(line: 126, column: 31, scope: !3380)
!3445 = !{!3156, !3110, i64 32}
!3446 = !DILocation(line: 127, column: 34, scope: !3380)
!3447 = !DILocation(line: 127, column: 3, scope: !3380)
!3448 = !DILocation(line: 127, column: 6, scope: !3380)
!3449 = !DILocation(line: 127, column: 32, scope: !3380)
!3450 = !DILocation(line: 128, column: 3, scope: !3380)
!3451 = !DILocation(line: 128, column: 6, scope: !3380)
!3452 = !DILocation(line: 128, column: 27, scope: !3380)
!3453 = !DILocation(line: 129, column: 3, scope: !3380)
!3454 = !DILocation(line: 129, column: 6, scope: !3380)
!3455 = !DILocation(line: 129, column: 25, scope: !3380)
!3456 = !{!3156, !3110, i64 41}
!3457 = !DILocation(line: 130, column: 3, scope: !3380)
!3458 = !DILocation(line: 130, column: 6, scope: !3380)
!3459 = !DILocation(line: 130, column: 25, scope: !3380)
!3460 = !{!3156, !3110, i64 35}
!3461 = !DILocation(line: 131, column: 3, scope: !3380)
!3462 = !DILocation(line: 131, column: 6, scope: !3380)
!3463 = !DILocation(line: 131, column: 23, scope: !3380)
!3464 = !{!3156, !3110, i64 36}
!3465 = !DILocation(line: 132, column: 3, scope: !3380)
!3466 = !DILocation(line: 132, column: 6, scope: !3380)
!3467 = !DILocation(line: 132, column: 31, scope: !3380)
!3468 = !{!3156, !3110, i64 38}
!3469 = !DILocation(line: 133, column: 3, scope: !3380)
!3470 = !DILocation(line: 133, column: 6, scope: !3380)
!3471 = !DILocation(line: 133, column: 21, scope: !3380)
!3472 = !{!3156, !3110, i64 39}
!3473 = !DILocation(line: 134, column: 3, scope: !3380)
!3474 = !DILocation(line: 134, column: 6, scope: !3380)
!3475 = !DILocation(line: 134, column: 29, scope: !3380)
!3476 = !{!3156, !3110, i64 40}
!3477 = !DILocation(line: 135, column: 3, scope: !3380)
!3478 = !DILocation(line: 135, column: 6, scope: !3380)
!3479 = !DILocation(line: 135, column: 16, scope: !3380)
!3480 = !{!3156, !3110, i64 42}
!3481 = !DILocation(line: 136, column: 3, scope: !3380)
!3482 = !DILocation(line: 136, column: 6, scope: !3380)
!3483 = !DILocation(line: 136, column: 18, scope: !3380)
!3484 = !{!3156, !2987, i64 12}
!3485 = !DILocation(line: 137, column: 3, scope: !3380)
!3486 = !DILocation(line: 137, column: 6, scope: !3380)
!3487 = !DILocation(line: 137, column: 20, scope: !3380)
!3488 = !{!3156, !3110, i64 44}
!3489 = !DILocation(line: 138, column: 3, scope: !3380)
!3490 = !DILocation(line: 138, column: 6, scope: !3380)
!3491 = !DILocation(line: 138, column: 15, scope: !3380)
!3492 = !{!3156, !3110, i64 43}
!3493 = !DILocation(line: 139, column: 3, scope: !3380)
!3494 = !DILocation(line: 139, column: 6, scope: !3380)
!3495 = !DILocation(line: 139, column: 11, scope: !3380)
!3496 = !{!3156, !2986, i64 16}
!3497 = !DILocation(line: 140, column: 18, scope: !3380)
!3498 = !DILocation(line: 140, column: 3, scope: !3380)
!3499 = !DILocation(line: 140, column: 6, scope: !3380)
!3500 = !DILocation(line: 140, column: 16, scope: !3380)
!3501 = !{!3156, !3110, i64 47}
!3502 = !DILocation(line: 142, column: 3, scope: !3380)
!3503 = !DILocation(line: 142, column: 6, scope: !3380)
!3504 = !DILocation(line: 142, column: 33, scope: !3380)
!3505 = !{!3156, !3110, i64 48}
!3506 = !DILocation(line: 143, column: 3, scope: !3380)
!3507 = !DILocation(line: 143, column: 6, scope: !3380)
!3508 = !DILocation(line: 143, column: 13, scope: !3380)
!3509 = !DILocation(line: 144, column: 3, scope: !3380)
!3510 = !DILocation(line: 144, column: 6, scope: !3380)
!3511 = !DILocation(line: 144, column: 14, scope: !3380)
!3512 = !DILocation(line: 145, column: 3, scope: !3380)
!3513 = !DILocation(line: 145, column: 6, scope: !3380)
!3514 = !DILocation(line: 145, column: 16, scope: !3380)
!3515 = !{!3156, !2999, i64 64}
!3516 = !DILocation(line: 146, column: 3, scope: !3380)
!3517 = !DILocation(line: 146, column: 6, scope: !3380)
!3518 = !DILocation(line: 146, column: 15, scope: !3380)
!3519 = !{!3156, !2999, i64 72}
!3520 = !DILocation(line: 147, column: 1, scope: !3380)
!3521 = distinct !DISubprogram(name: "target_directory_operand", scope: !66, file: !66, line: 154, type: !200, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3522 = !DILocalVariable(name: "file", arg: 1, scope: !3521, file: !66, line: 154, type: !115)
!3523 = !DILocation(line: 154, column: 39, scope: !3521)
!3524 = !DILocalVariable(name: "st", scope: !3521, file: !66, line: 156, type: !3078)
!3525 = !DILocation(line: 156, column: 15, scope: !3521)
!3526 = !DILocalVariable(name: "err", scope: !3521, file: !66, line: 157, type: !7)
!3527 = !DILocation(line: 157, column: 7, scope: !3521)
!3528 = !DILocation(line: 157, column: 20, scope: !3521)
!3529 = !DILocation(line: 157, column: 14, scope: !3521)
!3530 = !DILocation(line: 157, column: 31, scope: !3521)
!3531 = !DILocation(line: 157, column: 42, scope: !3521)
!3532 = !DILocalVariable(name: "is_a_dir", scope: !3521, file: !66, line: 158, type: !120)
!3533 = !DILocation(line: 158, column: 8, scope: !3521)
!3534 = !DILocation(line: 158, column: 20, scope: !3521)
!3535 = !DILocation(line: 158, column: 24, scope: !3521)
!3536 = !DILocation(line: 158, column: 27, scope: !3521)
!3537 = !DILocation(line: 0, scope: !3521)
!3538 = !DILocation(line: 159, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3521, file: !66, line: 159, column: 7)
!3540 = !DILocation(line: 159, column: 11, scope: !3539)
!3541 = !DILocation(line: 159, column: 14, scope: !3539)
!3542 = !DILocation(line: 159, column: 18, scope: !3539)
!3543 = !DILocation(line: 159, column: 7, scope: !3521)
!3544 = !DILocation(line: 160, column: 5, scope: !3539)
!3545 = !DILocation(line: 161, column: 10, scope: !3521)
!3546 = !DILocation(line: 161, column: 3, scope: !3521)
!3547 = distinct !DISubprogram(name: "movefile", scope: !66, file: !66, line: 253, type: !202, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3548 = !DILocalVariable(name: "source", arg: 1, scope: !3547, file: !66, line: 253, type: !9)
!3549 = !DILocation(line: 253, column: 17, scope: !3547)
!3550 = !DILocalVariable(name: "dest", arg: 2, scope: !3547, file: !66, line: 253, type: !9)
!3551 = !DILocation(line: 253, column: 31, scope: !3547)
!3552 = !DILocalVariable(name: "dest_is_dir", arg: 3, scope: !3547, file: !66, line: 253, type: !120)
!3553 = !DILocation(line: 253, column: 42, scope: !3547)
!3554 = !DILocalVariable(name: "x", arg: 4, scope: !3547, file: !66, line: 254, type: !204)
!3555 = !DILocation(line: 254, column: 36, scope: !3547)
!3556 = !DILocalVariable(name: "ok", scope: !3547, file: !66, line: 256, type: !120)
!3557 = !DILocation(line: 256, column: 8, scope: !3547)
!3558 = !DILocation(line: 265, column: 7, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3547, file: !66, line: 265, column: 7)
!3560 = !DILocation(line: 265, column: 7, scope: !3547)
!3561 = !DILocation(line: 266, column: 29, scope: !3559)
!3562 = !DILocation(line: 266, column: 5, scope: !3559)
!3563 = !DILocation(line: 268, column: 7, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3547, file: !66, line: 268, column: 7)
!3565 = !DILocation(line: 268, column: 7, scope: !3547)
!3566 = !DILocalVariable(name: "src_basename", scope: !3567, file: !66, line: 271, type: !115)
!3567 = distinct !DILexicalBlock(scope: !3564, file: !66, line: 269, column: 5)
!3568 = !DILocation(line: 271, column: 19, scope: !3567)
!3569 = !DILocation(line: 271, column: 50, scope: !3567)
!3570 = !DILocation(line: 271, column: 34, scope: !3567)
!3571 = !DILocalVariable(name: "new_dest", scope: !3567, file: !66, line: 272, type: !9)
!3572 = !DILocation(line: 272, column: 13, scope: !3567)
!3573 = !DILocation(line: 272, column: 42, scope: !3567)
!3574 = !DILocation(line: 272, column: 48, scope: !3567)
!3575 = !DILocation(line: 272, column: 24, scope: !3567)
!3576 = !DILocation(line: 273, column: 31, scope: !3567)
!3577 = !DILocation(line: 273, column: 7, scope: !3567)
!3578 = !DILocation(line: 274, column: 21, scope: !3567)
!3579 = !DILocation(line: 274, column: 29, scope: !3567)
!3580 = !DILocation(line: 274, column: 39, scope: !3567)
!3581 = !DILocation(line: 274, column: 12, scope: !3567)
!3582 = !DILocation(line: 274, column: 10, scope: !3567)
!3583 = !DILocation(line: 275, column: 13, scope: !3567)
!3584 = !DILocation(line: 275, column: 7, scope: !3567)
!3585 = !DILocation(line: 276, column: 5, scope: !3567)
!3586 = !DILocation(line: 279, column: 21, scope: !3587)
!3587 = distinct !DILexicalBlock(scope: !3564, file: !66, line: 278, column: 5)
!3588 = !DILocation(line: 279, column: 29, scope: !3587)
!3589 = !DILocation(line: 279, column: 35, scope: !3587)
!3590 = !DILocation(line: 279, column: 12, scope: !3587)
!3591 = !DILocation(line: 279, column: 10, scope: !3587)
!3592 = !DILocation(line: 282, column: 10, scope: !3547)
!3593 = !DILocation(line: 282, column: 3, scope: !3547)
!3594 = distinct !DISubprogram(name: "do_move", scope: !66, file: !66, line: 169, type: !206, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !143)
!3595 = !DILocalVariable(name: "source", arg: 1, scope: !3594, file: !66, line: 169, type: !115)
!3596 = !DILocation(line: 169, column: 22, scope: !3594)
!3597 = !DILocalVariable(name: "dest", arg: 2, scope: !3594, file: !66, line: 169, type: !115)
!3598 = !DILocation(line: 169, column: 42, scope: !3594)
!3599 = !DILocalVariable(name: "x", arg: 3, scope: !3594, file: !66, line: 169, type: !204)
!3600 = !DILocation(line: 169, column: 73, scope: !3594)
!3601 = !DILocalVariable(name: "copy_into_self", scope: !3594, file: !66, line: 171, type: !120)
!3602 = !DILocation(line: 171, column: 8, scope: !3594)
!3603 = !DILocalVariable(name: "rename_succeeded", scope: !3594, file: !66, line: 172, type: !120)
!3604 = !DILocation(line: 172, column: 8, scope: !3594)
!3605 = !DILocalVariable(name: "ok", scope: !3594, file: !66, line: 173, type: !120)
!3606 = !DILocation(line: 173, column: 8, scope: !3594)
!3607 = !DILocation(line: 173, column: 19, scope: !3594)
!3608 = !DILocation(line: 173, column: 27, scope: !3594)
!3609 = !DILocation(line: 173, column: 40, scope: !3594)
!3610 = !DILocation(line: 173, column: 13, scope: !3594)
!3611 = !DILocation(line: 175, column: 7, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3594, file: !66, line: 175, column: 7)
!3613 = !DILocation(line: 175, column: 7, scope: !3594)
!3614 = !DILocalVariable(name: "dir_to_remove", scope: !3615, file: !66, line: 177, type: !115)
!3615 = distinct !DILexicalBlock(scope: !3612, file: !66, line: 176, column: 5)
!3616 = !DILocation(line: 177, column: 19, scope: !3615)
!3617 = !DILocation(line: 178, column: 11, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3615, file: !66, line: 178, column: 11)
!3619 = !DILocation(line: 178, column: 11, scope: !3615)
!3620 = !DILocation(line: 191, column: 25, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !66, line: 179, column: 9)
!3622 = !DILocation(line: 192, column: 14, scope: !3621)
!3623 = !DILocation(line: 193, column: 9, scope: !3621)
!3624 = !DILocation(line: 194, column: 16, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3618, file: !66, line: 194, column: 16)
!3626 = !DILocation(line: 194, column: 16, scope: !3618)
!3627 = !DILocation(line: 198, column: 25, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3625, file: !66, line: 195, column: 9)
!3629 = !DILocation(line: 199, column: 9, scope: !3628)
!3630 = !DILocation(line: 224, column: 27, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3625, file: !66, line: 201, column: 9)
!3632 = !DILocation(line: 224, column: 25, scope: !3631)
!3633 = !DILocation(line: 227, column: 11, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3615, file: !66, line: 227, column: 11)
!3635 = !DILocation(line: 227, column: 25, scope: !3634)
!3636 = !DILocation(line: 227, column: 11, scope: !3615)
!3637 = !DILocalVariable(name: "rm_options", scope: !3638, file: !66, line: 229, type: !214)
!3638 = distinct !DILexicalBlock(scope: !3634, file: !66, line: 228, column: 9)
!3639 = !DILocation(line: 229, column: 29, scope: !3638)
!3640 = !DILocalVariable(name: "status", scope: !3638, file: !66, line: 230, type: !106)
!3641 = !DILocation(line: 230, column: 26, scope: !3638)
!3642 = !DILocalVariable(name: "dir", scope: !3638, file: !66, line: 231, type: !208)
!3643 = !DILocation(line: 231, column: 23, scope: !3638)
!3644 = !DILocation(line: 233, column: 11, scope: !3638)
!3645 = !DILocation(line: 234, column: 32, scope: !3638)
!3646 = !DILocation(line: 234, column: 35, scope: !3638)
!3647 = !DILocation(line: 234, column: 22, scope: !3638)
!3648 = !DILocation(line: 234, column: 30, scope: !3638)
!3649 = !{!3650, !3110, i64 26}
!3650 = !{!"rm_options", !3110, i64 0, !2987, i64 4, !3110, i64 8, !3110, i64 9, !3110, i64 10, !2999, i64 16, !3110, i64 24, !3110, i64 25, !3110, i64 26, !3110, i64 27}
!3651 = !DILocation(line: 235, column: 20, scope: !3638)
!3652 = !DILocation(line: 235, column: 11, scope: !3638)
!3653 = !DILocation(line: 235, column: 18, scope: !3638)
!3654 = !DILocation(line: 236, column: 11, scope: !3638)
!3655 = !DILocation(line: 236, column: 18, scope: !3638)
!3656 = !DILocation(line: 238, column: 32, scope: !3638)
!3657 = !DILocation(line: 238, column: 24, scope: !3638)
!3658 = !DILocation(line: 238, column: 20, scope: !3638)
!3659 = !DILocation(line: 238, column: 18, scope: !3638)
!3660 = !{!2987, !2987, i64 0}
!3661 = !DILocation(line: 239, column: 11, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3663, file: !66, line: 239, column: 11)
!3663 = distinct !DILexicalBlock(scope: !3638, file: !66, line: 239, column: 11)
!3664 = !DILocation(line: 239, column: 11, scope: !3663)
!3665 = !DILocation(line: 240, column: 15, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3638, file: !66, line: 240, column: 15)
!3667 = !DILocation(line: 240, column: 22, scope: !3666)
!3668 = !DILocation(line: 240, column: 15, scope: !3638)
!3669 = !DILocation(line: 241, column: 16, scope: !3666)
!3670 = !DILocation(line: 241, column: 13, scope: !3666)
!3671 = !DILocation(line: 242, column: 9, scope: !3638)
!3672 = !DILocation(line: 243, column: 5, scope: !3615)
!3673 = !DILocation(line: 245, column: 10, scope: !3594)
!3674 = !DILocation(line: 245, column: 3, scope: !3594)
!3675 = !DILocalVariable(name: "x", arg: 1, scope: !241, file: !66, line: 75, type: !213)
!3676 = !DILocation(line: 75, column: 36, scope: !241)
!3677 = !DILocation(line: 77, column: 3, scope: !241)
!3678 = !DILocation(line: 77, column: 6, scope: !241)
!3679 = !DILocation(line: 77, column: 27, scope: !241)
!3680 = !{!3650, !3110, i64 0}
!3681 = !DILocation(line: 78, column: 3, scope: !241)
!3682 = !DILocation(line: 78, column: 6, scope: !241)
!3683 = !DILocation(line: 78, column: 31, scope: !241)
!3684 = !{!3650, !3110, i64 10}
!3685 = !DILocation(line: 79, column: 3, scope: !241)
!3686 = !DILocation(line: 79, column: 6, scope: !241)
!3687 = !DILocation(line: 79, column: 16, scope: !241)
!3688 = !{!3650, !3110, i64 9}
!3689 = !DILocation(line: 80, column: 3, scope: !241)
!3690 = !DILocation(line: 80, column: 6, scope: !241)
!3691 = !DILocation(line: 80, column: 22, scope: !241)
!3692 = !{!3650, !3110, i64 8}
!3693 = !DILocation(line: 84, column: 3, scope: !241)
!3694 = !DILocation(line: 84, column: 6, scope: !241)
!3695 = !DILocation(line: 84, column: 18, scope: !241)
!3696 = !{!3650, !2987, i64 4}
!3697 = !DILocation(line: 85, column: 3, scope: !241)
!3698 = !DILocation(line: 85, column: 6, scope: !241)
!3699 = !DILocation(line: 85, column: 16, scope: !241)
!3700 = !{!3650, !3110, i64 25}
!3701 = !DILocation(line: 87, column: 3, scope: !241)
!3702 = !DILocation(line: 87, column: 6, scope: !241)
!3703 = !DILocation(line: 87, column: 14, scope: !241)
!3704 = !DILocation(line: 93, column: 3, scope: !241)
!3705 = !DILocation(line: 93, column: 6, scope: !241)
!3706 = !DILocation(line: 93, column: 26, scope: !241)
!3707 = !{!3650, !3110, i64 27}
!3708 = !DILocation(line: 97, column: 23, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !241, file: !66, line: 95, column: 3)
!3710 = !DILocation(line: 97, column: 5, scope: !3709)
!3711 = !DILocation(line: 97, column: 8, scope: !3709)
!3712 = !DILocation(line: 97, column: 21, scope: !3709)
!3713 = !{!3650, !2999, i64 16}
!3714 = !DILocation(line: 98, column: 9, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3709, file: !66, line: 98, column: 9)
!3716 = !DILocation(line: 98, column: 12, scope: !3715)
!3717 = !DILocation(line: 98, column: 25, scope: !3715)
!3718 = !DILocation(line: 98, column: 9, scope: !3709)
!3719 = !DILocation(line: 99, column: 7, scope: !3715)
!3720 = !DILocation(line: 103, column: 3, scope: !241)
!3721 = !DILocation(line: 103, column: 6, scope: !241)
!3722 = !DILocation(line: 103, column: 24, scope: !241)
!3723 = !{!3650, !3110, i64 24}
!3724 = !DILocation(line: 104, column: 1, scope: !241)
!3725 = distinct !DISubprogram(name: "rm", scope: !1325, file: !1325, line: 577, type: !1337, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!3726 = !DILocalVariable(name: "file", arg: 1, scope: !3725, file: !1325, line: 577, type: !1339)
!3727 = !DILocation(line: 577, column: 18, scope: !3725)
!3728 = !DILocalVariable(name: "x", arg: 2, scope: !3725, file: !1325, line: 577, type: !1341)
!3729 = !DILocation(line: 577, column: 49, scope: !3725)
!3730 = !DILocalVariable(name: "rm_status", scope: !3725, file: !1325, line: 579, type: !106)
!3731 = !DILocation(line: 579, column: 18, scope: !3725)
!3732 = !DILocation(line: 581, column: 8, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3725, file: !1325, line: 581, column: 7)
!3734 = !DILocation(line: 581, column: 7, scope: !3733)
!3735 = !DILocation(line: 581, column: 7, scope: !3725)
!3736 = !DILocalVariable(name: "bit_flags", scope: !3737, file: !1325, line: 583, type: !7)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !1325, line: 582, column: 5)
!3738 = !DILocation(line: 583, column: 11, scope: !3737)
!3739 = !DILocation(line: 587, column: 11, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3737, file: !1325, line: 587, column: 11)
!3741 = !DILocation(line: 587, column: 14, scope: !3740)
!3742 = !DILocation(line: 587, column: 11, scope: !3737)
!3743 = !DILocation(line: 588, column: 19, scope: !3740)
!3744 = !DILocation(line: 588, column: 9, scope: !3740)
!3745 = !DILocalVariable(name: "fts", scope: !3737, file: !1325, line: 590, type: !1360)
!3746 = !DILocation(line: 590, column: 12, scope: !3737)
!3747 = !DILocation(line: 590, column: 29, scope: !3737)
!3748 = !DILocation(line: 590, column: 35, scope: !3737)
!3749 = !DILocation(line: 590, column: 18, scope: !3737)
!3750 = !DILocation(line: 592, column: 7, scope: !3737)
!3751 = !DILocalVariable(name: "ent", scope: !3752, file: !1325, line: 594, type: !1453)
!3752 = distinct !DILexicalBlock(scope: !3737, file: !1325, line: 593, column: 9)
!3753 = !DILocation(line: 594, column: 19, scope: !3752)
!3754 = !DILocation(line: 596, column: 27, scope: !3752)
!3755 = !DILocation(line: 596, column: 17, scope: !3752)
!3756 = !DILocation(line: 596, column: 15, scope: !3752)
!3757 = !DILocation(line: 597, column: 15, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3752, file: !1325, line: 597, column: 15)
!3759 = !DILocation(line: 597, column: 19, scope: !3758)
!3760 = !DILocation(line: 597, column: 15, scope: !3752)
!3761 = !DILocation(line: 599, column: 19, scope: !3762)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !1325, line: 599, column: 19)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !1325, line: 598, column: 13)
!3764 = !DILocation(line: 599, column: 25, scope: !3762)
!3765 = !DILocation(line: 599, column: 19, scope: !3763)
!3766 = !DILocation(line: 601, column: 29, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3762, file: !1325, line: 600, column: 17)
!3768 = !DILocation(line: 601, column: 36, scope: !3767)
!3769 = !DILocation(line: 601, column: 19, scope: !3767)
!3770 = !DILocation(line: 602, column: 29, scope: !3767)
!3771 = !DILocation(line: 603, column: 17, scope: !3767)
!3772 = !DILocation(line: 604, column: 15, scope: !3763)
!3773 = !DILocalVariable(name: "s", scope: !3752, file: !1325, line: 607, type: !106)
!3774 = !DILocation(line: 607, column: 26, scope: !3752)
!3775 = !DILocation(line: 607, column: 38, scope: !3752)
!3776 = !DILocation(line: 607, column: 43, scope: !3752)
!3777 = !DILocation(line: 607, column: 48, scope: !3752)
!3778 = !DILocation(line: 607, column: 30, scope: !3752)
!3779 = !DILocation(line: 609, column: 11, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !1325, line: 609, column: 11)
!3781 = distinct !DILexicalBlock(scope: !3752, file: !1325, line: 609, column: 11)
!3782 = !DILocation(line: 609, column: 11, scope: !3781)
!3783 = !DILocation(line: 610, column: 11, scope: !3752)
!3784 = !DILocation(line: 610, column: 11, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !1325, line: 610, column: 11)
!3786 = distinct !DILexicalBlock(scope: !3752, file: !1325, line: 610, column: 11)
!3787 = !DILocation(line: 610, column: 11, scope: !3786)
!3788 = distinct !{!3788, !3750, !3789}
!3789 = !DILocation(line: 611, column: 9, scope: !3737)
!3790 = !DILocation(line: 613, column: 22, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3737, file: !1325, line: 613, column: 11)
!3792 = !DILocation(line: 613, column: 11, scope: !3791)
!3793 = !DILocation(line: 613, column: 27, scope: !3791)
!3794 = !DILocation(line: 613, column: 11, scope: !3737)
!3795 = !DILocation(line: 615, column: 21, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3791, file: !1325, line: 614, column: 9)
!3797 = !DILocation(line: 615, column: 28, scope: !3796)
!3798 = !DILocation(line: 615, column: 11, scope: !3796)
!3799 = !DILocation(line: 616, column: 21, scope: !3796)
!3800 = !DILocation(line: 617, column: 9, scope: !3796)
!3801 = !DILocation(line: 618, column: 5, scope: !3737)
!3802 = !DILocation(line: 620, column: 10, scope: !3725)
!3803 = !DILocation(line: 620, column: 3, scope: !3725)
!3804 = distinct !DISubprogram(name: "rm_fts", scope: !1325, file: !1325, line: 418, type: !1455, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!3805 = !DILocalVariable(name: "fts", arg: 1, scope: !3804, file: !1325, line: 418, type: !1360)
!3806 = !DILocation(line: 418, column: 14, scope: !3804)
!3807 = !DILocalVariable(name: "ent", arg: 2, scope: !3804, file: !1325, line: 418, type: !1453)
!3808 = !DILocation(line: 418, column: 27, scope: !3804)
!3809 = !DILocalVariable(name: "x", arg: 3, scope: !3804, file: !1325, line: 418, type: !1341)
!3810 = !DILocation(line: 418, column: 57, scope: !3804)
!3811 = !DILocation(line: 420, column: 11, scope: !3804)
!3812 = !DILocation(line: 420, column: 16, scope: !3804)
!3813 = !{!3814, !3814, i64 0}
!3814 = !{!"short", !2987, i64 0}
!3815 = !DILocation(line: 420, column: 3, scope: !3804)
!3816 = !DILocation(line: 423, column: 13, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !1325, line: 423, column: 11)
!3818 = distinct !DILexicalBlock(scope: !3804, file: !1325, line: 421, column: 5)
!3819 = !DILocation(line: 423, column: 16, scope: !3817)
!3820 = !DILocation(line: 424, column: 11, scope: !3817)
!3821 = !DILocation(line: 424, column: 16, scope: !3817)
!3822 = !DILocation(line: 424, column: 19, scope: !3817)
!3823 = !DILocation(line: 425, column: 16, scope: !3817)
!3824 = !DILocation(line: 425, column: 33, scope: !3817)
!3825 = !DILocation(line: 425, column: 38, scope: !3817)
!3826 = !{!3827, !2986, i64 44}
!3827 = !{!"", !2999, i64 0, !2999, i64 8, !2999, i64 16, !3183, i64 24, !2999, i64 32, !2986, i64 40, !2986, i64 44, !3183, i64 48, !3183, i64 56, !2999, i64 64, !2986, i64 72, !2999, i64 80, !2987, i64 88, !3828, i64 96}
!3828 = !{!"I_ring", !2987, i64 0, !2986, i64 16, !2986, i64 20, !2986, i64 24, !3110, i64 28}
!3829 = !DILocation(line: 425, column: 50, scope: !3817)
!3830 = !DILocation(line: 425, column: 55, scope: !3817)
!3831 = !DILocation(line: 425, column: 19, scope: !3817)
!3832 = !DILocation(line: 423, column: 11, scope: !3818)
!3833 = !DILocalVariable(name: "err", scope: !3834, file: !1325, line: 431, type: !7)
!3834 = distinct !DILexicalBlock(scope: !3817, file: !1325, line: 426, column: 9)
!3835 = !DILocation(line: 431, column: 15, scope: !3834)
!3836 = !DILocation(line: 431, column: 21, scope: !3834)
!3837 = !DILocation(line: 431, column: 24, scope: !3834)
!3838 = !DILocation(line: 432, column: 21, scope: !3834)
!3839 = !DILocation(line: 432, column: 26, scope: !3834)
!3840 = !DILocation(line: 432, column: 49, scope: !3834)
!3841 = !DILocation(line: 432, column: 11, scope: !3834)
!3842 = !DILocation(line: 433, column: 31, scope: !3834)
!3843 = !DILocation(line: 433, column: 11, scope: !3834)
!3844 = !DILocation(line: 434, column: 26, scope: !3834)
!3845 = !DILocation(line: 434, column: 31, scope: !3834)
!3846 = !DILocation(line: 434, column: 11, scope: !3834)
!3847 = !DILocation(line: 435, column: 11, scope: !3834)
!3848 = !DILocation(line: 439, column: 11, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3818, file: !1325, line: 439, column: 11)
!3850 = !DILocation(line: 439, column: 16, scope: !3849)
!3851 = !{!3183, !3183, i64 0}
!3852 = !DILocation(line: 439, column: 26, scope: !3849)
!3853 = !DILocation(line: 439, column: 11, scope: !3818)
!3854 = !DILocation(line: 444, column: 46, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !1325, line: 444, column: 15)
!3856 = distinct !DILexicalBlock(scope: !3849, file: !1325, line: 440, column: 9)
!3857 = !DILocation(line: 444, column: 51, scope: !3855)
!3858 = !DILocation(line: 444, column: 30, scope: !3855)
!3859 = !DILocation(line: 444, column: 15, scope: !3855)
!3860 = !DILocation(line: 444, column: 15, scope: !3856)
!3861 = !DILocation(line: 447, column: 22, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3855, file: !1325, line: 445, column: 13)
!3863 = !DILocation(line: 448, column: 22, scope: !3862)
!3864 = !DILocation(line: 448, column: 42, scope: !3862)
!3865 = !DILocation(line: 449, column: 22, scope: !3862)
!3866 = !DILocation(line: 446, column: 15, scope: !3862)
!3867 = !DILocation(line: 450, column: 30, scope: !3862)
!3868 = !DILocation(line: 450, column: 35, scope: !3862)
!3869 = !DILocation(line: 450, column: 15, scope: !3862)
!3870 = !DILocation(line: 451, column: 15, scope: !3862)
!3871 = !DILocation(line: 457, column: 15, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3856, file: !1325, line: 457, column: 15)
!3873 = !{!3182, !3183, i64 8}
!3874 = !{!3875, !3183, i64 0}
!3875 = !{!"dev_ino", !3183, i64 0, !3183, i64 8}
!3876 = !{!3182, !3183, i64 0}
!3877 = !{!3875, !3183, i64 8}
!3878 = !DILocation(line: 457, column: 15, scope: !3856)
!3879 = !DILocation(line: 459, column: 15, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3872, file: !1325, line: 458, column: 13)
!3881 = !DILocation(line: 459, column: 15, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3883, file: !1325, line: 459, column: 15)
!3883 = distinct !DILexicalBlock(scope: !3880, file: !1325, line: 459, column: 15)
!3884 = !DILocation(line: 459, column: 15, scope: !3883)
!3885 = !DILocation(line: 460, column: 30, scope: !3880)
!3886 = !DILocation(line: 460, column: 35, scope: !3880)
!3887 = !DILocation(line: 460, column: 15, scope: !3880)
!3888 = !DILocation(line: 461, column: 15, scope: !3880)
!3889 = !DILocation(line: 467, column: 15, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3856, file: !1325, line: 467, column: 15)
!3891 = !DILocation(line: 467, column: 18, scope: !3890)
!3892 = !DILocation(line: 467, column: 15, scope: !3856)
!3893 = !DILocalVariable(name: "failed", scope: !3894, file: !1325, line: 469, type: !120)
!3894 = distinct !DILexicalBlock(scope: !3890, file: !1325, line: 468, column: 13)
!3895 = !DILocation(line: 469, column: 20, scope: !3894)
!3896 = !DILocalVariable(name: "parent", scope: !3894, file: !1325, line: 470, type: !9)
!3897 = !DILocation(line: 470, column: 21, scope: !3894)
!3898 = !DILocation(line: 470, column: 48, scope: !3894)
!3899 = !DILocation(line: 470, column: 53, scope: !3894)
!3900 = !DILocation(line: 470, column: 30, scope: !3894)
!3901 = !DILocalVariable(name: "statbuf", scope: !3894, file: !1325, line: 471, type: !1390)
!3902 = !DILocation(line: 471, column: 27, scope: !3894)
!3903 = !DILocation(line: 473, column: 20, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3894, file: !1325, line: 473, column: 19)
!3905 = !DILocation(line: 473, column: 27, scope: !3904)
!3906 = !DILocation(line: 473, column: 37, scope: !3904)
!3907 = !DILocation(line: 473, column: 30, scope: !3904)
!3908 = !DILocation(line: 473, column: 19, scope: !3894)
!3909 = !DILocation(line: 476, column: 26, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3904, file: !1325, line: 474, column: 17)
!3911 = !DILocation(line: 477, column: 26, scope: !3910)
!3912 = !DILocation(line: 478, column: 26, scope: !3910)
!3913 = !DILocation(line: 475, column: 19, scope: !3910)
!3914 = !DILocation(line: 479, column: 26, scope: !3910)
!3915 = !DILocation(line: 480, column: 17, scope: !3910)
!3916 = !DILocation(line: 482, column: 21, scope: !3894)
!3917 = !DILocation(line: 482, column: 15, scope: !3894)
!3918 = !DILocation(line: 484, column: 19, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3894, file: !1325, line: 484, column: 19)
!3920 = !DILocation(line: 484, column: 26, scope: !3919)
!3921 = !DILocation(line: 484, column: 29, scope: !3919)
!3922 = !DILocation(line: 484, column: 34, scope: !3919)
!3923 = !{!3827, !3183, i64 24}
!3924 = !DILocation(line: 484, column: 53, scope: !3919)
!3925 = !DILocation(line: 484, column: 42, scope: !3919)
!3926 = !DILocation(line: 484, column: 19, scope: !3894)
!3927 = !DILocation(line: 486, column: 25, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !1325, line: 486, column: 23)
!3929 = distinct !DILexicalBlock(scope: !3919, file: !1325, line: 485, column: 17)
!3930 = !DILocation(line: 486, column: 23, scope: !3929)
!3931 = !DILocation(line: 489, column: 30, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !1325, line: 487, column: 21)
!3933 = !DILocation(line: 490, column: 30, scope: !3932)
!3934 = !DILocation(line: 488, column: 23, scope: !3932)
!3935 = !DILocation(line: 491, column: 36, scope: !3932)
!3936 = !DILocation(line: 491, column: 23, scope: !3932)
!3937 = !DILocation(line: 492, column: 21, scope: !3932)
!3938 = !DILocation(line: 493, column: 34, scope: !3929)
!3939 = !DILocation(line: 493, column: 39, scope: !3929)
!3940 = !DILocation(line: 493, column: 19, scope: !3929)
!3941 = !DILocation(line: 494, column: 19, scope: !3929)
!3942 = !DILocation(line: 496, column: 13, scope: !3894)
!3943 = !DILocation(line: 497, column: 9, scope: !3856)
!3944 = !DILocalVariable(name: "is_empty_directory", scope: !3945, file: !1325, line: 500, type: !1457)
!3945 = distinct !DILexicalBlock(scope: !3818, file: !1325, line: 499, column: 7)
!3946 = !DILocation(line: 500, column: 17, scope: !3945)
!3947 = !DILocalVariable(name: "s", scope: !3945, file: !1325, line: 501, type: !106)
!3948 = !DILocation(line: 501, column: 24, scope: !3945)
!3949 = !DILocation(line: 501, column: 36, scope: !3945)
!3950 = !DILocation(line: 501, column: 41, scope: !3945)
!3951 = !DILocation(line: 501, column: 63, scope: !3945)
!3952 = !DILocation(line: 501, column: 28, scope: !3945)
!3953 = !DILocation(line: 504, column: 13, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3945, file: !1325, line: 504, column: 13)
!3955 = !DILocation(line: 504, column: 15, scope: !3954)
!3956 = !DILocation(line: 504, column: 24, scope: !3954)
!3957 = !DILocation(line: 504, column: 27, scope: !3954)
!3958 = !DILocation(line: 504, column: 46, scope: !3954)
!3959 = !DILocation(line: 504, column: 13, scope: !3945)
!3960 = !DILocation(line: 508, column: 25, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3954, file: !1325, line: 505, column: 11)
!3962 = !DILocation(line: 508, column: 30, scope: !3961)
!3963 = !DILocation(line: 508, column: 35, scope: !3961)
!3964 = !DILocation(line: 508, column: 17, scope: !3961)
!3965 = !DILocation(line: 508, column: 15, scope: !3961)
!3966 = !DILocation(line: 509, column: 28, scope: !3961)
!3967 = !DILocation(line: 509, column: 33, scope: !3961)
!3968 = !DILocation(line: 509, column: 13, scope: !3961)
!3969 = !DILocation(line: 510, column: 11, scope: !3961)
!3970 = !DILocation(line: 512, column: 13, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3945, file: !1325, line: 512, column: 13)
!3972 = !DILocation(line: 512, column: 15, scope: !3971)
!3973 = !DILocation(line: 512, column: 13, scope: !3945)
!3974 = !DILocation(line: 514, column: 33, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3971, file: !1325, line: 513, column: 11)
!3976 = !DILocation(line: 514, column: 13, scope: !3975)
!3977 = !DILocation(line: 515, column: 28, scope: !3975)
!3978 = !DILocation(line: 515, column: 33, scope: !3975)
!3979 = !DILocation(line: 515, column: 13, scope: !3975)
!3980 = !DILocation(line: 516, column: 11, scope: !3975)
!3981 = !DILocation(line: 518, column: 16, scope: !3945)
!3982 = !DILocation(line: 518, column: 9, scope: !3945)
!3983 = !DILocation(line: 533, column: 13, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3985, file: !1325, line: 533, column: 13)
!3985 = distinct !DILexicalBlock(scope: !3818, file: !1325, line: 529, column: 7)
!3986 = !DILocation(line: 533, column: 18, scope: !3984)
!3987 = !DILocation(line: 533, column: 27, scope: !3984)
!3988 = !DILocation(line: 534, column: 13, scope: !3984)
!3989 = !DILocation(line: 534, column: 16, scope: !3984)
!3990 = !DILocation(line: 534, column: 19, scope: !3984)
!3991 = !DILocation(line: 535, column: 13, scope: !3984)
!3992 = !DILocation(line: 535, column: 32, scope: !3984)
!3993 = !DILocation(line: 535, column: 37, scope: !3984)
!3994 = !DILocation(line: 535, column: 30, scope: !3984)
!3995 = !DILocation(line: 536, column: 13, scope: !3984)
!3996 = !DILocation(line: 536, column: 16, scope: !3984)
!3997 = !DILocation(line: 536, column: 21, scope: !3984)
!3998 = !DILocation(line: 536, column: 32, scope: !3984)
!3999 = !DILocation(line: 536, column: 42, scope: !3984)
!4000 = !DILocation(line: 536, column: 47, scope: !3984)
!4001 = !DILocation(line: 536, column: 39, scope: !3984)
!4002 = !DILocation(line: 533, column: 13, scope: !3985)
!4003 = !DILocation(line: 538, column: 33, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3984, file: !1325, line: 537, column: 11)
!4005 = !DILocation(line: 538, column: 13, scope: !4004)
!4006 = !DILocation(line: 539, column: 26, scope: !4004)
!4007 = !DILocation(line: 540, column: 20, scope: !4004)
!4008 = !DILocation(line: 539, column: 13, scope: !4004)
!4009 = !DILocation(line: 541, column: 13, scope: !4004)
!4010 = !DILocalVariable(name: "is_dir", scope: !3985, file: !1325, line: 544, type: !120)
!4011 = !DILocation(line: 544, column: 14, scope: !3985)
!4012 = !DILocation(line: 544, column: 23, scope: !3985)
!4013 = !DILocation(line: 544, column: 28, scope: !3985)
!4014 = !DILocation(line: 544, column: 37, scope: !3985)
!4015 = !DILocation(line: 544, column: 47, scope: !3985)
!4016 = !DILocation(line: 544, column: 50, scope: !3985)
!4017 = !DILocation(line: 544, column: 55, scope: !3985)
!4018 = !DILocation(line: 544, column: 64, scope: !3985)
!4019 = !DILocalVariable(name: "s", scope: !3985, file: !1325, line: 545, type: !106)
!4020 = !DILocation(line: 545, column: 24, scope: !3985)
!4021 = !DILocation(line: 545, column: 36, scope: !3985)
!4022 = !DILocation(line: 545, column: 41, scope: !3985)
!4023 = !DILocation(line: 545, column: 46, scope: !3985)
!4024 = !DILocation(line: 545, column: 54, scope: !3985)
!4025 = !DILocation(line: 545, column: 28, scope: !3985)
!4026 = !DILocation(line: 546, column: 13, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3985, file: !1325, line: 546, column: 13)
!4028 = !DILocation(line: 546, column: 15, scope: !4027)
!4029 = !DILocation(line: 546, column: 13, scope: !3985)
!4030 = !DILocation(line: 547, column: 18, scope: !4027)
!4031 = !DILocation(line: 547, column: 11, scope: !4027)
!4032 = !DILocation(line: 548, column: 24, scope: !3985)
!4033 = !DILocation(line: 548, column: 29, scope: !3985)
!4034 = !DILocation(line: 548, column: 34, scope: !3985)
!4035 = !DILocation(line: 548, column: 37, scope: !3985)
!4036 = !DILocation(line: 548, column: 16, scope: !3985)
!4037 = !DILocation(line: 548, column: 9, scope: !3985)
!4038 = !DILocation(line: 552, column: 7, scope: !3818)
!4039 = !DILocation(line: 552, column: 7, scope: !4040)
!4040 = distinct !DILexicalBlock(scope: !3818, file: !1325, line: 552, column: 7)
!4041 = !DILocation(line: 553, column: 22, scope: !3818)
!4042 = !DILocation(line: 553, column: 27, scope: !3818)
!4043 = !DILocation(line: 553, column: 7, scope: !3818)
!4044 = !DILocation(line: 554, column: 7, scope: !3818)
!4045 = !DILocation(line: 559, column: 17, scope: !3818)
!4046 = !DILocation(line: 559, column: 22, scope: !3818)
!4047 = !DILocation(line: 559, column: 33, scope: !3818)
!4048 = !DILocation(line: 560, column: 14, scope: !3818)
!4049 = !DILocation(line: 559, column: 7, scope: !3818)
!4050 = !DILocation(line: 561, column: 22, scope: !3818)
!4051 = !DILocation(line: 561, column: 27, scope: !3818)
!4052 = !DILocation(line: 561, column: 7, scope: !3818)
!4053 = !DILocation(line: 562, column: 7, scope: !3818)
!4054 = !DILocation(line: 565, column: 20, scope: !3818)
!4055 = !DILocation(line: 567, column: 14, scope: !3818)
!4056 = !DILocation(line: 567, column: 19, scope: !3818)
!4057 = !DILocation(line: 568, column: 14, scope: !3818)
!4058 = !DILocation(line: 565, column: 7, scope: !3818)
!4059 = !DILocation(line: 570, column: 7, scope: !3818)
!4060 = !DILocation(line: 572, column: 1, scope: !3804)
!4061 = distinct !DISubprogram(name: "is_empty_dir", scope: !141, file: !141, line: 290, type: !1458, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4062 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !4061, file: !141, line: 290, type: !7)
!4063 = !DILocation(line: 290, column: 19, scope: !4061)
!4064 = !DILocalVariable(name: "dir", arg: 2, scope: !4061, file: !141, line: 290, type: !115)
!4065 = !DILocation(line: 290, column: 39, scope: !4061)
!4066 = !DILocalVariable(name: "dirp", scope: !4061, file: !141, line: 292, type: !609)
!4067 = !DILocation(line: 292, column: 8, scope: !4061)
!4068 = !DILocalVariable(name: "dp", scope: !4061, file: !141, line: 293, type: !1460)
!4069 = !DILocation(line: 293, column: 24, scope: !4061)
!4070 = !DILocalVariable(name: "saved_errno", scope: !4061, file: !141, line: 294, type: !7)
!4071 = !DILocation(line: 294, column: 7, scope: !4061)
!4072 = !DILocalVariable(name: "fd", scope: !4061, file: !141, line: 295, type: !7)
!4073 = !DILocation(line: 295, column: 7, scope: !4061)
!4074 = !DILocation(line: 295, column: 20, scope: !4061)
!4075 = !DILocation(line: 295, column: 28, scope: !4061)
!4076 = !DILocation(line: 295, column: 12, scope: !4061)
!4077 = !DILocation(line: 299, column: 7, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4061, file: !141, line: 299, column: 7)
!4079 = !DILocation(line: 299, column: 10, scope: !4078)
!4080 = !DILocation(line: 299, column: 7, scope: !4061)
!4081 = !DILocation(line: 300, column: 5, scope: !4078)
!4082 = !DILocation(line: 302, column: 21, scope: !4061)
!4083 = !DILocation(line: 302, column: 10, scope: !4061)
!4084 = !DILocation(line: 302, column: 8, scope: !4061)
!4085 = !DILocation(line: 303, column: 7, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4061, file: !141, line: 303, column: 7)
!4087 = !DILocation(line: 303, column: 12, scope: !4086)
!4088 = !DILocation(line: 303, column: 7, scope: !4061)
!4089 = !DILocation(line: 305, column: 14, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4086, file: !141, line: 304, column: 5)
!4091 = !DILocation(line: 305, column: 7, scope: !4090)
!4092 = !DILocation(line: 306, column: 7, scope: !4090)
!4093 = !DILocation(line: 309, column: 3, scope: !4061)
!4094 = !DILocation(line: 309, column: 9, scope: !4061)
!4095 = !DILocation(line: 310, column: 41, scope: !4061)
!4096 = !DILocation(line: 310, column: 8, scope: !4061)
!4097 = !DILocation(line: 310, column: 6, scope: !4061)
!4098 = !DILocation(line: 311, column: 17, scope: !4061)
!4099 = !DILocation(line: 311, column: 15, scope: !4061)
!4100 = !DILocation(line: 312, column: 13, scope: !4061)
!4101 = !DILocation(line: 312, column: 3, scope: !4061)
!4102 = !DILocation(line: 313, column: 7, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4061, file: !141, line: 313, column: 7)
!4104 = !DILocation(line: 313, column: 10, scope: !4103)
!4105 = !DILocation(line: 313, column: 7, scope: !4061)
!4106 = !DILocation(line: 314, column: 5, scope: !4103)
!4107 = !DILocation(line: 315, column: 10, scope: !4061)
!4108 = !DILocation(line: 315, column: 22, scope: !4061)
!4109 = !DILocation(line: 315, column: 3, scope: !4061)
!4110 = !DILocation(line: 316, column: 1, scope: !4061)
!4111 = distinct !DISubprogram(name: "mark_ancestor_dirs", scope: !1325, file: !1325, line: 352, type: !1471, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4112 = !DILocalVariable(name: "ent", arg: 1, scope: !4111, file: !1325, line: 352, type: !1453)
!4113 = !DILocation(line: 352, column: 29, scope: !4111)
!4114 = !DILocalVariable(name: "p", scope: !4111, file: !1325, line: 354, type: !1453)
!4115 = !DILocation(line: 354, column: 11, scope: !4111)
!4116 = !DILocation(line: 355, column: 12, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4111, file: !1325, line: 355, column: 3)
!4118 = !DILocation(line: 355, column: 17, scope: !4117)
!4119 = !DILocation(line: 355, column: 10, scope: !4117)
!4120 = !DILocation(line: 355, column: 8, scope: !4117)
!4121 = !DILocation(line: 355, column: 46, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4117, file: !1325, line: 355, column: 3)
!4123 = !DILocation(line: 355, column: 49, scope: !4122)
!4124 = !DILocation(line: 355, column: 43, scope: !4122)
!4125 = !DILocation(line: 355, column: 3, scope: !4117)
!4126 = !DILocation(line: 357, column: 11, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !1325, line: 357, column: 11)
!4128 = distinct !DILexicalBlock(scope: !4122, file: !1325, line: 356, column: 5)
!4129 = !DILocation(line: 357, column: 14, scope: !4127)
!4130 = !DILocation(line: 357, column: 11, scope: !4128)
!4131 = !DILocation(line: 358, column: 9, scope: !4127)
!4132 = !DILocation(line: 359, column: 7, scope: !4128)
!4133 = !DILocation(line: 359, column: 10, scope: !4128)
!4134 = !DILocation(line: 359, column: 21, scope: !4128)
!4135 = !DILocation(line: 360, column: 5, scope: !4128)
!4136 = !DILocation(line: 355, column: 64, scope: !4122)
!4137 = !DILocation(line: 355, column: 67, scope: !4122)
!4138 = !DILocation(line: 355, column: 62, scope: !4122)
!4139 = !DILocation(line: 355, column: 3, scope: !4122)
!4140 = distinct !{!4140, !4125, !4141}
!4141 = !DILocation(line: 360, column: 5, scope: !4117)
!4142 = !DILocation(line: 361, column: 1, scope: !4111)
!4143 = distinct !DISubprogram(name: "fts_skip_tree", scope: !1325, file: !1325, line: 341, type: !1473, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4144 = !DILocalVariable(name: "fts", arg: 1, scope: !4143, file: !1325, line: 341, type: !1360)
!4145 = !DILocation(line: 341, column: 21, scope: !4143)
!4146 = !DILocalVariable(name: "ent", arg: 2, scope: !4143, file: !1325, line: 341, type: !1453)
!4147 = !DILocation(line: 341, column: 34, scope: !4143)
!4148 = !DILocation(line: 343, column: 12, scope: !4143)
!4149 = !DILocation(line: 343, column: 17, scope: !4143)
!4150 = !DILocation(line: 343, column: 3, scope: !4143)
!4151 = !DILocalVariable(name: "__x", scope: !4152, file: !1325, line: 345, type: !1453)
!4152 = distinct !DILexicalBlock(scope: !4143, file: !1325, line: 345, column: 3)
!4153 = !DILocation(line: 345, column: 3, scope: !4152)
!4154 = !DILocation(line: 346, column: 1, scope: !4143)
!4155 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !141, file: !141, line: 265, type: !200, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4156 = !DILocalVariable(name: "file_name", arg: 1, scope: !4155, file: !141, line: 265, type: !115)
!4157 = !DILocation(line: 265, column: 28, scope: !4155)
!4158 = !DILocation(line: 267, column: 7, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4155, file: !141, line: 267, column: 7)
!4160 = !DILocation(line: 267, column: 20, scope: !4159)
!4161 = !DILocation(line: 267, column: 7, scope: !4155)
!4162 = !DILocalVariable(name: "sep", scope: !4163, file: !141, line: 269, type: !10)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !141, line: 268, column: 5)
!4164 = !DILocation(line: 269, column: 12, scope: !4163)
!4165 = !DILocation(line: 269, column: 18, scope: !4163)
!4166 = !DILocation(line: 269, column: 29, scope: !4163)
!4167 = !DILocation(line: 269, column: 42, scope: !4163)
!4168 = !DILocation(line: 269, column: 50, scope: !4163)
!4169 = !DILocation(line: 270, column: 17, scope: !4163)
!4170 = !DILocation(line: 270, column: 21, scope: !4163)
!4171 = !DILocation(line: 270, column: 24, scope: !4163)
!4172 = !DILocation(line: 270, column: 7, scope: !4163)
!4173 = !DILocation(line: 273, column: 5, scope: !4159)
!4174 = !DILocation(line: 274, column: 1, scope: !4155)
!4175 = distinct !DISubprogram(name: "prompt", scope: !1325, file: !1325, line: 176, type: !1475, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4176 = !DILocalVariable(name: "fts", arg: 1, scope: !4175, file: !1325, line: 176, type: !1477)
!4177 = !DILocation(line: 176, column: 20, scope: !4175)
!4178 = !DILocalVariable(name: "ent", arg: 2, scope: !4175, file: !1325, line: 176, type: !1479)
!4179 = !DILocation(line: 176, column: 39, scope: !4175)
!4180 = !DILocalVariable(name: "is_dir", arg: 3, scope: !4175, file: !1325, line: 176, type: !120)
!4181 = !DILocation(line: 176, column: 49, scope: !4175)
!4182 = !DILocalVariable(name: "x", arg: 4, scope: !4175, file: !1325, line: 177, type: !1341)
!4183 = !DILocation(line: 177, column: 34, scope: !4175)
!4184 = !DILocalVariable(name: "mode", arg: 5, scope: !4175, file: !1325, line: 177, type: !1332)
!4185 = !DILocation(line: 177, column: 56, scope: !4175)
!4186 = !DILocalVariable(name: "is_empty_p", arg: 6, scope: !4175, file: !1325, line: 178, type: !1481)
!4187 = !DILocation(line: 178, column: 18, scope: !4175)
!4188 = !DILocalVariable(name: "fd_cwd", scope: !4175, file: !1325, line: 180, type: !7)
!4189 = !DILocation(line: 180, column: 7, scope: !4175)
!4190 = !DILocation(line: 180, column: 16, scope: !4175)
!4191 = !DILocation(line: 180, column: 21, scope: !4175)
!4192 = !DILocalVariable(name: "full_name", scope: !4175, file: !1325, line: 181, type: !115)
!4193 = !DILocation(line: 181, column: 15, scope: !4175)
!4194 = !DILocation(line: 181, column: 27, scope: !4175)
!4195 = !DILocation(line: 181, column: 32, scope: !4175)
!4196 = !DILocalVariable(name: "filename", scope: !4175, file: !1325, line: 182, type: !115)
!4197 = !DILocation(line: 182, column: 15, scope: !4175)
!4198 = !DILocation(line: 182, column: 26, scope: !4175)
!4199 = !DILocation(line: 182, column: 31, scope: !4175)
!4200 = !DILocation(line: 183, column: 7, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4175, file: !1325, line: 183, column: 7)
!4202 = !DILocation(line: 183, column: 7, scope: !4175)
!4203 = !DILocation(line: 184, column: 6, scope: !4201)
!4204 = !DILocation(line: 184, column: 17, scope: !4201)
!4205 = !DILocation(line: 184, column: 5, scope: !4201)
!4206 = !DILocalVariable(name: "st", scope: !4175, file: !1325, line: 186, type: !1390)
!4207 = !DILocation(line: 186, column: 15, scope: !4175)
!4208 = !DILocalVariable(name: "sbuf", scope: !4175, file: !1325, line: 187, type: !1482)
!4209 = !DILocation(line: 187, column: 16, scope: !4175)
!4210 = !DILocation(line: 188, column: 20, scope: !4175)
!4211 = !DILocation(line: 188, column: 3, scope: !4175)
!4212 = !DILocalVariable(name: "dirent_type", scope: !4175, file: !1325, line: 190, type: !7)
!4213 = !DILocation(line: 190, column: 7, scope: !4175)
!4214 = !DILocation(line: 190, column: 21, scope: !4175)
!4215 = !DILocalVariable(name: "write_protected", scope: !4175, file: !1325, line: 191, type: !7)
!4216 = !DILocation(line: 191, column: 7, scope: !4175)
!4217 = !DILocalVariable(name: "is_empty", scope: !4175, file: !1325, line: 193, type: !120)
!4218 = !DILocation(line: 193, column: 8, scope: !4175)
!4219 = !DILocation(line: 194, column: 7, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4175, file: !1325, line: 194, column: 7)
!4221 = !DILocation(line: 194, column: 7, scope: !4175)
!4222 = !DILocation(line: 196, column: 32, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4220, file: !1325, line: 195, column: 5)
!4224 = !DILocation(line: 196, column: 40, scope: !4223)
!4225 = !DILocation(line: 196, column: 18, scope: !4223)
!4226 = !DILocation(line: 196, column: 16, scope: !4223)
!4227 = !DILocation(line: 197, column: 21, scope: !4223)
!4228 = !DILocation(line: 197, column: 8, scope: !4223)
!4229 = !DILocation(line: 197, column: 19, scope: !4223)
!4230 = !DILocation(line: 198, column: 5, scope: !4223)
!4231 = !DILocation(line: 203, column: 7, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4175, file: !1325, line: 203, column: 7)
!4233 = !DILocation(line: 203, column: 12, scope: !4232)
!4234 = !DILocation(line: 203, column: 7, scope: !4175)
!4235 = !DILocation(line: 204, column: 5, scope: !4232)
!4236 = !DILocation(line: 206, column: 7, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4175, file: !1325, line: 206, column: 7)
!4238 = !DILocation(line: 206, column: 10, scope: !4237)
!4239 = !DILocation(line: 206, column: 22, scope: !4237)
!4240 = !DILocation(line: 206, column: 7, scope: !4175)
!4241 = !DILocation(line: 207, column: 5, scope: !4237)
!4242 = !DILocalVariable(name: "wp_errno", scope: !4175, file: !1325, line: 209, type: !7)
!4243 = !DILocation(line: 209, column: 7, scope: !4175)
!4244 = !DILocation(line: 210, column: 8, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4175, file: !1325, line: 210, column: 7)
!4246 = !DILocation(line: 210, column: 11, scope: !4245)
!4247 = !DILocation(line: 211, column: 7, scope: !4245)
!4248 = !DILocation(line: 211, column: 12, scope: !4245)
!4249 = !DILocation(line: 211, column: 15, scope: !4245)
!4250 = !DILocation(line: 211, column: 27, scope: !4245)
!4251 = !DILocation(line: 211, column: 42, scope: !4245)
!4252 = !DILocation(line: 211, column: 45, scope: !4245)
!4253 = !DILocation(line: 211, column: 48, scope: !4245)
!4254 = !DILocation(line: 212, column: 7, scope: !4245)
!4255 = !DILocation(line: 212, column: 10, scope: !4245)
!4256 = !DILocation(line: 212, column: 22, scope: !4245)
!4257 = !DILocation(line: 210, column: 7, scope: !4175)
!4258 = !DILocation(line: 214, column: 54, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4245, file: !1325, line: 213, column: 5)
!4260 = !DILocation(line: 214, column: 62, scope: !4259)
!4261 = !DILocation(line: 214, column: 72, scope: !4259)
!4262 = !DILocation(line: 214, column: 25, scope: !4259)
!4263 = !DILocation(line: 214, column: 23, scope: !4259)
!4264 = !DILocation(line: 215, column: 18, scope: !4259)
!4265 = !DILocation(line: 215, column: 16, scope: !4259)
!4266 = !DILocation(line: 216, column: 5, scope: !4259)
!4267 = !DILocation(line: 218, column: 7, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4175, file: !1325, line: 218, column: 7)
!4269 = !DILocation(line: 218, column: 23, scope: !4268)
!4270 = !DILocation(line: 218, column: 26, scope: !4268)
!4271 = !DILocation(line: 218, column: 29, scope: !4268)
!4272 = !DILocation(line: 218, column: 41, scope: !4268)
!4273 = !DILocation(line: 218, column: 7, scope: !4175)
!4274 = !DILocation(line: 220, column: 16, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !1325, line: 220, column: 11)
!4276 = distinct !DILexicalBlock(scope: !4268, file: !1325, line: 219, column: 5)
!4277 = !DILocation(line: 220, column: 13, scope: !4275)
!4278 = !DILocation(line: 220, column: 32, scope: !4275)
!4279 = !DILocation(line: 220, column: 35, scope: !4275)
!4280 = !DILocation(line: 220, column: 47, scope: !4275)
!4281 = !DILocation(line: 220, column: 11, scope: !4276)
!4282 = !DILocation(line: 222, column: 30, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4284, file: !1325, line: 222, column: 15)
!4284 = distinct !DILexicalBlock(scope: !4275, file: !1325, line: 221, column: 9)
!4285 = !DILocation(line: 222, column: 38, scope: !4283)
!4286 = !DILocation(line: 222, column: 48, scope: !4283)
!4287 = !DILocation(line: 222, column: 15, scope: !4283)
!4288 = !DILocation(line: 222, column: 75, scope: !4283)
!4289 = !DILocation(line: 222, column: 15, scope: !4284)
!4290 = !DILocation(line: 224, column: 19, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !1325, line: 224, column: 19)
!4292 = distinct !DILexicalBlock(scope: !4283, file: !1325, line: 223, column: 13)
!4293 = !DILocation(line: 224, column: 19, scope: !4292)
!4294 = !DILocation(line: 225, column: 29, scope: !4291)
!4295 = !DILocation(line: 225, column: 17, scope: !4291)
!4296 = !DILocation(line: 226, column: 24, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4291, file: !1325, line: 226, column: 24)
!4298 = !DILocation(line: 226, column: 24, scope: !4291)
!4299 = !DILocation(line: 227, column: 29, scope: !4297)
!4300 = !DILocation(line: 227, column: 17, scope: !4297)
!4301 = !DILocation(line: 229, column: 13, scope: !4292)
!4302 = !DILocation(line: 233, column: 31, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4283, file: !1325, line: 231, column: 13)
!4304 = !DILocation(line: 234, column: 26, scope: !4303)
!4305 = !DILocation(line: 234, column: 24, scope: !4303)
!4306 = !DILocation(line: 236, column: 9, scope: !4284)
!4307 = !DILocation(line: 238, column: 16, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4276, file: !1325, line: 238, column: 11)
!4309 = !DILocation(line: 238, column: 13, scope: !4308)
!4310 = !DILocation(line: 238, column: 11, scope: !4276)
!4311 = !DILocation(line: 239, column: 17, scope: !4308)
!4312 = !DILocation(line: 239, column: 9, scope: !4308)
!4313 = !DILocation(line: 243, column: 17, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !1325, line: 243, column: 17)
!4315 = distinct !DILexicalBlock(scope: !4308, file: !1325, line: 240, column: 11)
!4316 = !DILocation(line: 243, column: 20, scope: !4314)
!4317 = !DILocation(line: 243, column: 32, scope: !4314)
!4318 = !DILocation(line: 243, column: 17, scope: !4315)
!4319 = !DILocation(line: 244, column: 15, scope: !4314)
!4320 = !DILocation(line: 245, column: 13, scope: !4315)
!4321 = !DILocation(line: 251, column: 21, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4315, file: !1325, line: 251, column: 18)
!4323 = !DILocation(line: 251, column: 24, scope: !4322)
!4324 = !DILocation(line: 251, column: 34, scope: !4322)
!4325 = !DILocation(line: 251, column: 38, scope: !4322)
!4326 = !DILocation(line: 251, column: 41, scope: !4322)
!4327 = !DILocation(line: 251, column: 66, scope: !4322)
!4328 = !DILocation(line: 251, column: 69, scope: !4322)
!4329 = !DILocation(line: 251, column: 18, scope: !4315)
!4330 = !DILocation(line: 253, column: 33, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4322, file: !1325, line: 252, column: 15)
!4332 = !DILocation(line: 254, column: 26, scope: !4331)
!4333 = !DILocation(line: 255, column: 15, scope: !4331)
!4334 = !DILocation(line: 256, column: 13, scope: !4315)
!4335 = !DILocation(line: 257, column: 11, scope: !4315)
!4336 = !DILocalVariable(name: "quoted_name", scope: !4276, file: !1325, line: 259, type: !115)
!4337 = !DILocation(line: 259, column: 19, scope: !4276)
!4338 = !DILocation(line: 259, column: 33, scope: !4276)
!4339 = !DILocation(line: 261, column: 11, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4276, file: !1325, line: 261, column: 11)
!4341 = !DILocation(line: 261, column: 27, scope: !4340)
!4342 = !DILocation(line: 261, column: 11, scope: !4276)
!4343 = !DILocation(line: 263, column: 21, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4340, file: !1325, line: 262, column: 9)
!4345 = !DILocation(line: 263, column: 31, scope: !4344)
!4346 = !DILocation(line: 263, column: 54, scope: !4344)
!4347 = !DILocation(line: 263, column: 11, scope: !4344)
!4348 = !DILocation(line: 264, column: 11, scope: !4344)
!4349 = !DILocation(line: 268, column: 11, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4276, file: !1325, line: 268, column: 11)
!4351 = !DILocation(line: 268, column: 23, scope: !4350)
!4352 = !DILocation(line: 269, column: 11, scope: !4350)
!4353 = !DILocation(line: 269, column: 14, scope: !4350)
!4354 = !DILocation(line: 269, column: 19, scope: !4350)
!4355 = !DILocation(line: 270, column: 11, scope: !4350)
!4356 = !DILocation(line: 270, column: 15, scope: !4350)
!4357 = !DILocation(line: 268, column: 11, scope: !4276)
!4358 = !DILocation(line: 271, column: 18, scope: !4350)
!4359 = !DILocation(line: 272, column: 19, scope: !4350)
!4360 = !DILocation(line: 273, column: 21, scope: !4350)
!4361 = !DILocation(line: 274, column: 21, scope: !4350)
!4362 = !DILocation(line: 275, column: 18, scope: !4350)
!4363 = !DILocation(line: 275, column: 32, scope: !4350)
!4364 = !DILocation(line: 271, column: 9, scope: !4350)
!4365 = !DILocation(line: 278, column: 30, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !1325, line: 278, column: 15)
!4367 = distinct !DILexicalBlock(scope: !4350, file: !1325, line: 277, column: 9)
!4368 = !DILocation(line: 278, column: 38, scope: !4366)
!4369 = !DILocation(line: 278, column: 48, scope: !4366)
!4370 = !DILocation(line: 278, column: 15, scope: !4366)
!4371 = !DILocation(line: 278, column: 75, scope: !4366)
!4372 = !DILocation(line: 278, column: 15, scope: !4367)
!4373 = !DILocation(line: 280, column: 25, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4366, file: !1325, line: 279, column: 13)
!4375 = !DILocation(line: 280, column: 32, scope: !4374)
!4376 = !DILocation(line: 280, column: 55, scope: !4374)
!4377 = !DILocation(line: 280, column: 15, scope: !4374)
!4378 = !DILocation(line: 281, column: 15, scope: !4374)
!4379 = !DILocation(line: 284, column: 20, scope: !4367)
!4380 = !DILocation(line: 285, column: 21, scope: !4367)
!4381 = !DILocation(line: 291, column: 23, scope: !4367)
!4382 = !DILocation(line: 292, column: 23, scope: !4367)
!4383 = !DILocation(line: 293, column: 20, scope: !4367)
!4384 = !DILocation(line: 293, column: 45, scope: !4367)
!4385 = !DILocation(line: 293, column: 34, scope: !4367)
!4386 = !DILocation(line: 293, column: 52, scope: !4367)
!4387 = !DILocation(line: 284, column: 11, scope: !4367)
!4388 = !DILocation(line: 296, column: 12, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4276, file: !1325, line: 296, column: 11)
!4390 = !DILocation(line: 296, column: 11, scope: !4276)
!4391 = !DILocation(line: 297, column: 9, scope: !4389)
!4392 = !DILocation(line: 298, column: 5, scope: !4276)
!4393 = !DILocation(line: 299, column: 3, scope: !4175)
!4394 = !DILocation(line: 300, column: 1, scope: !4175)
!4395 = distinct !DISubprogram(name: "excise", scope: !1325, file: !1325, line: 367, type: !1523, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4396 = !DILocalVariable(name: "fts", arg: 1, scope: !4395, file: !1325, line: 367, type: !1360)
!4397 = !DILocation(line: 367, column: 14, scope: !4395)
!4398 = !DILocalVariable(name: "ent", arg: 2, scope: !4395, file: !1325, line: 367, type: !1453)
!4399 = !DILocation(line: 367, column: 27, scope: !4395)
!4400 = !DILocalVariable(name: "x", arg: 3, scope: !4395, file: !1325, line: 367, type: !1341)
!4401 = !DILocation(line: 367, column: 57, scope: !4395)
!4402 = !DILocalVariable(name: "is_dir", arg: 4, scope: !4395, file: !1325, line: 367, type: !120)
!4403 = !DILocation(line: 367, column: 65, scope: !4395)
!4404 = !DILocalVariable(name: "flag", scope: !4395, file: !1325, line: 369, type: !7)
!4405 = !DILocation(line: 369, column: 7, scope: !4395)
!4406 = !DILocation(line: 369, column: 14, scope: !4395)
!4407 = !DILocation(line: 370, column: 17, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4395, file: !1325, line: 370, column: 7)
!4409 = !DILocation(line: 370, column: 22, scope: !4408)
!4410 = !DILocation(line: 370, column: 34, scope: !4408)
!4411 = !DILocation(line: 370, column: 39, scope: !4408)
!4412 = !DILocation(line: 370, column: 52, scope: !4408)
!4413 = !DILocation(line: 370, column: 7, scope: !4408)
!4414 = !DILocation(line: 370, column: 58, scope: !4408)
!4415 = !DILocation(line: 370, column: 7, scope: !4395)
!4416 = !DILocation(line: 372, column: 11, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4418, file: !1325, line: 372, column: 11)
!4418 = distinct !DILexicalBlock(scope: !4408, file: !1325, line: 371, column: 5)
!4419 = !DILocation(line: 372, column: 14, scope: !4417)
!4420 = !DILocation(line: 372, column: 11, scope: !4418)
!4421 = !DILocation(line: 374, column: 20, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4417, file: !1325, line: 373, column: 9)
!4423 = !DILocation(line: 375, column: 22, scope: !4422)
!4424 = !DILocation(line: 376, column: 22, scope: !4422)
!4425 = !DILocation(line: 376, column: 42, scope: !4422)
!4426 = !DILocation(line: 374, column: 11, scope: !4422)
!4427 = !DILocation(line: 377, column: 9, scope: !4422)
!4428 = !DILocation(line: 378, column: 7, scope: !4418)
!4429 = !DILocation(line: 385, column: 7, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4395, file: !1325, line: 385, column: 7)
!4431 = !DILocation(line: 385, column: 13, scope: !4430)
!4432 = !DILocation(line: 385, column: 7, scope: !4395)
!4433 = !DILocalVariable(name: "st", scope: !4434, file: !1325, line: 387, type: !1390)
!4434 = distinct !DILexicalBlock(scope: !4430, file: !1325, line: 386, column: 5)
!4435 = !DILocation(line: 387, column: 19, scope: !4434)
!4436 = !DILocation(line: 388, column: 24, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4434, file: !1325, line: 388, column: 12)
!4438 = !DILocation(line: 388, column: 29, scope: !4437)
!4439 = !DILocation(line: 388, column: 41, scope: !4437)
!4440 = !DILocation(line: 388, column: 46, scope: !4437)
!4441 = !DILocation(line: 388, column: 15, scope: !4437)
!4442 = !DILocation(line: 389, column: 24, scope: !4437)
!4443 = !DILocation(line: 389, column: 27, scope: !4437)
!4444 = !DILocation(line: 389, column: 33, scope: !4437)
!4445 = !DILocation(line: 388, column: 12, scope: !4434)
!4446 = !DILocation(line: 390, column: 9, scope: !4437)
!4447 = !DILocation(line: 390, column: 15, scope: !4437)
!4448 = !DILocation(line: 391, column: 5, scope: !4434)
!4449 = !DILocation(line: 393, column: 26, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4395, file: !1325, line: 393, column: 7)
!4451 = !DILocation(line: 393, column: 29, scope: !4450)
!4452 = !DILocation(line: 393, column: 7, scope: !4450)
!4453 = !DILocation(line: 393, column: 7, scope: !4395)
!4454 = !DILocation(line: 394, column: 5, scope: !4450)
!4455 = !DILocation(line: 401, column: 7, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4395, file: !1325, line: 401, column: 7)
!4457 = !DILocation(line: 401, column: 12, scope: !4456)
!4458 = !DILocation(line: 401, column: 21, scope: !4456)
!4459 = !DILocation(line: 402, column: 7, scope: !4456)
!4460 = !DILocation(line: 402, column: 11, scope: !4456)
!4461 = !DILocation(line: 402, column: 17, scope: !4456)
!4462 = !DILocation(line: 402, column: 30, scope: !4456)
!4463 = !DILocation(line: 402, column: 33, scope: !4456)
!4464 = !DILocation(line: 402, column: 39, scope: !4456)
!4465 = !DILocation(line: 402, column: 49, scope: !4456)
!4466 = !DILocation(line: 402, column: 52, scope: !4456)
!4467 = !DILocation(line: 402, column: 58, scope: !4456)
!4468 = !DILocation(line: 403, column: 11, scope: !4456)
!4469 = !DILocation(line: 403, column: 14, scope: !4456)
!4470 = !DILocation(line: 403, column: 20, scope: !4456)
!4471 = !DILocation(line: 404, column: 7, scope: !4456)
!4472 = !DILocation(line: 404, column: 11, scope: !4456)
!4473 = !DILocation(line: 404, column: 16, scope: !4456)
!4474 = !DILocation(line: 404, column: 26, scope: !4456)
!4475 = !DILocation(line: 404, column: 35, scope: !4456)
!4476 = !DILocation(line: 404, column: 38, scope: !4456)
!4477 = !DILocation(line: 404, column: 43, scope: !4456)
!4478 = !DILocation(line: 404, column: 53, scope: !4456)
!4479 = !DILocation(line: 401, column: 7, scope: !4395)
!4480 = !DILocation(line: 405, column: 13, scope: !4456)
!4481 = !DILocation(line: 405, column: 18, scope: !4456)
!4482 = !DILocation(line: 405, column: 5, scope: !4456)
!4483 = !DILocation(line: 405, column: 11, scope: !4456)
!4484 = !DILocation(line: 406, column: 13, scope: !4395)
!4485 = !DILocation(line: 406, column: 20, scope: !4395)
!4486 = !DILocation(line: 406, column: 43, scope: !4395)
!4487 = !DILocation(line: 406, column: 3, scope: !4395)
!4488 = !DILocation(line: 407, column: 23, scope: !4395)
!4489 = !DILocation(line: 407, column: 3, scope: !4395)
!4490 = !DILocation(line: 408, column: 3, scope: !4395)
!4491 = !DILocation(line: 409, column: 1, scope: !4395)
!4492 = distinct !DISubprogram(name: "ignorable_missing", scope: !1325, file: !1325, line: 334, type: !1525, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4493 = !DILocalVariable(name: "x", arg: 1, scope: !4492, file: !1325, line: 334, type: !1341)
!4494 = !DILocation(line: 334, column: 45, scope: !4492)
!4495 = !DILocalVariable(name: "errnum", arg: 2, scope: !4492, file: !1325, line: 334, type: !7)
!4496 = !DILocation(line: 334, column: 52, scope: !4492)
!4497 = !DILocation(line: 336, column: 10, scope: !4492)
!4498 = !DILocation(line: 336, column: 13, scope: !4492)
!4499 = !DILocation(line: 336, column: 34, scope: !4492)
!4500 = !DILocation(line: 336, column: 61, scope: !4492)
!4501 = !DILocation(line: 336, column: 37, scope: !4492)
!4502 = !DILocation(line: 0, scope: !4492)
!4503 = !DILocation(line: 336, column: 3, scope: !4492)
!4504 = distinct !DISubprogram(name: "nonexistent_file_errno", scope: !1325, file: !1325, line: 306, type: !307, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4505 = !DILocalVariable(name: "errnum", arg: 1, scope: !4504, file: !1325, line: 306, type: !7)
!4506 = !DILocation(line: 306, column: 29, scope: !4504)
!4507 = !DILocation(line: 320, column: 11, scope: !4504)
!4508 = !DILocation(line: 320, column: 3, scope: !4504)
!4509 = !DILocation(line: 326, column: 7, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4504, file: !1325, line: 321, column: 5)
!4511 = !DILocation(line: 328, column: 7, scope: !4510)
!4512 = !DILocation(line: 330, column: 1, scope: !4504)
!4513 = distinct !DISubprogram(name: "cache_stat_init", scope: !1325, file: !1325, line: 85, type: !1517, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4514 = !DILocalVariable(name: "st", arg: 1, scope: !4513, file: !1325, line: 85, type: !1482)
!4515 = !DILocation(line: 85, column: 31, scope: !4513)
!4516 = !DILocation(line: 87, column: 3, scope: !4513)
!4517 = !DILocation(line: 87, column: 7, scope: !4513)
!4518 = !DILocation(line: 87, column: 15, scope: !4513)
!4519 = !{!3182, !3183, i64 48}
!4520 = !DILocation(line: 88, column: 10, scope: !4513)
!4521 = !DILocation(line: 88, column: 3, scope: !4513)
!4522 = distinct !DISubprogram(name: "write_protected_non_symlink", scope: !1325, file: !1325, line: 96, type: !1519, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4523 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !4522, file: !1325, line: 96, type: !7)
!4524 = !DILocation(line: 96, column: 34, scope: !4522)
!4525 = !DILocalVariable(name: "file", arg: 2, scope: !4522, file: !1325, line: 97, type: !115)
!4526 = !DILocation(line: 97, column: 42, scope: !4522)
!4527 = !DILocalVariable(name: "buf", arg: 3, scope: !4522, file: !1325, line: 98, type: !1482)
!4528 = !DILocation(line: 98, column: 43, scope: !4522)
!4529 = !DILocation(line: 100, column: 7, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4522, file: !1325, line: 100, column: 7)
!4531 = !DILocation(line: 100, column: 7, scope: !4522)
!4532 = !DILocation(line: 101, column: 5, scope: !4530)
!4533 = !DILocation(line: 102, column: 22, scope: !4534)
!4534 = distinct !DILexicalBlock(scope: !4522, file: !1325, line: 102, column: 7)
!4535 = !DILocation(line: 102, column: 30, scope: !4534)
!4536 = !DILocation(line: 102, column: 36, scope: !4534)
!4537 = !DILocation(line: 102, column: 7, scope: !4534)
!4538 = !DILocation(line: 102, column: 62, scope: !4534)
!4539 = !DILocation(line: 102, column: 7, scope: !4522)
!4540 = !DILocation(line: 103, column: 5, scope: !4534)
!4541 = !DILocation(line: 104, column: 7, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4522, file: !1325, line: 104, column: 7)
!4543 = !DILocation(line: 104, column: 7, scope: !4522)
!4544 = !DILocation(line: 105, column: 5, scope: !4542)
!4545 = !DILocation(line: 155, column: 20, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !1325, line: 155, column: 9)
!4547 = distinct !DILexicalBlock(scope: !4522, file: !1325, line: 154, column: 3)
!4548 = !DILocation(line: 155, column: 28, scope: !4546)
!4549 = !DILocation(line: 155, column: 9, scope: !4546)
!4550 = !DILocation(line: 155, column: 52, scope: !4546)
!4551 = !DILocation(line: 155, column: 9, scope: !4547)
!4552 = !DILocation(line: 156, column: 7, scope: !4546)
!4553 = !DILocation(line: 158, column: 12, scope: !4547)
!4554 = !DILocation(line: 158, column: 18, scope: !4547)
!4555 = !DILocation(line: 158, column: 5, scope: !4547)
!4556 = !DILocation(line: 160, column: 1, scope: !4522)
!4557 = distinct !DISubprogram(name: "cache_fstatat", scope: !1325, file: !1325, line: 70, type: !1521, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4558 = !DILocalVariable(name: "fd", arg: 1, scope: !4557, file: !1325, line: 70, type: !7)
!4559 = !DILocation(line: 70, column: 20, scope: !4557)
!4560 = !DILocalVariable(name: "file", arg: 2, scope: !4557, file: !1325, line: 70, type: !115)
!4561 = !DILocation(line: 70, column: 36, scope: !4557)
!4562 = !DILocalVariable(name: "st", arg: 3, scope: !4557, file: !1325, line: 70, type: !1482)
!4563 = !DILocation(line: 70, column: 55, scope: !4557)
!4564 = !DILocalVariable(name: "flag", arg: 4, scope: !4557, file: !1325, line: 70, type: !7)
!4565 = !DILocation(line: 70, column: 63, scope: !4557)
!4566 = !DILocation(line: 72, column: 7, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4557, file: !1325, line: 72, column: 7)
!4568 = !DILocation(line: 72, column: 11, scope: !4567)
!4569 = !DILocation(line: 72, column: 19, scope: !4567)
!4570 = !DILocation(line: 72, column: 25, scope: !4567)
!4571 = !DILocation(line: 72, column: 37, scope: !4567)
!4572 = !DILocation(line: 72, column: 41, scope: !4567)
!4573 = !DILocation(line: 72, column: 47, scope: !4567)
!4574 = !DILocation(line: 72, column: 51, scope: !4567)
!4575 = !DILocation(line: 72, column: 28, scope: !4567)
!4576 = !DILocation(line: 72, column: 57, scope: !4567)
!4577 = !DILocation(line: 72, column: 7, scope: !4557)
!4578 = !DILocation(line: 74, column: 7, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4567, file: !1325, line: 73, column: 5)
!4580 = !DILocation(line: 74, column: 11, scope: !4579)
!4581 = !DILocation(line: 74, column: 19, scope: !4579)
!4582 = !DILocation(line: 75, column: 20, scope: !4579)
!4583 = !DILocation(line: 75, column: 7, scope: !4579)
!4584 = !DILocation(line: 75, column: 11, scope: !4579)
!4585 = !DILocation(line: 75, column: 18, scope: !4579)
!4586 = !DILocation(line: 76, column: 5, scope: !4579)
!4587 = !DILocation(line: 77, column: 12, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4557, file: !1325, line: 77, column: 7)
!4589 = !DILocation(line: 77, column: 16, scope: !4588)
!4590 = !DILocation(line: 77, column: 9, scope: !4588)
!4591 = !DILocation(line: 77, column: 7, scope: !4557)
!4592 = !DILocation(line: 78, column: 5, scope: !4588)
!4593 = !DILocation(line: 79, column: 17, scope: !4557)
!4594 = !DILocation(line: 79, column: 21, scope: !4557)
!4595 = !DILocation(line: 79, column: 11, scope: !4557)
!4596 = !DILocation(line: 79, column: 3, scope: !4557)
!4597 = !DILocation(line: 79, column: 9, scope: !4557)
!4598 = !DILocation(line: 80, column: 3, scope: !4557)
!4599 = !DILocation(line: 81, column: 1, scope: !4557)
!4600 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !141, file: !141, line: 278, type: !1469, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1324, retainedNodes: !143)
!4601 = !DILocalVariable(name: "dirp", arg: 1, scope: !4600, file: !141, line: 278, type: !609)
!4602 = !DILocation(line: 278, column: 39, scope: !4600)
!4603 = !DILocation(line: 280, column: 3, scope: !4600)
!4604 = !DILocalVariable(name: "dp", scope: !4605, file: !141, line: 282, type: !1460)
!4605 = distinct !DILexicalBlock(scope: !4600, file: !141, line: 281, column: 5)
!4606 = !DILocation(line: 282, column: 28, scope: !4605)
!4607 = !DILocation(line: 282, column: 42, scope: !4605)
!4608 = !DILocation(line: 282, column: 33, scope: !4605)
!4609 = !DILocation(line: 283, column: 11, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4605, file: !141, line: 283, column: 11)
!4611 = !DILocation(line: 283, column: 14, scope: !4610)
!4612 = !DILocation(line: 283, column: 22, scope: !4610)
!4613 = !DILocation(line: 283, column: 42, scope: !4610)
!4614 = !DILocation(line: 283, column: 46, scope: !4610)
!4615 = !DILocation(line: 283, column: 27, scope: !4610)
!4616 = !DILocation(line: 283, column: 11, scope: !4605)
!4617 = !DILocation(line: 284, column: 16, scope: !4610)
!4618 = !DILocation(line: 284, column: 9, scope: !4610)
!4619 = distinct !{!4619, !4603, !4620}
!4620 = !DILocation(line: 285, column: 5, scope: !4600)
!4621 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !245, file: !245, line: 929, type: !250, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4622 = !DILocalVariable(name: "src_name", arg: 1, scope: !4621, file: !245, line: 929, type: !115)
!4623 = !DILocation(line: 929, column: 39, scope: !4621)
!4624 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4621, file: !245, line: 929, type: !115)
!4625 = !DILocation(line: 929, column: 61, scope: !4621)
!4626 = !DILocalVariable(name: "mode", arg: 3, scope: !4621, file: !245, line: 930, type: !160)
!4627 = !DILocation(line: 930, column: 34, scope: !4621)
!4628 = !DILocalVariable(name: "new_dst", arg: 4, scope: !4621, file: !245, line: 930, type: !120)
!4629 = !DILocation(line: 930, column: 45, scope: !4621)
!4630 = !DILocalVariable(name: "x", arg: 5, scope: !4621, file: !245, line: 930, type: !252)
!4631 = !DILocation(line: 930, column: 79, scope: !4621)
!4632 = !DILocation(line: 932, column: 7, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4621, file: !245, line: 932, column: 7)
!4634 = !DILocation(line: 932, column: 10, scope: !4633)
!4635 = !DILocation(line: 932, column: 7, scope: !4621)
!4636 = !DILocalVariable(name: "all_errors", scope: !4637, file: !245, line: 935, type: !120)
!4637 = distinct !DILexicalBlock(scope: !4633, file: !245, line: 933, column: 5)
!4638 = !DILocation(line: 935, column: 12, scope: !4637)
!4639 = !DILocation(line: 935, column: 26, scope: !4637)
!4640 = !DILocation(line: 935, column: 29, scope: !4637)
!4641 = !DILocation(line: 935, column: 48, scope: !4637)
!4642 = !DILocation(line: 935, column: 51, scope: !4637)
!4643 = !DILocation(line: 935, column: 54, scope: !4637)
!4644 = !DILocalVariable(name: "some_errors", scope: !4637, file: !245, line: 936, type: !120)
!4645 = !DILocation(line: 936, column: 12, scope: !4637)
!4646 = !DILocation(line: 936, column: 27, scope: !4637)
!4647 = !DILocation(line: 936, column: 38, scope: !4637)
!4648 = !DILocation(line: 936, column: 42, scope: !4637)
!4649 = !DILocation(line: 936, column: 45, scope: !4637)
!4650 = !DILocation(line: 936, column: 41, scope: !4637)
!4651 = !DILocation(line: 0, scope: !4637)
!4652 = !DILocalVariable(name: "con", scope: !4637, file: !245, line: 937, type: !9)
!4653 = !DILocation(line: 937, column: 13, scope: !4637)
!4654 = !DILocation(line: 939, column: 29, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4637, file: !245, line: 939, column: 11)
!4656 = !DILocation(line: 939, column: 16, scope: !4655)
!4657 = !DILocation(line: 939, column: 13, scope: !4655)
!4658 = !DILocation(line: 939, column: 11, scope: !4637)
!4659 = !DILocation(line: 941, column: 31, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !245, line: 941, column: 15)
!4661 = distinct !DILexicalBlock(scope: !4655, file: !245, line: 940, column: 9)
!4662 = !DILocation(line: 941, column: 15, scope: !4660)
!4663 = !DILocation(line: 941, column: 36, scope: !4660)
!4664 = !DILocation(line: 941, column: 15, scope: !4661)
!4665 = !DILocation(line: 943, column: 19, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !245, line: 943, column: 19)
!4667 = distinct !DILexicalBlock(scope: !4660, file: !245, line: 942, column: 13)
!4668 = !DILocation(line: 943, column: 30, scope: !4666)
!4669 = !DILocation(line: 943, column: 34, scope: !4666)
!4670 = !DILocation(line: 943, column: 46, scope: !4666)
!4671 = !DILocation(line: 943, column: 69, scope: !4666)
!4672 = !DILocation(line: 943, column: 50, scope: !4666)
!4673 = !DILocation(line: 943, column: 19, scope: !4667)
!4674 = !DILocation(line: 944, column: 27, scope: !4666)
!4675 = !DILocation(line: 945, column: 24, scope: !4666)
!4676 = !DILocation(line: 946, column: 31, scope: !4666)
!4677 = !DILocation(line: 946, column: 24, scope: !4666)
!4678 = !DILocation(line: 944, column: 17, scope: !4666)
!4679 = !DILocation(line: 947, column: 19, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4667, file: !245, line: 947, column: 19)
!4681 = !DILocation(line: 947, column: 22, scope: !4680)
!4682 = !DILocation(line: 947, column: 19, scope: !4667)
!4683 = !DILocation(line: 949, column: 28, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4680, file: !245, line: 948, column: 17)
!4685 = !DILocation(line: 949, column: 19, scope: !4684)
!4686 = !DILocation(line: 950, column: 19, scope: !4684)
!4687 = !DILocation(line: 952, column: 13, scope: !4667)
!4688 = !DILocation(line: 953, column: 20, scope: !4661)
!4689 = !DILocation(line: 953, column: 11, scope: !4661)
!4690 = !DILocation(line: 954, column: 9, scope: !4661)
!4691 = !DILocation(line: 957, column: 15, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !245, line: 957, column: 15)
!4693 = distinct !DILexicalBlock(scope: !4655, file: !245, line: 956, column: 9)
!4694 = !DILocation(line: 957, column: 26, scope: !4692)
!4695 = !DILocation(line: 957, column: 30, scope: !4692)
!4696 = !DILocation(line: 957, column: 42, scope: !4692)
!4697 = !DILocation(line: 957, column: 65, scope: !4692)
!4698 = !DILocation(line: 957, column: 46, scope: !4692)
!4699 = !DILocation(line: 957, column: 15, scope: !4693)
!4700 = !DILocation(line: 959, column: 25, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4692, file: !245, line: 958, column: 13)
!4702 = !DILocation(line: 960, column: 22, scope: !4701)
!4703 = !DILocation(line: 961, column: 22, scope: !4701)
!4704 = !DILocation(line: 959, column: 15, scope: !4701)
!4705 = !DILocation(line: 962, column: 13, scope: !4701)
!4706 = !DILocation(line: 963, column: 15, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4693, file: !245, line: 963, column: 15)
!4708 = !DILocation(line: 963, column: 18, scope: !4707)
!4709 = !DILocation(line: 963, column: 15, scope: !4693)
!4710 = !DILocation(line: 964, column: 13, scope: !4707)
!4711 = !DILocation(line: 966, column: 5, scope: !4637)
!4712 = !DILocation(line: 967, column: 12, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4633, file: !245, line: 967, column: 12)
!4714 = !DILocation(line: 967, column: 15, scope: !4713)
!4715 = !DILocation(line: 967, column: 12, scope: !4633)
!4716 = !DILocation(line: 971, column: 11, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !245, line: 971, column: 11)
!4718 = distinct !DILexicalBlock(scope: !4713, file: !245, line: 968, column: 5)
!4719 = !DILocation(line: 971, column: 19, scope: !4717)
!4720 = !DILocation(line: 971, column: 34, scope: !4717)
!4721 = !DILocation(line: 971, column: 44, scope: !4717)
!4722 = !DILocation(line: 971, column: 22, scope: !4717)
!4723 = !DILocation(line: 971, column: 50, scope: !4717)
!4724 = !DILocation(line: 972, column: 11, scope: !4717)
!4725 = !DILocation(line: 972, column: 35, scope: !4717)
!4726 = !DILocation(line: 972, column: 16, scope: !4717)
!4727 = !DILocation(line: 971, column: 11, scope: !4718)
!4728 = !DILocation(line: 974, column: 21, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4717, file: !245, line: 973, column: 9)
!4730 = !DILocation(line: 975, column: 18, scope: !4729)
!4731 = !DILocation(line: 976, column: 18, scope: !4729)
!4732 = !DILocation(line: 974, column: 11, scope: !4729)
!4733 = !DILocation(line: 977, column: 9, scope: !4729)
!4734 = !DILocation(line: 978, column: 5, scope: !4718)
!4735 = !DILocation(line: 980, column: 3, scope: !4621)
!4736 = !DILocation(line: 981, column: 1, scope: !4621)
!4737 = distinct !DISubprogram(name: "errno_unsupported", scope: !245, file: !245, line: 632, type: !307, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4738 = !DILocalVariable(name: "err", arg: 1, scope: !4737, file: !245, line: 632, type: !7)
!4739 = !DILocation(line: 632, column: 24, scope: !4737)
!4740 = !DILocation(line: 634, column: 10, scope: !4737)
!4741 = !DILocation(line: 634, column: 14, scope: !4737)
!4742 = !DILocation(line: 634, column: 25, scope: !4737)
!4743 = !DILocation(line: 634, column: 28, scope: !4737)
!4744 = !DILocation(line: 634, column: 32, scope: !4737)
!4745 = !DILocation(line: 634, column: 3, scope: !4737)
!4746 = distinct !DISubprogram(name: "defaultcon", scope: !4747, file: !4747, line: 44, type: !309, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4747 = !DIFile(filename: "src/selinux.h", directory: "/home/mbarbar/clone/coreutils")
!4748 = !DILocalVariable(name: "path", arg: 1, scope: !4746, file: !4747, line: 44, type: !115)
!4749 = !DILocation(line: 44, column: 25, scope: !4746)
!4750 = !DILocalVariable(name: "mode", arg: 2, scope: !4746, file: !4747, line: 44, type: !160)
!4751 = !DILocation(line: 44, column: 38, scope: !4746)
!4752 = !DILocation(line: 45, column: 3, scope: !4746)
!4753 = !DILocation(line: 45, column: 9, scope: !4746)
!4754 = !DILocation(line: 45, column: 20, scope: !4746)
!4755 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !4747, file: !4747, line: 25, type: !307, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4756 = !DILocalVariable(name: "err", arg: 1, scope: !4755, file: !4747, line: 25, type: !7)
!4757 = !DILocation(line: 25, column: 24, scope: !4755)
!4758 = !DILocation(line: 27, column: 10, scope: !4755)
!4759 = !DILocation(line: 27, column: 14, scope: !4755)
!4760 = !DILocation(line: 27, column: 25, scope: !4755)
!4761 = !DILocation(line: 27, column: 28, scope: !4755)
!4762 = !DILocation(line: 27, column: 32, scope: !4755)
!4763 = !DILocation(line: 27, column: 3, scope: !4755)
!4764 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !245, file: !245, line: 991, type: !295, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4765 = !DILocalVariable(name: "dst_name", arg: 1, scope: !4764, file: !245, line: 991, type: !115)
!4766 = !DILocation(line: 991, column: 36, scope: !4764)
!4767 = !DILocalVariable(name: "process_local", arg: 2, scope: !4764, file: !245, line: 991, type: !120)
!4768 = !DILocation(line: 991, column: 51, scope: !4764)
!4769 = !DILocalVariable(name: "recurse", arg: 3, scope: !4764, file: !245, line: 992, type: !120)
!4770 = !DILocation(line: 992, column: 29, scope: !4764)
!4771 = !DILocalVariable(name: "x", arg: 4, scope: !4764, file: !245, line: 992, type: !252)
!4772 = !DILocation(line: 992, column: 63, scope: !4764)
!4773 = !DILocalVariable(name: "all_errors", scope: !4764, file: !245, line: 994, type: !120)
!4774 = !DILocation(line: 994, column: 8, scope: !4764)
!4775 = !DILocation(line: 994, column: 23, scope: !4764)
!4776 = !DILocation(line: 994, column: 26, scope: !4764)
!4777 = !DILocation(line: 995, column: 22, scope: !4764)
!4778 = !DILocation(line: 995, column: 25, scope: !4764)
!4779 = !DILocation(line: 995, column: 28, scope: !4764)
!4780 = !DILocalVariable(name: "some_errors", scope: !4764, file: !245, line: 996, type: !120)
!4781 = !DILocation(line: 996, column: 8, scope: !4764)
!4782 = !DILocation(line: 996, column: 23, scope: !4764)
!4783 = !DILocation(line: 996, column: 34, scope: !4764)
!4784 = !DILocation(line: 996, column: 38, scope: !4764)
!4785 = !DILocation(line: 996, column: 41, scope: !4764)
!4786 = !DILocation(line: 996, column: 37, scope: !4764)
!4787 = !DILocation(line: 0, scope: !4764)
!4788 = !DILocation(line: 998, column: 21, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4764, file: !245, line: 998, column: 7)
!4790 = !DILocation(line: 998, column: 31, scope: !4789)
!4791 = !DILocation(line: 998, column: 40, scope: !4789)
!4792 = !DILocation(line: 998, column: 9, scope: !4789)
!4793 = !DILocation(line: 998, column: 7, scope: !4764)
!4794 = !DILocation(line: 1000, column: 11, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4796, file: !245, line: 1000, column: 11)
!4796 = distinct !DILexicalBlock(scope: !4789, file: !245, line: 999, column: 5)
!4797 = !DILocation(line: 1000, column: 22, scope: !4795)
!4798 = !DILocation(line: 1000, column: 26, scope: !4795)
!4799 = !DILocation(line: 1000, column: 38, scope: !4795)
!4800 = !DILocation(line: 1000, column: 61, scope: !4795)
!4801 = !DILocation(line: 1000, column: 42, scope: !4795)
!4802 = !DILocation(line: 1000, column: 11, scope: !4796)
!4803 = !DILocation(line: 1001, column: 19, scope: !4795)
!4804 = !DILocation(line: 1001, column: 26, scope: !4795)
!4805 = !DILocation(line: 1002, column: 16, scope: !4795)
!4806 = !DILocation(line: 1001, column: 9, scope: !4795)
!4807 = !DILocation(line: 1003, column: 7, scope: !4796)
!4808 = !DILocation(line: 1006, column: 3, scope: !4764)
!4809 = !DILocation(line: 1007, column: 1, scope: !4764)
!4810 = distinct !DISubprogram(name: "restorecon", scope: !4747, file: !4747, line: 40, type: !311, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4811 = !DILocalVariable(name: "path", arg: 1, scope: !4810, file: !4747, line: 40, type: !115)
!4812 = !DILocation(line: 40, column: 25, scope: !4810)
!4813 = !DILocalVariable(name: "recurse", arg: 2, scope: !4810, file: !4747, line: 40, type: !120)
!4814 = !DILocation(line: 40, column: 36, scope: !4810)
!4815 = !DILocalVariable(name: "preserve", arg: 3, scope: !4810, file: !4747, line: 40, type: !120)
!4816 = !DILocation(line: 40, column: 50, scope: !4810)
!4817 = !DILocation(line: 41, column: 3, scope: !4810)
!4818 = !DILocation(line: 41, column: 9, scope: !4810)
!4819 = !DILocation(line: 41, column: 20, scope: !4810)
!4820 = distinct !DISubprogram(name: "dest_info_init", scope: !245, file: !245, line: 1739, type: !297, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4821 = !DILocalVariable(name: "x", arg: 1, scope: !4820, file: !245, line: 1739, type: !299)
!4822 = !DILocation(line: 1739, column: 36, scope: !4820)
!4823 = !DILocation(line: 1742, column: 7, scope: !4820)
!4824 = !DILocation(line: 1741, column: 3, scope: !4820)
!4825 = !DILocation(line: 1741, column: 6, scope: !4820)
!4826 = !DILocation(line: 1742, column: 5, scope: !4820)
!4827 = !DILocation(line: 1747, column: 1, scope: !4820)
!4828 = distinct !DISubprogram(name: "src_info_init", scope: !245, file: !245, line: 1752, type: !297, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4829 = !DILocalVariable(name: "x", arg: 1, scope: !4828, file: !245, line: 1752, type: !299)
!4830 = !DILocation(line: 1752, column: 35, scope: !4828)
!4831 = !DILocation(line: 1764, column: 7, scope: !4828)
!4832 = !DILocation(line: 1763, column: 3, scope: !4828)
!4833 = !DILocation(line: 1763, column: 6, scope: !4828)
!4834 = !DILocation(line: 1764, column: 5, scope: !4828)
!4835 = !DILocation(line: 1769, column: 1, scope: !4828)
!4836 = distinct !DISubprogram(name: "copy", scope: !245, file: !245, line: 3009, type: !300, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4837 = !DILocalVariable(name: "src_name", arg: 1, scope: !4836, file: !245, line: 3009, type: !115)
!4838 = !DILocation(line: 3009, column: 19, scope: !4836)
!4839 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4836, file: !245, line: 3009, type: !115)
!4840 = !DILocation(line: 3009, column: 41, scope: !4836)
!4841 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4836, file: !245, line: 3010, type: !120)
!4842 = !DILocation(line: 3010, column: 12, scope: !4836)
!4843 = !DILocalVariable(name: "options", arg: 4, scope: !4836, file: !245, line: 3010, type: !252)
!4844 = !DILocation(line: 3010, column: 54, scope: !4836)
!4845 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4836, file: !245, line: 3011, type: !302)
!4846 = !DILocation(line: 3011, column: 13, scope: !4836)
!4847 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4836, file: !245, line: 3011, type: !302)
!4848 = !DILocation(line: 3011, column: 35, scope: !4836)
!4849 = !DILocation(line: 3013, column: 3, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !245, line: 3013, column: 3)
!4851 = distinct !DILexicalBlock(scope: !4836, file: !245, line: 3013, column: 3)
!4852 = !DILocation(line: 3013, column: 3, scope: !4851)
!4853 = !DILocation(line: 3022, column: 24, scope: !4836)
!4854 = !DILocation(line: 3022, column: 22, scope: !4836)
!4855 = !DILocation(line: 3023, column: 24, scope: !4836)
!4856 = !DILocation(line: 3023, column: 22, scope: !4836)
!4857 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4836, file: !245, line: 3025, type: !120)
!4858 = !DILocation(line: 3025, column: 8, scope: !4836)
!4859 = !DILocation(line: 3026, column: 25, scope: !4836)
!4860 = !DILocation(line: 3026, column: 35, scope: !4836)
!4861 = !DILocation(line: 3026, column: 45, scope: !4836)
!4862 = !DILocation(line: 3027, column: 25, scope: !4836)
!4863 = !DILocation(line: 3029, column: 25, scope: !4836)
!4864 = !DILocation(line: 3029, column: 41, scope: !4836)
!4865 = !DILocation(line: 3026, column: 10, scope: !4836)
!4866 = !DILocation(line: 3026, column: 3, scope: !4836)
!4867 = distinct !DISubprogram(name: "valid_options", scope: !245, file: !245, line: 2986, type: !303, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4868 = !DILocalVariable(name: "co", arg: 1, scope: !4867, file: !245, line: 2986, type: !252)
!4869 = !DILocation(line: 2986, column: 41, scope: !4867)
!4870 = !DILocation(line: 2988, column: 3, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4872, file: !245, line: 2988, column: 3)
!4872 = distinct !DILexicalBlock(scope: !4867, file: !245, line: 2988, column: 3)
!4873 = !DILocation(line: 2988, column: 3, scope: !4872)
!4874 = !DILocation(line: 2989, column: 3, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !245, line: 2989, column: 3)
!4876 = distinct !DILexicalBlock(scope: !4867, file: !245, line: 2989, column: 3)
!4877 = !DILocation(line: 2989, column: 3, scope: !4876)
!4878 = !DILocation(line: 2990, column: 3, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !245, line: 2990, column: 3)
!4880 = distinct !DILexicalBlock(scope: !4867, file: !245, line: 2990, column: 3)
!4881 = !DILocation(line: 2990, column: 3, scope: !4880)
!4882 = !DILocation(line: 2991, column: 3, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !245, line: 2991, column: 3)
!4884 = distinct !DILexicalBlock(scope: !4867, file: !245, line: 2991, column: 3)
!4885 = !DILocation(line: 2991, column: 3, scope: !4884)
!4886 = !DILocation(line: 2992, column: 3, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !245, line: 2992, column: 3)
!4888 = distinct !DILexicalBlock(scope: !4867, file: !245, line: 2992, column: 3)
!4889 = !DILocation(line: 2992, column: 3, scope: !4888)
!4890 = !DILocation(line: 2993, column: 3, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !245, line: 2993, column: 3)
!4892 = distinct !DILexicalBlock(scope: !4867, file: !245, line: 2993, column: 3)
!4893 = !DILocation(line: 2993, column: 3, scope: !4892)
!4894 = !DILocation(line: 2996, column: 3, scope: !4867)
!4895 = distinct !DISubprogram(name: "copy_internal", scope: !245, file: !245, line: 1882, type: !313, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!4896 = !DILocalVariable(name: "src_name", arg: 1, scope: !4895, file: !245, line: 1882, type: !115)
!4897 = !DILocation(line: 1882, column: 28, scope: !4895)
!4898 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4895, file: !245, line: 1882, type: !115)
!4899 = !DILocation(line: 1882, column: 50, scope: !4895)
!4900 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4895, file: !245, line: 1883, type: !120)
!4901 = !DILocation(line: 1883, column: 21, scope: !4895)
!4902 = !DILocalVariable(name: "parent", arg: 4, scope: !4895, file: !245, line: 1884, type: !315)
!4903 = !DILocation(line: 1884, column: 35, scope: !4895)
!4904 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4895, file: !245, line: 1885, type: !350)
!4905 = !DILocation(line: 1885, column: 33, scope: !4895)
!4906 = !DILocalVariable(name: "x", arg: 6, scope: !4895, file: !245, line: 1886, type: !252)
!4907 = !DILocation(line: 1886, column: 41, scope: !4895)
!4908 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4895, file: !245, line: 1887, type: !120)
!4909 = !DILocation(line: 1887, column: 21, scope: !4895)
!4910 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4895, file: !245, line: 1888, type: !302)
!4911 = !DILocation(line: 1888, column: 22, scope: !4895)
!4912 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4895, file: !245, line: 1889, type: !302)
!4913 = !DILocation(line: 1889, column: 22, scope: !4895)
!4914 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4895, file: !245, line: 1890, type: !302)
!4915 = !DILocation(line: 1890, column: 22, scope: !4895)
!4916 = !DILocalVariable(name: "src_sb", scope: !4895, file: !245, line: 1892, type: !317)
!4917 = !DILocation(line: 1892, column: 15, scope: !4895)
!4918 = !DILocalVariable(name: "dst_sb", scope: !4895, file: !245, line: 1893, type: !317)
!4919 = !DILocation(line: 1893, column: 15, scope: !4895)
!4920 = !DILocalVariable(name: "src_mode", scope: !4895, file: !245, line: 1894, type: !160)
!4921 = !DILocation(line: 1894, column: 10, scope: !4895)
!4922 = !DILocalVariable(name: "dst_mode", scope: !4895, file: !245, line: 1895, type: !160)
!4923 = !DILocation(line: 1895, column: 10, scope: !4895)
!4924 = !DILocalVariable(name: "dst_mode_bits", scope: !4895, file: !245, line: 1896, type: !160)
!4925 = !DILocation(line: 1896, column: 10, scope: !4895)
!4926 = !DILocalVariable(name: "omitted_permissions", scope: !4895, file: !245, line: 1897, type: !160)
!4927 = !DILocation(line: 1897, column: 10, scope: !4895)
!4928 = !DILocalVariable(name: "restore_dst_mode", scope: !4895, file: !245, line: 1898, type: !120)
!4929 = !DILocation(line: 1898, column: 8, scope: !4895)
!4930 = !DILocalVariable(name: "earlier_file", scope: !4895, file: !245, line: 1899, type: !9)
!4931 = !DILocation(line: 1899, column: 9, scope: !4895)
!4932 = !DILocalVariable(name: "dst_backup", scope: !4895, file: !245, line: 1900, type: !9)
!4933 = !DILocation(line: 1900, column: 9, scope: !4895)
!4934 = !DILocalVariable(name: "delayed_ok", scope: !4895, file: !245, line: 1901, type: !120)
!4935 = !DILocation(line: 1901, column: 8, scope: !4895)
!4936 = !DILocalVariable(name: "copied_as_regular", scope: !4895, file: !245, line: 1902, type: !120)
!4937 = !DILocation(line: 1902, column: 8, scope: !4895)
!4938 = !DILocalVariable(name: "dest_is_symlink", scope: !4895, file: !245, line: 1903, type: !120)
!4939 = !DILocation(line: 1903, column: 8, scope: !4895)
!4940 = !DILocalVariable(name: "have_dst_lstat", scope: !4895, file: !245, line: 1904, type: !120)
!4941 = !DILocation(line: 1904, column: 8, scope: !4895)
!4942 = !DILocation(line: 1906, column: 4, scope: !4895)
!4943 = !DILocation(line: 1906, column: 19, scope: !4895)
!4944 = !DILocalVariable(name: "rename_errno", scope: !4895, file: !245, line: 1908, type: !7)
!4945 = !DILocation(line: 1908, column: 7, scope: !4895)
!4946 = !DILocation(line: 1908, column: 22, scope: !4895)
!4947 = !DILocation(line: 1908, column: 25, scope: !4895)
!4948 = !DILocation(line: 1909, column: 7, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 1909, column: 7)
!4950 = !DILocation(line: 1909, column: 10, scope: !4949)
!4951 = !DILocation(line: 1909, column: 7, scope: !4895)
!4952 = !DILocation(line: 1911, column: 11, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !245, line: 1911, column: 11)
!4954 = distinct !DILexicalBlock(scope: !4949, file: !245, line: 1910, column: 5)
!4955 = !DILocation(line: 1911, column: 24, scope: !4953)
!4956 = !DILocation(line: 1911, column: 11, scope: !4954)
!4957 = !DILocation(line: 1912, column: 46, scope: !4953)
!4958 = !DILocation(line: 1912, column: 66, scope: !4953)
!4959 = !DILocation(line: 1912, column: 25, scope: !4953)
!4960 = !DILocation(line: 1914, column: 27, scope: !4953)
!4961 = !DILocation(line: 1912, column: 22, scope: !4953)
!4962 = !DILocation(line: 1912, column: 9, scope: !4953)
!4963 = !DILocation(line: 1915, column: 17, scope: !4954)
!4964 = !DILocation(line: 1915, column: 30, scope: !4954)
!4965 = !DILocation(line: 1915, column: 15, scope: !4954)
!4966 = !DILocation(line: 1916, column: 11, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4954, file: !245, line: 1916, column: 11)
!4968 = !DILocation(line: 1916, column: 11, scope: !4954)
!4969 = !DILocation(line: 1917, column: 29, scope: !4967)
!4970 = !DILocation(line: 1917, column: 10, scope: !4967)
!4971 = !DILocation(line: 1917, column: 27, scope: !4967)
!4972 = !DILocation(line: 1917, column: 9, scope: !4967)
!4973 = !DILocation(line: 1918, column: 5, scope: !4954)
!4974 = !DILocation(line: 1920, column: 7, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 1920, column: 7)
!4976 = !DILocation(line: 1920, column: 20, scope: !4975)
!4977 = !DILocation(line: 1920, column: 7, scope: !4895)
!4978 = !DILocation(line: 1921, column: 10, scope: !4975)
!4979 = !DILocation(line: 1921, column: 13, scope: !4975)
!4980 = !DILocation(line: 1922, column: 9, scope: !4975)
!4981 = !DILocation(line: 1922, column: 22, scope: !4975)
!4982 = !DILocation(line: 1922, column: 32, scope: !4975)
!4983 = !DILocation(line: 1922, column: 35, scope: !4975)
!4984 = !DILocation(line: 1922, column: 38, scope: !4975)
!4985 = !DILocation(line: 1922, column: 50, scope: !4975)
!4986 = !DILocalVariable(name: "name", scope: !4987, file: !245, line: 1924, type: !115)
!4987 = distinct !DILexicalBlock(scope: !4975, file: !245, line: 1923, column: 5)
!4988 = !DILocation(line: 1924, column: 19, scope: !4987)
!4989 = !DILocation(line: 1924, column: 26, scope: !4987)
!4990 = !DILocation(line: 1924, column: 39, scope: !4987)
!4991 = !DILocation(line: 1924, column: 46, scope: !4987)
!4992 = !DILocation(line: 1924, column: 57, scope: !4987)
!4993 = !DILocalVariable(name: "fstatat_flags", scope: !4987, file: !245, line: 1925, type: !7)
!4994 = !DILocation(line: 1925, column: 11, scope: !4987)
!4995 = !DILocation(line: 1926, column: 11, scope: !4987)
!4996 = !DILocation(line: 1926, column: 14, scope: !4987)
!4997 = !DILocation(line: 1926, column: 26, scope: !4987)
!4998 = !DILocation(line: 1927, column: 37, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4987, file: !245, line: 1927, column: 11)
!5000 = !DILocation(line: 1927, column: 52, scope: !4999)
!5001 = !DILocation(line: 1927, column: 11, scope: !4999)
!5002 = !DILocation(line: 1927, column: 67, scope: !4999)
!5003 = !DILocation(line: 1927, column: 11, scope: !4987)
!5004 = !DILocation(line: 1929, column: 21, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4999, file: !245, line: 1928, column: 9)
!5006 = !DILocation(line: 1929, column: 28, scope: !5005)
!5007 = !DILocation(line: 1929, column: 49, scope: !5005)
!5008 = !DILocation(line: 1929, column: 11, scope: !5005)
!5009 = !DILocation(line: 1930, column: 11, scope: !5005)
!5010 = !DILocation(line: 1933, column: 25, scope: !4987)
!5011 = !DILocation(line: 1933, column: 16, scope: !4987)
!5012 = !DILocation(line: 1935, column: 11, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4987, file: !245, line: 1935, column: 11)
!5014 = !DILocation(line: 1935, column: 30, scope: !5013)
!5015 = !DILocation(line: 1935, column: 34, scope: !5013)
!5016 = !DILocation(line: 1935, column: 37, scope: !5013)
!5017 = !DILocation(line: 1935, column: 11, scope: !4987)
!5018 = !DILocation(line: 1937, column: 26, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5013, file: !245, line: 1936, column: 9)
!5020 = !DILocation(line: 1937, column: 29, scope: !5019)
!5021 = !DILocation(line: 1937, column: 24, scope: !5019)
!5022 = !DILocation(line: 1938, column: 20, scope: !5019)
!5023 = !DILocation(line: 1939, column: 20, scope: !5019)
!5024 = !DILocation(line: 1940, column: 18, scope: !5019)
!5025 = !DILocation(line: 1937, column: 11, scope: !5019)
!5026 = !DILocation(line: 1941, column: 11, scope: !5019)
!5027 = !DILocation(line: 1943, column: 5, scope: !4987)
!5028 = !DILocation(line: 1956, column: 7, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 1956, column: 7)
!5030 = !DILocation(line: 1956, column: 24, scope: !5029)
!5031 = !DILocation(line: 1956, column: 27, scope: !5029)
!5032 = !DILocation(line: 1956, column: 30, scope: !5029)
!5033 = !DILocation(line: 1956, column: 7, scope: !4895)
!5034 = !DILocation(line: 1958, column: 14, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !245, line: 1958, column: 12)
!5036 = distinct !DILexicalBlock(scope: !5029, file: !245, line: 1957, column: 5)
!5037 = !DILocation(line: 1959, column: 12, scope: !5035)
!5038 = !DILocation(line: 1959, column: 15, scope: !5035)
!5039 = !DILocation(line: 1959, column: 18, scope: !5035)
!5040 = !DILocation(line: 1959, column: 30, scope: !5035)
!5041 = !DILocation(line: 1960, column: 12, scope: !5035)
!5042 = !DILocation(line: 1960, column: 26, scope: !5035)
!5043 = !DILocation(line: 1960, column: 29, scope: !5035)
!5044 = !DILocation(line: 1960, column: 39, scope: !5035)
!5045 = !DILocation(line: 1960, column: 15, scope: !5035)
!5046 = !DILocation(line: 1958, column: 12, scope: !5036)
!5047 = !DILocation(line: 1962, column: 24, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5035, file: !245, line: 1961, column: 9)
!5049 = !DILocation(line: 1963, column: 18, scope: !5048)
!5050 = !DILocation(line: 1962, column: 11, scope: !5048)
!5051 = !DILocation(line: 1964, column: 11, scope: !5048)
!5052 = !DILocation(line: 1967, column: 20, scope: !5036)
!5053 = !DILocation(line: 1967, column: 23, scope: !5036)
!5054 = !DILocation(line: 1967, column: 33, scope: !5036)
!5055 = !DILocation(line: 1967, column: 7, scope: !5036)
!5056 = !DILocation(line: 1968, column: 5, scope: !5036)
!5057 = !DILocalVariable(name: "dereference", scope: !4895, file: !245, line: 1970, type: !120)
!5058 = !DILocation(line: 1970, column: 8, scope: !4895)
!5059 = !DILocation(line: 1970, column: 42, scope: !4895)
!5060 = !DILocation(line: 1970, column: 45, scope: !4895)
!5061 = !DILocation(line: 1970, column: 22, scope: !4895)
!5062 = !DILocation(line: 1972, column: 8, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 1972, column: 7)
!5064 = !DILocation(line: 1972, column: 7, scope: !4895)
!5065 = !DILocation(line: 1974, column: 14, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !245, line: 1974, column: 11)
!5067 = distinct !DILexicalBlock(scope: !5063, file: !245, line: 1973, column: 5)
!5068 = !DILocation(line: 1974, column: 27, scope: !5066)
!5069 = !DILocation(line: 1974, column: 37, scope: !5066)
!5070 = !DILocation(line: 1974, column: 40, scope: !5066)
!5071 = !DILocation(line: 1974, column: 43, scope: !5066)
!5072 = !DILocation(line: 1974, column: 55, scope: !5066)
!5073 = !DILocation(line: 1974, column: 11, scope: !5067)
!5074 = !DILocalVariable(name: "use_lstat", scope: !5075, file: !245, line: 1982, type: !120)
!5075 = distinct !DILexicalBlock(scope: !5066, file: !245, line: 1975, column: 9)
!5076 = !DILocation(line: 1982, column: 16, scope: !5075)
!5077 = !DILocation(line: 1983, column: 19, scope: !5075)
!5078 = !DILocation(line: 1984, column: 17, scope: !5075)
!5079 = !DILocation(line: 1984, column: 23, scope: !5075)
!5080 = !DILocation(line: 1984, column: 26, scope: !5075)
!5081 = !DILocation(line: 1985, column: 21, scope: !5075)
!5082 = !DILocation(line: 1985, column: 24, scope: !5075)
!5083 = !DILocation(line: 1985, column: 43, scope: !5075)
!5084 = !DILocation(line: 1985, column: 46, scope: !5075)
!5085 = !DILocation(line: 1986, column: 16, scope: !5075)
!5086 = !DILocation(line: 1986, column: 19, scope: !5075)
!5087 = !DILocation(line: 1986, column: 22, scope: !5075)
!5088 = !DILocation(line: 1986, column: 32, scope: !5075)
!5089 = !DILocation(line: 1986, column: 35, scope: !5075)
!5090 = !DILocation(line: 1986, column: 38, scope: !5075)
!5091 = !DILocation(line: 1986, column: 52, scope: !5075)
!5092 = !DILocation(line: 1986, column: 55, scope: !5075)
!5093 = !DILocation(line: 1986, column: 58, scope: !5075)
!5094 = !DILocation(line: 1987, column: 16, scope: !5075)
!5095 = !DILocation(line: 1987, column: 19, scope: !5075)
!5096 = !DILocation(line: 1987, column: 22, scope: !5075)
!5097 = !DILocation(line: 1987, column: 34, scope: !5075)
!5098 = !DILocation(line: 1988, column: 16, scope: !5075)
!5099 = !DILocation(line: 1988, column: 19, scope: !5075)
!5100 = !DILocation(line: 1988, column: 22, scope: !5075)
!5101 = !DILocalVariable(name: "fstatat_flags", scope: !5075, file: !245, line: 1989, type: !7)
!5102 = !DILocation(line: 1989, column: 15, scope: !5075)
!5103 = !DILocation(line: 1989, column: 31, scope: !5075)
!5104 = !DILocation(line: 1990, column: 41, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5075, file: !245, line: 1990, column: 15)
!5106 = !DILocation(line: 1990, column: 60, scope: !5105)
!5107 = !DILocation(line: 1990, column: 15, scope: !5105)
!5108 = !DILocation(line: 1990, column: 75, scope: !5105)
!5109 = !DILocation(line: 1990, column: 15, scope: !5075)
!5110 = !DILocation(line: 1992, column: 32, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5105, file: !245, line: 1991, column: 13)
!5112 = !DILocation(line: 1992, column: 30, scope: !5111)
!5113 = !DILocation(line: 1993, column: 28, scope: !5111)
!5114 = !DILocation(line: 1994, column: 13, scope: !5111)
!5115 = !DILocation(line: 1997, column: 19, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !245, line: 1997, column: 19)
!5117 = distinct !DILexicalBlock(scope: !5105, file: !245, line: 1996, column: 13)
!5118 = !DILocation(line: 1997, column: 25, scope: !5116)
!5119 = !DILocation(line: 1997, column: 34, scope: !5116)
!5120 = !DILocation(line: 1997, column: 37, scope: !5116)
!5121 = !DILocation(line: 1997, column: 40, scope: !5116)
!5122 = !DILocation(line: 1997, column: 19, scope: !5117)
!5123 = !DILocation(line: 1999, column: 24, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5116, file: !245, line: 1999, column: 24)
!5125 = !DILocation(line: 1999, column: 30, scope: !5124)
!5126 = !DILocation(line: 1999, column: 24, scope: !5116)
!5127 = !DILocation(line: 2001, column: 29, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5124, file: !245, line: 2000, column: 17)
!5129 = !DILocation(line: 2001, column: 36, scope: !5128)
!5130 = !DILocation(line: 2001, column: 57, scope: !5128)
!5131 = !DILocation(line: 2001, column: 19, scope: !5128)
!5132 = !DILocation(line: 2002, column: 19, scope: !5128)
!5133 = !DILocation(line: 2005, column: 25, scope: !5124)
!5134 = !DILocation(line: 2007, column: 9, scope: !5075)
!5135 = !DILocation(line: 2009, column: 11, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5067, file: !245, line: 2009, column: 11)
!5137 = !DILocation(line: 2009, column: 24, scope: !5136)
!5138 = !DILocation(line: 2009, column: 11, scope: !5067)
!5139 = !DILocalVariable(name: "return_now", scope: !5140, file: !245, line: 2011, type: !120)
!5140 = distinct !DILexicalBlock(scope: !5136, file: !245, line: 2010, column: 9)
!5141 = !DILocation(line: 2011, column: 16, scope: !5140)
!5142 = !DILocation(line: 2013, column: 15, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2013, column: 15)
!5144 = !DILocation(line: 2013, column: 18, scope: !5143)
!5145 = !DILocation(line: 2013, column: 30, scope: !5143)
!5146 = !DILocation(line: 2014, column: 15, scope: !5143)
!5147 = !DILocation(line: 2014, column: 34, scope: !5143)
!5148 = !DILocation(line: 2014, column: 53, scope: !5143)
!5149 = !DILocation(line: 2015, column: 34, scope: !5143)
!5150 = !DILocation(line: 2014, column: 20, scope: !5143)
!5151 = !DILocation(line: 2013, column: 15, scope: !5140)
!5152 = !DILocation(line: 2017, column: 28, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5143, file: !245, line: 2016, column: 13)
!5154 = !DILocation(line: 2018, column: 22, scope: !5153)
!5155 = !DILocation(line: 2018, column: 47, scope: !5153)
!5156 = !DILocation(line: 2017, column: 15, scope: !5153)
!5157 = !DILocation(line: 2019, column: 15, scope: !5153)
!5158 = !DILocation(line: 2022, column: 15, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2022, column: 15)
!5160 = !DILocation(line: 2022, column: 18, scope: !5159)
!5161 = !DILocation(line: 2022, column: 25, scope: !5159)
!5162 = !DILocation(line: 2022, column: 29, scope: !5159)
!5163 = !DILocation(line: 2022, column: 15, scope: !5140)
!5164 = !DILocalVariable(name: "options", scope: !5165, file: !245, line: 2028, type: !7)
!5165 = distinct !DILexicalBlock(scope: !5159, file: !245, line: 2023, column: 13)
!5166 = !DILocation(line: 2028, column: 19, scope: !5165)
!5167 = !DILocation(line: 2028, column: 31, scope: !5165)
!5168 = !DILocation(line: 2028, column: 34, scope: !5165)
!5169 = !DILocation(line: 2029, column: 31, scope: !5165)
!5170 = !DILocation(line: 2029, column: 37, scope: !5165)
!5171 = !DILocation(line: 2029, column: 40, scope: !5165)
!5172 = !DILocation(line: 2030, column: 37, scope: !5165)
!5173 = !DILocation(line: 2030, column: 47, scope: !5165)
!5174 = !DILocation(line: 2030, column: 64, scope: !5165)
!5175 = !DILocation(line: 2030, column: 54, scope: !5165)
!5176 = !DILocation(line: 0, scope: !5165)
!5177 = !DILocation(line: 2029, column: 34, scope: !5165)
!5178 = !DILocation(line: 2028, column: 30, scope: !5165)
!5179 = !DILocation(line: 2034, column: 34, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5165, file: !245, line: 2034, column: 19)
!5181 = !DILocation(line: 2034, column: 62, scope: !5180)
!5182 = !DILocation(line: 2034, column: 24, scope: !5180)
!5183 = !DILocation(line: 2034, column: 21, scope: !5180)
!5184 = !DILocation(line: 2034, column: 19, scope: !5165)
!5185 = !DILocation(line: 2040, column: 23, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5187, file: !245, line: 2040, column: 23)
!5187 = distinct !DILexicalBlock(scope: !5180, file: !245, line: 2035, column: 17)
!5188 = !DILocation(line: 2040, column: 23, scope: !5187)
!5189 = !DILocation(line: 2041, column: 22, scope: !5186)
!5190 = !DILocation(line: 2041, column: 39, scope: !5186)
!5191 = !DILocation(line: 2041, column: 21, scope: !5186)
!5192 = !DILocation(line: 2048, column: 51, scope: !5187)
!5193 = !DILocation(line: 2048, column: 68, scope: !5187)
!5194 = !DILocation(line: 2049, column: 58, scope: !5187)
!5195 = !DILocation(line: 2048, column: 34, scope: !5187)
!5196 = !DILocation(line: 2048, column: 32, scope: !5187)
!5197 = !DILocation(line: 2050, column: 23, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5187, file: !245, line: 2050, column: 23)
!5199 = !DILocation(line: 2050, column: 23, scope: !5187)
!5200 = !DILocation(line: 2054, column: 47, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !245, line: 2054, column: 27)
!5202 = distinct !DILexicalBlock(scope: !5198, file: !245, line: 2051, column: 21)
!5203 = !DILocation(line: 2054, column: 61, scope: !5201)
!5204 = !DILocation(line: 2055, column: 47, scope: !5201)
!5205 = !DILocation(line: 2055, column: 50, scope: !5201)
!5206 = !DILocation(line: 2055, column: 59, scope: !5201)
!5207 = !DILocation(line: 2054, column: 29, scope: !5201)
!5208 = !DILocation(line: 2054, column: 27, scope: !5202)
!5209 = !DILocation(line: 2057, column: 27, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5201, file: !245, line: 2056, column: 25)
!5211 = !DILocation(line: 2059, column: 21, scope: !5202)
!5212 = !DILocation(line: 2061, column: 19, scope: !5187)
!5213 = !DILocation(line: 2063, column: 13, scope: !5165)
!5214 = !DILocation(line: 2072, column: 15, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2072, column: 15)
!5216 = !DILocation(line: 2072, column: 18, scope: !5215)
!5217 = !DILocation(line: 2072, column: 15, scope: !5140)
!5218 = !DILocation(line: 2074, column: 33, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5220, file: !245, line: 2074, column: 19)
!5220 = distinct !DILexicalBlock(scope: !5215, file: !245, line: 2073, column: 13)
!5221 = !DILocation(line: 2074, column: 36, scope: !5219)
!5222 = !DILocation(line: 2074, column: 19, scope: !5219)
!5223 = !DILocation(line: 2074, column: 19, scope: !5220)
!5224 = !DILocation(line: 2078, column: 23, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5226, file: !245, line: 2078, column: 23)
!5226 = distinct !DILexicalBlock(scope: !5219, file: !245, line: 2075, column: 17)
!5227 = !DILocation(line: 2078, column: 23, scope: !5226)
!5228 = !DILocation(line: 2079, column: 22, scope: !5225)
!5229 = !DILocation(line: 2079, column: 39, scope: !5225)
!5230 = !DILocation(line: 2079, column: 21, scope: !5225)
!5231 = !DILocation(line: 2080, column: 19, scope: !5226)
!5232 = !DILocation(line: 2082, column: 13, scope: !5220)
!5233 = !DILocation(line: 2085, column: 21, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !245, line: 2085, column: 19)
!5235 = distinct !DILexicalBlock(scope: !5215, file: !245, line: 2084, column: 13)
!5236 = !DILocation(line: 2086, column: 19, scope: !5234)
!5237 = !DILocation(line: 2086, column: 23, scope: !5234)
!5238 = !DILocation(line: 2086, column: 26, scope: !5234)
!5239 = !DILocation(line: 2086, column: 38, scope: !5234)
!5240 = !DILocation(line: 2087, column: 23, scope: !5234)
!5241 = !DILocation(line: 2087, column: 27, scope: !5234)
!5242 = !DILocation(line: 2087, column: 30, scope: !5234)
!5243 = !DILocation(line: 2087, column: 42, scope: !5234)
!5244 = !DILocation(line: 2088, column: 27, scope: !5234)
!5245 = !DILocation(line: 2088, column: 46, scope: !5234)
!5246 = !DILocation(line: 2088, column: 49, scope: !5234)
!5247 = !DILocation(line: 2088, column: 32, scope: !5234)
!5248 = !DILocation(line: 2085, column: 19, scope: !5235)
!5249 = !DILocation(line: 2089, column: 17, scope: !5234)
!5250 = !DILocation(line: 2092, column: 15, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2092, column: 15)
!5252 = !DILocation(line: 2092, column: 15, scope: !5140)
!5253 = !DILocation(line: 2093, column: 13, scope: !5251)
!5254 = !DILocation(line: 2095, column: 16, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2095, column: 15)
!5256 = !DILocation(line: 2095, column: 15, scope: !5140)
!5257 = !DILocation(line: 2097, column: 19, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5259, file: !245, line: 2097, column: 19)
!5259 = distinct !DILexicalBlock(scope: !5255, file: !245, line: 2096, column: 13)
!5260 = !DILocation(line: 2097, column: 19, scope: !5259)
!5261 = !DILocation(line: 2099, column: 23, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !245, line: 2099, column: 23)
!5263 = distinct !DILexicalBlock(scope: !5258, file: !245, line: 2098, column: 17)
!5264 = !DILocation(line: 2099, column: 26, scope: !5262)
!5265 = !DILocation(line: 2099, column: 36, scope: !5262)
!5266 = !DILocation(line: 2099, column: 39, scope: !5262)
!5267 = !DILocation(line: 2099, column: 42, scope: !5262)
!5268 = !DILocation(line: 2099, column: 54, scope: !5262)
!5269 = !DILocation(line: 2099, column: 23, scope: !5263)
!5270 = !DILocation(line: 2103, column: 21, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5262, file: !245, line: 2100, column: 21)
!5272 = !DILocation(line: 2107, column: 24, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5262, file: !245, line: 2105, column: 21)
!5274 = !DILocation(line: 2108, column: 30, scope: !5273)
!5275 = !DILocation(line: 2108, column: 55, scope: !5273)
!5276 = !DILocation(line: 2106, column: 23, scope: !5273)
!5277 = !DILocation(line: 2109, column: 23, scope: !5273)
!5278 = !DILocation(line: 2111, column: 17, scope: !5263)
!5279 = !DILocation(line: 2120, column: 19, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5259, file: !245, line: 2120, column: 19)
!5281 = !DILocation(line: 2121, column: 19, scope: !5280)
!5282 = !DILocation(line: 2121, column: 22, scope: !5280)
!5283 = !DILocation(line: 2121, column: 25, scope: !5280)
!5284 = !DILocation(line: 2121, column: 37, scope: !5280)
!5285 = !DILocation(line: 2122, column: 19, scope: !5280)
!5286 = !DILocation(line: 2122, column: 33, scope: !5280)
!5287 = !DILocation(line: 2122, column: 36, scope: !5280)
!5288 = !DILocation(line: 2122, column: 47, scope: !5280)
!5289 = !DILocation(line: 2122, column: 22, scope: !5280)
!5290 = !DILocation(line: 2120, column: 19, scope: !5259)
!5291 = !DILocation(line: 2125, column: 26, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5280, file: !245, line: 2123, column: 17)
!5293 = !DILocation(line: 2126, column: 26, scope: !5292)
!5294 = !DILocation(line: 2126, column: 51, scope: !5292)
!5295 = !DILocation(line: 2124, column: 19, scope: !5292)
!5296 = !DILocation(line: 2127, column: 19, scope: !5292)
!5297 = !DILocation(line: 2129, column: 13, scope: !5259)
!5298 = !DILocation(line: 2131, column: 16, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2131, column: 15)
!5300 = !DILocation(line: 2131, column: 15, scope: !5140)
!5301 = !DILocation(line: 2133, column: 19, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !245, line: 2133, column: 19)
!5303 = distinct !DILexicalBlock(scope: !5299, file: !245, line: 2132, column: 13)
!5304 = !DILocation(line: 2133, column: 19, scope: !5303)
!5305 = !DILocation(line: 2135, column: 23, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5307, file: !245, line: 2135, column: 23)
!5307 = distinct !DILexicalBlock(scope: !5302, file: !245, line: 2134, column: 17)
!5308 = !DILocation(line: 2135, column: 26, scope: !5306)
!5309 = !DILocation(line: 2135, column: 36, scope: !5306)
!5310 = !DILocation(line: 2135, column: 39, scope: !5306)
!5311 = !DILocation(line: 2135, column: 42, scope: !5306)
!5312 = !DILocation(line: 2135, column: 54, scope: !5306)
!5313 = !DILocation(line: 2135, column: 23, scope: !5307)
!5314 = !DILocation(line: 2139, column: 21, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5306, file: !245, line: 2136, column: 21)
!5316 = !DILocation(line: 2143, column: 26, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5306, file: !245, line: 2141, column: 21)
!5318 = !DILocation(line: 2144, column: 30, scope: !5317)
!5319 = !DILocation(line: 2142, column: 23, scope: !5317)
!5320 = !DILocation(line: 2145, column: 23, scope: !5317)
!5321 = !DILocation(line: 2147, column: 17, scope: !5307)
!5322 = !DILocation(line: 2148, column: 13, scope: !5303)
!5323 = !DILocation(line: 2150, column: 15, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2150, column: 15)
!5325 = !DILocation(line: 2150, column: 18, scope: !5324)
!5326 = !DILocation(line: 2150, column: 15, scope: !5140)
!5327 = !DILocation(line: 2153, column: 19, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !245, line: 2153, column: 19)
!5329 = distinct !DILexicalBlock(scope: !5324, file: !245, line: 2151, column: 13)
!5330 = !DILocation(line: 2153, column: 44, scope: !5328)
!5331 = !DILocation(line: 2153, column: 48, scope: !5328)
!5332 = !DILocation(line: 2154, column: 19, scope: !5328)
!5333 = !DILocation(line: 2154, column: 22, scope: !5328)
!5334 = !DILocation(line: 2154, column: 25, scope: !5328)
!5335 = !DILocation(line: 2154, column: 37, scope: !5328)
!5336 = !DILocation(line: 2153, column: 19, scope: !5329)
!5337 = !DILocation(line: 2157, column: 24, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5328, file: !245, line: 2155, column: 17)
!5339 = !DILocation(line: 2158, column: 26, scope: !5338)
!5340 = !DILocation(line: 2158, column: 50, scope: !5338)
!5341 = !DILocation(line: 2156, column: 19, scope: !5338)
!5342 = !DILocation(line: 2159, column: 19, scope: !5338)
!5343 = !DILocation(line: 2161, column: 13, scope: !5329)
!5344 = !DILocalVariable(name: "srcbase", scope: !5140, file: !245, line: 2163, type: !115)
!5345 = !DILocation(line: 2163, column: 23, scope: !5140)
!5346 = !DILocation(line: 2164, column: 15, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5140, file: !245, line: 2164, column: 15)
!5348 = !DILocation(line: 2164, column: 18, scope: !5347)
!5349 = !DILocation(line: 2164, column: 30, scope: !5347)
!5350 = !DILocation(line: 2167, column: 15, scope: !5347)
!5351 = !DILocation(line: 2167, column: 61, scope: !5347)
!5352 = !DILocation(line: 2167, column: 45, scope: !5347)
!5353 = !DILocation(line: 2167, column: 43, scope: !5347)
!5354 = !DILocation(line: 2167, column: 20, scope: !5347)
!5355 = !DILocation(line: 2173, column: 15, scope: !5347)
!5356 = !DILocation(line: 2173, column: 19, scope: !5347)
!5357 = !DILocation(line: 2173, column: 22, scope: !5347)
!5358 = !DILocation(line: 2173, column: 32, scope: !5347)
!5359 = !DILocation(line: 2173, column: 37, scope: !5347)
!5360 = !DILocation(line: 2164, column: 15, scope: !5140)
!5361 = !DILocation(line: 2179, column: 19, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5363, file: !245, line: 2179, column: 19)
!5363 = distinct !DILexicalBlock(scope: !5347, file: !245, line: 2174, column: 13)
!5364 = !DILocation(line: 2179, column: 22, scope: !5362)
!5365 = !DILocation(line: 2179, column: 34, scope: !5362)
!5366 = !DILocation(line: 2180, column: 19, scope: !5362)
!5367 = !DILocation(line: 2180, column: 44, scope: !5362)
!5368 = !DILocation(line: 2180, column: 62, scope: !5362)
!5369 = !DILocation(line: 2180, column: 22, scope: !5362)
!5370 = !DILocation(line: 2179, column: 19, scope: !5363)
!5371 = !DILocalVariable(name: "fmt", scope: !5372, file: !245, line: 2182, type: !115)
!5372 = distinct !DILexicalBlock(scope: !5362, file: !245, line: 2181, column: 17)
!5373 = !DILocation(line: 2182, column: 31, scope: !5372)
!5374 = !DILocation(line: 2183, column: 26, scope: !5372)
!5375 = !DILocation(line: 2183, column: 29, scope: !5372)
!5376 = !DILocation(line: 2184, column: 20, scope: !5372)
!5377 = !DILocation(line: 2185, column: 20, scope: !5372)
!5378 = !DILocation(line: 2183, column: 23, scope: !5372)
!5379 = !DILocation(line: 2186, column: 32, scope: !5372)
!5380 = !DILocation(line: 2187, column: 26, scope: !5372)
!5381 = !DILocation(line: 2188, column: 26, scope: !5372)
!5382 = !DILocation(line: 2186, column: 19, scope: !5372)
!5383 = !DILocation(line: 2189, column: 19, scope: !5372)
!5384 = !DILocalVariable(name: "tmp_backup", scope: !5363, file: !245, line: 2192, type: !9)
!5385 = !DILocation(line: 2192, column: 21, scope: !5363)
!5386 = !DILocation(line: 2192, column: 64, scope: !5363)
!5387 = !DILocation(line: 2193, column: 54, scope: !5363)
!5388 = !DILocation(line: 2193, column: 57, scope: !5363)
!5389 = !DILocation(line: 2192, column: 34, scope: !5363)
!5390 = !DILocation(line: 2200, column: 19, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5363, file: !245, line: 2200, column: 19)
!5392 = !DILocation(line: 2200, column: 19, scope: !5363)
!5393 = !DILocation(line: 2202, column: 19, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !245, line: 2201, column: 17)
!5395 = !DILocalVariable(name: "__old", scope: !5396, file: !245, line: 2202, type: !115)
!5396 = distinct !DILexicalBlock(scope: !5397, file: !245, line: 2202, column: 19)
!5397 = distinct !DILexicalBlock(scope: !5394, file: !245, line: 2202, column: 19)
!5398 = !DILocation(line: 2202, column: 19, scope: !5396)
!5399 = !DILocalVariable(name: "__len", scope: !5396, file: !245, line: 2202, type: !55)
!5400 = !DILocalVariable(name: "__new", scope: !5396, file: !245, line: 2202, type: !9)
!5401 = !DILocation(line: 2202, column: 19, scope: !5397)
!5402 = !DILocation(line: 2203, column: 25, scope: !5394)
!5403 = !DILocation(line: 2203, column: 19, scope: !5394)
!5404 = !DILocation(line: 2204, column: 17, scope: !5394)
!5405 = !DILocation(line: 2205, column: 24, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5391, file: !245, line: 2205, column: 24)
!5407 = !DILocation(line: 2205, column: 30, scope: !5406)
!5408 = !DILocation(line: 2205, column: 24, scope: !5391)
!5409 = !DILocation(line: 2207, column: 29, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5406, file: !245, line: 2206, column: 17)
!5411 = !DILocation(line: 2207, column: 36, scope: !5410)
!5412 = !DILocation(line: 2207, column: 59, scope: !5410)
!5413 = !DILocation(line: 2207, column: 19, scope: !5410)
!5414 = !DILocation(line: 2208, column: 19, scope: !5410)
!5415 = !DILocation(line: 2210, column: 23, scope: !5363)
!5416 = !DILocation(line: 2211, column: 13, scope: !5363)
!5417 = !DILocation(line: 2212, column: 22, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5347, file: !245, line: 2212, column: 20)
!5419 = !DILocation(line: 2214, column: 20, scope: !5418)
!5420 = !DILocation(line: 2214, column: 25, scope: !5418)
!5421 = !DILocation(line: 2214, column: 28, scope: !5418)
!5422 = !DILocation(line: 2215, column: 20, scope: !5418)
!5423 = !DILocation(line: 2215, column: 24, scope: !5418)
!5424 = !DILocation(line: 2215, column: 27, scope: !5418)
!5425 = !DILocation(line: 2216, column: 24, scope: !5418)
!5426 = !DILocation(line: 2216, column: 28, scope: !5418)
!5427 = !DILocation(line: 2216, column: 31, scope: !5418)
!5428 = !DILocation(line: 2216, column: 46, scope: !5418)
!5429 = !DILocation(line: 2216, column: 60, scope: !5418)
!5430 = !{!3182, !3183, i64 16}
!5431 = !DILocation(line: 2216, column: 51, scope: !5418)
!5432 = !DILocation(line: 2217, column: 24, scope: !5418)
!5433 = !DILocation(line: 2217, column: 28, scope: !5418)
!5434 = !DILocation(line: 2217, column: 31, scope: !5418)
!5435 = !DILocation(line: 2217, column: 43, scope: !5418)
!5436 = !DILocation(line: 2218, column: 28, scope: !5418)
!5437 = !DILocation(line: 2218, column: 33, scope: !5418)
!5438 = !DILocation(line: 2212, column: 20, scope: !5347)
!5439 = !DILocation(line: 2221, column: 27, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5441, file: !245, line: 2221, column: 19)
!5441 = distinct !DILexicalBlock(scope: !5418, file: !245, line: 2220, column: 13)
!5442 = !DILocation(line: 2221, column: 19, scope: !5440)
!5443 = !DILocation(line: 2221, column: 37, scope: !5440)
!5444 = !DILocation(line: 2221, column: 42, scope: !5440)
!5445 = !DILocation(line: 2221, column: 45, scope: !5440)
!5446 = !DILocation(line: 2221, column: 51, scope: !5440)
!5447 = !DILocation(line: 2221, column: 19, scope: !5441)
!5448 = !DILocation(line: 2223, column: 29, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5440, file: !245, line: 2222, column: 17)
!5450 = !DILocation(line: 2223, column: 36, scope: !5449)
!5451 = !DILocation(line: 2223, column: 59, scope: !5449)
!5452 = !DILocation(line: 2223, column: 19, scope: !5449)
!5453 = !DILocation(line: 2224, column: 19, scope: !5449)
!5454 = !DILocation(line: 2226, column: 23, scope: !5441)
!5455 = !DILocation(line: 2227, column: 19, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5441, file: !245, line: 2227, column: 19)
!5457 = !DILocation(line: 2227, column: 22, scope: !5456)
!5458 = !DILocation(line: 2227, column: 19, scope: !5441)
!5459 = !DILocation(line: 2228, column: 25, scope: !5456)
!5460 = !DILocation(line: 2228, column: 44, scope: !5456)
!5461 = !DILocation(line: 2228, column: 17, scope: !5456)
!5462 = !DILocation(line: 2229, column: 13, scope: !5441)
!5463 = !DILocation(line: 2230, column: 9, scope: !5140)
!5464 = !DILocation(line: 2231, column: 5, scope: !5067)
!5465 = !DILocation(line: 2235, column: 7, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2235, column: 7)
!5467 = !DILocation(line: 2236, column: 7, scope: !5466)
!5468 = !DILocation(line: 2236, column: 10, scope: !5466)
!5469 = !DILocation(line: 2236, column: 13, scope: !5466)
!5470 = !DILocation(line: 2237, column: 7, scope: !5466)
!5471 = !DILocation(line: 2237, column: 12, scope: !5466)
!5472 = !DILocation(line: 2237, column: 15, scope: !5466)
!5473 = !DILocation(line: 2238, column: 7, scope: !5466)
!5474 = !DILocation(line: 2238, column: 10, scope: !5466)
!5475 = !DILocation(line: 2238, column: 13, scope: !5466)
!5476 = !DILocation(line: 2238, column: 25, scope: !5466)
!5477 = !DILocation(line: 2235, column: 7, scope: !4895)
!5478 = !DILocalVariable(name: "lstat_ok", scope: !5479, file: !245, line: 2240, type: !120)
!5479 = distinct !DILexicalBlock(scope: !5466, file: !245, line: 2239, column: 5)
!5480 = !DILocation(line: 2240, column: 12, scope: !5479)
!5481 = !DILocalVariable(name: "tmp_buf", scope: !5479, file: !245, line: 2241, type: !317)
!5482 = !DILocation(line: 2241, column: 19, scope: !5479)
!5483 = !DILocalVariable(name: "dst_lstat_sb", scope: !5479, file: !245, line: 2242, type: !356)
!5484 = !DILocation(line: 2242, column: 20, scope: !5479)
!5485 = !DILocation(line: 2246, column: 11, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5479, file: !245, line: 2246, column: 11)
!5487 = !DILocation(line: 2246, column: 11, scope: !5479)
!5488 = !DILocation(line: 2247, column: 22, scope: !5486)
!5489 = !DILocation(line: 2247, column: 9, scope: !5486)
!5490 = !DILocation(line: 2250, column: 22, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !245, line: 2250, column: 15)
!5492 = distinct !DILexicalBlock(scope: !5486, file: !245, line: 2249, column: 9)
!5493 = !DILocation(line: 2250, column: 15, scope: !5491)
!5494 = !DILocation(line: 2250, column: 42, scope: !5491)
!5495 = !DILocation(line: 2250, column: 15, scope: !5492)
!5496 = !DILocation(line: 2251, column: 26, scope: !5491)
!5497 = !DILocation(line: 2251, column: 13, scope: !5491)
!5498 = !DILocation(line: 2253, column: 22, scope: !5491)
!5499 = !DILocation(line: 2257, column: 11, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5479, file: !245, line: 2257, column: 11)
!5501 = !DILocation(line: 2258, column: 11, scope: !5500)
!5502 = !DILocation(line: 2258, column: 14, scope: !5500)
!5503 = !DILocation(line: 2259, column: 11, scope: !5500)
!5504 = !DILocation(line: 2259, column: 25, scope: !5500)
!5505 = !DILocation(line: 2259, column: 28, scope: !5500)
!5506 = !DILocation(line: 2259, column: 39, scope: !5500)
!5507 = !DILocation(line: 2259, column: 49, scope: !5500)
!5508 = !DILocation(line: 2259, column: 14, scope: !5500)
!5509 = !DILocation(line: 2257, column: 11, scope: !5479)
!5510 = !DILocation(line: 2262, column: 18, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5500, file: !245, line: 2260, column: 9)
!5512 = !DILocation(line: 2263, column: 18, scope: !5511)
!5513 = !DILocation(line: 2263, column: 43, scope: !5511)
!5514 = !DILocation(line: 2261, column: 11, scope: !5511)
!5515 = !DILocation(line: 2264, column: 11, scope: !5511)
!5516 = !DILocation(line: 2266, column: 5, scope: !5479)
!5517 = !DILocation(line: 2272, column: 7, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2272, column: 7)
!5519 = !DILocation(line: 2272, column: 10, scope: !5518)
!5520 = !DILocation(line: 2272, column: 18, scope: !5518)
!5521 = !DILocation(line: 2272, column: 22, scope: !5518)
!5522 = !DILocation(line: 2272, column: 25, scope: !5518)
!5523 = !DILocation(line: 2272, column: 35, scope: !5518)
!5524 = !DILocation(line: 2272, column: 39, scope: !5518)
!5525 = !DILocation(line: 2272, column: 7, scope: !4895)
!5526 = !DILocation(line: 2273, column: 19, scope: !5518)
!5527 = !DILocation(line: 2273, column: 29, scope: !5518)
!5528 = !DILocation(line: 2273, column: 39, scope: !5518)
!5529 = !DILocation(line: 2273, column: 5, scope: !5518)
!5530 = !DILocation(line: 2305, column: 7, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2305, column: 7)
!5532 = !DILocation(line: 2305, column: 20, scope: !5531)
!5533 = !DILocation(line: 2305, column: 7, scope: !4895)
!5534 = !DILocation(line: 2306, column: 18, scope: !5531)
!5535 = !DILocation(line: 2306, column: 5, scope: !5531)
!5536 = !DILocation(line: 2307, column: 12, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5531, file: !245, line: 2307, column: 12)
!5538 = !DILocation(line: 2307, column: 15, scope: !5537)
!5539 = !DILocation(line: 2307, column: 25, scope: !5537)
!5540 = !DILocation(line: 2307, column: 28, scope: !5537)
!5541 = !DILocation(line: 2307, column: 12, scope: !5531)
!5542 = !DILocation(line: 2309, column: 11, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5544, file: !245, line: 2309, column: 11)
!5544 = distinct !DILexicalBlock(scope: !5537, file: !245, line: 2308, column: 5)
!5545 = !DILocation(line: 2309, column: 11, scope: !5544)
!5546 = !DILocation(line: 2310, column: 41, scope: !5543)
!5547 = !DILocation(line: 2310, column: 58, scope: !5543)
!5548 = !DILocation(line: 2310, column: 73, scope: !5543)
!5549 = !DILocation(line: 2310, column: 24, scope: !5543)
!5550 = !DILocation(line: 2310, column: 22, scope: !5543)
!5551 = !DILocation(line: 2310, column: 9, scope: !5543)
!5552 = !DILocation(line: 2312, column: 51, scope: !5543)
!5553 = !DILocation(line: 2312, column: 66, scope: !5543)
!5554 = !DILocation(line: 2312, column: 24, scope: !5543)
!5555 = !DILocation(line: 2312, column: 22, scope: !5543)
!5556 = !DILocation(line: 2313, column: 5, scope: !5544)
!5557 = !DILocation(line: 2314, column: 12, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5537, file: !245, line: 2314, column: 12)
!5559 = !DILocation(line: 2314, column: 15, scope: !5558)
!5560 = !DILocation(line: 2314, column: 25, scope: !5558)
!5561 = !DILocation(line: 2314, column: 35, scope: !5558)
!5562 = !DILocation(line: 2314, column: 44, scope: !5558)
!5563 = !DILocation(line: 2314, column: 12, scope: !5537)
!5564 = !DILocation(line: 2316, column: 49, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5558, file: !245, line: 2315, column: 5)
!5566 = !DILocation(line: 2316, column: 64, scope: !5565)
!5567 = !DILocation(line: 2316, column: 22, scope: !5565)
!5568 = !DILocation(line: 2316, column: 20, scope: !5565)
!5569 = !DILocation(line: 2317, column: 5, scope: !5565)
!5570 = !DILocation(line: 2318, column: 12, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5558, file: !245, line: 2318, column: 12)
!5572 = !DILocation(line: 2318, column: 15, scope: !5571)
!5573 = !DILocation(line: 2319, column: 12, scope: !5571)
!5574 = !DILocation(line: 2319, column: 16, scope: !5571)
!5575 = !DILocation(line: 2319, column: 19, scope: !5571)
!5576 = !DILocation(line: 2320, column: 12, scope: !5571)
!5577 = !DILocation(line: 2320, column: 27, scope: !5571)
!5578 = !DILocation(line: 2320, column: 18, scope: !5571)
!5579 = !DILocation(line: 2321, column: 16, scope: !5571)
!5580 = !DILocation(line: 2321, column: 20, scope: !5571)
!5581 = !DILocation(line: 2322, column: 20, scope: !5571)
!5582 = !DILocation(line: 2322, column: 23, scope: !5571)
!5583 = !DILocation(line: 2322, column: 26, scope: !5571)
!5584 = !DILocation(line: 2322, column: 38, scope: !5571)
!5585 = !DILocation(line: 2323, column: 16, scope: !5571)
!5586 = !DILocation(line: 2323, column: 19, scope: !5571)
!5587 = !DILocation(line: 2323, column: 22, scope: !5571)
!5588 = !DILocation(line: 2323, column: 34, scope: !5571)
!5589 = !DILocation(line: 2318, column: 12, scope: !5558)
!5590 = !DILocation(line: 2325, column: 39, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5571, file: !245, line: 2324, column: 5)
!5592 = !DILocation(line: 2325, column: 56, scope: !5591)
!5593 = !DILocation(line: 2325, column: 71, scope: !5591)
!5594 = !DILocation(line: 2325, column: 22, scope: !5591)
!5595 = !DILocation(line: 2325, column: 20, scope: !5591)
!5596 = !DILocation(line: 2326, column: 5, scope: !5591)
!5597 = !DILocation(line: 2331, column: 7, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2331, column: 7)
!5599 = !DILocation(line: 2331, column: 7, scope: !4895)
!5600 = !DILocation(line: 2336, column: 11, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5602, file: !245, line: 2336, column: 11)
!5602 = distinct !DILexicalBlock(scope: !5598, file: !245, line: 2332, column: 5)
!5603 = !DILocation(line: 2336, column: 11, scope: !5602)
!5604 = !DILocation(line: 2340, column: 26, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5606, file: !245, line: 2340, column: 15)
!5606 = distinct !DILexicalBlock(scope: !5601, file: !245, line: 2337, column: 9)
!5607 = !DILocation(line: 2340, column: 36, scope: !5605)
!5608 = !DILocation(line: 2340, column: 15, scope: !5605)
!5609 = !DILocation(line: 2340, column: 15, scope: !5606)
!5610 = !DILocation(line: 2342, column: 28, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5605, file: !245, line: 2341, column: 13)
!5612 = !DILocation(line: 2343, column: 22, scope: !5611)
!5613 = !DILocation(line: 2344, column: 22, scope: !5611)
!5614 = !DILocation(line: 2342, column: 15, scope: !5611)
!5615 = !DILocation(line: 2345, column: 16, scope: !5611)
!5616 = !DILocation(line: 2345, column: 31, scope: !5611)
!5617 = !DILocation(line: 2346, column: 15, scope: !5611)
!5618 = !DILocation(line: 2348, column: 31, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5605, file: !245, line: 2348, column: 20)
!5620 = !DILocation(line: 2348, column: 41, scope: !5619)
!5621 = !DILocation(line: 2348, column: 20, scope: !5619)
!5622 = !DILocation(line: 2348, column: 20, scope: !5605)
!5623 = !DILocation(line: 2350, column: 28, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5619, file: !245, line: 2349, column: 13)
!5625 = !DILocation(line: 2352, column: 22, scope: !5624)
!5626 = !DILocation(line: 2350, column: 15, scope: !5624)
!5627 = !DILocation(line: 2357, column: 19, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5624, file: !245, line: 2357, column: 19)
!5629 = !DILocation(line: 2357, column: 22, scope: !5628)
!5630 = !DILocation(line: 2357, column: 32, scope: !5628)
!5631 = !DILocation(line: 2357, column: 35, scope: !5628)
!5632 = !DILocation(line: 2357, column: 19, scope: !5624)
!5633 = !DILocation(line: 2358, column: 18, scope: !5628)
!5634 = !DILocation(line: 2358, column: 35, scope: !5628)
!5635 = !DILocation(line: 2358, column: 17, scope: !5628)
!5636 = !DILocation(line: 2361, column: 15, scope: !5624)
!5637 = !DILocation(line: 2363, column: 20, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5619, file: !245, line: 2363, column: 20)
!5639 = !DILocation(line: 2363, column: 23, scope: !5638)
!5640 = !DILocation(line: 2363, column: 35, scope: !5638)
!5641 = !DILocation(line: 2364, column: 20, scope: !5638)
!5642 = !DILocation(line: 2364, column: 24, scope: !5638)
!5643 = !DILocation(line: 2365, column: 24, scope: !5638)
!5644 = !DILocation(line: 2365, column: 27, scope: !5638)
!5645 = !DILocation(line: 2365, column: 30, scope: !5638)
!5646 = !DILocation(line: 2365, column: 42, scope: !5638)
!5647 = !DILocation(line: 2363, column: 20, scope: !5619)
!5648 = !DILocation(line: 2373, column: 13, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5638, file: !245, line: 2366, column: 13)
!5650 = !DILocation(line: 2376, column: 28, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5638, file: !245, line: 2375, column: 13)
!5652 = !DILocation(line: 2377, column: 22, scope: !5651)
!5653 = !DILocation(line: 2377, column: 47, scope: !5651)
!5654 = !DILocation(line: 2376, column: 15, scope: !5651)
!5655 = !DILocation(line: 2378, column: 15, scope: !5651)
!5656 = !DILocation(line: 2380, column: 9, scope: !5606)
!5657 = !DILocation(line: 2383, column: 35, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !245, line: 2383, column: 15)
!5659 = distinct !DILexicalBlock(scope: !5601, file: !245, line: 2382, column: 9)
!5660 = !DILocation(line: 2383, column: 49, scope: !5658)
!5661 = !DILocation(line: 2383, column: 65, scope: !5658)
!5662 = !DILocation(line: 2383, column: 68, scope: !5658)
!5663 = !DILocation(line: 2384, column: 35, scope: !5658)
!5664 = !DILocation(line: 2383, column: 17, scope: !5658)
!5665 = !DILocation(line: 2383, column: 15, scope: !5659)
!5666 = !DILocation(line: 2385, column: 13, scope: !5658)
!5667 = !DILocation(line: 2387, column: 11, scope: !5659)
!5668 = !DILocation(line: 2389, column: 5, scope: !5602)
!5669 = !DILocation(line: 2391, column: 7, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2391, column: 7)
!5671 = !DILocation(line: 2391, column: 10, scope: !5670)
!5672 = !DILocation(line: 2391, column: 7, scope: !4895)
!5673 = !DILocation(line: 2393, column: 11, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5675, file: !245, line: 2393, column: 11)
!5675 = distinct !DILexicalBlock(scope: !5670, file: !245, line: 2392, column: 5)
!5676 = !DILocation(line: 2393, column: 24, scope: !5674)
!5677 = !DILocation(line: 2393, column: 11, scope: !5675)
!5678 = !DILocation(line: 2394, column: 32, scope: !5674)
!5679 = !DILocation(line: 2394, column: 42, scope: !5674)
!5680 = !DILocation(line: 2394, column: 24, scope: !5674)
!5681 = !DILocation(line: 2394, column: 52, scope: !5674)
!5682 = !DILocation(line: 2394, column: 63, scope: !5674)
!5683 = !DILocation(line: 2394, column: 22, scope: !5674)
!5684 = !DILocation(line: 2394, column: 9, scope: !5674)
!5685 = !DILocation(line: 2396, column: 11, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5675, file: !245, line: 2396, column: 11)
!5687 = !DILocation(line: 2396, column: 24, scope: !5686)
!5688 = !DILocation(line: 2396, column: 11, scope: !5675)
!5689 = !DILocation(line: 2398, column: 15, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !245, line: 2398, column: 15)
!5691 = distinct !DILexicalBlock(scope: !5686, file: !245, line: 2397, column: 9)
!5692 = !DILocation(line: 2398, column: 18, scope: !5690)
!5693 = !DILocation(line: 2398, column: 15, scope: !5691)
!5694 = !DILocation(line: 2400, column: 23, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5690, file: !245, line: 2399, column: 13)
!5696 = !DILocation(line: 2400, column: 15, scope: !5695)
!5697 = !DILocation(line: 2401, column: 29, scope: !5695)
!5698 = !DILocation(line: 2401, column: 39, scope: !5695)
!5699 = !DILocation(line: 2401, column: 49, scope: !5695)
!5700 = !DILocation(line: 2401, column: 15, scope: !5695)
!5701 = !DILocation(line: 2402, column: 13, scope: !5695)
!5702 = !DILocation(line: 2404, column: 15, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5691, file: !245, line: 2404, column: 15)
!5704 = !DILocation(line: 2404, column: 18, scope: !5703)
!5705 = !DILocation(line: 2404, column: 15, scope: !5691)
!5706 = !DILocation(line: 2407, column: 45, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5703, file: !245, line: 2405, column: 13)
!5708 = !DILocation(line: 2407, column: 68, scope: !5707)
!5709 = !DILocation(line: 2407, column: 22, scope: !5707)
!5710 = !DILocation(line: 2408, column: 13, scope: !5707)
!5711 = !DILocation(line: 2410, column: 15, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5691, file: !245, line: 2410, column: 15)
!5713 = !DILocation(line: 2410, column: 15, scope: !5691)
!5714 = !DILocation(line: 2411, column: 14, scope: !5712)
!5715 = !DILocation(line: 2411, column: 31, scope: !5712)
!5716 = !DILocation(line: 2411, column: 13, scope: !5712)
!5717 = !DILocation(line: 2413, column: 15, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5691, file: !245, line: 2413, column: 15)
!5719 = !DILocation(line: 2413, column: 32, scope: !5718)
!5720 = !DILocation(line: 2413, column: 36, scope: !5718)
!5721 = !DILocation(line: 2413, column: 39, scope: !5718)
!5722 = !DILocation(line: 2413, column: 15, scope: !5691)
!5723 = !DILocation(line: 2422, column: 28, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5718, file: !245, line: 2414, column: 13)
!5725 = !DILocation(line: 2422, column: 31, scope: !5724)
!5726 = !DILocation(line: 2422, column: 42, scope: !5724)
!5727 = !DILocation(line: 2422, column: 15, scope: !5724)
!5728 = !DILocation(line: 2423, column: 13, scope: !5724)
!5729 = !DILocation(line: 2425, column: 11, scope: !5691)
!5730 = !DILocation(line: 2433, column: 11, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5675, file: !245, line: 2433, column: 11)
!5732 = !DILocation(line: 2433, column: 24, scope: !5731)
!5733 = !DILocation(line: 2433, column: 11, scope: !5675)
!5734 = !DILocation(line: 2438, column: 24, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !245, line: 2434, column: 9)
!5736 = !DILocation(line: 2439, column: 18, scope: !5735)
!5737 = !DILocation(line: 2440, column: 18, scope: !5735)
!5738 = !DILocation(line: 2438, column: 11, scope: !5735)
!5739 = !DILocation(line: 2446, column: 12, scope: !5735)
!5740 = !DILocation(line: 2446, column: 27, scope: !5735)
!5741 = !DILocation(line: 2450, column: 11, scope: !5735)
!5742 = !DILocation(line: 2468, column: 11, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5675, file: !245, line: 2468, column: 11)
!5744 = !DILocation(line: 2468, column: 24, scope: !5743)
!5745 = !DILocation(line: 2468, column: 11, scope: !5675)
!5746 = !DILocation(line: 2480, column: 21, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5743, file: !245, line: 2469, column: 9)
!5748 = !DILocation(line: 2481, column: 18, scope: !5747)
!5749 = !DILocation(line: 2482, column: 18, scope: !5747)
!5750 = !DILocation(line: 2482, column: 43, scope: !5747)
!5751 = !DILocation(line: 2480, column: 11, scope: !5747)
!5752 = !DILocation(line: 2483, column: 34, scope: !5747)
!5753 = !DILocation(line: 2483, column: 49, scope: !5747)
!5754 = !DILocation(line: 2483, column: 11, scope: !5747)
!5755 = !DILocation(line: 2484, column: 11, scope: !5747)
!5756 = !DILocation(line: 2493, column: 12, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5675, file: !245, line: 2493, column: 11)
!5758 = !DILocation(line: 2493, column: 40, scope: !5757)
!5759 = !DILocation(line: 2493, column: 33, scope: !5757)
!5760 = !DILocation(line: 2493, column: 60, scope: !5757)
!5761 = !DILocation(line: 2493, column: 52, scope: !5757)
!5762 = !DILocation(line: 2493, column: 71, scope: !5757)
!5763 = !DILocation(line: 2494, column: 11, scope: !5757)
!5764 = !DILocation(line: 2494, column: 14, scope: !5757)
!5765 = !DILocation(line: 2494, column: 20, scope: !5757)
!5766 = !DILocation(line: 2493, column: 11, scope: !5675)
!5767 = !DILocation(line: 2496, column: 21, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5757, file: !245, line: 2495, column: 9)
!5769 = !DILocation(line: 2497, column: 14, scope: !5768)
!5770 = !DILocation(line: 2498, column: 18, scope: !5768)
!5771 = !DILocation(line: 2498, column: 43, scope: !5768)
!5772 = !DILocation(line: 2496, column: 11, scope: !5768)
!5773 = !DILocation(line: 2499, column: 34, scope: !5768)
!5774 = !DILocation(line: 2499, column: 49, scope: !5768)
!5775 = !DILocation(line: 2499, column: 11, scope: !5768)
!5776 = !DILocation(line: 2500, column: 11, scope: !5768)
!5777 = !DILocation(line: 2503, column: 11, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5675, file: !245, line: 2503, column: 11)
!5779 = !DILocation(line: 2503, column: 14, scope: !5778)
!5780 = !DILocation(line: 2503, column: 22, scope: !5778)
!5781 = !DILocation(line: 2503, column: 26, scope: !5778)
!5782 = !DILocation(line: 2503, column: 11, scope: !5675)
!5783 = !DILocation(line: 2505, column: 19, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5778, file: !245, line: 2504, column: 9)
!5785 = !DILocation(line: 2505, column: 11, scope: !5784)
!5786 = !DILocation(line: 2506, column: 25, scope: !5784)
!5787 = !DILocation(line: 2506, column: 35, scope: !5784)
!5788 = !DILocation(line: 2506, column: 45, scope: !5784)
!5789 = !DILocation(line: 2506, column: 11, scope: !5784)
!5790 = !DILocation(line: 2507, column: 9, scope: !5784)
!5791 = !DILocation(line: 2508, column: 15, scope: !5675)
!5792 = !DILocation(line: 2509, column: 5, scope: !5675)
!5793 = !DILocation(line: 2515, column: 20, scope: !4895)
!5794 = !DILocation(line: 2515, column: 23, scope: !4895)
!5795 = !DILocation(line: 2515, column: 34, scope: !4895)
!5796 = !DILocation(line: 2515, column: 37, scope: !4895)
!5797 = !DILocation(line: 2515, column: 44, scope: !4895)
!5798 = !DILocation(line: 2515, column: 54, scope: !4895)
!5799 = !DILocation(line: 2515, column: 17, scope: !4895)
!5800 = !DILocation(line: 2517, column: 6, scope: !4895)
!5801 = !DILocation(line: 2518, column: 9, scope: !4895)
!5802 = !DILocation(line: 2518, column: 12, scope: !4895)
!5803 = !DILocation(line: 2519, column: 11, scope: !4895)
!5804 = !DILocation(line: 2518, column: 6, scope: !4895)
!5805 = !DILocation(line: 2516, column: 23, scope: !4895)
!5806 = !DILocation(line: 2522, column: 14, scope: !4895)
!5807 = !DILocation(line: 2528, column: 35, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2528, column: 7)
!5809 = !DILocation(line: 2528, column: 45, scope: !5808)
!5810 = !DILocation(line: 2528, column: 55, scope: !5808)
!5811 = !DILocation(line: 2528, column: 65, scope: !5808)
!5812 = !DILocation(line: 2528, column: 74, scope: !5808)
!5813 = !DILocation(line: 2528, column: 9, scope: !5808)
!5814 = !DILocation(line: 2528, column: 7, scope: !4895)
!5815 = !DILocation(line: 2529, column: 5, scope: !5808)
!5816 = !DILocation(line: 2531, column: 7, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2531, column: 7)
!5818 = !DILocation(line: 2531, column: 7, scope: !4895)
!5819 = !DILocalVariable(name: "dir", scope: !5820, file: !245, line: 2533, type: !350)
!5820 = distinct !DILexicalBlock(scope: !5817, file: !245, line: 2532, column: 5)
!5821 = !DILocation(line: 2533, column: 24, scope: !5820)
!5822 = !DILocation(line: 2540, column: 33, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5820, file: !245, line: 2540, column: 11)
!5824 = !DILocation(line: 2540, column: 11, scope: !5823)
!5825 = !DILocation(line: 2540, column: 11, scope: !5820)
!5826 = !DILocation(line: 2542, column: 24, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5823, file: !245, line: 2541, column: 9)
!5828 = !DILocation(line: 2543, column: 18, scope: !5827)
!5829 = !DILocation(line: 2542, column: 11, scope: !5827)
!5830 = !DILocation(line: 2544, column: 11, scope: !5827)
!5831 = !DILocation(line: 2549, column: 13, scope: !5820)
!5832 = !DILocation(line: 2549, column: 11, scope: !5820)
!5833 = !DILocation(line: 2550, column: 21, scope: !5820)
!5834 = !DILocation(line: 2550, column: 7, scope: !5820)
!5835 = !DILocation(line: 2550, column: 12, scope: !5820)
!5836 = !DILocation(line: 2550, column: 19, scope: !5820)
!5837 = !{!5838, !2999, i64 0}
!5838 = !{!"dir_list", !2999, i64 0, !3183, i64 8, !3183, i64 16}
!5839 = !DILocation(line: 2551, column: 25, scope: !5820)
!5840 = !DILocation(line: 2551, column: 7, scope: !5820)
!5841 = !DILocation(line: 2551, column: 12, scope: !5820)
!5842 = !DILocation(line: 2551, column: 16, scope: !5820)
!5843 = !{!5838, !3183, i64 8}
!5844 = !DILocation(line: 2552, column: 25, scope: !5820)
!5845 = !DILocation(line: 2552, column: 7, scope: !5820)
!5846 = !DILocation(line: 2552, column: 12, scope: !5820)
!5847 = !DILocation(line: 2552, column: 16, scope: !5820)
!5848 = !{!5838, !3183, i64 16}
!5849 = !DILocation(line: 2554, column: 11, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5820, file: !245, line: 2554, column: 11)
!5851 = !DILocation(line: 2554, column: 19, scope: !5850)
!5852 = !DILocation(line: 2554, column: 23, scope: !5850)
!5853 = !DILocation(line: 2554, column: 11, scope: !5820)
!5854 = !DILocation(line: 2560, column: 22, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5856, file: !245, line: 2560, column: 15)
!5856 = distinct !DILexicalBlock(scope: !5850, file: !245, line: 2555, column: 9)
!5857 = !DILocation(line: 2560, column: 32, scope: !5855)
!5858 = !DILocation(line: 2560, column: 49, scope: !5855)
!5859 = !DILocation(line: 2560, column: 48, scope: !5855)
!5860 = !DILocation(line: 2560, column: 46, scope: !5855)
!5861 = !DILocation(line: 2560, column: 15, scope: !5855)
!5862 = !DILocation(line: 2560, column: 70, scope: !5855)
!5863 = !DILocation(line: 2560, column: 15, scope: !5856)
!5864 = !DILocation(line: 2562, column: 25, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5855, file: !245, line: 2561, column: 13)
!5866 = !DILocation(line: 2562, column: 32, scope: !5865)
!5867 = !DILocation(line: 2563, column: 22, scope: !5865)
!5868 = !DILocation(line: 2562, column: 15, scope: !5865)
!5869 = !DILocation(line: 2564, column: 15, scope: !5865)
!5870 = !DILocation(line: 2571, column: 22, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5856, file: !245, line: 2571, column: 15)
!5872 = !DILocation(line: 2571, column: 15, scope: !5871)
!5873 = !DILocation(line: 2571, column: 41, scope: !5871)
!5874 = !DILocation(line: 2571, column: 15, scope: !5856)
!5875 = !DILocation(line: 2573, column: 25, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5871, file: !245, line: 2572, column: 13)
!5877 = !DILocation(line: 2573, column: 32, scope: !5876)
!5878 = !DILocation(line: 2573, column: 53, scope: !5876)
!5879 = !DILocation(line: 2573, column: 15, scope: !5876)
!5880 = !DILocation(line: 2574, column: 15, scope: !5876)
!5881 = !DILocation(line: 2576, column: 28, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5871, file: !245, line: 2576, column: 20)
!5883 = !DILocation(line: 2576, column: 36, scope: !5882)
!5884 = !DILocation(line: 2576, column: 47, scope: !5882)
!5885 = !DILocation(line: 2576, column: 20, scope: !5871)
!5886 = !DILocation(line: 2580, column: 33, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5882, file: !245, line: 2577, column: 13)
!5888 = !DILocation(line: 2580, column: 24, scope: !5887)
!5889 = !DILocation(line: 2581, column: 32, scope: !5887)
!5890 = !DILocation(line: 2583, column: 27, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5887, file: !245, line: 2583, column: 19)
!5892 = !DILocation(line: 2583, column: 37, scope: !5891)
!5893 = !DILocation(line: 2583, column: 46, scope: !5891)
!5894 = !DILocation(line: 2583, column: 19, scope: !5891)
!5895 = !DILocation(line: 2583, column: 57, scope: !5891)
!5896 = !DILocation(line: 2583, column: 19, scope: !5887)
!5897 = !DILocation(line: 2585, column: 29, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5891, file: !245, line: 2584, column: 17)
!5899 = !DILocation(line: 2585, column: 36, scope: !5898)
!5900 = !DILocation(line: 2586, column: 26, scope: !5898)
!5901 = !DILocation(line: 2585, column: 19, scope: !5898)
!5902 = !DILocation(line: 2587, column: 19, scope: !5898)
!5903 = !DILocation(line: 2589, column: 13, scope: !5887)
!5904 = !DILocation(line: 2595, column: 17, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5856, file: !245, line: 2595, column: 15)
!5906 = !DILocation(line: 2595, column: 16, scope: !5905)
!5907 = !DILocation(line: 2595, column: 15, scope: !5856)
!5908 = !DILocation(line: 2597, column: 32, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5905, file: !245, line: 2596, column: 13)
!5910 = !DILocation(line: 2597, column: 49, scope: !5909)
!5911 = !DILocation(line: 2597, column: 64, scope: !5909)
!5912 = !DILocation(line: 2597, column: 15, scope: !5909)
!5913 = !DILocation(line: 2598, column: 16, scope: !5909)
!5914 = !DILocation(line: 2598, column: 55, scope: !5909)
!5915 = !DILocation(line: 2599, column: 13, scope: !5909)
!5916 = !DILocation(line: 2601, column: 15, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5856, file: !245, line: 2601, column: 15)
!5918 = !DILocation(line: 2601, column: 18, scope: !5917)
!5919 = !DILocation(line: 2601, column: 15, scope: !5856)
!5920 = !DILocation(line: 2603, column: 19, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !245, line: 2603, column: 19)
!5922 = distinct !DILexicalBlock(scope: !5917, file: !245, line: 2602, column: 13)
!5923 = !DILocation(line: 2603, column: 22, scope: !5921)
!5924 = !DILocation(line: 2603, column: 19, scope: !5922)
!5925 = !DILocation(line: 2604, column: 25, scope: !5921)
!5926 = !DILocation(line: 2604, column: 54, scope: !5921)
!5927 = !DILocation(line: 2604, column: 17, scope: !5921)
!5928 = !DILocation(line: 2606, column: 31, scope: !5921)
!5929 = !DILocation(line: 2606, column: 41, scope: !5921)
!5930 = !DILocation(line: 2606, column: 17, scope: !5921)
!5931 = !DILocation(line: 2607, column: 13, scope: !5922)
!5932 = !DILocation(line: 2608, column: 9, scope: !5856)
!5933 = !DILocation(line: 2611, column: 31, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5850, file: !245, line: 2610, column: 9)
!5935 = !DILocation(line: 2616, column: 15, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5934, file: !245, line: 2616, column: 15)
!5937 = !DILocation(line: 2616, column: 18, scope: !5936)
!5938 = !DILocation(line: 2616, column: 39, scope: !5936)
!5939 = !DILocation(line: 2616, column: 42, scope: !5936)
!5940 = !DILocation(line: 2616, column: 45, scope: !5936)
!5941 = !DILocation(line: 2616, column: 15, scope: !5934)
!5942 = !DILocation(line: 2617, column: 42, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5936, file: !245, line: 2617, column: 17)
!5944 = !DILocation(line: 2617, column: 52, scope: !5943)
!5945 = !DILocation(line: 2617, column: 55, scope: !5943)
!5946 = !DILocation(line: 2618, column: 49, scope: !5943)
!5947 = !DILocation(line: 2617, column: 19, scope: !5943)
!5948 = !DILocation(line: 2617, column: 17, scope: !5936)
!5949 = !DILocation(line: 2620, column: 21, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !245, line: 2620, column: 21)
!5951 = distinct !DILexicalBlock(scope: !5943, file: !245, line: 2619, column: 15)
!5952 = !DILocation(line: 2620, column: 24, scope: !5950)
!5953 = !DILocation(line: 2620, column: 21, scope: !5951)
!5954 = !DILocation(line: 2621, column: 19, scope: !5950)
!5955 = !DILocation(line: 2622, column: 15, scope: !5951)
!5956 = !DILocation(line: 2618, column: 50, scope: !5943)
!5957 = !DILocation(line: 2626, column: 11, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5820, file: !245, line: 2626, column: 11)
!5959 = !DILocation(line: 2626, column: 14, scope: !5958)
!5960 = !DILocation(line: 2626, column: 30, scope: !5958)
!5961 = !DILocation(line: 2626, column: 33, scope: !5958)
!5962 = !DILocation(line: 2626, column: 40, scope: !5958)
!5963 = !DILocation(line: 2626, column: 43, scope: !5958)
!5964 = !DILocation(line: 2626, column: 51, scope: !5958)
!5965 = !DILocation(line: 2626, column: 68, scope: !5958)
!5966 = !DILocation(line: 2626, column: 58, scope: !5958)
!5967 = !DILocation(line: 2626, column: 11, scope: !5820)
!5968 = !DILocation(line: 2630, column: 9, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5958, file: !245, line: 2627, column: 9)
!5970 = !DILocation(line: 2637, column: 34, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5958, file: !245, line: 2632, column: 9)
!5972 = !DILocation(line: 2637, column: 44, scope: !5971)
!5973 = !DILocation(line: 2637, column: 54, scope: !5971)
!5974 = !DILocation(line: 2637, column: 72, scope: !5971)
!5975 = !DILocation(line: 2637, column: 77, scope: !5971)
!5976 = !DILocation(line: 2638, column: 34, scope: !5971)
!5977 = !DILocation(line: 2639, column: 34, scope: !5971)
!5978 = !DILocation(line: 2637, column: 24, scope: !5971)
!5979 = !DILocation(line: 2637, column: 22, scope: !5971)
!5980 = !DILocation(line: 2641, column: 5, scope: !5820)
!5981 = !DILocation(line: 2642, column: 12, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5817, file: !245, line: 2642, column: 12)
!5983 = !DILocation(line: 2642, column: 15, scope: !5982)
!5984 = !DILocation(line: 2642, column: 12, scope: !5817)
!5985 = !DILocation(line: 2644, column: 23, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5982, file: !245, line: 2643, column: 5)
!5987 = !DILocation(line: 2645, column: 12, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5986, file: !245, line: 2645, column: 11)
!5989 = !DILocation(line: 2645, column: 11, scope: !5988)
!5990 = !DILocation(line: 2645, column: 21, scope: !5988)
!5991 = !DILocation(line: 2645, column: 11, scope: !5986)
!5992 = !DILocalVariable(name: "dot_sb", scope: !5993, file: !245, line: 2648, type: !317)
!5993 = distinct !DILexicalBlock(scope: !5988, file: !245, line: 2646, column: 9)
!5994 = !DILocation(line: 2648, column: 23, scope: !5993)
!5995 = !DILocalVariable(name: "dst_parent_sb", scope: !5993, file: !245, line: 2649, type: !317)
!5996 = !DILocation(line: 2649, column: 23, scope: !5993)
!5997 = !DILocalVariable(name: "dst_parent", scope: !5993, file: !245, line: 2650, type: !9)
!5998 = !DILocation(line: 2650, column: 17, scope: !5993)
!5999 = !DILocalVariable(name: "in_current_dir", scope: !5993, file: !245, line: 2651, type: !120)
!6000 = !DILocation(line: 2651, column: 16, scope: !5993)
!6001 = !DILocation(line: 2653, column: 34, scope: !5993)
!6002 = !DILocation(line: 2653, column: 24, scope: !5993)
!6003 = !DILocation(line: 2653, column: 22, scope: !5993)
!6004 = !DILocation(line: 2655, column: 29, scope: !5993)
!6005 = !DILocation(line: 2659, column: 29, scope: !5993)
!6006 = !DILocation(line: 2659, column: 32, scope: !5993)
!6007 = !DILocation(line: 2659, column: 52, scope: !5993)
!6008 = !DILocation(line: 2660, column: 29, scope: !5993)
!6009 = !DILocation(line: 2660, column: 38, scope: !5993)
!6010 = !DILocation(line: 2660, column: 32, scope: !5993)
!6011 = !DILocation(line: 2660, column: 66, scope: !5993)
!6012 = !DILocation(line: 2661, column: 29, scope: !5993)
!6013 = !DILocation(line: 2661, column: 32, scope: !5993)
!6014 = !DILocation(line: 0, scope: !5993)
!6015 = !DILocation(line: 2655, column: 26, scope: !5993)
!6016 = !DILocation(line: 2662, column: 17, scope: !5993)
!6017 = !DILocation(line: 2662, column: 11, scope: !5993)
!6018 = !DILocation(line: 2664, column: 17, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !5993, file: !245, line: 2664, column: 15)
!6020 = !DILocation(line: 2664, column: 15, scope: !5993)
!6021 = !DILocation(line: 2667, column: 12, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6019, file: !245, line: 2665, column: 13)
!6023 = !DILocation(line: 2668, column: 22, scope: !6022)
!6024 = !DILocation(line: 2666, column: 15, scope: !6022)
!6025 = !DILocation(line: 2669, column: 15, scope: !6022)
!6026 = !DILocation(line: 2671, column: 9, scope: !5993)
!6027 = !DILocalVariable(name: "err", scope: !5986, file: !245, line: 2673, type: !7)
!6028 = !DILocation(line: 2673, column: 11, scope: !5986)
!6029 = !DILocation(line: 2673, column: 34, scope: !5986)
!6030 = !DILocation(line: 2673, column: 54, scope: !5986)
!6031 = !DILocation(line: 2674, column: 34, scope: !5986)
!6032 = !DILocation(line: 2674, column: 37, scope: !5986)
!6033 = !DILocation(line: 2673, column: 17, scope: !5986)
!6034 = !DILocation(line: 2675, column: 15, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !5986, file: !245, line: 2675, column: 11)
!6036 = !DILocation(line: 2675, column: 13, scope: !6035)
!6037 = !DILocation(line: 2675, column: 11, scope: !5986)
!6038 = !DILocation(line: 2677, column: 21, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !245, line: 2676, column: 9)
!6040 = !DILocation(line: 2677, column: 26, scope: !6039)
!6041 = !DILocation(line: 2678, column: 18, scope: !6039)
!6042 = !DILocation(line: 2678, column: 43, scope: !6039)
!6043 = !DILocation(line: 2677, column: 11, scope: !6039)
!6044 = !DILocation(line: 2679, column: 11, scope: !6039)
!6045 = !DILocation(line: 2681, column: 5, scope: !5986)
!6046 = !DILocation(line: 2696, column: 12, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !5982, file: !245, line: 2696, column: 12)
!6048 = !DILocation(line: 2696, column: 15, scope: !6047)
!6049 = !DILocation(line: 2696, column: 12, scope: !5982)
!6050 = !DILocalVariable(name: "replace", scope: !6051, file: !245, line: 2700, type: !120)
!6051 = distinct !DILexicalBlock(scope: !6047, file: !245, line: 2699, column: 5)
!6052 = !DILocation(line: 2700, column: 12, scope: !6051)
!6053 = !DILocation(line: 2700, column: 23, scope: !6051)
!6054 = !DILocation(line: 2700, column: 26, scope: !6051)
!6055 = !DILocation(line: 2701, column: 23, scope: !6051)
!6056 = !DILocation(line: 2701, column: 26, scope: !6051)
!6057 = !DILocation(line: 2701, column: 29, scope: !6051)
!6058 = !DILocation(line: 2701, column: 41, scope: !6051)
!6059 = !DILocation(line: 2702, column: 31, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6051, file: !245, line: 2702, column: 11)
!6061 = !DILocation(line: 2702, column: 41, scope: !6060)
!6062 = !DILocation(line: 2702, column: 51, scope: !6060)
!6063 = !DILocation(line: 2702, column: 67, scope: !6060)
!6064 = !DILocation(line: 2702, column: 13, scope: !6060)
!6065 = !DILocation(line: 2702, column: 11, scope: !6051)
!6066 = !DILocation(line: 2703, column: 9, scope: !6060)
!6067 = !DILocation(line: 2704, column: 5, scope: !6051)
!6068 = !DILocation(line: 2705, column: 12, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6047, file: !245, line: 2705, column: 12)
!6070 = !DILocation(line: 2706, column: 12, scope: !6069)
!6071 = !DILocation(line: 2706, column: 16, scope: !6069)
!6072 = !DILocation(line: 2706, column: 19, scope: !6069)
!6073 = !DILocation(line: 2706, column: 35, scope: !6069)
!6074 = !DILocation(line: 2706, column: 39, scope: !6069)
!6075 = !DILocation(line: 2705, column: 12, scope: !6047)
!6076 = !DILocation(line: 2708, column: 25, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6069, file: !245, line: 2707, column: 5)
!6078 = !DILocation(line: 2718, column: 23, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6077, file: !245, line: 2718, column: 11)
!6080 = !DILocation(line: 2718, column: 33, scope: !6079)
!6081 = !DILocation(line: 2718, column: 43, scope: !6079)
!6082 = !DILocation(line: 2718, column: 46, scope: !6079)
!6083 = !DILocation(line: 2718, column: 60, scope: !6079)
!6084 = !DILocation(line: 2719, column: 23, scope: !6079)
!6085 = !DILocation(line: 2718, column: 13, scope: !6079)
!6086 = !DILocation(line: 2718, column: 11, scope: !6077)
!6087 = !DILocation(line: 2720, column: 9, scope: !6079)
!6088 = !DILocation(line: 2721, column: 5, scope: !6077)
!6089 = !DILocation(line: 2722, column: 12, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6069, file: !245, line: 2722, column: 12)
!6091 = !DILocation(line: 2722, column: 12, scope: !6069)
!6092 = !DILocation(line: 2728, column: 18, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !245, line: 2728, column: 11)
!6094 = distinct !DILexicalBlock(scope: !6090, file: !245, line: 2723, column: 5)
!6095 = !DILocation(line: 2728, column: 28, scope: !6093)
!6096 = !DILocation(line: 2728, column: 40, scope: !6093)
!6097 = !DILocation(line: 2728, column: 39, scope: !6093)
!6098 = !DILocation(line: 2728, column: 37, scope: !6093)
!6099 = !DILocation(line: 2728, column: 11, scope: !6093)
!6100 = !DILocation(line: 2728, column: 64, scope: !6093)
!6101 = !DILocation(line: 2728, column: 11, scope: !6094)
!6102 = !DILocation(line: 2729, column: 21, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6093, file: !245, line: 2729, column: 13)
!6104 = !DILocation(line: 2729, column: 31, scope: !6103)
!6105 = !DILocation(line: 2729, column: 40, scope: !6103)
!6106 = !DILocation(line: 2729, column: 54, scope: !6103)
!6107 = !DILocation(line: 2729, column: 53, scope: !6103)
!6108 = !DILocation(line: 2729, column: 51, scope: !6103)
!6109 = !DILocation(line: 2729, column: 13, scope: !6103)
!6110 = !DILocation(line: 2729, column: 75, scope: !6103)
!6111 = !DILocation(line: 2729, column: 13, scope: !6093)
!6112 = !DILocation(line: 2731, column: 23, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6103, file: !245, line: 2730, column: 11)
!6114 = !DILocation(line: 2731, column: 30, scope: !6113)
!6115 = !DILocation(line: 2731, column: 58, scope: !6113)
!6116 = !DILocation(line: 2731, column: 13, scope: !6113)
!6117 = !DILocation(line: 2732, column: 13, scope: !6113)
!6118 = !DILocation(line: 2729, column: 78, scope: !6103)
!6119 = !DILocation(line: 2734, column: 5, scope: !6094)
!6120 = !DILocation(line: 2735, column: 12, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6090, file: !245, line: 2735, column: 12)
!6122 = !DILocation(line: 2735, column: 31, scope: !6121)
!6123 = !DILocation(line: 2735, column: 34, scope: !6121)
!6124 = !DILocation(line: 2735, column: 53, scope: !6121)
!6125 = !DILocation(line: 2735, column: 56, scope: !6121)
!6126 = !DILocation(line: 2735, column: 12, scope: !6090)
!6127 = !DILocation(line: 2737, column: 18, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !245, line: 2737, column: 11)
!6129 = distinct !DILexicalBlock(scope: !6121, file: !245, line: 2736, column: 5)
!6130 = !DILocation(line: 2737, column: 28, scope: !6128)
!6131 = !DILocation(line: 2737, column: 40, scope: !6128)
!6132 = !DILocation(line: 2737, column: 39, scope: !6128)
!6133 = !DILocation(line: 2737, column: 37, scope: !6128)
!6134 = !DILocation(line: 2737, column: 68, scope: !6128)
!6135 = !{!3182, !3183, i64 40}
!6136 = !DILocation(line: 2737, column: 11, scope: !6128)
!6137 = !DILocation(line: 2738, column: 11, scope: !6128)
!6138 = !DILocation(line: 2737, column: 11, scope: !6129)
!6139 = !DILocation(line: 2740, column: 21, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6128, file: !245, line: 2739, column: 9)
!6141 = !DILocation(line: 2740, column: 28, scope: !6140)
!6142 = !DILocation(line: 2741, column: 18, scope: !6140)
!6143 = !DILocation(line: 2740, column: 11, scope: !6140)
!6144 = !DILocation(line: 2742, column: 11, scope: !6140)
!6145 = !DILocation(line: 2744, column: 5, scope: !6129)
!6146 = !DILocation(line: 2745, column: 12, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6121, file: !245, line: 2745, column: 12)
!6148 = !DILocation(line: 2745, column: 12, scope: !6121)
!6149 = !DILocalVariable(name: "src_link_val", scope: !6150, file: !245, line: 2747, type: !9)
!6150 = distinct !DILexicalBlock(scope: !6147, file: !245, line: 2746, column: 5)
!6151 = !DILocation(line: 2747, column: 13, scope: !6150)
!6152 = !DILocation(line: 2747, column: 49, scope: !6150)
!6153 = !DILocation(line: 2747, column: 66, scope: !6150)
!6154 = !DILocation(line: 2747, column: 28, scope: !6150)
!6155 = !DILocation(line: 2748, column: 23, scope: !6150)
!6156 = !DILocation(line: 2749, column: 11, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6150, file: !245, line: 2749, column: 11)
!6158 = !DILocation(line: 2749, column: 24, scope: !6157)
!6159 = !DILocation(line: 2749, column: 11, scope: !6150)
!6160 = !DILocation(line: 2751, column: 21, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6157, file: !245, line: 2750, column: 9)
!6162 = !DILocation(line: 2751, column: 28, scope: !6161)
!6163 = !DILocation(line: 2752, column: 18, scope: !6161)
!6164 = !DILocation(line: 2751, column: 11, scope: !6161)
!6165 = !DILocation(line: 2753, column: 11, scope: !6161)
!6166 = !DILocalVariable(name: "symlink_err", scope: !6150, file: !245, line: 2756, type: !7)
!6167 = !DILocation(line: 2756, column: 11, scope: !6150)
!6168 = !DILocation(line: 2756, column: 42, scope: !6150)
!6169 = !DILocation(line: 2756, column: 66, scope: !6150)
!6170 = !DILocation(line: 2757, column: 42, scope: !6150)
!6171 = !DILocation(line: 2757, column: 45, scope: !6150)
!6172 = !DILocation(line: 2756, column: 25, scope: !6150)
!6173 = !DILocation(line: 2758, column: 15, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6150, file: !245, line: 2758, column: 11)
!6175 = !DILocation(line: 2758, column: 13, scope: !6174)
!6176 = !DILocation(line: 2758, column: 27, scope: !6174)
!6177 = !DILocation(line: 2758, column: 30, scope: !6174)
!6178 = !DILocation(line: 2758, column: 33, scope: !6174)
!6179 = !DILocation(line: 2758, column: 40, scope: !6174)
!6180 = !DILocation(line: 2758, column: 44, scope: !6174)
!6181 = !DILocation(line: 2758, column: 52, scope: !6174)
!6182 = !DILocation(line: 2758, column: 55, scope: !6174)
!6183 = !DILocation(line: 2759, column: 11, scope: !6174)
!6184 = !DILocation(line: 2759, column: 21, scope: !6174)
!6185 = !DILocation(line: 2759, column: 40, scope: !6174)
!6186 = !DILocation(line: 2759, column: 32, scope: !6174)
!6187 = !DILocation(line: 2759, column: 29, scope: !6174)
!6188 = !DILocation(line: 2758, column: 11, scope: !6150)
!6189 = !DILocalVariable(name: "dest_link_val", scope: !6190, file: !245, line: 2765, type: !9)
!6190 = distinct !DILexicalBlock(scope: !6174, file: !245, line: 2760, column: 9)
!6191 = !DILocation(line: 2765, column: 17, scope: !6190)
!6192 = !DILocation(line: 2766, column: 34, scope: !6190)
!6193 = !DILocation(line: 2766, column: 51, scope: !6190)
!6194 = !DILocation(line: 2766, column: 13, scope: !6190)
!6195 = !DILocation(line: 2767, column: 15, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6190, file: !245, line: 2767, column: 15)
!6197 = !DILocation(line: 2767, column: 15, scope: !6190)
!6198 = !DILocation(line: 2769, column: 19, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !245, line: 2769, column: 19)
!6200 = distinct !DILexicalBlock(scope: !6196, file: !245, line: 2768, column: 13)
!6201 = !DILocation(line: 2769, column: 19, scope: !6200)
!6202 = !DILocation(line: 2770, column: 29, scope: !6199)
!6203 = !DILocation(line: 2770, column: 17, scope: !6199)
!6204 = !DILocation(line: 2771, column: 21, scope: !6200)
!6205 = !DILocation(line: 2771, column: 15, scope: !6200)
!6206 = !DILocation(line: 2772, column: 13, scope: !6200)
!6207 = !DILocation(line: 2773, column: 9, scope: !6190)
!6208 = !DILocation(line: 2774, column: 13, scope: !6150)
!6209 = !DILocation(line: 2774, column: 7, scope: !6150)
!6210 = !DILocation(line: 2775, column: 15, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6150, file: !245, line: 2775, column: 11)
!6212 = !DILocation(line: 2775, column: 13, scope: !6211)
!6213 = !DILocation(line: 2775, column: 11, scope: !6150)
!6214 = !DILocation(line: 2777, column: 21, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !245, line: 2776, column: 9)
!6216 = !DILocation(line: 2777, column: 34, scope: !6215)
!6217 = !DILocation(line: 2778, column: 18, scope: !6215)
!6218 = !DILocation(line: 2777, column: 11, scope: !6215)
!6219 = !DILocation(line: 2779, column: 11, scope: !6215)
!6220 = !DILocation(line: 2782, column: 11, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6150, file: !245, line: 2782, column: 11)
!6222 = !DILocation(line: 2782, column: 14, scope: !6221)
!6223 = !DILocation(line: 2782, column: 11, scope: !6150)
!6224 = !DILocation(line: 2783, column: 9, scope: !6221)
!6225 = !DILocation(line: 2785, column: 11, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6150, file: !245, line: 2785, column: 11)
!6227 = !DILocation(line: 2785, column: 14, scope: !6226)
!6228 = !DILocation(line: 2785, column: 11, scope: !6150)
!6229 = !DILocation(line: 2790, column: 26, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !245, line: 2789, column: 15)
!6231 = distinct !DILexicalBlock(scope: !6226, file: !245, line: 2786, column: 9)
!6232 = !DILocation(line: 2790, column: 43, scope: !6230)
!6233 = !{!3182, !2986, i64 28}
!6234 = !DILocation(line: 2790, column: 58, scope: !6230)
!6235 = !{!3182, !2986, i64 32}
!6236 = !DILocation(line: 2790, column: 18, scope: !6230)
!6237 = !DILocation(line: 2790, column: 66, scope: !6230)
!6238 = !DILocation(line: 2791, column: 15, scope: !6230)
!6239 = !DILocation(line: 2791, column: 38, scope: !6230)
!6240 = !DILocation(line: 2791, column: 20, scope: !6230)
!6241 = !DILocation(line: 2789, column: 15, scope: !6231)
!6242 = !DILocation(line: 2793, column: 25, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6230, file: !245, line: 2792, column: 13)
!6244 = !DILocation(line: 2793, column: 32, scope: !6243)
!6245 = !DILocation(line: 2794, column: 22, scope: !6243)
!6246 = !DILocation(line: 2793, column: 15, scope: !6243)
!6247 = !DILocation(line: 2795, column: 19, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6243, file: !245, line: 2795, column: 19)
!6249 = !DILocation(line: 2795, column: 22, scope: !6248)
!6250 = !DILocation(line: 2795, column: 19, scope: !6243)
!6251 = !DILocation(line: 2796, column: 17, scope: !6248)
!6252 = !DILocation(line: 2797, column: 13, scope: !6243)
!6253 = !DILocation(line: 2805, column: 9, scope: !6231)
!6254 = !DILocation(line: 2806, column: 5, scope: !6150)
!6255 = !DILocation(line: 2809, column: 20, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6147, file: !245, line: 2808, column: 5)
!6257 = !DILocation(line: 2809, column: 51, scope: !6256)
!6258 = !DILocation(line: 2809, column: 7, scope: !6256)
!6259 = !DILocation(line: 2810, column: 7, scope: !6256)
!6260 = !DILocation(line: 2815, column: 8, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2815, column: 7)
!6262 = !DILocation(line: 2815, column: 16, scope: !6261)
!6263 = !DILocation(line: 2815, column: 20, scope: !6261)
!6264 = !DILocation(line: 2815, column: 23, scope: !6261)
!6265 = !DILocation(line: 2815, column: 39, scope: !6261)
!6266 = !DILocation(line: 2815, column: 43, scope: !6261)
!6267 = !DILocation(line: 2816, column: 7, scope: !6261)
!6268 = !DILocation(line: 2816, column: 11, scope: !6261)
!6269 = !DILocation(line: 2816, column: 14, scope: !6261)
!6270 = !DILocation(line: 2816, column: 35, scope: !6261)
!6271 = !DILocation(line: 2816, column: 38, scope: !6261)
!6272 = !DILocation(line: 2816, column: 41, scope: !6261)
!6273 = !DILocation(line: 2815, column: 7, scope: !4895)
!6274 = !DILocation(line: 2818, column: 36, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !245, line: 2818, column: 11)
!6276 = distinct !DILexicalBlock(scope: !6261, file: !245, line: 2817, column: 5)
!6277 = !DILocation(line: 2818, column: 46, scope: !6275)
!6278 = !DILocation(line: 2818, column: 49, scope: !6275)
!6279 = !DILocation(line: 2819, column: 43, scope: !6275)
!6280 = !DILocation(line: 2818, column: 13, scope: !6275)
!6281 = !DILocation(line: 2818, column: 11, scope: !6276)
!6282 = !DILocation(line: 2821, column: 16, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !245, line: 2821, column: 16)
!6284 = distinct !DILexicalBlock(scope: !6275, file: !245, line: 2820, column: 9)
!6285 = !DILocation(line: 2821, column: 19, scope: !6283)
!6286 = !DILocation(line: 2821, column: 16, scope: !6284)
!6287 = !DILocation(line: 2822, column: 14, scope: !6283)
!6288 = !DILocation(line: 2823, column: 9, scope: !6284)
!6289 = !DILocation(line: 2824, column: 5, scope: !6276)
!6290 = !DILocation(line: 2826, column: 7, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2826, column: 7)
!6292 = !DILocation(line: 2826, column: 24, scope: !6291)
!6293 = !DILocation(line: 2826, column: 27, scope: !6291)
!6294 = !DILocation(line: 2826, column: 30, scope: !6291)
!6295 = !DILocation(line: 2826, column: 7, scope: !4895)
!6296 = !DILocalVariable(name: "sb", scope: !6297, file: !245, line: 2830, type: !317)
!6297 = distinct !DILexicalBlock(scope: !6291, file: !245, line: 2827, column: 5)
!6298 = !DILocation(line: 2830, column: 19, scope: !6297)
!6299 = !DILocation(line: 2831, column: 18, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6297, file: !245, line: 2831, column: 11)
!6301 = !DILocation(line: 2831, column: 11, scope: !6300)
!6302 = !DILocation(line: 2831, column: 33, scope: !6300)
!6303 = !DILocation(line: 2831, column: 11, scope: !6297)
!6304 = !DILocation(line: 2832, column: 22, scope: !6300)
!6305 = !DILocation(line: 2832, column: 25, scope: !6300)
!6306 = !DILocation(line: 2832, column: 36, scope: !6300)
!6307 = !DILocation(line: 2832, column: 9, scope: !6300)
!6308 = !DILocation(line: 2833, column: 5, scope: !6297)
!6309 = !DILocation(line: 2837, column: 7, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2837, column: 7)
!6311 = !DILocation(line: 2837, column: 10, scope: !6310)
!6312 = !DILocation(line: 2837, column: 20, scope: !6310)
!6313 = !DILocation(line: 2837, column: 25, scope: !6310)
!6314 = !DILocation(line: 2837, column: 7, scope: !4895)
!6315 = !DILocation(line: 2840, column: 12, scope: !6310)
!6316 = !DILocation(line: 2840, column: 5, scope: !6310)
!6317 = !DILocation(line: 2842, column: 7, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2842, column: 7)
!6319 = !DILocation(line: 2842, column: 7, scope: !4895)
!6320 = !DILocation(line: 2843, column: 12, scope: !6318)
!6321 = !DILocation(line: 2843, column: 5, scope: !6318)
!6322 = !DILocation(line: 2857, column: 7, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2857, column: 7)
!6324 = !DILocation(line: 2857, column: 10, scope: !6323)
!6325 = !DILocation(line: 2857, column: 7, scope: !4895)
!6326 = !DILocalVariable(name: "timespec", scope: !6327, file: !245, line: 2859, type: !357)
!6327 = distinct !DILexicalBlock(scope: !6323, file: !245, line: 2858, column: 5)
!6328 = !DILocation(line: 2859, column: 23, scope: !6327)
!6329 = !DILocation(line: 2860, column: 7, scope: !6327)
!6330 = !DILocation(line: 2860, column: 21, scope: !6327)
!6331 = !{i64 0, i64 8, !3851, i64 8, i64 8, !3851}
!6332 = !DILocation(line: 2861, column: 7, scope: !6327)
!6333 = !DILocation(line: 2861, column: 21, scope: !6327)
!6334 = !DILocation(line: 2863, column: 12, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6327, file: !245, line: 2863, column: 11)
!6336 = !DILocation(line: 2864, column: 31, scope: !6335)
!6337 = !DILocation(line: 2864, column: 41, scope: !6335)
!6338 = !DILocation(line: 2864, column: 14, scope: !6335)
!6339 = !DILocation(line: 2865, column: 23, scope: !6335)
!6340 = !DILocation(line: 2865, column: 33, scope: !6335)
!6341 = !DILocation(line: 2865, column: 14, scope: !6335)
!6342 = !DILocation(line: 2866, column: 11, scope: !6335)
!6343 = !DILocation(line: 2863, column: 11, scope: !6327)
!6344 = !DILocation(line: 2868, column: 21, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6335, file: !245, line: 2867, column: 9)
!6346 = !DILocation(line: 2868, column: 28, scope: !6345)
!6347 = !DILocation(line: 2868, column: 58, scope: !6345)
!6348 = !DILocation(line: 2868, column: 11, scope: !6345)
!6349 = !DILocation(line: 2869, column: 15, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6345, file: !245, line: 2869, column: 15)
!6351 = !DILocation(line: 2869, column: 18, scope: !6350)
!6352 = !DILocation(line: 2869, column: 15, scope: !6345)
!6353 = !DILocation(line: 2870, column: 13, scope: !6350)
!6354 = !DILocation(line: 2871, column: 9, scope: !6345)
!6355 = !DILocation(line: 2872, column: 5, scope: !6327)
!6356 = !DILocation(line: 2875, column: 8, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2875, column: 7)
!6358 = !DILocation(line: 2875, column: 24, scope: !6357)
!6359 = !DILocation(line: 2875, column: 27, scope: !6357)
!6360 = !DILocation(line: 2875, column: 30, scope: !6357)
!6361 = !DILocation(line: 2876, column: 7, scope: !6357)
!6362 = !DILocation(line: 2876, column: 11, scope: !6357)
!6363 = !DILocation(line: 2876, column: 19, scope: !6357)
!6364 = !DILocation(line: 2876, column: 23, scope: !6357)
!6365 = !DILocation(line: 2875, column: 7, scope: !4895)
!6366 = !DILocation(line: 2878, column: 26, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6357, file: !245, line: 2877, column: 5)
!6368 = !DILocation(line: 2878, column: 29, scope: !6367)
!6369 = !DILocation(line: 2878, column: 52, scope: !6367)
!6370 = !DILocation(line: 2878, column: 15, scope: !6367)
!6371 = !DILocation(line: 2878, column: 7, scope: !6367)
!6372 = !DILocation(line: 2881, column: 11, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6367, file: !245, line: 2879, column: 9)
!6374 = !DILocation(line: 2884, column: 20, scope: !6373)
!6375 = !DILocation(line: 2885, column: 11, scope: !6373)
!6376 = !DILocation(line: 2887, column: 5, scope: !6367)
!6377 = !DILocation(line: 2890, column: 7, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2890, column: 7)
!6379 = !DILocation(line: 2890, column: 10, scope: !6378)
!6380 = !DILocation(line: 2890, column: 25, scope: !6378)
!6381 = !DILocation(line: 2890, column: 41, scope: !6378)
!6382 = !DILocation(line: 2890, column: 55, scope: !6378)
!6383 = !DILocation(line: 2890, column: 69, scope: !6378)
!6384 = !DILocation(line: 2890, column: 30, scope: !6378)
!6385 = !DILocation(line: 2891, column: 7, scope: !6378)
!6386 = !DILocation(line: 2891, column: 10, scope: !6378)
!6387 = !DILocation(line: 2891, column: 13, scope: !6378)
!6388 = !DILocation(line: 2890, column: 7, scope: !4895)
!6389 = !DILocation(line: 2892, column: 5, scope: !6378)
!6390 = !DILocation(line: 2895, column: 7, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2895, column: 7)
!6392 = !DILocation(line: 2895, column: 7, scope: !4895)
!6393 = !DILocation(line: 2896, column: 12, scope: !6391)
!6394 = !DILocation(line: 2896, column: 5, scope: !6391)
!6395 = !DILocation(line: 2898, column: 15, scope: !4895)
!6396 = !DILocation(line: 2898, column: 3, scope: !4895)
!6397 = !DILocation(line: 2900, column: 7, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2900, column: 7)
!6399 = !DILocation(line: 2900, column: 10, scope: !6398)
!6400 = !DILocation(line: 2900, column: 24, scope: !6398)
!6401 = !DILocation(line: 2900, column: 27, scope: !6398)
!6402 = !DILocation(line: 2900, column: 30, scope: !6398)
!6403 = !DILocation(line: 2900, column: 7, scope: !4895)
!6404 = !DILocation(line: 2902, column: 21, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6406, file: !245, line: 2902, column: 11)
!6406 = distinct !DILexicalBlock(scope: !6398, file: !245, line: 2901, column: 5)
!6407 = !DILocation(line: 2902, column: 35, scope: !6405)
!6408 = !DILocation(line: 2902, column: 49, scope: !6405)
!6409 = !DILocation(line: 2902, column: 11, scope: !6405)
!6410 = !DILocation(line: 2902, column: 59, scope: !6405)
!6411 = !DILocation(line: 2903, column: 11, scope: !6405)
!6412 = !DILocation(line: 2903, column: 14, scope: !6405)
!6413 = !DILocation(line: 2903, column: 17, scope: !6405)
!6414 = !DILocation(line: 2902, column: 11, scope: !6406)
!6415 = !DILocation(line: 2904, column: 9, scope: !6405)
!6416 = !DILocation(line: 2905, column: 5, scope: !6406)
!6417 = !DILocation(line: 2906, column: 12, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6398, file: !245, line: 2906, column: 12)
!6419 = !DILocation(line: 2906, column: 15, scope: !6418)
!6420 = !DILocation(line: 2906, column: 12, scope: !6398)
!6421 = !DILocation(line: 2908, column: 20, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6423, file: !245, line: 2908, column: 11)
!6423 = distinct !DILexicalBlock(scope: !6418, file: !245, line: 2907, column: 5)
!6424 = !DILocation(line: 2908, column: 34, scope: !6422)
!6425 = !DILocation(line: 2908, column: 37, scope: !6422)
!6426 = !DILocation(line: 2908, column: 11, scope: !6422)
!6427 = !DILocation(line: 2908, column: 43, scope: !6422)
!6428 = !DILocation(line: 2908, column: 11, scope: !6423)
!6429 = !DILocation(line: 2909, column: 9, scope: !6422)
!6430 = !DILocation(line: 2910, column: 5, scope: !6423)
!6431 = !DILocation(line: 2911, column: 12, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6418, file: !245, line: 2911, column: 12)
!6433 = !DILocation(line: 2911, column: 15, scope: !6432)
!6434 = !DILocation(line: 2911, column: 41, scope: !6432)
!6435 = !DILocation(line: 2911, column: 44, scope: !6432)
!6436 = !DILocation(line: 2911, column: 12, scope: !6418)
!6437 = !DILocalVariable(name: "default_permissions", scope: !6438, file: !245, line: 2913, type: !7)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !245, line: 2912, column: 5)
!6439 = !DILocation(line: 2913, column: 11, scope: !6438)
!6440 = !DILocation(line: 2913, column: 33, scope: !6438)
!6441 = !DILocation(line: 2913, column: 52, scope: !6438)
!6442 = !DILocation(line: 2913, column: 55, scope: !6438)
!6443 = !DILocation(line: 2915, column: 20, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6438, file: !245, line: 2915, column: 11)
!6445 = !DILocation(line: 2915, column: 34, scope: !6444)
!6446 = !DILocation(line: 2915, column: 57, scope: !6444)
!6447 = !DILocation(line: 2915, column: 56, scope: !6444)
!6448 = !DILocation(line: 2915, column: 54, scope: !6444)
!6449 = !DILocation(line: 2915, column: 11, scope: !6444)
!6450 = !DILocation(line: 2915, column: 74, scope: !6444)
!6451 = !DILocation(line: 2915, column: 11, scope: !6438)
!6452 = !DILocation(line: 2916, column: 9, scope: !6444)
!6453 = !DILocation(line: 2917, column: 5, scope: !6438)
!6454 = !DILocation(line: 2920, column: 11, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !245, line: 2920, column: 11)
!6456 = distinct !DILexicalBlock(scope: !6432, file: !245, line: 2919, column: 5)
!6457 = !DILocation(line: 2920, column: 11, scope: !6456)
!6458 = !DILocation(line: 2922, column: 36, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6455, file: !245, line: 2921, column: 9)
!6460 = !DILocation(line: 2922, column: 34, scope: !6459)
!6461 = !DILocation(line: 2922, column: 31, scope: !6459)
!6462 = !DILocation(line: 2924, column: 15, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6459, file: !245, line: 2924, column: 15)
!6464 = !DILocation(line: 2924, column: 35, scope: !6463)
!6465 = !DILocation(line: 2924, column: 39, scope: !6463)
!6466 = !DILocation(line: 2924, column: 15, scope: !6459)
!6467 = !DILocation(line: 2932, column: 19, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6469, file: !245, line: 2932, column: 19)
!6469 = distinct !DILexicalBlock(scope: !6463, file: !245, line: 2925, column: 13)
!6470 = !DILocation(line: 2932, column: 27, scope: !6468)
!6471 = !DILocation(line: 2932, column: 37, scope: !6468)
!6472 = !DILocation(line: 2932, column: 30, scope: !6468)
!6473 = !DILocation(line: 2932, column: 56, scope: !6468)
!6474 = !DILocation(line: 2932, column: 19, scope: !6469)
!6475 = !DILocation(line: 2934, column: 29, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6468, file: !245, line: 2933, column: 17)
!6477 = !DILocation(line: 2934, column: 36, scope: !6476)
!6478 = !DILocation(line: 2934, column: 57, scope: !6476)
!6479 = !DILocation(line: 2934, column: 19, scope: !6476)
!6480 = !DILocation(line: 2935, column: 19, scope: !6476)
!6481 = !DILocation(line: 2937, column: 33, scope: !6469)
!6482 = !DILocation(line: 2937, column: 24, scope: !6469)
!6483 = !DILocation(line: 2938, column: 19, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6469, file: !245, line: 2938, column: 19)
!6485 = !DILocation(line: 2938, column: 42, scope: !6484)
!6486 = !DILocation(line: 2938, column: 41, scope: !6484)
!6487 = !DILocation(line: 2938, column: 39, scope: !6484)
!6488 = !DILocation(line: 2938, column: 19, scope: !6469)
!6489 = !DILocation(line: 2939, column: 34, scope: !6484)
!6490 = !DILocation(line: 2939, column: 17, scope: !6484)
!6491 = !DILocation(line: 2940, column: 13, scope: !6469)
!6492 = !DILocation(line: 2941, column: 9, scope: !6459)
!6493 = !DILocation(line: 2943, column: 11, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6456, file: !245, line: 2943, column: 11)
!6495 = !DILocation(line: 2943, column: 11, scope: !6456)
!6496 = !DILocation(line: 2945, column: 23, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6498, file: !245, line: 2945, column: 15)
!6498 = distinct !DILexicalBlock(scope: !6494, file: !245, line: 2944, column: 9)
!6499 = !DILocation(line: 2945, column: 33, scope: !6497)
!6500 = !DILocation(line: 2945, column: 44, scope: !6497)
!6501 = !DILocation(line: 2945, column: 42, scope: !6497)
!6502 = !DILocation(line: 2945, column: 15, scope: !6497)
!6503 = !DILocation(line: 2945, column: 65, scope: !6497)
!6504 = !DILocation(line: 2945, column: 15, scope: !6498)
!6505 = !DILocation(line: 2947, column: 25, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6497, file: !245, line: 2946, column: 13)
!6507 = !DILocation(line: 2947, column: 32, scope: !6506)
!6508 = !DILocation(line: 2948, column: 22, scope: !6506)
!6509 = !DILocation(line: 2947, column: 15, scope: !6506)
!6510 = !DILocation(line: 2949, column: 19, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6506, file: !245, line: 2949, column: 19)
!6512 = !DILocation(line: 2949, column: 22, scope: !6511)
!6513 = !DILocation(line: 2949, column: 19, scope: !6506)
!6514 = !DILocation(line: 2950, column: 17, scope: !6511)
!6515 = !DILocation(line: 2951, column: 13, scope: !6506)
!6516 = !DILocation(line: 2952, column: 9, scope: !6498)
!6517 = !DILocation(line: 2955, column: 10, scope: !4895)
!6518 = !DILocation(line: 2955, column: 3, scope: !4895)
!6519 = !DILabel(scope: !4895, name: "un_backup", file: !245, line: 2957)
!6520 = !DILocation(line: 2957, column: 1, scope: !4895)
!6521 = !DILocation(line: 2959, column: 7, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2959, column: 7)
!6523 = !DILocation(line: 2959, column: 10, scope: !6522)
!6524 = !DILocation(line: 2959, column: 7, scope: !4895)
!6525 = !DILocation(line: 2960, column: 5, scope: !6522)
!6526 = !DILocation(line: 2968, column: 7, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2968, column: 7)
!6528 = !DILocation(line: 2968, column: 20, scope: !6527)
!6529 = !DILocation(line: 2968, column: 7, scope: !4895)
!6530 = !DILocation(line: 2969, column: 28, scope: !6527)
!6531 = !DILocation(line: 2969, column: 43, scope: !6527)
!6532 = !DILocation(line: 2969, column: 5, scope: !6527)
!6533 = !DILocation(line: 2971, column: 7, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !4895, file: !245, line: 2971, column: 7)
!6535 = !DILocation(line: 2971, column: 7, scope: !4895)
!6536 = !DILocation(line: 2973, column: 19, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !245, line: 2973, column: 11)
!6538 = distinct !DILexicalBlock(scope: !6534, file: !245, line: 2972, column: 5)
!6539 = !DILocation(line: 2973, column: 31, scope: !6537)
!6540 = !DILocation(line: 2973, column: 11, scope: !6537)
!6541 = !DILocation(line: 2973, column: 41, scope: !6537)
!6542 = !DILocation(line: 2973, column: 11, scope: !6538)
!6543 = !DILocation(line: 2974, column: 19, scope: !6537)
!6544 = !DILocation(line: 2974, column: 26, scope: !6537)
!6545 = !DILocation(line: 2974, column: 52, scope: !6537)
!6546 = !DILocation(line: 2974, column: 9, scope: !6537)
!6547 = !DILocation(line: 2977, column: 15, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !245, line: 2977, column: 15)
!6549 = distinct !DILexicalBlock(scope: !6537, file: !245, line: 2976, column: 9)
!6550 = !DILocation(line: 2977, column: 18, scope: !6548)
!6551 = !DILocation(line: 2977, column: 15, scope: !6549)
!6552 = !DILocation(line: 2978, column: 21, scope: !6548)
!6553 = !DILocation(line: 2979, column: 21, scope: !6548)
!6554 = !DILocation(line: 2979, column: 48, scope: !6548)
!6555 = !DILocation(line: 2978, column: 13, scope: !6548)
!6556 = !DILocation(line: 2981, column: 5, scope: !6538)
!6557 = !DILocation(line: 2982, column: 3, scope: !4895)
!6558 = !DILocation(line: 2983, column: 1, scope: !4895)
!6559 = distinct !DISubprogram(name: "follow_fstatat", scope: !245, file: !245, line: 158, type: !358, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6560 = !DILocalVariable(name: "dirfd", arg: 1, scope: !6559, file: !245, line: 158, type: !7)
!6561 = !DILocation(line: 158, column: 21, scope: !6559)
!6562 = !DILocalVariable(name: "filename", arg: 2, scope: !6559, file: !245, line: 158, type: !115)
!6563 = !DILocation(line: 158, column: 40, scope: !6559)
!6564 = !DILocalVariable(name: "st", arg: 3, scope: !6559, file: !245, line: 158, type: !356)
!6565 = !DILocation(line: 158, column: 63, scope: !6559)
!6566 = !DILocalVariable(name: "flags", arg: 4, scope: !6559, file: !245, line: 158, type: !7)
!6567 = !DILocation(line: 158, column: 71, scope: !6559)
!6568 = !DILocalVariable(name: "result", scope: !6559, file: !245, line: 160, type: !7)
!6569 = !DILocation(line: 160, column: 7, scope: !6559)
!6570 = !DILocation(line: 160, column: 25, scope: !6559)
!6571 = !DILocation(line: 160, column: 32, scope: !6559)
!6572 = !DILocation(line: 160, column: 42, scope: !6559)
!6573 = !DILocation(line: 160, column: 46, scope: !6559)
!6574 = !DILocation(line: 160, column: 16, scope: !6559)
!6575 = !DILocation(line: 183, column: 10, scope: !6559)
!6576 = !DILocation(line: 183, column: 3, scope: !6559)
!6577 = distinct !DISubprogram(name: "should_dereference", scope: !245, file: !245, line: 1840, type: !360, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6578 = !DILocalVariable(name: "x", arg: 1, scope: !6577, file: !245, line: 1840, type: !252)
!6579 = !DILocation(line: 1840, column: 46, scope: !6577)
!6580 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !6577, file: !245, line: 1840, type: !120)
!6581 = !DILocation(line: 1840, column: 54, scope: !6577)
!6582 = !DILocation(line: 1842, column: 10, scope: !6577)
!6583 = !DILocation(line: 1842, column: 13, scope: !6577)
!6584 = !DILocation(line: 1842, column: 25, scope: !6577)
!6585 = !DILocation(line: 1843, column: 10, scope: !6577)
!6586 = !DILocation(line: 1843, column: 14, scope: !6577)
!6587 = !DILocation(line: 1843, column: 17, scope: !6577)
!6588 = !DILocation(line: 1843, column: 29, scope: !6577)
!6589 = !DILocation(line: 1844, column: 14, scope: !6577)
!6590 = !DILocation(line: 1844, column: 17, scope: !6577)
!6591 = !DILocation(line: 0, scope: !6577)
!6592 = !DILocation(line: 1842, column: 3, scope: !6577)
!6593 = distinct !DISubprogram(name: "same_file_ok", scope: !245, file: !245, line: 1464, type: !362, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6594 = !DILocalVariable(name: "src_name", arg: 1, scope: !6593, file: !245, line: 1464, type: !115)
!6595 = !DILocation(line: 1464, column: 27, scope: !6593)
!6596 = !DILocalVariable(name: "src_sb", arg: 2, scope: !6593, file: !245, line: 1464, type: !315)
!6597 = !DILocation(line: 1464, column: 56, scope: !6593)
!6598 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6593, file: !245, line: 1465, type: !115)
!6599 = !DILocation(line: 1465, column: 27, scope: !6593)
!6600 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !6593, file: !245, line: 1465, type: !315)
!6601 = !DILocation(line: 1465, column: 56, scope: !6593)
!6602 = !DILocalVariable(name: "x", arg: 5, scope: !6593, file: !245, line: 1466, type: !252)
!6603 = !DILocation(line: 1466, column: 40, scope: !6593)
!6604 = !DILocalVariable(name: "return_now", arg: 6, scope: !6593, file: !245, line: 1466, type: !302)
!6605 = !DILocation(line: 1466, column: 49, scope: !6593)
!6606 = !DILocalVariable(name: "src_sb_link", scope: !6593, file: !245, line: 1468, type: !315)
!6607 = !DILocation(line: 1468, column: 22, scope: !6593)
!6608 = !DILocalVariable(name: "dst_sb_link", scope: !6593, file: !245, line: 1469, type: !315)
!6609 = !DILocation(line: 1469, column: 22, scope: !6593)
!6610 = !DILocalVariable(name: "tmp_dst_sb", scope: !6593, file: !245, line: 1470, type: !317)
!6611 = !DILocation(line: 1470, column: 15, scope: !6593)
!6612 = !DILocalVariable(name: "tmp_src_sb", scope: !6593, file: !245, line: 1471, type: !317)
!6613 = !DILocation(line: 1471, column: 15, scope: !6593)
!6614 = !DILocalVariable(name: "same_link", scope: !6593, file: !245, line: 1473, type: !120)
!6615 = !DILocation(line: 1473, column: 8, scope: !6593)
!6616 = !DILocalVariable(name: "same", scope: !6593, file: !245, line: 1474, type: !120)
!6617 = !DILocation(line: 1474, column: 8, scope: !6593)
!6618 = !DILocation(line: 1474, column: 15, scope: !6593)
!6619 = !DILocation(line: 0, scope: !6593)
!6620 = !DILocation(line: 1476, column: 4, scope: !6593)
!6621 = !DILocation(line: 1476, column: 15, scope: !6593)
!6622 = !DILocation(line: 1483, column: 7, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1483, column: 7)
!6624 = !DILocation(line: 1483, column: 12, scope: !6623)
!6625 = !DILocation(line: 1483, column: 15, scope: !6623)
!6626 = !DILocation(line: 1483, column: 18, scope: !6623)
!6627 = !DILocation(line: 1483, column: 7, scope: !6593)
!6628 = !DILocation(line: 1485, column: 8, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6623, file: !245, line: 1484, column: 5)
!6630 = !DILocation(line: 1485, column: 19, scope: !6629)
!6631 = !DILocation(line: 1486, column: 7, scope: !6629)
!6632 = !DILocation(line: 1489, column: 7, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1489, column: 7)
!6634 = !DILocation(line: 1489, column: 10, scope: !6633)
!6635 = !DILocation(line: 1489, column: 22, scope: !6633)
!6636 = !DILocation(line: 1489, column: 7, scope: !6593)
!6637 = !DILocation(line: 1491, column: 19, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6633, file: !245, line: 1490, column: 5)
!6639 = !DILocation(line: 1491, column: 17, scope: !6638)
!6640 = !DILocation(line: 1496, column: 11, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6638, file: !245, line: 1496, column: 11)
!6642 = !DILocation(line: 1496, column: 37, scope: !6641)
!6643 = !DILocation(line: 1496, column: 40, scope: !6641)
!6644 = !DILocation(line: 1496, column: 11, scope: !6638)
!6645 = !DILocalVariable(name: "sn", scope: !6646, file: !245, line: 1498, type: !120)
!6646 = distinct !DILexicalBlock(scope: !6641, file: !245, line: 1497, column: 9)
!6647 = !DILocation(line: 1498, column: 16, scope: !6646)
!6648 = !DILocation(line: 1498, column: 32, scope: !6646)
!6649 = !DILocation(line: 1498, column: 42, scope: !6646)
!6650 = !DILocation(line: 1498, column: 21, scope: !6646)
!6651 = !DILocation(line: 1499, column: 18, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6646, file: !245, line: 1499, column: 16)
!6653 = !DILocation(line: 1499, column: 16, scope: !6646)
!6654 = !DILocation(line: 1502, column: 19, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !245, line: 1502, column: 19)
!6656 = distinct !DILexicalBlock(scope: !6652, file: !245, line: 1500, column: 13)
!6657 = !DILocation(line: 1502, column: 22, scope: !6655)
!6658 = !DILocation(line: 1502, column: 34, scope: !6655)
!6659 = !DILocation(line: 1502, column: 19, scope: !6656)
!6660 = !DILocation(line: 1503, column: 17, scope: !6655)
!6661 = !DILocation(line: 1509, column: 19, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6656, file: !245, line: 1509, column: 19)
!6663 = !DILocation(line: 1509, column: 19, scope: !6656)
!6664 = !DILocation(line: 1511, column: 20, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6662, file: !245, line: 1510, column: 17)
!6666 = !DILocation(line: 1511, column: 31, scope: !6665)
!6667 = !DILocation(line: 1512, column: 28, scope: !6665)
!6668 = !DILocation(line: 1512, column: 31, scope: !6665)
!6669 = !DILocation(line: 1512, column: 26, scope: !6665)
!6670 = !DILocation(line: 1512, column: 19, scope: !6665)
!6671 = !DILocation(line: 1514, column: 13, scope: !6656)
!6672 = !DILocation(line: 1516, column: 20, scope: !6646)
!6673 = !DILocation(line: 1516, column: 18, scope: !6646)
!6674 = !DILocation(line: 1516, column: 11, scope: !6646)
!6675 = !DILocation(line: 1519, column: 21, scope: !6638)
!6676 = !DILocation(line: 1519, column: 19, scope: !6638)
!6677 = !DILocation(line: 1520, column: 21, scope: !6638)
!6678 = !DILocation(line: 1520, column: 19, scope: !6638)
!6679 = !DILocation(line: 1521, column: 5, scope: !6638)
!6680 = !DILocation(line: 1524, column: 12, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !245, line: 1524, column: 11)
!6682 = distinct !DILexicalBlock(scope: !6633, file: !245, line: 1523, column: 5)
!6683 = !DILocation(line: 1524, column: 11, scope: !6682)
!6684 = !DILocation(line: 1525, column: 9, scope: !6681)
!6685 = !DILocation(line: 1527, column: 18, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6682, file: !245, line: 1527, column: 11)
!6687 = !DILocation(line: 1527, column: 11, scope: !6686)
!6688 = !DILocation(line: 1527, column: 41, scope: !6686)
!6689 = !DILocation(line: 1528, column: 11, scope: !6686)
!6690 = !DILocation(line: 1528, column: 21, scope: !6686)
!6691 = !DILocation(line: 1528, column: 14, scope: !6686)
!6692 = !DILocation(line: 1528, column: 44, scope: !6686)
!6693 = !DILocation(line: 1527, column: 11, scope: !6682)
!6694 = !DILocation(line: 1529, column: 9, scope: !6686)
!6695 = !DILocation(line: 1531, column: 19, scope: !6682)
!6696 = !DILocation(line: 1532, column: 19, scope: !6682)
!6697 = !DILocation(line: 1534, column: 19, scope: !6682)
!6698 = !DILocation(line: 0, scope: !6682)
!6699 = !DILocation(line: 1534, column: 17, scope: !6682)
!6700 = !DILocation(line: 1541, column: 11, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6682, file: !245, line: 1541, column: 11)
!6702 = !DILocation(line: 1541, column: 42, scope: !6701)
!6703 = !DILocation(line: 1541, column: 45, scope: !6701)
!6704 = !DILocation(line: 1542, column: 11, scope: !6701)
!6705 = !DILocation(line: 1542, column: 14, scope: !6701)
!6706 = !DILocation(line: 1542, column: 17, scope: !6701)
!6707 = !DILocation(line: 1541, column: 11, scope: !6682)
!6708 = !DILocation(line: 1543, column: 9, scope: !6701)
!6709 = !DILocation(line: 1551, column: 7, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1551, column: 7)
!6711 = !DILocation(line: 1551, column: 10, scope: !6710)
!6712 = !DILocation(line: 1551, column: 22, scope: !6710)
!6713 = !DILocation(line: 1551, column: 7, scope: !6593)
!6714 = !DILocation(line: 1553, column: 12, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !245, line: 1553, column: 11)
!6716 = distinct !DILexicalBlock(scope: !6710, file: !245, line: 1552, column: 5)
!6717 = !DILocation(line: 1553, column: 11, scope: !6716)
!6718 = !DILocation(line: 1571, column: 18, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !245, line: 1571, column: 16)
!6720 = distinct !DILexicalBlock(scope: !6715, file: !245, line: 1554, column: 9)
!6721 = !DILocation(line: 1571, column: 21, scope: !6719)
!6722 = !DILocation(line: 1572, column: 16, scope: !6719)
!6723 = !DILocation(line: 1572, column: 19, scope: !6719)
!6724 = !DILocation(line: 1572, column: 22, scope: !6719)
!6725 = !DILocation(line: 1572, column: 34, scope: !6719)
!6726 = !DILocation(line: 1573, column: 16, scope: !6719)
!6727 = !DILocation(line: 1573, column: 19, scope: !6719)
!6728 = !DILocation(line: 1574, column: 16, scope: !6719)
!6729 = !DILocation(line: 1574, column: 21, scope: !6719)
!6730 = !DILocation(line: 1571, column: 16, scope: !6720)
!6731 = !DILocation(line: 1575, column: 13, scope: !6719)
!6732 = !DILocation(line: 1577, column: 11, scope: !6720)
!6733 = !DILocation(line: 1581, column: 27, scope: !6716)
!6734 = !DILocation(line: 1581, column: 37, scope: !6716)
!6735 = !DILocation(line: 1581, column: 16, scope: !6716)
!6736 = !DILocation(line: 1581, column: 14, scope: !6716)
!6737 = !DILocation(line: 1581, column: 7, scope: !6716)
!6738 = !DILocation(line: 1601, column: 7, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1601, column: 7)
!6740 = !DILocation(line: 1601, column: 10, scope: !6739)
!6741 = !DILocation(line: 1601, column: 20, scope: !6739)
!6742 = !DILocation(line: 1601, column: 23, scope: !6739)
!6743 = !DILocation(line: 1601, column: 26, scope: !6739)
!6744 = !DILocation(line: 1601, column: 7, scope: !6593)
!6745 = !DILocation(line: 1607, column: 11, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !245, line: 1607, column: 11)
!6747 = distinct !DILexicalBlock(scope: !6739, file: !245, line: 1602, column: 5)
!6748 = !DILocation(line: 1607, column: 11, scope: !6747)
!6749 = !DILocation(line: 1608, column: 9, scope: !6746)
!6750 = !DILocation(line: 1612, column: 11, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6747, file: !245, line: 1612, column: 11)
!6752 = !DILocation(line: 1613, column: 11, scope: !6751)
!6753 = !DILocation(line: 1613, column: 18, scope: !6751)
!6754 = !DILocation(line: 1613, column: 31, scope: !6751)
!6755 = !DILocation(line: 1613, column: 16, scope: !6751)
!6756 = !DILocation(line: 1614, column: 11, scope: !6751)
!6757 = !DILocation(line: 1614, column: 27, scope: !6751)
!6758 = !DILocation(line: 1614, column: 37, scope: !6751)
!6759 = !DILocation(line: 1614, column: 16, scope: !6751)
!6760 = !DILocation(line: 1612, column: 11, scope: !6747)
!6761 = !DILocation(line: 1615, column: 18, scope: !6751)
!6762 = !DILocation(line: 1615, column: 21, scope: !6751)
!6763 = !DILocation(line: 1615, column: 16, scope: !6751)
!6764 = !DILocation(line: 1615, column: 9, scope: !6751)
!6765 = !DILocation(line: 1616, column: 5, scope: !6747)
!6766 = !DILocation(line: 1620, column: 8, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1620, column: 7)
!6768 = !DILocation(line: 1620, column: 39, scope: !6767)
!6769 = !DILocation(line: 1620, column: 43, scope: !6767)
!6770 = !DILocation(line: 1620, column: 7, scope: !6593)
!6771 = !DILocation(line: 1622, column: 12, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !245, line: 1622, column: 11)
!6773 = distinct !DILexicalBlock(scope: !6767, file: !245, line: 1621, column: 5)
!6774 = !DILocation(line: 1622, column: 11, scope: !6773)
!6775 = !DILocation(line: 1623, column: 9, scope: !6772)
!6776 = !DILocation(line: 1626, column: 11, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6773, file: !245, line: 1626, column: 11)
!6778 = !DILocation(line: 1626, column: 14, scope: !6777)
!6779 = !DILocation(line: 1626, column: 11, scope: !6773)
!6780 = !DILocation(line: 1628, column: 12, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6777, file: !245, line: 1627, column: 9)
!6782 = !DILocation(line: 1628, column: 23, scope: !6781)
!6783 = !DILocation(line: 1629, column: 11, scope: !6781)
!6784 = !DILocation(line: 1631, column: 5, scope: !6773)
!6785 = !DILocation(line: 1653, column: 7, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1653, column: 7)
!6787 = !DILocation(line: 1653, column: 10, scope: !6786)
!6788 = !DILocation(line: 1654, column: 7, scope: !6786)
!6789 = !DILocation(line: 1654, column: 10, scope: !6786)
!6790 = !DILocation(line: 1655, column: 7, scope: !6786)
!6791 = !DILocation(line: 1655, column: 14, scope: !6786)
!6792 = !DILocation(line: 1655, column: 27, scope: !6786)
!6793 = !DILocation(line: 1655, column: 12, scope: !6786)
!6794 = !DILocation(line: 1653, column: 7, scope: !6593)
!6795 = !DILocalVariable(name: "abs_src", scope: !6796, file: !245, line: 1657, type: !9)
!6796 = distinct !DILexicalBlock(scope: !6786, file: !245, line: 1656, column: 5)
!6797 = !DILocation(line: 1657, column: 13, scope: !6796)
!6798 = !DILocation(line: 1657, column: 47, scope: !6796)
!6799 = !DILocation(line: 1657, column: 23, scope: !6796)
!6800 = !DILocation(line: 1658, column: 11, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6796, file: !245, line: 1658, column: 11)
!6802 = !DILocation(line: 1658, column: 11, scope: !6796)
!6803 = !DILocalVariable(name: "result", scope: !6804, file: !245, line: 1660, type: !120)
!6804 = distinct !DILexicalBlock(scope: !6801, file: !245, line: 1659, column: 9)
!6805 = !DILocation(line: 1660, column: 16, scope: !6804)
!6806 = !DILocation(line: 1660, column: 38, scope: !6804)
!6807 = !DILocation(line: 1660, column: 47, scope: !6804)
!6808 = !DILocation(line: 1660, column: 27, scope: !6804)
!6809 = !DILocation(line: 1660, column: 25, scope: !6804)
!6810 = !DILocation(line: 1661, column: 17, scope: !6804)
!6811 = !DILocation(line: 1661, column: 11, scope: !6804)
!6812 = !DILocation(line: 1662, column: 18, scope: !6804)
!6813 = !DILocation(line: 1662, column: 11, scope: !6804)
!6814 = !DILocation(line: 1664, column: 5, scope: !6796)
!6815 = !DILocation(line: 1667, column: 7, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1667, column: 7)
!6817 = !DILocation(line: 1667, column: 10, scope: !6816)
!6818 = !DILocation(line: 1667, column: 24, scope: !6816)
!6819 = !DILocation(line: 1667, column: 27, scope: !6816)
!6820 = !DILocation(line: 1667, column: 7, scope: !6593)
!6821 = !DILocation(line: 1668, column: 5, scope: !6816)
!6822 = !DILocation(line: 1670, column: 7, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6593, file: !245, line: 1670, column: 7)
!6824 = !DILocation(line: 1670, column: 10, scope: !6823)
!6825 = !DILocation(line: 1670, column: 22, scope: !6823)
!6826 = !DILocation(line: 1670, column: 7, scope: !6593)
!6827 = !DILocation(line: 1672, column: 14, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !245, line: 1672, column: 12)
!6829 = distinct !DILexicalBlock(scope: !6823, file: !245, line: 1671, column: 5)
!6830 = !DILocation(line: 1672, column: 12, scope: !6829)
!6831 = !DILocation(line: 1673, column: 23, scope: !6828)
!6832 = !DILocation(line: 1673, column: 22, scope: !6828)
!6833 = !{i64 0, i64 8, !3851, i64 8, i64 8, !3851, i64 16, i64 8, !3851, i64 24, i64 4, !2985, i64 28, i64 4, !2985, i64 32, i64 4, !2985, i64 36, i64 4, !2985, i64 40, i64 8, !3851, i64 48, i64 8, !3851, i64 56, i64 8, !3851, i64 64, i64 8, !3851, i64 72, i64 8, !3851, i64 80, i64 8, !3851, i64 88, i64 8, !3851, i64 96, i64 8, !3851, i64 104, i64 8, !3851, i64 112, i64 8, !3851, i64 120, i64 24, !3660}
!6834 = !DILocation(line: 1673, column: 9, scope: !6828)
!6835 = !DILocation(line: 1674, column: 22, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6828, file: !245, line: 1674, column: 16)
!6837 = !DILocation(line: 1674, column: 16, scope: !6836)
!6838 = !DILocation(line: 1674, column: 45, scope: !6836)
!6839 = !DILocation(line: 1674, column: 16, scope: !6828)
!6840 = !DILocation(line: 1675, column: 9, scope: !6836)
!6841 = !DILocation(line: 1677, column: 14, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6829, file: !245, line: 1677, column: 12)
!6843 = !DILocation(line: 1677, column: 12, scope: !6829)
!6844 = !DILocation(line: 1678, column: 23, scope: !6842)
!6845 = !DILocation(line: 1678, column: 22, scope: !6842)
!6846 = !DILocation(line: 1678, column: 9, scope: !6842)
!6847 = !DILocation(line: 1679, column: 22, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6842, file: !245, line: 1679, column: 16)
!6849 = !DILocation(line: 1679, column: 16, scope: !6848)
!6850 = !DILocation(line: 1679, column: 45, scope: !6848)
!6851 = !DILocation(line: 1679, column: 16, scope: !6842)
!6852 = !DILocation(line: 1680, column: 9, scope: !6848)
!6853 = !DILocation(line: 1682, column: 14, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6829, file: !245, line: 1682, column: 12)
!6855 = !DILocation(line: 1682, column: 12, scope: !6829)
!6856 = !DILocation(line: 1683, column: 9, scope: !6854)
!6857 = !DILocation(line: 1685, column: 11, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6829, file: !245, line: 1685, column: 11)
!6859 = !DILocation(line: 1685, column: 14, scope: !6858)
!6860 = !DILocation(line: 1685, column: 11, scope: !6829)
!6861 = !DILocation(line: 1691, column: 27, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6858, file: !245, line: 1686, column: 9)
!6863 = !DILocation(line: 1691, column: 25, scope: !6862)
!6864 = !DILocation(line: 1691, column: 12, scope: !6862)
!6865 = !DILocation(line: 1691, column: 23, scope: !6862)
!6866 = !DILocation(line: 1692, column: 11, scope: !6862)
!6867 = !DILocation(line: 1694, column: 5, scope: !6829)
!6868 = !DILocation(line: 1696, column: 3, scope: !6593)
!6869 = !DILocation(line: 1697, column: 1, scope: !6593)
!6870 = distinct !DISubprogram(name: "create_hard_link", scope: !245, file: !245, line: 1819, type: !364, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6871 = !DILocalVariable(name: "src_name", arg: 1, scope: !6870, file: !245, line: 1819, type: !115)
!6872 = !DILocation(line: 1819, column: 31, scope: !6870)
!6873 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6870, file: !245, line: 1819, type: !115)
!6874 = !DILocation(line: 1819, column: 53, scope: !6870)
!6875 = !DILocalVariable(name: "replace", arg: 3, scope: !6870, file: !245, line: 1820, type: !120)
!6876 = !DILocation(line: 1820, column: 24, scope: !6870)
!6877 = !DILocalVariable(name: "verbose", arg: 4, scope: !6870, file: !245, line: 1820, type: !120)
!6878 = !DILocation(line: 1820, column: 38, scope: !6870)
!6879 = !DILocalVariable(name: "dereference", arg: 5, scope: !6870, file: !245, line: 1820, type: !120)
!6880 = !DILocation(line: 1820, column: 52, scope: !6870)
!6881 = !DILocalVariable(name: "err", scope: !6870, file: !245, line: 1822, type: !7)
!6882 = !DILocation(line: 1822, column: 7, scope: !6870)
!6883 = !DILocation(line: 1822, column: 37, scope: !6870)
!6884 = !DILocation(line: 1822, column: 57, scope: !6870)
!6885 = !DILocation(line: 1823, column: 27, scope: !6870)
!6886 = !DILocation(line: 1824, column: 27, scope: !6870)
!6887 = !DILocation(line: 1822, column: 13, scope: !6870)
!6888 = !DILocation(line: 1825, column: 11, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6870, file: !245, line: 1825, column: 7)
!6890 = !DILocation(line: 1825, column: 9, scope: !6889)
!6891 = !DILocation(line: 1825, column: 7, scope: !6870)
!6892 = !DILocation(line: 1827, column: 17, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !245, line: 1826, column: 5)
!6894 = !DILocation(line: 1827, column: 22, scope: !6893)
!6895 = !DILocation(line: 1828, column: 14, scope: !6893)
!6896 = !DILocation(line: 1828, column: 39, scope: !6893)
!6897 = !DILocation(line: 1827, column: 7, scope: !6893)
!6898 = !DILocation(line: 1829, column: 7, scope: !6893)
!6899 = !DILocation(line: 1831, column: 7, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6870, file: !245, line: 1831, column: 7)
!6901 = !DILocation(line: 1831, column: 11, scope: !6900)
!6902 = !DILocation(line: 1831, column: 15, scope: !6900)
!6903 = !DILocation(line: 1831, column: 18, scope: !6900)
!6904 = !DILocation(line: 1831, column: 7, scope: !6870)
!6905 = !DILocation(line: 1832, column: 13, scope: !6900)
!6906 = !DILocation(line: 1832, column: 32, scope: !6900)
!6907 = !DILocation(line: 1832, column: 5, scope: !6900)
!6908 = !DILocation(line: 1833, column: 3, scope: !6870)
!6909 = !DILocation(line: 1834, column: 1, scope: !6870)
!6910 = distinct !DISubprogram(name: "abandon_move", scope: !245, file: !245, line: 1778, type: !366, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6911 = !DILocalVariable(name: "x", arg: 1, scope: !6910, file: !245, line: 1778, type: !252)
!6912 = !DILocation(line: 1778, column: 40, scope: !6910)
!6913 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6910, file: !245, line: 1779, type: !115)
!6914 = !DILocation(line: 1779, column: 27, scope: !6910)
!6915 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6910, file: !245, line: 1780, type: !315)
!6916 = !DILocation(line: 1780, column: 34, scope: !6910)
!6917 = !DILocation(line: 1782, column: 3, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !245, line: 1782, column: 3)
!6919 = distinct !DILexicalBlock(scope: !6910, file: !245, line: 1782, column: 3)
!6920 = !DILocation(line: 1782, column: 3, scope: !6919)
!6921 = !DILocation(line: 1783, column: 11, scope: !6910)
!6922 = !DILocation(line: 1783, column: 14, scope: !6910)
!6923 = !DILocation(line: 1783, column: 26, scope: !6910)
!6924 = !DILocation(line: 1784, column: 11, scope: !6910)
!6925 = !DILocation(line: 1784, column: 16, scope: !6910)
!6926 = !DILocation(line: 1784, column: 19, scope: !6910)
!6927 = !DILocation(line: 1784, column: 31, scope: !6910)
!6928 = !DILocation(line: 1785, column: 16, scope: !6910)
!6929 = !DILocation(line: 1785, column: 20, scope: !6910)
!6930 = !DILocation(line: 1785, column: 23, scope: !6910)
!6931 = !DILocation(line: 1785, column: 35, scope: !6910)
!6932 = !DILocation(line: 1786, column: 20, scope: !6910)
!6933 = !DILocation(line: 1786, column: 23, scope: !6910)
!6934 = !DILocation(line: 1786, column: 26, scope: !6910)
!6935 = !DILocation(line: 1787, column: 20, scope: !6910)
!6936 = !DILocation(line: 1787, column: 47, scope: !6910)
!6937 = !DILocation(line: 1787, column: 57, scope: !6910)
!6938 = !DILocation(line: 1787, column: 65, scope: !6910)
!6939 = !DILocation(line: 1787, column: 25, scope: !6910)
!6940 = !DILocation(line: 1788, column: 15, scope: !6910)
!6941 = !DILocation(line: 1788, column: 34, scope: !6910)
!6942 = !DILocation(line: 1788, column: 37, scope: !6910)
!6943 = !DILocation(line: 1788, column: 47, scope: !6910)
!6944 = !DILocation(line: 1788, column: 20, scope: !6910)
!6945 = !DILocation(line: 1788, column: 18, scope: !6910)
!6946 = !DILocation(line: 0, scope: !6910)
!6947 = !DILocation(line: 1783, column: 3, scope: !6910)
!6948 = distinct !DISubprogram(name: "overwrite_ok", scope: !245, file: !245, line: 1710, type: !366, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!6949 = !DILocalVariable(name: "x", arg: 1, scope: !6948, file: !245, line: 1710, type: !252)
!6950 = !DILocation(line: 1710, column: 40, scope: !6948)
!6951 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6948, file: !245, line: 1710, type: !115)
!6952 = !DILocation(line: 1710, column: 55, scope: !6948)
!6953 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6948, file: !245, line: 1711, type: !315)
!6954 = !DILocation(line: 1711, column: 34, scope: !6948)
!6955 = !DILocation(line: 1713, column: 31, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6948, file: !245, line: 1713, column: 7)
!6957 = !DILocation(line: 1713, column: 41, scope: !6956)
!6958 = !DILocation(line: 1713, column: 49, scope: !6956)
!6959 = !DILocation(line: 1713, column: 9, scope: !6956)
!6960 = !DILocation(line: 1713, column: 7, scope: !6948)
!6961 = !DILocalVariable(name: "perms", scope: !6962, file: !245, line: 1715, type: !370)
!6962 = distinct !DILexicalBlock(scope: !6956, file: !245, line: 1714, column: 5)
!6963 = !DILocation(line: 1715, column: 12, scope: !6962)
!6964 = !DILocation(line: 1716, column: 16, scope: !6962)
!6965 = !DILocation(line: 1716, column: 24, scope: !6962)
!6966 = !DILocation(line: 1716, column: 33, scope: !6962)
!6967 = !DILocation(line: 1716, column: 7, scope: !6962)
!6968 = !DILocation(line: 1717, column: 7, scope: !6962)
!6969 = !DILocation(line: 1717, column: 17, scope: !6962)
!6970 = !DILocation(line: 1718, column: 16, scope: !6962)
!6971 = !DILocation(line: 1719, column: 17, scope: !6962)
!6972 = !DILocation(line: 1719, column: 20, scope: !6962)
!6973 = !DILocation(line: 1719, column: 30, scope: !6962)
!6974 = !DILocation(line: 1719, column: 33, scope: !6962)
!6975 = !DILocation(line: 1719, column: 36, scope: !6962)
!6976 = !DILocation(line: 1720, column: 17, scope: !6962)
!6977 = !DILocation(line: 1720, column: 20, scope: !6962)
!6978 = !DILocation(line: 1720, column: 23, scope: !6962)
!6979 = !DILocation(line: 1719, column: 16, scope: !6962)
!6980 = !DILocation(line: 1721, column: 18, scope: !6962)
!6981 = !DILocation(line: 1722, column: 18, scope: !6962)
!6982 = !DILocation(line: 1723, column: 16, scope: !6962)
!6983 = !DILocation(line: 1723, column: 30, scope: !6962)
!6984 = !DILocation(line: 1724, column: 37, scope: !6962)
!6985 = !DILocation(line: 1724, column: 45, scope: !6962)
!6986 = !DILocation(line: 1724, column: 53, scope: !6962)
!6987 = !DILocation(line: 1724, column: 16, scope: !6962)
!6988 = !DILocation(line: 1725, column: 17, scope: !6962)
!6989 = !DILocation(line: 1718, column: 7, scope: !6962)
!6990 = !DILocation(line: 1726, column: 5, scope: !6962)
!6991 = !DILocation(line: 1729, column: 16, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6956, file: !245, line: 1728, column: 5)
!6993 = !DILocation(line: 1729, column: 24, scope: !6992)
!6994 = !DILocation(line: 1730, column: 16, scope: !6992)
!6995 = !DILocation(line: 1730, column: 30, scope: !6992)
!6996 = !DILocation(line: 1729, column: 7, scope: !6992)
!6997 = !DILocation(line: 1733, column: 10, scope: !6948)
!6998 = !DILocation(line: 1733, column: 3, scope: !6948)
!6999 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !141, file: !141, line: 265, type: !200, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7000 = !DILocalVariable(name: "file_name", arg: 1, scope: !6999, file: !141, line: 265, type: !115)
!7001 = !DILocation(line: 265, column: 28, scope: !6999)
!7002 = !DILocation(line: 267, column: 7, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6999, file: !141, line: 267, column: 7)
!7004 = !DILocation(line: 267, column: 20, scope: !7003)
!7005 = !DILocation(line: 267, column: 7, scope: !6999)
!7006 = !DILocalVariable(name: "sep", scope: !7007, file: !141, line: 269, type: !10)
!7007 = distinct !DILexicalBlock(scope: !7003, file: !141, line: 268, column: 5)
!7008 = !DILocation(line: 269, column: 12, scope: !7007)
!7009 = !DILocation(line: 269, column: 18, scope: !7007)
!7010 = !DILocation(line: 269, column: 29, scope: !7007)
!7011 = !DILocation(line: 269, column: 42, scope: !7007)
!7012 = !DILocation(line: 269, column: 50, scope: !7007)
!7013 = !DILocation(line: 270, column: 17, scope: !7007)
!7014 = !DILocation(line: 270, column: 21, scope: !7007)
!7015 = !DILocation(line: 270, column: 24, scope: !7007)
!7016 = !DILocation(line: 270, column: 7, scope: !7007)
!7017 = !DILocation(line: 273, column: 5, scope: !7003)
!7018 = !DILocation(line: 274, column: 1, scope: !6999)
!7019 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !245, file: !245, line: 1850, type: !407, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7020 = !DILocalVariable(name: "srcbase", arg: 1, scope: !7019, file: !245, line: 1850, type: !115)
!7021 = !DILocation(line: 1850, column: 35, scope: !7019)
!7022 = !DILocalVariable(name: "src_st", arg: 2, scope: !7019, file: !245, line: 1850, type: !315)
!7023 = !DILocation(line: 1850, column: 63, scope: !7019)
!7024 = !DILocalVariable(name: "dst_name", arg: 3, scope: !7019, file: !245, line: 1851, type: !115)
!7025 = !DILocation(line: 1851, column: 35, scope: !7019)
!7026 = !DILocalVariable(name: "srcbaselen", scope: !7019, file: !245, line: 1853, type: !55)
!7027 = !DILocation(line: 1853, column: 10, scope: !7019)
!7028 = !DILocation(line: 1853, column: 31, scope: !7019)
!7029 = !DILocation(line: 1853, column: 23, scope: !7019)
!7030 = !DILocalVariable(name: "dstbase", scope: !7019, file: !245, line: 1854, type: !115)
!7031 = !DILocation(line: 1854, column: 15, scope: !7019)
!7032 = !DILocation(line: 1854, column: 41, scope: !7019)
!7033 = !DILocation(line: 1854, column: 25, scope: !7019)
!7034 = !DILocalVariable(name: "dstbaselen", scope: !7019, file: !245, line: 1855, type: !55)
!7035 = !DILocation(line: 1855, column: 10, scope: !7019)
!7036 = !DILocation(line: 1855, column: 31, scope: !7019)
!7037 = !DILocation(line: 1855, column: 23, scope: !7019)
!7038 = !DILocalVariable(name: "suffixlen", scope: !7019, file: !245, line: 1856, type: !55)
!7039 = !DILocation(line: 1856, column: 10, scope: !7019)
!7040 = !DILocation(line: 1856, column: 30, scope: !7019)
!7041 = !DILocation(line: 1856, column: 22, scope: !7019)
!7042 = !DILocation(line: 1857, column: 10, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7019, file: !245, line: 1857, column: 7)
!7044 = !DILocation(line: 1857, column: 24, scope: !7043)
!7045 = !DILocation(line: 1857, column: 37, scope: !7043)
!7046 = !DILocation(line: 1857, column: 35, scope: !7043)
!7047 = !DILocation(line: 1857, column: 21, scope: !7043)
!7048 = !DILocation(line: 1858, column: 10, scope: !7043)
!7049 = !DILocation(line: 1858, column: 21, scope: !7043)
!7050 = !DILocation(line: 1858, column: 30, scope: !7043)
!7051 = !DILocation(line: 1858, column: 39, scope: !7043)
!7052 = !DILocation(line: 1858, column: 13, scope: !7043)
!7053 = !DILocation(line: 1858, column: 51, scope: !7043)
!7054 = !DILocation(line: 1859, column: 10, scope: !7043)
!7055 = !DILocation(line: 1859, column: 13, scope: !7043)
!7056 = !DILocation(line: 1857, column: 7, scope: !7019)
!7057 = !DILocation(line: 1860, column: 5, scope: !7043)
!7058 = !DILocalVariable(name: "dstlen", scope: !7019, file: !245, line: 1861, type: !55)
!7059 = !DILocation(line: 1861, column: 10, scope: !7019)
!7060 = !DILocation(line: 1861, column: 27, scope: !7019)
!7061 = !DILocation(line: 1861, column: 19, scope: !7019)
!7062 = !DILocalVariable(name: "dst_back", scope: !7019, file: !245, line: 1862, type: !9)
!7063 = !DILocation(line: 1862, column: 9, scope: !7019)
!7064 = !DILocation(line: 1862, column: 29, scope: !7019)
!7065 = !DILocation(line: 1862, column: 38, scope: !7019)
!7066 = !DILocation(line: 1862, column: 36, scope: !7019)
!7067 = !DILocation(line: 1862, column: 48, scope: !7019)
!7068 = !DILocation(line: 1862, column: 20, scope: !7019)
!7069 = !DILocation(line: 1863, column: 20, scope: !7019)
!7070 = !DILocation(line: 1863, column: 30, scope: !7019)
!7071 = !DILocation(line: 1863, column: 40, scope: !7019)
!7072 = !DILocation(line: 1863, column: 11, scope: !7019)
!7073 = !DILocation(line: 1863, column: 49, scope: !7019)
!7074 = !DILocation(line: 1863, column: 3, scope: !7019)
!7075 = !DILocalVariable(name: "dst_back_sb", scope: !7019, file: !245, line: 1864, type: !317)
!7076 = !DILocation(line: 1864, column: 15, scope: !7019)
!7077 = !DILocalVariable(name: "dst_back_status", scope: !7019, file: !245, line: 1865, type: !7)
!7078 = !DILocation(line: 1865, column: 7, scope: !7019)
!7079 = !DILocation(line: 1865, column: 31, scope: !7019)
!7080 = !DILocation(line: 1865, column: 25, scope: !7019)
!7081 = !DILocation(line: 1866, column: 9, scope: !7019)
!7082 = !DILocation(line: 1866, column: 3, scope: !7019)
!7083 = !DILocation(line: 1867, column: 10, scope: !7019)
!7084 = !DILocation(line: 1867, column: 26, scope: !7019)
!7085 = !DILocation(line: 1867, column: 31, scope: !7019)
!7086 = !DILocation(line: 1867, column: 34, scope: !7019)
!7087 = !DILocation(line: 0, scope: !7019)
!7088 = !DILocation(line: 1867, column: 3, scope: !7019)
!7089 = !DILocation(line: 1868, column: 1, scope: !7019)
!7090 = distinct !DISubprogram(name: "emit_verbose", scope: !245, file: !245, line: 1795, type: !409, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7091 = !DILocalVariable(name: "src", arg: 1, scope: !7090, file: !245, line: 1795, type: !115)
!7092 = !DILocation(line: 1795, column: 27, scope: !7090)
!7093 = !DILocalVariable(name: "dst", arg: 2, scope: !7090, file: !245, line: 1795, type: !115)
!7094 = !DILocation(line: 1795, column: 44, scope: !7090)
!7095 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !7090, file: !245, line: 1795, type: !115)
!7096 = !DILocation(line: 1795, column: 61, scope: !7090)
!7097 = !DILocation(line: 1797, column: 23, scope: !7090)
!7098 = !DILocation(line: 1797, column: 43, scope: !7090)
!7099 = !DILocation(line: 1797, column: 3, scope: !7090)
!7100 = !DILocation(line: 1798, column: 7, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7090, file: !245, line: 1798, column: 7)
!7102 = !DILocation(line: 1798, column: 7, scope: !7090)
!7103 = !DILocation(line: 1799, column: 13, scope: !7101)
!7104 = !DILocation(line: 1799, column: 33, scope: !7101)
!7105 = !DILocation(line: 1799, column: 5, scope: !7101)
!7106 = !DILocation(line: 1800, column: 3, scope: !7090)
!7107 = !DILocation(line: 1801, column: 1, scope: !7090)
!7108 = distinct !DISubprogram(name: "is_ancestor", scope: !245, file: !245, line: 620, type: !411, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7109 = !DILocalVariable(name: "sb", arg: 1, scope: !7108, file: !245, line: 620, type: !315)
!7110 = !DILocation(line: 620, column: 33, scope: !7108)
!7111 = !DILocalVariable(name: "ancestors", arg: 2, scope: !7108, file: !245, line: 620, type: !413)
!7112 = !DILocation(line: 620, column: 60, scope: !7108)
!7113 = !DILocation(line: 622, column: 3, scope: !7108)
!7114 = !DILocation(line: 622, column: 10, scope: !7108)
!7115 = !DILocation(line: 622, column: 20, scope: !7108)
!7116 = !DILocation(line: 624, column: 11, scope: !7117)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !245, line: 624, column: 11)
!7118 = distinct !DILexicalBlock(scope: !7108, file: !245, line: 623, column: 5)
!7119 = !DILocation(line: 624, column: 22, scope: !7117)
!7120 = !DILocation(line: 624, column: 29, scope: !7117)
!7121 = !DILocation(line: 624, column: 33, scope: !7117)
!7122 = !DILocation(line: 624, column: 26, scope: !7117)
!7123 = !DILocation(line: 624, column: 40, scope: !7117)
!7124 = !DILocation(line: 624, column: 43, scope: !7117)
!7125 = !DILocation(line: 624, column: 54, scope: !7117)
!7126 = !DILocation(line: 624, column: 61, scope: !7117)
!7127 = !DILocation(line: 624, column: 65, scope: !7117)
!7128 = !DILocation(line: 624, column: 58, scope: !7117)
!7129 = !DILocation(line: 624, column: 11, scope: !7118)
!7130 = !DILocation(line: 625, column: 9, scope: !7117)
!7131 = !DILocation(line: 626, column: 19, scope: !7118)
!7132 = !DILocation(line: 626, column: 30, scope: !7118)
!7133 = !DILocation(line: 626, column: 17, scope: !7118)
!7134 = distinct !{!7134, !7113, !7135}
!7135 = !DILocation(line: 627, column: 5, scope: !7108)
!7136 = !DILocation(line: 628, column: 3, scope: !7108)
!7137 = !DILocation(line: 629, column: 1, scope: !7108)
!7138 = distinct !DISubprogram(name: "copy_dir", scope: !245, file: !245, line: 745, type: !415, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7139 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !7138, file: !245, line: 745, type: !115)
!7140 = !DILocation(line: 745, column: 23, scope: !7138)
!7141 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !7138, file: !245, line: 745, type: !115)
!7142 = !DILocation(line: 745, column: 48, scope: !7138)
!7143 = !DILocalVariable(name: "new_dst", arg: 3, scope: !7138, file: !245, line: 745, type: !120)
!7144 = !DILocation(line: 745, column: 66, scope: !7138)
!7145 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7138, file: !245, line: 746, type: !315)
!7146 = !DILocation(line: 746, column: 30, scope: !7138)
!7147 = !DILocalVariable(name: "ancestors", arg: 5, scope: !7138, file: !245, line: 746, type: !350)
!7148 = !DILocation(line: 746, column: 55, scope: !7138)
!7149 = !DILocalVariable(name: "x", arg: 6, scope: !7138, file: !245, line: 747, type: !252)
!7150 = !DILocation(line: 747, column: 36, scope: !7138)
!7151 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !7138, file: !245, line: 748, type: !302)
!7152 = !DILocation(line: 748, column: 17, scope: !7138)
!7153 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !7138, file: !245, line: 749, type: !302)
!7154 = !DILocation(line: 749, column: 17, scope: !7138)
!7155 = !DILocalVariable(name: "name_space", scope: !7138, file: !245, line: 751, type: !9)
!7156 = !DILocation(line: 751, column: 9, scope: !7138)
!7157 = !DILocalVariable(name: "namep", scope: !7138, file: !245, line: 752, type: !9)
!7158 = !DILocation(line: 752, column: 9, scope: !7138)
!7159 = !DILocalVariable(name: "non_command_line_options", scope: !7138, file: !245, line: 753, type: !254)
!7160 = !DILocation(line: 753, column: 21, scope: !7138)
!7161 = !DILocation(line: 753, column: 49, scope: !7138)
!7162 = !DILocation(line: 753, column: 48, scope: !7138)
!7163 = !{i64 0, i64 4, !3660, i64 4, i64 4, !3660, i64 8, i64 4, !3660, i64 12, i64 4, !3660, i64 16, i64 4, !2985, i64 20, i64 1, !3109, i64 21, i64 1, !3109, i64 22, i64 1, !3109, i64 23, i64 1, !3109, i64 24, i64 1, !3109, i64 25, i64 1, !3109, i64 26, i64 1, !3109, i64 27, i64 1, !3109, i64 28, i64 1, !3109, i64 29, i64 1, !3109, i64 30, i64 1, !3109, i64 31, i64 1, !3109, i64 32, i64 1, !3109, i64 33, i64 1, !3109, i64 34, i64 1, !3109, i64 35, i64 1, !3109, i64 36, i64 1, !3109, i64 37, i64 1, !3109, i64 38, i64 1, !3109, i64 39, i64 1, !3109, i64 40, i64 1, !3109, i64 41, i64 1, !3109, i64 42, i64 1, !3109, i64 43, i64 1, !3109, i64 44, i64 1, !3109, i64 45, i64 1, !3109, i64 46, i64 1, !3109, i64 47, i64 1, !3109, i64 48, i64 1, !3109, i64 49, i64 1, !3109, i64 52, i64 4, !2985, i64 56, i64 4, !3660, i64 64, i64 8, !2998, i64 72, i64 8, !2998}
!7164 = !DILocalVariable(name: "ok", scope: !7138, file: !245, line: 754, type: !120)
!7165 = !DILocation(line: 754, column: 8, scope: !7138)
!7166 = !DILocation(line: 756, column: 25, scope: !7138)
!7167 = !DILocation(line: 756, column: 16, scope: !7138)
!7168 = !DILocation(line: 756, column: 14, scope: !7138)
!7169 = !DILocation(line: 757, column: 7, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7138, file: !245, line: 757, column: 7)
!7171 = !DILocation(line: 757, column: 18, scope: !7170)
!7172 = !DILocation(line: 757, column: 7, scope: !7138)
!7173 = !DILocation(line: 761, column: 17, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7170, file: !245, line: 758, column: 5)
!7175 = !DILocation(line: 761, column: 24, scope: !7174)
!7176 = !DILocation(line: 761, column: 47, scope: !7174)
!7177 = !DILocation(line: 761, column: 7, scope: !7174)
!7178 = !DILocation(line: 762, column: 7, scope: !7174)
!7179 = !DILocation(line: 767, column: 7, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7138, file: !245, line: 767, column: 7)
!7181 = !DILocation(line: 767, column: 10, scope: !7180)
!7182 = !DILocation(line: 767, column: 22, scope: !7180)
!7183 = !DILocation(line: 767, column: 7, scope: !7138)
!7184 = !DILocation(line: 768, column: 30, scope: !7180)
!7185 = !DILocation(line: 768, column: 42, scope: !7180)
!7186 = !DILocation(line: 768, column: 5, scope: !7180)
!7187 = !DILocalVariable(name: "new_first_dir_created", scope: !7138, file: !245, line: 770, type: !120)
!7188 = !DILocation(line: 770, column: 8, scope: !7138)
!7189 = !DILocation(line: 771, column: 11, scope: !7138)
!7190 = !DILocation(line: 771, column: 9, scope: !7138)
!7191 = !DILocation(line: 772, column: 3, scope: !7138)
!7192 = !DILocation(line: 772, column: 11, scope: !7138)
!7193 = !DILocation(line: 772, column: 10, scope: !7138)
!7194 = !DILocation(line: 772, column: 17, scope: !7138)
!7195 = !DILocalVariable(name: "local_copy_into_self", scope: !7196, file: !245, line: 774, type: !120)
!7196 = distinct !DILexicalBlock(scope: !7138, file: !245, line: 773, column: 5)
!7197 = !DILocation(line: 774, column: 12, scope: !7196)
!7198 = !DILocalVariable(name: "src_name", scope: !7196, file: !245, line: 775, type: !9)
!7199 = !DILocation(line: 775, column: 13, scope: !7196)
!7200 = !DILocation(line: 775, column: 42, scope: !7196)
!7201 = !DILocation(line: 775, column: 55, scope: !7196)
!7202 = !DILocation(line: 775, column: 24, scope: !7196)
!7203 = !DILocalVariable(name: "dst_name", scope: !7196, file: !245, line: 776, type: !9)
!7204 = !DILocation(line: 776, column: 13, scope: !7196)
!7205 = !DILocation(line: 776, column: 42, scope: !7196)
!7206 = !DILocation(line: 776, column: 55, scope: !7196)
!7207 = !DILocation(line: 776, column: 24, scope: !7196)
!7208 = !DILocalVariable(name: "first_dir_created", scope: !7196, file: !245, line: 777, type: !120)
!7209 = !DILocation(line: 777, column: 12, scope: !7196)
!7210 = !DILocation(line: 777, column: 33, scope: !7196)
!7211 = !DILocation(line: 777, column: 32, scope: !7196)
!7212 = !DILocation(line: 779, column: 28, scope: !7196)
!7213 = !DILocation(line: 779, column: 38, scope: !7196)
!7214 = !DILocation(line: 779, column: 48, scope: !7196)
!7215 = !DILocation(line: 779, column: 57, scope: !7196)
!7216 = !DILocation(line: 780, column: 28, scope: !7196)
!7217 = !DILocation(line: 779, column: 13, scope: !7196)
!7218 = !DILocation(line: 779, column: 10, scope: !7196)
!7219 = !DILocation(line: 783, column: 26, scope: !7196)
!7220 = !DILocation(line: 783, column: 8, scope: !7196)
!7221 = !DILocation(line: 783, column: 23, scope: !7196)
!7222 = !DILocation(line: 785, column: 13, scope: !7196)
!7223 = !DILocation(line: 785, column: 7, scope: !7196)
!7224 = !DILocation(line: 786, column: 13, scope: !7196)
!7225 = !DILocation(line: 786, column: 7, scope: !7196)
!7226 = !DILocation(line: 791, column: 11, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7196, file: !245, line: 791, column: 11)
!7228 = !DILocation(line: 791, column: 11, scope: !7196)
!7229 = !DILocation(line: 792, column: 9, scope: !7227)
!7230 = !DILocation(line: 794, column: 32, scope: !7196)
!7231 = !DILocation(line: 794, column: 29, scope: !7196)
!7232 = !DILocation(line: 795, column: 24, scope: !7196)
!7233 = !DILocation(line: 795, column: 16, scope: !7196)
!7234 = !DILocation(line: 795, column: 31, scope: !7196)
!7235 = !DILocation(line: 795, column: 13, scope: !7196)
!7236 = distinct !{!7236, !7191, !7237}
!7237 = !DILocation(line: 796, column: 5, scope: !7138)
!7238 = !DILocation(line: 797, column: 9, scope: !7138)
!7239 = !DILocation(line: 797, column: 3, scope: !7138)
!7240 = !DILocation(line: 798, column: 45, scope: !7138)
!7241 = !DILocation(line: 798, column: 4, scope: !7138)
!7242 = !DILocation(line: 798, column: 43, scope: !7138)
!7243 = !DILocation(line: 800, column: 10, scope: !7138)
!7244 = !DILocation(line: 800, column: 3, scope: !7138)
!7245 = !DILocation(line: 801, column: 1, scope: !7138)
!7246 = distinct !DISubprogram(name: "copy_reg", scope: !245, file: !245, line: 1052, type: !417, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7247 = !DILocalVariable(name: "src_name", arg: 1, scope: !7246, file: !245, line: 1052, type: !115)
!7248 = !DILocation(line: 1052, column: 23, scope: !7246)
!7249 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7246, file: !245, line: 1052, type: !115)
!7250 = !DILocation(line: 1052, column: 45, scope: !7246)
!7251 = !DILocalVariable(name: "x", arg: 3, scope: !7246, file: !245, line: 1053, type: !252)
!7252 = !DILocation(line: 1053, column: 36, scope: !7246)
!7253 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !7246, file: !245, line: 1054, type: !160)
!7254 = !DILocation(line: 1054, column: 18, scope: !7246)
!7255 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !7246, file: !245, line: 1054, type: !160)
!7256 = !DILocation(line: 1054, column: 35, scope: !7246)
!7257 = !DILocalVariable(name: "new_dst", arg: 6, scope: !7246, file: !245, line: 1054, type: !302)
!7258 = !DILocation(line: 1054, column: 62, scope: !7246)
!7259 = !DILocalVariable(name: "src_sb", arg: 7, scope: !7246, file: !245, line: 1055, type: !315)
!7260 = !DILocation(line: 1055, column: 30, scope: !7246)
!7261 = !DILocalVariable(name: "buf", scope: !7246, file: !245, line: 1057, type: !9)
!7262 = !DILocation(line: 1057, column: 9, scope: !7246)
!7263 = !DILocalVariable(name: "buf_alloc", scope: !7246, file: !245, line: 1058, type: !9)
!7264 = !DILocation(line: 1058, column: 9, scope: !7246)
!7265 = !DILocalVariable(name: "name_alloc", scope: !7246, file: !245, line: 1059, type: !9)
!7266 = !DILocation(line: 1059, column: 9, scope: !7246)
!7267 = !DILocalVariable(name: "dest_desc", scope: !7246, file: !245, line: 1060, type: !7)
!7268 = !DILocation(line: 1060, column: 7, scope: !7246)
!7269 = !DILocalVariable(name: "dest_errno", scope: !7246, file: !245, line: 1061, type: !7)
!7270 = !DILocation(line: 1061, column: 7, scope: !7246)
!7271 = !DILocalVariable(name: "source_desc", scope: !7246, file: !245, line: 1062, type: !7)
!7272 = !DILocation(line: 1062, column: 7, scope: !7246)
!7273 = !DILocalVariable(name: "src_mode", scope: !7246, file: !245, line: 1063, type: !160)
!7274 = !DILocation(line: 1063, column: 10, scope: !7246)
!7275 = !DILocation(line: 1063, column: 21, scope: !7246)
!7276 = !DILocation(line: 1063, column: 29, scope: !7246)
!7277 = !DILocalVariable(name: "sb", scope: !7246, file: !245, line: 1064, type: !317)
!7278 = !DILocation(line: 1064, column: 15, scope: !7246)
!7279 = !DILocalVariable(name: "src_open_sb", scope: !7246, file: !245, line: 1065, type: !317)
!7280 = !DILocation(line: 1065, column: 15, scope: !7246)
!7281 = !DILocalVariable(name: "return_val", scope: !7246, file: !245, line: 1066, type: !120)
!7282 = !DILocation(line: 1066, column: 8, scope: !7246)
!7283 = !DILocalVariable(name: "data_copy_required", scope: !7246, file: !245, line: 1067, type: !120)
!7284 = !DILocation(line: 1067, column: 8, scope: !7246)
!7285 = !DILocation(line: 1067, column: 29, scope: !7246)
!7286 = !DILocation(line: 1067, column: 32, scope: !7246)
!7287 = !DILocation(line: 1069, column: 23, scope: !7246)
!7288 = !DILocation(line: 1071, column: 27, scope: !7246)
!7289 = !DILocation(line: 1071, column: 30, scope: !7246)
!7290 = !DILocation(line: 1071, column: 42, scope: !7246)
!7291 = !DILocation(line: 1071, column: 24, scope: !7246)
!7292 = !DILocation(line: 1069, column: 17, scope: !7246)
!7293 = !DILocation(line: 1069, column: 15, scope: !7246)
!7294 = !DILocation(line: 1072, column: 7, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1072, column: 7)
!7296 = !DILocation(line: 1072, column: 19, scope: !7295)
!7297 = !DILocation(line: 1072, column: 7, scope: !7246)
!7298 = !DILocation(line: 1074, column: 17, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7295, file: !245, line: 1073, column: 5)
!7300 = !DILocation(line: 1074, column: 24, scope: !7299)
!7301 = !DILocation(line: 1074, column: 57, scope: !7299)
!7302 = !DILocation(line: 1074, column: 7, scope: !7299)
!7303 = !DILocation(line: 1075, column: 7, scope: !7299)
!7304 = !DILocation(line: 1078, column: 14, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1078, column: 7)
!7306 = !DILocation(line: 1078, column: 7, scope: !7305)
!7307 = !DILocation(line: 1078, column: 41, scope: !7305)
!7308 = !DILocation(line: 1078, column: 7, scope: !7246)
!7309 = !DILocation(line: 1080, column: 17, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7305, file: !245, line: 1079, column: 5)
!7311 = !DILocation(line: 1080, column: 24, scope: !7310)
!7312 = !DILocation(line: 1080, column: 46, scope: !7310)
!7313 = !DILocation(line: 1080, column: 7, scope: !7310)
!7314 = !DILocation(line: 1081, column: 18, scope: !7310)
!7315 = !DILocation(line: 1082, column: 7, scope: !7310)
!7316 = !DILocation(line: 1087, column: 9, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1087, column: 7)
!7318 = !DILocation(line: 1087, column: 7, scope: !7246)
!7319 = !DILocation(line: 1090, column: 14, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7317, file: !245, line: 1088, column: 5)
!7321 = !DILocation(line: 1091, column: 14, scope: !7320)
!7322 = !DILocation(line: 1089, column: 7, scope: !7320)
!7323 = !DILocation(line: 1092, column: 18, scope: !7320)
!7324 = !DILocation(line: 1093, column: 7, scope: !7320)
!7325 = !DILocation(line: 1098, column: 10, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1098, column: 7)
!7327 = !DILocation(line: 1098, column: 9, scope: !7326)
!7328 = !DILocation(line: 1098, column: 7, scope: !7246)
!7329 = !DILocalVariable(name: "open_flags", scope: !7330, file: !245, line: 1100, type: !7)
!7330 = distinct !DILexicalBlock(scope: !7326, file: !245, line: 1099, column: 5)
!7331 = !DILocation(line: 1100, column: 11, scope: !7330)
!7332 = !DILocation(line: 1101, column: 32, scope: !7330)
!7333 = !DILocation(line: 1101, column: 35, scope: !7330)
!7334 = !DILocation(line: 1101, column: 29, scope: !7330)
!7335 = !DILocation(line: 1102, column: 25, scope: !7330)
!7336 = !DILocation(line: 1102, column: 35, scope: !7330)
!7337 = !DILocation(line: 1102, column: 19, scope: !7330)
!7338 = !DILocation(line: 1102, column: 17, scope: !7330)
!7339 = !DILocation(line: 1103, column: 20, scope: !7330)
!7340 = !DILocation(line: 1103, column: 18, scope: !7330)
!7341 = !DILocation(line: 1112, column: 12, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7330, file: !245, line: 1112, column: 11)
!7343 = !DILocation(line: 1112, column: 15, scope: !7342)
!7344 = !DILocation(line: 1112, column: 36, scope: !7342)
!7345 = !DILocation(line: 1112, column: 39, scope: !7342)
!7346 = !DILocation(line: 1112, column: 42, scope: !7342)
!7347 = !DILocation(line: 1113, column: 11, scope: !7342)
!7348 = !DILocation(line: 1113, column: 19, scope: !7342)
!7349 = !DILocation(line: 1113, column: 16, scope: !7342)
!7350 = !DILocation(line: 1112, column: 11, scope: !7330)
!7351 = !DILocation(line: 1115, column: 40, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7353, file: !245, line: 1115, column: 15)
!7353 = distinct !DILexicalBlock(scope: !7342, file: !245, line: 1114, column: 9)
!7354 = !DILocation(line: 1115, column: 50, scope: !7352)
!7355 = !DILocation(line: 1115, column: 53, scope: !7352)
!7356 = !DILocation(line: 1116, column: 47, scope: !7352)
!7357 = !DILocation(line: 1115, column: 17, scope: !7352)
!7358 = !DILocation(line: 1115, column: 15, scope: !7353)
!7359 = !DILocation(line: 1118, column: 19, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7361, file: !245, line: 1118, column: 19)
!7361 = distinct !DILexicalBlock(scope: !7352, file: !245, line: 1117, column: 13)
!7362 = !DILocation(line: 1118, column: 22, scope: !7360)
!7363 = !DILocation(line: 1118, column: 19, scope: !7361)
!7364 = !DILocation(line: 1120, column: 30, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7360, file: !245, line: 1119, column: 17)
!7366 = !DILocation(line: 1121, column: 19, scope: !7365)
!7367 = !DILocation(line: 1123, column: 13, scope: !7361)
!7368 = !DILocation(line: 1124, column: 9, scope: !7353)
!7369 = !DILocation(line: 1126, column: 11, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7330, file: !245, line: 1126, column: 11)
!7371 = !DILocation(line: 1126, column: 21, scope: !7370)
!7372 = !DILocation(line: 1126, column: 25, scope: !7370)
!7373 = !DILocation(line: 1126, column: 28, scope: !7370)
!7374 = !DILocation(line: 1126, column: 31, scope: !7370)
!7375 = !DILocation(line: 1126, column: 11, scope: !7330)
!7376 = !DILocation(line: 1128, column: 23, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !245, line: 1128, column: 15)
!7378 = distinct !DILexicalBlock(scope: !7370, file: !245, line: 1127, column: 9)
!7379 = !DILocation(line: 1128, column: 15, scope: !7377)
!7380 = !DILocation(line: 1128, column: 33, scope: !7377)
!7381 = !DILocation(line: 1128, column: 15, scope: !7378)
!7382 = !DILocation(line: 1130, column: 25, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7377, file: !245, line: 1129, column: 13)
!7384 = !DILocation(line: 1130, column: 32, scope: !7383)
!7385 = !DILocation(line: 1130, column: 55, scope: !7383)
!7386 = !DILocation(line: 1130, column: 15, scope: !7383)
!7387 = !DILocation(line: 1131, column: 26, scope: !7383)
!7388 = !DILocation(line: 1132, column: 15, scope: !7383)
!7389 = !DILocation(line: 1134, column: 15, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7378, file: !245, line: 1134, column: 15)
!7391 = !DILocation(line: 1134, column: 18, scope: !7390)
!7392 = !DILocation(line: 1134, column: 15, scope: !7378)
!7393 = !DILocation(line: 1135, column: 21, scope: !7390)
!7394 = !DILocation(line: 1135, column: 40, scope: !7390)
!7395 = !DILocation(line: 1135, column: 13, scope: !7390)
!7396 = !DILocation(line: 1138, column: 12, scope: !7378)
!7397 = !DILocation(line: 1138, column: 20, scope: !7378)
!7398 = !DILocation(line: 1142, column: 15, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7378, file: !245, line: 1142, column: 15)
!7400 = !DILocation(line: 1142, column: 18, scope: !7399)
!7401 = !DILocation(line: 1142, column: 15, scope: !7378)
!7402 = !DILocation(line: 1144, column: 47, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !245, line: 1144, column: 19)
!7404 = distinct !DILexicalBlock(scope: !7399, file: !245, line: 1143, column: 13)
!7405 = !DILocation(line: 1144, column: 57, scope: !7403)
!7406 = !DILocation(line: 1144, column: 67, scope: !7403)
!7407 = !DILocation(line: 1145, column: 48, scope: !7403)
!7408 = !DILocation(line: 1145, column: 47, scope: !7403)
!7409 = !DILocation(line: 1145, column: 57, scope: !7403)
!7410 = !DILocation(line: 1144, column: 21, scope: !7403)
!7411 = !DILocation(line: 1144, column: 19, scope: !7404)
!7412 = !DILocation(line: 1147, column: 30, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7403, file: !245, line: 1146, column: 17)
!7414 = !DILocation(line: 1148, column: 19, scope: !7413)
!7415 = !DILocation(line: 1150, column: 13, scope: !7404)
!7416 = !DILocation(line: 1151, column: 9, scope: !7378)
!7417 = !DILocation(line: 1152, column: 5, scope: !7330)
!7418 = !DILocation(line: 1154, column: 8, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1154, column: 7)
!7420 = !DILocation(line: 1154, column: 7, scope: !7419)
!7421 = !DILocation(line: 1154, column: 7, scope: !7246)
!7422 = !DILocation(line: 1155, column: 5, scope: !7419)
!7423 = !DILabel(scope: !7424, name: "open_with_O_CREAT", file: !245, line: 1156)
!7424 = distinct !DILexicalBlock(scope: !7419, file: !245, line: 1155, column: 5)
!7425 = !DILocation(line: 1156, column: 5, scope: !7424)
!7426 = !DILocalVariable(name: "open_flags", scope: !7424, file: !245, line: 1158, type: !7)
!7427 = !DILocation(line: 1158, column: 11, scope: !7424)
!7428 = !DILocation(line: 1159, column: 25, scope: !7424)
!7429 = !DILocation(line: 1159, column: 35, scope: !7424)
!7430 = !DILocation(line: 1159, column: 46, scope: !7424)
!7431 = !DILocation(line: 1160, column: 25, scope: !7424)
!7432 = !DILocation(line: 1160, column: 37, scope: !7424)
!7433 = !DILocation(line: 1160, column: 36, scope: !7424)
!7434 = !DILocation(line: 1160, column: 34, scope: !7424)
!7435 = !DILocation(line: 1159, column: 19, scope: !7424)
!7436 = !DILocation(line: 1159, column: 17, scope: !7424)
!7437 = !DILocation(line: 1161, column: 20, scope: !7424)
!7438 = !DILocation(line: 1161, column: 18, scope: !7424)
!7439 = !DILocation(line: 1173, column: 11, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7424, file: !245, line: 1173, column: 11)
!7441 = !DILocation(line: 1173, column: 21, scope: !7440)
!7442 = !DILocation(line: 1173, column: 25, scope: !7440)
!7443 = !DILocation(line: 1173, column: 28, scope: !7440)
!7444 = !DILocation(line: 1173, column: 39, scope: !7440)
!7445 = !DILocation(line: 1173, column: 49, scope: !7440)
!7446 = !DILocation(line: 1173, column: 54, scope: !7440)
!7447 = !DILocation(line: 1173, column: 57, scope: !7440)
!7448 = !DILocation(line: 1173, column: 11, scope: !7424)
!7449 = !DILocalVariable(name: "dangling_link_sb", scope: !7450, file: !245, line: 1175, type: !317)
!7450 = distinct !DILexicalBlock(scope: !7440, file: !245, line: 1174, column: 9)
!7451 = !DILocation(line: 1175, column: 23, scope: !7450)
!7452 = !DILocation(line: 1176, column: 22, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7450, file: !245, line: 1176, column: 15)
!7454 = !DILocation(line: 1176, column: 15, scope: !7453)
!7455 = !DILocation(line: 1176, column: 51, scope: !7453)
!7456 = !DILocation(line: 1177, column: 15, scope: !7453)
!7457 = !DILocation(line: 1177, column: 18, scope: !7453)
!7458 = !DILocation(line: 1176, column: 15, scope: !7450)
!7459 = !DILocation(line: 1179, column: 19, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7461, file: !245, line: 1179, column: 19)
!7461 = distinct !DILexicalBlock(scope: !7453, file: !245, line: 1178, column: 13)
!7462 = !DILocation(line: 1179, column: 22, scope: !7460)
!7463 = !DILocation(line: 1179, column: 19, scope: !7461)
!7464 = !DILocation(line: 1181, column: 37, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7460, file: !245, line: 1180, column: 17)
!7466 = !DILocation(line: 1181, column: 47, scope: !7465)
!7467 = !DILocation(line: 1182, column: 37, scope: !7465)
!7468 = !DILocation(line: 1182, column: 49, scope: !7465)
!7469 = !DILocation(line: 1182, column: 48, scope: !7465)
!7470 = !DILocation(line: 1182, column: 46, scope: !7465)
!7471 = !DILocation(line: 1181, column: 31, scope: !7465)
!7472 = !DILocation(line: 1181, column: 29, scope: !7465)
!7473 = !DILocation(line: 1183, column: 32, scope: !7465)
!7474 = !DILocation(line: 1183, column: 30, scope: !7465)
!7475 = !DILocation(line: 1184, column: 17, scope: !7465)
!7476 = !DILocation(line: 1187, column: 32, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7460, file: !245, line: 1186, column: 17)
!7478 = !DILocation(line: 1188, column: 26, scope: !7477)
!7479 = !DILocation(line: 1187, column: 19, scope: !7477)
!7480 = !DILocation(line: 1189, column: 30, scope: !7477)
!7481 = !DILocation(line: 1190, column: 19, scope: !7477)
!7482 = !DILocation(line: 1192, column: 13, scope: !7461)
!7483 = !DILocation(line: 1193, column: 9, scope: !7450)
!7484 = !DILocation(line: 1197, column: 11, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7424, file: !245, line: 1197, column: 11)
!7486 = !DILocation(line: 1197, column: 21, scope: !7485)
!7487 = !DILocation(line: 1197, column: 25, scope: !7485)
!7488 = !DILocation(line: 1197, column: 28, scope: !7485)
!7489 = !DILocation(line: 1197, column: 39, scope: !7485)
!7490 = !DILocation(line: 1198, column: 11, scope: !7485)
!7491 = !DILocation(line: 1198, column: 15, scope: !7485)
!7492 = !DILocation(line: 1198, column: 14, scope: !7485)
!7493 = !DILocation(line: 1198, column: 24, scope: !7485)
!7494 = !DILocation(line: 1198, column: 27, scope: !7485)
!7495 = !DILocation(line: 1198, column: 44, scope: !7485)
!7496 = !DILocation(line: 1198, column: 36, scope: !7485)
!7497 = !DILocation(line: 1198, column: 54, scope: !7485)
!7498 = !DILocation(line: 1198, column: 59, scope: !7485)
!7499 = !DILocation(line: 1197, column: 11, scope: !7424)
!7500 = !DILocation(line: 1199, column: 20, scope: !7485)
!7501 = !DILocation(line: 1199, column: 9, scope: !7485)
!7502 = !DILocation(line: 1200, column: 5, scope: !7424)
!7503 = !DILocation(line: 1203, column: 27, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7419, file: !245, line: 1202, column: 5)
!7505 = !DILocation(line: 1206, column: 7, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1206, column: 7)
!7507 = !DILocation(line: 1206, column: 17, scope: !7506)
!7508 = !DILocation(line: 1206, column: 7, scope: !7246)
!7509 = !DILocation(line: 1218, column: 11, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !245, line: 1218, column: 11)
!7511 = distinct !DILexicalBlock(scope: !7506, file: !245, line: 1207, column: 5)
!7512 = !DILocation(line: 1218, column: 22, scope: !7510)
!7513 = !DILocation(line: 1218, column: 32, scope: !7510)
!7514 = !DILocation(line: 1218, column: 38, scope: !7510)
!7515 = !DILocation(line: 1218, column: 37, scope: !7510)
!7516 = !DILocation(line: 1218, column: 46, scope: !7510)
!7517 = !DILocation(line: 1218, column: 51, scope: !7510)
!7518 = !DILocation(line: 1218, column: 54, scope: !7510)
!7519 = !DILocation(line: 1218, column: 11, scope: !7511)
!7520 = !DILocation(line: 1220, column: 12, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7510, file: !245, line: 1219, column: 9)
!7522 = !DILocation(line: 1220, column: 20, scope: !7521)
!7523 = !DILocation(line: 1221, column: 11, scope: !7521)
!7524 = !DILocation(line: 1225, column: 17, scope: !7511)
!7525 = !DILocation(line: 1225, column: 29, scope: !7511)
!7526 = !DILocation(line: 1226, column: 14, scope: !7511)
!7527 = !DILocation(line: 1225, column: 7, scope: !7511)
!7528 = !DILocation(line: 1227, column: 18, scope: !7511)
!7529 = !DILocation(line: 1228, column: 7, scope: !7511)
!7530 = !DILocation(line: 1231, column: 14, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1231, column: 7)
!7532 = !DILocation(line: 1231, column: 7, scope: !7531)
!7533 = !DILocation(line: 1231, column: 30, scope: !7531)
!7534 = !DILocation(line: 1231, column: 7, scope: !7246)
!7535 = !DILocation(line: 1233, column: 17, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7531, file: !245, line: 1232, column: 5)
!7537 = !DILocation(line: 1233, column: 24, scope: !7536)
!7538 = !DILocation(line: 1233, column: 46, scope: !7536)
!7539 = !DILocation(line: 1233, column: 7, scope: !7536)
!7540 = !DILocation(line: 1234, column: 18, scope: !7536)
!7541 = !DILocation(line: 1235, column: 7, scope: !7536)
!7542 = !DILocation(line: 1239, column: 7, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1239, column: 7)
!7544 = !DILocation(line: 1239, column: 26, scope: !7543)
!7545 = !DILocation(line: 1239, column: 29, scope: !7543)
!7546 = !DILocation(line: 1239, column: 32, scope: !7543)
!7547 = !DILocation(line: 1239, column: 7, scope: !7246)
!7548 = !DILocalVariable(name: "clone_ok", scope: !7549, file: !245, line: 1241, type: !120)
!7549 = distinct !DILexicalBlock(scope: !7543, file: !245, line: 1240, column: 5)
!7550 = !DILocation(line: 1241, column: 12, scope: !7549)
!7551 = !DILocation(line: 1241, column: 35, scope: !7549)
!7552 = !DILocation(line: 1241, column: 46, scope: !7549)
!7553 = !DILocation(line: 1241, column: 23, scope: !7549)
!7554 = !DILocation(line: 1241, column: 59, scope: !7549)
!7555 = !DILocation(line: 1242, column: 11, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7549, file: !245, line: 1242, column: 11)
!7557 = !DILocation(line: 1242, column: 20, scope: !7556)
!7558 = !DILocation(line: 1242, column: 23, scope: !7556)
!7559 = !DILocation(line: 1242, column: 26, scope: !7556)
!7560 = !DILocation(line: 1242, column: 39, scope: !7556)
!7561 = !DILocation(line: 1242, column: 11, scope: !7549)
!7562 = !DILocation(line: 1244, column: 16, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !245, line: 1244, column: 15)
!7564 = distinct !DILexicalBlock(scope: !7556, file: !245, line: 1243, column: 9)
!7565 = !DILocation(line: 1244, column: 15, scope: !7564)
!7566 = !DILocation(line: 1246, column: 25, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7563, file: !245, line: 1245, column: 13)
!7568 = !DILocation(line: 1246, column: 32, scope: !7567)
!7569 = !DILocation(line: 1247, column: 22, scope: !7567)
!7570 = !DILocation(line: 1247, column: 47, scope: !7567)
!7571 = !DILocation(line: 1246, column: 15, scope: !7567)
!7572 = !DILocation(line: 1248, column: 26, scope: !7567)
!7573 = !DILocation(line: 1249, column: 15, scope: !7567)
!7574 = !DILocation(line: 1251, column: 30, scope: !7564)
!7575 = !DILocation(line: 1252, column: 9, scope: !7564)
!7576 = !DILocation(line: 1253, column: 5, scope: !7549)
!7577 = !DILocation(line: 1255, column: 7, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1255, column: 7)
!7579 = !DILocation(line: 1255, column: 7, scope: !7246)
!7580 = !DILocalVariable(name: "buf_alignment", scope: !7581, file: !245, line: 1258, type: !55)
!7581 = distinct !DILexicalBlock(scope: !7578, file: !245, line: 1256, column: 5)
!7582 = !DILocation(line: 1258, column: 14, scope: !7581)
!7583 = !DILocation(line: 1258, column: 30, scope: !7581)
!7584 = !DILocalVariable(name: "buf_size", scope: !7581, file: !245, line: 1259, type: !55)
!7585 = !DILocation(line: 1259, column: 14, scope: !7581)
!7586 = !DILocation(line: 1259, column: 25, scope: !7581)
!7587 = !DILocalVariable(name: "hole_size", scope: !7581, file: !245, line: 1260, type: !55)
!7588 = !DILocation(line: 1260, column: 14, scope: !7581)
!7589 = !DILocation(line: 1260, column: 26, scope: !7581)
!7590 = !{!3182, !3183, i64 56}
!7591 = !DILocation(line: 1262, column: 17, scope: !7581)
!7592 = !DILocation(line: 1262, column: 7, scope: !7581)
!7593 = !DILocalVariable(name: "make_holes", scope: !7581, file: !245, line: 1265, type: !120)
!7594 = !DILocation(line: 1265, column: 12, scope: !7581)
!7595 = !DILocalVariable(name: "sparse_src", scope: !7581, file: !245, line: 1266, type: !120)
!7596 = !DILocation(line: 1266, column: 12, scope: !7581)
!7597 = !DILocation(line: 1266, column: 25, scope: !7581)
!7598 = !DILocation(line: 1268, column: 11, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7581, file: !245, line: 1268, column: 11)
!7600 = !DILocation(line: 1268, column: 11, scope: !7581)
!7601 = !DILocation(line: 1272, column: 15, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !245, line: 1272, column: 15)
!7603 = distinct !DILexicalBlock(scope: !7599, file: !245, line: 1269, column: 9)
!7604 = !DILocation(line: 1272, column: 18, scope: !7602)
!7605 = !DILocation(line: 1272, column: 30, scope: !7602)
!7606 = !DILocation(line: 1272, column: 15, scope: !7603)
!7607 = !DILocation(line: 1273, column: 24, scope: !7602)
!7608 = !DILocation(line: 1273, column: 13, scope: !7602)
!7609 = !DILocation(line: 1279, column: 15, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7603, file: !245, line: 1279, column: 15)
!7611 = !DILocation(line: 1279, column: 18, scope: !7610)
!7612 = !DILocation(line: 1279, column: 30, scope: !7610)
!7613 = !DILocation(line: 1279, column: 45, scope: !7610)
!7614 = !DILocation(line: 1279, column: 48, scope: !7610)
!7615 = !DILocation(line: 1279, column: 15, scope: !7603)
!7616 = !DILocation(line: 1280, column: 24, scope: !7610)
!7617 = !DILocation(line: 1280, column: 13, scope: !7610)
!7618 = !DILocation(line: 1281, column: 9, scope: !7603)
!7619 = !DILocation(line: 1285, column: 13, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7581, file: !245, line: 1285, column: 11)
!7621 = !DILocation(line: 1285, column: 11, scope: !7581)
!7622 = !DILocalVariable(name: "blcm_max", scope: !7623, file: !245, line: 1289, type: !55)
!7623 = distinct !DILexicalBlock(scope: !7620, file: !245, line: 1286, column: 9)
!7624 = !DILocation(line: 1289, column: 18, scope: !7623)
!7625 = !DILocation(line: 1289, column: 57, scope: !7623)
!7626 = !DILocation(line: 1289, column: 55, scope: !7623)
!7627 = !DILocalVariable(name: "blcm", scope: !7623, file: !245, line: 1290, type: !55)
!7628 = !DILocation(line: 1290, column: 18, scope: !7623)
!7629 = !DILocation(line: 1290, column: 37, scope: !7623)
!7630 = !DILocation(line: 1290, column: 63, scope: !7623)
!7631 = !DILocation(line: 1291, column: 37, scope: !7623)
!7632 = !DILocation(line: 1290, column: 25, scope: !7623)
!7633 = !DILocation(line: 1295, column: 15, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7623, file: !245, line: 1295, column: 15)
!7635 = !DILocation(line: 1295, column: 45, scope: !7634)
!7636 = !DILocation(line: 1295, column: 60, scope: !7634)
!7637 = !DILocation(line: 1295, column: 70, scope: !7634)
!7638 = !DILocation(line: 1295, column: 68, scope: !7634)
!7639 = !DILocation(line: 1295, column: 15, scope: !7623)
!7640 = !DILocation(line: 1296, column: 36, scope: !7634)
!7641 = !DILocation(line: 1296, column: 44, scope: !7634)
!7642 = !DILocation(line: 1296, column: 22, scope: !7634)
!7643 = !DILocation(line: 1296, column: 13, scope: !7634)
!7644 = !DILocation(line: 1301, column: 23, scope: !7623)
!7645 = !DILocation(line: 1301, column: 28, scope: !7623)
!7646 = !DILocation(line: 1301, column: 20, scope: !7623)
!7647 = !DILocation(line: 1302, column: 23, scope: !7623)
!7648 = !DILocation(line: 1302, column: 34, scope: !7623)
!7649 = !DILocation(line: 1302, column: 32, scope: !7623)
!7650 = !DILocation(line: 1302, column: 20, scope: !7623)
!7651 = !DILocation(line: 1303, column: 15, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7623, file: !245, line: 1303, column: 15)
!7653 = !DILocation(line: 1303, column: 24, scope: !7652)
!7654 = !DILocation(line: 1303, column: 29, scope: !7652)
!7655 = !DILocation(line: 1303, column: 32, scope: !7652)
!7656 = !DILocation(line: 1303, column: 43, scope: !7652)
!7657 = !DILocation(line: 1303, column: 41, scope: !7652)
!7658 = !DILocation(line: 1303, column: 15, scope: !7623)
!7659 = !DILocation(line: 1304, column: 24, scope: !7652)
!7660 = !DILocation(line: 1304, column: 22, scope: !7652)
!7661 = !DILocation(line: 1304, column: 13, scope: !7652)
!7662 = !DILocation(line: 1305, column: 9, scope: !7623)
!7663 = !DILocation(line: 1307, column: 28, scope: !7581)
!7664 = !DILocation(line: 1307, column: 39, scope: !7581)
!7665 = !DILocation(line: 1307, column: 37, scope: !7581)
!7666 = !DILocation(line: 1307, column: 19, scope: !7581)
!7667 = !DILocation(line: 1307, column: 17, scope: !7581)
!7668 = !DILocation(line: 1308, column: 24, scope: !7581)
!7669 = !DILocation(line: 1308, column: 35, scope: !7581)
!7670 = !DILocation(line: 1308, column: 13, scope: !7581)
!7671 = !DILocation(line: 1308, column: 11, scope: !7581)
!7672 = !DILocation(line: 1310, column: 11, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7581, file: !245, line: 1310, column: 11)
!7674 = !DILocation(line: 1310, column: 11, scope: !7581)
!7675 = !DILocalVariable(name: "normal_copy_required", scope: !7676, file: !245, line: 1312, type: !120)
!7676 = distinct !DILexicalBlock(scope: !7673, file: !245, line: 1311, column: 9)
!7677 = !DILocation(line: 1312, column: 16, scope: !7676)
!7678 = !DILocation(line: 1318, column: 28, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7676, file: !245, line: 1318, column: 15)
!7680 = !DILocation(line: 1318, column: 41, scope: !7679)
!7681 = !DILocation(line: 1318, column: 52, scope: !7679)
!7682 = !DILocation(line: 1318, column: 57, scope: !7679)
!7683 = !DILocation(line: 1318, column: 67, scope: !7679)
!7684 = !DILocation(line: 1319, column: 40, scope: !7679)
!7685 = !DILocation(line: 1320, column: 28, scope: !7679)
!7686 = !DILocation(line: 1320, column: 41, scope: !7679)
!7687 = !DILocation(line: 1320, column: 44, scope: !7679)
!7688 = !DILocation(line: 1321, column: 28, scope: !7679)
!7689 = !DILocation(line: 1321, column: 38, scope: !7679)
!7690 = !DILocation(line: 1318, column: 15, scope: !7679)
!7691 = !DILocation(line: 1318, column: 15, scope: !7676)
!7692 = !DILocation(line: 1322, column: 13, scope: !7679)
!7693 = !DILocation(line: 1324, column: 17, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7676, file: !245, line: 1324, column: 15)
!7695 = !DILocation(line: 1324, column: 15, scope: !7676)
!7696 = !DILocation(line: 1326, column: 26, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7694, file: !245, line: 1325, column: 13)
!7698 = !DILocation(line: 1327, column: 15, scope: !7697)
!7699 = !DILocation(line: 1329, column: 9, scope: !7676)
!7700 = !DILocalVariable(name: "n_read", scope: !7581, file: !245, line: 1331, type: !248)
!7701 = !DILocation(line: 1331, column: 13, scope: !7581)
!7702 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7581, file: !245, line: 1332, type: !120)
!7703 = !DILocation(line: 1332, column: 12, scope: !7581)
!7704 = !DILocation(line: 1333, column: 26, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7581, file: !245, line: 1333, column: 11)
!7706 = !DILocation(line: 1333, column: 39, scope: !7705)
!7707 = !DILocation(line: 1333, column: 50, scope: !7705)
!7708 = !DILocation(line: 1333, column: 55, scope: !7705)
!7709 = !DILocation(line: 1334, column: 26, scope: !7705)
!7710 = !DILocation(line: 1334, column: 39, scope: !7705)
!7711 = !DILocation(line: 1335, column: 26, scope: !7705)
!7712 = !DILocation(line: 1335, column: 29, scope: !7705)
!7713 = !DILocation(line: 1335, column: 41, scope: !7705)
!7714 = !DILocation(line: 1335, column: 59, scope: !7705)
!7715 = !DILocation(line: 1335, column: 69, scope: !7705)
!7716 = !DILocation(line: 1333, column: 13, scope: !7705)
!7717 = !DILocation(line: 1333, column: 11, scope: !7581)
!7718 = !DILocation(line: 1339, column: 22, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7705, file: !245, line: 1338, column: 9)
!7720 = !DILocation(line: 1340, column: 11, scope: !7719)
!7721 = !DILocation(line: 1342, column: 16, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7705, file: !245, line: 1342, column: 16)
!7723 = !DILocation(line: 1342, column: 34, scope: !7722)
!7724 = !DILocation(line: 1342, column: 48, scope: !7722)
!7725 = !DILocation(line: 1342, column: 59, scope: !7722)
!7726 = !DILocation(line: 1342, column: 37, scope: !7722)
!7727 = !DILocation(line: 1342, column: 67, scope: !7722)
!7728 = !DILocation(line: 1342, column: 16, scope: !7705)
!7729 = !DILocation(line: 1344, column: 21, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7722, file: !245, line: 1343, column: 9)
!7731 = !DILocation(line: 1344, column: 28, scope: !7730)
!7732 = !DILocation(line: 1344, column: 54, scope: !7730)
!7733 = !DILocation(line: 1344, column: 11, scope: !7730)
!7734 = !DILocation(line: 1345, column: 22, scope: !7730)
!7735 = !DILocation(line: 1346, column: 11, scope: !7730)
!7736 = !DILocation(line: 1348, column: 5, scope: !7581)
!7737 = !DILabel(scope: !7246, name: "preserve_metadata", file: !245, line: 1350)
!7738 = !DILocation(line: 1350, column: 1, scope: !7246)
!7739 = !DILocation(line: 1351, column: 7, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1351, column: 7)
!7741 = !DILocation(line: 1351, column: 10, scope: !7740)
!7742 = !DILocation(line: 1351, column: 7, scope: !7246)
!7743 = !DILocalVariable(name: "timespec", scope: !7744, file: !245, line: 1353, type: !357)
!7744 = distinct !DILexicalBlock(scope: !7740, file: !245, line: 1352, column: 5)
!7745 = !DILocation(line: 1353, column: 23, scope: !7744)
!7746 = !DILocation(line: 1354, column: 7, scope: !7744)
!7747 = !DILocation(line: 1354, column: 37, scope: !7744)
!7748 = !DILocation(line: 1354, column: 21, scope: !7744)
!7749 = !DILocation(line: 1355, column: 7, scope: !7744)
!7750 = !DILocation(line: 1355, column: 37, scope: !7744)
!7751 = !DILocation(line: 1355, column: 21, scope: !7744)
!7752 = !DILocation(line: 1357, column: 22, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7744, file: !245, line: 1357, column: 11)
!7754 = !DILocation(line: 1357, column: 33, scope: !7753)
!7755 = !DILocation(line: 1357, column: 43, scope: !7753)
!7756 = !DILocation(line: 1357, column: 11, scope: !7753)
!7757 = !DILocation(line: 1357, column: 53, scope: !7753)
!7758 = !DILocation(line: 1357, column: 11, scope: !7744)
!7759 = !DILocation(line: 1359, column: 21, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7753, file: !245, line: 1358, column: 9)
!7761 = !DILocation(line: 1359, column: 28, scope: !7760)
!7762 = !DILocation(line: 1359, column: 58, scope: !7760)
!7763 = !DILocation(line: 1359, column: 11, scope: !7760)
!7764 = !DILocation(line: 1360, column: 15, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7760, file: !245, line: 1360, column: 15)
!7766 = !DILocation(line: 1360, column: 18, scope: !7765)
!7767 = !DILocation(line: 1360, column: 15, scope: !7760)
!7768 = !DILocation(line: 1362, column: 26, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7765, file: !245, line: 1361, column: 13)
!7770 = !DILocation(line: 1363, column: 15, scope: !7769)
!7771 = !DILocation(line: 1365, column: 9, scope: !7760)
!7772 = !DILocation(line: 1366, column: 5, scope: !7744)
!7773 = !DILocation(line: 1370, column: 7, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1370, column: 7)
!7775 = !DILocation(line: 1370, column: 10, scope: !7774)
!7776 = !DILocation(line: 1370, column: 29, scope: !7774)
!7777 = !DILocation(line: 1370, column: 34, scope: !7774)
!7778 = !DILocation(line: 1370, column: 7, scope: !7246)
!7779 = !DILocation(line: 1372, column: 26, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7774, file: !245, line: 1371, column: 5)
!7781 = !DILocation(line: 1372, column: 29, scope: !7780)
!7782 = !DILocation(line: 1372, column: 39, scope: !7780)
!7783 = !DILocation(line: 1372, column: 50, scope: !7780)
!7784 = !DILocation(line: 1372, column: 59, scope: !7780)
!7785 = !DILocation(line: 1372, column: 58, scope: !7780)
!7786 = !DILocation(line: 1372, column: 15, scope: !7780)
!7787 = !DILocation(line: 1372, column: 7, scope: !7780)
!7788 = !DILocation(line: 1375, column: 22, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7780, file: !245, line: 1373, column: 9)
!7790 = !DILocation(line: 1376, column: 11, scope: !7789)
!7791 = !DILocation(line: 1379, column: 20, scope: !7789)
!7792 = !DILocation(line: 1380, column: 11, scope: !7789)
!7793 = !DILocation(line: 1382, column: 5, scope: !7780)
!7794 = !DILocation(line: 1387, column: 7, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1387, column: 7)
!7796 = !DILocation(line: 1387, column: 10, scope: !7795)
!7797 = !DILocation(line: 1387, column: 7, scope: !7246)
!7798 = !DILocalVariable(name: "access_changed", scope: !7799, file: !245, line: 1389, type: !120)
!7799 = distinct !DILexicalBlock(scope: !7795, file: !245, line: 1388, column: 5)
!7800 = !DILocation(line: 1389, column: 12, scope: !7799)
!7801 = !DILocation(line: 1391, column: 16, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7799, file: !245, line: 1391, column: 11)
!7803 = !DILocation(line: 1391, column: 24, scope: !7802)
!7804 = !DILocation(line: 1391, column: 35, scope: !7802)
!7805 = !DILocation(line: 1391, column: 38, scope: !7802)
!7806 = !DILocation(line: 1391, column: 49, scope: !7802)
!7807 = !DILocation(line: 1391, column: 11, scope: !7799)
!7808 = !DILocation(line: 1393, column: 46, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7802, file: !245, line: 1392, column: 9)
!7810 = !DILocation(line: 1393, column: 57, scope: !7809)
!7811 = !DILocation(line: 1393, column: 28, scope: !7809)
!7812 = !DILocation(line: 1394, column: 65, scope: !7809)
!7813 = !DILocation(line: 1393, column: 26, scope: !7809)
!7814 = !DILocation(line: 1395, column: 9, scope: !7809)
!7815 = !DILocation(line: 1397, column: 23, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7799, file: !245, line: 1397, column: 11)
!7817 = !DILocation(line: 1397, column: 33, scope: !7816)
!7818 = !DILocation(line: 1397, column: 46, scope: !7816)
!7819 = !DILocation(line: 1397, column: 56, scope: !7816)
!7820 = !DILocation(line: 1397, column: 67, scope: !7816)
!7821 = !DILocation(line: 1397, column: 12, scope: !7816)
!7822 = !DILocation(line: 1398, column: 11, scope: !7816)
!7823 = !DILocation(line: 1398, column: 14, scope: !7816)
!7824 = !DILocation(line: 1398, column: 17, scope: !7816)
!7825 = !DILocation(line: 1397, column: 11, scope: !7799)
!7826 = !DILocation(line: 1399, column: 20, scope: !7816)
!7827 = !DILocation(line: 1399, column: 9, scope: !7816)
!7828 = !DILocation(line: 1401, column: 11, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7799, file: !245, line: 1401, column: 11)
!7830 = !DILocation(line: 1401, column: 11, scope: !7799)
!7831 = !DILocation(line: 1402, column: 27, scope: !7829)
!7832 = !DILocation(line: 1402, column: 38, scope: !7829)
!7833 = !DILocation(line: 1402, column: 48, scope: !7829)
!7834 = !DILocation(line: 1402, column: 60, scope: !7829)
!7835 = !DILocation(line: 1402, column: 59, scope: !7829)
!7836 = !DILocation(line: 1402, column: 57, scope: !7829)
!7837 = !DILocation(line: 1402, column: 9, scope: !7829)
!7838 = !DILocation(line: 1403, column: 5, scope: !7799)
!7839 = !DILocation(line: 1405, column: 15, scope: !7246)
!7840 = !DILocation(line: 1405, column: 25, scope: !7246)
!7841 = !DILocation(line: 1405, column: 36, scope: !7246)
!7842 = !DILocation(line: 1405, column: 3, scope: !7246)
!7843 = !DILocation(line: 1407, column: 7, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1407, column: 7)
!7845 = !DILocation(line: 1407, column: 10, scope: !7844)
!7846 = !DILocation(line: 1407, column: 24, scope: !7844)
!7847 = !DILocation(line: 1407, column: 27, scope: !7844)
!7848 = !DILocation(line: 1407, column: 30, scope: !7844)
!7849 = !DILocation(line: 1407, column: 7, scope: !7246)
!7850 = !DILocation(line: 1409, column: 21, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7852, file: !245, line: 1409, column: 11)
!7852 = distinct !DILexicalBlock(scope: !7844, file: !245, line: 1408, column: 5)
!7853 = !DILocation(line: 1409, column: 31, scope: !7851)
!7854 = !DILocation(line: 1409, column: 44, scope: !7851)
!7855 = !DILocation(line: 1409, column: 54, scope: !7851)
!7856 = !DILocation(line: 1409, column: 65, scope: !7851)
!7857 = !DILocation(line: 1409, column: 11, scope: !7851)
!7858 = !DILocation(line: 1409, column: 75, scope: !7851)
!7859 = !DILocation(line: 1410, column: 11, scope: !7851)
!7860 = !DILocation(line: 1410, column: 14, scope: !7851)
!7861 = !DILocation(line: 1410, column: 17, scope: !7851)
!7862 = !DILocation(line: 1409, column: 11, scope: !7852)
!7863 = !DILocation(line: 1411, column: 20, scope: !7851)
!7864 = !DILocation(line: 1411, column: 9, scope: !7851)
!7865 = !DILocation(line: 1412, column: 5, scope: !7852)
!7866 = !DILocation(line: 1413, column: 12, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7844, file: !245, line: 1413, column: 12)
!7868 = !DILocation(line: 1413, column: 15, scope: !7867)
!7869 = !DILocation(line: 1413, column: 12, scope: !7844)
!7870 = !DILocation(line: 1415, column: 20, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7872, file: !245, line: 1415, column: 11)
!7872 = distinct !DILexicalBlock(scope: !7867, file: !245, line: 1414, column: 5)
!7873 = !DILocation(line: 1415, column: 30, scope: !7871)
!7874 = !DILocation(line: 1415, column: 41, scope: !7871)
!7875 = !DILocation(line: 1415, column: 44, scope: !7871)
!7876 = !DILocation(line: 1415, column: 11, scope: !7871)
!7877 = !DILocation(line: 1415, column: 50, scope: !7871)
!7878 = !DILocation(line: 1415, column: 11, scope: !7872)
!7879 = !DILocation(line: 1416, column: 20, scope: !7871)
!7880 = !DILocation(line: 1416, column: 9, scope: !7871)
!7881 = !DILocation(line: 1417, column: 5, scope: !7872)
!7882 = !DILocation(line: 1418, column: 12, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7867, file: !245, line: 1418, column: 12)
!7884 = !DILocation(line: 1418, column: 15, scope: !7883)
!7885 = !DILocation(line: 1418, column: 41, scope: !7883)
!7886 = !DILocation(line: 1418, column: 45, scope: !7883)
!7887 = !DILocation(line: 1418, column: 44, scope: !7883)
!7888 = !DILocation(line: 1418, column: 12, scope: !7867)
!7889 = !DILocation(line: 1420, column: 20, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7891, file: !245, line: 1420, column: 11)
!7891 = distinct !DILexicalBlock(scope: !7883, file: !245, line: 1419, column: 5)
!7892 = !DILocation(line: 1420, column: 30, scope: !7890)
!7893 = !DILocation(line: 1420, column: 56, scope: !7890)
!7894 = !DILocation(line: 1420, column: 55, scope: !7890)
!7895 = !DILocation(line: 1420, column: 53, scope: !7890)
!7896 = !DILocation(line: 1420, column: 11, scope: !7890)
!7897 = !DILocation(line: 1420, column: 73, scope: !7890)
!7898 = !DILocation(line: 1420, column: 11, scope: !7891)
!7899 = !DILocation(line: 1421, column: 20, scope: !7890)
!7900 = !DILocation(line: 1421, column: 9, scope: !7890)
!7901 = !DILocation(line: 1422, column: 5, scope: !7891)
!7902 = !DILocation(line: 1423, column: 12, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7883, file: !245, line: 1423, column: 12)
!7904 = !DILocation(line: 1423, column: 12, scope: !7883)
!7905 = !DILocation(line: 1425, column: 32, scope: !7906)
!7906 = distinct !DILexicalBlock(scope: !7903, file: !245, line: 1424, column: 5)
!7907 = !DILocation(line: 1425, column: 30, scope: !7906)
!7908 = !DILocation(line: 1425, column: 27, scope: !7906)
!7909 = !DILocation(line: 1426, column: 11, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7906, file: !245, line: 1426, column: 11)
!7911 = !DILocation(line: 1427, column: 11, scope: !7910)
!7912 = !DILocation(line: 1427, column: 32, scope: !7910)
!7913 = !DILocation(line: 1427, column: 43, scope: !7910)
!7914 = !DILocation(line: 1427, column: 53, scope: !7910)
!7915 = !DILocation(line: 1427, column: 14, scope: !7910)
!7916 = !DILocation(line: 1427, column: 63, scope: !7910)
!7917 = !DILocation(line: 1426, column: 11, scope: !7906)
!7918 = !DILocation(line: 1429, column: 21, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7910, file: !245, line: 1428, column: 9)
!7920 = !DILocation(line: 1429, column: 28, scope: !7919)
!7921 = !DILocation(line: 1430, column: 18, scope: !7919)
!7922 = !DILocation(line: 1429, column: 11, scope: !7919)
!7923 = !DILocation(line: 1431, column: 15, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7919, file: !245, line: 1431, column: 15)
!7925 = !DILocation(line: 1431, column: 18, scope: !7924)
!7926 = !DILocation(line: 1431, column: 15, scope: !7919)
!7927 = !DILocation(line: 1432, column: 24, scope: !7924)
!7928 = !DILocation(line: 1432, column: 13, scope: !7924)
!7929 = !DILocation(line: 1433, column: 9, scope: !7919)
!7930 = !DILocation(line: 1434, column: 5, scope: !7906)
!7931 = !DILabel(scope: !7246, name: "close_src_and_dst_desc", file: !245, line: 1436)
!7932 = !DILocation(line: 1436, column: 1, scope: !7246)
!7933 = !DILocation(line: 1437, column: 14, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1437, column: 7)
!7935 = !DILocation(line: 1437, column: 7, scope: !7934)
!7936 = !DILocation(line: 1437, column: 25, scope: !7934)
!7937 = !DILocation(line: 1437, column: 7, scope: !7246)
!7938 = !DILocation(line: 1439, column: 17, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7934, file: !245, line: 1438, column: 5)
!7940 = !DILocation(line: 1439, column: 24, scope: !7939)
!7941 = !DILocation(line: 1439, column: 49, scope: !7939)
!7942 = !DILocation(line: 1439, column: 7, scope: !7939)
!7943 = !DILocation(line: 1440, column: 18, scope: !7939)
!7944 = !DILocation(line: 1441, column: 5, scope: !7939)
!7945 = !DILocation(line: 1437, column: 27, scope: !7934)
!7946 = !DILabel(scope: !7246, name: "close_src_desc", file: !245, line: 1442)
!7947 = !DILocation(line: 1442, column: 1, scope: !7246)
!7948 = !DILocation(line: 1443, column: 14, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7246, file: !245, line: 1443, column: 7)
!7950 = !DILocation(line: 1443, column: 7, scope: !7949)
!7951 = !DILocation(line: 1443, column: 27, scope: !7949)
!7952 = !DILocation(line: 1443, column: 7, scope: !7246)
!7953 = !DILocation(line: 1445, column: 17, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7949, file: !245, line: 1444, column: 5)
!7955 = !DILocation(line: 1445, column: 24, scope: !7954)
!7956 = !DILocation(line: 1445, column: 49, scope: !7954)
!7957 = !DILocation(line: 1445, column: 7, scope: !7954)
!7958 = !DILocation(line: 1446, column: 18, scope: !7954)
!7959 = !DILocation(line: 1447, column: 5, scope: !7954)
!7960 = !DILocation(line: 1449, column: 9, scope: !7246)
!7961 = !DILocation(line: 1449, column: 3, scope: !7246)
!7962 = !DILocation(line: 1450, column: 9, scope: !7246)
!7963 = !DILocation(line: 1450, column: 3, scope: !7246)
!7964 = !DILocation(line: 1451, column: 10, scope: !7246)
!7965 = !DILocation(line: 1451, column: 3, scope: !7246)
!7966 = !DILocation(line: 1452, column: 1, scope: !7246)
!7967 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !245, file: !245, line: 1805, type: !134, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7968 = !DILocation(line: 1807, column: 7, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7967, file: !245, line: 1807, column: 7)
!7970 = !DILocation(line: 1807, column: 29, scope: !7969)
!7971 = !DILocation(line: 1807, column: 7, scope: !7967)
!7972 = !DILocation(line: 1808, column: 5, scope: !7969)
!7973 = !DILocation(line: 1810, column: 1, scope: !7967)
!7974 = distinct !DISubprogram(name: "chown_failure_ok", scope: !245, file: !245, line: 3061, type: !303, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7975 = !DILocalVariable(name: "x", arg: 1, scope: !7974, file: !245, line: 3061, type: !252)
!7976 = !DILocation(line: 3061, column: 44, scope: !7974)
!7977 = !DILocation(line: 3067, column: 12, scope: !7974)
!7978 = !DILocation(line: 3067, column: 18, scope: !7974)
!7979 = !DILocation(line: 3067, column: 27, scope: !7974)
!7980 = !DILocation(line: 3067, column: 30, scope: !7974)
!7981 = !DILocation(line: 3067, column: 36, scope: !7974)
!7982 = !DILocation(line: 3067, column: 47, scope: !7974)
!7983 = !DILocation(line: 3067, column: 51, scope: !7974)
!7984 = !DILocation(line: 3067, column: 54, scope: !7974)
!7985 = !{!3156, !3110, i64 26}
!7986 = !DILocation(line: 3067, column: 50, scope: !7974)
!7987 = !DILocation(line: 0, scope: !7974)
!7988 = !DILocation(line: 3067, column: 3, scope: !7974)
!7989 = distinct !DISubprogram(name: "utimens_symlink", scope: !245, file: !245, line: 189, type: !471, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!7990 = !DILocalVariable(name: "file", arg: 1, scope: !7989, file: !245, line: 189, type: !115)
!7991 = !DILocation(line: 189, column: 30, scope: !7989)
!7992 = !DILocalVariable(name: "timespec", arg: 2, scope: !7989, file: !245, line: 189, type: !473)
!7993 = !DILocation(line: 189, column: 59, scope: !7989)
!7994 = !DILocalVariable(name: "err", scope: !7989, file: !245, line: 191, type: !7)
!7995 = !DILocation(line: 191, column: 7, scope: !7989)
!7996 = !DILocation(line: 191, column: 23, scope: !7989)
!7997 = !DILocation(line: 191, column: 29, scope: !7989)
!7998 = !DILocation(line: 191, column: 13, scope: !7989)
!7999 = !DILocation(line: 195, column: 7, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7989, file: !245, line: 195, column: 7)
!8001 = !DILocation(line: 195, column: 11, scope: !8000)
!8002 = !DILocation(line: 195, column: 14, scope: !8000)
!8003 = !DILocation(line: 195, column: 20, scope: !8000)
!8004 = !DILocation(line: 195, column: 7, scope: !7989)
!8005 = !DILocation(line: 196, column: 9, scope: !8000)
!8006 = !DILocation(line: 196, column: 5, scope: !8000)
!8007 = !DILocation(line: 197, column: 10, scope: !7989)
!8008 = !DILocation(line: 197, column: 3, scope: !7989)
!8009 = distinct !DISubprogram(name: "set_owner", scope: !245, file: !245, line: 816, type: !475, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8010 = !DILocalVariable(name: "x", arg: 1, scope: !8009, file: !245, line: 816, type: !252)
!8011 = !DILocation(line: 816, column: 37, scope: !8009)
!8012 = !DILocalVariable(name: "dst_name", arg: 2, scope: !8009, file: !245, line: 816, type: !115)
!8013 = !DILocation(line: 816, column: 52, scope: !8009)
!8014 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !8009, file: !245, line: 816, type: !7)
!8015 = !DILocation(line: 816, column: 66, scope: !8009)
!8016 = !DILocalVariable(name: "src_sb", arg: 4, scope: !8009, file: !245, line: 817, type: !315)
!8017 = !DILocation(line: 817, column: 31, scope: !8009)
!8018 = !DILocalVariable(name: "new_dst", arg: 5, scope: !8009, file: !245, line: 817, type: !120)
!8019 = !DILocation(line: 817, column: 44, scope: !8009)
!8020 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !8009, file: !245, line: 818, type: !315)
!8021 = !DILocation(line: 818, column: 31, scope: !8009)
!8022 = !DILocalVariable(name: "uid", scope: !8009, file: !245, line: 820, type: !477)
!8023 = !DILocation(line: 820, column: 9, scope: !8009)
!8024 = !DILocation(line: 820, column: 15, scope: !8009)
!8025 = !DILocation(line: 820, column: 23, scope: !8009)
!8026 = !DILocalVariable(name: "gid", scope: !8009, file: !245, line: 821, type: !478)
!8027 = !DILocation(line: 821, column: 9, scope: !8009)
!8028 = !DILocation(line: 821, column: 15, scope: !8009)
!8029 = !DILocation(line: 821, column: 23, scope: !8009)
!8030 = !DILocation(line: 829, column: 8, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8009, file: !245, line: 829, column: 7)
!8032 = !DILocation(line: 829, column: 16, scope: !8031)
!8033 = !DILocation(line: 829, column: 20, scope: !8031)
!8034 = !DILocation(line: 829, column: 23, scope: !8031)
!8035 = !DILocation(line: 829, column: 37, scope: !8031)
!8036 = !DILocation(line: 829, column: 40, scope: !8031)
!8037 = !DILocation(line: 829, column: 43, scope: !8031)
!8038 = !DILocation(line: 829, column: 53, scope: !8031)
!8039 = !DILocation(line: 829, column: 56, scope: !8031)
!8040 = !DILocation(line: 829, column: 59, scope: !8031)
!8041 = !DILocation(line: 829, column: 7, scope: !8009)
!8042 = !DILocalVariable(name: "old_mode", scope: !8043, file: !245, line: 831, type: !160)
!8043 = distinct !DILexicalBlock(scope: !8031, file: !245, line: 830, column: 5)
!8044 = !DILocation(line: 831, column: 14, scope: !8043)
!8045 = !DILocation(line: 831, column: 25, scope: !8043)
!8046 = !DILocation(line: 831, column: 33, scope: !8043)
!8047 = !DILocalVariable(name: "new_mode", scope: !8043, file: !245, line: 832, type: !160)
!8048 = !DILocation(line: 832, column: 14, scope: !8043)
!8049 = !DILocation(line: 833, column: 10, scope: !8043)
!8050 = !DILocation(line: 833, column: 13, scope: !8043)
!8051 = !DILocation(line: 833, column: 27, scope: !8043)
!8052 = !DILocation(line: 833, column: 30, scope: !8043)
!8053 = !DILocation(line: 833, column: 33, scope: !8043)
!8054 = !DILocation(line: 833, column: 45, scope: !8043)
!8055 = !DILocation(line: 833, column: 53, scope: !8043)
!8056 = !DILocation(line: 833, column: 63, scope: !8043)
!8057 = !DILocation(line: 833, column: 66, scope: !8043)
!8058 = !DILocalVariable(name: "restrictive_temp_mode", scope: !8043, file: !245, line: 834, type: !160)
!8059 = !DILocation(line: 834, column: 14, scope: !8043)
!8060 = !DILocation(line: 834, column: 38, scope: !8043)
!8061 = !DILocation(line: 834, column: 49, scope: !8043)
!8062 = !DILocation(line: 834, column: 47, scope: !8043)
!8063 = !DILocation(line: 834, column: 58, scope: !8043)
!8064 = !DILocation(line: 839, column: 24, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8043, file: !245, line: 836, column: 11)
!8066 = !DILocation(line: 839, column: 34, scope: !8065)
!8067 = !DILocation(line: 839, column: 45, scope: !8065)
!8068 = !DILocation(line: 839, column: 14, scope: !8065)
!8069 = !DILocation(line: 839, column: 68, scope: !8065)
!8070 = !DILocation(line: 836, column: 11, scope: !8043)
!8071 = !DILocation(line: 841, column: 35, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !245, line: 841, column: 15)
!8073 = distinct !DILexicalBlock(scope: !8065, file: !245, line: 840, column: 9)
!8074 = !DILocation(line: 841, column: 17, scope: !8072)
!8075 = !DILocation(line: 841, column: 15, scope: !8073)
!8076 = !DILocation(line: 842, column: 23, scope: !8072)
!8077 = !DILocation(line: 842, column: 30, scope: !8072)
!8078 = !DILocation(line: 843, column: 20, scope: !8072)
!8079 = !DILocation(line: 842, column: 13, scope: !8072)
!8080 = !DILocation(line: 844, column: 19, scope: !8073)
!8081 = !DILocation(line: 844, column: 22, scope: !8073)
!8082 = !DILocation(line: 844, column: 18, scope: !8073)
!8083 = !DILocation(line: 844, column: 11, scope: !8073)
!8084 = !DILocation(line: 846, column: 5, scope: !8043)
!8085 = !DILocation(line: 848, column: 22, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8009, file: !245, line: 848, column: 7)
!8087 = !DILocation(line: 848, column: 32, scope: !8086)
!8088 = !DILocation(line: 848, column: 7, scope: !8009)
!8089 = !DILocation(line: 850, column: 19, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !245, line: 850, column: 11)
!8091 = distinct !DILexicalBlock(scope: !8086, file: !245, line: 849, column: 5)
!8092 = !DILocation(line: 850, column: 30, scope: !8090)
!8093 = !DILocation(line: 850, column: 35, scope: !8090)
!8094 = !DILocation(line: 850, column: 11, scope: !8090)
!8095 = !DILocation(line: 850, column: 40, scope: !8090)
!8096 = !DILocation(line: 850, column: 11, scope: !8091)
!8097 = !DILocation(line: 851, column: 9, scope: !8090)
!8098 = !DILocation(line: 852, column: 11, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8091, file: !245, line: 852, column: 11)
!8100 = !DILocation(line: 852, column: 17, scope: !8099)
!8101 = !DILocation(line: 852, column: 26, scope: !8099)
!8102 = !DILocation(line: 852, column: 29, scope: !8099)
!8103 = !DILocation(line: 852, column: 35, scope: !8099)
!8104 = !DILocation(line: 852, column: 11, scope: !8091)
!8105 = !DILocalVariable(name: "saved_errno", scope: !8106, file: !245, line: 856, type: !7)
!8106 = distinct !DILexicalBlock(scope: !8099, file: !245, line: 853, column: 9)
!8107 = !DILocation(line: 856, column: 15, scope: !8106)
!8108 = !DILocation(line: 856, column: 29, scope: !8106)
!8109 = !DILocalVariable(name: "__x", scope: !8110, file: !245, line: 857, type: !7)
!8110 = distinct !DILexicalBlock(scope: !8106, file: !245, line: 857, column: 11)
!8111 = !DILocation(line: 857, column: 11, scope: !8110)
!8112 = !DILocation(line: 858, column: 19, scope: !8106)
!8113 = !DILocation(line: 858, column: 11, scope: !8106)
!8114 = !DILocation(line: 858, column: 17, scope: !8106)
!8115 = !DILocation(line: 859, column: 9, scope: !8106)
!8116 = !DILocation(line: 860, column: 5, scope: !8091)
!8117 = !DILocation(line: 863, column: 19, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !245, line: 863, column: 11)
!8119 = distinct !DILexicalBlock(scope: !8086, file: !245, line: 862, column: 5)
!8120 = !DILocation(line: 863, column: 29, scope: !8118)
!8121 = !DILocation(line: 863, column: 34, scope: !8118)
!8122 = !DILocation(line: 863, column: 11, scope: !8118)
!8123 = !DILocation(line: 863, column: 39, scope: !8118)
!8124 = !DILocation(line: 863, column: 11, scope: !8119)
!8125 = !DILocation(line: 864, column: 9, scope: !8118)
!8126 = !DILocation(line: 865, column: 11, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8119, file: !245, line: 865, column: 11)
!8128 = !DILocation(line: 865, column: 17, scope: !8127)
!8129 = !DILocation(line: 865, column: 26, scope: !8127)
!8130 = !DILocation(line: 865, column: 29, scope: !8127)
!8131 = !DILocation(line: 865, column: 35, scope: !8127)
!8132 = !DILocation(line: 865, column: 11, scope: !8119)
!8133 = !DILocalVariable(name: "saved_errno", scope: !8134, file: !245, line: 869, type: !7)
!8134 = distinct !DILexicalBlock(scope: !8127, file: !245, line: 866, column: 9)
!8135 = !DILocation(line: 869, column: 15, scope: !8134)
!8136 = !DILocation(line: 869, column: 29, scope: !8134)
!8137 = !DILocalVariable(name: "__x", scope: !8138, file: !245, line: 870, type: !7)
!8138 = distinct !DILexicalBlock(scope: !8134, file: !245, line: 870, column: 11)
!8139 = !DILocation(line: 870, column: 11, scope: !8138)
!8140 = !DILocation(line: 871, column: 19, scope: !8134)
!8141 = !DILocation(line: 871, column: 11, scope: !8134)
!8142 = !DILocation(line: 871, column: 17, scope: !8134)
!8143 = !DILocation(line: 872, column: 9, scope: !8134)
!8144 = !DILocation(line: 875, column: 27, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8009, file: !245, line: 875, column: 7)
!8146 = !DILocation(line: 875, column: 9, scope: !8145)
!8147 = !DILocation(line: 875, column: 7, scope: !8009)
!8148 = !DILocation(line: 877, column: 17, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8145, file: !245, line: 876, column: 5)
!8150 = !DILocation(line: 877, column: 24, scope: !8149)
!8151 = !DILocation(line: 878, column: 14, scope: !8149)
!8152 = !DILocation(line: 877, column: 7, scope: !8149)
!8153 = !DILocation(line: 879, column: 11, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8149, file: !245, line: 879, column: 11)
!8155 = !DILocation(line: 879, column: 14, scope: !8154)
!8156 = !DILocation(line: 879, column: 11, scope: !8149)
!8157 = !DILocation(line: 880, column: 9, scope: !8154)
!8158 = !DILocation(line: 881, column: 5, scope: !8149)
!8159 = !DILocation(line: 883, column: 3, scope: !8009)
!8160 = !DILocation(line: 884, column: 1, scope: !8009)
!8161 = distinct !DISubprogram(name: "copy_attr", scope: !245, file: !245, line: 695, type: !479, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8162 = !DILocalVariable(name: "src_path", arg: 1, scope: !8161, file: !245, line: 695, type: !115)
!8163 = !DILocation(line: 695, column: 24, scope: !8161)
!8164 = !DILocalVariable(name: "src_fd", arg: 2, scope: !8161, file: !245, line: 695, type: !7)
!8165 = !DILocation(line: 695, column: 38, scope: !8161)
!8166 = !DILocalVariable(name: "dst_path", arg: 3, scope: !8161, file: !245, line: 696, type: !115)
!8167 = !DILocation(line: 696, column: 24, scope: !8161)
!8168 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !8161, file: !245, line: 696, type: !7)
!8169 = !DILocation(line: 696, column: 38, scope: !8161)
!8170 = !DILocalVariable(name: "x", arg: 5, scope: !8161, file: !245, line: 696, type: !252)
!8171 = !DILocation(line: 696, column: 71, scope: !8161)
!8172 = !DILocalVariable(name: "ret", scope: !8161, file: !245, line: 698, type: !7)
!8173 = !DILocation(line: 698, column: 7, scope: !8161)
!8174 = !DILocalVariable(name: "all_errors", scope: !8161, file: !245, line: 699, type: !120)
!8175 = !DILocation(line: 699, column: 8, scope: !8161)
!8176 = !DILocation(line: 699, column: 23, scope: !8161)
!8177 = !DILocation(line: 699, column: 26, scope: !8161)
!8178 = !DILocation(line: 699, column: 45, scope: !8161)
!8179 = !DILocation(line: 699, column: 48, scope: !8161)
!8180 = !DILocation(line: 699, column: 51, scope: !8161)
!8181 = !DILocalVariable(name: "some_errors", scope: !8161, file: !245, line: 700, type: !120)
!8182 = !DILocation(line: 700, column: 8, scope: !8161)
!8183 = !DILocation(line: 700, column: 24, scope: !8161)
!8184 = !DILocation(line: 700, column: 35, scope: !8161)
!8185 = !DILocation(line: 700, column: 39, scope: !8161)
!8186 = !DILocation(line: 700, column: 42, scope: !8161)
!8187 = !DILocation(line: 700, column: 38, scope: !8161)
!8188 = !DILocation(line: 0, scope: !8161)
!8189 = !DILocalVariable(name: "selinux_done", scope: !8161, file: !245, line: 701, type: !120)
!8190 = !DILocation(line: 701, column: 8, scope: !8161)
!8191 = !DILocation(line: 701, column: 24, scope: !8161)
!8192 = !DILocation(line: 701, column: 27, scope: !8161)
!8193 = !DILocation(line: 701, column: 53, scope: !8161)
!8194 = !DILocation(line: 701, column: 56, scope: !8161)
!8195 = !DILocation(line: 701, column: 59, scope: !8161)
!8196 = !DILocalVariable(name: "ctx", scope: !8161, file: !245, line: 702, type: !484)
!8197 = !DILocation(line: 702, column: 24, scope: !8161)
!8198 = !DILocation(line: 703, column: 3, scope: !8161)
!8199 = !DILocation(line: 704, column: 14, scope: !8161)
!8200 = !{!8201, !2999, i64 0}
!8201 = !{!"error_context", !2999, i64 0, !2999, i64 8, !2999, i64 16}
!8202 = !{!8201, !2999, i64 8}
!8203 = !{!8201, !2999, i64 16}
!8204 = !DILocation(line: 708, column: 12, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8161, file: !245, line: 708, column: 7)
!8206 = !DILocation(line: 708, column: 9, scope: !8205)
!8207 = !DILocation(line: 708, column: 19, scope: !8205)
!8208 = !DILocation(line: 708, column: 27, scope: !8205)
!8209 = !DILocation(line: 708, column: 24, scope: !8205)
!8210 = !DILocation(line: 708, column: 7, scope: !8161)
!8211 = !DILocation(line: 709, column: 25, scope: !8205)
!8212 = !DILocation(line: 709, column: 35, scope: !8205)
!8213 = !DILocation(line: 709, column: 43, scope: !8205)
!8214 = !DILocation(line: 709, column: 53, scope: !8205)
!8215 = !DILocation(line: 710, column: 25, scope: !8205)
!8216 = !DILocation(line: 711, column: 26, scope: !8205)
!8217 = !DILocation(line: 711, column: 37, scope: !8205)
!8218 = !DILocation(line: 711, column: 40, scope: !8205)
!8219 = !DILocation(line: 709, column: 11, scope: !8205)
!8220 = !DILocation(line: 709, column: 9, scope: !8205)
!8221 = !DILocation(line: 709, column: 5, scope: !8205)
!8222 = !DILocation(line: 713, column: 27, scope: !8205)
!8223 = !DILocation(line: 713, column: 37, scope: !8205)
!8224 = !DILocation(line: 714, column: 27, scope: !8205)
!8225 = !DILocation(line: 715, column: 28, scope: !8205)
!8226 = !DILocation(line: 715, column: 39, scope: !8205)
!8227 = !DILocation(line: 715, column: 42, scope: !8205)
!8228 = !DILocation(line: 713, column: 11, scope: !8205)
!8229 = !DILocation(line: 713, column: 9, scope: !8205)
!8230 = !DILocation(line: 717, column: 10, scope: !8161)
!8231 = !DILocation(line: 717, column: 14, scope: !8161)
!8232 = !DILocation(line: 717, column: 3, scope: !8161)
!8233 = distinct !DISubprogram(name: "set_author", scope: !245, file: !245, line: 892, type: !510, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8234 = !DILocalVariable(name: "dst_name", arg: 1, scope: !8233, file: !245, line: 892, type: !115)
!8235 = !DILocation(line: 892, column: 25, scope: !8233)
!8236 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !8233, file: !245, line: 892, type: !7)
!8237 = !DILocation(line: 892, column: 39, scope: !8233)
!8238 = !DILocalVariable(name: "src_sb", arg: 3, scope: !8233, file: !245, line: 892, type: !315)
!8239 = !DILocation(line: 892, column: 69, scope: !8233)
!8240 = !DILocation(line: 913, column: 10, scope: !8233)
!8241 = !DILocation(line: 914, column: 10, scope: !8233)
!8242 = !DILocation(line: 915, column: 10, scope: !8233)
!8243 = !DILocation(line: 917, column: 1, scope: !8233)
!8244 = !DILocation(line: 3090, column: 7, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !515, file: !245, line: 3090, column: 7)
!8246 = !DILocation(line: 3090, column: 12, scope: !8245)
!8247 = !DILocation(line: 3090, column: 7, scope: !515)
!8248 = !DILocation(line: 3092, column: 14, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8245, file: !245, line: 3091, column: 5)
!8250 = !DILocation(line: 3092, column: 12, scope: !8249)
!8251 = !DILocation(line: 3093, column: 14, scope: !8249)
!8252 = !DILocation(line: 3093, column: 7, scope: !8249)
!8253 = !DILocation(line: 3094, column: 5, scope: !8249)
!8254 = !DILocation(line: 3095, column: 10, scope: !515)
!8255 = !DILocation(line: 3095, column: 3, scope: !515)
!8256 = distinct !DISubprogram(name: "copy_attr_allerror", scope: !245, file: !245, line: 655, type: !489, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8257 = !DILocalVariable(name: "ctx", arg: 1, scope: !8256, file: !245, line: 655, type: !483)
!8258 = !DILocation(line: 655, column: 43, scope: !8256)
!8259 = !DILocalVariable(name: "fmt", arg: 2, scope: !8256, file: !245, line: 656, type: !115)
!8260 = !DILocation(line: 656, column: 30, scope: !8256)
!8261 = !DILocalVariable(name: "err", scope: !8256, file: !245, line: 658, type: !7)
!8262 = !DILocation(line: 658, column: 7, scope: !8256)
!8263 = !DILocation(line: 658, column: 13, scope: !8256)
!8264 = !DILocalVariable(name: "ap", scope: !8256, file: !245, line: 659, type: !497)
!8265 = !DILocation(line: 659, column: 11, scope: !8256)
!8266 = !DILocation(line: 662, column: 3, scope: !8256)
!8267 = !DILocation(line: 663, column: 14, scope: !8256)
!8268 = !DILocation(line: 663, column: 19, scope: !8256)
!8269 = !DILocation(line: 663, column: 24, scope: !8256)
!8270 = !DILocation(line: 663, column: 3, scope: !8256)
!8271 = !DILocation(line: 664, column: 3, scope: !8256)
!8272 = !DILocation(line: 665, column: 1, scope: !8256)
!8273 = distinct !DISubprogram(name: "copy_attr_error", scope: !245, file: !245, line: 639, type: !489, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8274 = !DILocalVariable(name: "ctx", arg: 1, scope: !8273, file: !245, line: 639, type: !483)
!8275 = !DILocation(line: 639, column: 40, scope: !8273)
!8276 = !DILocalVariable(name: "fmt", arg: 2, scope: !8273, file: !245, line: 640, type: !115)
!8277 = !DILocation(line: 640, column: 30, scope: !8273)
!8278 = !DILocation(line: 642, column: 27, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8273, file: !245, line: 642, column: 7)
!8280 = !DILocation(line: 642, column: 8, scope: !8279)
!8281 = !DILocation(line: 642, column: 7, scope: !8273)
!8282 = !DILocalVariable(name: "err", scope: !8283, file: !245, line: 644, type: !7)
!8283 = distinct !DILexicalBlock(scope: !8279, file: !245, line: 643, column: 5)
!8284 = !DILocation(line: 644, column: 11, scope: !8283)
!8285 = !DILocation(line: 644, column: 17, scope: !8283)
!8286 = !DILocalVariable(name: "ap", scope: !8283, file: !245, line: 645, type: !497)
!8287 = !DILocation(line: 645, column: 15, scope: !8283)
!8288 = !DILocation(line: 648, column: 7, scope: !8283)
!8289 = !DILocation(line: 649, column: 18, scope: !8283)
!8290 = !DILocation(line: 649, column: 23, scope: !8283)
!8291 = !DILocation(line: 649, column: 28, scope: !8283)
!8292 = !DILocation(line: 649, column: 7, scope: !8283)
!8293 = !DILocation(line: 650, column: 7, scope: !8283)
!8294 = !DILocation(line: 651, column: 5, scope: !8283)
!8295 = !DILocation(line: 652, column: 1, scope: !8273)
!8296 = distinct !DISubprogram(name: "copy_attr_quote", scope: !245, file: !245, line: 668, type: !493, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8297 = !DILocalVariable(name: "ctx", arg: 1, scope: !8296, file: !245, line: 668, type: !483)
!8298 = !DILocation(line: 668, column: 40, scope: !8296)
!8299 = !DILocalVariable(name: "str", arg: 2, scope: !8296, file: !245, line: 668, type: !115)
!8300 = !DILocation(line: 668, column: 68, scope: !8296)
!8301 = !DILocation(line: 670, column: 10, scope: !8296)
!8302 = !DILocation(line: 670, column: 3, scope: !8296)
!8303 = distinct !DISubprogram(name: "copy_attr_free", scope: !245, file: !245, line: 674, type: !481, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8304 = !DILocalVariable(name: "ctx", arg: 1, scope: !8303, file: !245, line: 674, type: !483)
!8305 = !DILocation(line: 674, column: 39, scope: !8303)
!8306 = !DILocalVariable(name: "str", arg: 2, scope: !8303, file: !245, line: 675, type: !115)
!8307 = !DILocation(line: 675, column: 29, scope: !8303)
!8308 = !DILocation(line: 677, column: 1, scope: !8303)
!8309 = distinct !DISubprogram(name: "check_selinux_attr", scope: !245, file: !245, line: 685, type: !508, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8310 = !DILocalVariable(name: "name", arg: 1, scope: !8309, file: !245, line: 685, type: !115)
!8311 = !DILocation(line: 685, column: 33, scope: !8309)
!8312 = !DILocalVariable(name: "ctx", arg: 2, scope: !8309, file: !245, line: 685, type: !483)
!8313 = !DILocation(line: 685, column: 61, scope: !8309)
!8314 = !DILocation(line: 687, column: 10, scope: !8309)
!8315 = !DILocation(line: 688, column: 10, scope: !8309)
!8316 = !DILocation(line: 688, column: 42, scope: !8309)
!8317 = !DILocation(line: 688, column: 48, scope: !8309)
!8318 = !DILocation(line: 688, column: 13, scope: !8309)
!8319 = !DILocation(line: 0, scope: !8309)
!8320 = !DILocation(line: 687, column: 3, scope: !8309)
!8321 = distinct !DISubprogram(name: "owner_failure_ok", scope: !245, file: !245, line: 3075, type: !303, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8322 = !DILocalVariable(name: "x", arg: 1, scope: !8321, file: !245, line: 3075, type: !252)
!8323 = !DILocation(line: 3075, column: 44, scope: !8321)
!8324 = !DILocation(line: 3077, column: 12, scope: !8321)
!8325 = !DILocation(line: 3077, column: 18, scope: !8321)
!8326 = !DILocation(line: 3077, column: 27, scope: !8321)
!8327 = !DILocation(line: 3077, column: 30, scope: !8321)
!8328 = !DILocation(line: 3077, column: 36, scope: !8321)
!8329 = !DILocation(line: 3077, column: 47, scope: !8321)
!8330 = !DILocation(line: 3077, column: 51, scope: !8321)
!8331 = !DILocation(line: 3077, column: 54, scope: !8321)
!8332 = !{!3156, !3110, i64 27}
!8333 = !DILocation(line: 3077, column: 50, scope: !8321)
!8334 = !DILocation(line: 0, scope: !8321)
!8335 = !DILocation(line: 3077, column: 3, scope: !8321)
!8336 = distinct !DISubprogram(name: "clone_file", scope: !245, file: !245, line: 370, type: !419, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8337 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !8336, file: !245, line: 370, type: !7)
!8338 = !DILocation(line: 370, column: 17, scope: !8336)
!8339 = !DILocalVariable(name: "src_fd", arg: 2, scope: !8336, file: !245, line: 370, type: !7)
!8340 = !DILocation(line: 370, column: 30, scope: !8336)
!8341 = !DILocation(line: 373, column: 17, scope: !8336)
!8342 = !DILocation(line: 373, column: 35, scope: !8336)
!8343 = !DILocation(line: 373, column: 10, scope: !8336)
!8344 = !DILocation(line: 373, column: 3, scope: !8336)
!8345 = distinct !DISubprogram(name: "io_blksize", scope: !8346, file: !8346, line: 75, type: !421, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8346 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mbarbar/clone/coreutils")
!8347 = !DILocalVariable(name: "sb", arg: 1, scope: !8345, file: !8346, line: 75, type: !317)
!8348 = !DILocation(line: 75, column: 25, scope: !8345)
!8349 = !DILocation(line: 77, column: 10, scope: !8345)
!8350 = !DILocation(line: 77, column: 3, scope: !8345)
!8351 = distinct !DISubprogram(name: "is_probably_sparse", scope: !245, file: !245, line: 1031, type: !423, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8352 = !DILocalVariable(name: "sb", arg: 1, scope: !8351, file: !245, line: 1031, type: !315)
!8353 = !DILocation(line: 1031, column: 40, scope: !8351)
!8354 = !DILocation(line: 1034, column: 14, scope: !8351)
!8355 = !DILocation(line: 1035, column: 11, scope: !8351)
!8356 = !DILocation(line: 1035, column: 14, scope: !8351)
!8357 = !{!3182, !3183, i64 64}
!8358 = !DILocation(line: 1035, column: 33, scope: !8351)
!8359 = !DILocation(line: 1035, column: 37, scope: !8351)
!8360 = !DILocation(line: 1035, column: 45, scope: !8351)
!8361 = !DILocation(line: 1035, column: 31, scope: !8351)
!8362 = !DILocation(line: 0, scope: !8351)
!8363 = !DILocation(line: 1033, column: 3, scope: !8351)
!8364 = distinct !DISubprogram(name: "ptr_align", scope: !141, file: !141, line: 498, type: !425, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8365 = !DILocalVariable(name: "ptr", arg: 1, scope: !8364, file: !141, line: 498, type: !427)
!8366 = !DILocation(line: 498, column: 24, scope: !8364)
!8367 = !DILocalVariable(name: "alignment", arg: 2, scope: !8364, file: !141, line: 498, type: !55)
!8368 = !DILocation(line: 498, column: 36, scope: !8364)
!8369 = !DILocalVariable(name: "p0", scope: !8364, file: !141, line: 500, type: !115)
!8370 = !DILocation(line: 500, column: 15, scope: !8364)
!8371 = !DILocation(line: 500, column: 20, scope: !8364)
!8372 = !DILocalVariable(name: "p1", scope: !8364, file: !141, line: 501, type: !115)
!8373 = !DILocation(line: 501, column: 15, scope: !8364)
!8374 = !DILocation(line: 501, column: 20, scope: !8364)
!8375 = !DILocation(line: 501, column: 25, scope: !8364)
!8376 = !DILocation(line: 501, column: 23, scope: !8364)
!8377 = !DILocation(line: 501, column: 35, scope: !8364)
!8378 = !DILocation(line: 502, column: 20, scope: !8364)
!8379 = !DILocation(line: 502, column: 34, scope: !8364)
!8380 = !DILocation(line: 502, column: 25, scope: !8364)
!8381 = !DILocation(line: 502, column: 39, scope: !8364)
!8382 = !DILocation(line: 502, column: 37, scope: !8364)
!8383 = !DILocation(line: 502, column: 23, scope: !8364)
!8384 = !DILocation(line: 502, column: 3, scope: !8364)
!8385 = distinct !DISubprogram(name: "extent_copy", scope: !245, file: !245, line: 423, type: !429, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8386 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8385, file: !245, line: 423, type: !7)
!8387 = !DILocation(line: 423, column: 18, scope: !8385)
!8388 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8385, file: !245, line: 423, type: !7)
!8389 = !DILocation(line: 423, column: 30, scope: !8385)
!8390 = !DILocalVariable(name: "buf", arg: 3, scope: !8385, file: !245, line: 423, type: !9)
!8391 = !DILocation(line: 423, column: 45, scope: !8385)
!8392 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8385, file: !245, line: 423, type: !55)
!8393 = !DILocation(line: 423, column: 57, scope: !8385)
!8394 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8385, file: !245, line: 424, type: !55)
!8395 = !DILocation(line: 424, column: 21, scope: !8385)
!8396 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !8385, file: !245, line: 424, type: !248)
!8397 = !DILocation(line: 424, column: 38, scope: !8385)
!8398 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !8385, file: !245, line: 425, type: !89)
!8399 = !DILocation(line: 425, column: 31, scope: !8385)
!8400 = !DILocalVariable(name: "src_name", arg: 8, scope: !8385, file: !245, line: 426, type: !115)
!8401 = !DILocation(line: 426, column: 26, scope: !8385)
!8402 = !DILocalVariable(name: "dst_name", arg: 9, scope: !8385, file: !245, line: 426, type: !115)
!8403 = !DILocation(line: 426, column: 48, scope: !8385)
!8404 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !8385, file: !245, line: 427, type: !302)
!8405 = !DILocation(line: 427, column: 20, scope: !8385)
!8406 = !DILocalVariable(name: "scan", scope: !8385, file: !245, line: 429, type: !441)
!8407 = !DILocation(line: 429, column: 22, scope: !8385)
!8408 = !DILocalVariable(name: "last_ext_start", scope: !8385, file: !245, line: 430, type: !248)
!8409 = !DILocation(line: 430, column: 9, scope: !8385)
!8410 = !DILocalVariable(name: "last_ext_len", scope: !8385, file: !245, line: 431, type: !248)
!8411 = !DILocation(line: 431, column: 9, scope: !8385)
!8412 = !DILocalVariable(name: "dest_pos", scope: !8385, file: !245, line: 435, type: !248)
!8413 = !DILocation(line: 435, column: 9, scope: !8385)
!8414 = !DILocation(line: 437, column: 21, scope: !8385)
!8415 = !DILocation(line: 437, column: 3, scope: !8385)
!8416 = !DILocation(line: 439, column: 4, scope: !8385)
!8417 = !DILocation(line: 439, column: 24, scope: !8385)
!8418 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !8385, file: !245, line: 440, type: !120)
!8419 = !DILocation(line: 440, column: 8, scope: !8385)
!8420 = !DILocation(line: 441, column: 3, scope: !8385)
!8421 = !DILocalVariable(name: "ok", scope: !8422, file: !245, line: 443, type: !120)
!8422 = distinct !DILexicalBlock(scope: !8385, file: !245, line: 442, column: 5)
!8423 = !DILocation(line: 443, column: 12, scope: !8422)
!8424 = !DILocation(line: 443, column: 17, scope: !8422)
!8425 = !DILocation(line: 444, column: 13, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8422, file: !245, line: 444, column: 11)
!8427 = !DILocation(line: 444, column: 11, scope: !8422)
!8428 = !DILocation(line: 446, column: 20, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !245, line: 446, column: 15)
!8430 = distinct !DILexicalBlock(scope: !8426, file: !245, line: 445, column: 9)
!8431 = !{!8432, !3110, i64 33}
!8432 = !{!"extent_scan", !2986, i64 0, !3183, i64 8, !2986, i64 16, !3183, i64 24, !3110, i64 32, !3110, i64 33, !2999, i64 40}
!8433 = !DILocation(line: 446, column: 15, scope: !8430)
!8434 = !DILocation(line: 447, column: 13, scope: !8429)
!8435 = !DILocation(line: 449, column: 20, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8430, file: !245, line: 449, column: 15)
!8437 = !{!8432, !3110, i64 32}
!8438 = !DILocation(line: 449, column: 15, scope: !8430)
!8439 = !DILocation(line: 451, column: 16, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8436, file: !245, line: 450, column: 13)
!8441 = !DILocation(line: 451, column: 36, scope: !8440)
!8442 = !DILocation(line: 452, column: 15, scope: !8440)
!8443 = !DILocation(line: 455, column: 21, scope: !8430)
!8444 = !DILocation(line: 455, column: 28, scope: !8430)
!8445 = !DILocation(line: 456, column: 18, scope: !8430)
!8446 = !DILocation(line: 455, column: 11, scope: !8430)
!8447 = !DILocation(line: 457, column: 11, scope: !8430)
!8448 = !DILocalVariable(name: "empty_extent", scope: !8422, file: !245, line: 460, type: !120)
!8449 = !DILocation(line: 460, column: 12, scope: !8422)
!8450 = !DILocalVariable(name: "i", scope: !8451, file: !245, line: 461, type: !70)
!8451 = distinct !DILexicalBlock(scope: !8422, file: !245, line: 461, column: 7)
!8452 = !DILocation(line: 461, column: 25, scope: !8451)
!8453 = !DILocation(line: 461, column: 12, scope: !8451)
!8454 = !DILocation(line: 461, column: 32, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8451, file: !245, line: 461, column: 7)
!8456 = !DILocation(line: 461, column: 41, scope: !8455)
!8457 = !{!8432, !3183, i64 24}
!8458 = !DILocation(line: 461, column: 34, scope: !8455)
!8459 = !DILocation(line: 461, column: 50, scope: !8455)
!8460 = !DILocation(line: 461, column: 53, scope: !8455)
!8461 = !DILocation(line: 461, column: 7, scope: !8451)
!8462 = !DILocalVariable(name: "ext_start", scope: !8463, file: !245, line: 463, type: !248)
!8463 = distinct !DILexicalBlock(scope: !8455, file: !245, line: 462, column: 9)
!8464 = !DILocation(line: 463, column: 17, scope: !8463)
!8465 = !DILocalVariable(name: "ext_len", scope: !8463, file: !245, line: 464, type: !248)
!8466 = !DILocation(line: 464, column: 17, scope: !8463)
!8467 = !DILocalVariable(name: "ext_hole_size", scope: !8463, file: !245, line: 465, type: !248)
!8468 = !DILocation(line: 465, column: 17, scope: !8463)
!8469 = !DILocation(line: 467, column: 15, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8463, file: !245, line: 467, column: 15)
!8471 = !DILocation(line: 467, column: 24, scope: !8470)
!8472 = !DILocation(line: 467, column: 17, scope: !8470)
!8473 = !DILocation(line: 467, column: 15, scope: !8463)
!8474 = !DILocation(line: 469, column: 32, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8470, file: !245, line: 468, column: 13)
!8476 = !{!8432, !2999, i64 40}
!8477 = !DILocation(line: 469, column: 41, scope: !8475)
!8478 = !DILocation(line: 469, column: 27, scope: !8475)
!8479 = !DILocation(line: 469, column: 44, scope: !8475)
!8480 = !{!8481, !3183, i64 0}
!8481 = !{!"extent_info", !3183, i64 0, !3183, i64 8, !2986, i64 16}
!8482 = !DILocation(line: 469, column: 25, scope: !8475)
!8483 = !DILocation(line: 470, column: 30, scope: !8475)
!8484 = !DILocation(line: 470, column: 39, scope: !8475)
!8485 = !DILocation(line: 470, column: 25, scope: !8475)
!8486 = !DILocation(line: 470, column: 42, scope: !8475)
!8487 = !{!8481, !3183, i64 8}
!8488 = !DILocation(line: 470, column: 23, scope: !8475)
!8489 = !DILocation(line: 471, column: 13, scope: !8475)
!8490 = !DILocation(line: 474, column: 16, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8470, file: !245, line: 473, column: 13)
!8492 = !DILocation(line: 475, column: 27, scope: !8491)
!8493 = !DILocation(line: 475, column: 49, scope: !8491)
!8494 = !DILocation(line: 475, column: 58, scope: !8491)
!8495 = !DILocation(line: 475, column: 44, scope: !8491)
!8496 = !DILocation(line: 475, column: 61, scope: !8491)
!8497 = !DILocation(line: 475, column: 42, scope: !8491)
!8498 = !DILocation(line: 475, column: 25, scope: !8491)
!8499 = !DILocation(line: 476, column: 23, scope: !8491)
!8500 = !DILocation(line: 486, column: 15, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8463, file: !245, line: 486, column: 15)
!8502 = !DILocation(line: 486, column: 32, scope: !8501)
!8503 = !DILocation(line: 486, column: 44, scope: !8501)
!8504 = !DILocation(line: 486, column: 42, scope: !8501)
!8505 = !DILocation(line: 486, column: 30, scope: !8501)
!8506 = !DILocation(line: 486, column: 15, scope: !8463)
!8507 = !DILocation(line: 488, column: 19, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !245, line: 488, column: 19)
!8509 = distinct !DILexicalBlock(scope: !8501, file: !245, line: 487, column: 13)
!8510 = !DILocation(line: 488, column: 36, scope: !8508)
!8511 = !DILocation(line: 488, column: 34, scope: !8508)
!8512 = !DILocation(line: 488, column: 19, scope: !8509)
!8513 = !DILocation(line: 489, column: 29, scope: !8508)
!8514 = !DILocation(line: 489, column: 27, scope: !8508)
!8515 = !DILocation(line: 489, column: 17, scope: !8508)
!8516 = !DILocation(line: 490, column: 25, scope: !8509)
!8517 = !DILocation(line: 490, column: 42, scope: !8509)
!8518 = !DILocation(line: 490, column: 40, scope: !8509)
!8519 = !DILocation(line: 490, column: 23, scope: !8509)
!8520 = !DILocation(line: 491, column: 13, scope: !8509)
!8521 = !DILocation(line: 493, column: 27, scope: !8463)
!8522 = !DILocation(line: 493, column: 39, scope: !8463)
!8523 = !DILocation(line: 493, column: 37, scope: !8463)
!8524 = !DILocation(line: 493, column: 56, scope: !8463)
!8525 = !DILocation(line: 493, column: 54, scope: !8463)
!8526 = !DILocation(line: 493, column: 25, scope: !8463)
!8527 = !DILocation(line: 495, column: 29, scope: !8463)
!8528 = !DILocation(line: 497, column: 15, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8463, file: !245, line: 497, column: 15)
!8530 = !DILocation(line: 497, column: 15, scope: !8463)
!8531 = !DILocation(line: 499, column: 26, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !245, line: 499, column: 19)
!8533 = distinct !DILexicalBlock(scope: !8529, file: !245, line: 498, column: 13)
!8534 = !DILocation(line: 499, column: 34, scope: !8532)
!8535 = !DILocation(line: 499, column: 19, scope: !8532)
!8536 = !DILocation(line: 499, column: 55, scope: !8532)
!8537 = !DILocation(line: 499, column: 19, scope: !8533)
!8538 = !DILocation(line: 501, column: 29, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8532, file: !245, line: 500, column: 17)
!8540 = !DILocation(line: 501, column: 36, scope: !8539)
!8541 = !DILocation(line: 501, column: 58, scope: !8539)
!8542 = !DILocation(line: 501, column: 19, scope: !8539)
!8543 = !DILabel(scope: !8539, name: "fail", file: !245, line: 502)
!8544 = !DILocation(line: 502, column: 17, scope: !8539)
!8545 = !DILocation(line: 503, column: 19, scope: !8539)
!8546 = !DILocation(line: 504, column: 19, scope: !8539)
!8547 = !DILocation(line: 507, column: 20, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8533, file: !245, line: 507, column: 19)
!8549 = !DILocation(line: 507, column: 33, scope: !8548)
!8550 = !DILocation(line: 507, column: 36, scope: !8548)
!8551 = !DILocation(line: 507, column: 48, scope: !8548)
!8552 = !DILocation(line: 508, column: 19, scope: !8548)
!8553 = !DILocation(line: 508, column: 24, scope: !8548)
!8554 = !DILocation(line: 508, column: 37, scope: !8548)
!8555 = !DILocation(line: 508, column: 40, scope: !8548)
!8556 = !DILocation(line: 508, column: 52, scope: !8548)
!8557 = !DILocation(line: 507, column: 19, scope: !8533)
!8558 = !DILocation(line: 510, column: 38, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !245, line: 510, column: 23)
!8560 = distinct !DILexicalBlock(scope: !8548, file: !245, line: 509, column: 17)
!8561 = !DILocation(line: 510, column: 47, scope: !8559)
!8562 = !DILocation(line: 511, column: 38, scope: !8559)
!8563 = !DILocation(line: 511, column: 50, scope: !8559)
!8564 = !DILocation(line: 512, column: 38, scope: !8559)
!8565 = !DILocation(line: 510, column: 25, scope: !8559)
!8566 = !DILocation(line: 510, column: 23, scope: !8560)
!8567 = !DILocation(line: 513, column: 21, scope: !8559)
!8568 = !DILocation(line: 514, column: 37, scope: !8560)
!8569 = !DILocation(line: 515, column: 17, scope: !8560)
!8570 = !DILocalVariable(name: "nzeros", scope: !8571, file: !245, line: 521, type: !248)
!8571 = distinct !DILexicalBlock(scope: !8548, file: !245, line: 517, column: 17)
!8572 = !DILocation(line: 521, column: 25, scope: !8571)
!8573 = !DILocation(line: 521, column: 34, scope: !8571)
!8574 = !DILocation(line: 522, column: 23, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8571, file: !245, line: 522, column: 23)
!8576 = !DILocation(line: 522, column: 23, scope: !8571)
!8577 = !DILocation(line: 523, column: 30, scope: !8575)
!8578 = !DILocation(line: 523, column: 28, scope: !8575)
!8579 = !DILocation(line: 523, column: 21, scope: !8575)
!8580 = !DILocation(line: 525, column: 38, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8571, file: !245, line: 525, column: 23)
!8582 = !DILocation(line: 525, column: 47, scope: !8581)
!8583 = !DILocation(line: 525, column: 25, scope: !8581)
!8584 = !DILocation(line: 525, column: 23, scope: !8571)
!8585 = !DILocation(line: 527, column: 33, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8581, file: !245, line: 526, column: 21)
!8587 = !DILocation(line: 527, column: 40, scope: !8586)
!8588 = !DILocation(line: 528, column: 30, scope: !8586)
!8589 = !DILocation(line: 527, column: 23, scope: !8586)
!8590 = !DILocation(line: 529, column: 23, scope: !8586)
!8591 = !DILocation(line: 532, column: 30, scope: !8571)
!8592 = !DILocation(line: 532, column: 28, scope: !8571)
!8593 = !DILocation(line: 534, column: 13, scope: !8533)
!8594 = !DILocation(line: 536, column: 28, scope: !8463)
!8595 = !DILocation(line: 536, column: 26, scope: !8463)
!8596 = !DILocalVariable(name: "n_read", scope: !8597, file: !245, line: 553, type: !248)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !245, line: 552, column: 13)
!8598 = distinct !DILexicalBlock(scope: !8463, file: !245, line: 544, column: 15)
!8599 = !DILocation(line: 553, column: 21, scope: !8597)
!8600 = !DILocation(line: 554, column: 28, scope: !8597)
!8601 = !DILocation(line: 555, column: 30, scope: !8597)
!8602 = !DILocation(line: 555, column: 28, scope: !8597)
!8603 = !DILocalVariable(name: "read_hole", scope: !8597, file: !245, line: 556, type: !120)
!8604 = !DILocation(line: 556, column: 20, scope: !8597)
!8605 = !DILocation(line: 558, column: 35, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8597, file: !245, line: 558, column: 20)
!8607 = !DILocation(line: 558, column: 43, scope: !8606)
!8608 = !DILocation(line: 558, column: 52, scope: !8606)
!8609 = !DILocation(line: 558, column: 57, scope: !8606)
!8610 = !DILocation(line: 559, column: 35, scope: !8606)
!8611 = !DILocation(line: 559, column: 47, scope: !8606)
!8612 = !DILocation(line: 559, column: 66, scope: !8606)
!8613 = !DILocation(line: 560, column: 41, scope: !8606)
!8614 = !DILocation(line: 560, column: 51, scope: !8606)
!8615 = !DILocation(line: 560, column: 61, scope: !8606)
!8616 = !DILocation(line: 558, column: 22, scope: !8606)
!8617 = !DILocation(line: 558, column: 20, scope: !8597)
!8618 = !DILocation(line: 562, column: 17, scope: !8606)
!8619 = !DILocation(line: 564, column: 26, scope: !8597)
!8620 = !DILocation(line: 564, column: 38, scope: !8597)
!8621 = !DILocation(line: 564, column: 36, scope: !8597)
!8622 = !DILocation(line: 564, column: 24, scope: !8597)
!8623 = !DILocation(line: 565, column: 19, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8597, file: !245, line: 565, column: 19)
!8625 = !DILocation(line: 565, column: 19, scope: !8597)
!8626 = !DILocation(line: 566, column: 37, scope: !8624)
!8627 = !DILocation(line: 566, column: 35, scope: !8624)
!8628 = !DILocation(line: 566, column: 17, scope: !8624)
!8629 = !DILocation(line: 574, column: 15, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8463, file: !245, line: 574, column: 15)
!8631 = !DILocation(line: 574, column: 27, scope: !8630)
!8632 = !DILocation(line: 574, column: 24, scope: !8630)
!8633 = !DILocation(line: 574, column: 15, scope: !8463)
!8634 = !DILocation(line: 576, column: 20, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8630, file: !245, line: 575, column: 13)
!8636 = !DILocation(line: 576, column: 37, scope: !8635)
!8637 = !DILocation(line: 577, column: 15, scope: !8635)
!8638 = !DILocation(line: 579, column: 9, scope: !8463)
!8639 = !DILocation(line: 461, column: 68, scope: !8455)
!8640 = !DILocation(line: 461, column: 7, scope: !8455)
!8641 = distinct !{!8641, !8461, !8642}
!8642 = !DILocation(line: 579, column: 9, scope: !8451)
!8643 = !DILocation(line: 582, column: 7, scope: !8422)
!8644 = !DILocation(line: 584, column: 5, scope: !8422)
!8645 = !DILocation(line: 585, column: 17, scope: !8385)
!8646 = !DILocation(line: 585, column: 10, scope: !8385)
!8647 = distinct !{!8647, !8420, !8648}
!8648 = !DILocation(line: 585, column: 33, scope: !8385)
!8649 = !DILocation(line: 595, column: 8, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8385, file: !245, line: 595, column: 7)
!8651 = !DILocation(line: 595, column: 19, scope: !8650)
!8652 = !DILocation(line: 595, column: 17, scope: !8650)
!8653 = !DILocation(line: 595, column: 34, scope: !8650)
!8654 = !DILocation(line: 595, column: 37, scope: !8650)
!8655 = !DILocation(line: 596, column: 7, scope: !8650)
!8656 = !DILocation(line: 596, column: 11, scope: !8650)
!8657 = !DILocation(line: 596, column: 23, scope: !8650)
!8658 = !DILocation(line: 595, column: 7, scope: !8385)
!8659 = !DILocation(line: 597, column: 24, scope: !8650)
!8660 = !DILocation(line: 597, column: 33, scope: !8650)
!8661 = !DILocation(line: 597, column: 13, scope: !8650)
!8662 = !DILocation(line: 598, column: 28, scope: !8650)
!8663 = !DILocation(line: 598, column: 37, scope: !8650)
!8664 = !DILocation(line: 598, column: 54, scope: !8650)
!8665 = !DILocation(line: 598, column: 52, scope: !8650)
!8666 = !DILocation(line: 598, column: 15, scope: !8650)
!8667 = !DILocation(line: 600, column: 17, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8650, file: !245, line: 599, column: 5)
!8669 = !DILocation(line: 600, column: 24, scope: !8668)
!8670 = !DILocation(line: 600, column: 50, scope: !8668)
!8671 = !DILocation(line: 600, column: 7, scope: !8668)
!8672 = !DILocation(line: 601, column: 7, scope: !8668)
!8673 = !DILocation(line: 604, column: 7, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8385, file: !245, line: 604, column: 7)
!8675 = !DILocation(line: 604, column: 19, scope: !8674)
!8676 = !DILocation(line: 604, column: 36, scope: !8674)
!8677 = !DILocation(line: 604, column: 39, scope: !8674)
!8678 = !DILocation(line: 604, column: 50, scope: !8674)
!8679 = !DILocation(line: 604, column: 48, scope: !8674)
!8680 = !DILocation(line: 605, column: 7, scope: !8674)
!8681 = !DILocation(line: 605, column: 22, scope: !8674)
!8682 = !DILocation(line: 605, column: 31, scope: !8674)
!8683 = !DILocation(line: 605, column: 41, scope: !8674)
!8684 = !DILocation(line: 605, column: 58, scope: !8674)
!8685 = !DILocation(line: 605, column: 56, scope: !8674)
!8686 = !DILocation(line: 605, column: 10, scope: !8674)
!8687 = !DILocation(line: 605, column: 68, scope: !8674)
!8688 = !DILocation(line: 604, column: 7, scope: !8385)
!8689 = !DILocation(line: 607, column: 17, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8674, file: !245, line: 606, column: 5)
!8691 = !DILocation(line: 607, column: 24, scope: !8690)
!8692 = !DILocation(line: 607, column: 52, scope: !8690)
!8693 = !DILocation(line: 607, column: 7, scope: !8690)
!8694 = !DILocation(line: 608, column: 7, scope: !8690)
!8695 = !DILocation(line: 611, column: 3, scope: !8385)
!8696 = !DILocation(line: 612, column: 1, scope: !8385)
!8697 = distinct !DISubprogram(name: "sparse_copy", scope: !245, file: !245, line: 260, type: !456, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8698 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8697, file: !245, line: 260, type: !7)
!8699 = !DILocation(line: 260, column: 18, scope: !8697)
!8700 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8697, file: !245, line: 260, type: !7)
!8701 = !DILocation(line: 260, column: 30, scope: !8697)
!8702 = !DILocalVariable(name: "buf", arg: 3, scope: !8697, file: !245, line: 260, type: !9)
!8703 = !DILocation(line: 260, column: 45, scope: !8697)
!8704 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8697, file: !245, line: 260, type: !55)
!8705 = !DILocation(line: 260, column: 57, scope: !8697)
!8706 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8697, file: !245, line: 261, type: !55)
!8707 = !DILocation(line: 261, column: 21, scope: !8697)
!8708 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !8697, file: !245, line: 261, type: !120)
!8709 = !DILocation(line: 261, column: 37, scope: !8697)
!8710 = !DILocalVariable(name: "src_name", arg: 7, scope: !8697, file: !245, line: 262, type: !115)
!8711 = !DILocation(line: 262, column: 26, scope: !8697)
!8712 = !DILocalVariable(name: "dst_name", arg: 8, scope: !8697, file: !245, line: 262, type: !115)
!8713 = !DILocation(line: 262, column: 48, scope: !8697)
!8714 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !8697, file: !245, line: 263, type: !458)
!8715 = !DILocation(line: 263, column: 24, scope: !8697)
!8716 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !8697, file: !245, line: 263, type: !461)
!8717 = !DILocation(line: 263, column: 43, scope: !8697)
!8718 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !8697, file: !245, line: 264, type: !302)
!8719 = !DILocation(line: 264, column: 20, scope: !8697)
!8720 = !DILocation(line: 266, column: 4, scope: !8697)
!8721 = !DILocation(line: 266, column: 25, scope: !8697)
!8722 = !DILocation(line: 267, column: 4, scope: !8697)
!8723 = !DILocation(line: 267, column: 17, scope: !8697)
!8724 = !DILocalVariable(name: "make_hole", scope: !8697, file: !245, line: 268, type: !120)
!8725 = !DILocation(line: 268, column: 8, scope: !8697)
!8726 = !DILocalVariable(name: "psize", scope: !8697, file: !245, line: 269, type: !248)
!8727 = !DILocation(line: 269, column: 9, scope: !8697)
!8728 = !DILocation(line: 271, column: 3, scope: !8697)
!8729 = !DILocation(line: 271, column: 10, scope: !8697)
!8730 = !DILocalVariable(name: "n_read", scope: !8731, file: !245, line: 273, type: !462)
!8731 = distinct !DILexicalBlock(scope: !8697, file: !245, line: 272, column: 5)
!8732 = !DILocation(line: 273, column: 15, scope: !8731)
!8733 = !DILocation(line: 273, column: 30, scope: !8731)
!8734 = !DILocation(line: 273, column: 38, scope: !8731)
!8735 = !DILocation(line: 273, column: 43, scope: !8731)
!8736 = !DILocation(line: 273, column: 24, scope: !8731)
!8737 = !DILocation(line: 274, column: 11, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8731, file: !245, line: 274, column: 11)
!8739 = !DILocation(line: 274, column: 18, scope: !8738)
!8740 = !DILocation(line: 274, column: 11, scope: !8731)
!8741 = !DILocation(line: 276, column: 15, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !245, line: 276, column: 15)
!8743 = distinct !DILexicalBlock(scope: !8738, file: !245, line: 275, column: 9)
!8744 = !DILocation(line: 276, column: 21, scope: !8742)
!8745 = !DILocation(line: 276, column: 15, scope: !8743)
!8746 = !DILocation(line: 277, column: 13, scope: !8742)
!8747 = distinct !{!8747, !8728, !8748}
!8748 = !DILocation(line: 357, column: 5, scope: !8697)
!8749 = !DILocation(line: 278, column: 21, scope: !8743)
!8750 = !DILocation(line: 278, column: 28, scope: !8743)
!8751 = !DILocation(line: 278, column: 51, scope: !8743)
!8752 = !DILocation(line: 278, column: 11, scope: !8743)
!8753 = !DILocation(line: 279, column: 11, scope: !8743)
!8754 = !DILocation(line: 281, column: 11, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8731, file: !245, line: 281, column: 11)
!8756 = !DILocation(line: 281, column: 18, scope: !8755)
!8757 = !DILocation(line: 281, column: 11, scope: !8731)
!8758 = !DILocation(line: 282, column: 9, scope: !8755)
!8759 = !DILocation(line: 283, column: 21, scope: !8731)
!8760 = !DILocation(line: 283, column: 18, scope: !8731)
!8761 = !DILocation(line: 284, column: 24, scope: !8731)
!8762 = !DILocation(line: 284, column: 8, scope: !8731)
!8763 = !DILocation(line: 284, column: 21, scope: !8731)
!8764 = !DILocalVariable(name: "csize", scope: !8731, file: !245, line: 287, type: !55)
!8765 = !DILocation(line: 287, column: 14, scope: !8731)
!8766 = !DILocation(line: 287, column: 22, scope: !8731)
!8767 = !DILocation(line: 287, column: 34, scope: !8731)
!8768 = !DILocation(line: 287, column: 46, scope: !8731)
!8769 = !DILocalVariable(name: "cbuf", scope: !8731, file: !245, line: 288, type: !9)
!8770 = !DILocation(line: 288, column: 13, scope: !8731)
!8771 = !DILocation(line: 288, column: 20, scope: !8731)
!8772 = !DILocalVariable(name: "pbuf", scope: !8731, file: !245, line: 289, type: !9)
!8773 = !DILocation(line: 289, column: 13, scope: !8731)
!8774 = !DILocation(line: 289, column: 20, scope: !8731)
!8775 = !DILocation(line: 291, column: 7, scope: !8731)
!8776 = !DILocation(line: 291, column: 14, scope: !8731)
!8777 = !DILocalVariable(name: "prev_hole", scope: !8778, file: !245, line: 293, type: !120)
!8778 = distinct !DILexicalBlock(scope: !8731, file: !245, line: 292, column: 9)
!8779 = !DILocation(line: 293, column: 16, scope: !8778)
!8780 = !DILocation(line: 293, column: 28, scope: !8778)
!8781 = !DILocation(line: 294, column: 19, scope: !8778)
!8782 = !DILocation(line: 294, column: 17, scope: !8778)
!8783 = !DILocation(line: 296, column: 15, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8778, file: !245, line: 296, column: 15)
!8785 = !DILocation(line: 296, column: 25, scope: !8784)
!8786 = !DILocation(line: 296, column: 28, scope: !8784)
!8787 = !DILocation(line: 296, column: 15, scope: !8778)
!8788 = !DILocation(line: 297, column: 33, scope: !8784)
!8789 = !DILocation(line: 297, column: 39, scope: !8784)
!8790 = !DILocation(line: 297, column: 25, scope: !8784)
!8791 = !DILocation(line: 297, column: 23, scope: !8784)
!8792 = !DILocation(line: 297, column: 13, scope: !8784)
!8793 = !DILocalVariable(name: "transition", scope: !8778, file: !245, line: 299, type: !120)
!8794 = !DILocation(line: 299, column: 16, scope: !8778)
!8795 = !DILocation(line: 299, column: 30, scope: !8778)
!8796 = !DILocation(line: 299, column: 43, scope: !8778)
!8797 = !DILocation(line: 299, column: 40, scope: !8778)
!8798 = !DILocation(line: 299, column: 54, scope: !8778)
!8799 = !DILocation(line: 299, column: 57, scope: !8778)
!8800 = !DILocation(line: 0, scope: !8778)
!8801 = !DILocalVariable(name: "last_chunk", scope: !8778, file: !245, line: 300, type: !120)
!8802 = !DILocation(line: 300, column: 16, scope: !8778)
!8803 = !DILocation(line: 300, column: 30, scope: !8778)
!8804 = !DILocation(line: 300, column: 40, scope: !8778)
!8805 = !DILocation(line: 300, column: 37, scope: !8778)
!8806 = !DILocation(line: 300, column: 46, scope: !8778)
!8807 = !DILocation(line: 300, column: 51, scope: !8778)
!8808 = !DILocation(line: 300, column: 62, scope: !8778)
!8809 = !DILocation(line: 300, column: 67, scope: !8778)
!8810 = !DILocation(line: 300, column: 65, scope: !8778)
!8811 = !DILocation(line: 302, column: 15, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8778, file: !245, line: 302, column: 15)
!8813 = !DILocation(line: 302, column: 26, scope: !8812)
!8814 = !DILocation(line: 302, column: 29, scope: !8812)
!8815 = !DILocation(line: 302, column: 15, scope: !8778)
!8816 = !DILocation(line: 304, column: 21, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8818, file: !245, line: 304, column: 19)
!8818 = distinct !DILexicalBlock(scope: !8812, file: !245, line: 303, column: 13)
!8819 = !DILocation(line: 304, column: 19, scope: !8818)
!8820 = !DILocation(line: 305, column: 26, scope: !8817)
!8821 = !DILocation(line: 305, column: 23, scope: !8817)
!8822 = !DILocation(line: 305, column: 17, scope: !8817)
!8823 = !DILocation(line: 307, column: 21, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8818, file: !245, line: 307, column: 19)
!8825 = !DILocation(line: 307, column: 19, scope: !8818)
!8826 = !DILocation(line: 309, column: 35, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !245, line: 309, column: 23)
!8828 = distinct !DILexicalBlock(scope: !8824, file: !245, line: 308, column: 17)
!8829 = !DILocation(line: 309, column: 44, scope: !8827)
!8830 = !DILocation(line: 309, column: 50, scope: !8827)
!8831 = !DILocation(line: 309, column: 23, scope: !8827)
!8832 = !DILocation(line: 309, column: 60, scope: !8827)
!8833 = !DILocation(line: 309, column: 57, scope: !8827)
!8834 = !DILocation(line: 309, column: 23, scope: !8828)
!8835 = !DILocation(line: 311, column: 33, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8827, file: !245, line: 310, column: 21)
!8837 = !DILocation(line: 311, column: 40, scope: !8836)
!8838 = !DILocation(line: 312, column: 30, scope: !8836)
!8839 = !DILocation(line: 311, column: 23, scope: !8836)
!8840 = !DILocation(line: 313, column: 23, scope: !8836)
!8841 = !DILocation(line: 315, column: 17, scope: !8828)
!8842 = !DILocation(line: 318, column: 38, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !245, line: 318, column: 23)
!8844 = distinct !DILexicalBlock(scope: !8824, file: !245, line: 317, column: 17)
!8845 = !DILocation(line: 318, column: 47, scope: !8843)
!8846 = !DILocation(line: 318, column: 57, scope: !8843)
!8847 = !DILocation(line: 318, column: 70, scope: !8843)
!8848 = !DILocation(line: 318, column: 25, scope: !8843)
!8849 = !DILocation(line: 318, column: 23, scope: !8844)
!8850 = !DILocation(line: 319, column: 21, scope: !8843)
!8851 = !DILocation(line: 322, column: 22, scope: !8818)
!8852 = !DILocation(line: 322, column: 20, scope: !8818)
!8853 = !DILocation(line: 323, column: 23, scope: !8818)
!8854 = !DILocation(line: 323, column: 21, scope: !8818)
!8855 = !DILocation(line: 325, column: 19, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8818, file: !245, line: 325, column: 19)
!8857 = !DILocation(line: 325, column: 19, scope: !8818)
!8858 = !DILocation(line: 327, column: 25, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !245, line: 327, column: 23)
!8860 = distinct !DILexicalBlock(scope: !8856, file: !245, line: 326, column: 17)
!8861 = !DILocation(line: 327, column: 23, scope: !8860)
!8862 = !DILocation(line: 328, column: 28, scope: !8859)
!8863 = !DILocation(line: 328, column: 21, scope: !8859)
!8864 = !DILocation(line: 330, column: 23, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8860, file: !245, line: 330, column: 23)
!8866 = !DILocation(line: 330, column: 23, scope: !8860)
!8867 = !DILocation(line: 331, column: 27, scope: !8865)
!8868 = !DILocation(line: 331, column: 21, scope: !8865)
!8869 = !DILocation(line: 333, column: 27, scope: !8865)
!8870 = !DILocation(line: 334, column: 17, scope: !8860)
!8871 = !DILocation(line: 335, column: 13, scope: !8818)
!8872 = !DILocation(line: 338, column: 19, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !245, line: 338, column: 19)
!8874 = distinct !DILexicalBlock(scope: !8812, file: !245, line: 337, column: 13)
!8875 = !DILocation(line: 338, column: 40, scope: !8873)
!8876 = !DILocation(line: 338, column: 38, scope: !8873)
!8877 = !DILocation(line: 338, column: 25, scope: !8873)
!8878 = !DILocation(line: 338, column: 19, scope: !8874)
!8879 = !DILocation(line: 339, column: 26, scope: !8873)
!8880 = !DILocation(line: 339, column: 23, scope: !8873)
!8881 = !DILocation(line: 339, column: 17, scope: !8873)
!8882 = !DILocation(line: 342, column: 32, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8873, file: !245, line: 341, column: 17)
!8884 = !DILocation(line: 342, column: 58, scope: !8883)
!8885 = !DILocation(line: 342, column: 19, scope: !8883)
!8886 = !DILocation(line: 343, column: 19, scope: !8883)
!8887 = !DILocation(line: 347, column: 21, scope: !8778)
!8888 = !DILocation(line: 347, column: 18, scope: !8778)
!8889 = !DILocation(line: 348, column: 19, scope: !8778)
!8890 = !DILocation(line: 348, column: 16, scope: !8778)
!8891 = distinct !{!8891, !8775, !8892}
!8892 = !DILocation(line: 349, column: 9, scope: !8731)
!8893 = !DILocation(line: 351, column: 31, scope: !8731)
!8894 = !DILocation(line: 351, column: 8, scope: !8731)
!8895 = !DILocation(line: 351, column: 29, scope: !8731)
!8896 = !DILocation(line: 361, column: 7, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8697, file: !245, line: 361, column: 7)
!8898 = !DILocation(line: 361, column: 17, scope: !8897)
!8899 = !DILocation(line: 361, column: 35, scope: !8897)
!8900 = !DILocation(line: 361, column: 44, scope: !8897)
!8901 = !DILocation(line: 361, column: 54, scope: !8897)
!8902 = !DILocation(line: 361, column: 67, scope: !8897)
!8903 = !DILocation(line: 361, column: 22, scope: !8897)
!8904 = !DILocation(line: 361, column: 7, scope: !8697)
!8905 = !DILocation(line: 362, column: 5, scope: !8897)
!8906 = !DILocation(line: 364, column: 5, scope: !8897)
!8907 = !DILocation(line: 365, column: 1, scope: !8697)
!8908 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !245, file: !245, line: 1013, type: !469, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8909 = !DILocalVariable(name: "desc", arg: 1, scope: !8908, file: !245, line: 1013, type: !7)
!8910 = !DILocation(line: 1013, column: 23, scope: !8908)
!8911 = !DILocalVariable(name: "name", arg: 2, scope: !8908, file: !245, line: 1013, type: !115)
!8912 = !DILocation(line: 1013, column: 41, scope: !8908)
!8913 = !DILocalVariable(name: "mode", arg: 3, scope: !8908, file: !245, line: 1013, type: !160)
!8914 = !DILocation(line: 1013, column: 54, scope: !8908)
!8915 = !DILocation(line: 1016, column: 12, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8908, file: !245, line: 1016, column: 7)
!8917 = !DILocation(line: 1016, column: 9, scope: !8916)
!8918 = !DILocation(line: 1016, column: 7, scope: !8908)
!8919 = !DILocation(line: 1017, column: 20, scope: !8916)
!8920 = !DILocation(line: 1017, column: 26, scope: !8916)
!8921 = !DILocation(line: 1017, column: 12, scope: !8916)
!8922 = !DILocation(line: 1017, column: 5, scope: !8916)
!8923 = !DILocation(line: 1019, column: 18, scope: !8908)
!8924 = !DILocation(line: 1019, column: 24, scope: !8908)
!8925 = !DILocation(line: 1019, column: 10, scope: !8908)
!8926 = !DILocation(line: 1019, column: 3, scope: !8908)
!8927 = !DILocation(line: 1020, column: 1, scope: !8908)
!8928 = distinct !DISubprogram(name: "is_nul", scope: !141, file: !141, line: 509, type: !464, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8929 = !DILocalVariable(name: "buf", arg: 1, scope: !8928, file: !141, line: 509, type: !427)
!8930 = !DILocation(line: 509, column: 21, scope: !8928)
!8931 = !DILocalVariable(name: "length", arg: 2, scope: !8928, file: !141, line: 509, type: !55)
!8932 = !DILocation(line: 509, column: 33, scope: !8928)
!8933 = !DILocalVariable(name: "p", scope: !8928, file: !141, line: 511, type: !466)
!8934 = !DILocation(line: 511, column: 24, scope: !8928)
!8935 = !DILocation(line: 511, column: 28, scope: !8928)
!8936 = !DILocalVariable(name: "word", scope: !8928, file: !141, line: 521, type: !468)
!8937 = !DILocation(line: 521, column: 17, scope: !8928)
!8938 = !DILocation(line: 524, column: 9, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8928, file: !141, line: 524, column: 7)
!8940 = !DILocation(line: 524, column: 7, scope: !8928)
!8941 = !DILocation(line: 525, column: 7, scope: !8939)
!8942 = !DILocation(line: 528, column: 3, scope: !8928)
!8943 = !DILocation(line: 528, column: 10, scope: !8928)
!8944 = !DILocation(line: 530, column: 12, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !141, line: 530, column: 11)
!8946 = distinct !DILexicalBlock(scope: !8928, file: !141, line: 529, column: 5)
!8947 = !DILocation(line: 530, column: 11, scope: !8945)
!8948 = !DILocation(line: 530, column: 11, scope: !8946)
!8949 = !DILocation(line: 531, column: 9, scope: !8945)
!8950 = !DILocation(line: 532, column: 8, scope: !8946)
!8951 = !DILocation(line: 533, column: 13, scope: !8946)
!8952 = !DILocation(line: 534, column: 13, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8946, file: !141, line: 534, column: 11)
!8954 = !DILocation(line: 534, column: 11, scope: !8946)
!8955 = !DILocation(line: 535, column: 9, scope: !8953)
!8956 = distinct !{!8956, !8942, !8957}
!8957 = !DILocation(line: 536, column: 4, scope: !8928)
!8958 = !DILocation(line: 539, column: 3, scope: !8928)
!8959 = !DILocation(line: 541, column: 22, scope: !8960)
!8960 = distinct !DILexicalBlock(scope: !8961, file: !141, line: 540, column: 5)
!8961 = distinct !DILexicalBlock(scope: !8962, file: !141, line: 539, column: 3)
!8962 = distinct !DILexicalBlock(scope: !8928, file: !141, line: 539, column: 3)
!8963 = !DILocation(line: 541, column: 7, scope: !8960)
!8964 = !DILocation(line: 542, column: 11, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8960, file: !141, line: 542, column: 11)
!8966 = !DILocation(line: 542, column: 11, scope: !8960)
!8967 = !DILocation(line: 543, column: 9, scope: !8965)
!8968 = !DILocation(line: 544, column: 9, scope: !8960)
!8969 = !DILocation(line: 545, column: 14, scope: !8960)
!8970 = !DILocation(line: 546, column: 13, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8960, file: !141, line: 546, column: 11)
!8972 = !DILocation(line: 546, column: 11, scope: !8960)
!8973 = !DILocation(line: 547, column: 9, scope: !8971)
!8974 = !DILocation(line: 548, column: 11, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8960, file: !141, line: 548, column: 11)
!8976 = !DILocation(line: 548, column: 34, scope: !8975)
!8977 = !DILocation(line: 548, column: 11, scope: !8960)
!8978 = !DILocation(line: 549, column: 9, scope: !8975)
!8979 = !DILocation(line: 539, column: 3, scope: !8961)
!8980 = distinct !{!8980, !8981, !8982}
!8981 = !DILocation(line: 539, column: 3, scope: !8962)
!8982 = !DILocation(line: 550, column: 4, scope: !8962)
!8983 = !DILocation(line: 553, column: 19, scope: !8928)
!8984 = !DILocation(line: 553, column: 24, scope: !8928)
!8985 = !DILocation(line: 553, column: 27, scope: !8928)
!8986 = !DILocation(line: 553, column: 11, scope: !8928)
!8987 = !DILocation(line: 553, column: 35, scope: !8928)
!8988 = !DILocation(line: 553, column: 4, scope: !8928)
!8989 = !DILocation(line: 554, column: 1, scope: !8928)
!8990 = distinct !DISubprogram(name: "create_hole", scope: !245, file: !245, line: 224, type: !450, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!8991 = !DILocalVariable(name: "fd", arg: 1, scope: !8990, file: !245, line: 224, type: !7)
!8992 = !DILocation(line: 224, column: 18, scope: !8990)
!8993 = !DILocalVariable(name: "name", arg: 2, scope: !8990, file: !245, line: 224, type: !115)
!8994 = !DILocation(line: 224, column: 34, scope: !8990)
!8995 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8990, file: !245, line: 224, type: !120)
!8996 = !DILocation(line: 224, column: 45, scope: !8990)
!8997 = !DILocalVariable(name: "size", arg: 4, scope: !8990, file: !245, line: 224, type: !248)
!8998 = !DILocation(line: 224, column: 64, scope: !8990)
!8999 = !DILocalVariable(name: "file_end", scope: !8990, file: !245, line: 226, type: !248)
!9000 = !DILocation(line: 226, column: 9, scope: !8990)
!9001 = !DILocation(line: 226, column: 27, scope: !8990)
!9002 = !DILocation(line: 226, column: 31, scope: !8990)
!9003 = !DILocation(line: 226, column: 20, scope: !8990)
!9004 = !DILocation(line: 228, column: 7, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8990, file: !245, line: 228, column: 7)
!9006 = !DILocation(line: 228, column: 16, scope: !9005)
!9007 = !DILocation(line: 228, column: 7, scope: !8990)
!9008 = !DILocation(line: 230, column: 17, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !245, line: 229, column: 5)
!9010 = !DILocation(line: 230, column: 24, scope: !9009)
!9011 = !DILocation(line: 230, column: 46, scope: !9009)
!9012 = !DILocation(line: 230, column: 7, scope: !9009)
!9013 = !DILocation(line: 231, column: 7, scope: !9009)
!9014 = !DILocation(line: 238, column: 7, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8990, file: !245, line: 238, column: 7)
!9016 = !DILocation(line: 238, column: 19, scope: !9015)
!9017 = !DILocation(line: 238, column: 34, scope: !9015)
!9018 = !DILocation(line: 238, column: 38, scope: !9015)
!9019 = !DILocation(line: 238, column: 49, scope: !9015)
!9020 = !DILocation(line: 238, column: 47, scope: !9015)
!9021 = !DILocation(line: 238, column: 55, scope: !9015)
!9022 = !DILocation(line: 238, column: 22, scope: !9015)
!9023 = !DILocation(line: 238, column: 61, scope: !9015)
!9024 = !DILocation(line: 238, column: 7, scope: !8990)
!9025 = !DILocation(line: 240, column: 17, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9015, file: !245, line: 239, column: 5)
!9027 = !DILocation(line: 240, column: 24, scope: !9026)
!9028 = !DILocation(line: 240, column: 52, scope: !9026)
!9029 = !DILocation(line: 240, column: 7, scope: !9026)
!9030 = !DILocation(line: 241, column: 7, scope: !9026)
!9031 = !DILocation(line: 244, column: 3, scope: !8990)
!9032 = !DILocation(line: 245, column: 1, scope: !8990)
!9033 = distinct !DISubprogram(name: "punch_hole", scope: !245, file: !245, line: 205, type: !454, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9034 = !DILocalVariable(name: "fd", arg: 1, scope: !9033, file: !245, line: 205, type: !7)
!9035 = !DILocation(line: 205, column: 17, scope: !9033)
!9036 = !DILocalVariable(name: "offset", arg: 2, scope: !9033, file: !245, line: 205, type: !248)
!9037 = !DILocation(line: 205, column: 27, scope: !9033)
!9038 = !DILocalVariable(name: "length", arg: 3, scope: !9033, file: !245, line: 205, type: !248)
!9039 = !DILocation(line: 205, column: 41, scope: !9033)
!9040 = !DILocalVariable(name: "ret", scope: !9033, file: !245, line: 207, type: !7)
!9041 = !DILocation(line: 207, column: 7, scope: !9033)
!9042 = !DILocation(line: 211, column: 20, scope: !9033)
!9043 = !DILocation(line: 212, column: 20, scope: !9033)
!9044 = !DILocation(line: 212, column: 28, scope: !9033)
!9045 = !DILocation(line: 211, column: 9, scope: !9033)
!9046 = !DILocation(line: 211, column: 7, scope: !9033)
!9047 = !DILocation(line: 213, column: 7, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9033, file: !245, line: 213, column: 7)
!9049 = !DILocation(line: 213, column: 11, scope: !9048)
!9050 = !DILocation(line: 213, column: 15, scope: !9048)
!9051 = !DILocation(line: 213, column: 31, scope: !9048)
!9052 = !DILocation(line: 213, column: 19, scope: !9048)
!9053 = !DILocation(line: 213, column: 38, scope: !9048)
!9054 = !DILocation(line: 213, column: 41, scope: !9048)
!9055 = !DILocation(line: 213, column: 47, scope: !9048)
!9056 = !DILocation(line: 213, column: 7, scope: !9033)
!9057 = !DILocation(line: 214, column: 9, scope: !9048)
!9058 = !DILocation(line: 214, column: 5, scope: !9048)
!9059 = !DILocation(line: 217, column: 10, scope: !9033)
!9060 = !DILocation(line: 217, column: 3, scope: !9033)
!9061 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !141, file: !141, line: 762, type: !307, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9062 = !DILocalVariable(name: "err", arg: 1, scope: !9061, file: !141, line: 762, type: !7)
!9063 = !DILocation(line: 762, column: 17, scope: !9061)
!9064 = !DILocation(line: 764, column: 10, scope: !9061)
!9065 = !DILocation(line: 764, column: 14, scope: !9061)
!9066 = !DILocation(line: 764, column: 28, scope: !9061)
!9067 = !DILocation(line: 764, column: 3, scope: !9061)
!9068 = distinct !DISubprogram(name: "extent_scan_free", scope: !433, file: !433, line: 66, type: !438, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9069 = !DILocalVariable(name: "scan", arg: 1, scope: !9068, file: !433, line: 66, type: !440)
!9070 = !DILocation(line: 66, column: 39, scope: !9068)
!9071 = !DILocation(line: 68, column: 9, scope: !9068)
!9072 = !DILocation(line: 68, column: 15, scope: !9068)
!9073 = !DILocation(line: 68, column: 3, scope: !9068)
!9074 = !DILocation(line: 69, column: 3, scope: !9068)
!9075 = !DILocation(line: 69, column: 9, scope: !9068)
!9076 = !DILocation(line: 69, column: 18, scope: !9068)
!9077 = !DILocation(line: 70, column: 3, scope: !9068)
!9078 = !DILocation(line: 70, column: 9, scope: !9068)
!9079 = !DILocation(line: 70, column: 18, scope: !9068)
!9080 = !DILocation(line: 71, column: 1, scope: !9068)
!9081 = !DILocalVariable(name: "fd", arg: 1, scope: !520, file: !245, line: 385, type: !7)
!9082 = !DILocation(line: 385, column: 18, scope: !520)
!9083 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !520, file: !245, line: 385, type: !248)
!9084 = !DILocation(line: 385, column: 28, scope: !520)
!9085 = !DILocation(line: 393, column: 7, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !520, file: !245, line: 393, column: 7)
!9087 = !DILocation(line: 393, column: 13, scope: !9086)
!9088 = !DILocation(line: 393, column: 7, scope: !520)
!9089 = !DILocation(line: 396, column: 23, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9086, file: !245, line: 394, column: 5)
!9091 = !DILocation(line: 396, column: 15, scope: !9090)
!9092 = !DILocation(line: 396, column: 13, scope: !9090)
!9093 = !DILocation(line: 397, column: 11, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9090, file: !245, line: 397, column: 11)
!9095 = !DILocation(line: 397, column: 17, scope: !9094)
!9096 = !DILocation(line: 397, column: 11, scope: !9090)
!9097 = !DILocation(line: 399, column: 17, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9094, file: !245, line: 398, column: 9)
!9099 = !DILocation(line: 400, column: 14, scope: !9098)
!9100 = !DILocation(line: 401, column: 9, scope: !9098)
!9101 = !DILocation(line: 402, column: 5, scope: !9090)
!9102 = !DILocation(line: 404, column: 3, scope: !520)
!9103 = !DILocation(line: 404, column: 10, scope: !520)
!9104 = !DILocalVariable(name: "n", scope: !9105, file: !245, line: 406, type: !55)
!9105 = distinct !DILexicalBlock(scope: !520, file: !245, line: 405, column: 5)
!9106 = !DILocation(line: 406, column: 14, scope: !9105)
!9107 = !DILocation(line: 406, column: 18, scope: !9105)
!9108 = !DILocation(line: 407, column: 24, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9105, file: !245, line: 407, column: 11)
!9110 = !DILocation(line: 407, column: 28, scope: !9109)
!9111 = !DILocation(line: 407, column: 35, scope: !9109)
!9112 = !DILocation(line: 407, column: 12, scope: !9109)
!9113 = !DILocation(line: 407, column: 42, scope: !9109)
!9114 = !DILocation(line: 407, column: 39, scope: !9109)
!9115 = !DILocation(line: 407, column: 11, scope: !9105)
!9116 = !DILocation(line: 408, column: 9, scope: !9109)
!9117 = !DILocation(line: 409, column: 18, scope: !9105)
!9118 = !DILocation(line: 409, column: 15, scope: !9105)
!9119 = distinct !{!9119, !9102, !9120}
!9120 = !DILocation(line: 410, column: 5, scope: !520)
!9121 = !DILocation(line: 412, column: 3, scope: !520)
!9122 = !DILocation(line: 413, column: 1, scope: !520)
!9123 = distinct !DISubprogram(name: "writable_destination", scope: !245, file: !245, line: 1702, type: !368, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9124 = !DILocalVariable(name: "file", arg: 1, scope: !9123, file: !245, line: 1702, type: !115)
!9125 = !DILocation(line: 1702, column: 35, scope: !9123)
!9126 = !DILocalVariable(name: "mode", arg: 2, scope: !9123, file: !245, line: 1702, type: !160)
!9127 = !DILocation(line: 1702, column: 48, scope: !9123)
!9128 = !DILocation(line: 1704, column: 11, scope: !9123)
!9129 = !DILocation(line: 1705, column: 11, scope: !9123)
!9130 = !DILocation(line: 1705, column: 14, scope: !9123)
!9131 = !DILocation(line: 1706, column: 11, scope: !9123)
!9132 = !DILocation(line: 1706, column: 26, scope: !9123)
!9133 = !DILocation(line: 1706, column: 14, scope: !9123)
!9134 = !DILocation(line: 1706, column: 38, scope: !9123)
!9135 = !DILocation(line: 1704, column: 3, scope: !9123)
!9136 = distinct !DISubprogram(name: "cp_options_default", scope: !245, file: !245, line: 3035, type: !297, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !244, retainedNodes: !143)
!9137 = !DILocalVariable(name: "x", arg: 1, scope: !9136, file: !245, line: 3035, type: !299)
!9138 = !DILocation(line: 3035, column: 40, scope: !9136)
!9139 = !DILocation(line: 3037, column: 11, scope: !9136)
!9140 = !DILocation(line: 3037, column: 3, scope: !9136)
!9141 = !DILocation(line: 3051, column: 48, scope: !9136)
!9142 = !DILocation(line: 3051, column: 59, scope: !9136)
!9143 = !DILocation(line: 3051, column: 25, scope: !9136)
!9144 = !DILocation(line: 3051, column: 28, scope: !9136)
!9145 = !DILocation(line: 3051, column: 45, scope: !9136)
!9146 = !DILocation(line: 3051, column: 3, scope: !9136)
!9147 = !DILocation(line: 3051, column: 6, scope: !9136)
!9148 = !DILocation(line: 3051, column: 23, scope: !9136)
!9149 = !DILocation(line: 3053, column: 3, scope: !9136)
!9150 = !DILocation(line: 3053, column: 6, scope: !9136)
!9151 = !DILocation(line: 3053, column: 19, scope: !9136)
!9152 = !DILocation(line: 3054, column: 1, scope: !9136)
!9153 = distinct !DISubprogram(name: "forget_created", scope: !531, file: !531, line: 82, type: !533, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9154 = !DILocalVariable(name: "ino", arg: 1, scope: !9153, file: !531, line: 82, type: !227)
!9155 = !DILocation(line: 82, column: 23, scope: !9153)
!9156 = !DILocalVariable(name: "dev", arg: 2, scope: !9153, file: !531, line: 82, type: !230)
!9157 = !DILocation(line: 82, column: 34, scope: !9153)
!9158 = !DILocalVariable(name: "probe", scope: !9153, file: !531, line: 84, type: !536)
!9159 = !DILocation(line: 84, column: 22, scope: !9153)
!9160 = !DILocalVariable(name: "ent", scope: !9153, file: !531, line: 85, type: !535)
!9161 = !DILocation(line: 85, column: 23, scope: !9153)
!9162 = !DILocation(line: 87, column: 18, scope: !9153)
!9163 = !DILocation(line: 87, column: 9, scope: !9153)
!9164 = !DILocation(line: 87, column: 16, scope: !9153)
!9165 = !{!9166, !3183, i64 0}
!9166 = !{!"Src_to_dest", !3183, i64 0, !3183, i64 8, !2999, i64 16}
!9167 = !DILocation(line: 88, column: 18, scope: !9153)
!9168 = !DILocation(line: 88, column: 9, scope: !9153)
!9169 = !DILocation(line: 88, column: 16, scope: !9153)
!9170 = !{!9166, !3183, i64 8}
!9171 = !DILocation(line: 89, column: 9, scope: !9153)
!9172 = !DILocation(line: 89, column: 14, scope: !9153)
!9173 = !{!9166, !2999, i64 16}
!9174 = !DILocation(line: 91, column: 22, scope: !9153)
!9175 = !DILocation(line: 91, column: 35, scope: !9153)
!9176 = !DILocation(line: 91, column: 9, scope: !9153)
!9177 = !DILocation(line: 91, column: 7, scope: !9153)
!9178 = !DILocation(line: 92, column: 7, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9153, file: !531, line: 92, column: 7)
!9180 = !DILocation(line: 92, column: 7, scope: !9153)
!9181 = !DILocation(line: 93, column: 23, scope: !9179)
!9182 = !DILocation(line: 93, column: 5, scope: !9179)
!9183 = !DILocation(line: 94, column: 1, scope: !9153)
!9184 = distinct !DISubprogram(name: "src_to_dest_free", scope: !531, file: !531, line: 72, type: !547, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9185 = !DILocalVariable(name: "x", arg: 1, scope: !9184, file: !531, line: 72, type: !53)
!9186 = !DILocation(line: 72, column: 25, scope: !9184)
!9187 = !DILocalVariable(name: "a", scope: !9184, file: !531, line: 74, type: !535)
!9188 = !DILocation(line: 74, column: 23, scope: !9184)
!9189 = !DILocation(line: 74, column: 27, scope: !9184)
!9190 = !DILocation(line: 75, column: 9, scope: !9184)
!9191 = !DILocation(line: 75, column: 12, scope: !9184)
!9192 = !DILocation(line: 75, column: 3, scope: !9184)
!9193 = !DILocation(line: 76, column: 9, scope: !9184)
!9194 = !DILocation(line: 76, column: 3, scope: !9184)
!9195 = !DILocation(line: 77, column: 1, scope: !9184)
!9196 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !531, file: !531, line: 100, type: !541, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9197 = !DILocalVariable(name: "ino", arg: 1, scope: !9196, file: !531, line: 100, type: !227)
!9198 = !DILocation(line: 100, column: 27, scope: !9196)
!9199 = !DILocalVariable(name: "dev", arg: 2, scope: !9196, file: !531, line: 100, type: !230)
!9200 = !DILocation(line: 100, column: 38, scope: !9196)
!9201 = !DILocalVariable(name: "ent", scope: !9196, file: !531, line: 102, type: !536)
!9202 = !DILocation(line: 102, column: 22, scope: !9196)
!9203 = !DILocalVariable(name: "e", scope: !9196, file: !531, line: 103, type: !543)
!9204 = !DILocation(line: 103, column: 29, scope: !9196)
!9205 = !DILocation(line: 104, column: 16, scope: !9196)
!9206 = !DILocation(line: 104, column: 7, scope: !9196)
!9207 = !DILocation(line: 104, column: 14, scope: !9196)
!9208 = !DILocation(line: 105, column: 16, scope: !9196)
!9209 = !DILocation(line: 105, column: 7, scope: !9196)
!9210 = !DILocation(line: 105, column: 14, scope: !9196)
!9211 = !DILocation(line: 106, column: 20, scope: !9196)
!9212 = !DILocation(line: 106, column: 33, scope: !9196)
!9213 = !DILocation(line: 106, column: 7, scope: !9196)
!9214 = !DILocation(line: 106, column: 5, scope: !9196)
!9215 = !DILocation(line: 107, column: 10, scope: !9196)
!9216 = !DILocation(line: 107, column: 14, scope: !9196)
!9217 = !DILocation(line: 107, column: 17, scope: !9196)
!9218 = !DILocation(line: 107, column: 3, scope: !9196)
!9219 = distinct !DISubprogram(name: "remember_copied", scope: !531, file: !531, line: 115, type: !545, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9220 = !DILocalVariable(name: "name", arg: 1, scope: !9219, file: !531, line: 115, type: !115)
!9221 = !DILocation(line: 115, column: 30, scope: !9219)
!9222 = !DILocalVariable(name: "ino", arg: 2, scope: !9219, file: !531, line: 115, type: !227)
!9223 = !DILocation(line: 115, column: 42, scope: !9219)
!9224 = !DILocalVariable(name: "dev", arg: 3, scope: !9219, file: !531, line: 115, type: !230)
!9225 = !DILocation(line: 115, column: 53, scope: !9219)
!9226 = !DILocalVariable(name: "ent", scope: !9219, file: !531, line: 117, type: !535)
!9227 = !DILocation(line: 117, column: 23, scope: !9219)
!9228 = !DILocalVariable(name: "ent_from_table", scope: !9219, file: !531, line: 118, type: !535)
!9229 = !DILocation(line: 118, column: 23, scope: !9219)
!9230 = !DILocation(line: 120, column: 9, scope: !9219)
!9231 = !DILocation(line: 120, column: 7, scope: !9219)
!9232 = !DILocation(line: 121, column: 24, scope: !9219)
!9233 = !DILocation(line: 121, column: 15, scope: !9219)
!9234 = !DILocation(line: 121, column: 3, scope: !9219)
!9235 = !DILocation(line: 121, column: 8, scope: !9219)
!9236 = !DILocation(line: 121, column: 13, scope: !9219)
!9237 = !DILocation(line: 122, column: 17, scope: !9219)
!9238 = !DILocation(line: 122, column: 3, scope: !9219)
!9239 = !DILocation(line: 122, column: 8, scope: !9219)
!9240 = !DILocation(line: 122, column: 15, scope: !9219)
!9241 = !DILocation(line: 123, column: 17, scope: !9219)
!9242 = !DILocation(line: 123, column: 3, scope: !9219)
!9243 = !DILocation(line: 123, column: 8, scope: !9219)
!9244 = !DILocation(line: 123, column: 15, scope: !9219)
!9245 = !DILocation(line: 125, column: 33, scope: !9219)
!9246 = !DILocation(line: 125, column: 46, scope: !9219)
!9247 = !DILocation(line: 125, column: 20, scope: !9219)
!9248 = !DILocation(line: 125, column: 18, scope: !9219)
!9249 = !DILocation(line: 126, column: 7, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9219, file: !531, line: 126, column: 7)
!9251 = !DILocation(line: 126, column: 22, scope: !9250)
!9252 = !DILocation(line: 126, column: 7, scope: !9219)
!9253 = !DILocation(line: 129, column: 7, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9250, file: !531, line: 127, column: 5)
!9255 = !DILocation(line: 135, column: 7, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9219, file: !531, line: 135, column: 7)
!9257 = !DILocation(line: 135, column: 25, scope: !9256)
!9258 = !DILocation(line: 135, column: 22, scope: !9256)
!9259 = !DILocation(line: 135, column: 7, scope: !9219)
!9260 = !DILocation(line: 137, column: 25, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9256, file: !531, line: 136, column: 5)
!9262 = !DILocation(line: 137, column: 7, scope: !9261)
!9263 = !DILocation(line: 138, column: 23, scope: !9261)
!9264 = !DILocation(line: 138, column: 39, scope: !9261)
!9265 = !DILocation(line: 138, column: 7, scope: !9261)
!9266 = !DILocation(line: 142, column: 3, scope: !9219)
!9267 = !DILocation(line: 143, column: 1, scope: !9219)
!9268 = distinct !DISubprogram(name: "hash_init", scope: !531, file: !531, line: 147, type: !134, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9269 = !DILocation(line: 149, column: 17, scope: !9268)
!9270 = !DILocation(line: 149, column: 15, scope: !9268)
!9271 = !DILocation(line: 153, column: 7, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9268, file: !531, line: 153, column: 7)
!9273 = !DILocation(line: 153, column: 19, scope: !9272)
!9274 = !DILocation(line: 153, column: 7, scope: !9268)
!9275 = !DILocation(line: 154, column: 5, scope: !9272)
!9276 = !DILocation(line: 155, column: 1, scope: !9268)
!9277 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !531, file: !531, line: 51, type: !549, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9278 = !DILocalVariable(name: "x", arg: 1, scope: !9277, file: !531, line: 51, type: !427)
!9279 = !DILocation(line: 51, column: 31, scope: !9277)
!9280 = !DILocalVariable(name: "table_size", arg: 2, scope: !9277, file: !531, line: 51, type: !55)
!9281 = !DILocation(line: 51, column: 41, scope: !9277)
!9282 = !DILocalVariable(name: "p", scope: !9277, file: !531, line: 53, type: !543)
!9283 = !DILocation(line: 53, column: 29, scope: !9277)
!9284 = !DILocation(line: 53, column: 33, scope: !9277)
!9285 = !DILocation(line: 58, column: 22, scope: !9277)
!9286 = !DILocation(line: 58, column: 25, scope: !9277)
!9287 = !DILocation(line: 58, column: 34, scope: !9277)
!9288 = !DILocation(line: 58, column: 32, scope: !9277)
!9289 = !DILocation(line: 58, column: 3, scope: !9277)
!9290 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !531, file: !531, line: 64, type: !551, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9291 = !DILocalVariable(name: "x", arg: 1, scope: !9290, file: !531, line: 64, type: !427)
!9292 = !DILocation(line: 64, column: 34, scope: !9290)
!9293 = !DILocalVariable(name: "y", arg: 2, scope: !9290, file: !531, line: 64, type: !427)
!9294 = !DILocation(line: 64, column: 49, scope: !9290)
!9295 = !DILocalVariable(name: "a", scope: !9290, file: !531, line: 66, type: !543)
!9296 = !DILocation(line: 66, column: 29, scope: !9290)
!9297 = !DILocation(line: 66, column: 33, scope: !9290)
!9298 = !DILocalVariable(name: "b", scope: !9290, file: !531, line: 67, type: !543)
!9299 = !DILocation(line: 67, column: 29, scope: !9290)
!9300 = !DILocation(line: 67, column: 33, scope: !9290)
!9301 = !DILocation(line: 68, column: 10, scope: !9290)
!9302 = !DILocation(line: 0, scope: !9290)
!9303 = !DILocation(line: 68, column: 3, scope: !9290)
!9304 = distinct !DISubprogram(name: "forget_all", scope: !531, file: !531, line: 161, type: !134, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !530, retainedNodes: !143)
!9305 = !DILocation(line: 163, column: 14, scope: !9304)
!9306 = !DILocation(line: 163, column: 3, scope: !9304)
!9307 = !DILocation(line: 164, column: 1, scope: !9304)
!9308 = distinct !DISubprogram(name: "extent_scan_init", scope: !1528, file: !1528, line: 69, type: !1531, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1527, retainedNodes: !143)
!9309 = !DILocalVariable(name: "src_fd", arg: 1, scope: !9308, file: !1528, line: 69, type: !7)
!9310 = !DILocation(line: 69, column: 23, scope: !9308)
!9311 = !DILocalVariable(name: "scan", arg: 2, scope: !9308, file: !1528, line: 69, type: !1533)
!9312 = !DILocation(line: 69, column: 51, scope: !9308)
!9313 = !DILocation(line: 71, column: 14, scope: !9308)
!9314 = !DILocation(line: 71, column: 3, scope: !9308)
!9315 = !DILocation(line: 71, column: 9, scope: !9308)
!9316 = !DILocation(line: 71, column: 12, scope: !9308)
!9317 = !{!8432, !2986, i64 0}
!9318 = !DILocation(line: 72, column: 3, scope: !9308)
!9319 = !DILocation(line: 72, column: 9, scope: !9308)
!9320 = !DILocation(line: 72, column: 18, scope: !9308)
!9321 = !DILocation(line: 73, column: 3, scope: !9308)
!9322 = !DILocation(line: 73, column: 9, scope: !9308)
!9323 = !DILocation(line: 73, column: 18, scope: !9308)
!9324 = !DILocation(line: 74, column: 3, scope: !9308)
!9325 = !DILocation(line: 74, column: 9, scope: !9308)
!9326 = !DILocation(line: 74, column: 20, scope: !9308)
!9327 = !{!8432, !3183, i64 8}
!9328 = !DILocation(line: 75, column: 3, scope: !9308)
!9329 = !DILocation(line: 75, column: 9, scope: !9308)
!9330 = !DILocation(line: 75, column: 29, scope: !9308)
!9331 = !DILocation(line: 76, column: 3, scope: !9308)
!9332 = !DILocation(line: 76, column: 9, scope: !9308)
!9333 = !DILocation(line: 76, column: 26, scope: !9308)
!9334 = !DILocation(line: 77, column: 20, scope: !9308)
!9335 = !DILocation(line: 77, column: 3, scope: !9308)
!9336 = !DILocation(line: 77, column: 9, scope: !9308)
!9337 = !DILocation(line: 77, column: 18, scope: !9308)
!9338 = !{!8432, !2986, i64 16}
!9339 = !DILocation(line: 78, column: 1, scope: !9308)
!9340 = distinct !DISubprogram(name: "extent_need_sync", scope: !1528, file: !1528, line: 33, type: !1247, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1527, retainedNodes: !143)
!9341 = !DILocation(line: 39, column: 3, scope: !9340)
!9342 = distinct !DISubprogram(name: "extent_scan_read", scope: !1528, file: !1528, line: 87, type: !1549, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1527, retainedNodes: !143)
!9343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9342, file: !1528, line: 94, size: 32768, elements: !9344)
!9344 = !{!9345, !9346}
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !9343, file: !1528, line: 94, baseType: !1552, size: 256)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !9343, file: !1528, line: 94, baseType: !2817, size: 32768)
!9347 = !DILocalVariable(name: "scan", arg: 1, scope: !9342, file: !1528, line: 87, type: !1533)
!9348 = !DILocation(line: 87, column: 39, scope: !9342)
!9349 = !DILocalVariable(name: "si", scope: !9342, file: !1528, line: 89, type: !70)
!9350 = !DILocation(line: 89, column: 16, scope: !9342)
!9351 = !DILocalVariable(name: "last_ei", scope: !9342, file: !1528, line: 90, type: !1543)
!9352 = !DILocation(line: 90, column: 23, scope: !9342)
!9353 = !DILocation(line: 90, column: 33, scope: !9342)
!9354 = !DILocation(line: 90, column: 39, scope: !9342)
!9355 = !DILocation(line: 92, column: 3, scope: !9342)
!9356 = !DILocalVariable(name: "fiemap_buf", scope: !9357, file: !1528, line: 94, type: !9343)
!9357 = distinct !DILexicalBlock(scope: !9342, file: !1528, line: 93, column: 5)
!9358 = !DILocation(line: 94, column: 48, scope: !9357)
!9359 = !DILocalVariable(name: "fiemap", scope: !9357, file: !1528, line: 95, type: !1551)
!9360 = !DILocation(line: 95, column: 22, scope: !9357)
!9361 = !DILocation(line: 95, column: 43, scope: !9357)
!9362 = !DILocalVariable(name: "fm_extents", scope: !9357, file: !1528, line: 96, type: !1578)
!9363 = !DILocation(line: 96, column: 29, scope: !9357)
!9364 = !DILocation(line: 96, column: 43, scope: !9357)
!9365 = !DILocation(line: 96, column: 51, scope: !9357)
!9366 = !DILocation(line: 104, column: 7, scope: !9357)
!9367 = !DILocation(line: 106, column: 26, scope: !9357)
!9368 = !DILocation(line: 106, column: 32, scope: !9357)
!9369 = !DILocation(line: 106, column: 7, scope: !9357)
!9370 = !DILocation(line: 106, column: 15, scope: !9357)
!9371 = !DILocation(line: 106, column: 24, scope: !9357)
!9372 = !DILocation(line: 107, column: 26, scope: !9357)
!9373 = !DILocation(line: 107, column: 32, scope: !9357)
!9374 = !DILocation(line: 107, column: 7, scope: !9357)
!9375 = !DILocation(line: 107, column: 15, scope: !9357)
!9376 = !DILocation(line: 107, column: 24, scope: !9357)
!9377 = !DILocation(line: 108, column: 7, scope: !9357)
!9378 = !DILocation(line: 108, column: 15, scope: !9357)
!9379 = !DILocation(line: 108, column: 31, scope: !9357)
!9380 = !DILocation(line: 109, column: 47, scope: !9357)
!9381 = !DILocation(line: 109, column: 53, scope: !9357)
!9382 = !DILocation(line: 109, column: 45, scope: !9357)
!9383 = !DILocation(line: 109, column: 7, scope: !9357)
!9384 = !DILocation(line: 109, column: 15, scope: !9357)
!9385 = !DILocation(line: 109, column: 25, scope: !9357)
!9386 = !DILocation(line: 113, column: 18, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 113, column: 11)
!9388 = !DILocation(line: 113, column: 24, scope: !9387)
!9389 = !DILocation(line: 113, column: 43, scope: !9387)
!9390 = !DILocation(line: 113, column: 11, scope: !9387)
!9391 = !DILocation(line: 113, column: 51, scope: !9387)
!9392 = !DILocation(line: 113, column: 11, scope: !9357)
!9393 = !DILocation(line: 115, column: 15, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9395, file: !1528, line: 115, column: 15)
!9395 = distinct !DILexicalBlock(scope: !9387, file: !1528, line: 114, column: 9)
!9396 = !DILocation(line: 115, column: 21, scope: !9394)
!9397 = !DILocation(line: 115, column: 32, scope: !9394)
!9398 = !DILocation(line: 115, column: 15, scope: !9395)
!9399 = !DILocation(line: 116, column: 13, scope: !9394)
!9400 = !DILocation(line: 116, column: 19, scope: !9394)
!9401 = !DILocation(line: 116, column: 39, scope: !9394)
!9402 = !DILocation(line: 117, column: 11, scope: !9395)
!9403 = !DILocation(line: 121, column: 11, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 121, column: 11)
!9405 = !DILocation(line: 121, column: 19, scope: !9404)
!9406 = !DILocation(line: 121, column: 37, scope: !9404)
!9407 = !DILocation(line: 121, column: 11, scope: !9357)
!9408 = !DILocation(line: 123, column: 11, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9404, file: !1528, line: 122, column: 9)
!9410 = !DILocation(line: 123, column: 17, scope: !9409)
!9411 = !DILocation(line: 123, column: 34, scope: !9409)
!9412 = !DILocation(line: 124, column: 18, scope: !9409)
!9413 = !DILocation(line: 124, column: 24, scope: !9409)
!9414 = !DILocation(line: 124, column: 35, scope: !9409)
!9415 = !DILocation(line: 124, column: 11, scope: !9409)
!9416 = !DILocation(line: 127, column: 7, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9418, file: !1528, line: 127, column: 7)
!9418 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 127, column: 7)
!9419 = !DILocation(line: 127, column: 7, scope: !9418)
!9420 = !DILocation(line: 128, column: 25, scope: !9357)
!9421 = !DILocation(line: 128, column: 33, scope: !9357)
!9422 = !DILocation(line: 128, column: 7, scope: !9357)
!9423 = !DILocation(line: 128, column: 13, scope: !9357)
!9424 = !DILocation(line: 128, column: 22, scope: !9357)
!9425 = !DILocalVariable(name: "prev_idx", scope: !9426, file: !1528, line: 132, type: !55)
!9426 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 129, column: 7)
!9427 = !DILocation(line: 132, column: 16, scope: !9426)
!9428 = !DILocation(line: 132, column: 27, scope: !9426)
!9429 = !DILocation(line: 132, column: 37, scope: !9426)
!9430 = !DILocation(line: 132, column: 43, scope: !9426)
!9431 = !DILocation(line: 132, column: 35, scope: !9426)
!9432 = !DILocation(line: 133, column: 37, scope: !9426)
!9433 = !DILocation(line: 133, column: 43, scope: !9426)
!9434 = !DILocation(line: 133, column: 53, scope: !9426)
!9435 = !DILocation(line: 133, column: 59, scope: !9426)
!9436 = !DILocation(line: 133, column: 26, scope: !9426)
!9437 = !DILocation(line: 133, column: 9, scope: !9426)
!9438 = !DILocation(line: 133, column: 15, scope: !9426)
!9439 = !DILocation(line: 133, column: 24, scope: !9426)
!9440 = !DILocation(line: 135, column: 19, scope: !9426)
!9441 = !DILocation(line: 135, column: 25, scope: !9426)
!9442 = !DILocation(line: 135, column: 36, scope: !9426)
!9443 = !DILocation(line: 135, column: 34, scope: !9426)
!9444 = !DILocation(line: 135, column: 17, scope: !9426)
!9445 = !DILocalVariable(name: "i", scope: !9357, file: !1528, line: 138, type: !70)
!9446 = !DILocation(line: 138, column: 20, scope: !9357)
!9447 = !DILocation(line: 139, column: 14, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 139, column: 7)
!9449 = !DILocation(line: 139, column: 12, scope: !9448)
!9450 = !DILocation(line: 139, column: 19, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9448, file: !1528, line: 139, column: 7)
!9452 = !DILocation(line: 139, column: 23, scope: !9451)
!9453 = !DILocation(line: 139, column: 31, scope: !9451)
!9454 = !DILocation(line: 139, column: 21, scope: !9451)
!9455 = !DILocation(line: 139, column: 7, scope: !9448)
!9456 = !DILocation(line: 141, column: 11, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !1528, line: 141, column: 11)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !1528, line: 141, column: 11)
!9459 = distinct !DILexicalBlock(scope: !9451, file: !1528, line: 140, column: 9)
!9460 = !{!9461, !3183, i64 0}
!9461 = !{!"fiemap_extent", !3183, i64 0, !3183, i64 8, !3183, i64 16, !2987, i64 24, !2986, i64 40, !2987, i64 44}
!9462 = !{!9461, !3183, i64 16}
!9463 = !DILocation(line: 141, column: 11, scope: !9458)
!9464 = !DILocation(line: 146, column: 15, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9459, file: !1528, line: 146, column: 15)
!9466 = !DILocation(line: 146, column: 18, scope: !9465)
!9467 = !DILocation(line: 146, column: 21, scope: !9465)
!9468 = !DILocation(line: 146, column: 30, scope: !9465)
!9469 = !{!8481, !2986, i64 16}
!9470 = !DILocation(line: 147, column: 19, scope: !9465)
!9471 = !DILocation(line: 147, column: 30, scope: !9465)
!9472 = !DILocation(line: 147, column: 33, scope: !9465)
!9473 = !{!9461, !2986, i64 40}
!9474 = !DILocation(line: 147, column: 42, scope: !9465)
!9475 = !DILocation(line: 147, column: 15, scope: !9465)
!9476 = !DILocation(line: 148, column: 15, scope: !9465)
!9477 = !DILocation(line: 148, column: 19, scope: !9465)
!9478 = !DILocation(line: 148, column: 28, scope: !9465)
!9479 = !DILocation(line: 148, column: 42, scope: !9465)
!9480 = !DILocation(line: 148, column: 51, scope: !9465)
!9481 = !DILocation(line: 148, column: 40, scope: !9465)
!9482 = !DILocation(line: 149, column: 22, scope: !9465)
!9483 = !DILocation(line: 149, column: 33, scope: !9465)
!9484 = !DILocation(line: 149, column: 36, scope: !9465)
!9485 = !DILocation(line: 149, column: 19, scope: !9465)
!9486 = !DILocation(line: 146, column: 15, scope: !9459)
!9487 = !DILocation(line: 152, column: 38, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9465, file: !1528, line: 150, column: 13)
!9489 = !DILocation(line: 152, column: 49, scope: !9488)
!9490 = !DILocation(line: 152, column: 52, scope: !9488)
!9491 = !DILocation(line: 152, column: 15, scope: !9488)
!9492 = !DILocation(line: 152, column: 24, scope: !9488)
!9493 = !DILocation(line: 152, column: 35, scope: !9488)
!9494 = !DILocation(line: 154, column: 36, scope: !9488)
!9495 = !DILocation(line: 154, column: 47, scope: !9488)
!9496 = !DILocation(line: 154, column: 50, scope: !9488)
!9497 = !DILocation(line: 154, column: 15, scope: !9488)
!9498 = !DILocation(line: 154, column: 24, scope: !9488)
!9499 = !DILocation(line: 154, column: 34, scope: !9488)
!9500 = !DILocation(line: 155, column: 13, scope: !9488)
!9501 = !DILocation(line: 156, column: 21, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9465, file: !1528, line: 156, column: 20)
!9503 = !DILocation(line: 156, column: 24, scope: !9502)
!9504 = !DILocation(line: 156, column: 29, scope: !9502)
!9505 = !DILocation(line: 156, column: 32, scope: !9502)
!9506 = !DILocation(line: 156, column: 38, scope: !9502)
!9507 = !DILocation(line: 156, column: 51, scope: !9502)
!9508 = !DILocation(line: 156, column: 62, scope: !9502)
!9509 = !DILocation(line: 156, column: 65, scope: !9502)
!9510 = !DILocation(line: 156, column: 49, scope: !9502)
!9511 = !DILocation(line: 157, column: 20, scope: !9502)
!9512 = !DILocation(line: 157, column: 24, scope: !9502)
!9513 = !DILocation(line: 157, column: 27, scope: !9502)
!9514 = !DILocation(line: 157, column: 31, scope: !9502)
!9515 = !DILocation(line: 157, column: 40, scope: !9502)
!9516 = !DILocation(line: 157, column: 54, scope: !9502)
!9517 = !DILocation(line: 157, column: 63, scope: !9502)
!9518 = !DILocation(line: 157, column: 52, scope: !9502)
!9519 = !DILocation(line: 158, column: 33, scope: !9502)
!9520 = !DILocation(line: 158, column: 44, scope: !9502)
!9521 = !DILocation(line: 158, column: 47, scope: !9502)
!9522 = !DILocation(line: 158, column: 31, scope: !9502)
!9523 = !DILocation(line: 156, column: 20, scope: !9465)
!9524 = !DILocalVariable(name: "new_logical", scope: !9525, file: !1528, line: 164, type: !1556)
!9525 = distinct !DILexicalBlock(scope: !9502, file: !1528, line: 159, column: 13)
!9526 = !DILocation(line: 164, column: 24, scope: !9525)
!9527 = !DILocalVariable(name: "length_adjust", scope: !9525, file: !1528, line: 165, type: !1556)
!9528 = !DILocation(line: 165, column: 24, scope: !9525)
!9529 = !DILocation(line: 166, column: 19, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9525, file: !1528, line: 166, column: 19)
!9531 = !DILocation(line: 166, column: 22, scope: !9530)
!9532 = !DILocation(line: 166, column: 19, scope: !9525)
!9533 = !DILocation(line: 167, column: 31, scope: !9530)
!9534 = !DILocation(line: 167, column: 37, scope: !9530)
!9535 = !DILocation(line: 167, column: 29, scope: !9530)
!9536 = !DILocation(line: 167, column: 17, scope: !9530)
!9537 = !DILocation(line: 172, column: 33, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9530, file: !1528, line: 169, column: 17)
!9539 = !DILocation(line: 172, column: 42, scope: !9538)
!9540 = !DILocation(line: 172, column: 56, scope: !9538)
!9541 = !DILocation(line: 172, column: 65, scope: !9538)
!9542 = !DILocation(line: 172, column: 54, scope: !9538)
!9543 = !DILocation(line: 172, column: 31, scope: !9538)
!9544 = !DILocation(line: 174, column: 31, scope: !9525)
!9545 = !DILocation(line: 174, column: 45, scope: !9525)
!9546 = !DILocation(line: 174, column: 56, scope: !9525)
!9547 = !DILocation(line: 174, column: 59, scope: !9525)
!9548 = !DILocation(line: 174, column: 43, scope: !9525)
!9549 = !DILocation(line: 174, column: 29, scope: !9525)
!9550 = !DILocation(line: 176, column: 19, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9525, file: !1528, line: 176, column: 19)
!9552 = !DILocation(line: 176, column: 35, scope: !9551)
!9553 = !DILocation(line: 176, column: 46, scope: !9551)
!9554 = !DILocation(line: 176, column: 49, scope: !9551)
!9555 = !DILocation(line: 176, column: 33, scope: !9551)
!9556 = !DILocation(line: 176, column: 19, scope: !9525)
!9557 = !DILocation(line: 178, column: 23, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9559, file: !1528, line: 178, column: 23)
!9559 = distinct !DILexicalBlock(scope: !9551, file: !1528, line: 177, column: 17)
!9560 = !DILocation(line: 178, column: 29, scope: !9558)
!9561 = !DILocation(line: 178, column: 40, scope: !9558)
!9562 = !DILocation(line: 178, column: 23, scope: !9559)
!9563 = !DILocation(line: 179, column: 21, scope: !9558)
!9564 = !DILocation(line: 179, column: 27, scope: !9558)
!9565 = !DILocation(line: 179, column: 47, scope: !9558)
!9566 = !DILocation(line: 180, column: 19, scope: !9559)
!9567 = !DILocation(line: 182, column: 42, scope: !9525)
!9568 = !DILocation(line: 182, column: 15, scope: !9525)
!9569 = !DILocation(line: 182, column: 26, scope: !9525)
!9570 = !DILocation(line: 182, column: 29, scope: !9525)
!9571 = !DILocation(line: 182, column: 40, scope: !9525)
!9572 = !DILocation(line: 183, column: 42, scope: !9525)
!9573 = !DILocation(line: 183, column: 15, scope: !9525)
!9574 = !DILocation(line: 183, column: 26, scope: !9525)
!9575 = !DILocation(line: 183, column: 29, scope: !9525)
!9576 = !DILocation(line: 183, column: 39, scope: !9525)
!9577 = !DILocation(line: 185, column: 16, scope: !9525)
!9578 = !DILocation(line: 186, column: 15, scope: !9525)
!9579 = !DILocation(line: 190, column: 25, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9502, file: !1528, line: 189, column: 13)
!9581 = !DILocation(line: 190, column: 31, scope: !9580)
!9582 = !DILocation(line: 190, column: 42, scope: !9580)
!9583 = !DILocation(line: 190, column: 40, scope: !9580)
!9584 = !DILocation(line: 190, column: 23, scope: !9580)
!9585 = !DILocation(line: 191, column: 38, scope: !9580)
!9586 = !DILocation(line: 191, column: 49, scope: !9580)
!9587 = !DILocation(line: 191, column: 52, scope: !9580)
!9588 = !DILocation(line: 191, column: 15, scope: !9580)
!9589 = !DILocation(line: 191, column: 24, scope: !9580)
!9590 = !DILocation(line: 191, column: 36, scope: !9580)
!9591 = !DILocation(line: 192, column: 37, scope: !9580)
!9592 = !DILocation(line: 192, column: 48, scope: !9580)
!9593 = !DILocation(line: 192, column: 51, scope: !9580)
!9594 = !DILocation(line: 192, column: 15, scope: !9580)
!9595 = !DILocation(line: 192, column: 24, scope: !9580)
!9596 = !DILocation(line: 192, column: 35, scope: !9580)
!9597 = !DILocation(line: 193, column: 36, scope: !9580)
!9598 = !DILocation(line: 193, column: 47, scope: !9580)
!9599 = !DILocation(line: 193, column: 50, scope: !9580)
!9600 = !DILocation(line: 193, column: 15, scope: !9580)
!9601 = !DILocation(line: 193, column: 24, scope: !9580)
!9602 = !DILocation(line: 193, column: 34, scope: !9580)
!9603 = !DILocation(line: 194, column: 17, scope: !9580)
!9604 = !DILocation(line: 196, column: 9, scope: !9459)
!9605 = !DILocation(line: 139, column: 51, scope: !9451)
!9606 = !DILocation(line: 139, column: 7, scope: !9451)
!9607 = distinct !{!9607, !9455, !9608}
!9608 = !DILocation(line: 196, column: 9, scope: !9448)
!9609 = !DILocation(line: 198, column: 11, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 198, column: 11)
!9611 = !DILocation(line: 198, column: 20, scope: !9610)
!9612 = !DILocation(line: 198, column: 30, scope: !9610)
!9613 = !DILocation(line: 198, column: 11, scope: !9357)
!9614 = !DILocation(line: 199, column: 9, scope: !9610)
!9615 = !DILocation(line: 199, column: 15, scope: !9610)
!9616 = !DILocation(line: 199, column: 32, scope: !9610)
!9617 = !DILocation(line: 203, column: 11, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 203, column: 11)
!9619 = !DILocation(line: 203, column: 14, scope: !9618)
!9620 = !DILocation(line: 203, column: 22, scope: !9618)
!9621 = !DILocation(line: 203, column: 26, scope: !9618)
!9622 = !DILocation(line: 203, column: 32, scope: !9618)
!9623 = !DILocation(line: 203, column: 11, scope: !9357)
!9624 = !DILocation(line: 204, column: 19, scope: !9618)
!9625 = !DILocation(line: 204, column: 25, scope: !9618)
!9626 = !DILocation(line: 204, column: 36, scope: !9618)
!9627 = !DILocation(line: 204, column: 34, scope: !9618)
!9628 = !DILocation(line: 204, column: 41, scope: !9618)
!9629 = !DILocation(line: 204, column: 17, scope: !9618)
!9630 = !DILocation(line: 204, column: 9, scope: !9618)
!9631 = !DILocation(line: 207, column: 24, scope: !9357)
!9632 = !DILocation(line: 207, column: 7, scope: !9357)
!9633 = !DILocation(line: 207, column: 13, scope: !9357)
!9634 = !DILocation(line: 207, column: 22, scope: !9357)
!9635 = !DILocation(line: 209, column: 11, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 209, column: 11)
!9637 = !DILocation(line: 209, column: 17, scope: !9636)
!9638 = !DILocation(line: 209, column: 11, scope: !9357)
!9639 = !DILocation(line: 210, column: 9, scope: !9636)
!9640 = !DILocation(line: 212, column: 28, scope: !9636)
!9641 = !DILocation(line: 212, column: 37, scope: !9636)
!9642 = !DILocation(line: 212, column: 51, scope: !9636)
!9643 = !DILocation(line: 212, column: 60, scope: !9636)
!9644 = !DILocation(line: 212, column: 49, scope: !9636)
!9645 = !DILocation(line: 212, column: 9, scope: !9636)
!9646 = !DILocation(line: 212, column: 15, scope: !9636)
!9647 = !DILocation(line: 212, column: 26, scope: !9636)
!9648 = !DILocation(line: 214, column: 11, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9357, file: !1528, line: 214, column: 11)
!9650 = !DILocation(line: 214, column: 14, scope: !9649)
!9651 = !DILocation(line: 214, column: 11, scope: !9357)
!9652 = !DILocation(line: 215, column: 9, scope: !9649)
!9653 = distinct !{!9653, !9355, !9654}
!9654 = !DILocation(line: 216, column: 5, scope: !9342)
!9655 = !DILocation(line: 218, column: 3, scope: !9342)
!9656 = !DILocation(line: 219, column: 1, scope: !9342)
!9657 = distinct !DISubprogram(name: "force_linkat", scope: !557, file: !557, line: 95, type: !559, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !556, retainedNodes: !143)
!9658 = !DILocalVariable(name: "srcdir", arg: 1, scope: !9657, file: !557, line: 95, type: !7)
!9659 = !DILocation(line: 95, column: 19, scope: !9657)
!9660 = !DILocalVariable(name: "srcname", arg: 2, scope: !9657, file: !557, line: 95, type: !115)
!9661 = !DILocation(line: 95, column: 39, scope: !9657)
!9662 = !DILocalVariable(name: "dstdir", arg: 3, scope: !9657, file: !557, line: 96, type: !7)
!9663 = !DILocation(line: 96, column: 19, scope: !9657)
!9664 = !DILocalVariable(name: "dstname", arg: 4, scope: !9657, file: !557, line: 96, type: !115)
!9665 = !DILocation(line: 96, column: 39, scope: !9657)
!9666 = !DILocalVariable(name: "flags", arg: 5, scope: !9657, file: !557, line: 96, type: !7)
!9667 = !DILocation(line: 96, column: 52, scope: !9657)
!9668 = !DILocalVariable(name: "force", arg: 6, scope: !9657, file: !557, line: 96, type: !120)
!9669 = !DILocation(line: 96, column: 64, scope: !9657)
!9670 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !9657, file: !557, line: 97, type: !7)
!9671 = !DILocation(line: 97, column: 19, scope: !9657)
!9672 = !DILocation(line: 99, column: 7, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9657, file: !557, line: 99, column: 7)
!9674 = !DILocation(line: 99, column: 20, scope: !9673)
!9675 = !DILocation(line: 99, column: 7, scope: !9657)
!9676 = !DILocation(line: 100, column: 29, scope: !9673)
!9677 = !DILocation(line: 100, column: 37, scope: !9673)
!9678 = !DILocation(line: 100, column: 46, scope: !9673)
!9679 = !DILocation(line: 100, column: 54, scope: !9673)
!9680 = !DILocation(line: 100, column: 63, scope: !9673)
!9681 = !DILocation(line: 100, column: 21, scope: !9673)
!9682 = !DILocation(line: 100, column: 70, scope: !9673)
!9683 = !DILocation(line: 101, column: 27, scope: !9673)
!9684 = !DILocation(line: 100, column: 18, scope: !9673)
!9685 = !DILocation(line: 100, column: 5, scope: !9673)
!9686 = !DILocation(line: 102, column: 8, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9657, file: !557, line: 102, column: 7)
!9688 = !DILocation(line: 102, column: 14, scope: !9687)
!9689 = !DILocation(line: 102, column: 17, scope: !9687)
!9690 = !DILocation(line: 102, column: 30, scope: !9687)
!9691 = !DILocation(line: 102, column: 7, scope: !9657)
!9692 = !DILocation(line: 103, column: 12, scope: !9687)
!9693 = !DILocation(line: 103, column: 5, scope: !9687)
!9694 = !DILocalVariable(name: "buf", scope: !9657, file: !557, line: 105, type: !561)
!9695 = !DILocation(line: 105, column: 8, scope: !9657)
!9696 = !DILocalVariable(name: "dsttmp", scope: !9657, file: !557, line: 106, type: !9)
!9697 = !DILocation(line: 106, column: 9, scope: !9657)
!9698 = !DILocation(line: 106, column: 36, scope: !9657)
!9699 = !DILocation(line: 106, column: 45, scope: !9657)
!9700 = !DILocation(line: 106, column: 18, scope: !9657)
!9701 = !DILocation(line: 107, column: 9, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9657, file: !557, line: 107, column: 7)
!9703 = !DILocation(line: 107, column: 7, scope: !9657)
!9704 = !DILocation(line: 108, column: 12, scope: !9702)
!9705 = !DILocation(line: 108, column: 5, scope: !9702)
!9706 = !DILocalVariable(name: "arg", scope: !9657, file: !557, line: 109, type: !575)
!9707 = !DILocation(line: 109, column: 19, scope: !9657)
!9708 = !DILocation(line: 109, column: 25, scope: !9657)
!9709 = !DILocation(line: 109, column: 27, scope: !9657)
!9710 = !{!9711, !2986, i64 0}
!9711 = !{!"link_arg", !2986, i64 0, !2999, i64 8, !2986, i64 16, !2986, i64 20}
!9712 = !DILocation(line: 109, column: 35, scope: !9657)
!9713 = !{!9711, !2999, i64 8}
!9714 = !DILocation(line: 109, column: 44, scope: !9657)
!9715 = !{!9711, !2986, i64 16}
!9716 = !DILocation(line: 109, column: 52, scope: !9657)
!9717 = !{!9711, !2986, i64 20}
!9718 = !DILocalVariable(name: "err", scope: !9657, file: !557, line: 110, type: !7)
!9719 = !DILocation(line: 110, column: 7, scope: !9657)
!9720 = !DILocation(line: 112, column: 25, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9657, file: !557, line: 112, column: 7)
!9722 = !DILocation(line: 112, column: 36, scope: !9721)
!9723 = !DILocation(line: 112, column: 7, scope: !9721)
!9724 = !DILocation(line: 112, column: 66, scope: !9721)
!9725 = !DILocation(line: 112, column: 7, scope: !9657)
!9726 = !DILocation(line: 113, column: 11, scope: !9721)
!9727 = !DILocation(line: 113, column: 9, scope: !9721)
!9728 = !DILocation(line: 113, column: 5, scope: !9721)
!9729 = !DILocation(line: 116, column: 23, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9721, file: !557, line: 115, column: 5)
!9731 = !DILocation(line: 116, column: 31, scope: !9730)
!9732 = !DILocation(line: 116, column: 39, scope: !9730)
!9733 = !DILocation(line: 116, column: 47, scope: !9730)
!9734 = !DILocation(line: 116, column: 13, scope: !9730)
!9735 = !DILocation(line: 116, column: 56, scope: !9730)
!9736 = !DILocation(line: 116, column: 68, scope: !9730)
!9737 = !DILocation(line: 116, column: 11, scope: !9730)
!9738 = !DILocation(line: 120, column: 17, scope: !9730)
!9739 = !DILocation(line: 120, column: 25, scope: !9730)
!9740 = !DILocation(line: 120, column: 7, scope: !9730)
!9741 = !DILocation(line: 123, column: 7, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9657, file: !557, line: 123, column: 7)
!9743 = !DILocation(line: 123, column: 17, scope: !9742)
!9744 = !DILocation(line: 123, column: 14, scope: !9742)
!9745 = !DILocation(line: 123, column: 7, scope: !9657)
!9746 = !DILocation(line: 124, column: 11, scope: !9742)
!9747 = !DILocation(line: 124, column: 5, scope: !9742)
!9748 = !DILocation(line: 125, column: 10, scope: !9657)
!9749 = !DILocation(line: 125, column: 3, scope: !9657)
!9750 = !DILocation(line: 126, column: 1, scope: !9657)
!9751 = distinct !DISubprogram(name: "samedir_template", scope: !557, file: !557, line: 51, type: !566, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !556, retainedNodes: !143)
!9752 = !DILocalVariable(name: "dstname", arg: 1, scope: !9751, file: !557, line: 51, type: !115)
!9753 = !DILocation(line: 51, column: 31, scope: !9751)
!9754 = !DILocalVariable(name: "buf", arg: 2, scope: !9751, file: !557, line: 51, type: !9)
!9755 = !DILocation(line: 51, column: 45, scope: !9751)
!9756 = !DILocalVariable(name: "dstdirlen", scope: !9751, file: !557, line: 53, type: !568)
!9757 = !DILocation(line: 53, column: 13, scope: !9751)
!9758 = !DILocation(line: 53, column: 41, scope: !9751)
!9759 = !DILocation(line: 53, column: 25, scope: !9751)
!9760 = !DILocation(line: 53, column: 52, scope: !9751)
!9761 = !DILocation(line: 53, column: 50, scope: !9751)
!9762 = !DILocalVariable(name: "dsttmpsize", scope: !9751, file: !557, line: 54, type: !55)
!9763 = !DILocation(line: 54, column: 10, scope: !9751)
!9764 = !DILocation(line: 54, column: 23, scope: !9751)
!9765 = !DILocation(line: 54, column: 33, scope: !9751)
!9766 = !DILocalVariable(name: "dsttmp", scope: !9751, file: !557, line: 55, type: !9)
!9767 = !DILocation(line: 55, column: 9, scope: !9751)
!9768 = !DILocation(line: 56, column: 7, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9751, file: !557, line: 56, column: 7)
!9770 = !DILocation(line: 56, column: 18, scope: !9769)
!9771 = !DILocation(line: 56, column: 7, scope: !9751)
!9772 = !DILocation(line: 57, column: 14, scope: !9769)
!9773 = !DILocation(line: 57, column: 12, scope: !9769)
!9774 = !DILocation(line: 57, column: 5, scope: !9769)
!9775 = !DILocation(line: 60, column: 24, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9769, file: !557, line: 59, column: 5)
!9777 = !DILocation(line: 60, column: 16, scope: !9776)
!9778 = !DILocation(line: 60, column: 14, scope: !9776)
!9779 = !DILocation(line: 61, column: 12, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9776, file: !557, line: 61, column: 11)
!9781 = !DILocation(line: 61, column: 11, scope: !9776)
!9782 = !DILocation(line: 62, column: 16, scope: !9780)
!9783 = !DILocation(line: 62, column: 9, scope: !9780)
!9784 = !DILocation(line: 64, column: 20, scope: !9751)
!9785 = !DILocation(line: 64, column: 28, scope: !9751)
!9786 = !DILocation(line: 64, column: 37, scope: !9751)
!9787 = !DILocation(line: 64, column: 11, scope: !9751)
!9788 = !DILocation(line: 64, column: 3, scope: !9751)
!9789 = !DILocation(line: 65, column: 10, scope: !9751)
!9790 = !DILocation(line: 65, column: 3, scope: !9751)
!9791 = !DILocation(line: 66, column: 1, scope: !9751)
!9792 = distinct !DISubprogram(name: "try_link", scope: !557, file: !557, line: 80, type: !572, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !556, retainedNodes: !143)
!9793 = !DILocalVariable(name: "dest", arg: 1, scope: !9792, file: !557, line: 80, type: !9)
!9794 = !DILocation(line: 80, column: 17, scope: !9792)
!9795 = !DILocalVariable(name: "arg", arg: 2, scope: !9792, file: !557, line: 80, type: !53)
!9796 = !DILocation(line: 80, column: 29, scope: !9792)
!9797 = !DILocalVariable(name: "a", scope: !9792, file: !557, line: 82, type: !574)
!9798 = !DILocation(line: 82, column: 20, scope: !9792)
!9799 = !DILocation(line: 82, column: 24, scope: !9792)
!9800 = !DILocation(line: 83, column: 18, scope: !9792)
!9801 = !DILocation(line: 83, column: 21, scope: !9792)
!9802 = !DILocation(line: 83, column: 29, scope: !9792)
!9803 = !DILocation(line: 83, column: 32, scope: !9792)
!9804 = !DILocation(line: 83, column: 41, scope: !9792)
!9805 = !DILocation(line: 83, column: 44, scope: !9792)
!9806 = !DILocation(line: 83, column: 52, scope: !9792)
!9807 = !DILocation(line: 83, column: 58, scope: !9792)
!9808 = !DILocation(line: 83, column: 61, scope: !9792)
!9809 = !DILocation(line: 83, column: 10, scope: !9792)
!9810 = !DILocation(line: 83, column: 3, scope: !9792)
!9811 = distinct !DISubprogram(name: "force_symlinkat", scope: !557, file: !557, line: 152, type: !564, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !556, retainedNodes: !143)
!9812 = !DILocalVariable(name: "srcname", arg: 1, scope: !9811, file: !557, line: 152, type: !115)
!9813 = !DILocation(line: 152, column: 30, scope: !9811)
!9814 = !DILocalVariable(name: "dstdir", arg: 2, scope: !9811, file: !557, line: 152, type: !7)
!9815 = !DILocation(line: 152, column: 43, scope: !9811)
!9816 = !DILocalVariable(name: "dstname", arg: 3, scope: !9811, file: !557, line: 152, type: !115)
!9817 = !DILocation(line: 152, column: 63, scope: !9811)
!9818 = !DILocalVariable(name: "force", arg: 4, scope: !9811, file: !557, line: 153, type: !120)
!9819 = !DILocation(line: 153, column: 23, scope: !9811)
!9820 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !9811, file: !557, line: 153, type: !7)
!9821 = !DILocation(line: 153, column: 34, scope: !9811)
!9822 = !DILocation(line: 155, column: 7, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9811, file: !557, line: 155, column: 7)
!9824 = !DILocation(line: 155, column: 23, scope: !9823)
!9825 = !DILocation(line: 155, column: 7, scope: !9811)
!9826 = !DILocation(line: 156, column: 34, scope: !9823)
!9827 = !DILocation(line: 156, column: 43, scope: !9823)
!9828 = !DILocation(line: 156, column: 51, scope: !9823)
!9829 = !DILocation(line: 156, column: 23, scope: !9823)
!9830 = !DILocation(line: 156, column: 60, scope: !9823)
!9831 = !DILocation(line: 156, column: 71, scope: !9823)
!9832 = !DILocation(line: 156, column: 21, scope: !9823)
!9833 = !DILocation(line: 156, column: 5, scope: !9823)
!9834 = !DILocation(line: 157, column: 8, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9811, file: !557, line: 157, column: 7)
!9836 = !DILocation(line: 157, column: 14, scope: !9835)
!9837 = !DILocation(line: 157, column: 17, scope: !9835)
!9838 = !DILocation(line: 157, column: 33, scope: !9835)
!9839 = !DILocation(line: 157, column: 7, scope: !9811)
!9840 = !DILocation(line: 158, column: 12, scope: !9835)
!9841 = !DILocation(line: 158, column: 5, scope: !9835)
!9842 = !DILocalVariable(name: "buf", scope: !9811, file: !557, line: 160, type: !561)
!9843 = !DILocation(line: 160, column: 8, scope: !9811)
!9844 = !DILocalVariable(name: "dsttmp", scope: !9811, file: !557, line: 161, type: !9)
!9845 = !DILocation(line: 161, column: 9, scope: !9811)
!9846 = !DILocation(line: 161, column: 36, scope: !9811)
!9847 = !DILocation(line: 161, column: 45, scope: !9811)
!9848 = !DILocation(line: 161, column: 18, scope: !9811)
!9849 = !DILocation(line: 162, column: 8, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9811, file: !557, line: 162, column: 7)
!9851 = !DILocation(line: 162, column: 7, scope: !9811)
!9852 = !DILocation(line: 163, column: 12, scope: !9850)
!9853 = !DILocation(line: 163, column: 5, scope: !9850)
!9854 = !DILocalVariable(name: "arg", scope: !9811, file: !557, line: 164, type: !582)
!9855 = !DILocation(line: 164, column: 22, scope: !9811)
!9856 = !DILocation(line: 164, column: 28, scope: !9811)
!9857 = !DILocation(line: 164, column: 30, scope: !9811)
!9858 = !{!9859, !2999, i64 0}
!9859 = !{!"symlink_arg", !2999, i64 0, !2986, i64 8}
!9860 = !DILocation(line: 164, column: 39, scope: !9811)
!9861 = !{!9859, !2986, i64 8}
!9862 = !DILocalVariable(name: "err", scope: !9811, file: !557, line: 165, type: !7)
!9863 = !DILocation(line: 165, column: 7, scope: !9811)
!9864 = !DILocation(line: 167, column: 25, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9811, file: !557, line: 167, column: 7)
!9866 = !DILocation(line: 167, column: 36, scope: !9865)
!9867 = !DILocation(line: 167, column: 7, scope: !9865)
!9868 = !DILocation(line: 167, column: 69, scope: !9865)
!9869 = !DILocation(line: 167, column: 7, scope: !9811)
!9870 = !DILocation(line: 168, column: 11, scope: !9865)
!9871 = !DILocation(line: 168, column: 9, scope: !9865)
!9872 = !DILocation(line: 168, column: 5, scope: !9865)
!9873 = !DILocation(line: 169, column: 22, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9865, file: !557, line: 169, column: 12)
!9875 = !DILocation(line: 169, column: 30, scope: !9874)
!9876 = !DILocation(line: 169, column: 38, scope: !9874)
!9877 = !DILocation(line: 169, column: 46, scope: !9874)
!9878 = !DILocation(line: 169, column: 12, scope: !9874)
!9879 = !DILocation(line: 169, column: 55, scope: !9874)
!9880 = !DILocation(line: 169, column: 12, scope: !9865)
!9881 = !DILocation(line: 171, column: 13, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9874, file: !557, line: 170, column: 5)
!9883 = !DILocation(line: 171, column: 11, scope: !9882)
!9884 = !DILocation(line: 172, column: 17, scope: !9882)
!9885 = !DILocation(line: 172, column: 25, scope: !9882)
!9886 = !DILocation(line: 172, column: 7, scope: !9882)
!9887 = !DILocation(line: 173, column: 5, scope: !9882)
!9888 = !DILocation(line: 178, column: 11, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9874, file: !557, line: 175, column: 5)
!9890 = !DILocation(line: 181, column: 7, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9811, file: !557, line: 181, column: 7)
!9892 = !DILocation(line: 181, column: 17, scope: !9891)
!9893 = !DILocation(line: 181, column: 14, scope: !9891)
!9894 = !DILocation(line: 181, column: 7, scope: !9811)
!9895 = !DILocation(line: 182, column: 11, scope: !9891)
!9896 = !DILocation(line: 182, column: 5, scope: !9891)
!9897 = !DILocation(line: 183, column: 10, scope: !9811)
!9898 = !DILocation(line: 183, column: 3, scope: !9811)
!9899 = !DILocation(line: 184, column: 1, scope: !9811)
!9900 = distinct !DISubprogram(name: "try_symlink", scope: !557, file: !557, line: 138, type: !572, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !556, retainedNodes: !143)
!9901 = !DILocalVariable(name: "dest", arg: 1, scope: !9900, file: !557, line: 138, type: !9)
!9902 = !DILocation(line: 138, column: 20, scope: !9900)
!9903 = !DILocalVariable(name: "arg", arg: 2, scope: !9900, file: !557, line: 138, type: !53)
!9904 = !DILocation(line: 138, column: 32, scope: !9900)
!9905 = !DILocalVariable(name: "a", scope: !9900, file: !557, line: 140, type: !581)
!9906 = !DILocation(line: 140, column: 23, scope: !9900)
!9907 = !DILocation(line: 140, column: 27, scope: !9900)
!9908 = !DILocation(line: 141, column: 21, scope: !9900)
!9909 = !DILocation(line: 141, column: 24, scope: !9900)
!9910 = !DILocation(line: 141, column: 33, scope: !9900)
!9911 = !DILocation(line: 141, column: 36, scope: !9900)
!9912 = !DILocation(line: 141, column: 44, scope: !9900)
!9913 = !DILocation(line: 141, column: 10, scope: !9900)
!9914 = !DILocation(line: 141, column: 3, scope: !9900)
!9915 = distinct !DISubprogram(name: "copy_acl", scope: !9916, file: !9916, line: 43, type: !1584, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1581, retainedNodes: !143)
!9916 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!9917 = !DILocalVariable(name: "src_name", arg: 1, scope: !9915, file: !9916, line: 43, type: !115)
!9918 = !DILocation(line: 43, column: 23, scope: !9915)
!9919 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9915, file: !9916, line: 43, type: !7)
!9920 = !DILocation(line: 43, column: 37, scope: !9915)
!9921 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9915, file: !9916, line: 43, type: !115)
!9922 = !DILocation(line: 43, column: 62, scope: !9915)
!9923 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9915, file: !9916, line: 44, type: !7)
!9924 = !DILocation(line: 44, column: 15, scope: !9915)
!9925 = !DILocalVariable(name: "mode", arg: 5, scope: !9915, file: !9916, line: 44, type: !160)
!9926 = !DILocation(line: 44, column: 33, scope: !9915)
!9927 = !DILocalVariable(name: "ret", scope: !9915, file: !9916, line: 46, type: !7)
!9928 = !DILocation(line: 46, column: 7, scope: !9915)
!9929 = !DILocation(line: 46, column: 24, scope: !9915)
!9930 = !DILocation(line: 46, column: 34, scope: !9915)
!9931 = !DILocation(line: 46, column: 47, scope: !9915)
!9932 = !DILocation(line: 46, column: 57, scope: !9915)
!9933 = !DILocation(line: 46, column: 68, scope: !9915)
!9934 = !DILocation(line: 46, column: 13, scope: !9915)
!9935 = !DILocation(line: 47, column: 11, scope: !9915)
!9936 = !DILocation(line: 47, column: 3, scope: !9915)
!9937 = !DILocation(line: 50, column: 17, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9915, file: !9916, line: 48, column: 5)
!9939 = !DILocation(line: 50, column: 37, scope: !9938)
!9940 = !DILocation(line: 50, column: 30, scope: !9938)
!9941 = !DILocation(line: 50, column: 7, scope: !9938)
!9942 = !DILocation(line: 51, column: 7, scope: !9938)
!9943 = !DILocation(line: 54, column: 17, scope: !9938)
!9944 = !DILocation(line: 54, column: 24, scope: !9938)
!9945 = !DILocation(line: 54, column: 67, scope: !9938)
!9946 = !DILocation(line: 54, column: 60, scope: !9938)
!9947 = !DILocation(line: 54, column: 7, scope: !9938)
!9948 = !DILocation(line: 55, column: 7, scope: !9938)
!9949 = !DILocation(line: 58, column: 7, scope: !9938)
!9950 = !DILocation(line: 60, column: 10, scope: !9915)
!9951 = !DILocation(line: 60, column: 3, scope: !9915)
!9952 = distinct !DISubprogram(name: "set_acl", scope: !9953, file: !9953, line: 42, type: !1589, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1586, retainedNodes: !143)
!9953 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mbarbar/clone/coreutils")
!9954 = !DILocalVariable(name: "name", arg: 1, scope: !9952, file: !9953, line: 42, type: !115)
!9955 = !DILocation(line: 42, column: 22, scope: !9952)
!9956 = !DILocalVariable(name: "desc", arg: 2, scope: !9952, file: !9953, line: 42, type: !7)
!9957 = !DILocation(line: 42, column: 32, scope: !9952)
!9958 = !DILocalVariable(name: "mode", arg: 3, scope: !9952, file: !9953, line: 42, type: !160)
!9959 = !DILocation(line: 42, column: 45, scope: !9952)
!9960 = !DILocalVariable(name: "ret", scope: !9952, file: !9953, line: 44, type: !7)
!9961 = !DILocation(line: 44, column: 7, scope: !9952)
!9962 = !DILocation(line: 44, column: 23, scope: !9952)
!9963 = !DILocation(line: 44, column: 29, scope: !9952)
!9964 = !DILocation(line: 44, column: 35, scope: !9952)
!9965 = !DILocation(line: 44, column: 13, scope: !9952)
!9966 = !DILocation(line: 45, column: 7, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9952, file: !9953, line: 45, column: 7)
!9968 = !DILocation(line: 45, column: 11, scope: !9967)
!9969 = !DILocation(line: 45, column: 7, scope: !9952)
!9970 = !DILocation(line: 46, column: 15, scope: !9967)
!9971 = !DILocation(line: 46, column: 22, scope: !9967)
!9972 = !DILocation(line: 46, column: 62, scope: !9967)
!9973 = !DILocation(line: 46, column: 55, scope: !9967)
!9974 = !DILocation(line: 46, column: 5, scope: !9967)
!9975 = !DILocation(line: 47, column: 10, scope: !9952)
!9976 = !DILocation(line: 47, column: 3, scope: !9952)
!9977 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9978, file: !9978, line: 53, type: !992, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1591, retainedNodes: !143)
!9978 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/clone/coreutils")
!9979 = !DILocalVariable(name: "file", arg: 1, scope: !9977, file: !9978, line: 53, type: !115)
!9980 = !DILocation(line: 53, column: 34, scope: !9977)
!9981 = !DILocalVariable(name: "size", arg: 2, scope: !9977, file: !9978, line: 53, type: !55)
!9982 = !DILocation(line: 53, column: 47, scope: !9977)
!9983 = !DILocalVariable(name: "symlink_max", scope: !9977, file: !9978, line: 58, type: !55)
!9984 = !DILocation(line: 58, column: 10, scope: !9977)
!9985 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9977, file: !9978, line: 59, type: !55)
!9986 = !DILocation(line: 59, column: 10, scope: !9977)
!9987 = !DILocalVariable(name: "initial_limit", scope: !9977, file: !9978, line: 60, type: !55)
!9988 = !DILocation(line: 60, column: 10, scope: !9977)
!9989 = !DILocation(line: 60, column: 27, scope: !9977)
!9990 = !DILocation(line: 60, column: 41, scope: !9977)
!9991 = !DILocation(line: 60, column: 39, scope: !9977)
!9992 = !DILocation(line: 61, column: 29, scope: !9977)
!9993 = !DILocation(line: 61, column: 41, scope: !9977)
!9994 = !DILocation(line: 62, column: 29, scope: !9977)
!9995 = !DILocalVariable(name: "buf_size", scope: !9977, file: !9978, line: 67, type: !55)
!9996 = !DILocation(line: 67, column: 10, scope: !9977)
!9997 = !DILocation(line: 67, column: 22, scope: !9977)
!9998 = !DILocation(line: 67, column: 27, scope: !9977)
!9999 = !DILocation(line: 68, column: 24, scope: !9977)
!10000 = !DILocation(line: 68, column: 31, scope: !9977)
!10001 = !DILocation(line: 68, column: 29, scope: !9977)
!10002 = !DILocation(line: 68, column: 47, scope: !9977)
!10003 = !DILocation(line: 68, column: 52, scope: !9977)
!10004 = !DILocation(line: 68, column: 58, scope: !9977)
!10005 = !DILocation(line: 70, column: 3, scope: !9977)
!10006 = !DILocalVariable(name: "r", scope: !10007, file: !9978, line: 72, type: !608)
!10007 = distinct !DILexicalBlock(scope: !9977, file: !9978, line: 71, column: 5)
!10008 = !DILocation(line: 72, column: 15, scope: !10007)
!10009 = !DILocalVariable(name: "link_length", scope: !10007, file: !9978, line: 73, type: !55)
!10010 = !DILocation(line: 73, column: 14, scope: !10007)
!10011 = !DILocalVariable(name: "stackbuf", scope: !10007, file: !9978, line: 74, type: !1594)
!10012 = !DILocation(line: 74, column: 12, scope: !10007)
!10013 = !DILocalVariable(name: "buf", scope: !10007, file: !9978, line: 75, type: !9)
!10014 = !DILocation(line: 75, column: 13, scope: !10007)
!10015 = !DILocation(line: 75, column: 19, scope: !10007)
!10016 = !DILocalVariable(name: "buffer", scope: !10007, file: !9978, line: 76, type: !9)
!10017 = !DILocation(line: 76, column: 13, scope: !10007)
!10018 = !DILocation(line: 78, column: 14, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10007, file: !9978, line: 78, column: 11)
!10020 = !DILocation(line: 78, column: 19, scope: !10019)
!10021 = !DILocation(line: 78, column: 24, scope: !10019)
!10022 = !DILocation(line: 78, column: 27, scope: !10019)
!10023 = !DILocation(line: 78, column: 36, scope: !10019)
!10024 = !DILocation(line: 78, column: 11, scope: !10007)
!10025 = !DILocation(line: 80, column: 34, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10019, file: !9978, line: 79, column: 9)
!10027 = !DILocation(line: 80, column: 26, scope: !10026)
!10028 = !DILocation(line: 80, column: 24, scope: !10026)
!10029 = !DILocation(line: 80, column: 15, scope: !10026)
!10030 = !DILocation(line: 81, column: 16, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10026, file: !9978, line: 81, column: 15)
!10032 = !DILocation(line: 81, column: 15, scope: !10026)
!10033 = !DILocation(line: 82, column: 13, scope: !10031)
!10034 = !DILocation(line: 83, column: 9, scope: !10026)
!10035 = !DILocation(line: 85, column: 21, scope: !10007)
!10036 = !DILocation(line: 85, column: 27, scope: !10007)
!10037 = !DILocation(line: 85, column: 32, scope: !10007)
!10038 = !DILocation(line: 85, column: 11, scope: !10007)
!10039 = !DILocation(line: 85, column: 9, scope: !10007)
!10040 = !DILocation(line: 86, column: 21, scope: !10007)
!10041 = !DILocation(line: 86, column: 19, scope: !10007)
!10042 = !DILocation(line: 90, column: 11, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10007, file: !9978, line: 90, column: 11)
!10044 = !DILocation(line: 90, column: 13, scope: !10043)
!10045 = !DILocation(line: 90, column: 17, scope: !10043)
!10046 = !DILocation(line: 90, column: 20, scope: !10043)
!10047 = !DILocation(line: 90, column: 26, scope: !10043)
!10048 = !DILocation(line: 90, column: 11, scope: !10007)
!10049 = !DILocalVariable(name: "saved_errno", scope: !10050, file: !9978, line: 92, type: !7)
!10050 = distinct !DILexicalBlock(scope: !10043, file: !9978, line: 91, column: 9)
!10051 = !DILocation(line: 92, column: 15, scope: !10050)
!10052 = !DILocation(line: 92, column: 29, scope: !10050)
!10053 = !DILocation(line: 93, column: 17, scope: !10050)
!10054 = !DILocation(line: 93, column: 11, scope: !10050)
!10055 = !DILocation(line: 94, column: 19, scope: !10050)
!10056 = !DILocation(line: 94, column: 11, scope: !10050)
!10057 = !DILocation(line: 94, column: 17, scope: !10050)
!10058 = !DILocation(line: 95, column: 11, scope: !10050)
!10059 = !DILocation(line: 98, column: 11, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10007, file: !9978, line: 98, column: 11)
!10061 = !DILocation(line: 98, column: 25, scope: !10060)
!10062 = !DILocation(line: 98, column: 23, scope: !10060)
!10063 = !DILocation(line: 98, column: 11, scope: !10007)
!10064 = !DILocation(line: 100, column: 11, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10060, file: !9978, line: 99, column: 9)
!10066 = !DILocation(line: 100, column: 15, scope: !10065)
!10067 = !DILocation(line: 100, column: 28, scope: !10065)
!10068 = !DILocation(line: 101, column: 16, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10065, file: !9978, line: 101, column: 15)
!10070 = !DILocation(line: 101, column: 15, scope: !10065)
!10071 = !DILocation(line: 103, column: 32, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10069, file: !9978, line: 102, column: 13)
!10073 = !DILocation(line: 103, column: 44, scope: !10072)
!10074 = !DILocation(line: 103, column: 24, scope: !10072)
!10075 = !DILocation(line: 103, column: 22, scope: !10072)
!10076 = !DILocation(line: 104, column: 19, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10072, file: !9978, line: 104, column: 19)
!10078 = !DILocation(line: 104, column: 19, scope: !10072)
!10079 = !DILocation(line: 105, column: 32, scope: !10077)
!10080 = !DILocation(line: 105, column: 40, scope: !10077)
!10081 = !DILocation(line: 105, column: 45, scope: !10077)
!10082 = !DILocation(line: 105, column: 57, scope: !10077)
!10083 = !DILocation(line: 105, column: 24, scope: !10077)
!10084 = !DILocation(line: 105, column: 17, scope: !10077)
!10085 = !DILocation(line: 106, column: 13, scope: !10072)
!10086 = !DILocation(line: 107, column: 20, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10069, file: !9978, line: 107, column: 20)
!10088 = !DILocation(line: 107, column: 32, scope: !10087)
!10089 = !DILocation(line: 107, column: 38, scope: !10087)
!10090 = !DILocation(line: 107, column: 36, scope: !10087)
!10091 = !DILocation(line: 107, column: 20, scope: !10069)
!10092 = !DILocalVariable(name: "shrinked_buffer", scope: !10093, file: !9978, line: 110, type: !9)
!10093 = distinct !DILexicalBlock(scope: !10087, file: !9978, line: 108, column: 13)
!10094 = !DILocation(line: 110, column: 21, scope: !10093)
!10095 = !DILocation(line: 110, column: 48, scope: !10093)
!10096 = !DILocation(line: 110, column: 56, scope: !10093)
!10097 = !DILocation(line: 110, column: 68, scope: !10093)
!10098 = !DILocation(line: 110, column: 39, scope: !10093)
!10099 = !DILocation(line: 111, column: 19, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10093, file: !9978, line: 111, column: 19)
!10101 = !DILocation(line: 111, column: 35, scope: !10100)
!10102 = !DILocation(line: 111, column: 19, scope: !10093)
!10103 = !DILocation(line: 112, column: 26, scope: !10100)
!10104 = !DILocation(line: 112, column: 24, scope: !10100)
!10105 = !DILocation(line: 112, column: 17, scope: !10100)
!10106 = !DILocation(line: 113, column: 13, scope: !10093)
!10107 = !DILocation(line: 114, column: 18, scope: !10065)
!10108 = !DILocation(line: 114, column: 11, scope: !10065)
!10109 = !DILocation(line: 117, column: 13, scope: !10007)
!10110 = !DILocation(line: 117, column: 7, scope: !10007)
!10111 = !DILocation(line: 118, column: 11, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10007, file: !9978, line: 118, column: 11)
!10113 = !DILocation(line: 118, column: 20, scope: !10112)
!10114 = !DILocation(line: 118, column: 11, scope: !10007)
!10115 = !DILocation(line: 119, column: 18, scope: !10112)
!10116 = !DILocation(line: 119, column: 9, scope: !10112)
!10117 = !DILocation(line: 120, column: 16, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10112, file: !9978, line: 120, column: 16)
!10119 = !DILocation(line: 120, column: 25, scope: !10118)
!10120 = !DILocation(line: 120, column: 16, scope: !10112)
!10121 = !DILocation(line: 121, column: 18, scope: !10118)
!10122 = !DILocation(line: 121, column: 9, scope: !10118)
!10123 = !DILocation(line: 124, column: 11, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10118, file: !9978, line: 123, column: 9)
!10125 = !DILocation(line: 124, column: 17, scope: !10124)
!10126 = !DILocation(line: 125, column: 11, scope: !10124)
!10127 = distinct !{!10127, !10005, !10128}
!10128 = !DILocation(line: 127, column: 5, scope: !9977)
!10129 = !DILocation(line: 128, column: 1, scope: !9977)
!10130 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !599, file: !599, line: 88, type: !136, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !595, retainedNodes: !143)
!10131 = !DILocalVariable(name: "s", arg: 1, scope: !10130, file: !599, line: 88, type: !115)
!10132 = !DILocation(line: 88, column: 39, scope: !10130)
!10133 = !DILocation(line: 90, column: 8, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10130, file: !599, line: 90, column: 7)
!10135 = !DILocation(line: 90, column: 7, scope: !10130)
!10136 = !DILocation(line: 91, column: 9, scope: !10134)
!10137 = !DILocation(line: 91, column: 7, scope: !10134)
!10138 = !DILocation(line: 91, column: 5, scope: !10134)
!10139 = !DILocation(line: 92, column: 26, scope: !10130)
!10140 = !DILocation(line: 92, column: 28, scope: !10130)
!10141 = !DILocation(line: 92, column: 32, scope: !10130)
!10142 = !DILocation(line: 92, column: 31, scope: !10130)
!10143 = !DILocation(line: 92, column: 34, scope: !10130)
!10144 = !DILocation(line: 92, column: 37, scope: !10130)
!10145 = !DILocation(line: 92, column: 58, scope: !10130)
!10146 = !DILocation(line: 92, column: 42, scope: !10130)
!10147 = !DILocation(line: 92, column: 39, scope: !10130)
!10148 = !DILocation(line: 92, column: 63, scope: !10130)
!10149 = !DILocation(line: 92, column: 24, scope: !10130)
!10150 = !DILocation(line: 93, column: 1, scope: !10130)
!10151 = distinct !DISubprogram(name: "backupfile_internal", scope: !599, file: !599, line: 314, type: !606, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !595, retainedNodes: !143)
!10152 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10151, file: !599, line: 314, type: !7)
!10153 = !DILocation(line: 314, column: 26, scope: !10151)
!10154 = !DILocalVariable(name: "file", arg: 2, scope: !10151, file: !599, line: 314, type: !115)
!10155 = !DILocation(line: 314, column: 46, scope: !10151)
!10156 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10151, file: !599, line: 315, type: !68)
!10157 = !DILocation(line: 315, column: 39, scope: !10151)
!10158 = !DILocalVariable(name: "rename", arg: 4, scope: !10151, file: !599, line: 315, type: !120)
!10159 = !DILocation(line: 315, column: 57, scope: !10151)
!10160 = !DILocalVariable(name: "base_offset", scope: !10151, file: !599, line: 317, type: !568)
!10161 = !DILocation(line: 317, column: 13, scope: !10151)
!10162 = !DILocation(line: 317, column: 43, scope: !10151)
!10163 = !DILocation(line: 317, column: 27, scope: !10151)
!10164 = !DILocation(line: 317, column: 51, scope: !10151)
!10165 = !DILocation(line: 317, column: 49, scope: !10151)
!10166 = !DILocalVariable(name: "filelen", scope: !10151, file: !599, line: 318, type: !55)
!10167 = !DILocation(line: 318, column: 10, scope: !10151)
!10168 = !DILocation(line: 318, column: 20, scope: !10151)
!10169 = !DILocation(line: 318, column: 42, scope: !10151)
!10170 = !DILocation(line: 318, column: 49, scope: !10151)
!10171 = !DILocation(line: 318, column: 47, scope: !10151)
!10172 = !DILocation(line: 318, column: 34, scope: !10151)
!10173 = !DILocation(line: 318, column: 32, scope: !10151)
!10174 = !DILocation(line: 320, column: 9, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10151, file: !599, line: 320, column: 7)
!10176 = !DILocation(line: 320, column: 7, scope: !10151)
!10177 = !DILocation(line: 321, column: 5, scope: !10175)
!10178 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !10151, file: !599, line: 325, type: !55)
!10179 = !DILocation(line: 325, column: 10, scope: !10151)
!10180 = !DILocation(line: 325, column: 46, scope: !10151)
!10181 = !DILocation(line: 325, column: 38, scope: !10151)
!10182 = !DILocation(line: 325, column: 68, scope: !10151)
!10183 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !10151, file: !599, line: 326, type: !55)
!10184 = !DILocation(line: 326, column: 10, scope: !10151)
!10185 = !DILocation(line: 326, column: 37, scope: !10151)
!10186 = !DILocation(line: 328, column: 7, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10151, file: !599, line: 328, column: 7)
!10188 = !DILocation(line: 328, column: 32, scope: !10187)
!10189 = !DILocation(line: 328, column: 7, scope: !10151)
!10190 = !DILocation(line: 329, column: 30, scope: !10187)
!10191 = !DILocation(line: 329, column: 5, scope: !10187)
!10192 = !DILocalVariable(name: "ssize", scope: !10151, file: !599, line: 331, type: !608)
!10193 = !DILocation(line: 331, column: 11, scope: !10151)
!10194 = !DILocation(line: 331, column: 19, scope: !10151)
!10195 = !DILocation(line: 331, column: 29, scope: !10151)
!10196 = !DILocation(line: 331, column: 27, scope: !10151)
!10197 = !DILocation(line: 331, column: 54, scope: !10151)
!10198 = !DILocalVariable(name: "s", scope: !10151, file: !599, line: 332, type: !9)
!10199 = !DILocation(line: 332, column: 9, scope: !10151)
!10200 = !DILocation(line: 332, column: 21, scope: !10151)
!10201 = !DILocation(line: 332, column: 13, scope: !10151)
!10202 = !DILocation(line: 333, column: 8, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10151, file: !599, line: 333, column: 7)
!10204 = !DILocation(line: 333, column: 7, scope: !10151)
!10205 = !DILocation(line: 334, column: 12, scope: !10203)
!10206 = !DILocation(line: 334, column: 5, scope: !10203)
!10207 = !DILocalVariable(name: "dirp", scope: !10151, file: !599, line: 336, type: !609)
!10208 = !DILocation(line: 336, column: 8, scope: !10151)
!10209 = !DILocalVariable(name: "sdir", scope: !10151, file: !599, line: 337, type: !7)
!10210 = !DILocation(line: 337, column: 7, scope: !10151)
!10211 = !DILocalVariable(name: "base_max", scope: !10151, file: !599, line: 338, type: !55)
!10212 = !DILocation(line: 338, column: 10, scope: !10151)
!10213 = !DILocation(line: 339, column: 3, scope: !10151)
!10214 = !DILocation(line: 341, column: 15, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10151, file: !599, line: 340, column: 5)
!10216 = !DILocation(line: 341, column: 18, scope: !10215)
!10217 = !DILocation(line: 341, column: 24, scope: !10215)
!10218 = !DILocation(line: 341, column: 32, scope: !10215)
!10219 = !DILocation(line: 341, column: 7, scope: !10215)
!10220 = !DILocation(line: 343, column: 11, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10215, file: !599, line: 343, column: 11)
!10222 = !DILocation(line: 343, column: 23, scope: !10221)
!10223 = !DILocation(line: 343, column: 11, scope: !10215)
!10224 = !DILocation(line: 344, column: 17, scope: !10221)
!10225 = !DILocation(line: 344, column: 21, scope: !10221)
!10226 = !DILocation(line: 344, column: 19, scope: !10221)
!10227 = !DILocation(line: 344, column: 30, scope: !10221)
!10228 = !DILocation(line: 344, column: 52, scope: !10221)
!10229 = !DILocation(line: 344, column: 9, scope: !10221)
!10230 = !DILocation(line: 346, column: 34, scope: !10221)
!10231 = !DILocation(line: 346, column: 46, scope: !10221)
!10232 = !DILocation(line: 346, column: 53, scope: !10221)
!10233 = !DILocation(line: 346, column: 62, scope: !10221)
!10234 = !DILocation(line: 346, column: 17, scope: !10221)
!10235 = !DILocation(line: 346, column: 9, scope: !10221)
!10236 = !DILocation(line: 350, column: 13, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10221, file: !599, line: 348, column: 11)
!10238 = !DILocation(line: 353, column: 17, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10237, file: !599, line: 353, column: 17)
!10240 = !DILocation(line: 353, column: 29, scope: !10239)
!10241 = !DILocation(line: 353, column: 17, scope: !10237)
!10242 = !DILocation(line: 355, column: 29, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10239, file: !599, line: 354, column: 15)
!10244 = !DILocation(line: 356, column: 25, scope: !10243)
!10245 = !DILocation(line: 356, column: 29, scope: !10243)
!10246 = !DILocation(line: 356, column: 27, scope: !10243)
!10247 = !DILocation(line: 356, column: 38, scope: !10243)
!10248 = !DILocation(line: 357, column: 25, scope: !10243)
!10249 = !DILocation(line: 356, column: 17, scope: !10243)
!10250 = !DILocation(line: 358, column: 15, scope: !10243)
!10251 = !DILocation(line: 359, column: 13, scope: !10237)
!10252 = !DILocation(line: 361, column: 30, scope: !10237)
!10253 = !DILocation(line: 361, column: 33, scope: !10237)
!10254 = !DILocation(line: 361, column: 47, scope: !10237)
!10255 = !DILocation(line: 361, column: 13, scope: !10237)
!10256 = !DILocation(line: 362, column: 13, scope: !10237)
!10257 = !DILocation(line: 365, column: 17, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10237, file: !599, line: 365, column: 17)
!10259 = !DILocation(line: 365, column: 17, scope: !10237)
!10260 = !DILocation(line: 366, column: 25, scope: !10258)
!10261 = !DILocation(line: 366, column: 15, scope: !10258)
!10262 = !DILocation(line: 367, column: 19, scope: !10237)
!10263 = !DILocation(line: 367, column: 13, scope: !10237)
!10264 = !DILocation(line: 368, column: 13, scope: !10237)
!10265 = !DILocation(line: 368, column: 19, scope: !10237)
!10266 = !DILocation(line: 369, column: 13, scope: !10237)
!10267 = !DILocation(line: 372, column: 13, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10215, file: !599, line: 372, column: 11)
!10269 = !DILocation(line: 372, column: 11, scope: !10215)
!10270 = !DILocation(line: 373, column: 9, scope: !10268)
!10271 = !DILocation(line: 375, column: 11, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10215, file: !599, line: 375, column: 11)
!10273 = !DILocation(line: 375, column: 16, scope: !10272)
!10274 = !DILocation(line: 375, column: 11, scope: !10215)
!10275 = !DILocation(line: 377, column: 16, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10272, file: !599, line: 376, column: 9)
!10277 = !DILocation(line: 378, column: 23, scope: !10276)
!10278 = !DILocation(line: 379, column: 9, scope: !10276)
!10279 = !DILocalVariable(name: "flags", scope: !10215, file: !599, line: 380, type: !70)
!10280 = !DILocation(line: 380, column: 16, scope: !10215)
!10281 = !DILocation(line: 380, column: 24, scope: !10215)
!10282 = !DILocation(line: 380, column: 36, scope: !10215)
!10283 = !DILocation(line: 381, column: 32, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10215, file: !599, line: 381, column: 11)
!10285 = !DILocation(line: 381, column: 38, scope: !10284)
!10286 = !DILocation(line: 381, column: 44, scope: !10284)
!10287 = !DILocation(line: 381, column: 48, scope: !10284)
!10288 = !DILocation(line: 381, column: 46, scope: !10284)
!10289 = !DILocation(line: 381, column: 61, scope: !10284)
!10290 = !DILocation(line: 381, column: 11, scope: !10284)
!10291 = !DILocation(line: 381, column: 68, scope: !10284)
!10292 = !DILocation(line: 381, column: 11, scope: !10215)
!10293 = !DILocation(line: 382, column: 9, scope: !10284)
!10294 = !DILocalVariable(name: "e", scope: !10215, file: !599, line: 383, type: !7)
!10295 = !DILocation(line: 383, column: 11, scope: !10215)
!10296 = !DILocation(line: 383, column: 15, scope: !10215)
!10297 = !DILocation(line: 384, column: 11, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10215, file: !599, line: 384, column: 11)
!10299 = !DILocation(line: 384, column: 13, scope: !10298)
!10300 = !DILocation(line: 384, column: 11, scope: !10215)
!10301 = !DILocation(line: 386, column: 15, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10303, file: !599, line: 386, column: 15)
!10303 = distinct !DILexicalBlock(scope: !10298, file: !599, line: 385, column: 9)
!10304 = !DILocation(line: 386, column: 15, scope: !10303)
!10305 = !DILocation(line: 387, column: 23, scope: !10302)
!10306 = !DILocation(line: 387, column: 13, scope: !10302)
!10307 = !DILocation(line: 388, column: 17, scope: !10303)
!10308 = !DILocation(line: 388, column: 11, scope: !10303)
!10309 = !DILocation(line: 389, column: 19, scope: !10303)
!10310 = !DILocation(line: 389, column: 11, scope: !10303)
!10311 = !DILocation(line: 389, column: 17, scope: !10303)
!10312 = !DILocation(line: 390, column: 11, scope: !10303)
!10313 = distinct !{!10313, !10213, !10314}
!10314 = !DILocation(line: 392, column: 5, scope: !10151)
!10315 = !DILocation(line: 394, column: 7, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10151, file: !599, line: 394, column: 7)
!10317 = !DILocation(line: 394, column: 7, scope: !10151)
!10318 = !DILocation(line: 395, column: 15, scope: !10316)
!10319 = !DILocation(line: 395, column: 5, scope: !10316)
!10320 = !DILocation(line: 396, column: 10, scope: !10151)
!10321 = !DILocation(line: 396, column: 3, scope: !10151)
!10322 = !DILocation(line: 397, column: 1, scope: !10151)
!10323 = distinct !DISubprogram(name: "numbered_backup", scope: !599, file: !599, line: 207, type: !613, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !595, retainedNodes: !143)
!10324 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10323, file: !599, line: 207, type: !7)
!10325 = !DILocation(line: 207, column: 22, scope: !10323)
!10326 = !DILocalVariable(name: "buffer", arg: 2, scope: !10323, file: !599, line: 207, type: !119)
!10327 = !DILocation(line: 207, column: 37, scope: !10323)
!10328 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !10323, file: !599, line: 207, type: !55)
!10329 = !DILocation(line: 207, column: 52, scope: !10323)
!10330 = !DILocalVariable(name: "filelen", arg: 4, scope: !10323, file: !599, line: 207, type: !55)
!10331 = !DILocation(line: 207, column: 72, scope: !10323)
!10332 = !DILocalVariable(name: "base_offset", arg: 5, scope: !10323, file: !599, line: 208, type: !568)
!10333 = !DILocation(line: 208, column: 28, scope: !10323)
!10334 = !DILocalVariable(name: "dirpp", arg: 6, scope: !10323, file: !599, line: 208, type: !615)
!10335 = !DILocation(line: 208, column: 47, scope: !10323)
!10336 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !10323, file: !599, line: 208, type: !129)
!10337 = !DILocation(line: 208, column: 59, scope: !10323)
!10338 = !DILocalVariable(name: "result", scope: !10323, file: !599, line: 210, type: !598)
!10339 = !DILocation(line: 210, column: 31, scope: !10323)
!10340 = !DILocalVariable(name: "dirp", scope: !10323, file: !599, line: 211, type: !609)
!10341 = !DILocation(line: 211, column: 8, scope: !10323)
!10342 = !DILocation(line: 211, column: 16, scope: !10323)
!10343 = !DILocation(line: 211, column: 15, scope: !10323)
!10344 = !DILocalVariable(name: "dp", scope: !10323, file: !599, line: 212, type: !616)
!10345 = !DILocation(line: 212, column: 18, scope: !10323)
!10346 = !DILocalVariable(name: "buf", scope: !10323, file: !599, line: 213, type: !9)
!10347 = !DILocation(line: 213, column: 9, scope: !10323)
!10348 = !DILocation(line: 213, column: 16, scope: !10323)
!10349 = !DILocation(line: 213, column: 15, scope: !10323)
!10350 = !DILocalVariable(name: "versionlenmax", scope: !10323, file: !599, line: 214, type: !55)
!10351 = !DILocation(line: 214, column: 10, scope: !10323)
!10352 = !DILocalVariable(name: "base", scope: !10323, file: !599, line: 215, type: !9)
!10353 = !DILocation(line: 215, column: 9, scope: !10323)
!10354 = !DILocation(line: 215, column: 16, scope: !10323)
!10355 = !DILocation(line: 215, column: 22, scope: !10323)
!10356 = !DILocation(line: 215, column: 20, scope: !10323)
!10357 = !DILocalVariable(name: "baselen", scope: !10323, file: !599, line: 216, type: !55)
!10358 = !DILocation(line: 216, column: 10, scope: !10323)
!10359 = !DILocation(line: 216, column: 30, scope: !10323)
!10360 = !DILocation(line: 216, column: 20, scope: !10323)
!10361 = !DILocation(line: 218, column: 7, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10323, file: !599, line: 218, column: 7)
!10363 = !DILocation(line: 218, column: 7, scope: !10323)
!10364 = !DILocation(line: 219, column: 16, scope: !10362)
!10365 = !DILocation(line: 219, column: 5, scope: !10362)
!10366 = !DILocalVariable(name: "tmp", scope: !10367, file: !599, line: 224, type: !625)
!10367 = distinct !DILexicalBlock(scope: !10362, file: !599, line: 221, column: 5)
!10368 = !DILocation(line: 224, column: 12, scope: !10367)
!10369 = !DILocation(line: 225, column: 7, scope: !10367)
!10370 = !DILocation(line: 225, column: 20, scope: !10367)
!10371 = !DILocation(line: 226, column: 15, scope: !10367)
!10372 = !DILocation(line: 226, column: 7, scope: !10367)
!10373 = !DILocation(line: 227, column: 25, scope: !10367)
!10374 = !DILocation(line: 227, column: 33, scope: !10367)
!10375 = !DILocation(line: 227, column: 41, scope: !10367)
!10376 = !DILocation(line: 227, column: 14, scope: !10367)
!10377 = !DILocation(line: 227, column: 12, scope: !10367)
!10378 = !DILocation(line: 228, column: 12, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10367, file: !599, line: 228, column: 11)
!10380 = !DILocation(line: 228, column: 17, scope: !10379)
!10381 = !DILocation(line: 228, column: 20, scope: !10379)
!10382 = !DILocation(line: 228, column: 26, scope: !10379)
!10383 = !DILocation(line: 228, column: 11, scope: !10367)
!10384 = !DILocation(line: 229, column: 16, scope: !10379)
!10385 = !DILocation(line: 229, column: 9, scope: !10379)
!10386 = !DILocation(line: 230, column: 15, scope: !10367)
!10387 = !DILocation(line: 230, column: 7, scope: !10367)
!10388 = !DILocation(line: 231, column: 15, scope: !10367)
!10389 = !DILocation(line: 231, column: 22, scope: !10367)
!10390 = !DILocation(line: 231, column: 20, scope: !10367)
!10391 = !DILocation(line: 231, column: 7, scope: !10367)
!10392 = !DILocation(line: 232, column: 12, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10367, file: !599, line: 232, column: 11)
!10394 = !DILocation(line: 232, column: 11, scope: !10367)
!10395 = !DILocation(line: 233, column: 16, scope: !10393)
!10396 = !DILocation(line: 233, column: 9, scope: !10393)
!10397 = !DILocation(line: 234, column: 16, scope: !10367)
!10398 = !DILocation(line: 234, column: 8, scope: !10367)
!10399 = !DILocation(line: 234, column: 14, scope: !10367)
!10400 = !DILocation(line: 237, column: 3, scope: !10323)
!10401 = !DILocation(line: 237, column: 25, scope: !10323)
!10402 = !DILocation(line: 237, column: 16, scope: !10323)
!10403 = !DILocation(line: 237, column: 14, scope: !10323)
!10404 = !DILocation(line: 237, column: 32, scope: !10323)
!10405 = !DILocalVariable(name: "p", scope: !10406, file: !599, line: 239, type: !115)
!10406 = distinct !DILexicalBlock(scope: !10323, file: !599, line: 238, column: 5)
!10407 = !DILocation(line: 239, column: 19, scope: !10406)
!10408 = !DILocalVariable(name: "q", scope: !10406, file: !599, line: 240, type: !9)
!10409 = !DILocation(line: 240, column: 13, scope: !10406)
!10410 = !DILocalVariable(name: "all_9s", scope: !10406, file: !599, line: 241, type: !120)
!10411 = !DILocation(line: 241, column: 12, scope: !10406)
!10412 = !DILocalVariable(name: "versionlen", scope: !10406, file: !599, line: 242, type: !55)
!10413 = !DILocation(line: 242, column: 14, scope: !10406)
!10414 = !DILocation(line: 244, column: 11, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !10406, file: !599, line: 244, column: 11)
!10416 = !DILocation(line: 244, column: 34, scope: !10415)
!10417 = !DILocation(line: 244, column: 42, scope: !10415)
!10418 = !DILocation(line: 244, column: 32, scope: !10415)
!10419 = !DILocation(line: 244, column: 11, scope: !10406)
!10420 = !DILocation(line: 245, column: 9, scope: !10415)
!10421 = distinct !{!10421, !10400, !10422}
!10422 = !DILocation(line: 301, column: 5, scope: !10323)
!10423 = !DILocation(line: 247, column: 19, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10406, file: !599, line: 247, column: 11)
!10425 = !DILocation(line: 247, column: 25, scope: !10424)
!10426 = !DILocation(line: 247, column: 23, scope: !10424)
!10427 = !DILocation(line: 247, column: 38, scope: !10424)
!10428 = !DILocation(line: 247, column: 42, scope: !10424)
!10429 = !DILocation(line: 247, column: 50, scope: !10424)
!10430 = !DILocation(line: 247, column: 58, scope: !10424)
!10431 = !DILocation(line: 247, column: 11, scope: !10424)
!10432 = !DILocation(line: 247, column: 63, scope: !10424)
!10433 = !DILocation(line: 247, column: 11, scope: !10406)
!10434 = !DILocation(line: 248, column: 9, scope: !10424)
!10435 = !DILocation(line: 250, column: 11, scope: !10406)
!10436 = !DILocation(line: 250, column: 15, scope: !10406)
!10437 = !DILocation(line: 250, column: 24, scope: !10406)
!10438 = !DILocation(line: 250, column: 22, scope: !10406)
!10439 = !DILocation(line: 250, column: 32, scope: !10406)
!10440 = !DILocation(line: 250, column: 9, scope: !10406)
!10441 = !DILocation(line: 256, column: 22, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10406, file: !599, line: 256, column: 11)
!10443 = !DILocation(line: 256, column: 21, scope: !10442)
!10444 = !DILocation(line: 256, column: 18, scope: !10442)
!10445 = !DILocation(line: 256, column: 24, scope: !10442)
!10446 = !DILocation(line: 256, column: 28, scope: !10442)
!10447 = !DILocation(line: 256, column: 27, scope: !10442)
!10448 = !DILocation(line: 256, column: 30, scope: !10442)
!10449 = !DILocation(line: 256, column: 11, scope: !10406)
!10450 = !DILocation(line: 257, column: 9, scope: !10442)
!10451 = !DILocation(line: 258, column: 18, scope: !10406)
!10452 = !DILocation(line: 258, column: 17, scope: !10406)
!10453 = !DILocation(line: 258, column: 20, scope: !10406)
!10454 = !DILocation(line: 258, column: 14, scope: !10406)
!10455 = !DILocation(line: 259, column: 23, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10406, file: !599, line: 259, column: 7)
!10457 = !DILocation(line: 259, column: 12, scope: !10456)
!10458 = !DILocation(line: 259, column: 28, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10456, file: !599, line: 259, column: 7)
!10460 = !DILocation(line: 259, column: 7, scope: !10456)
!10461 = !DILocation(line: 260, column: 20, scope: !10459)
!10462 = !DILocation(line: 260, column: 22, scope: !10459)
!10463 = !DILocation(line: 260, column: 34, scope: !10459)
!10464 = !DILocation(line: 260, column: 16, scope: !10459)
!10465 = !DILocation(line: 260, column: 9, scope: !10459)
!10466 = !DILocation(line: 259, column: 63, scope: !10459)
!10467 = !DILocation(line: 259, column: 7, scope: !10459)
!10468 = distinct !{!10468, !10460, !10469}
!10469 = !DILocation(line: 260, column: 40, scope: !10456)
!10470 = !DILocation(line: 262, column: 14, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10406, file: !599, line: 262, column: 11)
!10472 = !DILocation(line: 262, column: 16, scope: !10471)
!10473 = !DILocation(line: 262, column: 28, scope: !10471)
!10474 = !DILocation(line: 262, column: 35, scope: !10471)
!10475 = !DILocation(line: 262, column: 39, scope: !10471)
!10476 = !DILocation(line: 262, column: 41, scope: !10471)
!10477 = !DILocation(line: 262, column: 52, scope: !10471)
!10478 = !DILocation(line: 263, column: 14, scope: !10471)
!10479 = !DILocation(line: 263, column: 18, scope: !10471)
!10480 = !DILocation(line: 263, column: 34, scope: !10471)
!10481 = !DILocation(line: 263, column: 32, scope: !10471)
!10482 = !DILocation(line: 264, column: 18, scope: !10471)
!10483 = !DILocation(line: 264, column: 22, scope: !10471)
!10484 = !DILocation(line: 264, column: 39, scope: !10471)
!10485 = !DILocation(line: 264, column: 36, scope: !10471)
!10486 = !DILocation(line: 265, column: 22, scope: !10471)
!10487 = !DILocation(line: 265, column: 33, scope: !10471)
!10488 = !DILocation(line: 265, column: 39, scope: !10471)
!10489 = !DILocation(line: 265, column: 37, scope: !10471)
!10490 = !DILocation(line: 265, column: 47, scope: !10471)
!10491 = !DILocation(line: 265, column: 52, scope: !10471)
!10492 = !DILocation(line: 265, column: 55, scope: !10471)
!10493 = !DILocation(line: 265, column: 25, scope: !10471)
!10494 = !DILocation(line: 265, column: 67, scope: !10471)
!10495 = !DILocation(line: 262, column: 11, scope: !10406)
!10496 = !DILocation(line: 266, column: 9, scope: !10471)
!10497 = !DILocation(line: 272, column: 23, scope: !10406)
!10498 = !DILocation(line: 272, column: 32, scope: !10406)
!10499 = !DILocation(line: 272, column: 30, scope: !10406)
!10500 = !DILocation(line: 272, column: 21, scope: !10406)
!10501 = !DILocation(line: 273, column: 17, scope: !10406)
!10502 = !DILocation(line: 273, column: 14, scope: !10406)
!10503 = !DILocalVariable(name: "new_buffer_size", scope: !10406, file: !599, line: 274, type: !55)
!10504 = !DILocation(line: 274, column: 14, scope: !10406)
!10505 = !DILocation(line: 274, column: 32, scope: !10406)
!10506 = !DILocation(line: 274, column: 40, scope: !10406)
!10507 = !DILocation(line: 274, column: 46, scope: !10406)
!10508 = !DILocation(line: 274, column: 44, scope: !10406)
!10509 = !DILocation(line: 274, column: 60, scope: !10406)
!10510 = !DILocation(line: 275, column: 11, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10406, file: !599, line: 275, column: 11)
!10512 = !DILocation(line: 275, column: 25, scope: !10511)
!10513 = !DILocation(line: 275, column: 23, scope: !10511)
!10514 = !DILocation(line: 275, column: 11, scope: !10406)
!10515 = !DILocation(line: 277, column: 17, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !599, line: 277, column: 15)
!10517 = distinct !DILexicalBlock(scope: !10511, file: !599, line: 276, column: 9)
!10518 = !DILocation(line: 277, column: 15, scope: !10517)
!10519 = !DILocation(line: 278, column: 29, scope: !10516)
!10520 = !DILocation(line: 278, column: 13, scope: !10516)
!10521 = !DILocalVariable(name: "new_buf", scope: !10517, file: !599, line: 279, type: !9)
!10522 = !DILocation(line: 279, column: 17, scope: !10517)
!10523 = !DILocation(line: 279, column: 36, scope: !10517)
!10524 = !DILocation(line: 279, column: 41, scope: !10517)
!10525 = !DILocation(line: 279, column: 27, scope: !10517)
!10526 = !DILocation(line: 280, column: 16, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10517, file: !599, line: 280, column: 15)
!10528 = !DILocation(line: 280, column: 15, scope: !10517)
!10529 = !DILocation(line: 282, column: 25, scope: !10530)
!10530 = distinct !DILexicalBlock(scope: !10527, file: !599, line: 281, column: 13)
!10531 = !DILocation(line: 282, column: 16, scope: !10530)
!10532 = !DILocation(line: 282, column: 23, scope: !10530)
!10533 = !DILocation(line: 283, column: 15, scope: !10530)
!10534 = !DILocation(line: 285, column: 17, scope: !10517)
!10535 = !DILocation(line: 285, column: 15, scope: !10517)
!10536 = !DILocation(line: 286, column: 25, scope: !10517)
!10537 = !DILocation(line: 286, column: 23, scope: !10517)
!10538 = !DILocation(line: 287, column: 9, scope: !10517)
!10539 = !DILocation(line: 288, column: 11, scope: !10406)
!10540 = !DILocation(line: 288, column: 17, scope: !10406)
!10541 = !DILocation(line: 288, column: 15, scope: !10406)
!10542 = !DILocation(line: 288, column: 9, scope: !10406)
!10543 = !DILocation(line: 289, column: 9, scope: !10406)
!10544 = !DILocation(line: 289, column: 12, scope: !10406)
!10545 = !DILocation(line: 290, column: 9, scope: !10406)
!10546 = !DILocation(line: 290, column: 12, scope: !10406)
!10547 = !DILocation(line: 291, column: 8, scope: !10406)
!10548 = !DILocation(line: 291, column: 10, scope: !10406)
!10549 = !DILocation(line: 292, column: 12, scope: !10406)
!10550 = !DILocation(line: 292, column: 9, scope: !10406)
!10551 = !DILocation(line: 293, column: 15, scope: !10406)
!10552 = !DILocation(line: 293, column: 18, scope: !10406)
!10553 = !DILocation(line: 293, column: 21, scope: !10406)
!10554 = !DILocation(line: 293, column: 32, scope: !10406)
!10555 = !DILocation(line: 293, column: 7, scope: !10406)
!10556 = !DILocation(line: 297, column: 12, scope: !10406)
!10557 = !DILocation(line: 297, column: 9, scope: !10406)
!10558 = !DILocation(line: 298, column: 7, scope: !10406)
!10559 = !DILocation(line: 298, column: 15, scope: !10406)
!10560 = !DILocation(line: 298, column: 14, scope: !10406)
!10561 = !DILocation(line: 298, column: 19, scope: !10406)
!10562 = !DILocation(line: 299, column: 10, scope: !10406)
!10563 = !DILocation(line: 299, column: 12, scope: !10406)
!10564 = distinct !{!10564, !10558, !10565}
!10565 = !DILocation(line: 299, column: 14, scope: !10406)
!10566 = !DILocation(line: 300, column: 10, scope: !10406)
!10567 = !DILocation(line: 300, column: 7, scope: !10406)
!10568 = !DILocation(line: 303, column: 13, scope: !10323)
!10569 = !DILocation(line: 303, column: 4, scope: !10323)
!10570 = !DILocation(line: 303, column: 11, scope: !10323)
!10571 = !DILocation(line: 304, column: 10, scope: !10323)
!10572 = !DILocation(line: 304, column: 3, scope: !10323)
!10573 = !DILocation(line: 305, column: 1, scope: !10323)
!10574 = distinct !DISubprogram(name: "check_extension", scope: !599, file: !599, line: 105, type: !626, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !595, retainedNodes: !143)
!10575 = !DILocalVariable(name: "file", arg: 1, scope: !10574, file: !599, line: 105, type: !9)
!10576 = !DILocation(line: 105, column: 24, scope: !10574)
!10577 = !DILocalVariable(name: "filelen", arg: 2, scope: !10574, file: !599, line: 105, type: !55)
!10578 = !DILocation(line: 105, column: 37, scope: !10574)
!10579 = !DILocalVariable(name: "e", arg: 3, scope: !10574, file: !599, line: 105, type: !10)
!10580 = !DILocation(line: 105, column: 51, scope: !10574)
!10581 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !10574, file: !599, line: 106, type: !7)
!10582 = !DILocation(line: 106, column: 22, scope: !10574)
!10583 = !DILocalVariable(name: "base_max", arg: 5, scope: !10574, file: !599, line: 106, type: !628)
!10584 = !DILocation(line: 106, column: 38, scope: !10574)
!10585 = !DILocalVariable(name: "base", scope: !10574, file: !599, line: 108, type: !9)
!10586 = !DILocation(line: 108, column: 9, scope: !10574)
!10587 = !DILocation(line: 108, column: 32, scope: !10574)
!10588 = !DILocation(line: 108, column: 16, scope: !10574)
!10589 = !DILocalVariable(name: "baselen", scope: !10574, file: !599, line: 109, type: !55)
!10590 = !DILocation(line: 109, column: 10, scope: !10574)
!10591 = !DILocation(line: 109, column: 30, scope: !10574)
!10592 = !DILocation(line: 109, column: 20, scope: !10574)
!10593 = !DILocalVariable(name: "baselen_max", scope: !10574, file: !599, line: 110, type: !55)
!10594 = !DILocation(line: 110, column: 10, scope: !10574)
!10595 = !DILocation(line: 112, column: 49, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10574, file: !599, line: 112, column: 7)
!10597 = !DILocation(line: 112, column: 47, scope: !10596)
!10598 = !DILocation(line: 112, column: 7, scope: !10574)
!10599 = !DILocation(line: 115, column: 12, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10601, file: !599, line: 115, column: 11)
!10601 = distinct !DILexicalBlock(scope: !10596, file: !599, line: 113, column: 5)
!10602 = !DILocation(line: 115, column: 11, scope: !10600)
!10603 = !DILocation(line: 115, column: 21, scope: !10600)
!10604 = !DILocation(line: 115, column: 11, scope: !10601)
!10605 = !DILocalVariable(name: "name_max", scope: !10606, file: !599, line: 117, type: !31)
!10606 = distinct !DILexicalBlock(scope: !10600, file: !599, line: 116, column: 9)
!10607 = !DILocation(line: 117, column: 16, scope: !10606)
!10608 = !DILocation(line: 118, column: 15, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10606, file: !599, line: 118, column: 15)
!10610 = !DILocation(line: 118, column: 22, scope: !10609)
!10611 = !DILocation(line: 118, column: 15, scope: !10606)
!10612 = !DILocalVariable(name: "tmp", scope: !10613, file: !599, line: 123, type: !625)
!10613 = distinct !DILexicalBlock(scope: !10609, file: !599, line: 119, column: 13)
!10614 = !DILocation(line: 123, column: 20, scope: !10613)
!10615 = !DILocation(line: 124, column: 15, scope: !10613)
!10616 = !DILocation(line: 124, column: 28, scope: !10613)
!10617 = !DILocation(line: 125, column: 23, scope: !10613)
!10618 = !DILocation(line: 125, column: 15, scope: !10613)
!10619 = !DILocation(line: 126, column: 15, scope: !10613)
!10620 = !DILocation(line: 126, column: 21, scope: !10613)
!10621 = !DILocation(line: 127, column: 36, scope: !10613)
!10622 = !DILocation(line: 127, column: 26, scope: !10613)
!10623 = !DILocation(line: 127, column: 24, scope: !10613)
!10624 = !DILocation(line: 128, column: 28, scope: !10613)
!10625 = !DILocation(line: 128, column: 27, scope: !10613)
!10626 = !DILocation(line: 128, column: 24, scope: !10613)
!10627 = !DILocation(line: 129, column: 23, scope: !10613)
!10628 = !DILocation(line: 129, column: 15, scope: !10613)
!10629 = !DILocation(line: 130, column: 13, scope: !10613)
!10630 = !DILocation(line: 133, column: 15, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10609, file: !599, line: 132, column: 13)
!10632 = !DILocation(line: 133, column: 21, scope: !10631)
!10633 = !DILocation(line: 134, column: 37, scope: !10631)
!10634 = !DILocation(line: 134, column: 26, scope: !10631)
!10635 = !DILocation(line: 134, column: 24, scope: !10631)
!10636 = !DILocation(line: 135, column: 28, scope: !10631)
!10637 = !DILocation(line: 135, column: 27, scope: !10631)
!10638 = !DILocation(line: 135, column: 24, scope: !10631)
!10639 = !DILocation(line: 138, column: 29, scope: !10606)
!10640 = !DILocation(line: 138, column: 26, scope: !10606)
!10641 = !DILocation(line: 138, column: 38, scope: !10606)
!10642 = !DILocation(line: 138, column: 41, scope: !10606)
!10643 = !DILocation(line: 138, column: 50, scope: !10606)
!10644 = !DILocation(line: 138, column: 24, scope: !10606)
!10645 = !DILocation(line: 138, column: 64, scope: !10606)
!10646 = !DILocation(line: 139, column: 26, scope: !10606)
!10647 = !DILocation(line: 139, column: 35, scope: !10606)
!10648 = !DILocation(line: 138, column: 12, scope: !10606)
!10649 = !DILocation(line: 138, column: 21, scope: !10606)
!10650 = !DILocation(line: 140, column: 9, scope: !10606)
!10651 = !DILocation(line: 142, column: 22, scope: !10601)
!10652 = !DILocation(line: 142, column: 21, scope: !10601)
!10653 = !DILocation(line: 142, column: 19, scope: !10601)
!10654 = !DILocation(line: 143, column: 5, scope: !10601)
!10655 = !DILocation(line: 160, column: 7, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10574, file: !599, line: 160, column: 7)
!10657 = !DILocation(line: 160, column: 21, scope: !10656)
!10658 = !DILocation(line: 160, column: 19, scope: !10656)
!10659 = !DILocation(line: 160, column: 7, scope: !10574)
!10660 = !DILocation(line: 162, column: 17, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10656, file: !599, line: 161, column: 5)
!10662 = !DILocation(line: 162, column: 24, scope: !10661)
!10663 = !DILocation(line: 162, column: 22, scope: !10661)
!10664 = !DILocation(line: 162, column: 34, scope: !10661)
!10665 = !DILocation(line: 162, column: 32, scope: !10661)
!10666 = !DILocation(line: 162, column: 15, scope: !10661)
!10667 = !DILocation(line: 163, column: 11, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10661, file: !599, line: 163, column: 11)
!10669 = !DILocation(line: 163, column: 26, scope: !10668)
!10670 = !DILocation(line: 163, column: 23, scope: !10668)
!10671 = !DILocation(line: 163, column: 11, scope: !10661)
!10672 = !DILocation(line: 164, column: 19, scope: !10668)
!10673 = !DILocation(line: 164, column: 31, scope: !10668)
!10674 = !DILocation(line: 164, column: 17, scope: !10668)
!10675 = !DILocation(line: 164, column: 9, scope: !10668)
!10676 = !DILocation(line: 165, column: 23, scope: !10661)
!10677 = !DILocation(line: 165, column: 7, scope: !10661)
!10678 = !DILocation(line: 165, column: 12, scope: !10661)
!10679 = !DILocation(line: 165, column: 21, scope: !10661)
!10680 = !DILocation(line: 166, column: 7, scope: !10661)
!10681 = !DILocation(line: 166, column: 12, scope: !10661)
!10682 = !DILocation(line: 166, column: 20, scope: !10661)
!10683 = !DILocation(line: 166, column: 25, scope: !10661)
!10684 = !DILocation(line: 167, column: 5, scope: !10661)
!10685 = !DILocation(line: 168, column: 1, scope: !10574)
!10686 = distinct !DISubprogram(name: "backup_file_rename", scope: !10687, file: !10687, line: 28, type: !636, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1597, retainedNodes: !143)
!10687 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mbarbar/clone/coreutils")
!10688 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10686, file: !10687, line: 28, type: !7)
!10689 = !DILocation(line: 28, column: 25, scope: !10686)
!10690 = !DILocalVariable(name: "file", arg: 2, scope: !10686, file: !10687, line: 28, type: !115)
!10691 = !DILocation(line: 28, column: 45, scope: !10686)
!10692 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10686, file: !10687, line: 28, type: !68)
!10693 = !DILocation(line: 28, column: 68, scope: !10686)
!10694 = !DILocation(line: 30, column: 31, scope: !10686)
!10695 = !DILocation(line: 30, column: 39, scope: !10686)
!10696 = !DILocation(line: 30, column: 45, scope: !10686)
!10697 = !DILocation(line: 30, column: 10, scope: !10686)
!10698 = !DILocation(line: 30, column: 3, scope: !10686)
!10699 = distinct !DISubprogram(name: "find_backup_file_name", scope: !652, file: !652, line: 33, type: !636, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !632, retainedNodes: !143)
!10700 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10699, file: !652, line: 33, type: !7)
!10701 = !DILocation(line: 33, column: 28, scope: !10699)
!10702 = !DILocalVariable(name: "file", arg: 2, scope: !10699, file: !652, line: 33, type: !115)
!10703 = !DILocation(line: 33, column: 48, scope: !10699)
!10704 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10699, file: !652, line: 34, type: !68)
!10705 = !DILocation(line: 34, column: 41, scope: !10699)
!10706 = !DILocalVariable(name: "result", scope: !10699, file: !652, line: 36, type: !9)
!10707 = !DILocation(line: 36, column: 9, scope: !10699)
!10708 = !DILocation(line: 36, column: 39, scope: !10699)
!10709 = !DILocation(line: 36, column: 47, scope: !10699)
!10710 = !DILocation(line: 36, column: 53, scope: !10699)
!10711 = !DILocation(line: 36, column: 18, scope: !10699)
!10712 = !DILocation(line: 37, column: 8, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10699, file: !652, line: 37, column: 7)
!10714 = !DILocation(line: 37, column: 7, scope: !10699)
!10715 = !DILocation(line: 38, column: 5, scope: !10713)
!10716 = !DILocation(line: 39, column: 10, scope: !10699)
!10717 = !DILocation(line: 39, column: 3, scope: !10699)
!10718 = distinct !DISubprogram(name: "get_version", scope: !652, file: !652, line: 71, type: !638, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !632, retainedNodes: !143)
!10719 = !DILocalVariable(name: "context", arg: 1, scope: !10718, file: !652, line: 71, type: !115)
!10720 = !DILocation(line: 71, column: 26, scope: !10718)
!10721 = !DILocalVariable(name: "version", arg: 2, scope: !10718, file: !652, line: 71, type: !115)
!10722 = !DILocation(line: 71, column: 47, scope: !10718)
!10723 = !DILocation(line: 73, column: 7, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10718, file: !652, line: 73, column: 7)
!10725 = !DILocation(line: 73, column: 15, scope: !10724)
!10726 = !DILocation(line: 73, column: 20, scope: !10724)
!10727 = !DILocation(line: 73, column: 24, scope: !10724)
!10728 = !DILocation(line: 73, column: 23, scope: !10724)
!10729 = !DILocation(line: 73, column: 32, scope: !10724)
!10730 = !DILocation(line: 73, column: 7, scope: !10718)
!10731 = !DILocation(line: 74, column: 5, scope: !10724)
!10732 = !DILocation(line: 76, column: 12, scope: !10724)
!10733 = !DILocation(line: 76, column: 5, scope: !10724)
!10734 = !DILocation(line: 77, column: 1, scope: !10718)
!10735 = distinct !DISubprogram(name: "xget_version", scope: !652, file: !652, line: 87, type: !638, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !632, retainedNodes: !143)
!10736 = !DILocalVariable(name: "context", arg: 1, scope: !10735, file: !652, line: 87, type: !115)
!10737 = !DILocation(line: 87, column: 27, scope: !10735)
!10738 = !DILocalVariable(name: "version", arg: 2, scope: !10735, file: !652, line: 87, type: !115)
!10739 = !DILocation(line: 87, column: 48, scope: !10735)
!10740 = !DILocation(line: 89, column: 7, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10735, file: !652, line: 89, column: 7)
!10742 = !DILocation(line: 89, column: 15, scope: !10741)
!10743 = !DILocation(line: 89, column: 19, scope: !10741)
!10744 = !DILocation(line: 89, column: 18, scope: !10741)
!10745 = !DILocation(line: 89, column: 7, scope: !10735)
!10746 = !DILocation(line: 90, column: 25, scope: !10741)
!10747 = !DILocation(line: 90, column: 34, scope: !10741)
!10748 = !DILocation(line: 90, column: 12, scope: !10741)
!10749 = !DILocation(line: 90, column: 5, scope: !10741)
!10750 = !DILocation(line: 92, column: 45, scope: !10741)
!10751 = !DILocation(line: 92, column: 12, scope: !10741)
!10752 = !DILocation(line: 92, column: 5, scope: !10741)
!10753 = !DILocation(line: 93, column: 1, scope: !10735)
!10754 = distinct !DISubprogram(name: "buffer_lcm", scope: !10755, file: !10755, line: 28, type: !1603, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1600, retainedNodes: !143)
!10755 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mbarbar/clone/coreutils")
!10756 = !DILocalVariable(name: "a", arg: 1, scope: !10754, file: !10755, line: 28, type: !55)
!10757 = !DILocation(line: 28, column: 20, scope: !10754)
!10758 = !DILocalVariable(name: "b", arg: 2, scope: !10754, file: !10755, line: 28, type: !55)
!10759 = !DILocation(line: 28, column: 30, scope: !10754)
!10760 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !10754, file: !10755, line: 28, type: !55)
!10761 = !DILocation(line: 28, column: 40, scope: !10754)
!10762 = !DILocalVariable(name: "size", scope: !10754, file: !10755, line: 30, type: !55)
!10763 = !DILocation(line: 30, column: 10, scope: !10754)
!10764 = !DILocation(line: 33, column: 8, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10754, file: !10755, line: 33, column: 7)
!10766 = !DILocation(line: 33, column: 7, scope: !10754)
!10767 = !DILocation(line: 34, column: 12, scope: !10765)
!10768 = !DILocation(line: 34, column: 16, scope: !10765)
!10769 = !DILocation(line: 34, column: 10, scope: !10765)
!10770 = !DILocation(line: 34, column: 5, scope: !10765)
!10771 = !DILocation(line: 37, column: 11, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10773, file: !10755, line: 37, column: 11)
!10773 = distinct !DILexicalBlock(scope: !10765, file: !10755, line: 36, column: 5)
!10774 = !DILocation(line: 37, column: 11, scope: !10773)
!10775 = !DILocalVariable(name: "lcm", scope: !10776, file: !10755, line: 42, type: !55)
!10776 = distinct !DILexicalBlock(scope: !10772, file: !10755, line: 38, column: 9)
!10777 = !DILocation(line: 42, column: 18, scope: !10776)
!10778 = !DILocalVariable(name: "m", scope: !10776, file: !10755, line: 42, type: !55)
!10779 = !DILocation(line: 42, column: 23, scope: !10776)
!10780 = !DILocalVariable(name: "n", scope: !10776, file: !10755, line: 42, type: !55)
!10781 = !DILocation(line: 42, column: 26, scope: !10776)
!10782 = !DILocalVariable(name: "q", scope: !10776, file: !10755, line: 42, type: !55)
!10783 = !DILocation(line: 42, column: 29, scope: !10776)
!10784 = !DILocalVariable(name: "r", scope: !10776, file: !10755, line: 42, type: !55)
!10785 = !DILocation(line: 42, column: 32, scope: !10776)
!10786 = !DILocation(line: 45, column: 20, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10776, file: !10755, line: 45, column: 11)
!10788 = !DILocation(line: 45, column: 18, scope: !10787)
!10789 = !DILocation(line: 45, column: 27, scope: !10787)
!10790 = !DILocation(line: 45, column: 25, scope: !10787)
!10791 = !DILocation(line: 45, column: 16, scope: !10787)
!10792 = !DILocation(line: 45, column: 36, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10787, file: !10755, line: 45, column: 11)
!10794 = !DILocation(line: 45, column: 40, scope: !10793)
!10795 = !DILocation(line: 45, column: 38, scope: !10793)
!10796 = !DILocation(line: 45, column: 34, scope: !10793)
!10797 = !DILocation(line: 45, column: 43, scope: !10793)
!10798 = !DILocation(line: 45, column: 11, scope: !10787)
!10799 = !DILocation(line: 46, column: 13, scope: !10793)
!10800 = !DILocation(line: 45, column: 54, scope: !10793)
!10801 = !DILocation(line: 45, column: 52, scope: !10793)
!10802 = !DILocation(line: 45, column: 61, scope: !10793)
!10803 = !DILocation(line: 45, column: 59, scope: !10793)
!10804 = !DILocation(line: 45, column: 11, scope: !10793)
!10805 = distinct !{!10805, !10798, !10806}
!10806 = !DILocation(line: 46, column: 13, scope: !10787)
!10807 = !DILocation(line: 49, column: 15, scope: !10776)
!10808 = !DILocation(line: 49, column: 19, scope: !10776)
!10809 = !DILocation(line: 49, column: 17, scope: !10776)
!10810 = !DILocation(line: 49, column: 13, scope: !10776)
!10811 = !DILocation(line: 50, column: 17, scope: !10776)
!10812 = !DILocation(line: 50, column: 21, scope: !10776)
!10813 = !DILocation(line: 50, column: 19, scope: !10776)
!10814 = !DILocation(line: 50, column: 15, scope: !10776)
!10815 = !DILocation(line: 51, column: 15, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10776, file: !10755, line: 51, column: 15)
!10817 = !DILocation(line: 51, column: 22, scope: !10816)
!10818 = !DILocation(line: 51, column: 19, scope: !10816)
!10819 = !DILocation(line: 51, column: 30, scope: !10816)
!10820 = !DILocation(line: 51, column: 33, scope: !10816)
!10821 = !DILocation(line: 51, column: 39, scope: !10816)
!10822 = !DILocation(line: 51, column: 37, scope: !10816)
!10823 = !DILocation(line: 51, column: 44, scope: !10816)
!10824 = !DILocation(line: 51, column: 41, scope: !10816)
!10825 = !DILocation(line: 51, column: 15, scope: !10776)
!10826 = !DILocation(line: 52, column: 20, scope: !10816)
!10827 = !DILocation(line: 52, column: 13, scope: !10816)
!10828 = !DILocation(line: 53, column: 9, scope: !10776)
!10829 = !DILocation(line: 55, column: 14, scope: !10773)
!10830 = !DILocation(line: 55, column: 12, scope: !10773)
!10831 = !DILocation(line: 58, column: 10, scope: !10754)
!10832 = !DILocation(line: 58, column: 18, scope: !10754)
!10833 = !DILocation(line: 58, column: 15, scope: !10754)
!10834 = !DILocation(line: 58, column: 28, scope: !10754)
!10835 = !DILocation(line: 58, column: 35, scope: !10754)
!10836 = !DILocation(line: 58, column: 3, scope: !10754)
!10837 = !DILocation(line: 59, column: 1, scope: !10754)
!10838 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !694, file: !694, line: 43, type: !136, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !655, retainedNodes: !143)
!10839 = !DILocalVariable(name: "file", arg: 1, scope: !10838, file: !694, line: 43, type: !115)
!10840 = !DILocation(line: 43, column: 40, scope: !10838)
!10841 = !DILocation(line: 45, column: 15, scope: !10838)
!10842 = !DILocation(line: 45, column: 13, scope: !10838)
!10843 = !DILocation(line: 46, column: 1, scope: !10838)
!10844 = distinct !DISubprogram(name: "close_stdin", scope: !694, file: !694, line: 79, type: !134, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !655, retainedNodes: !143)
!10845 = !DILocalVariable(name: "fail", scope: !10844, file: !694, line: 81, type: !120)
!10846 = !DILocation(line: 81, column: 8, scope: !10844)
!10847 = !DILocation(line: 87, column: 19, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10844, file: !694, line: 87, column: 7)
!10849 = !DILocation(line: 87, column: 7, scope: !10848)
!10850 = !DILocation(line: 87, column: 26, scope: !10848)
!10851 = !DILocation(line: 87, column: 7, scope: !10844)
!10852 = !DILocation(line: 91, column: 19, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !694, line: 91, column: 11)
!10854 = distinct !DILexicalBlock(scope: !10848, file: !694, line: 88, column: 5)
!10855 = !DILocation(line: 91, column: 11, scope: !10853)
!10856 = !DILocation(line: 91, column: 39, scope: !10853)
!10857 = !DILocation(line: 91, column: 44, scope: !10853)
!10858 = !DILocation(line: 91, column: 55, scope: !10853)
!10859 = !DILocation(line: 91, column: 47, scope: !10853)
!10860 = !DILocation(line: 91, column: 62, scope: !10853)
!10861 = !DILocation(line: 91, column: 11, scope: !10854)
!10862 = !DILocation(line: 92, column: 14, scope: !10853)
!10863 = !DILocation(line: 92, column: 9, scope: !10853)
!10864 = !DILocation(line: 93, column: 5, scope: !10854)
!10865 = !DILocation(line: 94, column: 21, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10844, file: !694, line: 94, column: 7)
!10867 = !DILocation(line: 94, column: 7, scope: !10866)
!10868 = !DILocation(line: 94, column: 28, scope: !10866)
!10869 = !DILocation(line: 94, column: 7, scope: !10844)
!10870 = !DILocation(line: 95, column: 10, scope: !10866)
!10871 = !DILocation(line: 95, column: 5, scope: !10866)
!10872 = !DILocation(line: 96, column: 7, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10844, file: !694, line: 96, column: 7)
!10874 = !DILocation(line: 96, column: 7, scope: !10844)
!10875 = !DILocalVariable(name: "close_error", scope: !10876, file: !694, line: 100, type: !115)
!10876 = distinct !DILexicalBlock(scope: !10873, file: !694, line: 97, column: 5)
!10877 = !DILocation(line: 100, column: 19, scope: !10876)
!10878 = !DILocation(line: 100, column: 33, scope: !10876)
!10879 = !DILocation(line: 101, column: 11, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10876, file: !694, line: 101, column: 11)
!10881 = !DILocation(line: 101, column: 11, scope: !10876)
!10882 = !DILocation(line: 102, column: 19, scope: !10880)
!10883 = !DILocation(line: 102, column: 52, scope: !10880)
!10884 = !DILocation(line: 102, column: 36, scope: !10880)
!10885 = !DILocation(line: 103, column: 16, scope: !10880)
!10886 = !DILocation(line: 102, column: 9, scope: !10880)
!10887 = !DILocation(line: 105, column: 19, scope: !10880)
!10888 = !DILocation(line: 105, column: 32, scope: !10880)
!10889 = !DILocation(line: 105, column: 9, scope: !10880)
!10890 = !DILocation(line: 106, column: 5, scope: !10876)
!10891 = !DILocation(line: 108, column: 3, scope: !10844)
!10892 = !DILocation(line: 110, column: 7, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10844, file: !694, line: 110, column: 7)
!10894 = !DILocation(line: 110, column: 7, scope: !10844)
!10895 = !DILocation(line: 111, column: 12, scope: !10893)
!10896 = !DILocation(line: 111, column: 5, scope: !10893)
!10897 = !DILocation(line: 112, column: 1, scope: !10844)
!10898 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !739, file: !739, line: 51, type: !136, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !697, retainedNodes: !143)
!10899 = !DILocalVariable(name: "file", arg: 1, scope: !10898, file: !739, line: 51, type: !115)
!10900 = !DILocation(line: 51, column: 41, scope: !10898)
!10901 = !DILocation(line: 53, column: 15, scope: !10898)
!10902 = !DILocation(line: 53, column: 13, scope: !10898)
!10903 = !DILocation(line: 54, column: 1, scope: !10898)
!10904 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !739, file: !739, line: 88, type: !700, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !697, retainedNodes: !143)
!10905 = !DILocalVariable(name: "ignore", arg: 1, scope: !10904, file: !739, line: 88, type: !120)
!10906 = !DILocation(line: 88, column: 37, scope: !10904)
!10907 = !DILocation(line: 90, column: 18, scope: !10904)
!10908 = !DILocation(line: 90, column: 16, scope: !10904)
!10909 = !DILocation(line: 91, column: 1, scope: !10904)
!10910 = distinct !DISubprogram(name: "close_stdout", scope: !739, file: !739, line: 117, type: !134, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !697, retainedNodes: !143)
!10911 = !DILocation(line: 119, column: 21, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10910, file: !739, line: 119, column: 7)
!10913 = !DILocation(line: 119, column: 7, scope: !10912)
!10914 = !DILocation(line: 119, column: 29, scope: !10912)
!10915 = !DILocation(line: 120, column: 7, scope: !10912)
!10916 = !DILocation(line: 120, column: 12, scope: !10912)
!10917 = !DILocation(line: 120, column: 25, scope: !10912)
!10918 = !DILocation(line: 120, column: 28, scope: !10912)
!10919 = !DILocation(line: 120, column: 34, scope: !10912)
!10920 = !DILocation(line: 119, column: 7, scope: !10910)
!10921 = !DILocalVariable(name: "write_error", scope: !10922, file: !739, line: 122, type: !115)
!10922 = distinct !DILexicalBlock(scope: !10912, file: !739, line: 121, column: 5)
!10923 = !DILocation(line: 122, column: 19, scope: !10922)
!10924 = !DILocation(line: 122, column: 33, scope: !10922)
!10925 = !DILocation(line: 123, column: 11, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10922, file: !739, line: 123, column: 11)
!10927 = !DILocation(line: 123, column: 11, scope: !10922)
!10928 = !DILocation(line: 124, column: 19, scope: !10926)
!10929 = !DILocation(line: 124, column: 52, scope: !10926)
!10930 = !DILocation(line: 124, column: 36, scope: !10926)
!10931 = !DILocation(line: 125, column: 16, scope: !10926)
!10932 = !DILocation(line: 124, column: 9, scope: !10926)
!10933 = !DILocation(line: 127, column: 19, scope: !10926)
!10934 = !DILocation(line: 127, column: 32, scope: !10926)
!10935 = !DILocation(line: 127, column: 9, scope: !10926)
!10936 = !DILocation(line: 129, column: 14, scope: !10922)
!10937 = !DILocation(line: 129, column: 7, scope: !10922)
!10938 = !DILocation(line: 134, column: 42, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10910, file: !739, line: 134, column: 7)
!10940 = !DILocation(line: 134, column: 28, scope: !10939)
!10941 = !DILocation(line: 134, column: 50, scope: !10939)
!10942 = !DILocation(line: 134, column: 7, scope: !10910)
!10943 = !DILocation(line: 135, column: 12, scope: !10939)
!10944 = !DILocation(line: 135, column: 5, scope: !10939)
!10945 = !DILocation(line: 136, column: 1, scope: !10910)
!10946 = distinct !DISubprogram(name: "dir_name", scope: !10947, file: !10947, line: 32, type: !990, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1605, retainedNodes: !143)
!10947 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/clone/coreutils")
!10948 = !DILocalVariable(name: "file", arg: 1, scope: !10946, file: !10947, line: 32, type: !115)
!10949 = !DILocation(line: 32, column: 23, scope: !10946)
!10950 = !DILocalVariable(name: "result", scope: !10946, file: !10947, line: 34, type: !9)
!10951 = !DILocation(line: 34, column: 9, scope: !10946)
!10952 = !DILocation(line: 34, column: 29, scope: !10946)
!10953 = !DILocation(line: 34, column: 18, scope: !10946)
!10954 = !DILocation(line: 35, column: 8, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10946, file: !10947, line: 35, column: 7)
!10956 = !DILocation(line: 35, column: 7, scope: !10946)
!10957 = !DILocation(line: 36, column: 5, scope: !10955)
!10958 = !DILocation(line: 37, column: 10, scope: !10946)
!10959 = !DILocation(line: 37, column: 3, scope: !10946)
!10960 = distinct !DISubprogram(name: "dir_len", scope: !10961, file: !10961, line: 32, type: !1611, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1608, retainedNodes: !143)
!10961 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!10962 = !DILocalVariable(name: "file", arg: 1, scope: !10960, file: !10961, line: 32, type: !115)
!10963 = !DILocation(line: 32, column: 22, scope: !10960)
!10964 = !DILocalVariable(name: "prefix_length", scope: !10960, file: !10961, line: 34, type: !55)
!10965 = !DILocation(line: 34, column: 10, scope: !10960)
!10966 = !DILocalVariable(name: "length", scope: !10960, file: !10961, line: 35, type: !55)
!10967 = !DILocation(line: 35, column: 10, scope: !10960)
!10968 = !DILocation(line: 38, column: 21, scope: !10960)
!10969 = !DILocation(line: 38, column: 35, scope: !10960)
!10970 = !DILocation(line: 41, column: 24, scope: !10960)
!10971 = !DILocation(line: 38, column: 20, scope: !10960)
!10972 = !DILocation(line: 38, column: 17, scope: !10960)
!10973 = !DILocation(line: 48, column: 33, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10960, file: !10961, line: 48, column: 3)
!10975 = !DILocation(line: 48, column: 17, scope: !10974)
!10976 = !DILocation(line: 48, column: 41, scope: !10974)
!10977 = !DILocation(line: 48, column: 39, scope: !10974)
!10978 = !DILocation(line: 48, column: 15, scope: !10974)
!10979 = !DILocation(line: 48, column: 8, scope: !10974)
!10980 = !DILocation(line: 49, column: 8, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10974, file: !10961, line: 48, column: 3)
!10982 = !DILocation(line: 49, column: 24, scope: !10981)
!10983 = !DILocation(line: 49, column: 22, scope: !10981)
!10984 = !DILocation(line: 48, column: 3, scope: !10974)
!10985 = !DILocation(line: 50, column: 11, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10981, file: !10961, line: 50, column: 9)
!10987 = !DILocation(line: 50, column: 9, scope: !10981)
!10988 = !DILocation(line: 51, column: 7, scope: !10986)
!10989 = !DILocation(line: 49, column: 38, scope: !10981)
!10990 = !DILocation(line: 48, column: 3, scope: !10981)
!10991 = distinct !{!10991, !10984, !10992}
!10992 = !DILocation(line: 51, column: 7, scope: !10974)
!10993 = !DILocation(line: 52, column: 10, scope: !10960)
!10994 = !DILocation(line: 52, column: 3, scope: !10960)
!10995 = distinct !DISubprogram(name: "mdir_name", scope: !10961, file: !10961, line: 71, type: !990, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1608, retainedNodes: !143)
!10996 = !DILocalVariable(name: "file", arg: 1, scope: !10995, file: !10961, line: 71, type: !115)
!10997 = !DILocation(line: 71, column: 24, scope: !10995)
!10998 = !DILocalVariable(name: "length", scope: !10995, file: !10961, line: 73, type: !55)
!10999 = !DILocation(line: 73, column: 10, scope: !10995)
!11000 = !DILocation(line: 73, column: 28, scope: !10995)
!11001 = !DILocation(line: 73, column: 19, scope: !10995)
!11002 = !DILocalVariable(name: "append_dot", scope: !10995, file: !10961, line: 74, type: !120)
!11003 = !DILocation(line: 74, column: 8, scope: !10995)
!11004 = !DILocation(line: 74, column: 22, scope: !10995)
!11005 = !DILocation(line: 74, column: 29, scope: !10995)
!11006 = !DILocation(line: 75, column: 22, scope: !10995)
!11007 = !DILocalVariable(name: "dir", scope: !10995, file: !10961, line: 78, type: !9)
!11008 = !DILocation(line: 78, column: 9, scope: !10995)
!11009 = !DILocation(line: 78, column: 23, scope: !10995)
!11010 = !DILocation(line: 78, column: 32, scope: !10995)
!11011 = !DILocation(line: 78, column: 30, scope: !10995)
!11012 = !DILocation(line: 78, column: 43, scope: !10995)
!11013 = !DILocation(line: 78, column: 15, scope: !10995)
!11014 = !DILocation(line: 79, column: 8, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !10995, file: !10961, line: 79, column: 7)
!11016 = !DILocation(line: 79, column: 7, scope: !10995)
!11017 = !DILocation(line: 80, column: 5, scope: !11015)
!11018 = !DILocation(line: 81, column: 11, scope: !10995)
!11019 = !DILocation(line: 81, column: 16, scope: !10995)
!11020 = !DILocation(line: 81, column: 22, scope: !10995)
!11021 = !DILocation(line: 81, column: 3, scope: !10995)
!11022 = !DILocation(line: 82, column: 7, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !10995, file: !10961, line: 82, column: 7)
!11024 = !DILocation(line: 82, column: 7, scope: !10995)
!11025 = !DILocation(line: 83, column: 5, scope: !11023)
!11026 = !DILocation(line: 83, column: 15, scope: !11023)
!11027 = !DILocation(line: 83, column: 19, scope: !11023)
!11028 = !DILocation(line: 84, column: 3, scope: !10995)
!11029 = !DILocation(line: 84, column: 7, scope: !10995)
!11030 = !DILocation(line: 84, column: 15, scope: !10995)
!11031 = !DILocation(line: 85, column: 10, scope: !10995)
!11032 = !DILocation(line: 85, column: 3, scope: !10995)
!11033 = !DILocation(line: 86, column: 1, scope: !10995)
!11034 = distinct !DISubprogram(name: "last_component", scope: !11035, file: !11035, line: 30, type: !990, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1613, retainedNodes: !143)
!11035 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!11036 = !DILocalVariable(name: "name", arg: 1, scope: !11034, file: !11035, line: 30, type: !115)
!11037 = !DILocation(line: 30, column: 29, scope: !11034)
!11038 = !DILocalVariable(name: "base", scope: !11034, file: !11035, line: 32, type: !115)
!11039 = !DILocation(line: 32, column: 15, scope: !11034)
!11040 = !DILocation(line: 32, column: 22, scope: !11034)
!11041 = !DILocation(line: 32, column: 27, scope: !11034)
!11042 = !DILocalVariable(name: "p", scope: !11034, file: !11035, line: 33, type: !115)
!11043 = !DILocation(line: 33, column: 15, scope: !11034)
!11044 = !DILocalVariable(name: "saw_slash", scope: !11034, file: !11035, line: 34, type: !120)
!11045 = !DILocation(line: 34, column: 8, scope: !11034)
!11046 = !DILocation(line: 36, column: 3, scope: !11034)
!11047 = !DILocation(line: 36, column: 10, scope: !11034)
!11048 = !DILocation(line: 37, column: 9, scope: !11034)
!11049 = distinct !{!11049, !11046, !11048}
!11050 = !DILocation(line: 39, column: 12, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11034, file: !11035, line: 39, column: 3)
!11052 = !DILocation(line: 39, column: 10, scope: !11051)
!11053 = !DILocation(line: 39, column: 8, scope: !11051)
!11054 = !DILocation(line: 39, column: 19, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11051, file: !11035, line: 39, column: 3)
!11056 = !DILocation(line: 39, column: 18, scope: !11055)
!11057 = !DILocation(line: 39, column: 3, scope: !11051)
!11058 = !DILocation(line: 41, column: 11, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11060, file: !11035, line: 41, column: 11)
!11060 = distinct !DILexicalBlock(scope: !11055, file: !11035, line: 40, column: 5)
!11061 = !DILocation(line: 41, column: 11, scope: !11060)
!11062 = !DILocation(line: 42, column: 19, scope: !11059)
!11063 = !DILocation(line: 42, column: 9, scope: !11059)
!11064 = !DILocation(line: 43, column: 16, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11059, file: !11035, line: 43, column: 16)
!11066 = !DILocation(line: 43, column: 16, scope: !11059)
!11067 = !DILocation(line: 45, column: 18, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11065, file: !11035, line: 44, column: 9)
!11069 = !DILocation(line: 45, column: 16, scope: !11068)
!11070 = !DILocation(line: 46, column: 21, scope: !11068)
!11071 = !DILocation(line: 47, column: 9, scope: !11068)
!11072 = !DILocation(line: 48, column: 5, scope: !11060)
!11073 = !DILocation(line: 39, column: 23, scope: !11055)
!11074 = !DILocation(line: 39, column: 3, scope: !11055)
!11075 = distinct !{!11075, !11057, !11076}
!11076 = !DILocation(line: 48, column: 5, scope: !11051)
!11077 = !DILocation(line: 50, column: 19, scope: !11034)
!11078 = !DILocation(line: 50, column: 3, scope: !11034)
!11079 = distinct !DISubprogram(name: "base_len", scope: !11035, file: !11035, line: 58, type: !1611, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1613, retainedNodes: !143)
!11080 = !DILocalVariable(name: "name", arg: 1, scope: !11079, file: !11035, line: 58, type: !115)
!11081 = !DILocation(line: 58, column: 23, scope: !11079)
!11082 = !DILocalVariable(name: "len", scope: !11079, file: !11035, line: 60, type: !55)
!11083 = !DILocation(line: 60, column: 10, scope: !11079)
!11084 = !DILocalVariable(name: "prefix_len", scope: !11079, file: !11035, line: 61, type: !55)
!11085 = !DILocation(line: 61, column: 10, scope: !11079)
!11086 = !DILocation(line: 63, column: 22, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11079, file: !11035, line: 63, column: 3)
!11088 = !DILocation(line: 63, column: 14, scope: !11087)
!11089 = !DILocation(line: 63, column: 12, scope: !11087)
!11090 = !DILocation(line: 63, column: 8, scope: !11087)
!11091 = !DILocation(line: 63, column: 34, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11087, file: !11035, line: 63, column: 3)
!11093 = !DILocation(line: 63, column: 32, scope: !11092)
!11094 = !DILocation(line: 63, column: 38, scope: !11092)
!11095 = !DILocation(line: 63, column: 41, scope: !11092)
!11096 = !DILocation(line: 0, scope: !11092)
!11097 = !DILocation(line: 63, column: 3, scope: !11087)
!11098 = !DILocation(line: 64, column: 5, scope: !11092)
!11099 = !DILocation(line: 63, column: 70, scope: !11092)
!11100 = !DILocation(line: 63, column: 3, scope: !11092)
!11101 = distinct !{!11101, !11097, !11102}
!11102 = !DILocation(line: 64, column: 5, scope: !11087)
!11103 = !DILocation(line: 74, column: 10, scope: !11079)
!11104 = !DILocation(line: 74, column: 3, scope: !11079)
!11105 = distinct !DISubprogram(name: "strip_trailing_slashes", scope: !11106, file: !11106, line: 31, type: !1619, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1616, retainedNodes: !143)
!11106 = !DIFile(filename: "lib/stripslash.c", directory: "/home/mbarbar/clone/coreutils")
!11107 = !DILocalVariable(name: "file", arg: 1, scope: !11105, file: !11106, line: 31, type: !9)
!11108 = !DILocation(line: 31, column: 31, scope: !11105)
!11109 = !DILocalVariable(name: "base", scope: !11105, file: !11106, line: 33, type: !9)
!11110 = !DILocation(line: 33, column: 9, scope: !11105)
!11111 = !DILocation(line: 33, column: 32, scope: !11105)
!11112 = !DILocation(line: 33, column: 16, scope: !11105)
!11113 = !DILocalVariable(name: "base_lim", scope: !11105, file: !11106, line: 34, type: !9)
!11114 = !DILocation(line: 34, column: 9, scope: !11105)
!11115 = !DILocalVariable(name: "had_slash", scope: !11105, file: !11106, line: 35, type: !120)
!11116 = !DILocation(line: 35, column: 8, scope: !11105)
!11117 = !DILocation(line: 39, column: 10, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11105, file: !11106, line: 39, column: 7)
!11119 = !DILocation(line: 39, column: 9, scope: !11118)
!11120 = !DILocation(line: 39, column: 7, scope: !11105)
!11121 = !DILocation(line: 40, column: 12, scope: !11118)
!11122 = !DILocation(line: 40, column: 10, scope: !11118)
!11123 = !DILocation(line: 40, column: 5, scope: !11118)
!11124 = !DILocation(line: 41, column: 14, scope: !11105)
!11125 = !DILocation(line: 41, column: 31, scope: !11105)
!11126 = !DILocation(line: 41, column: 21, scope: !11105)
!11127 = !DILocation(line: 41, column: 19, scope: !11105)
!11128 = !DILocation(line: 41, column: 12, scope: !11105)
!11129 = !DILocation(line: 42, column: 17, scope: !11105)
!11130 = !DILocation(line: 42, column: 16, scope: !11105)
!11131 = !DILocation(line: 42, column: 26, scope: !11105)
!11132 = !DILocation(line: 42, column: 13, scope: !11105)
!11133 = !DILocation(line: 43, column: 4, scope: !11105)
!11134 = !DILocation(line: 43, column: 13, scope: !11105)
!11135 = !DILocation(line: 44, column: 10, scope: !11105)
!11136 = !DILocation(line: 44, column: 3, scope: !11105)
!11137 = distinct !DISubprogram(name: "fdadvise", scope: !11138, file: !11138, line: 31, type: !1634, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1621, retainedNodes: !143)
!11138 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mbarbar/clone/coreutils")
!11139 = !DILocalVariable(name: "fd", arg: 1, scope: !11137, file: !11138, line: 31, type: !7)
!11140 = !DILocation(line: 31, column: 15, scope: !11137)
!11141 = !DILocalVariable(name: "offset", arg: 2, scope: !11137, file: !11138, line: 31, type: !248)
!11142 = !DILocation(line: 31, column: 25, scope: !11137)
!11143 = !DILocalVariable(name: "len", arg: 3, scope: !11137, file: !11138, line: 31, type: !248)
!11144 = !DILocation(line: 31, column: 39, scope: !11137)
!11145 = !DILocalVariable(name: "advice", arg: 4, scope: !11137, file: !11138, line: 31, type: !1636)
!11146 = !DILocation(line: 31, column: 54, scope: !11137)
!11147 = !DILocalVariable(name: "__x", scope: !11148, file: !11138, line: 34, type: !7)
!11148 = distinct !DILexicalBlock(scope: !11137, file: !11138, line: 34, column: 3)
!11149 = !DILocation(line: 34, column: 3, scope: !11148)
!11150 = !DILocation(line: 36, column: 1, scope: !11137)
!11151 = distinct !DISubprogram(name: "fadvise", scope: !11138, file: !11138, line: 39, type: !1637, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1621, retainedNodes: !143)
!11152 = !DILocalVariable(name: "fp", arg: 1, scope: !11151, file: !11138, line: 39, type: !1639)
!11153 = !DILocation(line: 39, column: 16, scope: !11151)
!11154 = !DILocalVariable(name: "advice", arg: 2, scope: !11151, file: !11138, line: 39, type: !1636)
!11155 = !DILocation(line: 39, column: 30, scope: !11151)
!11156 = !DILocation(line: 41, column: 7, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11151, file: !11138, line: 41, column: 7)
!11158 = !DILocation(line: 41, column: 7, scope: !11151)
!11159 = !DILocation(line: 42, column: 23, scope: !11157)
!11160 = !DILocation(line: 42, column: 15, scope: !11157)
!11161 = !DILocation(line: 42, column: 34, scope: !11157)
!11162 = !DILocation(line: 42, column: 5, scope: !11157)
!11163 = !DILocation(line: 43, column: 1, scope: !11151)
!11164 = distinct !DISubprogram(name: "open_safer", scope: !11165, file: !11165, line: 29, type: !11166, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1673, retainedNodes: !143)
!11165 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mbarbar/clone/coreutils")
!11166 = !DISubroutineType(types: !11167)
!11167 = !{!7, !115, !7, null}
!11168 = !DILocalVariable(name: "file", arg: 1, scope: !11164, file: !11165, line: 29, type: !115)
!11169 = !DILocation(line: 29, column: 25, scope: !11164)
!11170 = !DILocalVariable(name: "flags", arg: 2, scope: !11164, file: !11165, line: 29, type: !7)
!11171 = !DILocation(line: 29, column: 35, scope: !11164)
!11172 = !DILocalVariable(name: "mode", scope: !11164, file: !11165, line: 31, type: !160)
!11173 = !DILocation(line: 31, column: 10, scope: !11164)
!11174 = !DILocation(line: 33, column: 7, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11164, file: !11165, line: 33, column: 7)
!11176 = !DILocation(line: 33, column: 13, scope: !11175)
!11177 = !DILocation(line: 33, column: 7, scope: !11164)
!11178 = !DILocalVariable(name: "ap", scope: !11179, file: !11165, line: 35, type: !1678)
!11179 = distinct !DILexicalBlock(scope: !11175, file: !11165, line: 34, column: 5)
!11180 = !DILocation(line: 35, column: 15, scope: !11179)
!11181 = !DILocation(line: 36, column: 7, scope: !11179)
!11182 = !DILocation(line: 40, column: 14, scope: !11179)
!11183 = !DILocation(line: 40, column: 12, scope: !11179)
!11184 = !DILocation(line: 42, column: 7, scope: !11179)
!11185 = !DILocation(line: 43, column: 5, scope: !11179)
!11186 = !DILocation(line: 45, column: 26, scope: !11164)
!11187 = !DILocation(line: 45, column: 32, scope: !11164)
!11188 = !DILocation(line: 45, column: 39, scope: !11164)
!11189 = !DILocation(line: 45, column: 20, scope: !11164)
!11190 = !DILocation(line: 45, column: 10, scope: !11164)
!11191 = !DILocation(line: 45, column: 3, scope: !11164)
!11192 = distinct !DISubprogram(name: "record_file", scope: !11193, file: !11193, line: 29, type: !1690, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1687, retainedNodes: !143)
!11193 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/clone/coreutils")
!11194 = !DILocalVariable(name: "ht", arg: 1, scope: !11192, file: !11193, line: 29, type: !195)
!11195 = !DILocation(line: 29, column: 26, scope: !11192)
!11196 = !DILocalVariable(name: "file", arg: 2, scope: !11192, file: !11193, line: 29, type: !115)
!11197 = !DILocation(line: 29, column: 42, scope: !11192)
!11198 = !DILocalVariable(name: "stats", arg: 3, scope: !11192, file: !11193, line: 29, type: !1692)
!11199 = !DILocation(line: 29, column: 67, scope: !11192)
!11200 = !DILocalVariable(name: "ent", scope: !11192, file: !11193, line: 31, type: !1715)
!11201 = !DILocation(line: 31, column: 20, scope: !11192)
!11202 = !DILocation(line: 33, column: 7, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11192, file: !11193, line: 33, column: 7)
!11204 = !DILocation(line: 33, column: 10, scope: !11203)
!11205 = !DILocation(line: 33, column: 7, scope: !11192)
!11206 = !DILocation(line: 34, column: 5, scope: !11203)
!11207 = !DILocation(line: 36, column: 9, scope: !11192)
!11208 = !DILocation(line: 36, column: 7, scope: !11192)
!11209 = !DILocation(line: 37, column: 24, scope: !11192)
!11210 = !DILocation(line: 37, column: 15, scope: !11192)
!11211 = !DILocation(line: 37, column: 3, scope: !11192)
!11212 = !DILocation(line: 37, column: 8, scope: !11192)
!11213 = !DILocation(line: 37, column: 13, scope: !11192)
!11214 = !{!11215, !2999, i64 0}
!11215 = !{!"F_triple", !2999, i64 0, !3183, i64 8, !3183, i64 16}
!11216 = !DILocation(line: 38, column: 17, scope: !11192)
!11217 = !DILocation(line: 38, column: 24, scope: !11192)
!11218 = !DILocation(line: 38, column: 3, scope: !11192)
!11219 = !DILocation(line: 38, column: 8, scope: !11192)
!11220 = !DILocation(line: 38, column: 15, scope: !11192)
!11221 = !{!11215, !3183, i64 8}
!11222 = !DILocation(line: 39, column: 17, scope: !11192)
!11223 = !DILocation(line: 39, column: 24, scope: !11192)
!11224 = !DILocation(line: 39, column: 3, scope: !11192)
!11225 = !DILocation(line: 39, column: 8, scope: !11192)
!11226 = !DILocation(line: 39, column: 15, scope: !11192)
!11227 = !{!11215, !3183, i64 16}
!11228 = !DILocalVariable(name: "ent_from_table", scope: !11229, file: !11193, line: 42, type: !1715)
!11229 = distinct !DILexicalBlock(scope: !11192, file: !11193, line: 41, column: 3)
!11230 = !DILocation(line: 42, column: 22, scope: !11229)
!11231 = !DILocation(line: 42, column: 52, scope: !11229)
!11232 = !DILocation(line: 42, column: 56, scope: !11229)
!11233 = !DILocation(line: 42, column: 39, scope: !11229)
!11234 = !DILocation(line: 43, column: 9, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11229, file: !11193, line: 43, column: 9)
!11236 = !DILocation(line: 43, column: 24, scope: !11235)
!11237 = !DILocation(line: 43, column: 9, scope: !11229)
!11238 = !DILocation(line: 46, column: 9, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11235, file: !11193, line: 44, column: 7)
!11240 = !DILocation(line: 49, column: 9, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11229, file: !11193, line: 49, column: 9)
!11242 = !DILocation(line: 49, column: 27, scope: !11241)
!11243 = !DILocation(line: 49, column: 24, scope: !11241)
!11244 = !DILocation(line: 49, column: 9, scope: !11229)
!11245 = !DILocation(line: 53, column: 22, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11241, file: !11193, line: 50, column: 7)
!11247 = !DILocation(line: 53, column: 9, scope: !11246)
!11248 = !DILocation(line: 54, column: 7, scope: !11246)
!11249 = !DILocation(line: 56, column: 1, scope: !11192)
!11250 = distinct !DISubprogram(name: "seen_file", scope: !11193, file: !11193, line: 61, type: !1722, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1687, retainedNodes: !143)
!11251 = !DILocalVariable(name: "ht", arg: 1, scope: !11250, file: !11193, line: 61, type: !1724)
!11252 = !DILocation(line: 61, column: 30, scope: !11250)
!11253 = !DILocalVariable(name: "file", arg: 2, scope: !11250, file: !11193, line: 61, type: !115)
!11254 = !DILocation(line: 61, column: 46, scope: !11250)
!11255 = !DILocalVariable(name: "stats", arg: 3, scope: !11250, file: !11193, line: 62, type: !1692)
!11256 = !DILocation(line: 62, column: 31, scope: !11250)
!11257 = !DILocalVariable(name: "new_ent", scope: !11250, file: !11193, line: 64, type: !1716)
!11258 = !DILocation(line: 64, column: 19, scope: !11250)
!11259 = !DILocation(line: 66, column: 7, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11250, file: !11193, line: 66, column: 7)
!11261 = !DILocation(line: 66, column: 10, scope: !11260)
!11262 = !DILocation(line: 66, column: 7, scope: !11250)
!11263 = !DILocation(line: 67, column: 5, scope: !11260)
!11264 = !DILocation(line: 69, column: 27, scope: !11250)
!11265 = !DILocation(line: 69, column: 11, scope: !11250)
!11266 = !DILocation(line: 69, column: 16, scope: !11250)
!11267 = !DILocation(line: 70, column: 20, scope: !11250)
!11268 = !DILocation(line: 70, column: 27, scope: !11250)
!11269 = !DILocation(line: 70, column: 11, scope: !11250)
!11270 = !DILocation(line: 70, column: 18, scope: !11250)
!11271 = !DILocation(line: 71, column: 20, scope: !11250)
!11272 = !DILocation(line: 71, column: 27, scope: !11250)
!11273 = !DILocation(line: 71, column: 11, scope: !11250)
!11274 = !DILocation(line: 71, column: 18, scope: !11250)
!11275 = !DILocation(line: 73, column: 25, scope: !11250)
!11276 = !DILocation(line: 73, column: 29, scope: !11250)
!11277 = !DILocation(line: 73, column: 12, scope: !11250)
!11278 = !DILocation(line: 73, column: 11, scope: !11250)
!11279 = !DILocation(line: 73, column: 10, scope: !11250)
!11280 = !DILocation(line: 73, column: 3, scope: !11250)
!11281 = !DILocation(line: 74, column: 1, scope: !11250)
!11282 = distinct !DISubprogram(name: "file_type", scope: !11283, file: !11283, line: 29, type: !1729, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1726, retainedNodes: !143)
!11283 = !DIFile(filename: "lib/file-type.c", directory: "/home/mbarbar/clone/coreutils")
!11284 = !DILocalVariable(name: "st", arg: 1, scope: !11282, file: !11283, line: 29, type: !1731)
!11285 = !DILocation(line: 29, column: 31, scope: !11282)
!11286 = !DILocation(line: 39, column: 7, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 39, column: 7)
!11288 = !DILocation(line: 39, column: 7, scope: !11282)
!11289 = !DILocation(line: 40, column: 12, scope: !11287)
!11290 = !DILocation(line: 40, column: 16, scope: !11287)
!11291 = !DILocation(line: 40, column: 24, scope: !11287)
!11292 = !DILocation(line: 40, column: 31, scope: !11287)
!11293 = !DILocation(line: 40, column: 57, scope: !11287)
!11294 = !DILocation(line: 40, column: 5, scope: !11287)
!11295 = !DILocation(line: 42, column: 7, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 42, column: 7)
!11297 = !DILocation(line: 42, column: 7, scope: !11282)
!11298 = !DILocation(line: 43, column: 12, scope: !11296)
!11299 = !DILocation(line: 43, column: 5, scope: !11296)
!11300 = !DILocation(line: 45, column: 7, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 45, column: 7)
!11302 = !DILocation(line: 45, column: 7, scope: !11282)
!11303 = !DILocation(line: 46, column: 12, scope: !11301)
!11304 = !DILocation(line: 46, column: 5, scope: !11301)
!11305 = !DILocation(line: 51, column: 7, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 51, column: 7)
!11307 = !DILocation(line: 51, column: 7, scope: !11282)
!11308 = !DILocation(line: 52, column: 12, scope: !11306)
!11309 = !DILocation(line: 52, column: 5, scope: !11306)
!11310 = !DILocation(line: 54, column: 7, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 54, column: 7)
!11312 = !DILocation(line: 54, column: 7, scope: !11282)
!11313 = !DILocation(line: 55, column: 12, scope: !11311)
!11314 = !DILocation(line: 55, column: 5, scope: !11311)
!11315 = !DILocation(line: 57, column: 7, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 57, column: 7)
!11317 = !DILocation(line: 57, column: 7, scope: !11282)
!11318 = !DILocation(line: 58, column: 12, scope: !11316)
!11319 = !DILocation(line: 58, column: 5, scope: !11316)
!11320 = !DILocation(line: 65, column: 7, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 65, column: 7)
!11322 = !DILocation(line: 65, column: 7, scope: !11282)
!11323 = !DILocation(line: 66, column: 12, scope: !11321)
!11324 = !DILocation(line: 66, column: 5, scope: !11321)
!11325 = !DILocation(line: 68, column: 7, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 68, column: 7)
!11327 = !DILocation(line: 68, column: 7, scope: !11282)
!11328 = !DILocation(line: 69, column: 12, scope: !11326)
!11329 = !DILocation(line: 69, column: 5, scope: !11326)
!11330 = !DILocation(line: 74, column: 7, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 74, column: 7)
!11332 = !DILocation(line: 74, column: 7, scope: !11282)
!11333 = !DILocation(line: 75, column: 12, scope: !11331)
!11334 = !DILocation(line: 75, column: 5, scope: !11331)
!11335 = !DILocation(line: 104, column: 7, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11282, file: !11283, line: 104, column: 7)
!11337 = !DILocation(line: 104, column: 7, scope: !11282)
!11338 = !DILocation(line: 105, column: 12, scope: !11336)
!11339 = !DILocation(line: 105, column: 5, scope: !11336)
!11340 = !DILocation(line: 110, column: 10, scope: !11282)
!11341 = !DILocation(line: 110, column: 3, scope: !11282)
!11342 = !DILocation(line: 111, column: 1, scope: !11282)
!11343 = distinct !DISubprogram(name: "strmode", scope: !11344, file: !11344, line: 96, type: !1757, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1754, retainedNodes: !143)
!11344 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/clone/coreutils")
!11345 = !DILocalVariable(name: "mode", arg: 1, scope: !11343, file: !11344, line: 96, type: !160)
!11346 = !DILocation(line: 96, column: 17, scope: !11343)
!11347 = !DILocalVariable(name: "str", arg: 2, scope: !11343, file: !11344, line: 96, type: !9)
!11348 = !DILocation(line: 96, column: 29, scope: !11343)
!11349 = !DILocation(line: 98, column: 22, scope: !11343)
!11350 = !DILocation(line: 98, column: 12, scope: !11343)
!11351 = !DILocation(line: 98, column: 3, scope: !11343)
!11352 = !DILocation(line: 98, column: 10, scope: !11343)
!11353 = !DILocation(line: 99, column: 12, scope: !11343)
!11354 = !DILocation(line: 99, column: 17, scope: !11343)
!11355 = !DILocation(line: 99, column: 3, scope: !11343)
!11356 = !DILocation(line: 99, column: 10, scope: !11343)
!11357 = !DILocation(line: 100, column: 12, scope: !11343)
!11358 = !DILocation(line: 100, column: 17, scope: !11343)
!11359 = !DILocation(line: 100, column: 3, scope: !11343)
!11360 = !DILocation(line: 100, column: 10, scope: !11343)
!11361 = !DILocation(line: 101, column: 13, scope: !11343)
!11362 = !DILocation(line: 101, column: 18, scope: !11343)
!11363 = !DILocation(line: 102, column: 16, scope: !11343)
!11364 = !DILocation(line: 102, column: 21, scope: !11343)
!11365 = !DILocation(line: 103, column: 16, scope: !11343)
!11366 = !DILocation(line: 103, column: 21, scope: !11343)
!11367 = !DILocation(line: 101, column: 12, scope: !11343)
!11368 = !DILocation(line: 101, column: 3, scope: !11343)
!11369 = !DILocation(line: 101, column: 10, scope: !11343)
!11370 = !DILocation(line: 104, column: 12, scope: !11343)
!11371 = !DILocation(line: 104, column: 17, scope: !11343)
!11372 = !DILocation(line: 104, column: 3, scope: !11343)
!11373 = !DILocation(line: 104, column: 10, scope: !11343)
!11374 = !DILocation(line: 105, column: 12, scope: !11343)
!11375 = !DILocation(line: 105, column: 17, scope: !11343)
!11376 = !DILocation(line: 105, column: 3, scope: !11343)
!11377 = !DILocation(line: 105, column: 10, scope: !11343)
!11378 = !DILocation(line: 106, column: 13, scope: !11343)
!11379 = !DILocation(line: 106, column: 18, scope: !11343)
!11380 = !DILocation(line: 107, column: 16, scope: !11343)
!11381 = !DILocation(line: 107, column: 21, scope: !11343)
!11382 = !DILocation(line: 108, column: 16, scope: !11343)
!11383 = !DILocation(line: 108, column: 21, scope: !11343)
!11384 = !DILocation(line: 106, column: 12, scope: !11343)
!11385 = !DILocation(line: 106, column: 3, scope: !11343)
!11386 = !DILocation(line: 106, column: 10, scope: !11343)
!11387 = !DILocation(line: 109, column: 12, scope: !11343)
!11388 = !DILocation(line: 109, column: 17, scope: !11343)
!11389 = !DILocation(line: 109, column: 3, scope: !11343)
!11390 = !DILocation(line: 109, column: 10, scope: !11343)
!11391 = !DILocation(line: 110, column: 12, scope: !11343)
!11392 = !DILocation(line: 110, column: 17, scope: !11343)
!11393 = !DILocation(line: 110, column: 3, scope: !11343)
!11394 = !DILocation(line: 110, column: 10, scope: !11343)
!11395 = !DILocation(line: 111, column: 13, scope: !11343)
!11396 = !DILocation(line: 111, column: 18, scope: !11343)
!11397 = !DILocation(line: 112, column: 16, scope: !11343)
!11398 = !DILocation(line: 112, column: 21, scope: !11343)
!11399 = !DILocation(line: 113, column: 16, scope: !11343)
!11400 = !DILocation(line: 113, column: 21, scope: !11343)
!11401 = !DILocation(line: 111, column: 12, scope: !11343)
!11402 = !DILocation(line: 111, column: 3, scope: !11343)
!11403 = !DILocation(line: 111, column: 10, scope: !11343)
!11404 = !DILocation(line: 114, column: 3, scope: !11343)
!11405 = !DILocation(line: 114, column: 11, scope: !11343)
!11406 = !DILocation(line: 115, column: 3, scope: !11343)
!11407 = !DILocation(line: 115, column: 11, scope: !11343)
!11408 = !DILocation(line: 116, column: 1, scope: !11343)
!11409 = distinct !DISubprogram(name: "ftypelet", scope: !11344, file: !11344, line: 54, type: !1784, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1754, retainedNodes: !143)
!11410 = !DILocalVariable(name: "bits", arg: 1, scope: !11409, file: !11344, line: 54, type: !160)
!11411 = !DILocation(line: 54, column: 18, scope: !11409)
!11412 = !DILocation(line: 57, column: 7, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11409, file: !11344, line: 57, column: 7)
!11414 = !DILocation(line: 57, column: 7, scope: !11409)
!11415 = !DILocation(line: 58, column: 5, scope: !11413)
!11416 = !DILocation(line: 59, column: 7, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11409, file: !11344, line: 59, column: 7)
!11418 = !DILocation(line: 59, column: 7, scope: !11409)
!11419 = !DILocation(line: 60, column: 5, scope: !11417)
!11420 = !DILocation(line: 63, column: 7, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11409, file: !11344, line: 63, column: 7)
!11422 = !DILocation(line: 63, column: 7, scope: !11409)
!11423 = !DILocation(line: 64, column: 5, scope: !11421)
!11424 = !DILocation(line: 65, column: 7, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11409, file: !11344, line: 65, column: 7)
!11426 = !DILocation(line: 65, column: 7, scope: !11409)
!11427 = !DILocation(line: 66, column: 5, scope: !11425)
!11428 = !DILocation(line: 67, column: 7, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11409, file: !11344, line: 67, column: 7)
!11430 = !DILocation(line: 67, column: 7, scope: !11409)
!11431 = !DILocation(line: 68, column: 5, scope: !11429)
!11432 = !DILocation(line: 69, column: 7, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11409, file: !11344, line: 69, column: 7)
!11434 = !DILocation(line: 69, column: 7, scope: !11409)
!11435 = !DILocation(line: 70, column: 5, scope: !11433)
!11436 = !DILocation(line: 73, column: 7, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11409, file: !11344, line: 73, column: 7)
!11438 = !DILocation(line: 73, column: 7, scope: !11409)
!11439 = !DILocation(line: 74, column: 5, scope: !11437)
!11440 = !DILocation(line: 90, column: 3, scope: !11409)
!11441 = !DILocation(line: 91, column: 1, scope: !11409)
!11442 = distinct !DISubprogram(name: "filemodestring", scope: !11344, file: !11344, line: 166, type: !1759, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1754, retainedNodes: !143)
!11443 = !DILocalVariable(name: "statp", arg: 1, scope: !11442, file: !11344, line: 166, type: !1761)
!11444 = !DILocation(line: 166, column: 36, scope: !11442)
!11445 = !DILocalVariable(name: "str", arg: 2, scope: !11442, file: !11344, line: 166, type: !9)
!11446 = !DILocation(line: 166, column: 49, scope: !11442)
!11447 = !DILocation(line: 168, column: 12, scope: !11442)
!11448 = !DILocation(line: 168, column: 19, scope: !11442)
!11449 = !DILocation(line: 168, column: 28, scope: !11442)
!11450 = !DILocation(line: 168, column: 3, scope: !11442)
!11451 = !DILocation(line: 170, column: 7, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11442, file: !11344, line: 170, column: 7)
!11453 = !DILocation(line: 170, column: 7, scope: !11442)
!11454 = !DILocation(line: 171, column: 5, scope: !11452)
!11455 = !DILocation(line: 171, column: 12, scope: !11452)
!11456 = !DILocation(line: 174, column: 12, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11458, file: !11344, line: 174, column: 12)
!11458 = distinct !DILexicalBlock(scope: !11452, file: !11344, line: 172, column: 12)
!11459 = !DILocation(line: 174, column: 12, scope: !11458)
!11460 = !DILocation(line: 175, column: 5, scope: !11457)
!11461 = !DILocation(line: 175, column: 12, scope: !11457)
!11462 = !DILocation(line: 176, column: 12, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11457, file: !11344, line: 176, column: 12)
!11464 = !DILocation(line: 176, column: 12, scope: !11457)
!11465 = !DILocation(line: 177, column: 5, scope: !11463)
!11466 = !DILocation(line: 177, column: 12, scope: !11463)
!11467 = !DILocation(line: 180, column: 1, scope: !11442)
!11468 = distinct !DISubprogram(name: "file_name_concat", scope: !11469, file: !11469, line: 35, type: !1789, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1786, retainedNodes: !143)
!11469 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/clone/coreutils")
!11470 = !DILocalVariable(name: "dir", arg: 1, scope: !11468, file: !11469, line: 35, type: !115)
!11471 = !DILocation(line: 35, column: 31, scope: !11468)
!11472 = !DILocalVariable(name: "base", arg: 2, scope: !11468, file: !11469, line: 35, type: !115)
!11473 = !DILocation(line: 35, column: 48, scope: !11468)
!11474 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11468, file: !11469, line: 35, type: !119)
!11475 = !DILocation(line: 35, column: 61, scope: !11468)
!11476 = !DILocalVariable(name: "p", scope: !11468, file: !11469, line: 37, type: !9)
!11477 = !DILocation(line: 37, column: 9, scope: !11468)
!11478 = !DILocation(line: 37, column: 32, scope: !11468)
!11479 = !DILocation(line: 37, column: 37, scope: !11468)
!11480 = !DILocation(line: 37, column: 43, scope: !11468)
!11481 = !DILocation(line: 37, column: 13, scope: !11468)
!11482 = !DILocation(line: 38, column: 7, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11468, file: !11469, line: 38, column: 7)
!11484 = !DILocation(line: 38, column: 9, scope: !11483)
!11485 = !DILocation(line: 38, column: 7, scope: !11468)
!11486 = !DILocation(line: 39, column: 5, scope: !11483)
!11487 = !DILocation(line: 40, column: 10, scope: !11468)
!11488 = !DILocation(line: 40, column: 3, scope: !11468)
!11489 = distinct !DISubprogram(name: "mfile_name_concat", scope: !11490, file: !11490, line: 47, type: !1789, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1791, retainedNodes: !143)
!11490 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!11491 = !DILocalVariable(name: "dir", arg: 1, scope: !11489, file: !11490, line: 47, type: !115)
!11492 = !DILocation(line: 47, column: 32, scope: !11489)
!11493 = !DILocalVariable(name: "base", arg: 2, scope: !11489, file: !11490, line: 47, type: !115)
!11494 = !DILocation(line: 47, column: 49, scope: !11489)
!11495 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11489, file: !11490, line: 47, type: !119)
!11496 = !DILocation(line: 47, column: 62, scope: !11489)
!11497 = !DILocalVariable(name: "dirbase", scope: !11489, file: !11490, line: 49, type: !115)
!11498 = !DILocation(line: 49, column: 15, scope: !11489)
!11499 = !DILocation(line: 49, column: 41, scope: !11489)
!11500 = !DILocation(line: 49, column: 25, scope: !11489)
!11501 = !DILocalVariable(name: "dirbaselen", scope: !11489, file: !11490, line: 50, type: !55)
!11502 = !DILocation(line: 50, column: 10, scope: !11489)
!11503 = !DILocation(line: 50, column: 33, scope: !11489)
!11504 = !DILocation(line: 50, column: 23, scope: !11489)
!11505 = !DILocalVariable(name: "dirlen", scope: !11489, file: !11490, line: 51, type: !55)
!11506 = !DILocation(line: 51, column: 10, scope: !11489)
!11507 = !DILocation(line: 51, column: 19, scope: !11489)
!11508 = !DILocation(line: 51, column: 29, scope: !11489)
!11509 = !DILocation(line: 51, column: 27, scope: !11489)
!11510 = !DILocation(line: 51, column: 35, scope: !11489)
!11511 = !DILocation(line: 51, column: 33, scope: !11489)
!11512 = !DILocalVariable(name: "baselen", scope: !11489, file: !11490, line: 52, type: !55)
!11513 = !DILocation(line: 52, column: 10, scope: !11489)
!11514 = !DILocation(line: 52, column: 28, scope: !11489)
!11515 = !DILocation(line: 52, column: 20, scope: !11489)
!11516 = !DILocalVariable(name: "sep", scope: !11489, file: !11490, line: 53, type: !10)
!11517 = !DILocation(line: 53, column: 8, scope: !11489)
!11518 = !DILocation(line: 54, column: 7, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11489, file: !11490, line: 54, column: 7)
!11520 = !DILocation(line: 54, column: 7, scope: !11489)
!11521 = !DILocation(line: 57, column: 13, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !11490, line: 57, column: 11)
!11523 = distinct !DILexicalBlock(scope: !11519, file: !11490, line: 55, column: 5)
!11524 = !DILocation(line: 57, column: 39, scope: !11522)
!11525 = !DILocation(line: 57, column: 44, scope: !11522)
!11526 = !DILocation(line: 57, column: 11, scope: !11523)
!11527 = !DILocation(line: 58, column: 13, scope: !11522)
!11528 = !DILocation(line: 58, column: 9, scope: !11522)
!11529 = !DILocation(line: 59, column: 5, scope: !11523)
!11530 = !DILocation(line: 60, column: 12, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11519, file: !11490, line: 60, column: 12)
!11532 = !DILocation(line: 60, column: 12, scope: !11519)
!11533 = !DILocation(line: 67, column: 11, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11531, file: !11490, line: 61, column: 5)
!11535 = !DILocation(line: 68, column: 5, scope: !11534)
!11536 = !DILocalVariable(name: "p_concat", scope: !11489, file: !11490, line: 70, type: !9)
!11537 = !DILocation(line: 70, column: 9, scope: !11489)
!11538 = !DILocation(line: 70, column: 28, scope: !11489)
!11539 = !DILocation(line: 70, column: 38, scope: !11489)
!11540 = !DILocation(line: 70, column: 42, scope: !11489)
!11541 = !DILocation(line: 70, column: 37, scope: !11489)
!11542 = !DILocation(line: 70, column: 35, scope: !11489)
!11543 = !DILocation(line: 70, column: 54, scope: !11489)
!11544 = !DILocation(line: 70, column: 52, scope: !11489)
!11545 = !DILocation(line: 70, column: 62, scope: !11489)
!11546 = !DILocation(line: 70, column: 20, scope: !11489)
!11547 = !DILocalVariable(name: "p", scope: !11489, file: !11490, line: 71, type: !9)
!11548 = !DILocation(line: 71, column: 9, scope: !11489)
!11549 = !DILocation(line: 73, column: 7, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11489, file: !11490, line: 73, column: 7)
!11551 = !DILocation(line: 73, column: 16, scope: !11550)
!11552 = !DILocation(line: 73, column: 7, scope: !11489)
!11553 = !DILocation(line: 74, column: 5, scope: !11550)
!11554 = !DILocation(line: 76, column: 16, scope: !11489)
!11555 = !DILocation(line: 76, column: 26, scope: !11489)
!11556 = !DILocation(line: 76, column: 31, scope: !11489)
!11557 = !DILocation(line: 76, column: 7, scope: !11489)
!11558 = !DILocation(line: 76, column: 5, scope: !11489)
!11559 = !DILocation(line: 77, column: 8, scope: !11489)
!11560 = !DILocation(line: 77, column: 4, scope: !11489)
!11561 = !DILocation(line: 77, column: 6, scope: !11489)
!11562 = !DILocation(line: 78, column: 8, scope: !11489)
!11563 = !DILocation(line: 78, column: 12, scope: !11489)
!11564 = !DILocation(line: 78, column: 5, scope: !11489)
!11565 = !DILocation(line: 80, column: 7, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11489, file: !11490, line: 80, column: 7)
!11567 = !DILocation(line: 80, column: 7, scope: !11489)
!11568 = !DILocation(line: 81, column: 23, scope: !11566)
!11569 = !DILocation(line: 81, column: 6, scope: !11566)
!11570 = !DILocation(line: 81, column: 21, scope: !11566)
!11571 = !DILocation(line: 81, column: 5, scope: !11566)
!11572 = !DILocation(line: 83, column: 16, scope: !11489)
!11573 = !DILocation(line: 83, column: 19, scope: !11489)
!11574 = !DILocation(line: 83, column: 25, scope: !11489)
!11575 = !DILocation(line: 83, column: 7, scope: !11489)
!11576 = !DILocation(line: 83, column: 5, scope: !11489)
!11577 = !DILocation(line: 84, column: 4, scope: !11489)
!11578 = !DILocation(line: 84, column: 6, scope: !11489)
!11579 = !DILocation(line: 86, column: 10, scope: !11489)
!11580 = !DILocation(line: 86, column: 3, scope: !11489)
!11581 = !DILocation(line: 87, column: 1, scope: !11489)
!11582 = distinct !DISubprogram(name: "full_write", scope: !11583, file: !11583, line: 58, type: !1797, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1794, retainedNodes: !143)
!11583 = !DIFile(filename: "lib/full-write.c", directory: "/home/mbarbar/clone/coreutils")
!11584 = !DILocalVariable(name: "fd", arg: 1, scope: !11582, file: !11583, line: 58, type: !7)
!11585 = !DILocation(line: 58, column: 14, scope: !11582)
!11586 = !DILocalVariable(name: "buf", arg: 2, scope: !11582, file: !11583, line: 58, type: !427)
!11587 = !DILocation(line: 58, column: 30, scope: !11582)
!11588 = !DILocalVariable(name: "count", arg: 3, scope: !11582, file: !11583, line: 58, type: !55)
!11589 = !DILocation(line: 58, column: 42, scope: !11582)
!11590 = !DILocalVariable(name: "total", scope: !11582, file: !11583, line: 60, type: !55)
!11591 = !DILocation(line: 60, column: 10, scope: !11582)
!11592 = !DILocalVariable(name: "ptr", scope: !11582, file: !11583, line: 61, type: !115)
!11593 = !DILocation(line: 61, column: 15, scope: !11582)
!11594 = !DILocation(line: 61, column: 36, scope: !11582)
!11595 = !DILocation(line: 63, column: 3, scope: !11582)
!11596 = !DILocation(line: 63, column: 10, scope: !11582)
!11597 = !DILocation(line: 63, column: 16, scope: !11582)
!11598 = !DILocalVariable(name: "n_rw", scope: !11599, file: !11583, line: 65, type: !55)
!11599 = distinct !DILexicalBlock(scope: !11582, file: !11583, line: 64, column: 5)
!11600 = !DILocation(line: 65, column: 14, scope: !11599)
!11601 = !DILocation(line: 65, column: 30, scope: !11599)
!11602 = !DILocation(line: 65, column: 34, scope: !11599)
!11603 = !DILocation(line: 65, column: 39, scope: !11599)
!11604 = !DILocation(line: 65, column: 21, scope: !11599)
!11605 = !DILocation(line: 66, column: 11, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11599, file: !11583, line: 66, column: 11)
!11607 = !DILocation(line: 66, column: 16, scope: !11606)
!11608 = !DILocation(line: 66, column: 11, scope: !11599)
!11609 = !DILocation(line: 67, column: 9, scope: !11606)
!11610 = !DILocation(line: 68, column: 11, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11599, file: !11583, line: 68, column: 11)
!11612 = !DILocation(line: 68, column: 16, scope: !11611)
!11613 = !DILocation(line: 68, column: 11, scope: !11599)
!11614 = !DILocation(line: 70, column: 11, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11611, file: !11583, line: 69, column: 9)
!11616 = !DILocation(line: 70, column: 17, scope: !11615)
!11617 = !DILocation(line: 71, column: 11, scope: !11615)
!11618 = !DILocation(line: 73, column: 16, scope: !11599)
!11619 = !DILocation(line: 73, column: 13, scope: !11599)
!11620 = !DILocation(line: 74, column: 14, scope: !11599)
!11621 = !DILocation(line: 74, column: 11, scope: !11599)
!11622 = !DILocation(line: 75, column: 16, scope: !11599)
!11623 = !DILocation(line: 75, column: 13, scope: !11599)
!11624 = distinct !{!11624, !11595, !11625}
!11625 = !DILocation(line: 76, column: 5, scope: !11582)
!11626 = !DILocation(line: 78, column: 10, scope: !11582)
!11627 = !DILocation(line: 78, column: 3, scope: !11582)
!11628 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !758, file: !758, line: 150, type: !752, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11629 = !DILocalVariable(name: "table", arg: 1, scope: !11628, file: !758, line: 150, type: !754)
!11630 = !DILocation(line: 150, column: 39, scope: !11628)
!11631 = !DILocation(line: 152, column: 10, scope: !11628)
!11632 = !DILocation(line: 152, column: 17, scope: !11628)
!11633 = !{!11634, !3183, i64 16}
!11634 = !{!"hash_table", !2999, i64 0, !2999, i64 8, !3183, i64 16, !3183, i64 24, !3183, i64 32, !2999, i64 40, !2999, i64 48, !2999, i64 56, !2999, i64 64, !2999, i64 72}
!11635 = !DILocation(line: 152, column: 3, scope: !11628)
!11636 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !758, file: !758, line: 158, type: !752, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11637 = !DILocalVariable(name: "table", arg: 1, scope: !11636, file: !758, line: 158, type: !754)
!11638 = !DILocation(line: 158, column: 44, scope: !11636)
!11639 = !DILocation(line: 160, column: 10, scope: !11636)
!11640 = !DILocation(line: 160, column: 17, scope: !11636)
!11641 = !{!11634, !3183, i64 24}
!11642 = !DILocation(line: 160, column: 3, scope: !11636)
!11643 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !758, file: !758, line: 166, type: !752, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11644 = !DILocalVariable(name: "table", arg: 1, scope: !11643, file: !758, line: 166, type: !754)
!11645 = !DILocation(line: 166, column: 39, scope: !11643)
!11646 = !DILocation(line: 168, column: 10, scope: !11643)
!11647 = !DILocation(line: 168, column: 17, scope: !11643)
!11648 = !{!11634, !3183, i64 32}
!11649 = !DILocation(line: 168, column: 3, scope: !11643)
!11650 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !758, file: !758, line: 174, type: !752, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11651 = !DILocalVariable(name: "table", arg: 1, scope: !11650, file: !758, line: 174, type: !754)
!11652 = !DILocation(line: 174, column: 47, scope: !11650)
!11653 = !DILocalVariable(name: "bucket", scope: !11650, file: !758, line: 176, type: !767)
!11654 = !DILocation(line: 176, column: 28, scope: !11650)
!11655 = !DILocalVariable(name: "max_bucket_length", scope: !11650, file: !758, line: 177, type: !55)
!11656 = !DILocation(line: 177, column: 10, scope: !11650)
!11657 = !DILocation(line: 179, column: 17, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11650, file: !758, line: 179, column: 3)
!11659 = !DILocation(line: 179, column: 24, scope: !11658)
!11660 = !{!11634, !2999, i64 0}
!11661 = !DILocation(line: 179, column: 15, scope: !11658)
!11662 = !DILocation(line: 179, column: 8, scope: !11658)
!11663 = !DILocation(line: 179, column: 32, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11658, file: !758, line: 179, column: 3)
!11665 = !DILocation(line: 179, column: 41, scope: !11664)
!11666 = !DILocation(line: 179, column: 48, scope: !11664)
!11667 = !{!11634, !2999, i64 8}
!11668 = !DILocation(line: 179, column: 39, scope: !11664)
!11669 = !DILocation(line: 179, column: 3, scope: !11658)
!11670 = !DILocation(line: 181, column: 11, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11672, file: !758, line: 181, column: 11)
!11672 = distinct !DILexicalBlock(scope: !11664, file: !758, line: 180, column: 5)
!11673 = !DILocation(line: 181, column: 19, scope: !11671)
!11674 = !{!11675, !2999, i64 0}
!11675 = !{!"hash_entry", !2999, i64 0, !2999, i64 8}
!11676 = !DILocation(line: 181, column: 11, scope: !11672)
!11677 = !DILocalVariable(name: "cursor", scope: !11678, file: !758, line: 183, type: !767)
!11678 = distinct !DILexicalBlock(scope: !11671, file: !758, line: 182, column: 9)
!11679 = !DILocation(line: 183, column: 36, scope: !11678)
!11680 = !DILocation(line: 183, column: 45, scope: !11678)
!11681 = !DILocalVariable(name: "bucket_length", scope: !11678, file: !758, line: 184, type: !55)
!11682 = !DILocation(line: 184, column: 18, scope: !11678)
!11683 = !DILocation(line: 186, column: 11, scope: !11678)
!11684 = !DILocation(line: 186, column: 27, scope: !11678)
!11685 = !DILocation(line: 186, column: 35, scope: !11678)
!11686 = !{!11675, !2999, i64 8}
!11687 = !DILocation(line: 186, column: 25, scope: !11678)
!11688 = !DILocation(line: 186, column: 41, scope: !11678)
!11689 = !DILocation(line: 187, column: 26, scope: !11678)
!11690 = distinct !{!11690, !11683, !11689}
!11691 = !DILocation(line: 189, column: 15, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11678, file: !758, line: 189, column: 15)
!11693 = !DILocation(line: 189, column: 31, scope: !11692)
!11694 = !DILocation(line: 189, column: 29, scope: !11692)
!11695 = !DILocation(line: 189, column: 15, scope: !11678)
!11696 = !DILocation(line: 190, column: 33, scope: !11692)
!11697 = !DILocation(line: 190, column: 31, scope: !11692)
!11698 = !DILocation(line: 190, column: 13, scope: !11692)
!11699 = !DILocation(line: 191, column: 9, scope: !11678)
!11700 = !DILocation(line: 192, column: 5, scope: !11672)
!11701 = !DILocation(line: 179, column: 68, scope: !11664)
!11702 = !DILocation(line: 179, column: 3, scope: !11664)
!11703 = distinct !{!11703, !11669, !11704}
!11704 = !DILocation(line: 192, column: 5, scope: !11658)
!11705 = !DILocation(line: 194, column: 10, scope: !11650)
!11706 = !DILocation(line: 194, column: 3, scope: !11650)
!11707 = distinct !DISubprogram(name: "hash_table_ok", scope: !758, file: !758, line: 201, type: !794, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11708 = !DILocalVariable(name: "table", arg: 1, scope: !11707, file: !758, line: 201, type: !754)
!11709 = !DILocation(line: 201, column: 34, scope: !11707)
!11710 = !DILocalVariable(name: "bucket", scope: !11707, file: !758, line: 203, type: !767)
!11711 = !DILocation(line: 203, column: 28, scope: !11707)
!11712 = !DILocalVariable(name: "n_buckets_used", scope: !11707, file: !758, line: 204, type: !55)
!11713 = !DILocation(line: 204, column: 10, scope: !11707)
!11714 = !DILocalVariable(name: "n_entries", scope: !11707, file: !758, line: 205, type: !55)
!11715 = !DILocation(line: 205, column: 10, scope: !11707)
!11716 = !DILocation(line: 207, column: 17, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11707, file: !758, line: 207, column: 3)
!11718 = !DILocation(line: 207, column: 24, scope: !11717)
!11719 = !DILocation(line: 207, column: 15, scope: !11717)
!11720 = !DILocation(line: 207, column: 8, scope: !11717)
!11721 = !DILocation(line: 207, column: 32, scope: !11722)
!11722 = distinct !DILexicalBlock(scope: !11717, file: !758, line: 207, column: 3)
!11723 = !DILocation(line: 207, column: 41, scope: !11722)
!11724 = !DILocation(line: 207, column: 48, scope: !11722)
!11725 = !DILocation(line: 207, column: 39, scope: !11722)
!11726 = !DILocation(line: 207, column: 3, scope: !11717)
!11727 = !DILocation(line: 209, column: 11, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11729, file: !758, line: 209, column: 11)
!11729 = distinct !DILexicalBlock(scope: !11722, file: !758, line: 208, column: 5)
!11730 = !DILocation(line: 209, column: 19, scope: !11728)
!11731 = !DILocation(line: 209, column: 11, scope: !11729)
!11732 = !DILocalVariable(name: "cursor", scope: !11733, file: !758, line: 211, type: !767)
!11733 = distinct !DILexicalBlock(scope: !11728, file: !758, line: 210, column: 9)
!11734 = !DILocation(line: 211, column: 36, scope: !11733)
!11735 = !DILocation(line: 211, column: 45, scope: !11733)
!11736 = !DILocation(line: 214, column: 25, scope: !11733)
!11737 = !DILocation(line: 215, column: 20, scope: !11733)
!11738 = !DILocation(line: 218, column: 11, scope: !11733)
!11739 = !DILocation(line: 218, column: 27, scope: !11733)
!11740 = !DILocation(line: 218, column: 35, scope: !11733)
!11741 = !DILocation(line: 218, column: 25, scope: !11733)
!11742 = !DILocation(line: 218, column: 41, scope: !11733)
!11743 = !DILocation(line: 219, column: 22, scope: !11733)
!11744 = distinct !{!11744, !11738, !11743}
!11745 = !DILocation(line: 220, column: 9, scope: !11733)
!11746 = !DILocation(line: 221, column: 5, scope: !11729)
!11747 = !DILocation(line: 207, column: 68, scope: !11722)
!11748 = !DILocation(line: 207, column: 3, scope: !11722)
!11749 = distinct !{!11749, !11726, !11750}
!11750 = !DILocation(line: 221, column: 5, scope: !11717)
!11751 = !DILocation(line: 223, column: 7, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11707, file: !758, line: 223, column: 7)
!11753 = !DILocation(line: 223, column: 25, scope: !11752)
!11754 = !DILocation(line: 223, column: 32, scope: !11752)
!11755 = !DILocation(line: 223, column: 22, scope: !11752)
!11756 = !DILocation(line: 223, column: 47, scope: !11752)
!11757 = !DILocation(line: 223, column: 50, scope: !11752)
!11758 = !DILocation(line: 223, column: 63, scope: !11752)
!11759 = !DILocation(line: 223, column: 70, scope: !11752)
!11760 = !DILocation(line: 223, column: 60, scope: !11752)
!11761 = !DILocation(line: 223, column: 7, scope: !11707)
!11762 = !DILocation(line: 224, column: 5, scope: !11752)
!11763 = !DILocation(line: 226, column: 3, scope: !11707)
!11764 = !DILocation(line: 227, column: 1, scope: !11707)
!11765 = distinct !DISubprogram(name: "hash_print_statistics", scope: !758, file: !758, line: 230, type: !796, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11766 = !DILocalVariable(name: "table", arg: 1, scope: !11765, file: !758, line: 230, type: !754)
!11767 = !DILocation(line: 230, column: 42, scope: !11765)
!11768 = !DILocalVariable(name: "stream", arg: 2, scope: !11765, file: !758, line: 230, type: !798)
!11769 = !DILocation(line: 230, column: 55, scope: !11765)
!11770 = !DILocalVariable(name: "n_entries", scope: !11765, file: !758, line: 232, type: !55)
!11771 = !DILocation(line: 232, column: 10, scope: !11765)
!11772 = !DILocation(line: 232, column: 42, scope: !11765)
!11773 = !DILocation(line: 232, column: 22, scope: !11765)
!11774 = !DILocalVariable(name: "n_buckets", scope: !11765, file: !758, line: 233, type: !55)
!11775 = !DILocation(line: 233, column: 10, scope: !11765)
!11776 = !DILocation(line: 233, column: 42, scope: !11765)
!11777 = !DILocation(line: 233, column: 22, scope: !11765)
!11778 = !DILocalVariable(name: "n_buckets_used", scope: !11765, file: !758, line: 234, type: !55)
!11779 = !DILocation(line: 234, column: 10, scope: !11765)
!11780 = !DILocation(line: 234, column: 52, scope: !11765)
!11781 = !DILocation(line: 234, column: 27, scope: !11765)
!11782 = !DILocalVariable(name: "max_bucket_length", scope: !11765, file: !758, line: 235, type: !55)
!11783 = !DILocation(line: 235, column: 10, scope: !11765)
!11784 = !DILocation(line: 235, column: 58, scope: !11765)
!11785 = !DILocation(line: 235, column: 30, scope: !11765)
!11786 = !DILocation(line: 237, column: 12, scope: !11765)
!11787 = !DILocation(line: 237, column: 68, scope: !11765)
!11788 = !DILocation(line: 237, column: 3, scope: !11765)
!11789 = !DILocation(line: 238, column: 12, scope: !11765)
!11790 = !DILocation(line: 238, column: 68, scope: !11765)
!11791 = !DILocation(line: 238, column: 3, scope: !11765)
!11792 = !DILocation(line: 239, column: 12, scope: !11765)
!11793 = !DILocation(line: 240, column: 32, scope: !11765)
!11794 = !DILocation(line: 241, column: 21, scope: !11765)
!11795 = !DILocation(line: 241, column: 19, scope: !11765)
!11796 = !DILocation(line: 241, column: 39, scope: !11765)
!11797 = !DILocation(line: 241, column: 37, scope: !11765)
!11798 = !DILocation(line: 239, column: 3, scope: !11765)
!11799 = !DILocation(line: 242, column: 12, scope: !11765)
!11800 = !DILocation(line: 243, column: 32, scope: !11765)
!11801 = !DILocation(line: 242, column: 3, scope: !11765)
!11802 = !DILocation(line: 244, column: 1, scope: !11765)
!11803 = distinct !DISubprogram(name: "hash_lookup", scope: !758, file: !758, line: 261, type: !832, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11804 = !DILocalVariable(name: "table", arg: 1, scope: !11803, file: !758, line: 261, type: !754)
!11805 = !DILocation(line: 261, column: 32, scope: !11803)
!11806 = !DILocalVariable(name: "entry", arg: 2, scope: !11803, file: !758, line: 261, type: !427)
!11807 = !DILocation(line: 261, column: 51, scope: !11803)
!11808 = !DILocalVariable(name: "bucket", scope: !11803, file: !758, line: 263, type: !767)
!11809 = !DILocation(line: 263, column: 28, scope: !11803)
!11810 = !DILocation(line: 263, column: 50, scope: !11803)
!11811 = !DILocation(line: 263, column: 57, scope: !11803)
!11812 = !DILocation(line: 263, column: 37, scope: !11803)
!11813 = !DILocalVariable(name: "cursor", scope: !11803, file: !758, line: 264, type: !767)
!11814 = !DILocation(line: 264, column: 28, scope: !11803)
!11815 = !DILocation(line: 266, column: 7, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11803, file: !758, line: 266, column: 7)
!11817 = !DILocation(line: 266, column: 15, scope: !11816)
!11818 = !DILocation(line: 266, column: 20, scope: !11816)
!11819 = !DILocation(line: 266, column: 7, scope: !11803)
!11820 = !DILocation(line: 267, column: 5, scope: !11816)
!11821 = !DILocation(line: 269, column: 17, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11803, file: !758, line: 269, column: 3)
!11823 = !DILocation(line: 269, column: 15, scope: !11822)
!11824 = !DILocation(line: 269, column: 8, scope: !11822)
!11825 = !DILocation(line: 269, column: 25, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11822, file: !758, line: 269, column: 3)
!11827 = !DILocation(line: 269, column: 3, scope: !11822)
!11828 = !DILocation(line: 270, column: 9, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11826, file: !758, line: 270, column: 9)
!11830 = !DILocation(line: 270, column: 18, scope: !11829)
!11831 = !DILocation(line: 270, column: 26, scope: !11829)
!11832 = !DILocation(line: 270, column: 15, scope: !11829)
!11833 = !DILocation(line: 270, column: 31, scope: !11829)
!11834 = !DILocation(line: 270, column: 34, scope: !11829)
!11835 = !DILocation(line: 270, column: 41, scope: !11829)
!11836 = !{!11634, !2999, i64 56}
!11837 = !DILocation(line: 270, column: 53, scope: !11829)
!11838 = !DILocation(line: 270, column: 60, scope: !11829)
!11839 = !DILocation(line: 270, column: 68, scope: !11829)
!11840 = !DILocation(line: 270, column: 9, scope: !11826)
!11841 = !DILocation(line: 271, column: 14, scope: !11829)
!11842 = !DILocation(line: 271, column: 22, scope: !11829)
!11843 = !DILocation(line: 271, column: 7, scope: !11829)
!11844 = !DILocation(line: 270, column: 72, scope: !11829)
!11845 = !DILocation(line: 269, column: 42, scope: !11826)
!11846 = !DILocation(line: 269, column: 50, scope: !11826)
!11847 = !DILocation(line: 269, column: 40, scope: !11826)
!11848 = !DILocation(line: 269, column: 3, scope: !11826)
!11849 = distinct !{!11849, !11827, !11850}
!11850 = !DILocation(line: 271, column: 22, scope: !11822)
!11851 = !DILocation(line: 273, column: 3, scope: !11803)
!11852 = !DILocation(line: 274, column: 1, scope: !11803)
!11853 = distinct !DISubprogram(name: "safe_hasher", scope: !758, file: !758, line: 249, type: !862, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11854 = !DILocalVariable(name: "table", arg: 1, scope: !11853, file: !758, line: 249, type: !754)
!11855 = !DILocation(line: 249, column: 32, scope: !11853)
!11856 = !DILocalVariable(name: "key", arg: 2, scope: !11853, file: !758, line: 249, type: !427)
!11857 = !DILocation(line: 249, column: 51, scope: !11853)
!11858 = !DILocalVariable(name: "n", scope: !11853, file: !758, line: 251, type: !55)
!11859 = !DILocation(line: 251, column: 10, scope: !11853)
!11860 = !DILocation(line: 251, column: 14, scope: !11853)
!11861 = !DILocation(line: 251, column: 21, scope: !11853)
!11862 = !{!11634, !2999, i64 48}
!11863 = !DILocation(line: 251, column: 29, scope: !11853)
!11864 = !DILocation(line: 251, column: 34, scope: !11853)
!11865 = !DILocation(line: 251, column: 41, scope: !11853)
!11866 = !DILocation(line: 252, column: 10, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11853, file: !758, line: 252, column: 7)
!11868 = !DILocation(line: 252, column: 14, scope: !11867)
!11869 = !DILocation(line: 252, column: 21, scope: !11867)
!11870 = !DILocation(line: 252, column: 12, scope: !11867)
!11871 = !DILocation(line: 252, column: 7, scope: !11853)
!11872 = !DILocation(line: 253, column: 5, scope: !11867)
!11873 = !DILocation(line: 254, column: 10, scope: !11853)
!11874 = !DILocation(line: 254, column: 17, scope: !11853)
!11875 = !DILocation(line: 254, column: 26, scope: !11853)
!11876 = !DILocation(line: 254, column: 24, scope: !11853)
!11877 = !DILocation(line: 254, column: 3, scope: !11853)
!11878 = distinct !DISubprogram(name: "hash_get_first", scope: !758, file: !758, line: 288, type: !834, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11879 = !DILocalVariable(name: "table", arg: 1, scope: !11878, file: !758, line: 288, type: !754)
!11880 = !DILocation(line: 288, column: 35, scope: !11878)
!11881 = !DILocalVariable(name: "bucket", scope: !11878, file: !758, line: 290, type: !767)
!11882 = !DILocation(line: 290, column: 28, scope: !11878)
!11883 = !DILocation(line: 292, column: 7, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11878, file: !758, line: 292, column: 7)
!11885 = !DILocation(line: 292, column: 14, scope: !11884)
!11886 = !DILocation(line: 292, column: 24, scope: !11884)
!11887 = !DILocation(line: 292, column: 7, scope: !11878)
!11888 = !DILocation(line: 293, column: 5, scope: !11884)
!11889 = !DILocation(line: 295, column: 17, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11878, file: !758, line: 295, column: 3)
!11891 = !DILocation(line: 295, column: 24, scope: !11890)
!11892 = !DILocation(line: 295, column: 15, scope: !11890)
!11893 = !DILocation(line: 295, column: 8, scope: !11890)
!11894 = !DILocation(line: 296, column: 12, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11896, file: !758, line: 296, column: 9)
!11896 = distinct !DILexicalBlock(scope: !11890, file: !758, line: 295, column: 3)
!11897 = !DILocation(line: 296, column: 21, scope: !11895)
!11898 = !DILocation(line: 296, column: 28, scope: !11895)
!11899 = !DILocation(line: 296, column: 19, scope: !11895)
!11900 = !DILocation(line: 296, column: 9, scope: !11896)
!11901 = !DILocation(line: 297, column: 7, scope: !11895)
!11902 = !DILocation(line: 298, column: 14, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11895, file: !758, line: 298, column: 14)
!11904 = !DILocation(line: 298, column: 22, scope: !11903)
!11905 = !DILocation(line: 298, column: 14, scope: !11895)
!11906 = !DILocation(line: 299, column: 14, scope: !11903)
!11907 = !DILocation(line: 299, column: 22, scope: !11903)
!11908 = !DILocation(line: 299, column: 7, scope: !11903)
!11909 = !DILocation(line: 296, column: 40, scope: !11895)
!11910 = !DILocation(line: 295, column: 40, scope: !11896)
!11911 = !DILocation(line: 295, column: 3, scope: !11896)
!11912 = distinct !{!11912, !11913, !11914}
!11913 = !DILocation(line: 295, column: 3, scope: !11890)
!11914 = !DILocation(line: 299, column: 22, scope: !11890)
!11915 = !DILocation(line: 300, column: 1, scope: !11878)
!11916 = distinct !DISubprogram(name: "hash_get_next", scope: !758, file: !758, line: 307, type: !832, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11917 = !DILocalVariable(name: "table", arg: 1, scope: !11916, file: !758, line: 307, type: !754)
!11918 = !DILocation(line: 307, column: 34, scope: !11916)
!11919 = !DILocalVariable(name: "entry", arg: 2, scope: !11916, file: !758, line: 307, type: !427)
!11920 = !DILocation(line: 307, column: 53, scope: !11916)
!11921 = !DILocalVariable(name: "bucket", scope: !11916, file: !758, line: 309, type: !767)
!11922 = !DILocation(line: 309, column: 28, scope: !11916)
!11923 = !DILocation(line: 309, column: 50, scope: !11916)
!11924 = !DILocation(line: 309, column: 57, scope: !11916)
!11925 = !DILocation(line: 309, column: 37, scope: !11916)
!11926 = !DILocalVariable(name: "cursor", scope: !11916, file: !758, line: 310, type: !767)
!11927 = !DILocation(line: 310, column: 28, scope: !11916)
!11928 = !DILocation(line: 313, column: 12, scope: !11916)
!11929 = !DILocation(line: 313, column: 10, scope: !11916)
!11930 = !DILocation(line: 314, column: 3, scope: !11916)
!11931 = !DILocation(line: 316, column: 11, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11933, file: !758, line: 316, column: 11)
!11933 = distinct !DILexicalBlock(scope: !11916, file: !758, line: 315, column: 5)
!11934 = !DILocation(line: 316, column: 19, scope: !11932)
!11935 = !DILocation(line: 316, column: 27, scope: !11932)
!11936 = !DILocation(line: 316, column: 24, scope: !11932)
!11937 = !DILocation(line: 316, column: 33, scope: !11932)
!11938 = !DILocation(line: 316, column: 36, scope: !11932)
!11939 = !DILocation(line: 316, column: 44, scope: !11932)
!11940 = !DILocation(line: 316, column: 11, scope: !11933)
!11941 = !DILocation(line: 317, column: 16, scope: !11932)
!11942 = !DILocation(line: 317, column: 24, scope: !11932)
!11943 = !DILocation(line: 317, column: 30, scope: !11932)
!11944 = !DILocation(line: 317, column: 9, scope: !11932)
!11945 = !DILocation(line: 318, column: 16, scope: !11933)
!11946 = !DILocation(line: 318, column: 24, scope: !11933)
!11947 = !DILocation(line: 318, column: 14, scope: !11933)
!11948 = !DILocation(line: 319, column: 5, scope: !11933)
!11949 = !DILocation(line: 320, column: 10, scope: !11916)
!11950 = !DILocation(line: 320, column: 17, scope: !11916)
!11951 = distinct !{!11951, !11930, !11952}
!11952 = !DILocation(line: 320, column: 24, scope: !11916)
!11953 = !DILocation(line: 323, column: 3, scope: !11916)
!11954 = !DILocation(line: 323, column: 10, scope: !11916)
!11955 = !DILocation(line: 323, column: 21, scope: !11916)
!11956 = !DILocation(line: 323, column: 28, scope: !11916)
!11957 = !DILocation(line: 323, column: 19, scope: !11916)
!11958 = !DILocation(line: 324, column: 9, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11916, file: !758, line: 324, column: 9)
!11960 = !DILocation(line: 324, column: 17, scope: !11959)
!11961 = !DILocation(line: 324, column: 9, scope: !11916)
!11962 = !DILocation(line: 325, column: 14, scope: !11959)
!11963 = !DILocation(line: 325, column: 22, scope: !11959)
!11964 = !DILocation(line: 325, column: 7, scope: !11959)
!11965 = distinct !{!11965, !11953, !11966}
!11966 = !DILocation(line: 325, column: 22, scope: !11916)
!11967 = !DILocation(line: 328, column: 3, scope: !11916)
!11968 = !DILocation(line: 329, column: 1, scope: !11916)
!11969 = distinct !DISubprogram(name: "hash_get_entries", scope: !758, file: !758, line: 336, type: !836, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!11970 = !DILocalVariable(name: "table", arg: 1, scope: !11969, file: !758, line: 336, type: !754)
!11971 = !DILocation(line: 336, column: 37, scope: !11969)
!11972 = !DILocalVariable(name: "buffer", arg: 2, scope: !11969, file: !758, line: 336, type: !838)
!11973 = !DILocation(line: 336, column: 51, scope: !11969)
!11974 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11969, file: !758, line: 337, type: !55)
!11975 = !DILocation(line: 337, column: 26, scope: !11969)
!11976 = !DILocalVariable(name: "counter", scope: !11969, file: !758, line: 339, type: !55)
!11977 = !DILocation(line: 339, column: 10, scope: !11969)
!11978 = !DILocalVariable(name: "bucket", scope: !11969, file: !758, line: 340, type: !767)
!11979 = !DILocation(line: 340, column: 28, scope: !11969)
!11980 = !DILocalVariable(name: "cursor", scope: !11969, file: !758, line: 341, type: !767)
!11981 = !DILocation(line: 341, column: 28, scope: !11969)
!11982 = !DILocation(line: 343, column: 17, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11969, file: !758, line: 343, column: 3)
!11984 = !DILocation(line: 343, column: 24, scope: !11983)
!11985 = !DILocation(line: 343, column: 15, scope: !11983)
!11986 = !DILocation(line: 343, column: 8, scope: !11983)
!11987 = !DILocation(line: 343, column: 32, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11983, file: !758, line: 343, column: 3)
!11989 = !DILocation(line: 343, column: 41, scope: !11988)
!11990 = !DILocation(line: 343, column: 48, scope: !11988)
!11991 = !DILocation(line: 343, column: 39, scope: !11988)
!11992 = !DILocation(line: 343, column: 3, scope: !11983)
!11993 = !DILocation(line: 345, column: 11, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !758, line: 345, column: 11)
!11995 = distinct !DILexicalBlock(scope: !11988, file: !758, line: 344, column: 5)
!11996 = !DILocation(line: 345, column: 19, scope: !11994)
!11997 = !DILocation(line: 345, column: 11, scope: !11995)
!11998 = !DILocation(line: 347, column: 25, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !758, line: 347, column: 11)
!12000 = distinct !DILexicalBlock(scope: !11994, file: !758, line: 346, column: 9)
!12001 = !DILocation(line: 347, column: 23, scope: !11999)
!12002 = !DILocation(line: 347, column: 16, scope: !11999)
!12003 = !DILocation(line: 347, column: 33, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11999, file: !758, line: 347, column: 11)
!12005 = !DILocation(line: 347, column: 11, scope: !11999)
!12006 = !DILocation(line: 349, column: 19, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !758, line: 349, column: 19)
!12008 = distinct !DILexicalBlock(scope: !12004, file: !758, line: 348, column: 13)
!12009 = !DILocation(line: 349, column: 30, scope: !12007)
!12010 = !DILocation(line: 349, column: 27, scope: !12007)
!12011 = !DILocation(line: 349, column: 19, scope: !12008)
!12012 = !DILocation(line: 350, column: 24, scope: !12007)
!12013 = !DILocation(line: 350, column: 17, scope: !12007)
!12014 = !DILocation(line: 351, column: 35, scope: !12008)
!12015 = !DILocation(line: 351, column: 43, scope: !12008)
!12016 = !DILocation(line: 351, column: 15, scope: !12008)
!12017 = !DILocation(line: 351, column: 29, scope: !12008)
!12018 = !DILocation(line: 351, column: 33, scope: !12008)
!12019 = !DILocation(line: 352, column: 13, scope: !12008)
!12020 = !DILocation(line: 347, column: 50, scope: !12004)
!12021 = !DILocation(line: 347, column: 58, scope: !12004)
!12022 = !DILocation(line: 347, column: 48, scope: !12004)
!12023 = !DILocation(line: 347, column: 11, scope: !12004)
!12024 = distinct !{!12024, !12005, !12025}
!12025 = !DILocation(line: 352, column: 13, scope: !11999)
!12026 = !DILocation(line: 353, column: 9, scope: !12000)
!12027 = !DILocation(line: 354, column: 5, scope: !11995)
!12028 = !DILocation(line: 343, column: 68, scope: !11988)
!12029 = !DILocation(line: 343, column: 3, scope: !11988)
!12030 = distinct !{!12030, !11992, !12031}
!12031 = !DILocation(line: 354, column: 5, scope: !11983)
!12032 = !DILocation(line: 356, column: 10, scope: !11969)
!12033 = !DILocation(line: 356, column: 3, scope: !11969)
!12034 = !DILocation(line: 357, column: 1, scope: !11969)
!12035 = distinct !DISubprogram(name: "hash_do_for_each", scope: !758, file: !758, line: 368, type: !839, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12036 = !DILocalVariable(name: "table", arg: 1, scope: !12035, file: !758, line: 368, type: !754)
!12037 = !DILocation(line: 368, column: 37, scope: !12035)
!12038 = !DILocalVariable(name: "processor", arg: 2, scope: !12035, file: !758, line: 368, type: !841)
!12039 = !DILocation(line: 368, column: 59, scope: !12035)
!12040 = !DILocalVariable(name: "processor_data", arg: 3, scope: !12035, file: !758, line: 369, type: !53)
!12041 = !DILocation(line: 369, column: 25, scope: !12035)
!12042 = !DILocalVariable(name: "counter", scope: !12035, file: !758, line: 371, type: !55)
!12043 = !DILocation(line: 371, column: 10, scope: !12035)
!12044 = !DILocalVariable(name: "bucket", scope: !12035, file: !758, line: 372, type: !767)
!12045 = !DILocation(line: 372, column: 28, scope: !12035)
!12046 = !DILocalVariable(name: "cursor", scope: !12035, file: !758, line: 373, type: !767)
!12047 = !DILocation(line: 373, column: 28, scope: !12035)
!12048 = !DILocation(line: 375, column: 17, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12035, file: !758, line: 375, column: 3)
!12050 = !DILocation(line: 375, column: 24, scope: !12049)
!12051 = !DILocation(line: 375, column: 15, scope: !12049)
!12052 = !DILocation(line: 375, column: 8, scope: !12049)
!12053 = !DILocation(line: 375, column: 32, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12049, file: !758, line: 375, column: 3)
!12055 = !DILocation(line: 375, column: 41, scope: !12054)
!12056 = !DILocation(line: 375, column: 48, scope: !12054)
!12057 = !DILocation(line: 375, column: 39, scope: !12054)
!12058 = !DILocation(line: 375, column: 3, scope: !12049)
!12059 = !DILocation(line: 377, column: 11, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12061, file: !758, line: 377, column: 11)
!12061 = distinct !DILexicalBlock(scope: !12054, file: !758, line: 376, column: 5)
!12062 = !DILocation(line: 377, column: 19, scope: !12060)
!12063 = !DILocation(line: 377, column: 11, scope: !12061)
!12064 = !DILocation(line: 379, column: 25, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12066, file: !758, line: 379, column: 11)
!12066 = distinct !DILexicalBlock(scope: !12060, file: !758, line: 378, column: 9)
!12067 = !DILocation(line: 379, column: 23, scope: !12065)
!12068 = !DILocation(line: 379, column: 16, scope: !12065)
!12069 = !DILocation(line: 379, column: 33, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12065, file: !758, line: 379, column: 11)
!12071 = !DILocation(line: 379, column: 11, scope: !12065)
!12072 = !DILocation(line: 381, column: 21, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12074, file: !758, line: 381, column: 19)
!12074 = distinct !DILexicalBlock(scope: !12070, file: !758, line: 380, column: 13)
!12075 = !DILocation(line: 381, column: 32, scope: !12073)
!12076 = !DILocation(line: 381, column: 40, scope: !12073)
!12077 = !DILocation(line: 381, column: 46, scope: !12073)
!12078 = !DILocation(line: 381, column: 19, scope: !12074)
!12079 = !DILocation(line: 382, column: 24, scope: !12073)
!12080 = !DILocation(line: 382, column: 17, scope: !12073)
!12081 = !DILocation(line: 383, column: 22, scope: !12074)
!12082 = !DILocation(line: 384, column: 13, scope: !12074)
!12083 = !DILocation(line: 379, column: 50, scope: !12070)
!12084 = !DILocation(line: 379, column: 58, scope: !12070)
!12085 = !DILocation(line: 379, column: 48, scope: !12070)
!12086 = !DILocation(line: 379, column: 11, scope: !12070)
!12087 = distinct !{!12087, !12071, !12088}
!12088 = !DILocation(line: 384, column: 13, scope: !12065)
!12089 = !DILocation(line: 385, column: 9, scope: !12066)
!12090 = !DILocation(line: 386, column: 5, scope: !12061)
!12091 = !DILocation(line: 375, column: 68, scope: !12054)
!12092 = !DILocation(line: 375, column: 3, scope: !12054)
!12093 = distinct !{!12093, !12058, !12094}
!12094 = !DILocation(line: 386, column: 5, scope: !12049)
!12095 = !DILocation(line: 388, column: 10, scope: !12035)
!12096 = !DILocation(line: 388, column: 3, scope: !12035)
!12097 = !DILocation(line: 389, column: 1, scope: !12035)
!12098 = distinct !DISubprogram(name: "hash_string", scope: !758, file: !758, line: 428, type: !845, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12099 = !DILocalVariable(name: "string", arg: 1, scope: !12098, file: !758, line: 428, type: !115)
!12100 = !DILocation(line: 428, column: 26, scope: !12098)
!12101 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !12098, file: !758, line: 428, type: !55)
!12102 = !DILocation(line: 428, column: 41, scope: !12098)
!12103 = !DILocalVariable(name: "value", scope: !12098, file: !758, line: 430, type: !55)
!12104 = !DILocation(line: 430, column: 10, scope: !12098)
!12105 = !DILocalVariable(name: "ch", scope: !12098, file: !758, line: 431, type: !468)
!12106 = !DILocation(line: 431, column: 17, scope: !12098)
!12107 = !DILocation(line: 433, column: 3, scope: !12098)
!12108 = !DILocation(line: 433, column: 17, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12110, file: !758, line: 433, column: 3)
!12110 = distinct !DILexicalBlock(scope: !12098, file: !758, line: 433, column: 3)
!12111 = !DILocation(line: 433, column: 16, scope: !12109)
!12112 = !DILocation(line: 433, column: 14, scope: !12109)
!12113 = !DILocation(line: 433, column: 3, scope: !12110)
!12114 = !DILocation(line: 434, column: 14, scope: !12109)
!12115 = !DILocation(line: 434, column: 20, scope: !12109)
!12116 = !DILocation(line: 434, column: 27, scope: !12109)
!12117 = !DILocation(line: 434, column: 25, scope: !12109)
!12118 = !DILocation(line: 434, column: 33, scope: !12109)
!12119 = !DILocation(line: 434, column: 31, scope: !12109)
!12120 = !DILocation(line: 434, column: 11, scope: !12109)
!12121 = !DILocation(line: 434, column: 5, scope: !12109)
!12122 = !DILocation(line: 433, column: 32, scope: !12109)
!12123 = !DILocation(line: 433, column: 3, scope: !12109)
!12124 = distinct !{!12124, !12113, !12125}
!12125 = !DILocation(line: 434, column: 33, scope: !12110)
!12126 = !DILocation(line: 435, column: 10, scope: !12098)
!12127 = !DILocation(line: 435, column: 3, scope: !12098)
!12128 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !758, file: !758, line: 479, type: !847, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12129 = !DILocalVariable(name: "tuning", arg: 1, scope: !12128, file: !758, line: 479, type: !849)
!12130 = !DILocation(line: 479, column: 33, scope: !12128)
!12131 = !DILocation(line: 481, column: 4, scope: !12128)
!12132 = !DILocation(line: 481, column: 13, scope: !12128)
!12133 = !{i64 0, i64 4, !12134, i64 4, i64 4, !12134, i64 8, i64 4, !12134, i64 12, i64 4, !12134, i64 16, i64 1, !3109}
!12134 = !{!12135, !12135, i64 0}
!12135 = !{!"float", !2987, i64 0}
!12136 = !DILocation(line: 482, column: 1, scope: !12128)
!12137 = distinct !DISubprogram(name: "hash_initialize", scope: !758, file: !758, line: 594, type: !850, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12138 = !DILocalVariable(name: "candidate", arg: 1, scope: !12137, file: !758, line: 594, type: !55)
!12139 = !DILocation(line: 594, column: 25, scope: !12137)
!12140 = !DILocalVariable(name: "tuning", arg: 2, scope: !12137, file: !758, line: 594, type: !773)
!12141 = !DILocation(line: 594, column: 55, scope: !12137)
!12142 = !DILocalVariable(name: "hasher", arg: 3, scope: !12137, file: !758, line: 595, type: !785)
!12143 = !DILocation(line: 595, column: 30, scope: !12137)
!12144 = !DILocalVariable(name: "comparator", arg: 4, scope: !12137, file: !758, line: 595, type: !788)
!12145 = !DILocation(line: 595, column: 54, scope: !12137)
!12146 = !DILocalVariable(name: "data_freer", arg: 5, scope: !12137, file: !758, line: 596, type: !791)
!12147 = !DILocation(line: 596, column: 34, scope: !12137)
!12148 = !DILocalVariable(name: "table", scope: !12137, file: !758, line: 598, type: !852)
!12149 = !DILocation(line: 598, column: 15, scope: !12137)
!12150 = !DILocation(line: 600, column: 7, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12137, file: !758, line: 600, column: 7)
!12152 = !DILocation(line: 600, column: 14, scope: !12151)
!12153 = !DILocation(line: 600, column: 7, scope: !12137)
!12154 = !DILocation(line: 601, column: 12, scope: !12151)
!12155 = !DILocation(line: 601, column: 5, scope: !12151)
!12156 = !DILocation(line: 602, column: 7, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12137, file: !758, line: 602, column: 7)
!12158 = !DILocation(line: 602, column: 18, scope: !12157)
!12159 = !DILocation(line: 602, column: 7, scope: !12137)
!12160 = !DILocation(line: 603, column: 16, scope: !12157)
!12161 = !DILocation(line: 603, column: 5, scope: !12157)
!12162 = !DILocation(line: 605, column: 11, scope: !12137)
!12163 = !DILocation(line: 605, column: 9, scope: !12137)
!12164 = !DILocation(line: 606, column: 7, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12137, file: !758, line: 606, column: 7)
!12166 = !DILocation(line: 606, column: 13, scope: !12165)
!12167 = !DILocation(line: 606, column: 7, scope: !12137)
!12168 = !DILocation(line: 607, column: 5, scope: !12165)
!12169 = !DILocation(line: 609, column: 8, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12137, file: !758, line: 609, column: 7)
!12171 = !DILocation(line: 609, column: 7, scope: !12137)
!12172 = !DILocation(line: 610, column: 12, scope: !12170)
!12173 = !DILocation(line: 610, column: 5, scope: !12170)
!12174 = !DILocation(line: 611, column: 19, scope: !12137)
!12175 = !DILocation(line: 611, column: 3, scope: !12137)
!12176 = !DILocation(line: 611, column: 10, scope: !12137)
!12177 = !DILocation(line: 611, column: 17, scope: !12137)
!12178 = !{!11634, !2999, i64 40}
!12179 = !DILocation(line: 612, column: 22, scope: !12180)
!12180 = distinct !DILexicalBlock(scope: !12137, file: !758, line: 612, column: 7)
!12181 = !DILocation(line: 612, column: 8, scope: !12180)
!12182 = !DILocation(line: 612, column: 7, scope: !12137)
!12183 = !DILocation(line: 619, column: 7, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12180, file: !758, line: 613, column: 5)
!12185 = !DILocation(line: 622, column: 43, scope: !12137)
!12186 = !DILocation(line: 622, column: 54, scope: !12137)
!12187 = !DILocation(line: 622, column: 22, scope: !12137)
!12188 = !DILocation(line: 622, column: 3, scope: !12137)
!12189 = !DILocation(line: 622, column: 10, scope: !12137)
!12190 = !DILocation(line: 622, column: 20, scope: !12137)
!12191 = !DILocation(line: 623, column: 8, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12137, file: !758, line: 623, column: 7)
!12193 = !DILocation(line: 623, column: 15, scope: !12192)
!12194 = !DILocation(line: 623, column: 7, scope: !12137)
!12195 = !DILocation(line: 624, column: 5, scope: !12192)
!12196 = !DILocation(line: 626, column: 27, scope: !12137)
!12197 = !DILocation(line: 626, column: 34, scope: !12137)
!12198 = !DILocation(line: 626, column: 19, scope: !12137)
!12199 = !DILocation(line: 626, column: 3, scope: !12137)
!12200 = !DILocation(line: 626, column: 10, scope: !12137)
!12201 = !DILocation(line: 626, column: 17, scope: !12137)
!12202 = !DILocation(line: 627, column: 7, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12137, file: !758, line: 627, column: 7)
!12204 = !DILocation(line: 627, column: 14, scope: !12203)
!12205 = !DILocation(line: 627, column: 21, scope: !12203)
!12206 = !DILocation(line: 627, column: 7, scope: !12137)
!12207 = !DILocation(line: 628, column: 5, scope: !12203)
!12208 = !DILocation(line: 629, column: 25, scope: !12137)
!12209 = !DILocation(line: 629, column: 32, scope: !12137)
!12210 = !DILocation(line: 629, column: 41, scope: !12137)
!12211 = !DILocation(line: 629, column: 48, scope: !12137)
!12212 = !DILocation(line: 629, column: 39, scope: !12137)
!12213 = !DILocation(line: 629, column: 3, scope: !12137)
!12214 = !DILocation(line: 629, column: 10, scope: !12137)
!12215 = !DILocation(line: 629, column: 23, scope: !12137)
!12216 = !DILocation(line: 630, column: 3, scope: !12137)
!12217 = !DILocation(line: 630, column: 10, scope: !12137)
!12218 = !DILocation(line: 630, column: 25, scope: !12137)
!12219 = !DILocation(line: 631, column: 3, scope: !12137)
!12220 = !DILocation(line: 631, column: 10, scope: !12137)
!12221 = !DILocation(line: 631, column: 20, scope: !12137)
!12222 = !DILocation(line: 633, column: 19, scope: !12137)
!12223 = !DILocation(line: 633, column: 3, scope: !12137)
!12224 = !DILocation(line: 633, column: 10, scope: !12137)
!12225 = !DILocation(line: 633, column: 17, scope: !12137)
!12226 = !DILocation(line: 634, column: 23, scope: !12137)
!12227 = !DILocation(line: 634, column: 3, scope: !12137)
!12228 = !DILocation(line: 634, column: 10, scope: !12137)
!12229 = !DILocation(line: 634, column: 21, scope: !12137)
!12230 = !DILocation(line: 635, column: 23, scope: !12137)
!12231 = !DILocation(line: 635, column: 3, scope: !12137)
!12232 = !DILocation(line: 635, column: 10, scope: !12137)
!12233 = !DILocation(line: 635, column: 21, scope: !12137)
!12234 = !{!11634, !2999, i64 64}
!12235 = !DILocation(line: 637, column: 3, scope: !12137)
!12236 = !DILocation(line: 637, column: 10, scope: !12137)
!12237 = !DILocation(line: 637, column: 26, scope: !12137)
!12238 = !{!11634, !2999, i64 72}
!12239 = !DILocation(line: 641, column: 10, scope: !12137)
!12240 = !DILocation(line: 641, column: 3, scope: !12137)
!12241 = !DILabel(scope: !12137, name: "fail", file: !758, line: 643)
!12242 = !DILocation(line: 643, column: 2, scope: !12137)
!12243 = !DILocation(line: 644, column: 9, scope: !12137)
!12244 = !DILocation(line: 644, column: 3, scope: !12137)
!12245 = !DILocation(line: 645, column: 3, scope: !12137)
!12246 = !DILocation(line: 646, column: 1, scope: !12137)
!12247 = distinct !DISubprogram(name: "raw_hasher", scope: !758, file: !758, line: 486, type: !549, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12248 = !DILocalVariable(name: "data", arg: 1, scope: !12247, file: !758, line: 486, type: !427)
!12249 = !DILocation(line: 486, column: 25, scope: !12247)
!12250 = !DILocalVariable(name: "n", arg: 2, scope: !12247, file: !758, line: 486, type: !55)
!12251 = !DILocation(line: 486, column: 38, scope: !12247)
!12252 = !DILocalVariable(name: "val", scope: !12247, file: !758, line: 493, type: !55)
!12253 = !DILocation(line: 493, column: 10, scope: !12247)
!12254 = !DILocation(line: 493, column: 34, scope: !12247)
!12255 = !DILocation(line: 493, column: 25, scope: !12247)
!12256 = !DILocation(line: 493, column: 16, scope: !12247)
!12257 = !DILocation(line: 494, column: 10, scope: !12247)
!12258 = !DILocation(line: 494, column: 16, scope: !12247)
!12259 = !DILocation(line: 494, column: 14, scope: !12247)
!12260 = !DILocation(line: 494, column: 3, scope: !12247)
!12261 = distinct !DISubprogram(name: "raw_comparator", scope: !758, file: !758, line: 499, type: !551, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12262 = !DILocalVariable(name: "a", arg: 1, scope: !12261, file: !758, line: 499, type: !427)
!12263 = !DILocation(line: 499, column: 29, scope: !12261)
!12264 = !DILocalVariable(name: "b", arg: 2, scope: !12261, file: !758, line: 499, type: !427)
!12265 = !DILocation(line: 499, column: 44, scope: !12261)
!12266 = !DILocation(line: 501, column: 10, scope: !12261)
!12267 = !DILocation(line: 501, column: 15, scope: !12261)
!12268 = !DILocation(line: 501, column: 12, scope: !12261)
!12269 = !DILocation(line: 501, column: 3, scope: !12261)
!12270 = distinct !DISubprogram(name: "check_tuning", scope: !758, file: !758, line: 512, type: !864, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12271 = !DILocalVariable(name: "table", arg: 1, scope: !12270, file: !758, line: 512, type: !852)
!12272 = !DILocation(line: 512, column: 27, scope: !12270)
!12273 = !DILocalVariable(name: "tuning", scope: !12270, file: !758, line: 514, type: !773)
!12274 = !DILocation(line: 514, column: 22, scope: !12270)
!12275 = !DILocation(line: 514, column: 31, scope: !12270)
!12276 = !DILocation(line: 514, column: 38, scope: !12270)
!12277 = !DILocalVariable(name: "epsilon", scope: !12270, file: !758, line: 515, type: !779)
!12278 = !DILocation(line: 515, column: 9, scope: !12270)
!12279 = !DILocation(line: 516, column: 7, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12270, file: !758, line: 516, column: 7)
!12281 = !DILocation(line: 516, column: 14, scope: !12280)
!12282 = !DILocation(line: 516, column: 7, scope: !12270)
!12283 = !DILocation(line: 517, column: 5, scope: !12280)
!12284 = !DILocation(line: 524, column: 11, scope: !12270)
!12285 = !DILocation(line: 526, column: 7, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12270, file: !758, line: 526, column: 7)
!12287 = !DILocation(line: 526, column: 17, scope: !12286)
!12288 = !DILocation(line: 526, column: 25, scope: !12286)
!12289 = !{!12290, !12135, i64 8}
!12290 = !{!"hash_tuning", !12135, i64 0, !12135, i64 4, !12135, i64 8, !12135, i64 12, !3110, i64 16}
!12291 = !DILocation(line: 526, column: 15, scope: !12286)
!12292 = !DILocation(line: 527, column: 7, scope: !12286)
!12293 = !DILocation(line: 527, column: 10, scope: !12286)
!12294 = !DILocation(line: 527, column: 18, scope: !12286)
!12295 = !DILocation(line: 527, column: 41, scope: !12286)
!12296 = !DILocation(line: 527, column: 39, scope: !12286)
!12297 = !DILocation(line: 527, column: 35, scope: !12286)
!12298 = !DILocation(line: 528, column: 7, scope: !12286)
!12299 = !DILocation(line: 528, column: 14, scope: !12286)
!12300 = !DILocation(line: 528, column: 12, scope: !12286)
!12301 = !DILocation(line: 528, column: 24, scope: !12286)
!12302 = !DILocation(line: 528, column: 32, scope: !12286)
!12303 = !{!12290, !12135, i64 12}
!12304 = !DILocation(line: 528, column: 22, scope: !12286)
!12305 = !DILocation(line: 529, column: 7, scope: !12286)
!12306 = !DILocation(line: 529, column: 15, scope: !12286)
!12307 = !DILocation(line: 529, column: 23, scope: !12286)
!12308 = !{!12290, !12135, i64 0}
!12309 = !DILocation(line: 529, column: 12, scope: !12286)
!12310 = !DILocation(line: 530, column: 7, scope: !12286)
!12311 = !DILocation(line: 530, column: 10, scope: !12286)
!12312 = !DILocation(line: 530, column: 18, scope: !12286)
!12313 = !DILocation(line: 530, column: 37, scope: !12286)
!12314 = !DILocation(line: 530, column: 35, scope: !12286)
!12315 = !DILocation(line: 530, column: 47, scope: !12286)
!12316 = !DILocation(line: 530, column: 55, scope: !12286)
!12317 = !{!12290, !12135, i64 4}
!12318 = !DILocation(line: 530, column: 45, scope: !12286)
!12319 = !DILocation(line: 531, column: 7, scope: !12286)
!12320 = !DILocation(line: 531, column: 10, scope: !12286)
!12321 = !DILocation(line: 531, column: 18, scope: !12286)
!12322 = !DILocation(line: 531, column: 32, scope: !12286)
!12323 = !DILocation(line: 532, column: 7, scope: !12286)
!12324 = !DILocation(line: 532, column: 10, scope: !12286)
!12325 = !DILocation(line: 532, column: 18, scope: !12286)
!12326 = !DILocation(line: 532, column: 37, scope: !12286)
!12327 = !DILocation(line: 532, column: 35, scope: !12286)
!12328 = !DILocation(line: 532, column: 47, scope: !12286)
!12329 = !DILocation(line: 532, column: 55, scope: !12286)
!12330 = !DILocation(line: 532, column: 45, scope: !12286)
!12331 = !DILocation(line: 526, column: 7, scope: !12270)
!12332 = !DILocation(line: 533, column: 5, scope: !12286)
!12333 = !DILocation(line: 535, column: 3, scope: !12270)
!12334 = !DILocation(line: 535, column: 10, scope: !12270)
!12335 = !DILocation(line: 535, column: 17, scope: !12270)
!12336 = !DILocation(line: 536, column: 3, scope: !12270)
!12337 = !DILocation(line: 537, column: 1, scope: !12270)
!12338 = distinct !DISubprogram(name: "compute_bucket_size", scope: !758, file: !758, line: 544, type: !866, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12339 = !DILocalVariable(name: "candidate", arg: 1, scope: !12338, file: !758, line: 544, type: !55)
!12340 = !DILocation(line: 544, column: 29, scope: !12338)
!12341 = !DILocalVariable(name: "tuning", arg: 2, scope: !12338, file: !758, line: 544, type: !773)
!12342 = !DILocation(line: 544, column: 59, scope: !12338)
!12343 = !DILocation(line: 546, column: 8, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12338, file: !758, line: 546, column: 7)
!12345 = !DILocation(line: 546, column: 16, scope: !12344)
!12346 = !{!12290, !3110, i64 16}
!12347 = !DILocation(line: 546, column: 7, scope: !12338)
!12348 = !DILocalVariable(name: "new_candidate", scope: !12349, file: !758, line: 548, type: !779)
!12349 = distinct !DILexicalBlock(scope: !12344, file: !758, line: 547, column: 5)
!12350 = !DILocation(line: 548, column: 13, scope: !12349)
!12351 = !DILocation(line: 548, column: 29, scope: !12349)
!12352 = !DILocation(line: 548, column: 41, scope: !12349)
!12353 = !DILocation(line: 548, column: 49, scope: !12349)
!12354 = !DILocation(line: 548, column: 39, scope: !12349)
!12355 = !DILocation(line: 549, column: 23, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12349, file: !758, line: 549, column: 11)
!12357 = !DILocation(line: 549, column: 20, scope: !12356)
!12358 = !DILocation(line: 549, column: 11, scope: !12349)
!12359 = !DILocation(line: 550, column: 9, scope: !12356)
!12360 = !DILocation(line: 551, column: 19, scope: !12349)
!12361 = !DILocation(line: 551, column: 17, scope: !12349)
!12362 = !DILocation(line: 552, column: 5, scope: !12349)
!12363 = !DILocation(line: 553, column: 27, scope: !12338)
!12364 = !DILocation(line: 553, column: 15, scope: !12338)
!12365 = !DILocation(line: 553, column: 13, scope: !12338)
!12366 = !DILocation(line: 554, column: 7, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12338, file: !758, line: 554, column: 7)
!12368 = !DILocation(line: 554, column: 7, scope: !12338)
!12369 = !DILocation(line: 555, column: 5, scope: !12367)
!12370 = !DILocation(line: 556, column: 10, scope: !12338)
!12371 = !DILocation(line: 556, column: 3, scope: !12338)
!12372 = !DILocation(line: 557, column: 1, scope: !12338)
!12373 = distinct !DISubprogram(name: "next_prime", scope: !758, file: !758, line: 463, type: !868, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12374 = !DILocalVariable(name: "candidate", arg: 1, scope: !12373, file: !758, line: 463, type: !55)
!12375 = !DILocation(line: 463, column: 20, scope: !12373)
!12376 = !DILocation(line: 466, column: 7, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12373, file: !758, line: 466, column: 7)
!12378 = !DILocation(line: 466, column: 17, scope: !12377)
!12379 = !DILocation(line: 466, column: 7, scope: !12373)
!12380 = !DILocation(line: 467, column: 15, scope: !12377)
!12381 = !DILocation(line: 467, column: 5, scope: !12377)
!12382 = !DILocation(line: 470, column: 13, scope: !12373)
!12383 = !DILocation(line: 472, column: 3, scope: !12373)
!12384 = !DILocation(line: 472, column: 22, scope: !12373)
!12385 = !DILocation(line: 472, column: 19, scope: !12373)
!12386 = !DILocation(line: 472, column: 32, scope: !12373)
!12387 = !DILocation(line: 472, column: 46, scope: !12373)
!12388 = !DILocation(line: 472, column: 36, scope: !12373)
!12389 = !DILocation(line: 472, column: 35, scope: !12373)
!12390 = !DILocation(line: 0, scope: !12373)
!12391 = !DILocation(line: 473, column: 15, scope: !12373)
!12392 = distinct !{!12392, !12383, !12393}
!12393 = !DILocation(line: 473, column: 18, scope: !12373)
!12394 = !DILocation(line: 475, column: 10, scope: !12373)
!12395 = !DILocation(line: 475, column: 3, scope: !12373)
!12396 = distinct !DISubprogram(name: "is_prime", scope: !758, file: !758, line: 444, type: !870, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12397 = !DILocalVariable(name: "candidate", arg: 1, scope: !12396, file: !758, line: 444, type: !55)
!12398 = !DILocation(line: 444, column: 18, scope: !12396)
!12399 = !DILocalVariable(name: "divisor", scope: !12396, file: !758, line: 446, type: !55)
!12400 = !DILocation(line: 446, column: 10, scope: !12396)
!12401 = !DILocalVariable(name: "square", scope: !12396, file: !758, line: 447, type: !55)
!12402 = !DILocation(line: 447, column: 10, scope: !12396)
!12403 = !DILocation(line: 447, column: 19, scope: !12396)
!12404 = !DILocation(line: 447, column: 29, scope: !12396)
!12405 = !DILocation(line: 447, column: 27, scope: !12396)
!12406 = !DILocation(line: 449, column: 3, scope: !12396)
!12407 = !DILocation(line: 449, column: 10, scope: !12396)
!12408 = !DILocation(line: 449, column: 19, scope: !12396)
!12409 = !DILocation(line: 449, column: 17, scope: !12396)
!12410 = !DILocation(line: 449, column: 29, scope: !12396)
!12411 = !DILocation(line: 449, column: 33, scope: !12396)
!12412 = !DILocation(line: 449, column: 45, scope: !12396)
!12413 = !DILocation(line: 449, column: 43, scope: !12396)
!12414 = !DILocation(line: 0, scope: !12396)
!12415 = !DILocation(line: 451, column: 14, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12396, file: !758, line: 450, column: 5)
!12417 = !DILocation(line: 452, column: 21, scope: !12416)
!12418 = !DILocation(line: 452, column: 19, scope: !12416)
!12419 = !DILocation(line: 452, column: 14, scope: !12416)
!12420 = !DILocation(line: 453, column: 14, scope: !12416)
!12421 = distinct !{!12421, !12406, !12422}
!12422 = !DILocation(line: 454, column: 5, scope: !12396)
!12423 = !DILocation(line: 456, column: 11, scope: !12396)
!12424 = !DILocation(line: 456, column: 23, scope: !12396)
!12425 = !DILocation(line: 456, column: 21, scope: !12396)
!12426 = !DILocation(line: 456, column: 10, scope: !12396)
!12427 = !DILocation(line: 456, column: 3, scope: !12396)
!12428 = distinct !DISubprogram(name: "hash_clear", scope: !758, file: !758, line: 653, type: !853, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12429 = !DILocalVariable(name: "table", arg: 1, scope: !12428, file: !758, line: 653, type: !852)
!12430 = !DILocation(line: 653, column: 25, scope: !12428)
!12431 = !DILocalVariable(name: "bucket", scope: !12428, file: !758, line: 655, type: !761)
!12432 = !DILocation(line: 655, column: 22, scope: !12428)
!12433 = !DILocation(line: 657, column: 17, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12428, file: !758, line: 657, column: 3)
!12435 = !DILocation(line: 657, column: 24, scope: !12434)
!12436 = !DILocation(line: 657, column: 15, scope: !12434)
!12437 = !DILocation(line: 657, column: 8, scope: !12434)
!12438 = !DILocation(line: 657, column: 32, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12434, file: !758, line: 657, column: 3)
!12440 = !DILocation(line: 657, column: 41, scope: !12439)
!12441 = !DILocation(line: 657, column: 48, scope: !12439)
!12442 = !DILocation(line: 657, column: 39, scope: !12439)
!12443 = !DILocation(line: 657, column: 3, scope: !12434)
!12444 = !DILocation(line: 659, column: 11, scope: !12445)
!12445 = distinct !DILexicalBlock(scope: !12446, file: !758, line: 659, column: 11)
!12446 = distinct !DILexicalBlock(scope: !12439, file: !758, line: 658, column: 5)
!12447 = !DILocation(line: 659, column: 19, scope: !12445)
!12448 = !DILocation(line: 659, column: 11, scope: !12446)
!12449 = !DILocalVariable(name: "cursor", scope: !12450, file: !758, line: 661, type: !761)
!12450 = distinct !DILexicalBlock(scope: !12445, file: !758, line: 660, column: 9)
!12451 = !DILocation(line: 661, column: 30, scope: !12450)
!12452 = !DILocalVariable(name: "next", scope: !12450, file: !758, line: 662, type: !761)
!12453 = !DILocation(line: 662, column: 30, scope: !12450)
!12454 = !DILocation(line: 665, column: 25, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12450, file: !758, line: 665, column: 11)
!12456 = !DILocation(line: 665, column: 33, scope: !12455)
!12457 = !DILocation(line: 665, column: 23, scope: !12455)
!12458 = !DILocation(line: 665, column: 16, scope: !12455)
!12459 = !DILocation(line: 665, column: 39, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12455, file: !758, line: 665, column: 11)
!12461 = !DILocation(line: 665, column: 11, scope: !12455)
!12462 = !DILocation(line: 667, column: 19, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12464, file: !758, line: 667, column: 19)
!12464 = distinct !DILexicalBlock(scope: !12460, file: !758, line: 666, column: 13)
!12465 = !DILocation(line: 667, column: 26, scope: !12463)
!12466 = !DILocation(line: 667, column: 19, scope: !12464)
!12467 = !DILocation(line: 668, column: 17, scope: !12463)
!12468 = !DILocation(line: 668, column: 24, scope: !12463)
!12469 = !DILocation(line: 668, column: 36, scope: !12463)
!12470 = !DILocation(line: 668, column: 44, scope: !12463)
!12471 = !DILocation(line: 669, column: 15, scope: !12464)
!12472 = !DILocation(line: 669, column: 23, scope: !12464)
!12473 = !DILocation(line: 669, column: 28, scope: !12464)
!12474 = !DILocation(line: 671, column: 22, scope: !12464)
!12475 = !DILocation(line: 671, column: 30, scope: !12464)
!12476 = !DILocation(line: 671, column: 20, scope: !12464)
!12477 = !DILocation(line: 674, column: 30, scope: !12464)
!12478 = !DILocation(line: 674, column: 37, scope: !12464)
!12479 = !DILocation(line: 674, column: 15, scope: !12464)
!12480 = !DILocation(line: 674, column: 23, scope: !12464)
!12481 = !DILocation(line: 674, column: 28, scope: !12464)
!12482 = !DILocation(line: 675, column: 40, scope: !12464)
!12483 = !DILocation(line: 675, column: 15, scope: !12464)
!12484 = !DILocation(line: 675, column: 22, scope: !12464)
!12485 = !DILocation(line: 675, column: 38, scope: !12464)
!12486 = !DILocation(line: 676, column: 13, scope: !12464)
!12487 = !DILocation(line: 665, column: 56, scope: !12460)
!12488 = !DILocation(line: 665, column: 54, scope: !12460)
!12489 = !DILocation(line: 665, column: 11, scope: !12460)
!12490 = distinct !{!12490, !12461, !12491}
!12491 = !DILocation(line: 676, column: 13, scope: !12455)
!12492 = !DILocation(line: 679, column: 15, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12450, file: !758, line: 679, column: 15)
!12494 = !DILocation(line: 679, column: 22, scope: !12493)
!12495 = !DILocation(line: 679, column: 15, scope: !12450)
!12496 = !DILocation(line: 680, column: 13, scope: !12493)
!12497 = !DILocation(line: 680, column: 20, scope: !12493)
!12498 = !DILocation(line: 680, column: 32, scope: !12493)
!12499 = !DILocation(line: 680, column: 40, scope: !12493)
!12500 = !DILocation(line: 681, column: 11, scope: !12450)
!12501 = !DILocation(line: 681, column: 19, scope: !12450)
!12502 = !DILocation(line: 681, column: 24, scope: !12450)
!12503 = !DILocation(line: 682, column: 11, scope: !12450)
!12504 = !DILocation(line: 682, column: 19, scope: !12450)
!12505 = !DILocation(line: 682, column: 24, scope: !12450)
!12506 = !DILocation(line: 683, column: 9, scope: !12450)
!12507 = !DILocation(line: 684, column: 5, scope: !12446)
!12508 = !DILocation(line: 657, column: 68, scope: !12439)
!12509 = !DILocation(line: 657, column: 3, scope: !12439)
!12510 = distinct !{!12510, !12443, !12511}
!12511 = !DILocation(line: 684, column: 5, scope: !12434)
!12512 = !DILocation(line: 686, column: 3, scope: !12428)
!12513 = !DILocation(line: 686, column: 10, scope: !12428)
!12514 = !DILocation(line: 686, column: 25, scope: !12428)
!12515 = !DILocation(line: 687, column: 3, scope: !12428)
!12516 = !DILocation(line: 687, column: 10, scope: !12428)
!12517 = !DILocation(line: 687, column: 20, scope: !12428)
!12518 = !DILocation(line: 688, column: 1, scope: !12428)
!12519 = distinct !DISubprogram(name: "hash_free", scope: !758, file: !758, line: 696, type: !853, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12520 = !DILocalVariable(name: "table", arg: 1, scope: !12519, file: !758, line: 696, type: !852)
!12521 = !DILocation(line: 696, column: 24, scope: !12519)
!12522 = !DILocalVariable(name: "bucket", scope: !12519, file: !758, line: 698, type: !761)
!12523 = !DILocation(line: 698, column: 22, scope: !12519)
!12524 = !DILocalVariable(name: "cursor", scope: !12519, file: !758, line: 699, type: !761)
!12525 = !DILocation(line: 699, column: 22, scope: !12519)
!12526 = !DILocalVariable(name: "next", scope: !12519, file: !758, line: 700, type: !761)
!12527 = !DILocation(line: 700, column: 22, scope: !12519)
!12528 = !DILocation(line: 703, column: 7, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12519, file: !758, line: 703, column: 7)
!12530 = !DILocation(line: 703, column: 14, scope: !12529)
!12531 = !DILocation(line: 703, column: 25, scope: !12529)
!12532 = !DILocation(line: 703, column: 28, scope: !12529)
!12533 = !DILocation(line: 703, column: 35, scope: !12529)
!12534 = !DILocation(line: 703, column: 7, scope: !12519)
!12535 = !DILocation(line: 705, column: 21, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12537, file: !758, line: 705, column: 7)
!12537 = distinct !DILexicalBlock(scope: !12529, file: !758, line: 704, column: 5)
!12538 = !DILocation(line: 705, column: 28, scope: !12536)
!12539 = !DILocation(line: 705, column: 19, scope: !12536)
!12540 = !DILocation(line: 705, column: 12, scope: !12536)
!12541 = !DILocation(line: 705, column: 36, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12536, file: !758, line: 705, column: 7)
!12543 = !DILocation(line: 705, column: 45, scope: !12542)
!12544 = !DILocation(line: 705, column: 52, scope: !12542)
!12545 = !DILocation(line: 705, column: 43, scope: !12542)
!12546 = !DILocation(line: 705, column: 7, scope: !12536)
!12547 = !DILocation(line: 707, column: 15, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !758, line: 707, column: 15)
!12549 = distinct !DILexicalBlock(scope: !12542, file: !758, line: 706, column: 9)
!12550 = !DILocation(line: 707, column: 23, scope: !12548)
!12551 = !DILocation(line: 707, column: 15, scope: !12549)
!12552 = !DILocation(line: 709, column: 29, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12554, file: !758, line: 709, column: 15)
!12554 = distinct !DILexicalBlock(scope: !12548, file: !758, line: 708, column: 13)
!12555 = !DILocation(line: 709, column: 27, scope: !12553)
!12556 = !DILocation(line: 709, column: 20, scope: !12553)
!12557 = !DILocation(line: 709, column: 37, scope: !12558)
!12558 = distinct !DILexicalBlock(scope: !12553, file: !758, line: 709, column: 15)
!12559 = !DILocation(line: 709, column: 15, scope: !12553)
!12560 = !DILocation(line: 710, column: 17, scope: !12558)
!12561 = !DILocation(line: 710, column: 24, scope: !12558)
!12562 = !DILocation(line: 710, column: 36, scope: !12558)
!12563 = !DILocation(line: 710, column: 44, scope: !12558)
!12564 = !DILocation(line: 709, column: 54, scope: !12558)
!12565 = !DILocation(line: 709, column: 62, scope: !12558)
!12566 = !DILocation(line: 709, column: 52, scope: !12558)
!12567 = !DILocation(line: 709, column: 15, scope: !12558)
!12568 = distinct !{!12568, !12559, !12569}
!12569 = !DILocation(line: 710, column: 48, scope: !12553)
!12570 = !DILocation(line: 711, column: 13, scope: !12554)
!12571 = !DILocation(line: 712, column: 9, scope: !12549)
!12572 = !DILocation(line: 705, column: 72, scope: !12542)
!12573 = !DILocation(line: 705, column: 7, scope: !12542)
!12574 = distinct !{!12574, !12546, !12575}
!12575 = !DILocation(line: 712, column: 9, scope: !12536)
!12576 = !DILocation(line: 713, column: 5, scope: !12537)
!12577 = !DILocation(line: 722, column: 17, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12519, file: !758, line: 722, column: 3)
!12579 = !DILocation(line: 722, column: 24, scope: !12578)
!12580 = !DILocation(line: 722, column: 15, scope: !12578)
!12581 = !DILocation(line: 722, column: 8, scope: !12578)
!12582 = !DILocation(line: 722, column: 32, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12578, file: !758, line: 722, column: 3)
!12584 = !DILocation(line: 722, column: 41, scope: !12583)
!12585 = !DILocation(line: 722, column: 48, scope: !12583)
!12586 = !DILocation(line: 722, column: 39, scope: !12583)
!12587 = !DILocation(line: 722, column: 3, scope: !12578)
!12588 = !DILocation(line: 724, column: 21, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !758, line: 724, column: 7)
!12590 = distinct !DILexicalBlock(scope: !12583, file: !758, line: 723, column: 5)
!12591 = !DILocation(line: 724, column: 29, scope: !12589)
!12592 = !DILocation(line: 724, column: 19, scope: !12589)
!12593 = !DILocation(line: 724, column: 12, scope: !12589)
!12594 = !DILocation(line: 724, column: 35, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12589, file: !758, line: 724, column: 7)
!12596 = !DILocation(line: 724, column: 7, scope: !12589)
!12597 = !DILocation(line: 726, column: 18, scope: !12598)
!12598 = distinct !DILexicalBlock(scope: !12595, file: !758, line: 725, column: 9)
!12599 = !DILocation(line: 726, column: 26, scope: !12598)
!12600 = !DILocation(line: 726, column: 16, scope: !12598)
!12601 = !DILocation(line: 727, column: 17, scope: !12598)
!12602 = !DILocation(line: 727, column: 11, scope: !12598)
!12603 = !DILocation(line: 728, column: 9, scope: !12598)
!12604 = !DILocation(line: 724, column: 52, scope: !12595)
!12605 = !DILocation(line: 724, column: 50, scope: !12595)
!12606 = !DILocation(line: 724, column: 7, scope: !12595)
!12607 = distinct !{!12607, !12596, !12608}
!12608 = !DILocation(line: 728, column: 9, scope: !12589)
!12609 = !DILocation(line: 729, column: 5, scope: !12590)
!12610 = !DILocation(line: 722, column: 68, scope: !12583)
!12611 = !DILocation(line: 722, column: 3, scope: !12583)
!12612 = distinct !{!12612, !12587, !12613}
!12613 = !DILocation(line: 729, column: 5, scope: !12578)
!12614 = !DILocation(line: 732, column: 17, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12519, file: !758, line: 732, column: 3)
!12616 = !DILocation(line: 732, column: 24, scope: !12615)
!12617 = !DILocation(line: 732, column: 15, scope: !12615)
!12618 = !DILocation(line: 732, column: 8, scope: !12615)
!12619 = !DILocation(line: 732, column: 41, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12615, file: !758, line: 732, column: 3)
!12621 = !DILocation(line: 732, column: 3, scope: !12615)
!12622 = !DILocation(line: 734, column: 14, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12620, file: !758, line: 733, column: 5)
!12624 = !DILocation(line: 734, column: 22, scope: !12623)
!12625 = !DILocation(line: 734, column: 12, scope: !12623)
!12626 = !DILocation(line: 735, column: 13, scope: !12623)
!12627 = !DILocation(line: 735, column: 7, scope: !12623)
!12628 = !DILocation(line: 736, column: 5, scope: !12623)
!12629 = !DILocation(line: 732, column: 58, scope: !12620)
!12630 = !DILocation(line: 732, column: 56, scope: !12620)
!12631 = !DILocation(line: 732, column: 3, scope: !12620)
!12632 = distinct !{!12632, !12621, !12633}
!12633 = !DILocation(line: 736, column: 5, scope: !12615)
!12634 = !DILocation(line: 741, column: 9, scope: !12519)
!12635 = !DILocation(line: 741, column: 16, scope: !12519)
!12636 = !DILocation(line: 741, column: 3, scope: !12519)
!12637 = !DILocation(line: 742, column: 9, scope: !12519)
!12638 = !DILocation(line: 742, column: 3, scope: !12519)
!12639 = !DILocation(line: 743, column: 1, scope: !12519)
!12640 = distinct !DISubprogram(name: "hash_rehash", scope: !758, file: !758, line: 943, type: !855, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12641 = !DILocalVariable(name: "table", arg: 1, scope: !12640, file: !758, line: 943, type: !852)
!12642 = !DILocation(line: 943, column: 26, scope: !12640)
!12643 = !DILocalVariable(name: "candidate", arg: 2, scope: !12640, file: !758, line: 943, type: !55)
!12644 = !DILocation(line: 943, column: 40, scope: !12640)
!12645 = !DILocalVariable(name: "storage", scope: !12640, file: !758, line: 945, type: !756)
!12646 = !DILocation(line: 945, column: 14, scope: !12640)
!12647 = !DILocalVariable(name: "new_table", scope: !12640, file: !758, line: 946, type: !852)
!12648 = !DILocation(line: 946, column: 15, scope: !12640)
!12649 = !DILocalVariable(name: "new_size", scope: !12640, file: !758, line: 947, type: !55)
!12650 = !DILocation(line: 947, column: 10, scope: !12640)
!12651 = !DILocation(line: 947, column: 42, scope: !12640)
!12652 = !DILocation(line: 947, column: 53, scope: !12640)
!12653 = !DILocation(line: 947, column: 60, scope: !12640)
!12654 = !DILocation(line: 947, column: 21, scope: !12640)
!12655 = !DILocation(line: 949, column: 8, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12640, file: !758, line: 949, column: 7)
!12657 = !DILocation(line: 949, column: 7, scope: !12640)
!12658 = !DILocation(line: 950, column: 5, scope: !12656)
!12659 = !DILocation(line: 951, column: 7, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12640, file: !758, line: 951, column: 7)
!12661 = !DILocation(line: 951, column: 19, scope: !12660)
!12662 = !DILocation(line: 951, column: 26, scope: !12660)
!12663 = !DILocation(line: 951, column: 16, scope: !12660)
!12664 = !DILocation(line: 951, column: 7, scope: !12640)
!12665 = !DILocation(line: 952, column: 5, scope: !12660)
!12666 = !DILocation(line: 953, column: 13, scope: !12640)
!12667 = !DILocation(line: 954, column: 31, scope: !12640)
!12668 = !DILocation(line: 954, column: 23, scope: !12640)
!12669 = !DILocation(line: 954, column: 3, scope: !12640)
!12670 = !DILocation(line: 954, column: 14, scope: !12640)
!12671 = !DILocation(line: 954, column: 21, scope: !12640)
!12672 = !DILocation(line: 955, column: 7, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12640, file: !758, line: 955, column: 7)
!12674 = !DILocation(line: 955, column: 18, scope: !12673)
!12675 = !DILocation(line: 955, column: 25, scope: !12673)
!12676 = !DILocation(line: 955, column: 7, scope: !12640)
!12677 = !DILocation(line: 956, column: 5, scope: !12673)
!12678 = !DILocation(line: 957, column: 26, scope: !12640)
!12679 = !DILocation(line: 957, column: 3, scope: !12640)
!12680 = !DILocation(line: 957, column: 14, scope: !12640)
!12681 = !DILocation(line: 957, column: 24, scope: !12640)
!12682 = !DILocation(line: 958, column: 29, scope: !12640)
!12683 = !DILocation(line: 958, column: 40, scope: !12640)
!12684 = !DILocation(line: 958, column: 49, scope: !12640)
!12685 = !DILocation(line: 958, column: 47, scope: !12640)
!12686 = !DILocation(line: 958, column: 3, scope: !12640)
!12687 = !DILocation(line: 958, column: 14, scope: !12640)
!12688 = !DILocation(line: 958, column: 27, scope: !12640)
!12689 = !DILocation(line: 959, column: 3, scope: !12640)
!12690 = !DILocation(line: 959, column: 14, scope: !12640)
!12691 = !DILocation(line: 959, column: 29, scope: !12640)
!12692 = !DILocation(line: 960, column: 3, scope: !12640)
!12693 = !DILocation(line: 960, column: 14, scope: !12640)
!12694 = !DILocation(line: 960, column: 24, scope: !12640)
!12695 = !DILocation(line: 961, column: 23, scope: !12640)
!12696 = !DILocation(line: 961, column: 30, scope: !12640)
!12697 = !DILocation(line: 961, column: 3, scope: !12640)
!12698 = !DILocation(line: 961, column: 14, scope: !12640)
!12699 = !DILocation(line: 961, column: 21, scope: !12640)
!12700 = !DILocation(line: 962, column: 23, scope: !12640)
!12701 = !DILocation(line: 962, column: 30, scope: !12640)
!12702 = !DILocation(line: 962, column: 3, scope: !12640)
!12703 = !DILocation(line: 962, column: 14, scope: !12640)
!12704 = !DILocation(line: 962, column: 21, scope: !12640)
!12705 = !DILocation(line: 963, column: 27, scope: !12640)
!12706 = !DILocation(line: 963, column: 34, scope: !12640)
!12707 = !DILocation(line: 963, column: 3, scope: !12640)
!12708 = !DILocation(line: 963, column: 14, scope: !12640)
!12709 = !DILocation(line: 963, column: 25, scope: !12640)
!12710 = !DILocation(line: 964, column: 27, scope: !12640)
!12711 = !DILocation(line: 964, column: 34, scope: !12640)
!12712 = !DILocation(line: 964, column: 3, scope: !12640)
!12713 = !DILocation(line: 964, column: 14, scope: !12640)
!12714 = !DILocation(line: 964, column: 25, scope: !12640)
!12715 = !DILocation(line: 984, column: 32, scope: !12640)
!12716 = !DILocation(line: 984, column: 39, scope: !12640)
!12717 = !DILocation(line: 984, column: 3, scope: !12640)
!12718 = !DILocation(line: 984, column: 14, scope: !12640)
!12719 = !DILocation(line: 984, column: 30, scope: !12640)
!12720 = !DILocation(line: 986, column: 25, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12640, file: !758, line: 986, column: 7)
!12722 = !DILocation(line: 986, column: 36, scope: !12721)
!12723 = !DILocation(line: 986, column: 7, scope: !12721)
!12724 = !DILocation(line: 986, column: 7, scope: !12640)
!12725 = !DILocation(line: 989, column: 13, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12721, file: !758, line: 987, column: 5)
!12727 = !DILocation(line: 989, column: 20, scope: !12726)
!12728 = !DILocation(line: 989, column: 7, scope: !12726)
!12729 = !DILocation(line: 990, column: 23, scope: !12726)
!12730 = !DILocation(line: 990, column: 34, scope: !12726)
!12731 = !DILocation(line: 990, column: 7, scope: !12726)
!12732 = !DILocation(line: 990, column: 14, scope: !12726)
!12733 = !DILocation(line: 990, column: 21, scope: !12726)
!12734 = !DILocation(line: 991, column: 29, scope: !12726)
!12735 = !DILocation(line: 991, column: 40, scope: !12726)
!12736 = !DILocation(line: 991, column: 7, scope: !12726)
!12737 = !DILocation(line: 991, column: 14, scope: !12726)
!12738 = !DILocation(line: 991, column: 27, scope: !12726)
!12739 = !DILocation(line: 992, column: 26, scope: !12726)
!12740 = !DILocation(line: 992, column: 37, scope: !12726)
!12741 = !DILocation(line: 992, column: 7, scope: !12726)
!12742 = !DILocation(line: 992, column: 14, scope: !12726)
!12743 = !DILocation(line: 992, column: 24, scope: !12726)
!12744 = !DILocation(line: 993, column: 31, scope: !12726)
!12745 = !DILocation(line: 993, column: 42, scope: !12726)
!12746 = !DILocation(line: 993, column: 7, scope: !12726)
!12747 = !DILocation(line: 993, column: 14, scope: !12726)
!12748 = !DILocation(line: 993, column: 29, scope: !12726)
!12749 = !DILocation(line: 994, column: 32, scope: !12726)
!12750 = !DILocation(line: 994, column: 43, scope: !12726)
!12751 = !DILocation(line: 994, column: 7, scope: !12726)
!12752 = !DILocation(line: 994, column: 14, scope: !12726)
!12753 = !DILocation(line: 994, column: 30, scope: !12726)
!12754 = !DILocation(line: 996, column: 7, scope: !12726)
!12755 = !DILocation(line: 1012, column: 28, scope: !12640)
!12756 = !DILocation(line: 1012, column: 39, scope: !12640)
!12757 = !DILocation(line: 1012, column: 3, scope: !12640)
!12758 = !DILocation(line: 1012, column: 10, scope: !12640)
!12759 = !DILocation(line: 1012, column: 26, scope: !12640)
!12760 = !DILocation(line: 1013, column: 28, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12640, file: !758, line: 1013, column: 7)
!12762 = !DILocation(line: 1013, column: 35, scope: !12761)
!12763 = !DILocation(line: 1013, column: 10, scope: !12761)
!12764 = !DILocation(line: 1014, column: 10, scope: !12761)
!12765 = !DILocation(line: 1014, column: 31, scope: !12761)
!12766 = !DILocation(line: 1014, column: 38, scope: !12761)
!12767 = !DILocation(line: 1014, column: 13, scope: !12761)
!12768 = !DILocation(line: 1013, column: 7, scope: !12640)
!12769 = !DILocation(line: 1015, column: 5, scope: !12761)
!12770 = !DILocation(line: 1017, column: 9, scope: !12640)
!12771 = !DILocation(line: 1017, column: 20, scope: !12640)
!12772 = !DILocation(line: 1017, column: 3, scope: !12640)
!12773 = !DILocation(line: 1018, column: 3, scope: !12640)
!12774 = !DILocation(line: 1019, column: 1, scope: !12640)
!12775 = distinct !DISubprogram(name: "transfer_entries", scope: !758, file: !758, line: 860, type: !872, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12776 = !DILocalVariable(name: "dst", arg: 1, scope: !12775, file: !758, line: 860, type: !852)
!12777 = !DILocation(line: 860, column: 31, scope: !12775)
!12778 = !DILocalVariable(name: "src", arg: 2, scope: !12775, file: !758, line: 860, type: !852)
!12779 = !DILocation(line: 860, column: 48, scope: !12775)
!12780 = !DILocalVariable(name: "safe", arg: 3, scope: !12775, file: !758, line: 860, type: !120)
!12781 = !DILocation(line: 860, column: 58, scope: !12775)
!12782 = !DILocalVariable(name: "bucket", scope: !12775, file: !758, line: 862, type: !761)
!12783 = !DILocation(line: 862, column: 22, scope: !12775)
!12784 = !DILocalVariable(name: "cursor", scope: !12775, file: !758, line: 863, type: !761)
!12785 = !DILocation(line: 863, column: 22, scope: !12775)
!12786 = !DILocalVariable(name: "next", scope: !12775, file: !758, line: 864, type: !761)
!12787 = !DILocation(line: 864, column: 22, scope: !12775)
!12788 = !DILocation(line: 865, column: 17, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12775, file: !758, line: 865, column: 3)
!12790 = !DILocation(line: 865, column: 22, scope: !12789)
!12791 = !DILocation(line: 865, column: 15, scope: !12789)
!12792 = !DILocation(line: 865, column: 8, scope: !12789)
!12793 = !DILocation(line: 865, column: 30, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12789, file: !758, line: 865, column: 3)
!12795 = !DILocation(line: 865, column: 39, scope: !12794)
!12796 = !DILocation(line: 865, column: 44, scope: !12794)
!12797 = !DILocation(line: 865, column: 37, scope: !12794)
!12798 = !DILocation(line: 865, column: 3, scope: !12789)
!12799 = !DILocation(line: 866, column: 9, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12794, file: !758, line: 866, column: 9)
!12801 = !DILocation(line: 866, column: 17, scope: !12800)
!12802 = !DILocation(line: 866, column: 9, scope: !12794)
!12803 = !DILocalVariable(name: "data", scope: !12804, file: !758, line: 868, type: !53)
!12804 = distinct !DILexicalBlock(scope: !12800, file: !758, line: 867, column: 7)
!12805 = !DILocation(line: 868, column: 15, scope: !12804)
!12806 = !DILocalVariable(name: "new_bucket", scope: !12804, file: !758, line: 869, type: !761)
!12807 = !DILocation(line: 869, column: 28, scope: !12804)
!12808 = !DILocation(line: 877, column: 23, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12804, file: !758, line: 877, column: 9)
!12810 = !DILocation(line: 877, column: 31, scope: !12809)
!12811 = !DILocation(line: 877, column: 21, scope: !12809)
!12812 = !DILocation(line: 877, column: 14, scope: !12809)
!12813 = !DILocation(line: 877, column: 37, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12809, file: !758, line: 877, column: 9)
!12815 = !DILocation(line: 877, column: 9, scope: !12809)
!12816 = !DILocation(line: 879, column: 20, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12814, file: !758, line: 878, column: 11)
!12818 = !DILocation(line: 879, column: 28, scope: !12817)
!12819 = !DILocation(line: 879, column: 18, scope: !12817)
!12820 = !DILocation(line: 880, column: 39, scope: !12817)
!12821 = !DILocation(line: 880, column: 44, scope: !12817)
!12822 = !DILocation(line: 880, column: 26, scope: !12817)
!12823 = !DILocation(line: 880, column: 24, scope: !12817)
!12824 = !DILocation(line: 882, column: 20, scope: !12817)
!12825 = !DILocation(line: 882, column: 28, scope: !12817)
!12826 = !DILocation(line: 882, column: 18, scope: !12817)
!12827 = !DILocation(line: 884, column: 17, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12817, file: !758, line: 884, column: 17)
!12829 = !DILocation(line: 884, column: 29, scope: !12828)
!12830 = !DILocation(line: 884, column: 17, scope: !12817)
!12831 = !DILocation(line: 888, column: 32, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12828, file: !758, line: 885, column: 15)
!12833 = !DILocation(line: 888, column: 44, scope: !12832)
!12834 = !DILocation(line: 888, column: 17, scope: !12832)
!12835 = !DILocation(line: 888, column: 25, scope: !12832)
!12836 = !DILocation(line: 888, column: 30, scope: !12832)
!12837 = !DILocation(line: 889, column: 36, scope: !12832)
!12838 = !DILocation(line: 889, column: 17, scope: !12832)
!12839 = !DILocation(line: 889, column: 29, scope: !12832)
!12840 = !DILocation(line: 889, column: 34, scope: !12832)
!12841 = !DILocation(line: 890, column: 15, scope: !12832)
!12842 = !DILocation(line: 895, column: 36, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12828, file: !758, line: 892, column: 15)
!12844 = !DILocation(line: 895, column: 17, scope: !12843)
!12845 = !DILocation(line: 895, column: 29, scope: !12843)
!12846 = !DILocation(line: 895, column: 34, scope: !12843)
!12847 = !DILocation(line: 896, column: 17, scope: !12843)
!12848 = !DILocation(line: 896, column: 22, scope: !12843)
!12849 = !DILocation(line: 896, column: 36, scope: !12843)
!12850 = !DILocation(line: 897, column: 29, scope: !12843)
!12851 = !DILocation(line: 897, column: 34, scope: !12843)
!12852 = !DILocation(line: 897, column: 17, scope: !12843)
!12853 = !DILocation(line: 899, column: 11, scope: !12817)
!12854 = !DILocation(line: 877, column: 54, scope: !12814)
!12855 = !DILocation(line: 877, column: 52, scope: !12814)
!12856 = !DILocation(line: 877, column: 9, scope: !12814)
!12857 = distinct !{!12857, !12815, !12858}
!12858 = !DILocation(line: 899, column: 11, scope: !12809)
!12859 = !DILocation(line: 903, column: 16, scope: !12804)
!12860 = !DILocation(line: 903, column: 24, scope: !12804)
!12861 = !DILocation(line: 903, column: 14, scope: !12804)
!12862 = !DILocation(line: 904, column: 9, scope: !12804)
!12863 = !DILocation(line: 904, column: 17, scope: !12804)
!12864 = !DILocation(line: 904, column: 22, scope: !12804)
!12865 = !DILocation(line: 905, column: 13, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12804, file: !758, line: 905, column: 13)
!12867 = !DILocation(line: 905, column: 13, scope: !12804)
!12868 = !DILocation(line: 906, column: 11, scope: !12866)
!12869 = !DILocation(line: 907, column: 35, scope: !12804)
!12870 = !DILocation(line: 907, column: 40, scope: !12804)
!12871 = !DILocation(line: 907, column: 22, scope: !12804)
!12872 = !DILocation(line: 907, column: 20, scope: !12804)
!12873 = !DILocation(line: 909, column: 13, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12804, file: !758, line: 909, column: 13)
!12875 = !DILocation(line: 909, column: 25, scope: !12874)
!12876 = !DILocation(line: 909, column: 13, scope: !12804)
!12877 = !DILocalVariable(name: "new_entry", scope: !12878, file: !758, line: 913, type: !761)
!12878 = distinct !DILexicalBlock(scope: !12874, file: !758, line: 910, column: 11)
!12879 = !DILocation(line: 913, column: 32, scope: !12878)
!12880 = !DILocation(line: 913, column: 60, scope: !12878)
!12881 = !DILocation(line: 913, column: 44, scope: !12878)
!12882 = !DILocation(line: 915, column: 17, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12878, file: !758, line: 915, column: 17)
!12884 = !DILocation(line: 915, column: 27, scope: !12883)
!12885 = !DILocation(line: 915, column: 17, scope: !12878)
!12886 = !DILocation(line: 916, column: 15, scope: !12883)
!12887 = !DILocation(line: 918, column: 31, scope: !12878)
!12888 = !DILocation(line: 918, column: 13, scope: !12878)
!12889 = !DILocation(line: 918, column: 24, scope: !12878)
!12890 = !DILocation(line: 918, column: 29, scope: !12878)
!12891 = !DILocation(line: 919, column: 31, scope: !12878)
!12892 = !DILocation(line: 919, column: 43, scope: !12878)
!12893 = !DILocation(line: 919, column: 13, scope: !12878)
!12894 = !DILocation(line: 919, column: 24, scope: !12878)
!12895 = !DILocation(line: 919, column: 29, scope: !12878)
!12896 = !DILocation(line: 920, column: 32, scope: !12878)
!12897 = !DILocation(line: 920, column: 13, scope: !12878)
!12898 = !DILocation(line: 920, column: 25, scope: !12878)
!12899 = !DILocation(line: 920, column: 30, scope: !12878)
!12900 = !DILocation(line: 921, column: 11, scope: !12878)
!12901 = !DILocation(line: 925, column: 32, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12874, file: !758, line: 923, column: 11)
!12903 = !DILocation(line: 925, column: 13, scope: !12902)
!12904 = !DILocation(line: 925, column: 25, scope: !12902)
!12905 = !DILocation(line: 925, column: 30, scope: !12902)
!12906 = !DILocation(line: 926, column: 13, scope: !12902)
!12907 = !DILocation(line: 926, column: 18, scope: !12902)
!12908 = !DILocation(line: 926, column: 32, scope: !12902)
!12909 = !DILocation(line: 928, column: 9, scope: !12804)
!12910 = !DILocation(line: 928, column: 17, scope: !12804)
!12911 = !DILocation(line: 928, column: 22, scope: !12804)
!12912 = !DILocation(line: 929, column: 9, scope: !12804)
!12913 = !DILocation(line: 929, column: 14, scope: !12804)
!12914 = !DILocation(line: 929, column: 28, scope: !12804)
!12915 = !DILocation(line: 930, column: 7, scope: !12804)
!12916 = !DILocation(line: 865, column: 64, scope: !12794)
!12917 = !DILocation(line: 865, column: 3, scope: !12794)
!12918 = distinct !{!12918, !12798, !12919}
!12919 = !DILocation(line: 930, column: 7, scope: !12789)
!12920 = !DILocation(line: 931, column: 3, scope: !12775)
!12921 = !DILocation(line: 932, column: 1, scope: !12775)
!12922 = distinct !DISubprogram(name: "free_entry", scope: !758, file: !758, line: 776, type: !874, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12923 = !DILocalVariable(name: "table", arg: 1, scope: !12922, file: !758, line: 776, type: !852)
!12924 = !DILocation(line: 776, column: 25, scope: !12922)
!12925 = !DILocalVariable(name: "entry", arg: 2, scope: !12922, file: !758, line: 776, type: !761)
!12926 = !DILocation(line: 776, column: 51, scope: !12922)
!12927 = !DILocation(line: 778, column: 3, scope: !12922)
!12928 = !DILocation(line: 778, column: 10, scope: !12922)
!12929 = !DILocation(line: 778, column: 15, scope: !12922)
!12930 = !DILocation(line: 779, column: 17, scope: !12922)
!12931 = !DILocation(line: 779, column: 24, scope: !12922)
!12932 = !DILocation(line: 779, column: 3, scope: !12922)
!12933 = !DILocation(line: 779, column: 10, scope: !12922)
!12934 = !DILocation(line: 779, column: 15, scope: !12922)
!12935 = !DILocation(line: 780, column: 28, scope: !12922)
!12936 = !DILocation(line: 780, column: 3, scope: !12922)
!12937 = !DILocation(line: 780, column: 10, scope: !12922)
!12938 = !DILocation(line: 780, column: 26, scope: !12922)
!12939 = !DILocation(line: 781, column: 1, scope: !12922)
!12940 = distinct !DISubprogram(name: "allocate_entry", scope: !758, file: !758, line: 751, type: !879, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12941 = !DILocalVariable(name: "table", arg: 1, scope: !12940, file: !758, line: 751, type: !852)
!12942 = !DILocation(line: 751, column: 29, scope: !12940)
!12943 = !DILocalVariable(name: "new", scope: !12940, file: !758, line: 753, type: !761)
!12944 = !DILocation(line: 753, column: 22, scope: !12940)
!12945 = !DILocation(line: 755, column: 7, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12940, file: !758, line: 755, column: 7)
!12947 = !DILocation(line: 755, column: 14, scope: !12946)
!12948 = !DILocation(line: 755, column: 7, scope: !12940)
!12949 = !DILocation(line: 757, column: 13, scope: !12950)
!12950 = distinct !DILexicalBlock(scope: !12946, file: !758, line: 756, column: 5)
!12951 = !DILocation(line: 757, column: 20, scope: !12950)
!12952 = !DILocation(line: 757, column: 11, scope: !12950)
!12953 = !DILocation(line: 758, column: 32, scope: !12950)
!12954 = !DILocation(line: 758, column: 37, scope: !12950)
!12955 = !DILocation(line: 758, column: 7, scope: !12950)
!12956 = !DILocation(line: 758, column: 14, scope: !12950)
!12957 = !DILocation(line: 758, column: 30, scope: !12950)
!12958 = !DILocation(line: 759, column: 5, scope: !12950)
!12959 = !DILocation(line: 765, column: 13, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12946, file: !758, line: 761, column: 5)
!12961 = !DILocation(line: 765, column: 11, scope: !12960)
!12962 = !DILocation(line: 769, column: 10, scope: !12940)
!12963 = !DILocation(line: 769, column: 3, scope: !12940)
!12964 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !758, file: !758, line: 1038, type: !857, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!12965 = !DILocalVariable(name: "table", arg: 1, scope: !12964, file: !758, line: 1038, type: !852)
!12966 = !DILocation(line: 1038, column: 36, scope: !12964)
!12967 = !DILocalVariable(name: "entry", arg: 2, scope: !12964, file: !758, line: 1038, type: !427)
!12968 = !DILocation(line: 1038, column: 55, scope: !12964)
!12969 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12964, file: !758, line: 1039, type: !859)
!12970 = !DILocation(line: 1039, column: 37, scope: !12964)
!12971 = !DILocalVariable(name: "data", scope: !12964, file: !758, line: 1041, type: !53)
!12972 = !DILocation(line: 1041, column: 9, scope: !12964)
!12973 = !DILocalVariable(name: "bucket", scope: !12964, file: !758, line: 1042, type: !761)
!12974 = !DILocation(line: 1042, column: 22, scope: !12964)
!12975 = !DILocation(line: 1047, column: 9, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12964, file: !758, line: 1047, column: 7)
!12977 = !DILocation(line: 1047, column: 7, scope: !12964)
!12978 = !DILocation(line: 1048, column: 5, scope: !12976)
!12979 = !DILocation(line: 1051, column: 32, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12964, file: !758, line: 1051, column: 7)
!12981 = !DILocation(line: 1051, column: 39, scope: !12980)
!12982 = !DILocation(line: 1051, column: 15, scope: !12980)
!12983 = !DILocation(line: 1051, column: 13, scope: !12980)
!12984 = !DILocation(line: 1051, column: 63, scope: !12980)
!12985 = !DILocation(line: 1051, column: 7, scope: !12964)
!12986 = !DILocation(line: 1053, column: 11, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !758, line: 1053, column: 11)
!12988 = distinct !DILexicalBlock(scope: !12980, file: !758, line: 1052, column: 5)
!12989 = !DILocation(line: 1053, column: 11, scope: !12988)
!12990 = !DILocation(line: 1054, column: 24, scope: !12987)
!12991 = !DILocation(line: 1054, column: 10, scope: !12987)
!12992 = !DILocation(line: 1054, column: 22, scope: !12987)
!12993 = !DILocation(line: 1054, column: 9, scope: !12987)
!12994 = !DILocation(line: 1055, column: 7, scope: !12988)
!12995 = !DILocation(line: 1063, column: 7, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12964, file: !758, line: 1063, column: 7)
!12997 = !DILocation(line: 1063, column: 14, scope: !12996)
!12998 = !DILocation(line: 1064, column: 9, scope: !12996)
!12999 = !DILocation(line: 1064, column: 16, scope: !12996)
!13000 = !DILocation(line: 1064, column: 24, scope: !12996)
!13001 = !DILocation(line: 1064, column: 43, scope: !12996)
!13002 = !DILocation(line: 1064, column: 50, scope: !12996)
!13003 = !DILocation(line: 1064, column: 41, scope: !12996)
!13004 = !DILocation(line: 1064, column: 7, scope: !12996)
!13005 = !DILocation(line: 1063, column: 7, scope: !12964)
!13006 = !DILocation(line: 1068, column: 21, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !12996, file: !758, line: 1065, column: 5)
!13008 = !DILocation(line: 1068, column: 7, scope: !13007)
!13009 = !DILocation(line: 1069, column: 11, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13007, file: !758, line: 1069, column: 11)
!13011 = !DILocation(line: 1069, column: 18, scope: !13010)
!13012 = !DILocation(line: 1070, column: 13, scope: !13010)
!13013 = !DILocation(line: 1070, column: 20, scope: !13010)
!13014 = !DILocation(line: 1070, column: 28, scope: !13010)
!13015 = !DILocation(line: 1070, column: 47, scope: !13010)
!13016 = !DILocation(line: 1070, column: 54, scope: !13010)
!13017 = !DILocation(line: 1070, column: 45, scope: !13010)
!13018 = !DILocation(line: 1070, column: 11, scope: !13010)
!13019 = !DILocation(line: 1069, column: 11, scope: !13007)
!13020 = !DILocalVariable(name: "tuning", scope: !13021, file: !758, line: 1072, type: !773)
!13021 = distinct !DILexicalBlock(scope: !13010, file: !758, line: 1071, column: 9)
!13022 = !DILocation(line: 1072, column: 30, scope: !13021)
!13023 = !DILocation(line: 1072, column: 39, scope: !13021)
!13024 = !DILocation(line: 1072, column: 46, scope: !13021)
!13025 = !DILocalVariable(name: "candidate", scope: !13021, file: !758, line: 1073, type: !779)
!13026 = !DILocation(line: 1073, column: 17, scope: !13021)
!13027 = !DILocation(line: 1074, column: 14, scope: !13021)
!13028 = !DILocation(line: 1074, column: 22, scope: !13021)
!13029 = !DILocation(line: 1075, column: 17, scope: !13021)
!13030 = !DILocation(line: 1075, column: 24, scope: !13021)
!13031 = !DILocation(line: 1075, column: 36, scope: !13021)
!13032 = !DILocation(line: 1075, column: 44, scope: !13021)
!13033 = !DILocation(line: 1075, column: 34, scope: !13021)
!13034 = !DILocation(line: 1076, column: 17, scope: !13021)
!13035 = !DILocation(line: 1076, column: 24, scope: !13021)
!13036 = !DILocation(line: 1076, column: 36, scope: !13021)
!13037 = !DILocation(line: 1076, column: 44, scope: !13021)
!13038 = !DILocation(line: 1076, column: 34, scope: !13021)
!13039 = !DILocation(line: 1077, column: 19, scope: !13021)
!13040 = !DILocation(line: 1077, column: 27, scope: !13021)
!13041 = !DILocation(line: 1077, column: 17, scope: !13021)
!13042 = !DILocation(line: 1079, column: 27, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !13021, file: !758, line: 1079, column: 15)
!13044 = !DILocation(line: 1079, column: 24, scope: !13043)
!13045 = !DILocation(line: 1079, column: 15, scope: !13021)
!13046 = !DILocation(line: 1080, column: 13, scope: !13043)
!13047 = !DILocation(line: 1083, column: 29, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13021, file: !758, line: 1083, column: 15)
!13049 = !DILocation(line: 1083, column: 36, scope: !13048)
!13050 = !DILocation(line: 1083, column: 16, scope: !13048)
!13051 = !DILocation(line: 1083, column: 15, scope: !13021)
!13052 = !DILocation(line: 1084, column: 13, scope: !13048)
!13053 = !DILocation(line: 1087, column: 32, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13021, file: !758, line: 1087, column: 15)
!13055 = !DILocation(line: 1087, column: 39, scope: !13054)
!13056 = !DILocation(line: 1087, column: 15, scope: !13054)
!13057 = !DILocation(line: 1087, column: 62, scope: !13054)
!13058 = !DILocation(line: 1087, column: 15, scope: !13021)
!13059 = !DILocation(line: 1088, column: 13, scope: !13054)
!13060 = !DILocation(line: 1089, column: 9, scope: !13021)
!13061 = !DILocation(line: 1090, column: 5, scope: !13007)
!13062 = !DILocation(line: 1094, column: 7, scope: !13063)
!13063 = distinct !DILexicalBlock(scope: !12964, file: !758, line: 1094, column: 7)
!13064 = !DILocation(line: 1094, column: 15, scope: !13063)
!13065 = !DILocation(line: 1094, column: 7, scope: !12964)
!13066 = !DILocalVariable(name: "new_entry", scope: !13067, file: !758, line: 1096, type: !761)
!13067 = distinct !DILexicalBlock(scope: !13063, file: !758, line: 1095, column: 5)
!13068 = !DILocation(line: 1096, column: 26, scope: !13067)
!13069 = !DILocation(line: 1096, column: 54, scope: !13067)
!13070 = !DILocation(line: 1096, column: 38, scope: !13067)
!13071 = !DILocation(line: 1098, column: 11, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13067, file: !758, line: 1098, column: 11)
!13073 = !DILocation(line: 1098, column: 21, scope: !13072)
!13074 = !DILocation(line: 1098, column: 11, scope: !13067)
!13075 = !DILocation(line: 1099, column: 9, scope: !13072)
!13076 = !DILocation(line: 1103, column: 34, scope: !13067)
!13077 = !DILocation(line: 1103, column: 7, scope: !13067)
!13078 = !DILocation(line: 1103, column: 18, scope: !13067)
!13079 = !DILocation(line: 1103, column: 23, scope: !13067)
!13080 = !DILocation(line: 1104, column: 25, scope: !13067)
!13081 = !DILocation(line: 1104, column: 33, scope: !13067)
!13082 = !DILocation(line: 1104, column: 7, scope: !13067)
!13083 = !DILocation(line: 1104, column: 18, scope: !13067)
!13084 = !DILocation(line: 1104, column: 23, scope: !13067)
!13085 = !DILocation(line: 1105, column: 22, scope: !13067)
!13086 = !DILocation(line: 1105, column: 7, scope: !13067)
!13087 = !DILocation(line: 1105, column: 15, scope: !13067)
!13088 = !DILocation(line: 1105, column: 20, scope: !13067)
!13089 = !DILocation(line: 1106, column: 7, scope: !13067)
!13090 = !DILocation(line: 1106, column: 14, scope: !13067)
!13091 = !DILocation(line: 1106, column: 23, scope: !13067)
!13092 = !DILocation(line: 1107, column: 7, scope: !13067)
!13093 = !DILocation(line: 1112, column: 27, scope: !12964)
!13094 = !DILocation(line: 1112, column: 3, scope: !12964)
!13095 = !DILocation(line: 1112, column: 11, scope: !12964)
!13096 = !DILocation(line: 1112, column: 16, scope: !12964)
!13097 = !DILocation(line: 1113, column: 3, scope: !12964)
!13098 = !DILocation(line: 1113, column: 10, scope: !12964)
!13099 = !DILocation(line: 1113, column: 19, scope: !12964)
!13100 = !DILocation(line: 1114, column: 3, scope: !12964)
!13101 = !DILocation(line: 1114, column: 10, scope: !12964)
!13102 = !DILocation(line: 1114, column: 24, scope: !12964)
!13103 = !DILocation(line: 1116, column: 3, scope: !12964)
!13104 = !DILocation(line: 1117, column: 1, scope: !12964)
!13105 = distinct !DISubprogram(name: "hash_find_entry", scope: !758, file: !758, line: 790, type: !876, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !749, retainedNodes: !143)
!13106 = !DILocalVariable(name: "table", arg: 1, scope: !13105, file: !758, line: 790, type: !852)
!13107 = !DILocation(line: 790, column: 30, scope: !13105)
!13108 = !DILocalVariable(name: "entry", arg: 2, scope: !13105, file: !758, line: 790, type: !427)
!13109 = !DILocation(line: 790, column: 49, scope: !13105)
!13110 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !13105, file: !758, line: 791, type: !878)
!13111 = !DILocation(line: 791, column: 38, scope: !13105)
!13112 = !DILocalVariable(name: "delete", arg: 4, scope: !13105, file: !758, line: 791, type: !120)
!13113 = !DILocation(line: 791, column: 56, scope: !13105)
!13114 = !DILocalVariable(name: "bucket", scope: !13105, file: !758, line: 793, type: !761)
!13115 = !DILocation(line: 793, column: 22, scope: !13105)
!13116 = !DILocation(line: 793, column: 44, scope: !13105)
!13117 = !DILocation(line: 793, column: 51, scope: !13105)
!13118 = !DILocation(line: 793, column: 31, scope: !13105)
!13119 = !DILocalVariable(name: "cursor", scope: !13105, file: !758, line: 794, type: !761)
!13120 = !DILocation(line: 794, column: 22, scope: !13105)
!13121 = !DILocation(line: 796, column: 18, scope: !13105)
!13122 = !DILocation(line: 796, column: 4, scope: !13105)
!13123 = !DILocation(line: 796, column: 16, scope: !13105)
!13124 = !DILocation(line: 799, column: 7, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13105, file: !758, line: 799, column: 7)
!13126 = !DILocation(line: 799, column: 15, scope: !13125)
!13127 = !DILocation(line: 799, column: 20, scope: !13125)
!13128 = !DILocation(line: 799, column: 7, scope: !13105)
!13129 = !DILocation(line: 800, column: 5, scope: !13125)
!13130 = !DILocation(line: 803, column: 7, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13105, file: !758, line: 803, column: 7)
!13132 = !DILocation(line: 803, column: 16, scope: !13131)
!13133 = !DILocation(line: 803, column: 24, scope: !13131)
!13134 = !DILocation(line: 803, column: 13, scope: !13131)
!13135 = !DILocation(line: 803, column: 29, scope: !13131)
!13136 = !DILocation(line: 803, column: 32, scope: !13131)
!13137 = !DILocation(line: 803, column: 39, scope: !13131)
!13138 = !DILocation(line: 803, column: 51, scope: !13131)
!13139 = !DILocation(line: 803, column: 58, scope: !13131)
!13140 = !DILocation(line: 803, column: 66, scope: !13131)
!13141 = !DILocation(line: 803, column: 7, scope: !13105)
!13142 = !DILocalVariable(name: "data", scope: !13143, file: !758, line: 805, type: !53)
!13143 = distinct !DILexicalBlock(scope: !13131, file: !758, line: 804, column: 5)
!13144 = !DILocation(line: 805, column: 13, scope: !13143)
!13145 = !DILocation(line: 805, column: 20, scope: !13143)
!13146 = !DILocation(line: 805, column: 28, scope: !13143)
!13147 = !DILocation(line: 807, column: 11, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13143, file: !758, line: 807, column: 11)
!13149 = !DILocation(line: 807, column: 11, scope: !13143)
!13150 = !DILocation(line: 809, column: 15, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13152, file: !758, line: 809, column: 15)
!13152 = distinct !DILexicalBlock(scope: !13148, file: !758, line: 808, column: 9)
!13153 = !DILocation(line: 809, column: 23, scope: !13151)
!13154 = !DILocation(line: 809, column: 15, scope: !13152)
!13155 = !DILocalVariable(name: "next", scope: !13156, file: !758, line: 811, type: !761)
!13156 = distinct !DILexicalBlock(scope: !13151, file: !758, line: 810, column: 13)
!13157 = !DILocation(line: 811, column: 34, scope: !13156)
!13158 = !DILocation(line: 811, column: 41, scope: !13156)
!13159 = !DILocation(line: 811, column: 49, scope: !13156)
!13160 = !DILocation(line: 815, column: 16, scope: !13156)
!13161 = !DILocation(line: 815, column: 26, scope: !13156)
!13162 = !DILocation(line: 815, column: 25, scope: !13156)
!13163 = !{i64 0, i64 8, !2998, i64 8, i64 8, !2998}
!13164 = !DILocation(line: 816, column: 27, scope: !13156)
!13165 = !DILocation(line: 816, column: 34, scope: !13156)
!13166 = !DILocation(line: 816, column: 15, scope: !13156)
!13167 = !DILocation(line: 817, column: 13, scope: !13156)
!13168 = !DILocation(line: 820, column: 15, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13151, file: !758, line: 819, column: 13)
!13170 = !DILocation(line: 820, column: 23, scope: !13169)
!13171 = !DILocation(line: 820, column: 28, scope: !13169)
!13172 = !DILocation(line: 822, column: 9, scope: !13152)
!13173 = !DILocation(line: 824, column: 14, scope: !13143)
!13174 = !DILocation(line: 824, column: 7, scope: !13143)
!13175 = !DILocation(line: 828, column: 17, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13105, file: !758, line: 828, column: 3)
!13177 = !DILocation(line: 828, column: 15, scope: !13176)
!13178 = !DILocation(line: 828, column: 8, scope: !13176)
!13179 = !DILocation(line: 828, column: 25, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13176, file: !758, line: 828, column: 3)
!13181 = !DILocation(line: 828, column: 33, scope: !13180)
!13182 = !DILocation(line: 828, column: 3, scope: !13176)
!13183 = !DILocation(line: 830, column: 11, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !758, line: 830, column: 11)
!13185 = distinct !DILexicalBlock(scope: !13180, file: !758, line: 829, column: 5)
!13186 = !DILocation(line: 830, column: 20, scope: !13184)
!13187 = !DILocation(line: 830, column: 28, scope: !13184)
!13188 = !DILocation(line: 830, column: 34, scope: !13184)
!13189 = !DILocation(line: 830, column: 17, scope: !13184)
!13190 = !DILocation(line: 831, column: 11, scope: !13184)
!13191 = !DILocation(line: 831, column: 14, scope: !13184)
!13192 = !DILocation(line: 831, column: 21, scope: !13184)
!13193 = !DILocation(line: 831, column: 33, scope: !13184)
!13194 = !DILocation(line: 831, column: 40, scope: !13184)
!13195 = !DILocation(line: 831, column: 48, scope: !13184)
!13196 = !DILocation(line: 831, column: 54, scope: !13184)
!13197 = !DILocation(line: 830, column: 11, scope: !13185)
!13198 = !DILocalVariable(name: "data", scope: !13199, file: !758, line: 833, type: !53)
!13199 = distinct !DILexicalBlock(scope: !13184, file: !758, line: 832, column: 9)
!13200 = !DILocation(line: 833, column: 17, scope: !13199)
!13201 = !DILocation(line: 833, column: 24, scope: !13199)
!13202 = !DILocation(line: 833, column: 32, scope: !13199)
!13203 = !DILocation(line: 833, column: 38, scope: !13199)
!13204 = !DILocation(line: 835, column: 15, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13199, file: !758, line: 835, column: 15)
!13206 = !DILocation(line: 835, column: 15, scope: !13199)
!13207 = !DILocalVariable(name: "next", scope: !13208, file: !758, line: 837, type: !761)
!13208 = distinct !DILexicalBlock(scope: !13205, file: !758, line: 836, column: 13)
!13209 = !DILocation(line: 837, column: 34, scope: !13208)
!13210 = !DILocation(line: 837, column: 41, scope: !13208)
!13211 = !DILocation(line: 837, column: 49, scope: !13208)
!13212 = !DILocation(line: 841, column: 30, scope: !13208)
!13213 = !DILocation(line: 841, column: 36, scope: !13208)
!13214 = !DILocation(line: 841, column: 15, scope: !13208)
!13215 = !DILocation(line: 841, column: 23, scope: !13208)
!13216 = !DILocation(line: 841, column: 28, scope: !13208)
!13217 = !DILocation(line: 842, column: 27, scope: !13208)
!13218 = !DILocation(line: 842, column: 34, scope: !13208)
!13219 = !DILocation(line: 842, column: 15, scope: !13208)
!13220 = !DILocation(line: 843, column: 13, scope: !13208)
!13221 = !DILocation(line: 845, column: 18, scope: !13199)
!13222 = !DILocation(line: 845, column: 11, scope: !13199)
!13223 = !DILocation(line: 847, column: 5, scope: !13185)
!13224 = !DILocation(line: 828, column: 48, scope: !13180)
!13225 = !DILocation(line: 828, column: 56, scope: !13180)
!13226 = !DILocation(line: 828, column: 46, scope: !13180)
!13227 = !DILocation(line: 828, column: 3, scope: !13180)
!13228 = distinct !{!13228, !13182, !13229}
!13229 = !DILocation(line: 847, column: 5, scope: !13176)
!13230 = !DILocation(line: 850, column: 3, scope: !13105)
!13231 = !DILocation(line: 851, column: 1, scope: !13105)
!13232 = distinct !DISubprogram(name: "hash_insert", scope: !758, file: !758, line: 1126, type: !860, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!13233 = !DILocalVariable(name: "table", arg: 1, scope: !13232, file: !758, line: 1126, type: !852)
!13234 = !DILocation(line: 1126, column: 26, scope: !13232)
!13235 = !DILocalVariable(name: "entry", arg: 2, scope: !13232, file: !758, line: 1126, type: !427)
!13236 = !DILocation(line: 1126, column: 45, scope: !13232)
!13237 = !DILocalVariable(name: "matched_ent", scope: !13232, file: !758, line: 1128, type: !427)
!13238 = !DILocation(line: 1128, column: 15, scope: !13232)
!13239 = !DILocalVariable(name: "err", scope: !13232, file: !758, line: 1129, type: !7)
!13240 = !DILocation(line: 1129, column: 7, scope: !13232)
!13241 = !DILocation(line: 1129, column: 36, scope: !13232)
!13242 = !DILocation(line: 1129, column: 43, scope: !13232)
!13243 = !DILocation(line: 1129, column: 13, scope: !13232)
!13244 = !DILocation(line: 1130, column: 11, scope: !13232)
!13245 = !DILocation(line: 1130, column: 15, scope: !13232)
!13246 = !DILocation(line: 1132, column: 23, scope: !13232)
!13247 = !DILocation(line: 1132, column: 27, scope: !13232)
!13248 = !DILocation(line: 1132, column: 34, scope: !13232)
!13249 = !DILocation(line: 1132, column: 48, scope: !13232)
!13250 = !DILocation(line: 1130, column: 3, scope: !13232)
!13251 = distinct !DISubprogram(name: "hash_delete", scope: !758, file: !758, line: 1140, type: !860, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !749, retainedNodes: !143)
!13252 = !DILocalVariable(name: "table", arg: 1, scope: !13251, file: !758, line: 1140, type: !852)
!13253 = !DILocation(line: 1140, column: 26, scope: !13251)
!13254 = !DILocalVariable(name: "entry", arg: 2, scope: !13251, file: !758, line: 1140, type: !427)
!13255 = !DILocation(line: 1140, column: 45, scope: !13251)
!13256 = !DILocalVariable(name: "data", scope: !13251, file: !758, line: 1142, type: !53)
!13257 = !DILocation(line: 1142, column: 9, scope: !13251)
!13258 = !DILocalVariable(name: "bucket", scope: !13251, file: !758, line: 1143, type: !761)
!13259 = !DILocation(line: 1143, column: 22, scope: !13251)
!13260 = !DILocation(line: 1145, column: 27, scope: !13251)
!13261 = !DILocation(line: 1145, column: 34, scope: !13251)
!13262 = !DILocation(line: 1145, column: 10, scope: !13251)
!13263 = !DILocation(line: 1145, column: 8, scope: !13251)
!13264 = !DILocation(line: 1146, column: 8, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13251, file: !758, line: 1146, column: 7)
!13266 = !DILocation(line: 1146, column: 7, scope: !13251)
!13267 = !DILocation(line: 1147, column: 5, scope: !13265)
!13268 = !DILocation(line: 1149, column: 3, scope: !13251)
!13269 = !DILocation(line: 1149, column: 10, scope: !13251)
!13270 = !DILocation(line: 1149, column: 19, scope: !13251)
!13271 = !DILocation(line: 1150, column: 8, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13251, file: !758, line: 1150, column: 7)
!13273 = !DILocation(line: 1150, column: 16, scope: !13272)
!13274 = !DILocation(line: 1150, column: 7, scope: !13251)
!13275 = !DILocation(line: 1152, column: 7, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13272, file: !758, line: 1151, column: 5)
!13277 = !DILocation(line: 1152, column: 14, scope: !13276)
!13278 = !DILocation(line: 1152, column: 28, scope: !13276)
!13279 = !DILocation(line: 1157, column: 11, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13276, file: !758, line: 1157, column: 11)
!13281 = !DILocation(line: 1157, column: 18, scope: !13280)
!13282 = !DILocation(line: 1158, column: 13, scope: !13280)
!13283 = !DILocation(line: 1158, column: 20, scope: !13280)
!13284 = !DILocation(line: 1158, column: 28, scope: !13280)
!13285 = !DILocation(line: 1158, column: 47, scope: !13280)
!13286 = !DILocation(line: 1158, column: 54, scope: !13280)
!13287 = !DILocation(line: 1158, column: 45, scope: !13280)
!13288 = !DILocation(line: 1158, column: 11, scope: !13280)
!13289 = !DILocation(line: 1157, column: 11, scope: !13276)
!13290 = !DILocation(line: 1162, column: 25, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13280, file: !758, line: 1159, column: 9)
!13292 = !DILocation(line: 1162, column: 11, scope: !13291)
!13293 = !DILocation(line: 1163, column: 15, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13291, file: !758, line: 1163, column: 15)
!13295 = !DILocation(line: 1163, column: 22, scope: !13294)
!13296 = !DILocation(line: 1164, column: 17, scope: !13294)
!13297 = !DILocation(line: 1164, column: 24, scope: !13294)
!13298 = !DILocation(line: 1164, column: 32, scope: !13294)
!13299 = !DILocation(line: 1164, column: 51, scope: !13294)
!13300 = !DILocation(line: 1164, column: 58, scope: !13294)
!13301 = !DILocation(line: 1164, column: 49, scope: !13294)
!13302 = !DILocation(line: 1164, column: 15, scope: !13294)
!13303 = !DILocation(line: 1163, column: 15, scope: !13291)
!13304 = !DILocalVariable(name: "tuning", scope: !13305, file: !758, line: 1166, type: !773)
!13305 = distinct !DILexicalBlock(scope: !13294, file: !758, line: 1165, column: 13)
!13306 = !DILocation(line: 1166, column: 34, scope: !13305)
!13307 = !DILocation(line: 1166, column: 43, scope: !13305)
!13308 = !DILocation(line: 1166, column: 50, scope: !13305)
!13309 = !DILocalVariable(name: "candidate", scope: !13305, file: !758, line: 1167, type: !55)
!13310 = !DILocation(line: 1167, column: 22, scope: !13305)
!13311 = !DILocation(line: 1168, column: 18, scope: !13305)
!13312 = !DILocation(line: 1168, column: 26, scope: !13305)
!13313 = !DILocation(line: 1169, column: 20, scope: !13305)
!13314 = !DILocation(line: 1169, column: 27, scope: !13305)
!13315 = !DILocation(line: 1169, column: 39, scope: !13305)
!13316 = !DILocation(line: 1169, column: 47, scope: !13305)
!13317 = !DILocation(line: 1169, column: 37, scope: !13305)
!13318 = !DILocation(line: 1170, column: 21, scope: !13305)
!13319 = !DILocation(line: 1170, column: 28, scope: !13305)
!13320 = !DILocation(line: 1170, column: 40, scope: !13305)
!13321 = !DILocation(line: 1170, column: 48, scope: !13305)
!13322 = !DILocation(line: 1170, column: 38, scope: !13305)
!13323 = !DILocation(line: 1171, column: 23, scope: !13305)
!13324 = !DILocation(line: 1171, column: 31, scope: !13305)
!13325 = !DILocation(line: 1171, column: 21, scope: !13305)
!13326 = !DILocation(line: 1168, column: 17, scope: !13305)
!13327 = !DILocation(line: 1173, column: 33, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13305, file: !758, line: 1173, column: 19)
!13329 = !DILocation(line: 1173, column: 40, scope: !13328)
!13330 = !DILocation(line: 1173, column: 20, scope: !13328)
!13331 = !DILocation(line: 1173, column: 19, scope: !13305)
!13332 = !DILocalVariable(name: "cursor", scope: !13333, file: !758, line: 1181, type: !761)
!13333 = distinct !DILexicalBlock(scope: !13328, file: !758, line: 1174, column: 17)
!13334 = !DILocation(line: 1181, column: 38, scope: !13333)
!13335 = !DILocation(line: 1181, column: 47, scope: !13333)
!13336 = !DILocation(line: 1181, column: 54, scope: !13333)
!13337 = !DILocalVariable(name: "next", scope: !13333, file: !758, line: 1182, type: !761)
!13338 = !DILocation(line: 1182, column: 38, scope: !13333)
!13339 = !DILocation(line: 1183, column: 19, scope: !13333)
!13340 = !DILocation(line: 1183, column: 26, scope: !13333)
!13341 = !DILocation(line: 1185, column: 30, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13333, file: !758, line: 1184, column: 21)
!13343 = !DILocation(line: 1185, column: 38, scope: !13342)
!13344 = !DILocation(line: 1185, column: 28, scope: !13342)
!13345 = !DILocation(line: 1186, column: 29, scope: !13342)
!13346 = !DILocation(line: 1186, column: 23, scope: !13342)
!13347 = !DILocation(line: 1187, column: 32, scope: !13342)
!13348 = !DILocation(line: 1187, column: 30, scope: !13342)
!13349 = distinct !{!13349, !13339, !13350}
!13350 = !DILocation(line: 1188, column: 21, scope: !13333)
!13351 = !DILocation(line: 1189, column: 19, scope: !13333)
!13352 = !DILocation(line: 1189, column: 26, scope: !13333)
!13353 = !DILocation(line: 1189, column: 42, scope: !13333)
!13354 = !DILocation(line: 1191, column: 17, scope: !13333)
!13355 = !DILocation(line: 1192, column: 13, scope: !13305)
!13356 = !DILocation(line: 1193, column: 9, scope: !13291)
!13357 = !DILocation(line: 1194, column: 5, scope: !13276)
!13358 = !DILocation(line: 1196, column: 10, scope: !13251)
!13359 = !DILocation(line: 1196, column: 3, scope: !13251)
!13360 = !DILocation(line: 1197, column: 1, scope: !13251)
!13361 = distinct !DISubprogram(name: "triple_hash", scope: !13362, file: !13362, line: 34, type: !549, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !143)
!13362 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/clone/coreutils")
!13363 = !DILocalVariable(name: "x", arg: 1, scope: !13361, file: !13362, line: 34, type: !427)
!13364 = !DILocation(line: 34, column: 26, scope: !13361)
!13365 = !DILocalVariable(name: "table_size", arg: 2, scope: !13361, file: !13362, line: 34, type: !55)
!13366 = !DILocation(line: 34, column: 36, scope: !13361)
!13367 = !DILocalVariable(name: "p", scope: !13361, file: !13362, line: 36, type: !1802)
!13368 = !DILocation(line: 36, column: 26, scope: !13361)
!13369 = !DILocation(line: 36, column: 30, scope: !13361)
!13370 = !DILocalVariable(name: "tmp", scope: !13361, file: !13362, line: 37, type: !55)
!13371 = !DILocation(line: 37, column: 10, scope: !13361)
!13372 = !DILocation(line: 37, column: 26, scope: !13361)
!13373 = !DILocation(line: 37, column: 29, scope: !13361)
!13374 = !DILocation(line: 37, column: 35, scope: !13361)
!13375 = !DILocation(line: 37, column: 16, scope: !13361)
!13376 = !DILocation(line: 40, column: 11, scope: !13361)
!13377 = !DILocation(line: 40, column: 17, scope: !13361)
!13378 = !DILocation(line: 40, column: 20, scope: !13361)
!13379 = !DILocation(line: 40, column: 15, scope: !13361)
!13380 = !DILocation(line: 40, column: 30, scope: !13361)
!13381 = !DILocation(line: 40, column: 28, scope: !13361)
!13382 = !DILocation(line: 40, column: 3, scope: !13361)
!13383 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !13362, file: !13362, line: 45, type: !549, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !143)
!13384 = !DILocalVariable(name: "x", arg: 1, scope: !13383, file: !13362, line: 45, type: !427)
!13385 = !DILocation(line: 45, column: 34, scope: !13383)
!13386 = !DILocalVariable(name: "table_size", arg: 2, scope: !13383, file: !13362, line: 45, type: !55)
!13387 = !DILocation(line: 45, column: 44, scope: !13383)
!13388 = !DILocalVariable(name: "p", scope: !13383, file: !13362, line: 47, type: !1802)
!13389 = !DILocation(line: 47, column: 26, scope: !13383)
!13390 = !DILocation(line: 47, column: 30, scope: !13383)
!13391 = !DILocation(line: 50, column: 10, scope: !13383)
!13392 = !DILocation(line: 50, column: 13, scope: !13383)
!13393 = !DILocation(line: 50, column: 22, scope: !13383)
!13394 = !DILocation(line: 50, column: 20, scope: !13383)
!13395 = !DILocation(line: 50, column: 3, scope: !13383)
!13396 = distinct !DISubprogram(name: "triple_compare", scope: !13362, file: !13362, line: 55, type: !551, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !143)
!13397 = !DILocalVariable(name: "x", arg: 1, scope: !13396, file: !13362, line: 55, type: !427)
!13398 = !DILocation(line: 55, column: 29, scope: !13396)
!13399 = !DILocalVariable(name: "y", arg: 2, scope: !13396, file: !13362, line: 55, type: !427)
!13400 = !DILocation(line: 55, column: 44, scope: !13396)
!13401 = !DILocalVariable(name: "a", scope: !13396, file: !13362, line: 57, type: !1802)
!13402 = !DILocation(line: 57, column: 26, scope: !13396)
!13403 = !DILocation(line: 57, column: 30, scope: !13396)
!13404 = !DILocalVariable(name: "b", scope: !13396, file: !13362, line: 58, type: !1802)
!13405 = !DILocation(line: 58, column: 26, scope: !13396)
!13406 = !DILocation(line: 58, column: 30, scope: !13396)
!13407 = !DILocation(line: 59, column: 11, scope: !13396)
!13408 = !DILocation(line: 59, column: 31, scope: !13396)
!13409 = !DILocation(line: 59, column: 45, scope: !13396)
!13410 = !DILocation(line: 59, column: 48, scope: !13396)
!13411 = !DILocation(line: 59, column: 54, scope: !13396)
!13412 = !DILocation(line: 59, column: 57, scope: !13396)
!13413 = !DILocation(line: 59, column: 34, scope: !13396)
!13414 = !DILocation(line: 0, scope: !13396)
!13415 = !DILocation(line: 59, column: 10, scope: !13396)
!13416 = !DILocation(line: 59, column: 3, scope: !13396)
!13417 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !13362, file: !13362, line: 63, type: !551, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !143)
!13418 = !DILocalVariable(name: "x", arg: 1, scope: !13417, file: !13362, line: 63, type: !427)
!13419 = !DILocation(line: 63, column: 37, scope: !13417)
!13420 = !DILocalVariable(name: "y", arg: 2, scope: !13417, file: !13362, line: 63, type: !427)
!13421 = !DILocation(line: 63, column: 52, scope: !13417)
!13422 = !DILocalVariable(name: "a", scope: !13417, file: !13362, line: 65, type: !1802)
!13423 = !DILocation(line: 65, column: 26, scope: !13417)
!13424 = !DILocation(line: 65, column: 30, scope: !13417)
!13425 = !DILocalVariable(name: "b", scope: !13417, file: !13362, line: 66, type: !1802)
!13426 = !DILocation(line: 66, column: 26, scope: !13417)
!13427 = !DILocation(line: 66, column: 30, scope: !13417)
!13428 = !DILocation(line: 67, column: 11, scope: !13417)
!13429 = !DILocation(line: 67, column: 31, scope: !13417)
!13430 = !DILocation(line: 67, column: 34, scope: !13417)
!13431 = !DILocation(line: 0, scope: !13417)
!13432 = !DILocation(line: 67, column: 10, scope: !13417)
!13433 = !DILocation(line: 67, column: 3, scope: !13417)
!13434 = distinct !DISubprogram(name: "triple_free", scope: !13362, file: !13362, line: 72, type: !547, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !143)
!13435 = !DILocalVariable(name: "x", arg: 1, scope: !13434, file: !13362, line: 72, type: !53)
!13436 = !DILocation(line: 72, column: 20, scope: !13434)
!13437 = !DILocalVariable(name: "a", scope: !13434, file: !13362, line: 74, type: !1809)
!13438 = !DILocation(line: 74, column: 20, scope: !13434)
!13439 = !DILocation(line: 74, column: 24, scope: !13434)
!13440 = !DILocation(line: 75, column: 9, scope: !13434)
!13441 = !DILocation(line: 75, column: 12, scope: !13434)
!13442 = !DILocation(line: 75, column: 3, scope: !13434)
!13443 = !DILocation(line: 76, column: 9, scope: !13434)
!13444 = !DILocation(line: 76, column: 3, scope: !13434)
!13445 = !DILocation(line: 77, column: 1, scope: !13434)
!13446 = distinct !DISubprogram(name: "opendirat", scope: !13447, file: !13447, line: 36, type: !1813, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1810, retainedNodes: !143)
!13447 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mbarbar/clone/coreutils")
!13448 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13446, file: !13447, line: 36, type: !7)
!13449 = !DILocation(line: 36, column: 16, scope: !13446)
!13450 = !DILocalVariable(name: "dir", arg: 2, scope: !13446, file: !13447, line: 36, type: !115)
!13451 = !DILocation(line: 36, column: 36, scope: !13446)
!13452 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13446, file: !13447, line: 36, type: !7)
!13453 = !DILocation(line: 36, column: 45, scope: !13446)
!13454 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13446, file: !13447, line: 36, type: !129)
!13455 = !DILocation(line: 36, column: 63, scope: !13446)
!13456 = !DILocalVariable(name: "open_flags", scope: !13446, file: !13447, line: 38, type: !7)
!13457 = !DILocation(line: 38, column: 7, scope: !13446)
!13458 = !DILocation(line: 39, column: 36, scope: !13446)
!13459 = !DILocation(line: 39, column: 34, scope: !13446)
!13460 = !DILocalVariable(name: "new_fd", scope: !13446, file: !13447, line: 40, type: !7)
!13461 = !DILocation(line: 40, column: 7, scope: !13446)
!13462 = !DILocation(line: 40, column: 24, scope: !13446)
!13463 = !DILocation(line: 40, column: 32, scope: !13446)
!13464 = !DILocation(line: 40, column: 37, scope: !13446)
!13465 = !DILocation(line: 40, column: 16, scope: !13446)
!13466 = !DILocation(line: 42, column: 7, scope: !13467)
!13467 = distinct !DILexicalBlock(scope: !13446, file: !13447, line: 42, column: 7)
!13468 = !DILocation(line: 42, column: 14, scope: !13467)
!13469 = !DILocation(line: 42, column: 7, scope: !13446)
!13470 = !DILocation(line: 43, column: 5, scope: !13467)
!13471 = !DILocalVariable(name: "dirp", scope: !13446, file: !13447, line: 44, type: !609)
!13472 = !DILocation(line: 44, column: 8, scope: !13446)
!13473 = !DILocation(line: 44, column: 26, scope: !13446)
!13474 = !DILocation(line: 44, column: 15, scope: !13446)
!13475 = !DILocation(line: 45, column: 7, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13446, file: !13447, line: 45, column: 7)
!13477 = !DILocation(line: 45, column: 7, scope: !13446)
!13478 = !DILocation(line: 46, column: 16, scope: !13476)
!13479 = !DILocation(line: 46, column: 6, scope: !13476)
!13480 = !DILocation(line: 46, column: 14, scope: !13476)
!13481 = !DILocation(line: 46, column: 5, scope: !13476)
!13482 = !DILocalVariable(name: "fdopendir_errno", scope: !13483, file: !13447, line: 49, type: !7)
!13483 = distinct !DILexicalBlock(scope: !13476, file: !13447, line: 48, column: 5)
!13484 = !DILocation(line: 49, column: 11, scope: !13483)
!13485 = !DILocation(line: 49, column: 29, scope: !13483)
!13486 = !DILocation(line: 50, column: 14, scope: !13483)
!13487 = !DILocation(line: 50, column: 7, scope: !13483)
!13488 = !DILocation(line: 51, column: 15, scope: !13483)
!13489 = !DILocation(line: 51, column: 7, scope: !13483)
!13490 = !DILocation(line: 51, column: 13, scope: !13483)
!13491 = !DILocation(line: 53, column: 10, scope: !13446)
!13492 = !DILocation(line: 53, column: 3, scope: !13446)
!13493 = !DILocation(line: 54, column: 1, scope: !13446)
!13494 = distinct !DISubprogram(name: "priv_set_remove_linkdir", scope: !13495, file: !13495, line: 51, type: !1818, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1815, retainedNodes: !143)
!13495 = !DIFile(filename: "./lib/priv-set.h", directory: "/home/mbarbar/clone/coreutils")
!13496 = !DILocation(line: 53, column: 3, scope: !13494)
!13497 = distinct !DISubprogram(name: "priv_set_restore_linkdir", scope: !13495, file: !13495, line: 57, type: !1818, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1815, retainedNodes: !143)
!13498 = !DILocation(line: 59, column: 3, scope: !13497)
!13499 = distinct !DISubprogram(name: "set_program_name", scope: !922, file: !922, line: 39, type: !136, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !884, retainedNodes: !143)
!13500 = !DILocalVariable(name: "argv0", arg: 1, scope: !13499, file: !922, line: 39, type: !115)
!13501 = !DILocation(line: 39, column: 31, scope: !13499)
!13502 = !DILocalVariable(name: "slash", scope: !13499, file: !922, line: 46, type: !115)
!13503 = !DILocation(line: 46, column: 15, scope: !13499)
!13504 = !DILocalVariable(name: "base", scope: !13499, file: !922, line: 47, type: !115)
!13505 = !DILocation(line: 47, column: 15, scope: !13499)
!13506 = !DILocation(line: 51, column: 7, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13499, file: !922, line: 51, column: 7)
!13508 = !DILocation(line: 51, column: 13, scope: !13507)
!13509 = !DILocation(line: 51, column: 7, scope: !13499)
!13510 = !DILocation(line: 55, column: 14, scope: !13511)
!13511 = distinct !DILexicalBlock(scope: !13507, file: !922, line: 52, column: 5)
!13512 = !DILocation(line: 54, column: 7, scope: !13511)
!13513 = !DILocation(line: 56, column: 7, scope: !13511)
!13514 = !DILocation(line: 59, column: 20, scope: !13499)
!13515 = !DILocation(line: 59, column: 11, scope: !13499)
!13516 = !DILocation(line: 59, column: 9, scope: !13499)
!13517 = !DILocation(line: 60, column: 11, scope: !13499)
!13518 = !DILocation(line: 60, column: 17, scope: !13499)
!13519 = !DILocation(line: 60, column: 27, scope: !13499)
!13520 = !DILocation(line: 60, column: 33, scope: !13499)
!13521 = !DILocation(line: 60, column: 39, scope: !13499)
!13522 = !DILocation(line: 60, column: 8, scope: !13499)
!13523 = !DILocation(line: 61, column: 7, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13499, file: !922, line: 61, column: 7)
!13525 = !DILocation(line: 61, column: 14, scope: !13524)
!13526 = !DILocation(line: 61, column: 12, scope: !13524)
!13527 = !DILocation(line: 61, column: 20, scope: !13524)
!13528 = !DILocation(line: 61, column: 25, scope: !13524)
!13529 = !DILocation(line: 61, column: 37, scope: !13524)
!13530 = !DILocation(line: 61, column: 42, scope: !13524)
!13531 = !DILocation(line: 61, column: 28, scope: !13524)
!13532 = !DILocation(line: 61, column: 61, scope: !13524)
!13533 = !DILocation(line: 61, column: 7, scope: !13499)
!13534 = !DILocation(line: 63, column: 15, scope: !13535)
!13535 = distinct !DILexicalBlock(scope: !13524, file: !922, line: 62, column: 5)
!13536 = !DILocation(line: 63, column: 13, scope: !13535)
!13537 = !DILocation(line: 64, column: 20, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13535, file: !922, line: 64, column: 11)
!13539 = !DILocation(line: 64, column: 11, scope: !13538)
!13540 = !DILocation(line: 64, column: 36, scope: !13538)
!13541 = !DILocation(line: 64, column: 11, scope: !13535)
!13542 = !DILocation(line: 66, column: 19, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13538, file: !922, line: 65, column: 9)
!13544 = !DILocation(line: 66, column: 24, scope: !13543)
!13545 = !DILocation(line: 66, column: 17, scope: !13543)
!13546 = !DILocation(line: 70, column: 52, scope: !13543)
!13547 = !DILocation(line: 70, column: 41, scope: !13543)
!13548 = !DILocation(line: 72, column: 9, scope: !13543)
!13549 = !DILocation(line: 73, column: 5, scope: !13535)
!13550 = !DILocation(line: 84, column: 18, scope: !13499)
!13551 = !DILocation(line: 84, column: 16, scope: !13499)
!13552 = !DILocation(line: 90, column: 38, scope: !13499)
!13553 = !DILocation(line: 90, column: 27, scope: !13499)
!13554 = !DILocation(line: 92, column: 1, scope: !13499)
!13555 = distinct !DISubprogram(name: "qcopy_acl", scope: !13556, file: !13556, line: 39, type: !1584, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1820, retainedNodes: !143)
!13556 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!13557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2536, line: 260, size: 256, elements: !13558)
!13558 = !{!13559, !13560, !13561, !13562}
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13557, file: !2536, line: 261, baseType: !160, size: 32)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13557, file: !2536, line: 264, baseType: !2524, size: 64, offset: 64)
!13561 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13557, file: !2536, line: 266, baseType: !2524, size: 64, offset: 128)
!13562 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13557, file: !2536, line: 268, baseType: !120, size: 8, offset: 192)
!13563 = !DILocalVariable(name: "src_name", arg: 1, scope: !13555, file: !13556, line: 39, type: !115)
!13564 = !DILocation(line: 39, column: 24, scope: !13555)
!13565 = !DILocalVariable(name: "source_desc", arg: 2, scope: !13555, file: !13556, line: 39, type: !7)
!13566 = !DILocation(line: 39, column: 38, scope: !13555)
!13567 = !DILocalVariable(name: "dst_name", arg: 3, scope: !13555, file: !13556, line: 39, type: !115)
!13568 = !DILocation(line: 39, column: 63, scope: !13555)
!13569 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !13555, file: !13556, line: 40, type: !7)
!13570 = !DILocation(line: 40, column: 16, scope: !13555)
!13571 = !DILocalVariable(name: "mode", arg: 5, scope: !13555, file: !13556, line: 40, type: !160)
!13572 = !DILocation(line: 40, column: 34, scope: !13555)
!13573 = !DILocalVariable(name: "ctx", scope: !13555, file: !13556, line: 42, type: !13557)
!13574 = !DILocation(line: 42, column: 29, scope: !13555)
!13575 = !DILocalVariable(name: "ret", scope: !13555, file: !13556, line: 43, type: !7)
!13576 = !DILocation(line: 43, column: 7, scope: !13555)
!13577 = !DILocation(line: 45, column: 26, scope: !13555)
!13578 = !DILocation(line: 45, column: 36, scope: !13555)
!13579 = !DILocation(line: 45, column: 49, scope: !13555)
!13580 = !DILocation(line: 45, column: 9, scope: !13555)
!13581 = !DILocation(line: 45, column: 7, scope: !13555)
!13582 = !DILocation(line: 46, column: 7, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13555, file: !13556, line: 46, column: 7)
!13584 = !DILocation(line: 46, column: 11, scope: !13583)
!13585 = !DILocation(line: 46, column: 7, scope: !13555)
!13586 = !DILocation(line: 47, column: 5, scope: !13583)
!13587 = !DILocation(line: 48, column: 32, scope: !13555)
!13588 = !DILocation(line: 48, column: 42, scope: !13555)
!13589 = !DILocation(line: 48, column: 9, scope: !13555)
!13590 = !DILocation(line: 48, column: 7, scope: !13555)
!13591 = !DILocation(line: 49, column: 3, scope: !13555)
!13592 = !DILocation(line: 50, column: 10, scope: !13555)
!13593 = !DILocation(line: 50, column: 3, scope: !13555)
!13594 = !DILocation(line: 51, column: 1, scope: !13555)
!13595 = distinct !DISubprogram(name: "qset_acl", scope: !13596, file: !13596, line: 39, type: !1589, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1822, retainedNodes: !143)
!13596 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mbarbar/clone/coreutils")
!13597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2536, line: 260, size: 256, elements: !13598)
!13598 = !{!13599, !13600, !13601, !13602}
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13597, file: !2536, line: 261, baseType: !160, size: 32)
!13600 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13597, file: !2536, line: 264, baseType: !2524, size: 64, offset: 64)
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13597, file: !2536, line: 266, baseType: !2524, size: 64, offset: 128)
!13602 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13597, file: !2536, line: 268, baseType: !120, size: 8, offset: 192)
!13603 = !DILocalVariable(name: "name", arg: 1, scope: !13595, file: !13596, line: 39, type: !115)
!13604 = !DILocation(line: 39, column: 23, scope: !13595)
!13605 = !DILocalVariable(name: "desc", arg: 2, scope: !13595, file: !13596, line: 39, type: !7)
!13606 = !DILocation(line: 39, column: 33, scope: !13595)
!13607 = !DILocalVariable(name: "mode", arg: 3, scope: !13595, file: !13596, line: 39, type: !160)
!13608 = !DILocation(line: 39, column: 46, scope: !13595)
!13609 = !DILocalVariable(name: "ctx", scope: !13595, file: !13596, line: 41, type: !13597)
!13610 = !DILocation(line: 41, column: 29, scope: !13595)
!13611 = !DILocalVariable(name: "ret", scope: !13595, file: !13596, line: 42, type: !7)
!13612 = !DILocation(line: 42, column: 7, scope: !13595)
!13613 = !DILocation(line: 44, column: 3, scope: !13595)
!13614 = !DILocation(line: 45, column: 14, scope: !13595)
!13615 = !DILocation(line: 45, column: 7, scope: !13595)
!13616 = !DILocation(line: 45, column: 12, scope: !13595)
!13617 = !{!13618, !2986, i64 0}
!13618 = !{!"permission_context", !2986, i64 0, !2999, i64 8, !2999, i64 16, !3110, i64 24}
!13619 = !DILocation(line: 46, column: 32, scope: !13595)
!13620 = !DILocation(line: 46, column: 38, scope: !13595)
!13621 = !DILocation(line: 46, column: 9, scope: !13595)
!13622 = !DILocation(line: 46, column: 7, scope: !13595)
!13623 = !DILocation(line: 47, column: 3, scope: !13595)
!13624 = !DILocation(line: 48, column: 10, scope: !13595)
!13625 = !DILocation(line: 48, column: 3, scope: !13595)
!13626 = distinct !DISubprogram(name: "clone_quoting_options", scope: !954, file: !954, line: 122, type: !950, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13627 = !DILocalVariable(name: "o", arg: 1, scope: !13626, file: !954, line: 122, type: !952)
!13628 = !DILocation(line: 122, column: 48, scope: !13626)
!13629 = !DILocalVariable(name: "e", scope: !13626, file: !954, line: 124, type: !7)
!13630 = !DILocation(line: 124, column: 7, scope: !13626)
!13631 = !DILocation(line: 124, column: 11, scope: !13626)
!13632 = !DILocalVariable(name: "p", scope: !13626, file: !954, line: 125, type: !952)
!13633 = !DILocation(line: 125, column: 27, scope: !13626)
!13634 = !DILocation(line: 125, column: 40, scope: !13626)
!13635 = !DILocation(line: 125, column: 44, scope: !13626)
!13636 = !DILocation(line: 125, column: 31, scope: !13626)
!13637 = !DILocation(line: 127, column: 11, scope: !13626)
!13638 = !DILocation(line: 127, column: 3, scope: !13626)
!13639 = !DILocation(line: 127, column: 9, scope: !13626)
!13640 = !DILocation(line: 128, column: 10, scope: !13626)
!13641 = !DILocation(line: 128, column: 3, scope: !13626)
!13642 = distinct !DISubprogram(name: "get_quoting_style", scope: !954, file: !954, line: 133, type: !962, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13643 = !DILocalVariable(name: "o", arg: 1, scope: !13642, file: !954, line: 133, type: !964)
!13644 = !DILocation(line: 133, column: 50, scope: !13642)
!13645 = !DILocation(line: 135, column: 11, scope: !13642)
!13646 = !DILocation(line: 135, column: 15, scope: !13642)
!13647 = !DILocation(line: 135, column: 46, scope: !13642)
!13648 = !{!13649, !2987, i64 0}
!13649 = !{!"quoting_options", !2987, i64 0, !2986, i64 4, !2987, i64 8, !2999, i64 40, !2999, i64 48}
!13650 = !DILocation(line: 135, column: 3, scope: !13642)
!13651 = distinct !DISubprogram(name: "set_quoting_style", scope: !954, file: !954, line: 141, type: !966, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13652 = !DILocalVariable(name: "o", arg: 1, scope: !13651, file: !954, line: 141, type: !952)
!13653 = !DILocation(line: 141, column: 44, scope: !13651)
!13654 = !DILocalVariable(name: "s", arg: 2, scope: !13651, file: !954, line: 141, type: !928)
!13655 = !DILocation(line: 141, column: 66, scope: !13651)
!13656 = !DILocation(line: 143, column: 47, scope: !13651)
!13657 = !DILocation(line: 143, column: 4, scope: !13651)
!13658 = !DILocation(line: 143, column: 8, scope: !13651)
!13659 = !DILocation(line: 143, column: 39, scope: !13651)
!13660 = !DILocation(line: 143, column: 45, scope: !13651)
!13661 = !DILocation(line: 144, column: 1, scope: !13651)
!13662 = distinct !DISubprogram(name: "set_char_quoting", scope: !954, file: !954, line: 152, type: !968, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13663 = !DILocalVariable(name: "o", arg: 1, scope: !13662, file: !954, line: 152, type: !952)
!13664 = !DILocation(line: 152, column: 43, scope: !13662)
!13665 = !DILocalVariable(name: "c", arg: 2, scope: !13662, file: !954, line: 152, type: !10)
!13666 = !DILocation(line: 152, column: 51, scope: !13662)
!13667 = !DILocalVariable(name: "i", arg: 3, scope: !13662, file: !954, line: 152, type: !7)
!13668 = !DILocation(line: 152, column: 58, scope: !13662)
!13669 = !DILocalVariable(name: "uc", scope: !13662, file: !954, line: 154, type: !468)
!13670 = !DILocation(line: 154, column: 17, scope: !13662)
!13671 = !DILocation(line: 154, column: 22, scope: !13662)
!13672 = !DILocalVariable(name: "p", scope: !13662, file: !954, line: 155, type: !970)
!13673 = !DILocation(line: 155, column: 17, scope: !13662)
!13674 = !DILocation(line: 156, column: 6, scope: !13662)
!13675 = !DILocation(line: 156, column: 10, scope: !13662)
!13676 = !DILocation(line: 156, column: 41, scope: !13662)
!13677 = !DILocation(line: 156, column: 5, scope: !13662)
!13678 = !DILocation(line: 156, column: 59, scope: !13662)
!13679 = !DILocation(line: 156, column: 62, scope: !13662)
!13680 = !DILocation(line: 156, column: 57, scope: !13662)
!13681 = !DILocalVariable(name: "shift", scope: !13662, file: !954, line: 157, type: !7)
!13682 = !DILocation(line: 157, column: 7, scope: !13662)
!13683 = !DILocation(line: 157, column: 15, scope: !13662)
!13684 = !DILocation(line: 157, column: 18, scope: !13662)
!13685 = !DILocalVariable(name: "r", scope: !13662, file: !954, line: 158, type: !7)
!13686 = !DILocation(line: 158, column: 7, scope: !13662)
!13687 = !DILocation(line: 158, column: 13, scope: !13662)
!13688 = !DILocation(line: 158, column: 12, scope: !13662)
!13689 = !DILocation(line: 158, column: 18, scope: !13662)
!13690 = !DILocation(line: 158, column: 15, scope: !13662)
!13691 = !DILocation(line: 158, column: 25, scope: !13662)
!13692 = !DILocation(line: 159, column: 11, scope: !13662)
!13693 = !DILocation(line: 159, column: 13, scope: !13662)
!13694 = !DILocation(line: 159, column: 20, scope: !13662)
!13695 = !DILocation(line: 159, column: 18, scope: !13662)
!13696 = !DILocation(line: 159, column: 26, scope: !13662)
!13697 = !DILocation(line: 159, column: 23, scope: !13662)
!13698 = !DILocation(line: 159, column: 4, scope: !13662)
!13699 = !DILocation(line: 159, column: 6, scope: !13662)
!13700 = !DILocation(line: 160, column: 10, scope: !13662)
!13701 = !DILocation(line: 160, column: 3, scope: !13662)
!13702 = distinct !DISubprogram(name: "set_quoting_flags", scope: !954, file: !954, line: 168, type: !971, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13703 = !DILocalVariable(name: "o", arg: 1, scope: !13702, file: !954, line: 168, type: !952)
!13704 = !DILocation(line: 168, column: 44, scope: !13702)
!13705 = !DILocalVariable(name: "i", arg: 2, scope: !13702, file: !954, line: 168, type: !7)
!13706 = !DILocation(line: 168, column: 51, scope: !13702)
!13707 = !DILocalVariable(name: "r", scope: !13702, file: !954, line: 170, type: !7)
!13708 = !DILocation(line: 170, column: 7, scope: !13702)
!13709 = !DILocation(line: 171, column: 8, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13702, file: !954, line: 171, column: 7)
!13711 = !DILocation(line: 171, column: 7, scope: !13702)
!13712 = !DILocation(line: 172, column: 7, scope: !13710)
!13713 = !DILocation(line: 172, column: 5, scope: !13710)
!13714 = !DILocation(line: 173, column: 7, scope: !13702)
!13715 = !DILocation(line: 173, column: 10, scope: !13702)
!13716 = !{!13649, !2986, i64 4}
!13717 = !DILocation(line: 173, column: 5, scope: !13702)
!13718 = !DILocation(line: 174, column: 14, scope: !13702)
!13719 = !DILocation(line: 174, column: 3, scope: !13702)
!13720 = !DILocation(line: 174, column: 6, scope: !13702)
!13721 = !DILocation(line: 174, column: 12, scope: !13702)
!13722 = !DILocation(line: 175, column: 10, scope: !13702)
!13723 = !DILocation(line: 175, column: 3, scope: !13702)
!13724 = distinct !DISubprogram(name: "set_custom_quoting", scope: !954, file: !954, line: 179, type: !973, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13725 = !DILocalVariable(name: "o", arg: 1, scope: !13724, file: !954, line: 179, type: !952)
!13726 = !DILocation(line: 179, column: 45, scope: !13724)
!13727 = !DILocalVariable(name: "left_quote", arg: 2, scope: !13724, file: !954, line: 180, type: !115)
!13728 = !DILocation(line: 180, column: 33, scope: !13724)
!13729 = !DILocalVariable(name: "right_quote", arg: 3, scope: !13724, file: !954, line: 180, type: !115)
!13730 = !DILocation(line: 180, column: 57, scope: !13724)
!13731 = !DILocation(line: 182, column: 8, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13724, file: !954, line: 182, column: 7)
!13733 = !DILocation(line: 182, column: 7, scope: !13724)
!13734 = !DILocation(line: 183, column: 7, scope: !13732)
!13735 = !DILocation(line: 183, column: 5, scope: !13732)
!13736 = !DILocation(line: 184, column: 3, scope: !13724)
!13737 = !DILocation(line: 184, column: 6, scope: !13724)
!13738 = !DILocation(line: 184, column: 12, scope: !13724)
!13739 = !DILocation(line: 185, column: 8, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13724, file: !954, line: 185, column: 7)
!13741 = !DILocation(line: 185, column: 19, scope: !13740)
!13742 = !DILocation(line: 185, column: 23, scope: !13740)
!13743 = !DILocation(line: 185, column: 7, scope: !13724)
!13744 = !DILocation(line: 186, column: 5, scope: !13740)
!13745 = !DILocation(line: 187, column: 19, scope: !13724)
!13746 = !DILocation(line: 187, column: 3, scope: !13724)
!13747 = !DILocation(line: 187, column: 6, scope: !13724)
!13748 = !DILocation(line: 187, column: 17, scope: !13724)
!13749 = !{!13649, !2999, i64 40}
!13750 = !DILocation(line: 188, column: 20, scope: !13724)
!13751 = !DILocation(line: 188, column: 3, scope: !13724)
!13752 = !DILocation(line: 188, column: 6, scope: !13724)
!13753 = !DILocation(line: 188, column: 18, scope: !13724)
!13754 = !{!13649, !2999, i64 48}
!13755 = !DILocation(line: 189, column: 1, scope: !13724)
!13756 = distinct !DISubprogram(name: "quotearg_buffer", scope: !954, file: !954, line: 784, type: !975, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13757 = !DILocalVariable(name: "buffer", arg: 1, scope: !13756, file: !954, line: 784, type: !9)
!13758 = !DILocation(line: 784, column: 24, scope: !13756)
!13759 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13756, file: !954, line: 784, type: !55)
!13760 = !DILocation(line: 784, column: 39, scope: !13756)
!13761 = !DILocalVariable(name: "arg", arg: 3, scope: !13756, file: !954, line: 785, type: !115)
!13762 = !DILocation(line: 785, column: 30, scope: !13756)
!13763 = !DILocalVariable(name: "argsize", arg: 4, scope: !13756, file: !954, line: 785, type: !55)
!13764 = !DILocation(line: 785, column: 42, scope: !13756)
!13765 = !DILocalVariable(name: "o", arg: 5, scope: !13756, file: !954, line: 786, type: !964)
!13766 = !DILocation(line: 786, column: 48, scope: !13756)
!13767 = !DILocalVariable(name: "p", scope: !13756, file: !954, line: 788, type: !964)
!13768 = !DILocation(line: 788, column: 33, scope: !13756)
!13769 = !DILocation(line: 788, column: 37, scope: !13756)
!13770 = !DILocation(line: 788, column: 41, scope: !13756)
!13771 = !DILocalVariable(name: "e", scope: !13756, file: !954, line: 789, type: !7)
!13772 = !DILocation(line: 789, column: 7, scope: !13756)
!13773 = !DILocation(line: 789, column: 11, scope: !13756)
!13774 = !DILocalVariable(name: "r", scope: !13756, file: !954, line: 790, type: !55)
!13775 = !DILocation(line: 790, column: 10, scope: !13756)
!13776 = !DILocation(line: 790, column: 40, scope: !13756)
!13777 = !DILocation(line: 790, column: 48, scope: !13756)
!13778 = !DILocation(line: 790, column: 60, scope: !13756)
!13779 = !DILocation(line: 790, column: 65, scope: !13756)
!13780 = !DILocation(line: 791, column: 40, scope: !13756)
!13781 = !DILocation(line: 791, column: 43, scope: !13756)
!13782 = !DILocation(line: 791, column: 50, scope: !13756)
!13783 = !DILocation(line: 791, column: 53, scope: !13756)
!13784 = !DILocation(line: 791, column: 60, scope: !13756)
!13785 = !DILocation(line: 791, column: 63, scope: !13756)
!13786 = !DILocation(line: 792, column: 40, scope: !13756)
!13787 = !DILocation(line: 792, column: 43, scope: !13756)
!13788 = !DILocation(line: 792, column: 55, scope: !13756)
!13789 = !DILocation(line: 792, column: 58, scope: !13756)
!13790 = !DILocation(line: 790, column: 14, scope: !13756)
!13791 = !DILocation(line: 793, column: 11, scope: !13756)
!13792 = !DILocation(line: 793, column: 3, scope: !13756)
!13793 = !DILocation(line: 793, column: 9, scope: !13756)
!13794 = !DILocation(line: 794, column: 10, scope: !13756)
!13795 = !DILocation(line: 794, column: 3, scope: !13756)
!13796 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !954, file: !954, line: 256, type: !1022, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !925, retainedNodes: !143)
!13797 = !DILocalVariable(name: "buffer", arg: 1, scope: !13796, file: !954, line: 256, type: !9)
!13798 = !DILocation(line: 256, column: 33, scope: !13796)
!13799 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13796, file: !954, line: 256, type: !55)
!13800 = !DILocation(line: 256, column: 48, scope: !13796)
!13801 = !DILocalVariable(name: "arg", arg: 3, scope: !13796, file: !954, line: 257, type: !115)
!13802 = !DILocation(line: 257, column: 39, scope: !13796)
!13803 = !DILocalVariable(name: "argsize", arg: 4, scope: !13796, file: !954, line: 257, type: !55)
!13804 = !DILocation(line: 257, column: 51, scope: !13796)
!13805 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !13796, file: !954, line: 258, type: !928)
!13806 = !DILocation(line: 258, column: 46, scope: !13796)
!13807 = !DILocalVariable(name: "flags", arg: 6, scope: !13796, file: !954, line: 258, type: !7)
!13808 = !DILocation(line: 258, column: 65, scope: !13796)
!13809 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !13796, file: !954, line: 259, type: !1024)
!13810 = !DILocation(line: 259, column: 47, scope: !13796)
!13811 = !DILocalVariable(name: "left_quote", arg: 8, scope: !13796, file: !954, line: 260, type: !115)
!13812 = !DILocation(line: 260, column: 39, scope: !13796)
!13813 = !DILocalVariable(name: "right_quote", arg: 9, scope: !13796, file: !954, line: 261, type: !115)
!13814 = !DILocation(line: 261, column: 39, scope: !13796)
!13815 = !DILocalVariable(name: "i", scope: !13796, file: !954, line: 263, type: !55)
!13816 = !DILocation(line: 263, column: 10, scope: !13796)
!13817 = !DILocalVariable(name: "len", scope: !13796, file: !954, line: 264, type: !55)
!13818 = !DILocation(line: 264, column: 10, scope: !13796)
!13819 = !DILocalVariable(name: "orig_buffersize", scope: !13796, file: !954, line: 265, type: !55)
!13820 = !DILocation(line: 265, column: 10, scope: !13796)
!13821 = !DILocalVariable(name: "quote_string", scope: !13796, file: !954, line: 266, type: !115)
!13822 = !DILocation(line: 266, column: 15, scope: !13796)
!13823 = !DILocalVariable(name: "quote_string_len", scope: !13796, file: !954, line: 267, type: !55)
!13824 = !DILocation(line: 267, column: 10, scope: !13796)
!13825 = !DILocalVariable(name: "backslash_escapes", scope: !13796, file: !954, line: 268, type: !120)
!13826 = !DILocation(line: 268, column: 8, scope: !13796)
!13827 = !DILocalVariable(name: "unibyte_locale", scope: !13796, file: !954, line: 269, type: !120)
!13828 = !DILocation(line: 269, column: 8, scope: !13796)
!13829 = !DILocation(line: 269, column: 25, scope: !13796)
!13830 = !DILocation(line: 269, column: 36, scope: !13796)
!13831 = !DILocalVariable(name: "elide_outer_quotes", scope: !13796, file: !954, line: 270, type: !120)
!13832 = !DILocation(line: 270, column: 8, scope: !13796)
!13833 = !DILocation(line: 270, column: 30, scope: !13796)
!13834 = !DILocation(line: 270, column: 36, scope: !13796)
!13835 = !DILocation(line: 270, column: 61, scope: !13796)
!13836 = !DILocalVariable(name: "pending_shell_escape_end", scope: !13796, file: !954, line: 271, type: !120)
!13837 = !DILocation(line: 271, column: 8, scope: !13796)
!13838 = !DILocalVariable(name: "encountered_single_quote", scope: !13796, file: !954, line: 272, type: !120)
!13839 = !DILocation(line: 272, column: 8, scope: !13796)
!13840 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !13796, file: !954, line: 273, type: !120)
!13841 = !DILocation(line: 273, column: 8, scope: !13796)
!13842 = !DILocation(line: 273, column: 3, scope: !13796)
!13843 = !DILabel(scope: !13796, name: "process_input", file: !954, line: 314)
!13844 = !DILocation(line: 314, column: 2, scope: !13796)
!13845 = !DILocation(line: 316, column: 11, scope: !13796)
!13846 = !DILocation(line: 316, column: 3, scope: !13796)
!13847 = !DILocation(line: 319, column: 21, scope: !13848)
!13848 = distinct !DILexicalBlock(scope: !13796, file: !954, line: 317, column: 5)
!13849 = !DILocation(line: 320, column: 26, scope: !13848)
!13850 = !DILocation(line: 321, column: 7, scope: !13848)
!13851 = !DILocation(line: 323, column: 12, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13848, file: !954, line: 323, column: 11)
!13853 = !DILocation(line: 323, column: 11, scope: !13848)
!13854 = !DILocation(line: 324, column: 9, scope: !13852)
!13855 = !DILocation(line: 324, column: 9, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13857, file: !954, line: 324, column: 9)
!13857 = distinct !DILexicalBlock(scope: !13852, file: !954, line: 324, column: 9)
!13858 = !DILocation(line: 324, column: 9, scope: !13857)
!13859 = !DILocation(line: 325, column: 25, scope: !13848)
!13860 = !DILocation(line: 326, column: 20, scope: !13848)
!13861 = !DILocation(line: 327, column: 24, scope: !13848)
!13862 = !DILocation(line: 328, column: 7, scope: !13848)
!13863 = !DILocation(line: 331, column: 25, scope: !13848)
!13864 = !DILocation(line: 332, column: 26, scope: !13848)
!13865 = !DILocation(line: 333, column: 7, scope: !13848)
!13866 = !DILocation(line: 339, column: 13, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13868, file: !954, line: 339, column: 13)
!13868 = distinct !DILexicalBlock(scope: !13848, file: !954, line: 338, column: 7)
!13869 = !DILocation(line: 339, column: 27, scope: !13867)
!13870 = !DILocation(line: 339, column: 13, scope: !13868)
!13871 = !DILocation(line: 362, column: 50, scope: !13872)
!13872 = distinct !DILexicalBlock(scope: !13867, file: !954, line: 340, column: 11)
!13873 = !DILocation(line: 362, column: 26, scope: !13872)
!13874 = !DILocation(line: 362, column: 24, scope: !13872)
!13875 = !DILocation(line: 363, column: 51, scope: !13872)
!13876 = !DILocation(line: 363, column: 27, scope: !13872)
!13877 = !DILocation(line: 363, column: 25, scope: !13872)
!13878 = !DILocation(line: 364, column: 11, scope: !13872)
!13879 = !DILocation(line: 365, column: 14, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13868, file: !954, line: 365, column: 13)
!13881 = !DILocation(line: 365, column: 13, scope: !13868)
!13882 = !DILocation(line: 366, column: 31, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13880, file: !954, line: 366, column: 11)
!13884 = !DILocation(line: 366, column: 29, scope: !13883)
!13885 = !DILocation(line: 366, column: 16, scope: !13883)
!13886 = !DILocation(line: 366, column: 44, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13883, file: !954, line: 366, column: 11)
!13888 = !DILocation(line: 366, column: 43, scope: !13887)
!13889 = !DILocation(line: 366, column: 11, scope: !13883)
!13890 = !DILocation(line: 367, column: 13, scope: !13887)
!13891 = !DILocation(line: 367, column: 13, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13893, file: !954, line: 367, column: 13)
!13893 = distinct !DILexicalBlock(scope: !13887, file: !954, line: 367, column: 13)
!13894 = !DILocation(line: 367, column: 13, scope: !13893)
!13895 = !DILocation(line: 366, column: 70, scope: !13887)
!13896 = !DILocation(line: 366, column: 11, scope: !13887)
!13897 = distinct !{!13897, !13889, !13898}
!13898 = !DILocation(line: 367, column: 13, scope: !13883)
!13899 = !DILocation(line: 368, column: 27, scope: !13868)
!13900 = !DILocation(line: 369, column: 24, scope: !13868)
!13901 = !DILocation(line: 369, column: 22, scope: !13868)
!13902 = !DILocation(line: 370, column: 36, scope: !13868)
!13903 = !DILocation(line: 370, column: 28, scope: !13868)
!13904 = !DILocation(line: 370, column: 26, scope: !13868)
!13905 = !DILocation(line: 372, column: 7, scope: !13848)
!13906 = !DILocation(line: 375, column: 25, scope: !13848)
!13907 = !DILocation(line: 376, column: 7, scope: !13848)
!13908 = !DILocation(line: 378, column: 26, scope: !13848)
!13909 = !DILocation(line: 379, column: 7, scope: !13848)
!13910 = !DILocation(line: 381, column: 12, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13848, file: !954, line: 381, column: 11)
!13912 = !DILocation(line: 381, column: 11, scope: !13848)
!13913 = !DILocation(line: 382, column: 27, scope: !13911)
!13914 = !DILocation(line: 382, column: 9, scope: !13911)
!13915 = !DILocation(line: 383, column: 7, scope: !13848)
!13916 = !DILocation(line: 385, column: 21, scope: !13848)
!13917 = !DILocation(line: 386, column: 12, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13848, file: !954, line: 386, column: 11)
!13919 = !DILocation(line: 386, column: 11, scope: !13848)
!13920 = !DILocation(line: 387, column: 9, scope: !13918)
!13921 = !DILocation(line: 387, column: 9, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13923, file: !954, line: 387, column: 9)
!13923 = distinct !DILexicalBlock(scope: !13918, file: !954, line: 387, column: 9)
!13924 = !DILocation(line: 387, column: 9, scope: !13923)
!13925 = !DILocation(line: 388, column: 20, scope: !13848)
!13926 = !DILocation(line: 389, column: 24, scope: !13848)
!13927 = !DILocation(line: 390, column: 7, scope: !13848)
!13928 = !DILocation(line: 393, column: 26, scope: !13848)
!13929 = !DILocation(line: 394, column: 7, scope: !13848)
!13930 = !DILocation(line: 397, column: 7, scope: !13848)
!13931 = !DILocation(line: 400, column: 10, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13796, file: !954, line: 400, column: 3)
!13933 = !DILocation(line: 400, column: 8, scope: !13932)
!13934 = !DILocation(line: 400, column: 19, scope: !13935)
!13935 = distinct !DILexicalBlock(scope: !13932, file: !954, line: 400, column: 3)
!13936 = !DILocation(line: 400, column: 27, scope: !13935)
!13937 = !DILocation(line: 400, column: 41, scope: !13935)
!13938 = !DILocation(line: 400, column: 45, scope: !13935)
!13939 = !DILocation(line: 400, column: 48, scope: !13935)
!13940 = !DILocation(line: 400, column: 58, scope: !13935)
!13941 = !DILocation(line: 400, column: 63, scope: !13935)
!13942 = !DILocation(line: 400, column: 60, scope: !13935)
!13943 = !DILocation(line: 400, column: 16, scope: !13935)
!13944 = !DILocation(line: 400, column: 3, scope: !13932)
!13945 = !DILocalVariable(name: "c", scope: !13946, file: !954, line: 402, type: !468)
!13946 = distinct !DILexicalBlock(scope: !13935, file: !954, line: 401, column: 5)
!13947 = !DILocation(line: 402, column: 21, scope: !13946)
!13948 = !DILocalVariable(name: "esc", scope: !13946, file: !954, line: 403, type: !468)
!13949 = !DILocation(line: 403, column: 21, scope: !13946)
!13950 = !DILocalVariable(name: "is_right_quote", scope: !13946, file: !954, line: 404, type: !120)
!13951 = !DILocation(line: 404, column: 12, scope: !13946)
!13952 = !DILocalVariable(name: "escaping", scope: !13946, file: !954, line: 405, type: !120)
!13953 = !DILocation(line: 405, column: 12, scope: !13946)
!13954 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !13946, file: !954, line: 406, type: !120)
!13955 = !DILocation(line: 406, column: 12, scope: !13946)
!13956 = !DILocation(line: 408, column: 11, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13946, file: !954, line: 408, column: 11)
!13958 = !DILocation(line: 409, column: 11, scope: !13957)
!13959 = !DILocation(line: 409, column: 14, scope: !13957)
!13960 = !DILocation(line: 409, column: 28, scope: !13957)
!13961 = !DILocation(line: 410, column: 11, scope: !13957)
!13962 = !DILocation(line: 410, column: 14, scope: !13957)
!13963 = !DILocation(line: 411, column: 11, scope: !13957)
!13964 = !DILocation(line: 411, column: 15, scope: !13957)
!13965 = !DILocation(line: 411, column: 19, scope: !13957)
!13966 = !DILocation(line: 411, column: 17, scope: !13957)
!13967 = !DILocation(line: 412, column: 19, scope: !13957)
!13968 = !DILocation(line: 412, column: 27, scope: !13957)
!13969 = !DILocation(line: 412, column: 39, scope: !13957)
!13970 = !DILocation(line: 412, column: 46, scope: !13957)
!13971 = !DILocation(line: 412, column: 44, scope: !13957)
!13972 = !DILocation(line: 416, column: 40, scope: !13957)
!13973 = !DILocation(line: 416, column: 32, scope: !13957)
!13974 = !DILocation(line: 416, column: 30, scope: !13957)
!13975 = !DILocation(line: 416, column: 48, scope: !13957)
!13976 = !DILocation(line: 412, column: 15, scope: !13957)
!13977 = !DILocation(line: 417, column: 11, scope: !13957)
!13978 = !DILocation(line: 417, column: 22, scope: !13957)
!13979 = !DILocation(line: 417, column: 28, scope: !13957)
!13980 = !DILocation(line: 417, column: 26, scope: !13957)
!13981 = !DILocation(line: 417, column: 31, scope: !13957)
!13982 = !DILocation(line: 417, column: 45, scope: !13957)
!13983 = !DILocation(line: 417, column: 14, scope: !13957)
!13984 = !DILocation(line: 417, column: 63, scope: !13957)
!13985 = !DILocation(line: 408, column: 11, scope: !13946)
!13986 = !DILocation(line: 419, column: 15, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !954, line: 419, column: 15)
!13988 = distinct !DILexicalBlock(scope: !13957, file: !954, line: 418, column: 9)
!13989 = !DILocation(line: 419, column: 15, scope: !13988)
!13990 = !DILocation(line: 420, column: 13, scope: !13987)
!13991 = !DILocation(line: 421, column: 26, scope: !13988)
!13992 = !DILocation(line: 422, column: 9, scope: !13988)
!13993 = !DILocation(line: 424, column: 11, scope: !13946)
!13994 = !DILocation(line: 424, column: 15, scope: !13946)
!13995 = !DILocation(line: 424, column: 9, scope: !13946)
!13996 = !DILocation(line: 425, column: 15, scope: !13946)
!13997 = !DILocation(line: 425, column: 7, scope: !13946)
!13998 = !DILocation(line: 428, column: 15, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 428, column: 15)
!14000 = distinct !DILexicalBlock(scope: !13946, file: !954, line: 426, column: 9)
!14001 = !DILocation(line: 428, column: 15, scope: !14000)
!14002 = !DILocation(line: 430, column: 15, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13999, file: !954, line: 429, column: 13)
!14004 = !DILocation(line: 430, column: 15, scope: !14005)
!14005 = distinct !DILexicalBlock(scope: !14006, file: !954, line: 430, column: 15)
!14006 = distinct !DILexicalBlock(scope: !14003, file: !954, line: 430, column: 15)
!14007 = !DILocation(line: 430, column: 15, scope: !14006)
!14008 = !DILocation(line: 430, column: 15, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !14006, file: !954, line: 430, column: 15)
!14010 = !DILocation(line: 430, column: 15, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !14009, file: !954, line: 430, column: 15)
!14012 = !DILocation(line: 430, column: 15, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !954, line: 430, column: 15)
!14014 = distinct !DILexicalBlock(scope: !14011, file: !954, line: 430, column: 15)
!14015 = !DILocation(line: 430, column: 15, scope: !14014)
!14016 = !DILocation(line: 430, column: 15, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14018, file: !954, line: 430, column: 15)
!14018 = distinct !DILexicalBlock(scope: !14011, file: !954, line: 430, column: 15)
!14019 = !DILocation(line: 430, column: 15, scope: !14018)
!14020 = !DILocation(line: 430, column: 15, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !14022, file: !954, line: 430, column: 15)
!14022 = distinct !DILexicalBlock(scope: !14011, file: !954, line: 430, column: 15)
!14023 = !DILocation(line: 430, column: 15, scope: !14022)
!14024 = !DILocation(line: 430, column: 15, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14026, file: !954, line: 430, column: 15)
!14026 = distinct !DILexicalBlock(scope: !14006, file: !954, line: 430, column: 15)
!14027 = !DILocation(line: 430, column: 15, scope: !14026)
!14028 = !DILocation(line: 437, column: 19, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14003, file: !954, line: 437, column: 19)
!14030 = !DILocation(line: 437, column: 33, scope: !14029)
!14031 = !DILocation(line: 438, column: 19, scope: !14029)
!14032 = !DILocation(line: 438, column: 22, scope: !14029)
!14033 = !DILocation(line: 438, column: 24, scope: !14029)
!14034 = !DILocation(line: 438, column: 30, scope: !14029)
!14035 = !DILocation(line: 438, column: 28, scope: !14029)
!14036 = !DILocation(line: 438, column: 38, scope: !14029)
!14037 = !DILocation(line: 438, column: 48, scope: !14029)
!14038 = !DILocation(line: 438, column: 52, scope: !14029)
!14039 = !DILocation(line: 438, column: 54, scope: !14029)
!14040 = !DILocation(line: 438, column: 45, scope: !14029)
!14041 = !DILocation(line: 438, column: 59, scope: !14029)
!14042 = !DILocation(line: 438, column: 62, scope: !14029)
!14043 = !DILocation(line: 438, column: 66, scope: !14029)
!14044 = !DILocation(line: 438, column: 68, scope: !14029)
!14045 = !DILocation(line: 438, column: 73, scope: !14029)
!14046 = !DILocation(line: 437, column: 19, scope: !14003)
!14047 = !DILocation(line: 440, column: 19, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14029, file: !954, line: 439, column: 17)
!14049 = !DILocation(line: 440, column: 19, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14051, file: !954, line: 440, column: 19)
!14051 = distinct !DILexicalBlock(scope: !14048, file: !954, line: 440, column: 19)
!14052 = !DILocation(line: 440, column: 19, scope: !14051)
!14053 = !DILocation(line: 441, column: 19, scope: !14048)
!14054 = !DILocation(line: 441, column: 19, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14056, file: !954, line: 441, column: 19)
!14056 = distinct !DILexicalBlock(scope: !14048, file: !954, line: 441, column: 19)
!14057 = !DILocation(line: 441, column: 19, scope: !14056)
!14058 = !DILocation(line: 442, column: 17, scope: !14048)
!14059 = !DILocation(line: 443, column: 17, scope: !14003)
!14060 = !DILocation(line: 448, column: 13, scope: !14003)
!14061 = !DILocation(line: 449, column: 20, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !13999, file: !954, line: 449, column: 20)
!14063 = !DILocation(line: 449, column: 26, scope: !14062)
!14064 = !DILocation(line: 449, column: 20, scope: !13999)
!14065 = !DILocation(line: 450, column: 13, scope: !14062)
!14066 = !DILocation(line: 451, column: 11, scope: !14000)
!14067 = !DILocation(line: 454, column: 19, scope: !14000)
!14068 = !DILocation(line: 454, column: 11, scope: !14000)
!14069 = !DILocation(line: 457, column: 19, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !954, line: 457, column: 19)
!14071 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 455, column: 13)
!14072 = !DILocation(line: 457, column: 19, scope: !14071)
!14073 = !DILocation(line: 458, column: 17, scope: !14070)
!14074 = !DILocation(line: 459, column: 15, scope: !14071)
!14075 = !DILocation(line: 462, column: 20, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14071, file: !954, line: 462, column: 19)
!14077 = !DILocation(line: 462, column: 26, scope: !14076)
!14078 = !DILocation(line: 463, column: 19, scope: !14076)
!14079 = !DILocation(line: 463, column: 22, scope: !14076)
!14080 = !DILocation(line: 463, column: 24, scope: !14076)
!14081 = !DILocation(line: 463, column: 30, scope: !14076)
!14082 = !DILocation(line: 463, column: 28, scope: !14076)
!14083 = !DILocation(line: 463, column: 38, scope: !14076)
!14084 = !DILocation(line: 463, column: 41, scope: !14076)
!14085 = !DILocation(line: 463, column: 45, scope: !14076)
!14086 = !DILocation(line: 463, column: 47, scope: !14076)
!14087 = !DILocation(line: 463, column: 52, scope: !14076)
!14088 = !DILocation(line: 462, column: 19, scope: !14071)
!14089 = !DILocation(line: 464, column: 25, scope: !14076)
!14090 = !DILocation(line: 464, column: 29, scope: !14076)
!14091 = !DILocation(line: 464, column: 31, scope: !14076)
!14092 = !DILocation(line: 464, column: 17, scope: !14076)
!14093 = !DILocation(line: 471, column: 25, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !954, line: 471, column: 25)
!14095 = distinct !DILexicalBlock(scope: !14076, file: !954, line: 465, column: 19)
!14096 = !DILocation(line: 471, column: 25, scope: !14095)
!14097 = !DILocation(line: 472, column: 23, scope: !14094)
!14098 = !DILocation(line: 473, column: 25, scope: !14095)
!14099 = !DILocation(line: 473, column: 29, scope: !14095)
!14100 = !DILocation(line: 473, column: 31, scope: !14095)
!14101 = !DILocation(line: 473, column: 23, scope: !14095)
!14102 = !DILocation(line: 474, column: 23, scope: !14095)
!14103 = !DILocation(line: 475, column: 21, scope: !14095)
!14104 = !DILocation(line: 475, column: 21, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14106, file: !954, line: 475, column: 21)
!14106 = distinct !DILexicalBlock(scope: !14095, file: !954, line: 475, column: 21)
!14107 = !DILocation(line: 475, column: 21, scope: !14106)
!14108 = !DILocation(line: 476, column: 21, scope: !14095)
!14109 = !DILocation(line: 476, column: 21, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14111, file: !954, line: 476, column: 21)
!14111 = distinct !DILexicalBlock(scope: !14095, file: !954, line: 476, column: 21)
!14112 = !DILocation(line: 476, column: 21, scope: !14111)
!14113 = !DILocation(line: 477, column: 21, scope: !14095)
!14114 = !DILocation(line: 477, column: 21, scope: !14115)
!14115 = distinct !DILexicalBlock(scope: !14116, file: !954, line: 477, column: 21)
!14116 = distinct !DILexicalBlock(scope: !14095, file: !954, line: 477, column: 21)
!14117 = !DILocation(line: 477, column: 21, scope: !14116)
!14118 = !DILocation(line: 478, column: 21, scope: !14095)
!14119 = !DILocation(line: 478, column: 21, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14121, file: !954, line: 478, column: 21)
!14121 = distinct !DILexicalBlock(scope: !14095, file: !954, line: 478, column: 21)
!14122 = !DILocation(line: 478, column: 21, scope: !14121)
!14123 = !DILocation(line: 479, column: 21, scope: !14095)
!14124 = !DILocation(line: 482, column: 21, scope: !14095)
!14125 = !DILocation(line: 483, column: 19, scope: !14095)
!14126 = !DILocation(line: 484, column: 15, scope: !14071)
!14127 = !DILocation(line: 487, column: 15, scope: !14071)
!14128 = !DILocation(line: 489, column: 11, scope: !14000)
!14129 = !DILocation(line: 491, column: 24, scope: !14000)
!14130 = !DILocation(line: 491, column: 31, scope: !14000)
!14131 = !DILocation(line: 492, column: 24, scope: !14000)
!14132 = !DILocation(line: 492, column: 31, scope: !14000)
!14133 = !DILocation(line: 493, column: 24, scope: !14000)
!14134 = !DILocation(line: 493, column: 31, scope: !14000)
!14135 = !DILocation(line: 494, column: 24, scope: !14000)
!14136 = !DILocation(line: 494, column: 31, scope: !14000)
!14137 = !DILocation(line: 495, column: 24, scope: !14000)
!14138 = !DILocation(line: 495, column: 31, scope: !14000)
!14139 = !DILocation(line: 496, column: 24, scope: !14000)
!14140 = !DILocation(line: 496, column: 31, scope: !14000)
!14141 = !DILocation(line: 497, column: 24, scope: !14000)
!14142 = !DILocation(line: 497, column: 31, scope: !14000)
!14143 = !DILocation(line: 498, column: 26, scope: !14000)
!14144 = !DILocation(line: 498, column: 24, scope: !14000)
!14145 = !DILocation(line: 500, column: 15, scope: !14146)
!14146 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 500, column: 15)
!14147 = !DILocation(line: 500, column: 29, scope: !14146)
!14148 = !DILocation(line: 500, column: 15, scope: !14000)
!14149 = !DILocation(line: 502, column: 19, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !954, line: 502, column: 19)
!14151 = distinct !DILexicalBlock(scope: !14146, file: !954, line: 501, column: 13)
!14152 = !DILocation(line: 502, column: 19, scope: !14151)
!14153 = !DILocation(line: 503, column: 17, scope: !14150)
!14154 = !DILocation(line: 504, column: 15, scope: !14151)
!14155 = !DILocation(line: 509, column: 15, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 509, column: 15)
!14157 = !DILocation(line: 509, column: 33, scope: !14156)
!14158 = !DILocation(line: 509, column: 36, scope: !14156)
!14159 = !DILocation(line: 509, column: 55, scope: !14156)
!14160 = !DILocation(line: 509, column: 58, scope: !14156)
!14161 = !DILocation(line: 509, column: 15, scope: !14000)
!14162 = !DILocation(line: 510, column: 13, scope: !14156)
!14163 = !DILabel(scope: !14000, name: "c_and_shell_escape", file: !954, line: 512)
!14164 = !DILocation(line: 512, column: 9, scope: !14000)
!14165 = !DILocation(line: 513, column: 15, scope: !14166)
!14166 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 513, column: 15)
!14167 = !DILocation(line: 513, column: 29, scope: !14166)
!14168 = !DILocation(line: 514, column: 15, scope: !14166)
!14169 = !DILocation(line: 514, column: 18, scope: !14166)
!14170 = !DILocation(line: 513, column: 15, scope: !14000)
!14171 = !DILocation(line: 515, column: 13, scope: !14166)
!14172 = !DILabel(scope: !14000, name: "c_escape", file: !954, line: 517)
!14173 = !DILocation(line: 517, column: 9, scope: !14000)
!14174 = !DILocation(line: 518, column: 15, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 518, column: 15)
!14176 = !DILocation(line: 518, column: 15, scope: !14000)
!14177 = !DILocation(line: 520, column: 19, scope: !14178)
!14178 = distinct !DILexicalBlock(scope: !14175, file: !954, line: 519, column: 13)
!14179 = !DILocation(line: 520, column: 17, scope: !14178)
!14180 = !DILocation(line: 521, column: 15, scope: !14178)
!14181 = !DILocation(line: 523, column: 11, scope: !14000)
!14182 = !DILocation(line: 526, column: 18, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 526, column: 15)
!14184 = !DILocation(line: 526, column: 26, scope: !14183)
!14185 = !DILocation(line: 526, column: 15, scope: !14000)
!14186 = !DILocation(line: 526, column: 40, scope: !14183)
!14187 = !DILocation(line: 526, column: 47, scope: !14183)
!14188 = !DILocation(line: 526, column: 57, scope: !14183)
!14189 = !DILocation(line: 526, column: 65, scope: !14183)
!14190 = !DILocation(line: 527, column: 13, scope: !14183)
!14191 = !DILocation(line: 528, column: 11, scope: !14000)
!14192 = !DILocation(line: 530, column: 15, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 530, column: 15)
!14194 = !DILocation(line: 530, column: 17, scope: !14193)
!14195 = !DILocation(line: 530, column: 15, scope: !14000)
!14196 = !DILocation(line: 531, column: 13, scope: !14193)
!14197 = !DILocation(line: 532, column: 11, scope: !14000)
!14198 = !DILocation(line: 534, column: 36, scope: !14000)
!14199 = !DILocation(line: 535, column: 11, scope: !14000)
!14200 = !DILocation(line: 548, column: 15, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 548, column: 15)
!14202 = !DILocation(line: 548, column: 29, scope: !14201)
!14203 = !DILocation(line: 549, column: 15, scope: !14201)
!14204 = !DILocation(line: 549, column: 18, scope: !14201)
!14205 = !DILocation(line: 548, column: 15, scope: !14000)
!14206 = !DILocation(line: 550, column: 13, scope: !14201)
!14207 = !DILocation(line: 551, column: 11, scope: !14000)
!14208 = !DILocation(line: 554, column: 36, scope: !14000)
!14209 = !DILocation(line: 555, column: 36, scope: !14000)
!14210 = !DILocation(line: 556, column: 15, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 556, column: 15)
!14212 = !DILocation(line: 556, column: 29, scope: !14211)
!14213 = !DILocation(line: 556, column: 15, scope: !14000)
!14214 = !DILocation(line: 558, column: 19, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !954, line: 558, column: 19)
!14216 = distinct !DILexicalBlock(scope: !14211, file: !954, line: 557, column: 13)
!14217 = !DILocation(line: 558, column: 19, scope: !14216)
!14218 = !DILocation(line: 559, column: 17, scope: !14215)
!14219 = !DILocation(line: 561, column: 19, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !14216, file: !954, line: 561, column: 19)
!14221 = !DILocation(line: 561, column: 30, scope: !14220)
!14222 = !DILocation(line: 561, column: 35, scope: !14220)
!14223 = !DILocation(line: 561, column: 19, scope: !14216)
!14224 = !DILocation(line: 566, column: 37, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14220, file: !954, line: 562, column: 17)
!14226 = !DILocation(line: 566, column: 35, scope: !14225)
!14227 = !DILocation(line: 567, column: 30, scope: !14225)
!14228 = !DILocation(line: 568, column: 17, scope: !14225)
!14229 = !DILocation(line: 570, column: 15, scope: !14216)
!14230 = !DILocation(line: 570, column: 15, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14232, file: !954, line: 570, column: 15)
!14232 = distinct !DILexicalBlock(scope: !14216, file: !954, line: 570, column: 15)
!14233 = !DILocation(line: 570, column: 15, scope: !14232)
!14234 = !DILocation(line: 571, column: 15, scope: !14216)
!14235 = !DILocation(line: 571, column: 15, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14237, file: !954, line: 571, column: 15)
!14237 = distinct !DILexicalBlock(scope: !14216, file: !954, line: 571, column: 15)
!14238 = !DILocation(line: 571, column: 15, scope: !14237)
!14239 = !DILocation(line: 572, column: 15, scope: !14216)
!14240 = !DILocation(line: 572, column: 15, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !954, line: 572, column: 15)
!14242 = distinct !DILexicalBlock(scope: !14216, file: !954, line: 572, column: 15)
!14243 = !DILocation(line: 572, column: 15, scope: !14242)
!14244 = !DILocation(line: 573, column: 40, scope: !14216)
!14245 = !DILocation(line: 574, column: 13, scope: !14216)
!14246 = !DILocation(line: 575, column: 11, scope: !14000)
!14247 = !DILocation(line: 599, column: 36, scope: !14000)
!14248 = !DILocation(line: 600, column: 11, scope: !14000)
!14249 = !DILocalVariable(name: "m", scope: !14250, file: !954, line: 610, type: !55)
!14250 = distinct !DILexicalBlock(scope: !14000, file: !954, line: 608, column: 11)
!14251 = !DILocation(line: 610, column: 20, scope: !14250)
!14252 = !DILocalVariable(name: "printable", scope: !14250, file: !954, line: 612, type: !120)
!14253 = !DILocation(line: 612, column: 18, scope: !14250)
!14254 = !DILocation(line: 614, column: 17, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14250, file: !954, line: 614, column: 17)
!14256 = !DILocation(line: 614, column: 17, scope: !14250)
!14257 = !DILocation(line: 616, column: 19, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14255, file: !954, line: 615, column: 15)
!14259 = !DILocation(line: 617, column: 29, scope: !14258)
!14260 = !DILocation(line: 617, column: 41, scope: !14258)
!14261 = !DILocation(line: 617, column: 27, scope: !14258)
!14262 = !DILocation(line: 618, column: 15, scope: !14258)
!14263 = !DILocalVariable(name: "mbstate", scope: !14264, file: !954, line: 621, type: !1028)
!14264 = distinct !DILexicalBlock(scope: !14255, file: !954, line: 620, column: 15)
!14265 = !DILocation(line: 621, column: 27, scope: !14264)
!14266 = !DILocation(line: 622, column: 17, scope: !14264)
!14267 = !DILocation(line: 624, column: 19, scope: !14264)
!14268 = !DILocation(line: 625, column: 27, scope: !14264)
!14269 = !DILocation(line: 626, column: 21, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14264, file: !954, line: 626, column: 21)
!14271 = !DILocation(line: 626, column: 29, scope: !14270)
!14272 = !DILocation(line: 626, column: 21, scope: !14264)
!14273 = !DILocation(line: 627, column: 37, scope: !14270)
!14274 = !DILocation(line: 627, column: 29, scope: !14270)
!14275 = !DILocation(line: 627, column: 27, scope: !14270)
!14276 = !DILocation(line: 627, column: 19, scope: !14270)
!14277 = !DILocation(line: 629, column: 17, scope: !14264)
!14278 = !DILocalVariable(name: "w", scope: !14279, file: !954, line: 631, type: !1043)
!14279 = distinct !DILexicalBlock(scope: !14264, file: !954, line: 630, column: 19)
!14280 = !DILocation(line: 631, column: 29, scope: !14279)
!14281 = !DILocalVariable(name: "bytes", scope: !14279, file: !954, line: 632, type: !55)
!14282 = !DILocation(line: 632, column: 28, scope: !14279)
!14283 = !DILocation(line: 632, column: 50, scope: !14279)
!14284 = !DILocation(line: 632, column: 54, scope: !14279)
!14285 = !DILocation(line: 632, column: 58, scope: !14279)
!14286 = !DILocation(line: 632, column: 56, scope: !14279)
!14287 = !DILocation(line: 633, column: 45, scope: !14279)
!14288 = !DILocation(line: 633, column: 56, scope: !14279)
!14289 = !DILocation(line: 633, column: 60, scope: !14279)
!14290 = !DILocation(line: 633, column: 58, scope: !14279)
!14291 = !DILocation(line: 633, column: 53, scope: !14279)
!14292 = !DILocation(line: 632, column: 36, scope: !14279)
!14293 = !DILocation(line: 634, column: 25, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14279, file: !954, line: 634, column: 25)
!14295 = !DILocation(line: 634, column: 31, scope: !14294)
!14296 = !DILocation(line: 634, column: 25, scope: !14279)
!14297 = !DILocation(line: 635, column: 23, scope: !14294)
!14298 = !DILocation(line: 636, column: 30, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14294, file: !954, line: 636, column: 30)
!14300 = !DILocation(line: 636, column: 36, scope: !14299)
!14301 = !DILocation(line: 636, column: 30, scope: !14294)
!14302 = !DILocation(line: 638, column: 35, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14299, file: !954, line: 637, column: 23)
!14304 = !DILocation(line: 639, column: 25, scope: !14303)
!14305 = !DILocation(line: 641, column: 30, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14299, file: !954, line: 641, column: 30)
!14307 = !DILocation(line: 641, column: 36, scope: !14306)
!14308 = !DILocation(line: 641, column: 30, scope: !14299)
!14309 = !DILocation(line: 643, column: 35, scope: !14310)
!14310 = distinct !DILexicalBlock(scope: !14306, file: !954, line: 642, column: 23)
!14311 = !DILocation(line: 644, column: 25, scope: !14310)
!14312 = !DILocation(line: 644, column: 32, scope: !14310)
!14313 = !DILocation(line: 644, column: 36, scope: !14310)
!14314 = !DILocation(line: 644, column: 34, scope: !14310)
!14315 = !DILocation(line: 644, column: 40, scope: !14310)
!14316 = !DILocation(line: 644, column: 38, scope: !14310)
!14317 = !DILocation(line: 644, column: 48, scope: !14310)
!14318 = !DILocation(line: 644, column: 51, scope: !14310)
!14319 = !DILocation(line: 644, column: 55, scope: !14310)
!14320 = !DILocation(line: 644, column: 59, scope: !14310)
!14321 = !DILocation(line: 644, column: 57, scope: !14310)
!14322 = !DILocation(line: 0, scope: !14310)
!14323 = !DILocation(line: 645, column: 28, scope: !14310)
!14324 = distinct !{!14324, !14311, !14323}
!14325 = !DILocation(line: 646, column: 25, scope: !14310)
!14326 = !DILocation(line: 654, column: 44, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14328, file: !954, line: 654, column: 29)
!14328 = distinct !DILexicalBlock(scope: !14306, file: !954, line: 649, column: 23)
!14329 = !DILocation(line: 655, column: 29, scope: !14327)
!14330 = !DILocation(line: 655, column: 32, scope: !14327)
!14331 = !DILocation(line: 655, column: 46, scope: !14327)
!14332 = !DILocation(line: 654, column: 29, scope: !14328)
!14333 = !DILocalVariable(name: "j", scope: !14334, file: !954, line: 657, type: !55)
!14334 = distinct !DILexicalBlock(scope: !14327, file: !954, line: 656, column: 27)
!14335 = !DILocation(line: 657, column: 36, scope: !14334)
!14336 = !DILocation(line: 658, column: 36, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14334, file: !954, line: 658, column: 29)
!14338 = !DILocation(line: 658, column: 34, scope: !14337)
!14339 = !DILocation(line: 658, column: 41, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14337, file: !954, line: 658, column: 29)
!14341 = !DILocation(line: 658, column: 45, scope: !14340)
!14342 = !DILocation(line: 658, column: 43, scope: !14340)
!14343 = !DILocation(line: 658, column: 29, scope: !14337)
!14344 = !DILocation(line: 659, column: 39, scope: !14340)
!14345 = !DILocation(line: 659, column: 43, scope: !14340)
!14346 = !DILocation(line: 659, column: 47, scope: !14340)
!14347 = !DILocation(line: 659, column: 45, scope: !14340)
!14348 = !DILocation(line: 659, column: 51, scope: !14340)
!14349 = !DILocation(line: 659, column: 49, scope: !14340)
!14350 = !DILocation(line: 659, column: 31, scope: !14340)
!14351 = !DILocation(line: 663, column: 35, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14340, file: !954, line: 660, column: 33)
!14353 = !DILocation(line: 666, column: 35, scope: !14352)
!14354 = !DILocation(line: 667, column: 33, scope: !14352)
!14355 = !DILocation(line: 658, column: 53, scope: !14340)
!14356 = !DILocation(line: 658, column: 29, scope: !14340)
!14357 = distinct !{!14357, !14343, !14358}
!14358 = !DILocation(line: 667, column: 33, scope: !14337)
!14359 = !DILocation(line: 668, column: 27, scope: !14334)
!14360 = !DILocation(line: 670, column: 41, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14328, file: !954, line: 670, column: 29)
!14362 = !DILocation(line: 670, column: 31, scope: !14361)
!14363 = !DILocation(line: 670, column: 29, scope: !14328)
!14364 = !DILocation(line: 671, column: 37, scope: !14361)
!14365 = !DILocation(line: 671, column: 27, scope: !14361)
!14366 = !DILocation(line: 672, column: 30, scope: !14328)
!14367 = !DILocation(line: 672, column: 27, scope: !14328)
!14368 = !DILocation(line: 674, column: 19, scope: !14279)
!14369 = !DILocation(line: 675, column: 26, scope: !14264)
!14370 = !DILocation(line: 675, column: 24, scope: !14264)
!14371 = distinct !{!14371, !14277, !14372}
!14372 = !DILocation(line: 675, column: 44, scope: !14264)
!14373 = !DILocation(line: 678, column: 40, scope: !14250)
!14374 = !DILocation(line: 678, column: 38, scope: !14250)
!14375 = !DILocation(line: 680, column: 21, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !14250, file: !954, line: 680, column: 17)
!14377 = !DILocation(line: 680, column: 19, scope: !14376)
!14378 = !DILocation(line: 680, column: 23, scope: !14376)
!14379 = !DILocation(line: 680, column: 27, scope: !14376)
!14380 = !DILocation(line: 680, column: 45, scope: !14376)
!14381 = !DILocation(line: 680, column: 50, scope: !14376)
!14382 = !DILocation(line: 680, column: 17, scope: !14250)
!14383 = !DILocalVariable(name: "ilim", scope: !14384, file: !954, line: 684, type: !55)
!14384 = distinct !DILexicalBlock(scope: !14376, file: !954, line: 681, column: 15)
!14385 = !DILocation(line: 684, column: 24, scope: !14384)
!14386 = !DILocation(line: 684, column: 31, scope: !14384)
!14387 = !DILocation(line: 684, column: 35, scope: !14384)
!14388 = !DILocation(line: 684, column: 33, scope: !14384)
!14389 = !DILocation(line: 686, column: 17, scope: !14384)
!14390 = !DILocation(line: 688, column: 25, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14392, file: !954, line: 688, column: 25)
!14392 = distinct !DILexicalBlock(scope: !14393, file: !954, line: 687, column: 19)
!14393 = distinct !DILexicalBlock(scope: !14394, file: !954, line: 686, column: 17)
!14394 = distinct !DILexicalBlock(scope: !14384, file: !954, line: 686, column: 17)
!14395 = !DILocation(line: 688, column: 43, scope: !14391)
!14396 = !DILocation(line: 688, column: 48, scope: !14391)
!14397 = !DILocation(line: 688, column: 25, scope: !14392)
!14398 = !DILocation(line: 690, column: 25, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14391, file: !954, line: 689, column: 23)
!14400 = !DILocation(line: 690, column: 25, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14402, file: !954, line: 690, column: 25)
!14402 = distinct !DILexicalBlock(scope: !14399, file: !954, line: 690, column: 25)
!14403 = !DILocation(line: 690, column: 25, scope: !14402)
!14404 = !DILocation(line: 690, column: 25, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14402, file: !954, line: 690, column: 25)
!14406 = !DILocation(line: 690, column: 25, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14405, file: !954, line: 690, column: 25)
!14408 = !DILocation(line: 690, column: 25, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14410, file: !954, line: 690, column: 25)
!14410 = distinct !DILexicalBlock(scope: !14407, file: !954, line: 690, column: 25)
!14411 = !DILocation(line: 690, column: 25, scope: !14410)
!14412 = !DILocation(line: 690, column: 25, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14414, file: !954, line: 690, column: 25)
!14414 = distinct !DILexicalBlock(scope: !14407, file: !954, line: 690, column: 25)
!14415 = !DILocation(line: 690, column: 25, scope: !14414)
!14416 = !DILocation(line: 690, column: 25, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !954, line: 690, column: 25)
!14418 = distinct !DILexicalBlock(scope: !14407, file: !954, line: 690, column: 25)
!14419 = !DILocation(line: 690, column: 25, scope: !14418)
!14420 = !DILocation(line: 690, column: 25, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !954, line: 690, column: 25)
!14422 = distinct !DILexicalBlock(scope: !14402, file: !954, line: 690, column: 25)
!14423 = !DILocation(line: 690, column: 25, scope: !14422)
!14424 = !DILocation(line: 691, column: 25, scope: !14399)
!14425 = !DILocation(line: 691, column: 25, scope: !14426)
!14426 = distinct !DILexicalBlock(scope: !14427, file: !954, line: 691, column: 25)
!14427 = distinct !DILexicalBlock(scope: !14399, file: !954, line: 691, column: 25)
!14428 = !DILocation(line: 691, column: 25, scope: !14427)
!14429 = !DILocation(line: 692, column: 25, scope: !14399)
!14430 = !DILocation(line: 692, column: 25, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14432, file: !954, line: 692, column: 25)
!14432 = distinct !DILexicalBlock(scope: !14399, file: !954, line: 692, column: 25)
!14433 = !DILocation(line: 692, column: 25, scope: !14432)
!14434 = !DILocation(line: 693, column: 36, scope: !14399)
!14435 = !DILocation(line: 693, column: 38, scope: !14399)
!14436 = !DILocation(line: 693, column: 33, scope: !14399)
!14437 = !DILocation(line: 693, column: 29, scope: !14399)
!14438 = !DILocation(line: 693, column: 27, scope: !14399)
!14439 = !DILocation(line: 694, column: 23, scope: !14399)
!14440 = !DILocation(line: 695, column: 30, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14391, file: !954, line: 695, column: 30)
!14442 = !DILocation(line: 695, column: 30, scope: !14391)
!14443 = !DILocation(line: 697, column: 25, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14441, file: !954, line: 696, column: 23)
!14445 = !DILocation(line: 697, column: 25, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14447, file: !954, line: 697, column: 25)
!14447 = distinct !DILexicalBlock(scope: !14444, file: !954, line: 697, column: 25)
!14448 = !DILocation(line: 697, column: 25, scope: !14447)
!14449 = !DILocation(line: 698, column: 40, scope: !14444)
!14450 = !DILocation(line: 699, column: 23, scope: !14444)
!14451 = !DILocation(line: 700, column: 25, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14392, file: !954, line: 700, column: 25)
!14453 = !DILocation(line: 700, column: 33, scope: !14452)
!14454 = !DILocation(line: 700, column: 35, scope: !14452)
!14455 = !DILocation(line: 700, column: 30, scope: !14452)
!14456 = !DILocation(line: 700, column: 25, scope: !14392)
!14457 = !DILocation(line: 701, column: 23, scope: !14452)
!14458 = !DILocation(line: 702, column: 21, scope: !14392)
!14459 = !DILocation(line: 702, column: 21, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14461, file: !954, line: 702, column: 21)
!14461 = distinct !DILexicalBlock(scope: !14392, file: !954, line: 702, column: 21)
!14462 = !DILocation(line: 702, column: 21, scope: !14461)
!14463 = !DILocation(line: 702, column: 21, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14460, file: !954, line: 702, column: 21)
!14465 = !DILocation(line: 702, column: 21, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14467, file: !954, line: 702, column: 21)
!14467 = distinct !DILexicalBlock(scope: !14464, file: !954, line: 702, column: 21)
!14468 = !DILocation(line: 702, column: 21, scope: !14467)
!14469 = !DILocation(line: 702, column: 21, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14471, file: !954, line: 702, column: 21)
!14471 = distinct !DILexicalBlock(scope: !14464, file: !954, line: 702, column: 21)
!14472 = !DILocation(line: 702, column: 21, scope: !14471)
!14473 = !DILocation(line: 703, column: 21, scope: !14392)
!14474 = !DILocation(line: 703, column: 21, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14476, file: !954, line: 703, column: 21)
!14476 = distinct !DILexicalBlock(scope: !14392, file: !954, line: 703, column: 21)
!14477 = !DILocation(line: 703, column: 21, scope: !14476)
!14478 = !DILocation(line: 704, column: 25, scope: !14392)
!14479 = !DILocation(line: 704, column: 29, scope: !14392)
!14480 = !DILocation(line: 704, column: 23, scope: !14392)
!14481 = !DILocation(line: 686, column: 17, scope: !14393)
!14482 = distinct !{!14482, !14483, !14484}
!14483 = !DILocation(line: 686, column: 17, scope: !14394)
!14484 = !DILocation(line: 705, column: 19, scope: !14394)
!14485 = !DILocation(line: 707, column: 17, scope: !14384)
!14486 = !DILocation(line: 710, column: 9, scope: !14000)
!14487 = !DILocation(line: 712, column: 16, scope: !14488)
!14488 = distinct !DILexicalBlock(scope: !13946, file: !954, line: 712, column: 11)
!14489 = !DILocation(line: 712, column: 34, scope: !14488)
!14490 = !DILocation(line: 712, column: 37, scope: !14488)
!14491 = !DILocation(line: 712, column: 51, scope: !14488)
!14492 = !DILocation(line: 713, column: 15, scope: !14488)
!14493 = !DILocation(line: 713, column: 18, scope: !14488)
!14494 = !DILocation(line: 714, column: 14, scope: !14488)
!14495 = !DILocation(line: 714, column: 17, scope: !14488)
!14496 = !DILocation(line: 715, column: 14, scope: !14488)
!14497 = !DILocation(line: 715, column: 17, scope: !14488)
!14498 = !DILocation(line: 715, column: 33, scope: !14488)
!14499 = !DILocation(line: 715, column: 35, scope: !14488)
!14500 = !DILocation(line: 715, column: 51, scope: !14488)
!14501 = !DILocation(line: 715, column: 53, scope: !14488)
!14502 = !DILocation(line: 715, column: 47, scope: !14488)
!14503 = !DILocation(line: 715, column: 65, scope: !14488)
!14504 = !DILocation(line: 716, column: 11, scope: !14488)
!14505 = !DILocation(line: 716, column: 15, scope: !14488)
!14506 = !DILocation(line: 712, column: 11, scope: !13946)
!14507 = !DILocation(line: 717, column: 9, scope: !14488)
!14508 = !DILabel(scope: !13946, name: "store_escape", file: !954, line: 719)
!14509 = !DILocation(line: 719, column: 5, scope: !13946)
!14510 = !DILocation(line: 720, column: 7, scope: !13946)
!14511 = !DILocation(line: 720, column: 7, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14513, file: !954, line: 720, column: 7)
!14513 = distinct !DILexicalBlock(scope: !13946, file: !954, line: 720, column: 7)
!14514 = !DILocation(line: 720, column: 7, scope: !14513)
!14515 = !DILocation(line: 720, column: 7, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14513, file: !954, line: 720, column: 7)
!14517 = !DILocation(line: 720, column: 7, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14516, file: !954, line: 720, column: 7)
!14519 = !DILocation(line: 720, column: 7, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !954, line: 720, column: 7)
!14521 = distinct !DILexicalBlock(scope: !14518, file: !954, line: 720, column: 7)
!14522 = !DILocation(line: 720, column: 7, scope: !14521)
!14523 = !DILocation(line: 720, column: 7, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14525, file: !954, line: 720, column: 7)
!14525 = distinct !DILexicalBlock(scope: !14518, file: !954, line: 720, column: 7)
!14526 = !DILocation(line: 720, column: 7, scope: !14525)
!14527 = !DILocation(line: 720, column: 7, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14529, file: !954, line: 720, column: 7)
!14529 = distinct !DILexicalBlock(scope: !14518, file: !954, line: 720, column: 7)
!14530 = !DILocation(line: 720, column: 7, scope: !14529)
!14531 = !DILocation(line: 720, column: 7, scope: !14532)
!14532 = distinct !DILexicalBlock(scope: !14533, file: !954, line: 720, column: 7)
!14533 = distinct !DILexicalBlock(scope: !14513, file: !954, line: 720, column: 7)
!14534 = !DILocation(line: 720, column: 7, scope: !14533)
!14535 = !DILabel(scope: !13946, name: "store_c", file: !954, line: 722)
!14536 = !DILocation(line: 722, column: 5, scope: !13946)
!14537 = !DILocation(line: 723, column: 7, scope: !13946)
!14538 = !DILocation(line: 723, column: 7, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14540, file: !954, line: 723, column: 7)
!14540 = distinct !DILexicalBlock(scope: !13946, file: !954, line: 723, column: 7)
!14541 = !DILocation(line: 723, column: 7, scope: !14540)
!14542 = !DILocation(line: 723, column: 7, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14539, file: !954, line: 723, column: 7)
!14544 = !DILocation(line: 723, column: 7, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14546, file: !954, line: 723, column: 7)
!14546 = distinct !DILexicalBlock(scope: !14543, file: !954, line: 723, column: 7)
!14547 = !DILocation(line: 723, column: 7, scope: !14546)
!14548 = !DILocation(line: 723, column: 7, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14550, file: !954, line: 723, column: 7)
!14550 = distinct !DILexicalBlock(scope: !14543, file: !954, line: 723, column: 7)
!14551 = !DILocation(line: 723, column: 7, scope: !14550)
!14552 = !DILocation(line: 724, column: 7, scope: !13946)
!14553 = !DILocation(line: 724, column: 7, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14555, file: !954, line: 724, column: 7)
!14555 = distinct !DILexicalBlock(scope: !13946, file: !954, line: 724, column: 7)
!14556 = !DILocation(line: 724, column: 7, scope: !14555)
!14557 = !DILocation(line: 726, column: 13, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !13946, file: !954, line: 726, column: 11)
!14559 = !DILocation(line: 726, column: 11, scope: !13946)
!14560 = !DILocation(line: 727, column: 38, scope: !14558)
!14561 = !DILocation(line: 727, column: 9, scope: !14558)
!14562 = !DILocation(line: 728, column: 5, scope: !13946)
!14563 = !DILocation(line: 400, column: 75, scope: !13935)
!14564 = !DILocation(line: 400, column: 3, scope: !13935)
!14565 = distinct !{!14565, !13944, !14566}
!14566 = !DILocation(line: 728, column: 5, scope: !13932)
!14567 = !DILocation(line: 730, column: 7, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !13796, file: !954, line: 730, column: 7)
!14569 = !DILocation(line: 730, column: 11, scope: !14568)
!14570 = !DILocation(line: 730, column: 16, scope: !14568)
!14571 = !DILocation(line: 730, column: 19, scope: !14568)
!14572 = !DILocation(line: 730, column: 33, scope: !14568)
!14573 = !DILocation(line: 731, column: 7, scope: !14568)
!14574 = !DILocation(line: 731, column: 10, scope: !14568)
!14575 = !DILocation(line: 730, column: 7, scope: !13796)
!14576 = !DILocation(line: 732, column: 5, scope: !14568)
!14577 = !DILocation(line: 738, column: 7, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !13796, file: !954, line: 738, column: 7)
!14579 = !DILocation(line: 738, column: 21, scope: !14578)
!14580 = !DILocation(line: 738, column: 51, scope: !14578)
!14581 = !DILocation(line: 738, column: 56, scope: !14578)
!14582 = !DILocation(line: 739, column: 7, scope: !14578)
!14583 = !DILocation(line: 739, column: 10, scope: !14578)
!14584 = !DILocation(line: 738, column: 7, scope: !13796)
!14585 = !DILocation(line: 741, column: 11, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14587, file: !954, line: 741, column: 11)
!14587 = distinct !DILexicalBlock(scope: !14578, file: !954, line: 740, column: 5)
!14588 = !DILocation(line: 741, column: 11, scope: !14587)
!14589 = !DILocation(line: 742, column: 42, scope: !14586)
!14590 = !DILocation(line: 742, column: 50, scope: !14586)
!14591 = !DILocation(line: 742, column: 67, scope: !14586)
!14592 = !DILocation(line: 742, column: 72, scope: !14586)
!14593 = !DILocation(line: 744, column: 42, scope: !14586)
!14594 = !DILocation(line: 744, column: 49, scope: !14586)
!14595 = !DILocation(line: 745, column: 42, scope: !14586)
!14596 = !DILocation(line: 745, column: 54, scope: !14586)
!14597 = !DILocation(line: 742, column: 16, scope: !14586)
!14598 = !DILocation(line: 742, column: 9, scope: !14586)
!14599 = !DILocation(line: 746, column: 18, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14586, file: !954, line: 746, column: 16)
!14601 = !DILocation(line: 746, column: 29, scope: !14600)
!14602 = !DILocation(line: 746, column: 32, scope: !14600)
!14603 = !DILocation(line: 746, column: 16, scope: !14586)
!14604 = !DILocation(line: 749, column: 24, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14600, file: !954, line: 747, column: 9)
!14606 = !DILocation(line: 749, column: 22, scope: !14605)
!14607 = !DILocation(line: 750, column: 15, scope: !14605)
!14608 = !DILocation(line: 751, column: 11, scope: !14605)
!14609 = !DILocation(line: 753, column: 5, scope: !14587)
!14610 = !DILocation(line: 755, column: 7, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !13796, file: !954, line: 755, column: 7)
!14612 = !DILocation(line: 755, column: 20, scope: !14611)
!14613 = !DILocation(line: 755, column: 24, scope: !14611)
!14614 = !DILocation(line: 755, column: 7, scope: !13796)
!14615 = !DILocation(line: 756, column: 5, scope: !14611)
!14616 = !DILocation(line: 756, column: 13, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14618, file: !954, line: 756, column: 5)
!14618 = distinct !DILexicalBlock(scope: !14611, file: !954, line: 756, column: 5)
!14619 = !DILocation(line: 756, column: 12, scope: !14617)
!14620 = !DILocation(line: 756, column: 5, scope: !14618)
!14621 = !DILocation(line: 757, column: 7, scope: !14617)
!14622 = !DILocation(line: 757, column: 7, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14624, file: !954, line: 757, column: 7)
!14624 = distinct !DILexicalBlock(scope: !14617, file: !954, line: 757, column: 7)
!14625 = !DILocation(line: 757, column: 7, scope: !14624)
!14626 = !DILocation(line: 756, column: 39, scope: !14617)
!14627 = !DILocation(line: 756, column: 5, scope: !14617)
!14628 = distinct !{!14628, !14620, !14629}
!14629 = !DILocation(line: 757, column: 7, scope: !14618)
!14630 = !DILocation(line: 759, column: 7, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !13796, file: !954, line: 759, column: 7)
!14632 = !DILocation(line: 759, column: 13, scope: !14631)
!14633 = !DILocation(line: 759, column: 11, scope: !14631)
!14634 = !DILocation(line: 759, column: 7, scope: !13796)
!14635 = !DILocation(line: 760, column: 5, scope: !14631)
!14636 = !DILocation(line: 760, column: 12, scope: !14631)
!14637 = !DILocation(line: 760, column: 17, scope: !14631)
!14638 = !DILocation(line: 761, column: 10, scope: !13796)
!14639 = !DILocation(line: 761, column: 3, scope: !13796)
!14640 = !DILabel(scope: !13796, name: "force_outer_quoting_style", file: !954, line: 763)
!14641 = !DILocation(line: 763, column: 2, scope: !13796)
!14642 = !DILocation(line: 766, column: 7, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !13796, file: !954, line: 766, column: 7)
!14644 = !DILocation(line: 766, column: 21, scope: !14643)
!14645 = !DILocation(line: 766, column: 51, scope: !14643)
!14646 = !DILocation(line: 766, column: 54, scope: !14643)
!14647 = !DILocation(line: 766, column: 7, scope: !13796)
!14648 = !DILocation(line: 767, column: 19, scope: !14643)
!14649 = !DILocation(line: 767, column: 5, scope: !14643)
!14650 = !DILocation(line: 768, column: 36, scope: !13796)
!14651 = !DILocation(line: 768, column: 44, scope: !13796)
!14652 = !DILocation(line: 768, column: 56, scope: !13796)
!14653 = !DILocation(line: 768, column: 61, scope: !13796)
!14654 = !DILocation(line: 769, column: 36, scope: !13796)
!14655 = !DILocation(line: 770, column: 36, scope: !13796)
!14656 = !DILocation(line: 770, column: 42, scope: !13796)
!14657 = !DILocation(line: 771, column: 36, scope: !13796)
!14658 = !DILocation(line: 771, column: 48, scope: !13796)
!14659 = !DILocation(line: 768, column: 10, scope: !13796)
!14660 = !DILocation(line: 768, column: 3, scope: !13796)
!14661 = !DILocation(line: 772, column: 1, scope: !13796)
!14662 = distinct !DISubprogram(name: "gettext_quote", scope: !954, file: !954, line: 207, type: !1044, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14663 = !DILocalVariable(name: "msgid", arg: 1, scope: !14662, file: !954, line: 207, type: !115)
!14664 = !DILocation(line: 207, column: 28, scope: !14662)
!14665 = !DILocalVariable(name: "s", arg: 2, scope: !14662, file: !954, line: 207, type: !928)
!14666 = !DILocation(line: 207, column: 54, scope: !14662)
!14667 = !DILocalVariable(name: "translation", scope: !14662, file: !954, line: 209, type: !115)
!14668 = !DILocation(line: 209, column: 15, scope: !14662)
!14669 = !DILocation(line: 209, column: 29, scope: !14662)
!14670 = !DILocalVariable(name: "locale_code", scope: !14662, file: !954, line: 210, type: !115)
!14671 = !DILocation(line: 210, column: 15, scope: !14662)
!14672 = !DILocation(line: 212, column: 7, scope: !14673)
!14673 = distinct !DILexicalBlock(scope: !14662, file: !954, line: 212, column: 7)
!14674 = !DILocation(line: 212, column: 22, scope: !14673)
!14675 = !DILocation(line: 212, column: 19, scope: !14673)
!14676 = !DILocation(line: 212, column: 7, scope: !14662)
!14677 = !DILocation(line: 213, column: 12, scope: !14673)
!14678 = !DILocation(line: 213, column: 5, scope: !14673)
!14679 = !DILocation(line: 233, column: 17, scope: !14662)
!14680 = !DILocation(line: 233, column: 15, scope: !14662)
!14681 = !DILocation(line: 234, column: 7, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14662, file: !954, line: 234, column: 7)
!14683 = !DILocation(line: 234, column: 7, scope: !14662)
!14684 = !DILocation(line: 235, column: 12, scope: !14682)
!14685 = !DILocation(line: 235, column: 21, scope: !14682)
!14686 = !DILocation(line: 235, column: 5, scope: !14682)
!14687 = !DILocation(line: 236, column: 7, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14662, file: !954, line: 236, column: 7)
!14689 = !DILocation(line: 236, column: 7, scope: !14662)
!14690 = !DILocation(line: 237, column: 12, scope: !14688)
!14691 = !DILocation(line: 237, column: 21, scope: !14688)
!14692 = !DILocation(line: 237, column: 5, scope: !14688)
!14693 = !DILocation(line: 239, column: 11, scope: !14662)
!14694 = !DILocation(line: 239, column: 13, scope: !14662)
!14695 = !DILocation(line: 239, column: 3, scope: !14662)
!14696 = !DILocation(line: 240, column: 1, scope: !14662)
!14697 = distinct !DISubprogram(name: "quotearg_alloc", scope: !954, file: !954, line: 799, type: !977, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14698 = !DILocalVariable(name: "arg", arg: 1, scope: !14697, file: !954, line: 799, type: !115)
!14699 = !DILocation(line: 799, column: 29, scope: !14697)
!14700 = !DILocalVariable(name: "argsize", arg: 2, scope: !14697, file: !954, line: 799, type: !55)
!14701 = !DILocation(line: 799, column: 41, scope: !14697)
!14702 = !DILocalVariable(name: "o", arg: 3, scope: !14697, file: !954, line: 800, type: !964)
!14703 = !DILocation(line: 800, column: 47, scope: !14697)
!14704 = !DILocation(line: 802, column: 30, scope: !14697)
!14705 = !DILocation(line: 802, column: 35, scope: !14697)
!14706 = !DILocation(line: 802, column: 50, scope: !14697)
!14707 = !DILocation(line: 802, column: 10, scope: !14697)
!14708 = !DILocation(line: 802, column: 3, scope: !14697)
!14709 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !954, file: !954, line: 812, type: !979, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14710 = !DILocalVariable(name: "arg", arg: 1, scope: !14709, file: !954, line: 812, type: !115)
!14711 = !DILocation(line: 812, column: 33, scope: !14709)
!14712 = !DILocalVariable(name: "argsize", arg: 2, scope: !14709, file: !954, line: 812, type: !55)
!14713 = !DILocation(line: 812, column: 45, scope: !14709)
!14714 = !DILocalVariable(name: "size", arg: 3, scope: !14709, file: !954, line: 812, type: !628)
!14715 = !DILocation(line: 812, column: 62, scope: !14709)
!14716 = !DILocalVariable(name: "o", arg: 4, scope: !14709, file: !954, line: 813, type: !964)
!14717 = !DILocation(line: 813, column: 51, scope: !14709)
!14718 = !DILocalVariable(name: "p", scope: !14709, file: !954, line: 815, type: !964)
!14719 = !DILocation(line: 815, column: 33, scope: !14709)
!14720 = !DILocation(line: 815, column: 37, scope: !14709)
!14721 = !DILocation(line: 815, column: 41, scope: !14709)
!14722 = !DILocalVariable(name: "e", scope: !14709, file: !954, line: 816, type: !7)
!14723 = !DILocation(line: 816, column: 7, scope: !14709)
!14724 = !DILocation(line: 816, column: 11, scope: !14709)
!14725 = !DILocalVariable(name: "flags", scope: !14709, file: !954, line: 818, type: !7)
!14726 = !DILocation(line: 818, column: 7, scope: !14709)
!14727 = !DILocation(line: 818, column: 15, scope: !14709)
!14728 = !DILocation(line: 818, column: 18, scope: !14709)
!14729 = !DILocation(line: 818, column: 27, scope: !14709)
!14730 = !DILocation(line: 818, column: 24, scope: !14709)
!14731 = !DILocalVariable(name: "bufsize", scope: !14709, file: !954, line: 819, type: !55)
!14732 = !DILocation(line: 819, column: 10, scope: !14709)
!14733 = !DILocation(line: 819, column: 52, scope: !14709)
!14734 = !DILocation(line: 819, column: 57, scope: !14709)
!14735 = !DILocation(line: 819, column: 66, scope: !14709)
!14736 = !DILocation(line: 819, column: 69, scope: !14709)
!14737 = !DILocation(line: 820, column: 46, scope: !14709)
!14738 = !DILocation(line: 820, column: 53, scope: !14709)
!14739 = !DILocation(line: 820, column: 56, scope: !14709)
!14740 = !DILocation(line: 821, column: 46, scope: !14709)
!14741 = !DILocation(line: 821, column: 49, scope: !14709)
!14742 = !DILocation(line: 822, column: 46, scope: !14709)
!14743 = !DILocation(line: 822, column: 49, scope: !14709)
!14744 = !DILocation(line: 819, column: 20, scope: !14709)
!14745 = !DILocation(line: 822, column: 62, scope: !14709)
!14746 = !DILocalVariable(name: "buf", scope: !14709, file: !954, line: 823, type: !9)
!14747 = !DILocation(line: 823, column: 9, scope: !14709)
!14748 = !DILocation(line: 823, column: 27, scope: !14709)
!14749 = !DILocation(line: 823, column: 15, scope: !14709)
!14750 = !DILocation(line: 824, column: 29, scope: !14709)
!14751 = !DILocation(line: 824, column: 34, scope: !14709)
!14752 = !DILocation(line: 824, column: 43, scope: !14709)
!14753 = !DILocation(line: 824, column: 48, scope: !14709)
!14754 = !DILocation(line: 824, column: 57, scope: !14709)
!14755 = !DILocation(line: 824, column: 60, scope: !14709)
!14756 = !DILocation(line: 824, column: 67, scope: !14709)
!14757 = !DILocation(line: 825, column: 29, scope: !14709)
!14758 = !DILocation(line: 825, column: 32, scope: !14709)
!14759 = !DILocation(line: 826, column: 29, scope: !14709)
!14760 = !DILocation(line: 826, column: 32, scope: !14709)
!14761 = !DILocation(line: 826, column: 44, scope: !14709)
!14762 = !DILocation(line: 826, column: 47, scope: !14709)
!14763 = !DILocation(line: 824, column: 3, scope: !14709)
!14764 = !DILocation(line: 827, column: 11, scope: !14709)
!14765 = !DILocation(line: 827, column: 3, scope: !14709)
!14766 = !DILocation(line: 827, column: 9, scope: !14709)
!14767 = !DILocation(line: 828, column: 7, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14709, file: !954, line: 828, column: 7)
!14769 = !DILocation(line: 828, column: 7, scope: !14709)
!14770 = !DILocation(line: 829, column: 13, scope: !14768)
!14771 = !DILocation(line: 829, column: 21, scope: !14768)
!14772 = !DILocation(line: 829, column: 6, scope: !14768)
!14773 = !DILocation(line: 829, column: 11, scope: !14768)
!14774 = !DILocation(line: 829, column: 5, scope: !14768)
!14775 = !DILocation(line: 830, column: 10, scope: !14709)
!14776 = !DILocation(line: 830, column: 3, scope: !14709)
!14777 = distinct !DISubprogram(name: "quotearg_free", scope: !954, file: !954, line: 848, type: !134, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14778 = !DILocalVariable(name: "sv", scope: !14777, file: !954, line: 850, type: !981)
!14779 = !DILocation(line: 850, column: 19, scope: !14777)
!14780 = !DILocation(line: 850, column: 24, scope: !14777)
!14781 = !DILocalVariable(name: "i", scope: !14777, file: !954, line: 851, type: !7)
!14782 = !DILocation(line: 851, column: 7, scope: !14777)
!14783 = !DILocation(line: 852, column: 10, scope: !14784)
!14784 = distinct !DILexicalBlock(scope: !14777, file: !954, line: 852, column: 3)
!14785 = !DILocation(line: 852, column: 8, scope: !14784)
!14786 = !DILocation(line: 852, column: 15, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14784, file: !954, line: 852, column: 3)
!14788 = !DILocation(line: 852, column: 19, scope: !14787)
!14789 = !DILocation(line: 852, column: 17, scope: !14787)
!14790 = !DILocation(line: 852, column: 3, scope: !14784)
!14791 = !DILocation(line: 853, column: 11, scope: !14787)
!14792 = !DILocation(line: 853, column: 14, scope: !14787)
!14793 = !DILocation(line: 853, column: 17, scope: !14787)
!14794 = !{!14795, !2999, i64 8}
!14795 = !{!"slotvec", !3183, i64 0, !2999, i64 8}
!14796 = !DILocation(line: 853, column: 5, scope: !14787)
!14797 = !DILocation(line: 852, column: 28, scope: !14787)
!14798 = !DILocation(line: 852, column: 3, scope: !14787)
!14799 = distinct !{!14799, !14790, !14800}
!14800 = !DILocation(line: 853, column: 20, scope: !14784)
!14801 = !DILocation(line: 854, column: 7, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14777, file: !954, line: 854, column: 7)
!14803 = !DILocation(line: 854, column: 13, scope: !14802)
!14804 = !DILocation(line: 854, column: 17, scope: !14802)
!14805 = !DILocation(line: 854, column: 7, scope: !14777)
!14806 = !DILocation(line: 856, column: 13, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14802, file: !954, line: 855, column: 5)
!14808 = !DILocation(line: 856, column: 19, scope: !14807)
!14809 = !DILocation(line: 856, column: 7, scope: !14807)
!14810 = !DILocation(line: 857, column: 21, scope: !14807)
!14811 = !{!14795, !3183, i64 0}
!14812 = !DILocation(line: 858, column: 20, scope: !14807)
!14813 = !DILocation(line: 859, column: 5, scope: !14807)
!14814 = !DILocation(line: 860, column: 7, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14777, file: !954, line: 860, column: 7)
!14816 = !DILocation(line: 860, column: 10, scope: !14815)
!14817 = !DILocation(line: 860, column: 7, scope: !14777)
!14818 = !DILocation(line: 862, column: 13, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14815, file: !954, line: 861, column: 5)
!14820 = !DILocation(line: 862, column: 7, scope: !14819)
!14821 = !DILocation(line: 863, column: 15, scope: !14819)
!14822 = !DILocation(line: 864, column: 5, scope: !14819)
!14823 = !DILocation(line: 865, column: 10, scope: !14777)
!14824 = !DILocation(line: 866, column: 1, scope: !14777)
!14825 = distinct !DISubprogram(name: "quotearg_n", scope: !954, file: !954, line: 931, type: !986, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14826 = !DILocalVariable(name: "n", arg: 1, scope: !14825, file: !954, line: 931, type: !7)
!14827 = !DILocation(line: 931, column: 17, scope: !14825)
!14828 = !DILocalVariable(name: "arg", arg: 2, scope: !14825, file: !954, line: 931, type: !115)
!14829 = !DILocation(line: 931, column: 32, scope: !14825)
!14830 = !DILocation(line: 933, column: 30, scope: !14825)
!14831 = !DILocation(line: 933, column: 33, scope: !14825)
!14832 = !DILocation(line: 933, column: 10, scope: !14825)
!14833 = !DILocation(line: 933, column: 3, scope: !14825)
!14834 = distinct !DISubprogram(name: "quotearg_n_options", scope: !954, file: !954, line: 877, type: !1046, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14835 = !DILocalVariable(name: "n", arg: 1, scope: !14834, file: !954, line: 877, type: !7)
!14836 = !DILocation(line: 877, column: 25, scope: !14834)
!14837 = !DILocalVariable(name: "arg", arg: 2, scope: !14834, file: !954, line: 877, type: !115)
!14838 = !DILocation(line: 877, column: 40, scope: !14834)
!14839 = !DILocalVariable(name: "argsize", arg: 3, scope: !14834, file: !954, line: 877, type: !55)
!14840 = !DILocation(line: 877, column: 52, scope: !14834)
!14841 = !DILocalVariable(name: "options", arg: 4, scope: !14834, file: !954, line: 878, type: !964)
!14842 = !DILocation(line: 878, column: 51, scope: !14834)
!14843 = !DILocalVariable(name: "e", scope: !14834, file: !954, line: 880, type: !7)
!14844 = !DILocation(line: 880, column: 7, scope: !14834)
!14845 = !DILocation(line: 880, column: 11, scope: !14834)
!14846 = !DILocalVariable(name: "sv", scope: !14834, file: !954, line: 882, type: !981)
!14847 = !DILocation(line: 882, column: 19, scope: !14834)
!14848 = !DILocation(line: 882, column: 24, scope: !14834)
!14849 = !DILocation(line: 884, column: 7, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14834, file: !954, line: 884, column: 7)
!14851 = !DILocation(line: 884, column: 9, scope: !14850)
!14852 = !DILocation(line: 884, column: 7, scope: !14834)
!14853 = !DILocation(line: 885, column: 5, scope: !14850)
!14854 = !DILocation(line: 887, column: 7, scope: !14855)
!14855 = distinct !DILexicalBlock(scope: !14834, file: !954, line: 887, column: 7)
!14856 = !DILocation(line: 887, column: 17, scope: !14855)
!14857 = !DILocation(line: 887, column: 14, scope: !14855)
!14858 = !DILocation(line: 887, column: 7, scope: !14834)
!14859 = !DILocalVariable(name: "preallocated", scope: !14860, file: !954, line: 889, type: !120)
!14860 = distinct !DILexicalBlock(scope: !14855, file: !954, line: 888, column: 5)
!14861 = !DILocation(line: 889, column: 12, scope: !14860)
!14862 = !DILocation(line: 889, column: 28, scope: !14860)
!14863 = !DILocation(line: 889, column: 31, scope: !14860)
!14864 = !DILocalVariable(name: "nmax", scope: !14860, file: !954, line: 890, type: !7)
!14865 = !DILocation(line: 890, column: 11, scope: !14860)
!14866 = !DILocation(line: 892, column: 11, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14860, file: !954, line: 892, column: 11)
!14868 = !DILocation(line: 892, column: 18, scope: !14867)
!14869 = !DILocation(line: 892, column: 16, scope: !14867)
!14870 = !DILocation(line: 892, column: 11, scope: !14860)
!14871 = !DILocation(line: 893, column: 9, scope: !14867)
!14872 = !DILocation(line: 895, column: 32, scope: !14860)
!14873 = !DILocation(line: 895, column: 54, scope: !14860)
!14874 = !DILocation(line: 895, column: 59, scope: !14860)
!14875 = !DILocation(line: 895, column: 61, scope: !14860)
!14876 = !DILocation(line: 895, column: 58, scope: !14860)
!14877 = !DILocation(line: 895, column: 66, scope: !14860)
!14878 = !DILocation(line: 895, column: 22, scope: !14860)
!14879 = !DILocation(line: 895, column: 20, scope: !14860)
!14880 = !DILocation(line: 895, column: 15, scope: !14860)
!14881 = !DILocation(line: 896, column: 11, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14860, file: !954, line: 896, column: 11)
!14883 = !DILocation(line: 896, column: 11, scope: !14860)
!14884 = !DILocation(line: 897, column: 10, scope: !14882)
!14885 = !DILocation(line: 897, column: 15, scope: !14882)
!14886 = !{i64 0, i64 8, !3851, i64 8, i64 8, !2998}
!14887 = !DILocation(line: 897, column: 9, scope: !14882)
!14888 = !DILocation(line: 898, column: 15, scope: !14860)
!14889 = !DILocation(line: 898, column: 20, scope: !14860)
!14890 = !DILocation(line: 898, column: 18, scope: !14860)
!14891 = !DILocation(line: 898, column: 7, scope: !14860)
!14892 = !DILocation(line: 898, column: 32, scope: !14860)
!14893 = !DILocation(line: 898, column: 34, scope: !14860)
!14894 = !DILocation(line: 898, column: 40, scope: !14860)
!14895 = !DILocation(line: 898, column: 38, scope: !14860)
!14896 = !DILocation(line: 898, column: 31, scope: !14860)
!14897 = !DILocation(line: 898, column: 48, scope: !14860)
!14898 = !DILocation(line: 899, column: 16, scope: !14860)
!14899 = !DILocation(line: 899, column: 18, scope: !14860)
!14900 = !DILocation(line: 899, column: 14, scope: !14860)
!14901 = !DILocation(line: 900, column: 5, scope: !14860)
!14902 = !DILocalVariable(name: "size", scope: !14903, file: !954, line: 903, type: !55)
!14903 = distinct !DILexicalBlock(scope: !14834, file: !954, line: 902, column: 3)
!14904 = !DILocation(line: 903, column: 12, scope: !14903)
!14905 = !DILocation(line: 903, column: 19, scope: !14903)
!14906 = !DILocation(line: 903, column: 22, scope: !14903)
!14907 = !DILocation(line: 903, column: 25, scope: !14903)
!14908 = !DILocalVariable(name: "val", scope: !14903, file: !954, line: 904, type: !9)
!14909 = !DILocation(line: 904, column: 11, scope: !14903)
!14910 = !DILocation(line: 904, column: 17, scope: !14903)
!14911 = !DILocation(line: 904, column: 20, scope: !14903)
!14912 = !DILocation(line: 904, column: 23, scope: !14903)
!14913 = !DILocalVariable(name: "flags", scope: !14903, file: !954, line: 906, type: !7)
!14914 = !DILocation(line: 906, column: 9, scope: !14903)
!14915 = !DILocation(line: 906, column: 17, scope: !14903)
!14916 = !DILocation(line: 906, column: 26, scope: !14903)
!14917 = !DILocation(line: 906, column: 32, scope: !14903)
!14918 = !DILocalVariable(name: "qsize", scope: !14903, file: !954, line: 907, type: !55)
!14919 = !DILocation(line: 907, column: 12, scope: !14903)
!14920 = !DILocation(line: 907, column: 46, scope: !14903)
!14921 = !DILocation(line: 907, column: 51, scope: !14903)
!14922 = !DILocation(line: 907, column: 57, scope: !14903)
!14923 = !DILocation(line: 907, column: 62, scope: !14903)
!14924 = !DILocation(line: 908, column: 46, scope: !14903)
!14925 = !DILocation(line: 908, column: 55, scope: !14903)
!14926 = !DILocation(line: 908, column: 62, scope: !14903)
!14927 = !DILocation(line: 909, column: 46, scope: !14903)
!14928 = !DILocation(line: 909, column: 55, scope: !14903)
!14929 = !DILocation(line: 910, column: 46, scope: !14903)
!14930 = !DILocation(line: 910, column: 55, scope: !14903)
!14931 = !DILocation(line: 911, column: 46, scope: !14903)
!14932 = !DILocation(line: 911, column: 55, scope: !14903)
!14933 = !DILocation(line: 907, column: 20, scope: !14903)
!14934 = !DILocation(line: 913, column: 9, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14903, file: !954, line: 913, column: 9)
!14936 = !DILocation(line: 913, column: 17, scope: !14935)
!14937 = !DILocation(line: 913, column: 14, scope: !14935)
!14938 = !DILocation(line: 913, column: 9, scope: !14903)
!14939 = !DILocation(line: 915, column: 29, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14935, file: !954, line: 914, column: 7)
!14941 = !DILocation(line: 915, column: 35, scope: !14940)
!14942 = !DILocation(line: 915, column: 27, scope: !14940)
!14943 = !DILocation(line: 915, column: 9, scope: !14940)
!14944 = !DILocation(line: 915, column: 12, scope: !14940)
!14945 = !DILocation(line: 915, column: 15, scope: !14940)
!14946 = !DILocation(line: 915, column: 20, scope: !14940)
!14947 = !DILocation(line: 916, column: 13, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14940, file: !954, line: 916, column: 13)
!14949 = !DILocation(line: 916, column: 17, scope: !14948)
!14950 = !DILocation(line: 916, column: 13, scope: !14940)
!14951 = !DILocation(line: 917, column: 17, scope: !14948)
!14952 = !DILocation(line: 917, column: 11, scope: !14948)
!14953 = !DILocation(line: 918, column: 39, scope: !14940)
!14954 = !DILocation(line: 918, column: 27, scope: !14940)
!14955 = !DILocation(line: 918, column: 25, scope: !14940)
!14956 = !DILocation(line: 918, column: 9, scope: !14940)
!14957 = !DILocation(line: 918, column: 12, scope: !14940)
!14958 = !DILocation(line: 918, column: 15, scope: !14940)
!14959 = !DILocation(line: 918, column: 19, scope: !14940)
!14960 = !DILocation(line: 919, column: 35, scope: !14940)
!14961 = !DILocation(line: 919, column: 40, scope: !14940)
!14962 = !DILocation(line: 919, column: 46, scope: !14940)
!14963 = !DILocation(line: 919, column: 51, scope: !14940)
!14964 = !DILocation(line: 919, column: 60, scope: !14940)
!14965 = !DILocation(line: 919, column: 69, scope: !14940)
!14966 = !DILocation(line: 920, column: 35, scope: !14940)
!14967 = !DILocation(line: 920, column: 42, scope: !14940)
!14968 = !DILocation(line: 920, column: 51, scope: !14940)
!14969 = !DILocation(line: 921, column: 35, scope: !14940)
!14970 = !DILocation(line: 921, column: 44, scope: !14940)
!14971 = !DILocation(line: 922, column: 35, scope: !14940)
!14972 = !DILocation(line: 922, column: 44, scope: !14940)
!14973 = !DILocation(line: 919, column: 9, scope: !14940)
!14974 = !DILocation(line: 923, column: 7, scope: !14940)
!14975 = !DILocation(line: 925, column: 13, scope: !14903)
!14976 = !DILocation(line: 925, column: 5, scope: !14903)
!14977 = !DILocation(line: 925, column: 11, scope: !14903)
!14978 = !DILocation(line: 926, column: 12, scope: !14903)
!14979 = !DILocation(line: 926, column: 5, scope: !14903)
!14980 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !954, file: !954, line: 937, type: !988, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14981 = !DILocalVariable(name: "n", arg: 1, scope: !14980, file: !954, line: 937, type: !7)
!14982 = !DILocation(line: 937, column: 21, scope: !14980)
!14983 = !DILocalVariable(name: "arg", arg: 2, scope: !14980, file: !954, line: 937, type: !115)
!14984 = !DILocation(line: 937, column: 36, scope: !14980)
!14985 = !DILocalVariable(name: "argsize", arg: 3, scope: !14980, file: !954, line: 937, type: !55)
!14986 = !DILocation(line: 937, column: 48, scope: !14980)
!14987 = !DILocation(line: 939, column: 30, scope: !14980)
!14988 = !DILocation(line: 939, column: 33, scope: !14980)
!14989 = !DILocation(line: 939, column: 38, scope: !14980)
!14990 = !DILocation(line: 939, column: 10, scope: !14980)
!14991 = !DILocation(line: 939, column: 3, scope: !14980)
!14992 = distinct !DISubprogram(name: "quotearg", scope: !954, file: !954, line: 943, type: !990, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14993 = !DILocalVariable(name: "arg", arg: 1, scope: !14992, file: !954, line: 943, type: !115)
!14994 = !DILocation(line: 943, column: 23, scope: !14992)
!14995 = !DILocation(line: 945, column: 25, scope: !14992)
!14996 = !DILocation(line: 945, column: 10, scope: !14992)
!14997 = !DILocation(line: 945, column: 3, scope: !14992)
!14998 = distinct !DISubprogram(name: "quotearg_mem", scope: !954, file: !954, line: 949, type: !992, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!14999 = !DILocalVariable(name: "arg", arg: 1, scope: !14998, file: !954, line: 949, type: !115)
!15000 = !DILocation(line: 949, column: 27, scope: !14998)
!15001 = !DILocalVariable(name: "argsize", arg: 2, scope: !14998, file: !954, line: 949, type: !55)
!15002 = !DILocation(line: 949, column: 39, scope: !14998)
!15003 = !DILocation(line: 951, column: 29, scope: !14998)
!15004 = !DILocation(line: 951, column: 34, scope: !14998)
!15005 = !DILocation(line: 951, column: 10, scope: !14998)
!15006 = !DILocation(line: 951, column: 3, scope: !14998)
!15007 = distinct !DISubprogram(name: "quotearg_n_style", scope: !954, file: !954, line: 955, type: !994, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15008 = !DILocalVariable(name: "n", arg: 1, scope: !15007, file: !954, line: 955, type: !7)
!15009 = !DILocation(line: 955, column: 23, scope: !15007)
!15010 = !DILocalVariable(name: "s", arg: 2, scope: !15007, file: !954, line: 955, type: !928)
!15011 = !DILocation(line: 955, column: 45, scope: !15007)
!15012 = !DILocalVariable(name: "arg", arg: 3, scope: !15007, file: !954, line: 955, type: !115)
!15013 = !DILocation(line: 955, column: 60, scope: !15007)
!15014 = !DILocalVariable(name: "o", scope: !15007, file: !954, line: 957, type: !965)
!15015 = !DILocation(line: 957, column: 32, scope: !15007)
!15016 = !DILocation(line: 957, column: 64, scope: !15007)
!15017 = !DILocation(line: 957, column: 36, scope: !15007)
!15018 = !DILocation(line: 958, column: 30, scope: !15007)
!15019 = !DILocation(line: 958, column: 33, scope: !15007)
!15020 = !DILocation(line: 958, column: 10, scope: !15007)
!15021 = !DILocation(line: 958, column: 3, scope: !15007)
!15022 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !954, file: !954, line: 193, type: !1048, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15023 = !DILocalVariable(name: "style", arg: 1, scope: !15022, file: !954, line: 193, type: !928)
!15024 = !DILocation(line: 193, column: 48, scope: !15022)
!15025 = !DILocalVariable(name: "o", scope: !15022, file: !954, line: 195, type: !953)
!15026 = !DILocation(line: 195, column: 26, scope: !15022)
!15027 = !DILocation(line: 196, column: 7, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15022, file: !954, line: 196, column: 7)
!15029 = !DILocation(line: 196, column: 13, scope: !15028)
!15030 = !DILocation(line: 196, column: 7, scope: !15022)
!15031 = !DILocation(line: 197, column: 5, scope: !15028)
!15032 = !DILocation(line: 198, column: 13, scope: !15022)
!15033 = !DILocation(line: 198, column: 5, scope: !15022)
!15034 = !DILocation(line: 198, column: 11, scope: !15022)
!15035 = !DILocation(line: 199, column: 3, scope: !15022)
!15036 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !954, file: !954, line: 962, type: !996, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15037 = !DILocalVariable(name: "n", arg: 1, scope: !15036, file: !954, line: 962, type: !7)
!15038 = !DILocation(line: 962, column: 27, scope: !15036)
!15039 = !DILocalVariable(name: "s", arg: 2, scope: !15036, file: !954, line: 962, type: !928)
!15040 = !DILocation(line: 962, column: 49, scope: !15036)
!15041 = !DILocalVariable(name: "arg", arg: 3, scope: !15036, file: !954, line: 963, type: !115)
!15042 = !DILocation(line: 963, column: 35, scope: !15036)
!15043 = !DILocalVariable(name: "argsize", arg: 4, scope: !15036, file: !954, line: 963, type: !55)
!15044 = !DILocation(line: 963, column: 47, scope: !15036)
!15045 = !DILocalVariable(name: "o", scope: !15036, file: !954, line: 965, type: !965)
!15046 = !DILocation(line: 965, column: 32, scope: !15036)
!15047 = !DILocation(line: 965, column: 64, scope: !15036)
!15048 = !DILocation(line: 965, column: 36, scope: !15036)
!15049 = !DILocation(line: 966, column: 30, scope: !15036)
!15050 = !DILocation(line: 966, column: 33, scope: !15036)
!15051 = !DILocation(line: 966, column: 38, scope: !15036)
!15052 = !DILocation(line: 966, column: 10, scope: !15036)
!15053 = !DILocation(line: 966, column: 3, scope: !15036)
!15054 = distinct !DISubprogram(name: "quotearg_style", scope: !954, file: !954, line: 970, type: !998, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15055 = !DILocalVariable(name: "s", arg: 1, scope: !15054, file: !954, line: 970, type: !928)
!15056 = !DILocation(line: 970, column: 36, scope: !15054)
!15057 = !DILocalVariable(name: "arg", arg: 2, scope: !15054, file: !954, line: 970, type: !115)
!15058 = !DILocation(line: 970, column: 51, scope: !15054)
!15059 = !DILocation(line: 972, column: 31, scope: !15054)
!15060 = !DILocation(line: 972, column: 34, scope: !15054)
!15061 = !DILocation(line: 972, column: 10, scope: !15054)
!15062 = !DILocation(line: 972, column: 3, scope: !15054)
!15063 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !954, file: !954, line: 976, type: !1000, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15064 = !DILocalVariable(name: "s", arg: 1, scope: !15063, file: !954, line: 976, type: !928)
!15065 = !DILocation(line: 976, column: 40, scope: !15063)
!15066 = !DILocalVariable(name: "arg", arg: 2, scope: !15063, file: !954, line: 976, type: !115)
!15067 = !DILocation(line: 976, column: 55, scope: !15063)
!15068 = !DILocalVariable(name: "argsize", arg: 3, scope: !15063, file: !954, line: 976, type: !55)
!15069 = !DILocation(line: 976, column: 67, scope: !15063)
!15070 = !DILocation(line: 978, column: 35, scope: !15063)
!15071 = !DILocation(line: 978, column: 38, scope: !15063)
!15072 = !DILocation(line: 978, column: 43, scope: !15063)
!15073 = !DILocation(line: 978, column: 10, scope: !15063)
!15074 = !DILocation(line: 978, column: 3, scope: !15063)
!15075 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !954, file: !954, line: 982, type: !1002, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15076 = !DILocalVariable(name: "arg", arg: 1, scope: !15075, file: !954, line: 982, type: !115)
!15077 = !DILocation(line: 982, column: 32, scope: !15075)
!15078 = !DILocalVariable(name: "argsize", arg: 2, scope: !15075, file: !954, line: 982, type: !55)
!15079 = !DILocation(line: 982, column: 44, scope: !15075)
!15080 = !DILocalVariable(name: "ch", arg: 3, scope: !15075, file: !954, line: 982, type: !10)
!15081 = !DILocation(line: 982, column: 58, scope: !15075)
!15082 = !DILocalVariable(name: "options", scope: !15075, file: !954, line: 984, type: !953)
!15083 = !DILocation(line: 984, column: 26, scope: !15075)
!15084 = !DILocation(line: 985, column: 13, scope: !15075)
!15085 = !{i64 0, i64 4, !3660, i64 4, i64 4, !2985, i64 8, i64 32, !3660, i64 40, i64 8, !2998, i64 48, i64 8, !2998}
!15086 = !DILocation(line: 986, column: 31, scope: !15075)
!15087 = !DILocation(line: 986, column: 3, scope: !15075)
!15088 = !DILocation(line: 987, column: 33, scope: !15075)
!15089 = !DILocation(line: 987, column: 38, scope: !15075)
!15090 = !DILocation(line: 987, column: 10, scope: !15075)
!15091 = !DILocation(line: 987, column: 3, scope: !15075)
!15092 = distinct !DISubprogram(name: "quotearg_char", scope: !954, file: !954, line: 991, type: !1004, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15093 = !DILocalVariable(name: "arg", arg: 1, scope: !15092, file: !954, line: 991, type: !115)
!15094 = !DILocation(line: 991, column: 28, scope: !15092)
!15095 = !DILocalVariable(name: "ch", arg: 2, scope: !15092, file: !954, line: 991, type: !10)
!15096 = !DILocation(line: 991, column: 38, scope: !15092)
!15097 = !DILocation(line: 993, column: 29, scope: !15092)
!15098 = !DILocation(line: 993, column: 44, scope: !15092)
!15099 = !DILocation(line: 993, column: 10, scope: !15092)
!15100 = !DILocation(line: 993, column: 3, scope: !15092)
!15101 = distinct !DISubprogram(name: "quotearg_colon", scope: !954, file: !954, line: 997, type: !990, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15102 = !DILocalVariable(name: "arg", arg: 1, scope: !15101, file: !954, line: 997, type: !115)
!15103 = !DILocation(line: 997, column: 29, scope: !15101)
!15104 = !DILocation(line: 999, column: 25, scope: !15101)
!15105 = !DILocation(line: 999, column: 10, scope: !15101)
!15106 = !DILocation(line: 999, column: 3, scope: !15101)
!15107 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !954, file: !954, line: 1003, type: !992, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15108 = !DILocalVariable(name: "arg", arg: 1, scope: !15107, file: !954, line: 1003, type: !115)
!15109 = !DILocation(line: 1003, column: 33, scope: !15107)
!15110 = !DILocalVariable(name: "argsize", arg: 2, scope: !15107, file: !954, line: 1003, type: !55)
!15111 = !DILocation(line: 1003, column: 45, scope: !15107)
!15112 = !DILocation(line: 1005, column: 29, scope: !15107)
!15113 = !DILocation(line: 1005, column: 34, scope: !15107)
!15114 = !DILocation(line: 1005, column: 10, scope: !15107)
!15115 = !DILocation(line: 1005, column: 3, scope: !15107)
!15116 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !954, file: !954, line: 1009, type: !994, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15117 = !DILocalVariable(name: "n", arg: 1, scope: !15116, file: !954, line: 1009, type: !7)
!15118 = !DILocation(line: 1009, column: 29, scope: !15116)
!15119 = !DILocalVariable(name: "s", arg: 2, scope: !15116, file: !954, line: 1009, type: !928)
!15120 = !DILocation(line: 1009, column: 51, scope: !15116)
!15121 = !DILocalVariable(name: "arg", arg: 3, scope: !15116, file: !954, line: 1009, type: !115)
!15122 = !DILocation(line: 1009, column: 66, scope: !15116)
!15123 = !DILocalVariable(name: "options", scope: !15116, file: !954, line: 1011, type: !953)
!15124 = !DILocation(line: 1011, column: 26, scope: !15116)
!15125 = !DILocation(line: 1012, column: 41, scope: !15116)
!15126 = !DILocation(line: 1012, column: 13, scope: !15116)
!15127 = !DILocation(line: 1013, column: 3, scope: !15116)
!15128 = !DILocation(line: 1014, column: 30, scope: !15116)
!15129 = !DILocation(line: 1014, column: 33, scope: !15116)
!15130 = !DILocation(line: 1014, column: 10, scope: !15116)
!15131 = !DILocation(line: 1014, column: 3, scope: !15116)
!15132 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !954, file: !954, line: 1018, type: !1006, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15133 = !DILocalVariable(name: "n", arg: 1, scope: !15132, file: !954, line: 1018, type: !7)
!15134 = !DILocation(line: 1018, column: 24, scope: !15132)
!15135 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15132, file: !954, line: 1018, type: !115)
!15136 = !DILocation(line: 1018, column: 39, scope: !15132)
!15137 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15132, file: !954, line: 1019, type: !115)
!15138 = !DILocation(line: 1019, column: 32, scope: !15132)
!15139 = !DILocalVariable(name: "arg", arg: 4, scope: !15132, file: !954, line: 1019, type: !115)
!15140 = !DILocation(line: 1019, column: 57, scope: !15132)
!15141 = !DILocation(line: 1021, column: 33, scope: !15132)
!15142 = !DILocation(line: 1021, column: 36, scope: !15132)
!15143 = !DILocation(line: 1021, column: 48, scope: !15132)
!15144 = !DILocation(line: 1021, column: 61, scope: !15132)
!15145 = !DILocation(line: 1021, column: 10, scope: !15132)
!15146 = !DILocation(line: 1021, column: 3, scope: !15132)
!15147 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !954, file: !954, line: 1026, type: !1008, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15148 = !DILocalVariable(name: "n", arg: 1, scope: !15147, file: !954, line: 1026, type: !7)
!15149 = !DILocation(line: 1026, column: 28, scope: !15147)
!15150 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15147, file: !954, line: 1026, type: !115)
!15151 = !DILocation(line: 1026, column: 43, scope: !15147)
!15152 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15147, file: !954, line: 1027, type: !115)
!15153 = !DILocation(line: 1027, column: 36, scope: !15147)
!15154 = !DILocalVariable(name: "arg", arg: 4, scope: !15147, file: !954, line: 1028, type: !115)
!15155 = !DILocation(line: 1028, column: 36, scope: !15147)
!15156 = !DILocalVariable(name: "argsize", arg: 5, scope: !15147, file: !954, line: 1028, type: !55)
!15157 = !DILocation(line: 1028, column: 48, scope: !15147)
!15158 = !DILocalVariable(name: "o", scope: !15147, file: !954, line: 1030, type: !953)
!15159 = !DILocation(line: 1030, column: 26, scope: !15147)
!15160 = !DILocation(line: 1030, column: 30, scope: !15147)
!15161 = !DILocation(line: 1031, column: 27, scope: !15147)
!15162 = !DILocation(line: 1031, column: 39, scope: !15147)
!15163 = !DILocation(line: 1031, column: 3, scope: !15147)
!15164 = !DILocation(line: 1032, column: 30, scope: !15147)
!15165 = !DILocation(line: 1032, column: 33, scope: !15147)
!15166 = !DILocation(line: 1032, column: 38, scope: !15147)
!15167 = !DILocation(line: 1032, column: 10, scope: !15147)
!15168 = !DILocation(line: 1032, column: 3, scope: !15147)
!15169 = distinct !DISubprogram(name: "quotearg_custom", scope: !954, file: !954, line: 1036, type: !1010, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15170 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15169, file: !954, line: 1036, type: !115)
!15171 = !DILocation(line: 1036, column: 30, scope: !15169)
!15172 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15169, file: !954, line: 1036, type: !115)
!15173 = !DILocation(line: 1036, column: 54, scope: !15169)
!15174 = !DILocalVariable(name: "arg", arg: 3, scope: !15169, file: !954, line: 1037, type: !115)
!15175 = !DILocation(line: 1037, column: 30, scope: !15169)
!15176 = !DILocation(line: 1039, column: 32, scope: !15169)
!15177 = !DILocation(line: 1039, column: 44, scope: !15169)
!15178 = !DILocation(line: 1039, column: 57, scope: !15169)
!15179 = !DILocation(line: 1039, column: 10, scope: !15169)
!15180 = !DILocation(line: 1039, column: 3, scope: !15169)
!15181 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !954, file: !954, line: 1043, type: !1012, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15182 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15181, file: !954, line: 1043, type: !115)
!15183 = !DILocation(line: 1043, column: 34, scope: !15181)
!15184 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15181, file: !954, line: 1043, type: !115)
!15185 = !DILocation(line: 1043, column: 58, scope: !15181)
!15186 = !DILocalVariable(name: "arg", arg: 3, scope: !15181, file: !954, line: 1044, type: !115)
!15187 = !DILocation(line: 1044, column: 34, scope: !15181)
!15188 = !DILocalVariable(name: "argsize", arg: 4, scope: !15181, file: !954, line: 1044, type: !55)
!15189 = !DILocation(line: 1044, column: 46, scope: !15181)
!15190 = !DILocation(line: 1046, column: 36, scope: !15181)
!15191 = !DILocation(line: 1046, column: 48, scope: !15181)
!15192 = !DILocation(line: 1046, column: 61, scope: !15181)
!15193 = !DILocation(line: 1047, column: 33, scope: !15181)
!15194 = !DILocation(line: 1046, column: 10, scope: !15181)
!15195 = !DILocation(line: 1046, column: 3, scope: !15181)
!15196 = distinct !DISubprogram(name: "quote_n_mem", scope: !954, file: !954, line: 1061, type: !1014, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15197 = !DILocalVariable(name: "n", arg: 1, scope: !15196, file: !954, line: 1061, type: !7)
!15198 = !DILocation(line: 1061, column: 18, scope: !15196)
!15199 = !DILocalVariable(name: "arg", arg: 2, scope: !15196, file: !954, line: 1061, type: !115)
!15200 = !DILocation(line: 1061, column: 33, scope: !15196)
!15201 = !DILocalVariable(name: "argsize", arg: 3, scope: !15196, file: !954, line: 1061, type: !55)
!15202 = !DILocation(line: 1061, column: 45, scope: !15196)
!15203 = !DILocation(line: 1063, column: 30, scope: !15196)
!15204 = !DILocation(line: 1063, column: 33, scope: !15196)
!15205 = !DILocation(line: 1063, column: 38, scope: !15196)
!15206 = !DILocation(line: 1063, column: 10, scope: !15196)
!15207 = !DILocation(line: 1063, column: 3, scope: !15196)
!15208 = distinct !DISubprogram(name: "quote_mem", scope: !954, file: !954, line: 1067, type: !1016, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15209 = !DILocalVariable(name: "arg", arg: 1, scope: !15208, file: !954, line: 1067, type: !115)
!15210 = !DILocation(line: 1067, column: 24, scope: !15208)
!15211 = !DILocalVariable(name: "argsize", arg: 2, scope: !15208, file: !954, line: 1067, type: !55)
!15212 = !DILocation(line: 1067, column: 36, scope: !15208)
!15213 = !DILocation(line: 1069, column: 26, scope: !15208)
!15214 = !DILocation(line: 1069, column: 31, scope: !15208)
!15215 = !DILocation(line: 1069, column: 10, scope: !15208)
!15216 = !DILocation(line: 1069, column: 3, scope: !15208)
!15217 = distinct !DISubprogram(name: "quote_n", scope: !954, file: !954, line: 1073, type: !1018, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15218 = !DILocalVariable(name: "n", arg: 1, scope: !15217, file: !954, line: 1073, type: !7)
!15219 = !DILocation(line: 1073, column: 14, scope: !15217)
!15220 = !DILocalVariable(name: "arg", arg: 2, scope: !15217, file: !954, line: 1073, type: !115)
!15221 = !DILocation(line: 1073, column: 29, scope: !15217)
!15222 = !DILocation(line: 1075, column: 23, scope: !15217)
!15223 = !DILocation(line: 1075, column: 26, scope: !15217)
!15224 = !DILocation(line: 1075, column: 10, scope: !15217)
!15225 = !DILocation(line: 1075, column: 3, scope: !15217)
!15226 = distinct !DISubprogram(name: "quote", scope: !954, file: !954, line: 1079, type: !1020, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !925, retainedNodes: !143)
!15227 = !DILocalVariable(name: "arg", arg: 1, scope: !15226, file: !954, line: 1079, type: !115)
!15228 = !DILocation(line: 1079, column: 20, scope: !15226)
!15229 = !DILocation(line: 1081, column: 22, scope: !15226)
!15230 = !DILocation(line: 1081, column: 10, scope: !15226)
!15231 = !DILocation(line: 1081, column: 3, scope: !15226)
!15232 = distinct !DISubprogram(name: "renameatu", scope: !15233, file: !15233, line: 77, type: !1828, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1825, retainedNodes: !143)
!15233 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mbarbar/clone/coreutils")
!15234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !15235)
!15235 = !{!15236, !15237, !15238, !15239, !15240, !15241, !15242, !15243, !15244, !15245, !15246, !15247, !15252, !15253, !15254}
!15236 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15234, file: !318, line: 48, baseType: !231, size: 64)
!15237 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15234, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!15238 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15234, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!15239 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15234, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!15240 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15234, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!15241 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15234, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!15242 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15234, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!15243 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15234, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!15244 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15234, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!15245 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15234, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!15246 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15234, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!15247 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15234, file: !318, line: 91, baseType: !15248, size: 128, offset: 576)
!15248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !15249)
!15249 = !{!15250, !15251}
!15250 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15248, file: !338, line: 11, baseType: !341, size: 64)
!15251 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15248, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!15252 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15234, file: !318, line: 92, baseType: !15248, size: 128, offset: 704)
!15253 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15234, file: !318, line: 93, baseType: !15248, size: 128, offset: 832)
!15254 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15234, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!15255 = !DILocalVariable(name: "fd1", arg: 1, scope: !15232, file: !15233, line: 77, type: !7)
!15256 = !DILocation(line: 77, column: 16, scope: !15232)
!15257 = !DILocalVariable(name: "src", arg: 2, scope: !15232, file: !15233, line: 77, type: !115)
!15258 = !DILocation(line: 77, column: 33, scope: !15232)
!15259 = !DILocalVariable(name: "fd2", arg: 3, scope: !15232, file: !15233, line: 77, type: !7)
!15260 = !DILocation(line: 77, column: 42, scope: !15232)
!15261 = !DILocalVariable(name: "dst", arg: 4, scope: !15232, file: !15233, line: 77, type: !115)
!15262 = !DILocation(line: 77, column: 59, scope: !15232)
!15263 = !DILocalVariable(name: "flags", arg: 5, scope: !15232, file: !15233, line: 78, type: !70)
!15264 = !DILocation(line: 78, column: 25, scope: !15232)
!15265 = !DILocalVariable(name: "ret_val", scope: !15232, file: !15233, line: 80, type: !7)
!15266 = !DILocation(line: 80, column: 7, scope: !15232)
!15267 = !DILocalVariable(name: "err", scope: !15232, file: !15233, line: 81, type: !7)
!15268 = !DILocation(line: 81, column: 7, scope: !15232)
!15269 = !DILocation(line: 84, column: 24, scope: !15232)
!15270 = !DILocation(line: 84, column: 29, scope: !15232)
!15271 = !DILocation(line: 84, column: 34, scope: !15232)
!15272 = !DILocation(line: 84, column: 39, scope: !15232)
!15273 = !DILocation(line: 84, column: 44, scope: !15232)
!15274 = !DILocation(line: 84, column: 13, scope: !15232)
!15275 = !DILocation(line: 84, column: 11, scope: !15232)
!15276 = !DILocation(line: 85, column: 9, scope: !15232)
!15277 = !DILocation(line: 85, column: 7, scope: !15232)
!15278 = !DILocation(line: 99, column: 10, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15232, file: !15233, line: 99, column: 7)
!15280 = !DILocation(line: 99, column: 18, scope: !15279)
!15281 = !DILocation(line: 99, column: 22, scope: !15279)
!15282 = !DILocation(line: 99, column: 26, scope: !15279)
!15283 = !DILocation(line: 99, column: 30, scope: !15279)
!15284 = !DILocation(line: 99, column: 40, scope: !15279)
!15285 = !DILocation(line: 99, column: 43, scope: !15279)
!15286 = !DILocation(line: 99, column: 47, scope: !15279)
!15287 = !DILocation(line: 99, column: 57, scope: !15279)
!15288 = !DILocation(line: 99, column: 60, scope: !15279)
!15289 = !DILocation(line: 99, column: 64, scope: !15279)
!15290 = !DILocation(line: 99, column: 7, scope: !15232)
!15291 = !DILocation(line: 100, column: 12, scope: !15279)
!15292 = !DILocation(line: 100, column: 5, scope: !15279)
!15293 = !DILocalVariable(name: "src_len", scope: !15294, file: !15233, line: 104, type: !55)
!15294 = distinct !DILexicalBlock(scope: !15232, file: !15233, line: 103, column: 3)
!15295 = !DILocation(line: 104, column: 10, scope: !15294)
!15296 = !DILocalVariable(name: "dst_len", scope: !15294, file: !15233, line: 105, type: !55)
!15297 = !DILocation(line: 105, column: 10, scope: !15294)
!15298 = !DILocalVariable(name: "src_temp", scope: !15294, file: !15233, line: 106, type: !9)
!15299 = !DILocation(line: 106, column: 9, scope: !15294)
!15300 = !DILocation(line: 106, column: 29, scope: !15294)
!15301 = !DILocalVariable(name: "dst_temp", scope: !15294, file: !15233, line: 107, type: !9)
!15302 = !DILocation(line: 107, column: 9, scope: !15294)
!15303 = !DILocation(line: 107, column: 29, scope: !15294)
!15304 = !DILocalVariable(name: "src_slash", scope: !15294, file: !15233, line: 108, type: !120)
!15305 = !DILocation(line: 108, column: 8, scope: !15294)
!15306 = !DILocalVariable(name: "dst_slash", scope: !15294, file: !15233, line: 109, type: !120)
!15307 = !DILocation(line: 109, column: 8, scope: !15294)
!15308 = !DILocalVariable(name: "rename_errno", scope: !15294, file: !15233, line: 110, type: !7)
!15309 = !DILocation(line: 110, column: 7, scope: !15294)
!15310 = !DILocalVariable(name: "src_st", scope: !15294, file: !15233, line: 111, type: !15234)
!15311 = !DILocation(line: 111, column: 15, scope: !15294)
!15312 = !DILocalVariable(name: "dst_st", scope: !15294, file: !15233, line: 112, type: !15234)
!15313 = !DILocation(line: 112, column: 15, scope: !15294)
!15314 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15294, file: !15233, line: 113, type: !120)
!15315 = !DILocation(line: 113, column: 8, scope: !15294)
!15316 = !DILocation(line: 115, column: 7, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15294, file: !15233, line: 115, column: 7)
!15318 = !DILocation(line: 115, column: 13, scope: !15317)
!15319 = !DILocation(line: 115, column: 7, scope: !15294)
!15320 = !DILocation(line: 118, column: 11, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15322, file: !15233, line: 118, column: 11)
!15322 = distinct !DILexicalBlock(scope: !15317, file: !15233, line: 116, column: 5)
!15323 = !DILocation(line: 118, column: 17, scope: !15321)
!15324 = !DILocation(line: 118, column: 11, scope: !15322)
!15325 = !DILocation(line: 119, column: 16, scope: !15321)
!15326 = !DILocation(line: 119, column: 9, scope: !15321)
!15327 = !DILocation(line: 124, column: 24, scope: !15328)
!15328 = distinct !DILexicalBlock(scope: !15329, file: !15233, line: 124, column: 15)
!15329 = distinct !DILexicalBlock(scope: !15321, file: !15233, line: 121, column: 9)
!15330 = !DILocation(line: 124, column: 29, scope: !15328)
!15331 = !DILocation(line: 124, column: 15, scope: !15328)
!15332 = !DILocation(line: 124, column: 43, scope: !15328)
!15333 = !DILocation(line: 124, column: 48, scope: !15328)
!15334 = !DILocation(line: 124, column: 51, scope: !15328)
!15335 = !DILocation(line: 124, column: 57, scope: !15328)
!15336 = !DILocation(line: 124, column: 15, scope: !15329)
!15337 = !DILocation(line: 125, column: 20, scope: !15328)
!15338 = !DILocation(line: 125, column: 13, scope: !15328)
!15339 = !DILocation(line: 126, column: 15, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15329, file: !15233, line: 126, column: 15)
!15341 = !DILocation(line: 126, column: 21, scope: !15340)
!15342 = !DILocation(line: 126, column: 15, scope: !15329)
!15343 = !DILocation(line: 127, column: 13, scope: !15340)
!15344 = !DILocation(line: 128, column: 33, scope: !15329)
!15345 = !DILocation(line: 130, column: 5, scope: !15322)
!15346 = !DILocation(line: 133, column: 21, scope: !15294)
!15347 = !DILocation(line: 133, column: 13, scope: !15294)
!15348 = !DILocation(line: 133, column: 11, scope: !15294)
!15349 = !DILocation(line: 134, column: 21, scope: !15294)
!15350 = !DILocation(line: 134, column: 13, scope: !15294)
!15351 = !DILocation(line: 134, column: 11, scope: !15294)
!15352 = !DILocation(line: 135, column: 8, scope: !15353)
!15353 = distinct !DILexicalBlock(scope: !15294, file: !15233, line: 135, column: 7)
!15354 = !DILocation(line: 135, column: 16, scope: !15353)
!15355 = !DILocation(line: 135, column: 20, scope: !15353)
!15356 = !DILocation(line: 135, column: 7, scope: !15294)
!15357 = !DILocation(line: 136, column: 22, scope: !15353)
!15358 = !DILocation(line: 136, column: 27, scope: !15353)
!15359 = !DILocation(line: 136, column: 32, scope: !15353)
!15360 = !DILocation(line: 136, column: 37, scope: !15353)
!15361 = !DILocation(line: 136, column: 12, scope: !15353)
!15362 = !DILocation(line: 136, column: 5, scope: !15353)
!15363 = !DILocation(line: 138, column: 15, scope: !15294)
!15364 = !DILocation(line: 138, column: 19, scope: !15294)
!15365 = !DILocation(line: 138, column: 27, scope: !15294)
!15366 = !DILocation(line: 138, column: 32, scope: !15294)
!15367 = !DILocation(line: 138, column: 13, scope: !15294)
!15368 = !DILocation(line: 139, column: 15, scope: !15294)
!15369 = !DILocation(line: 139, column: 19, scope: !15294)
!15370 = !DILocation(line: 139, column: 27, scope: !15294)
!15371 = !DILocation(line: 139, column: 32, scope: !15294)
!15372 = !DILocation(line: 139, column: 13, scope: !15294)
!15373 = !DILocation(line: 140, column: 8, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15294, file: !15233, line: 140, column: 7)
!15375 = !DILocation(line: 140, column: 18, scope: !15374)
!15376 = !DILocation(line: 140, column: 22, scope: !15374)
!15377 = !DILocation(line: 140, column: 7, scope: !15294)
!15378 = !DILocation(line: 141, column: 22, scope: !15374)
!15379 = !DILocation(line: 141, column: 27, scope: !15374)
!15380 = !DILocation(line: 141, column: 32, scope: !15374)
!15381 = !DILocation(line: 141, column: 37, scope: !15374)
!15382 = !DILocation(line: 141, column: 12, scope: !15374)
!15383 = !DILocation(line: 141, column: 5, scope: !15374)
!15384 = !DILocation(line: 147, column: 16, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15294, file: !15233, line: 147, column: 7)
!15386 = !DILocation(line: 147, column: 21, scope: !15385)
!15387 = !DILocation(line: 147, column: 7, scope: !15385)
!15388 = !DILocation(line: 147, column: 7, scope: !15294)
!15389 = !DILocation(line: 148, column: 5, scope: !15385)
!15390 = !DILocation(line: 149, column: 7, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15294, file: !15233, line: 149, column: 7)
!15392 = !DILocation(line: 149, column: 7, scope: !15294)
!15393 = !DILocation(line: 151, column: 12, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15395, file: !15233, line: 151, column: 11)
!15395 = distinct !DILexicalBlock(scope: !15391, file: !15233, line: 150, column: 5)
!15396 = !DILocation(line: 151, column: 11, scope: !15395)
!15397 = !DILocation(line: 152, column: 16, scope: !15394)
!15398 = !DILocation(line: 152, column: 9, scope: !15394)
!15399 = !DILocation(line: 153, column: 5, scope: !15395)
!15400 = !DILocation(line: 154, column: 21, scope: !15401)
!15401 = distinct !DILexicalBlock(scope: !15391, file: !15233, line: 154, column: 12)
!15402 = !DILocation(line: 154, column: 26, scope: !15401)
!15403 = !DILocation(line: 154, column: 12, scope: !15401)
!15404 = !DILocation(line: 154, column: 12, scope: !15391)
!15405 = !DILocation(line: 156, column: 11, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15407, file: !15233, line: 156, column: 11)
!15407 = distinct !DILexicalBlock(scope: !15401, file: !15233, line: 155, column: 5)
!15408 = !DILocation(line: 156, column: 17, scope: !15406)
!15409 = !DILocation(line: 156, column: 27, scope: !15406)
!15410 = !DILocation(line: 156, column: 31, scope: !15406)
!15411 = !DILocation(line: 156, column: 11, scope: !15407)
!15412 = !DILocation(line: 157, column: 9, scope: !15406)
!15413 = !DILocation(line: 158, column: 5, scope: !15407)
!15414 = !DILocation(line: 159, column: 13, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15401, file: !15233, line: 159, column: 12)
!15416 = !DILocation(line: 159, column: 12, scope: !15401)
!15417 = !DILocation(line: 160, column: 12, scope: !15415)
!15418 = !DILocation(line: 160, column: 5, scope: !15415)
!15419 = !DILocation(line: 161, column: 13, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15415, file: !15233, line: 161, column: 12)
!15421 = !DILocation(line: 161, column: 12, scope: !15415)
!15422 = !DILocation(line: 162, column: 12, scope: !15420)
!15423 = !DILocation(line: 162, column: 5, scope: !15420)
!15424 = !DILocation(line: 214, column: 23, scope: !15294)
!15425 = !DILocation(line: 214, column: 28, scope: !15294)
!15426 = !DILocation(line: 214, column: 38, scope: !15294)
!15427 = !DILocation(line: 214, column: 43, scope: !15294)
!15428 = !DILocation(line: 214, column: 13, scope: !15294)
!15429 = !DILocation(line: 214, column: 11, scope: !15294)
!15430 = !DILocation(line: 215, column: 18, scope: !15294)
!15431 = !DILocation(line: 215, column: 16, scope: !15294)
!15432 = !DILocation(line: 216, column: 3, scope: !15294)
!15433 = !DILabel(scope: !15294, name: "out", file: !15233, line: 217)
!15434 = !DILocation(line: 217, column: 2, scope: !15294)
!15435 = !DILocation(line: 218, column: 7, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15294, file: !15233, line: 218, column: 7)
!15437 = !DILocation(line: 218, column: 19, scope: !15436)
!15438 = !DILocation(line: 218, column: 16, scope: !15436)
!15439 = !DILocation(line: 218, column: 7, scope: !15294)
!15440 = !DILocation(line: 219, column: 11, scope: !15436)
!15441 = !DILocation(line: 219, column: 5, scope: !15436)
!15442 = !DILocation(line: 220, column: 7, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15294, file: !15233, line: 220, column: 7)
!15444 = !DILocation(line: 220, column: 19, scope: !15443)
!15445 = !DILocation(line: 220, column: 16, scope: !15443)
!15446 = !DILocation(line: 220, column: 7, scope: !15294)
!15447 = !DILocation(line: 221, column: 11, scope: !15443)
!15448 = !DILocation(line: 221, column: 5, scope: !15443)
!15449 = !DILocation(line: 222, column: 11, scope: !15294)
!15450 = !DILocation(line: 222, column: 3, scope: !15294)
!15451 = !DILocation(line: 222, column: 9, scope: !15294)
!15452 = !DILocation(line: 223, column: 10, scope: !15294)
!15453 = !DILocation(line: 223, column: 3, scope: !15294)
!15454 = !DILocation(line: 233, column: 1, scope: !15232)
!15455 = distinct !DISubprogram(name: "errno_fail", scope: !15233, file: !15233, line: 33, type: !1830, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1825, retainedNodes: !143)
!15456 = !DILocalVariable(name: "e", arg: 1, scope: !15455, file: !15233, line: 33, type: !7)
!15457 = !DILocation(line: 33, column: 17, scope: !15455)
!15458 = !DILocation(line: 35, column: 11, scope: !15455)
!15459 = !DILocation(line: 35, column: 3, scope: !15455)
!15460 = !DILocation(line: 35, column: 9, scope: !15455)
!15461 = !DILocation(line: 36, column: 3, scope: !15455)
!15462 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !15463, file: !15463, line: 29, type: !1835, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1832, retainedNodes: !143)
!15463 = !DIFile(filename: "lib/root-dev-ino.c", directory: "/home/mbarbar/clone/coreutils")
!15464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !15465)
!15465 = !{!15466, !15467, !15468, !15469, !15470, !15471, !15472, !15473, !15474, !15475, !15476, !15477, !15482, !15483, !15484}
!15466 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15464, file: !318, line: 48, baseType: !231, size: 64)
!15467 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15464, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!15468 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15464, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!15469 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15464, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!15470 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15464, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!15471 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15464, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!15472 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15464, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!15473 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15464, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!15474 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15464, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!15475 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15464, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!15476 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15464, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!15477 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15464, file: !318, line: 91, baseType: !15478, size: 128, offset: 576)
!15478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !15479)
!15479 = !{!15480, !15481}
!15480 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15478, file: !338, line: 11, baseType: !341, size: 64)
!15481 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15478, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!15482 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15464, file: !318, line: 92, baseType: !15478, size: 128, offset: 704)
!15483 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15464, file: !318, line: 93, baseType: !15478, size: 128, offset: 832)
!15484 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15464, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!15485 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !15462, file: !15463, line: 29, type: !1837)
!15486 = !DILocation(line: 29, column: 35, scope: !15462)
!15487 = !DILocalVariable(name: "statbuf", scope: !15462, file: !15463, line: 31, type: !15464)
!15488 = !DILocation(line: 31, column: 15, scope: !15462)
!15489 = !DILocation(line: 32, column: 7, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15462, file: !15463, line: 32, column: 7)
!15491 = !DILocation(line: 32, column: 7, scope: !15462)
!15492 = !DILocation(line: 33, column: 5, scope: !15490)
!15493 = !DILocation(line: 34, column: 30, scope: !15462)
!15494 = !DILocation(line: 34, column: 3, scope: !15462)
!15495 = !DILocation(line: 34, column: 13, scope: !15462)
!15496 = !DILocation(line: 34, column: 20, scope: !15462)
!15497 = !DILocation(line: 35, column: 30, scope: !15462)
!15498 = !DILocation(line: 35, column: 3, scope: !15462)
!15499 = !DILocation(line: 35, column: 13, scope: !15462)
!15500 = !DILocation(line: 35, column: 20, scope: !15462)
!15501 = !DILocation(line: 36, column: 10, scope: !15462)
!15502 = !DILocation(line: 36, column: 3, scope: !15462)
!15503 = !DILocation(line: 37, column: 1, scope: !15462)
!15504 = distinct !DISubprogram(name: "safe_write", scope: !15505, file: !15505, line: 56, type: !1797, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1842, retainedNodes: !143)
!15505 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mbarbar/clone/coreutils")
!15506 = !DILocalVariable(name: "fd", arg: 1, scope: !15504, file: !15505, line: 56, type: !7)
!15507 = !DILocation(line: 56, column: 14, scope: !15504)
!15508 = !DILocalVariable(name: "buf", arg: 2, scope: !15504, file: !15505, line: 56, type: !427)
!15509 = !DILocation(line: 56, column: 30, scope: !15504)
!15510 = !DILocalVariable(name: "count", arg: 3, scope: !15504, file: !15505, line: 56, type: !55)
!15511 = !DILocation(line: 56, column: 42, scope: !15504)
!15512 = !DILocation(line: 58, column: 3, scope: !15504)
!15513 = !DILocalVariable(name: "result", scope: !15514, file: !15505, line: 60, type: !608)
!15514 = distinct !DILexicalBlock(scope: !15515, file: !15505, line: 59, column: 5)
!15515 = distinct !DILexicalBlock(scope: !15516, file: !15505, line: 58, column: 3)
!15516 = distinct !DILexicalBlock(scope: !15504, file: !15505, line: 58, column: 3)
!15517 = !DILocation(line: 60, column: 15, scope: !15514)
!15518 = !DILocation(line: 60, column: 28, scope: !15514)
!15519 = !DILocation(line: 60, column: 32, scope: !15514)
!15520 = !DILocation(line: 60, column: 37, scope: !15514)
!15521 = !DILocation(line: 60, column: 24, scope: !15514)
!15522 = !DILocation(line: 62, column: 16, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15514, file: !15505, line: 62, column: 11)
!15524 = !DILocation(line: 62, column: 13, scope: !15523)
!15525 = !DILocation(line: 62, column: 11, scope: !15514)
!15526 = !DILocation(line: 63, column: 16, scope: !15523)
!15527 = !DILocation(line: 63, column: 9, scope: !15523)
!15528 = !DILocation(line: 64, column: 16, scope: !15529)
!15529 = distinct !DILexicalBlock(scope: !15523, file: !15505, line: 64, column: 16)
!15530 = !DILocation(line: 64, column: 16, scope: !15523)
!15531 = !DILocation(line: 65, column: 9, scope: !15529)
!15532 = distinct !{!15532, !15533, !15534}
!15533 = !DILocation(line: 58, column: 3, scope: !15516)
!15534 = !DILocation(line: 70, column: 5, scope: !15516)
!15535 = !DILocation(line: 66, column: 16, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15529, file: !15505, line: 66, column: 16)
!15537 = !DILocation(line: 66, column: 22, scope: !15536)
!15538 = !DILocation(line: 66, column: 32, scope: !15536)
!15539 = !DILocation(line: 66, column: 53, scope: !15536)
!15540 = !DILocation(line: 66, column: 51, scope: !15536)
!15541 = !DILocation(line: 66, column: 16, scope: !15529)
!15542 = !DILocation(line: 67, column: 15, scope: !15536)
!15543 = !DILocation(line: 67, column: 9, scope: !15536)
!15544 = !DILocation(line: 69, column: 16, scope: !15536)
!15545 = !DILocation(line: 69, column: 9, scope: !15536)
!15546 = !DILocation(line: 58, column: 3, scope: !15515)
!15547 = !DILocation(line: 71, column: 1, scope: !15504)
!15548 = distinct !DISubprogram(name: "same_name", scope: !15549, file: !15549, line: 61, type: !1848, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1845, retainedNodes: !143)
!15549 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/clone/coreutils")
!15550 = !DILocalVariable(name: "source", arg: 1, scope: !15548, file: !15549, line: 61, type: !115)
!15551 = !DILocation(line: 61, column: 24, scope: !15548)
!15552 = !DILocalVariable(name: "dest", arg: 2, scope: !15548, file: !15549, line: 61, type: !115)
!15553 = !DILocation(line: 61, column: 44, scope: !15548)
!15554 = !DILocation(line: 63, column: 33, scope: !15548)
!15555 = !DILocation(line: 63, column: 51, scope: !15548)
!15556 = !DILocation(line: 63, column: 10, scope: !15548)
!15557 = !DILocation(line: 63, column: 3, scope: !15548)
!15558 = distinct !DISubprogram(name: "same_nameat", scope: !15549, file: !15549, line: 70, type: !1850, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1845, retainedNodes: !143)
!15559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !15560)
!15560 = !{!15561, !15562, !15563, !15564, !15565, !15566, !15567, !15568, !15569, !15570, !15571, !15572, !15577, !15578, !15579}
!15561 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15559, file: !318, line: 48, baseType: !231, size: 64)
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15559, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15559, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15559, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15559, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15559, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15559, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15559, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15559, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15559, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15559, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15559, file: !318, line: 91, baseType: !15573, size: 128, offset: 576)
!15573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !15574)
!15574 = !{!15575, !15576}
!15575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15573, file: !338, line: 11, baseType: !341, size: 64)
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15573, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!15577 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15559, file: !318, line: 92, baseType: !15573, size: 128, offset: 704)
!15578 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15559, file: !318, line: 93, baseType: !15573, size: 128, offset: 832)
!15579 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15559, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!15580 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !15558, file: !15549, line: 70, type: !7)
!15581 = !DILocation(line: 70, column: 18, scope: !15558)
!15582 = !DILocalVariable(name: "source", arg: 2, scope: !15558, file: !15549, line: 70, type: !115)
!15583 = !DILocation(line: 70, column: 42, scope: !15558)
!15584 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !15558, file: !15549, line: 71, type: !7)
!15585 = !DILocation(line: 71, column: 18, scope: !15558)
!15586 = !DILocalVariable(name: "dest", arg: 4, scope: !15558, file: !15549, line: 71, type: !115)
!15587 = !DILocation(line: 71, column: 40, scope: !15558)
!15588 = !DILocalVariable(name: "source_basename", scope: !15558, file: !15549, line: 74, type: !115)
!15589 = !DILocation(line: 74, column: 15, scope: !15558)
!15590 = !DILocation(line: 74, column: 49, scope: !15558)
!15591 = !DILocation(line: 74, column: 33, scope: !15558)
!15592 = !DILocalVariable(name: "dest_basename", scope: !15558, file: !15549, line: 75, type: !115)
!15593 = !DILocation(line: 75, column: 15, scope: !15558)
!15594 = !DILocation(line: 75, column: 47, scope: !15558)
!15595 = !DILocation(line: 75, column: 31, scope: !15558)
!15596 = !DILocalVariable(name: "source_baselen", scope: !15558, file: !15549, line: 76, type: !55)
!15597 = !DILocation(line: 76, column: 10, scope: !15558)
!15598 = !DILocation(line: 76, column: 37, scope: !15558)
!15599 = !DILocation(line: 76, column: 27, scope: !15558)
!15600 = !DILocalVariable(name: "dest_baselen", scope: !15558, file: !15549, line: 77, type: !55)
!15601 = !DILocation(line: 77, column: 10, scope: !15558)
!15602 = !DILocation(line: 77, column: 35, scope: !15558)
!15603 = !DILocation(line: 77, column: 25, scope: !15558)
!15604 = !DILocalVariable(name: "identical_basenames", scope: !15558, file: !15549, line: 78, type: !120)
!15605 = !DILocation(line: 78, column: 8, scope: !15558)
!15606 = !DILocation(line: 79, column: 6, scope: !15558)
!15607 = !DILocation(line: 79, column: 24, scope: !15558)
!15608 = !DILocation(line: 79, column: 21, scope: !15558)
!15609 = !DILocation(line: 80, column: 6, scope: !15558)
!15610 = !DILocation(line: 80, column: 17, scope: !15558)
!15611 = !DILocation(line: 80, column: 34, scope: !15558)
!15612 = !DILocation(line: 80, column: 49, scope: !15558)
!15613 = !DILocation(line: 80, column: 9, scope: !15558)
!15614 = !DILocation(line: 80, column: 63, scope: !15558)
!15615 = !DILocation(line: 0, scope: !15558)
!15616 = !DILocalVariable(name: "compare_dirs", scope: !15558, file: !15549, line: 81, type: !120)
!15617 = !DILocation(line: 81, column: 8, scope: !15558)
!15618 = !DILocation(line: 81, column: 23, scope: !15558)
!15619 = !DILocalVariable(name: "same", scope: !15558, file: !15549, line: 82, type: !120)
!15620 = !DILocation(line: 82, column: 8, scope: !15558)
!15621 = !DILocation(line: 92, column: 7, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15558, file: !15549, line: 92, column: 7)
!15623 = !DILocation(line: 92, column: 7, scope: !15558)
!15624 = !DILocalVariable(name: "source_dir_stats", scope: !15625, file: !15549, line: 94, type: !15559)
!15625 = distinct !DILexicalBlock(scope: !15622, file: !15549, line: 93, column: 5)
!15626 = !DILocation(line: 94, column: 19, scope: !15625)
!15627 = !DILocalVariable(name: "dest_dir_stats", scope: !15625, file: !15549, line: 95, type: !15559)
!15628 = !DILocation(line: 95, column: 19, scope: !15625)
!15629 = !DILocalVariable(name: "source_dirname", scope: !15625, file: !15549, line: 98, type: !9)
!15630 = !DILocation(line: 98, column: 13, scope: !15625)
!15631 = !DILocation(line: 98, column: 40, scope: !15625)
!15632 = !DILocation(line: 98, column: 30, scope: !15625)
!15633 = !DILocalVariable(name: "flags", scope: !15625, file: !15549, line: 99, type: !7)
!15634 = !DILocation(line: 99, column: 11, scope: !15625)
!15635 = !DILocation(line: 100, column: 20, scope: !15636)
!15636 = distinct !DILexicalBlock(scope: !15625, file: !15549, line: 100, column: 11)
!15637 = !DILocation(line: 100, column: 32, scope: !15636)
!15638 = !DILocation(line: 100, column: 67, scope: !15636)
!15639 = !DILocation(line: 100, column: 11, scope: !15636)
!15640 = !DILocation(line: 100, column: 74, scope: !15636)
!15641 = !DILocation(line: 100, column: 11, scope: !15625)
!15642 = !DILocation(line: 103, column: 21, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15636, file: !15549, line: 101, column: 9)
!15644 = !DILocation(line: 103, column: 34, scope: !15643)
!15645 = !DILocation(line: 103, column: 11, scope: !15643)
!15646 = !DILocation(line: 104, column: 9, scope: !15643)
!15647 = !DILocation(line: 105, column: 13, scope: !15625)
!15648 = !DILocation(line: 105, column: 7, scope: !15625)
!15649 = !DILocalVariable(name: "dest_dirname", scope: !15625, file: !15549, line: 107, type: !9)
!15650 = !DILocation(line: 107, column: 13, scope: !15625)
!15651 = !DILocation(line: 107, column: 38, scope: !15625)
!15652 = !DILocation(line: 107, column: 28, scope: !15625)
!15653 = !DILocation(line: 137, column: 20, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15625, file: !15549, line: 137, column: 11)
!15655 = !DILocation(line: 137, column: 30, scope: !15654)
!15656 = !DILocation(line: 137, column: 61, scope: !15654)
!15657 = !DILocation(line: 137, column: 11, scope: !15654)
!15658 = !DILocation(line: 137, column: 68, scope: !15654)
!15659 = !DILocation(line: 137, column: 11, scope: !15625)
!15660 = !DILocation(line: 140, column: 21, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15654, file: !15549, line: 138, column: 9)
!15662 = !DILocation(line: 140, column: 34, scope: !15661)
!15663 = !DILocation(line: 140, column: 11, scope: !15661)
!15664 = !DILocation(line: 141, column: 9, scope: !15661)
!15665 = !DILocation(line: 142, column: 14, scope: !15625)
!15666 = !DILocation(line: 0, scope: !15625)
!15667 = !DILocation(line: 142, column: 12, scope: !15625)
!15668 = !DILocation(line: 145, column: 13, scope: !15625)
!15669 = !DILocation(line: 145, column: 7, scope: !15625)
!15670 = !DILocation(line: 146, column: 5, scope: !15625)
!15671 = !DILocation(line: 148, column: 10, scope: !15558)
!15672 = !DILocation(line: 148, column: 3, scope: !15558)
!15673 = distinct !DISubprogram(name: "streamsavedir", scope: !1082, file: !1082, line: 91, type: !1078, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1067, retainedNodes: !143)
!15674 = !DILocalVariable(name: "dirp", arg: 1, scope: !15673, file: !1082, line: 91, type: !609)
!15675 = !DILocation(line: 91, column: 21, scope: !15673)
!15676 = !DILocalVariable(name: "option", arg: 2, scope: !15673, file: !1082, line: 91, type: !1070)
!15677 = !DILocation(line: 91, column: 47, scope: !15673)
!15678 = !DILocalVariable(name: "name_space", scope: !15673, file: !1082, line: 93, type: !9)
!15679 = !DILocation(line: 93, column: 9, scope: !15673)
!15680 = !DILocalVariable(name: "allocated", scope: !15673, file: !1082, line: 94, type: !55)
!15681 = !DILocation(line: 94, column: 10, scope: !15673)
!15682 = !DILocalVariable(name: "entries", scope: !15673, file: !1082, line: 95, type: !1080)
!15683 = !DILocation(line: 95, column: 15, scope: !15673)
!15684 = !DILocalVariable(name: "entries_allocated", scope: !15673, file: !1082, line: 96, type: !55)
!15685 = !DILocation(line: 96, column: 10, scope: !15673)
!15686 = !DILocalVariable(name: "entries_used", scope: !15673, file: !1082, line: 97, type: !55)
!15687 = !DILocation(line: 97, column: 10, scope: !15673)
!15688 = !DILocalVariable(name: "used", scope: !15673, file: !1082, line: 98, type: !55)
!15689 = !DILocation(line: 98, column: 10, scope: !15673)
!15690 = !DILocalVariable(name: "readdir_errno", scope: !15673, file: !1082, line: 99, type: !7)
!15691 = !DILocation(line: 99, column: 7, scope: !15673)
!15692 = !DILocalVariable(name: "cmp", scope: !15673, file: !1082, line: 100, type: !1088)
!15693 = !DILocation(line: 100, column: 23, scope: !15673)
!15694 = !DILocation(line: 100, column: 55, scope: !15673)
!15695 = !DILocation(line: 100, column: 29, scope: !15673)
!15696 = !DILocation(line: 102, column: 7, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15673, file: !1082, line: 102, column: 7)
!15698 = !DILocation(line: 102, column: 12, scope: !15697)
!15699 = !DILocation(line: 102, column: 7, scope: !15673)
!15700 = !DILocation(line: 103, column: 5, scope: !15697)
!15701 = !DILocation(line: 105, column: 3, scope: !15673)
!15702 = !DILocalVariable(name: "dp", scope: !15703, file: !1082, line: 107, type: !1094)
!15703 = distinct !DILexicalBlock(scope: !15704, file: !1082, line: 106, column: 5)
!15704 = distinct !DILexicalBlock(scope: !15705, file: !1082, line: 105, column: 3)
!15705 = distinct !DILexicalBlock(scope: !15673, file: !1082, line: 105, column: 3)
!15706 = !DILocation(line: 107, column: 28, scope: !15703)
!15707 = !DILocalVariable(name: "entry", scope: !15703, file: !1082, line: 108, type: !115)
!15708 = !DILocation(line: 108, column: 19, scope: !15703)
!15709 = !DILocation(line: 110, column: 7, scope: !15703)
!15710 = !DILocation(line: 110, column: 13, scope: !15703)
!15711 = !DILocation(line: 111, column: 21, scope: !15703)
!15712 = !DILocation(line: 111, column: 12, scope: !15703)
!15713 = !DILocation(line: 111, column: 10, scope: !15703)
!15714 = !DILocation(line: 112, column: 13, scope: !15715)
!15715 = distinct !DILexicalBlock(scope: !15703, file: !1082, line: 112, column: 11)
!15716 = !DILocation(line: 112, column: 11, scope: !15703)
!15717 = !DILocation(line: 113, column: 9, scope: !15715)
!15718 = !DILocation(line: 117, column: 15, scope: !15703)
!15719 = !DILocation(line: 117, column: 19, scope: !15703)
!15720 = !DILocation(line: 117, column: 13, scope: !15703)
!15721 = !DILocation(line: 118, column: 11, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15703, file: !1082, line: 118, column: 11)
!15723 = !DILocation(line: 118, column: 17, scope: !15722)
!15724 = !DILocation(line: 118, column: 26, scope: !15722)
!15725 = !DILocation(line: 118, column: 39, scope: !15722)
!15726 = !DILocation(line: 118, column: 48, scope: !15722)
!15727 = !DILocation(line: 118, column: 64, scope: !15722)
!15728 = !DILocation(line: 118, column: 11, scope: !15703)
!15729 = !DILocalVariable(name: "entry_size", scope: !15730, file: !1082, line: 120, type: !55)
!15730 = distinct !DILexicalBlock(scope: !15722, file: !1082, line: 119, column: 9)
!15731 = !DILocation(line: 120, column: 18, scope: !15730)
!15732 = !DILocation(line: 120, column: 31, scope: !15730)
!15733 = !DILocation(line: 120, column: 52, scope: !15730)
!15734 = !DILocation(line: 121, column: 15, scope: !15735)
!15735 = distinct !DILexicalBlock(scope: !15730, file: !1082, line: 121, column: 15)
!15736 = !DILocation(line: 121, column: 15, scope: !15730)
!15737 = !DILocation(line: 123, column: 19, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15739, file: !1082, line: 123, column: 19)
!15739 = distinct !DILexicalBlock(scope: !15735, file: !1082, line: 122, column: 13)
!15740 = !DILocation(line: 123, column: 40, scope: !15738)
!15741 = !DILocation(line: 123, column: 37, scope: !15738)
!15742 = !DILocation(line: 123, column: 19, scope: !15739)
!15743 = !DILocalVariable(name: "n", scope: !15744, file: !1082, line: 125, type: !55)
!15744 = distinct !DILexicalBlock(scope: !15738, file: !1082, line: 124, column: 17)
!15745 = !DILocation(line: 125, column: 26, scope: !15744)
!15746 = !DILocation(line: 125, column: 30, scope: !15744)
!15747 = !DILocation(line: 126, column: 41, scope: !15744)
!15748 = !DILocation(line: 126, column: 29, scope: !15744)
!15749 = !DILocation(line: 126, column: 27, scope: !15744)
!15750 = !DILocation(line: 127, column: 39, scope: !15744)
!15751 = !DILocation(line: 127, column: 37, scope: !15744)
!15752 = !DILocation(line: 128, column: 17, scope: !15744)
!15753 = !DILocation(line: 129, column: 53, scope: !15739)
!15754 = !DILocation(line: 129, column: 44, scope: !15739)
!15755 = !DILocation(line: 129, column: 15, scope: !15739)
!15756 = !DILocation(line: 129, column: 23, scope: !15739)
!15757 = !DILocation(line: 129, column: 37, scope: !15739)
!15758 = !DILocation(line: 129, column: 42, scope: !15739)
!15759 = !{!15760, !2999, i64 0}
!15760 = !{!"", !2999, i64 0, !3183, i64 8}
!15761 = !DILocation(line: 131, column: 43, scope: !15739)
!15762 = !DILocation(line: 131, column: 47, scope: !15739)
!15763 = !{!15764, !3183, i64 0}
!15764 = !{!"dirent", !3183, i64 0, !3183, i64 8, !3814, i64 16, !2987, i64 18, !2987, i64 19}
!15765 = !DILocation(line: 131, column: 15, scope: !15739)
!15766 = !DILocation(line: 131, column: 23, scope: !15739)
!15767 = !DILocation(line: 131, column: 37, scope: !15739)
!15768 = !DILocation(line: 131, column: 41, scope: !15739)
!15769 = !{!15760, !3183, i64 8}
!15770 = !DILocation(line: 133, column: 27, scope: !15739)
!15771 = !DILocation(line: 134, column: 13, scope: !15739)
!15772 = !DILocation(line: 137, column: 19, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15774, file: !1082, line: 137, column: 19)
!15774 = distinct !DILexicalBlock(scope: !15735, file: !1082, line: 136, column: 13)
!15775 = !DILocation(line: 137, column: 31, scope: !15773)
!15776 = !DILocation(line: 137, column: 29, scope: !15773)
!15777 = !DILocation(line: 137, column: 39, scope: !15773)
!15778 = !DILocation(line: 137, column: 36, scope: !15773)
!15779 = !DILocation(line: 137, column: 19, scope: !15774)
!15780 = !DILocalVariable(name: "n", scope: !15781, file: !1082, line: 139, type: !55)
!15781 = distinct !DILexicalBlock(scope: !15773, file: !1082, line: 138, column: 17)
!15782 = !DILocation(line: 139, column: 26, scope: !15781)
!15783 = !DILocation(line: 139, column: 30, scope: !15781)
!15784 = !DILocation(line: 139, column: 37, scope: !15781)
!15785 = !DILocation(line: 139, column: 35, scope: !15781)
!15786 = !DILocation(line: 140, column: 23, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15781, file: !1082, line: 140, column: 23)
!15788 = !DILocation(line: 140, column: 27, scope: !15787)
!15789 = !DILocation(line: 140, column: 25, scope: !15787)
!15790 = !DILocation(line: 140, column: 23, scope: !15781)
!15791 = !DILocation(line: 141, column: 21, scope: !15787)
!15792 = !DILocation(line: 142, column: 44, scope: !15781)
!15793 = !DILocation(line: 142, column: 32, scope: !15781)
!15794 = !DILocation(line: 142, column: 30, scope: !15781)
!15795 = !DILocation(line: 143, column: 31, scope: !15781)
!15796 = !DILocation(line: 143, column: 29, scope: !15781)
!15797 = !DILocation(line: 144, column: 17, scope: !15781)
!15798 = !DILocation(line: 145, column: 23, scope: !15774)
!15799 = !DILocation(line: 145, column: 36, scope: !15774)
!15800 = !DILocation(line: 145, column: 34, scope: !15774)
!15801 = !DILocation(line: 145, column: 42, scope: !15774)
!15802 = !DILocation(line: 145, column: 49, scope: !15774)
!15803 = !DILocation(line: 145, column: 15, scope: !15774)
!15804 = !DILocation(line: 147, column: 19, scope: !15730)
!15805 = !DILocation(line: 147, column: 16, scope: !15730)
!15806 = !DILocation(line: 148, column: 9, scope: !15730)
!15807 = !DILocation(line: 105, column: 3, scope: !15704)
!15808 = distinct !{!15808, !15809, !15810}
!15809 = !DILocation(line: 105, column: 3, scope: !15705)
!15810 = !DILocation(line: 149, column: 5, scope: !15705)
!15811 = !DILocation(line: 151, column: 19, scope: !15673)
!15812 = !DILocation(line: 151, column: 17, scope: !15673)
!15813 = !DILocation(line: 152, column: 7, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15673, file: !1082, line: 152, column: 7)
!15815 = !DILocation(line: 152, column: 21, scope: !15814)
!15816 = !DILocation(line: 152, column: 7, scope: !15673)
!15817 = !DILocation(line: 154, column: 13, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15814, file: !1082, line: 153, column: 5)
!15819 = !DILocation(line: 154, column: 7, scope: !15818)
!15820 = !DILocation(line: 155, column: 13, scope: !15818)
!15821 = !DILocation(line: 155, column: 7, scope: !15818)
!15822 = !DILocation(line: 156, column: 15, scope: !15818)
!15823 = !DILocation(line: 156, column: 7, scope: !15818)
!15824 = !DILocation(line: 156, column: 13, scope: !15818)
!15825 = !DILocation(line: 157, column: 7, scope: !15818)
!15826 = !DILocation(line: 160, column: 7, scope: !15827)
!15827 = distinct !DILexicalBlock(scope: !15673, file: !1082, line: 160, column: 7)
!15828 = !DILocation(line: 160, column: 7, scope: !15673)
!15829 = !DILocalVariable(name: "i", scope: !15830, file: !1082, line: 162, type: !55)
!15830 = distinct !DILexicalBlock(scope: !15827, file: !1082, line: 161, column: 5)
!15831 = !DILocation(line: 162, column: 14, scope: !15830)
!15832 = !DILocation(line: 164, column: 11, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15830, file: !1082, line: 164, column: 11)
!15834 = !DILocation(line: 164, column: 11, scope: !15830)
!15835 = !DILocation(line: 165, column: 16, scope: !15833)
!15836 = !DILocation(line: 165, column: 25, scope: !15833)
!15837 = !DILocation(line: 165, column: 56, scope: !15833)
!15838 = !DILocation(line: 165, column: 9, scope: !15833)
!15839 = !DILocation(line: 166, column: 29, scope: !15830)
!15840 = !DILocation(line: 166, column: 34, scope: !15830)
!15841 = !DILocation(line: 166, column: 20, scope: !15830)
!15842 = !DILocation(line: 166, column: 18, scope: !15830)
!15843 = !DILocation(line: 167, column: 12, scope: !15830)
!15844 = !DILocation(line: 168, column: 14, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15830, file: !1082, line: 168, column: 7)
!15846 = !DILocation(line: 168, column: 12, scope: !15845)
!15847 = !DILocation(line: 168, column: 19, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15845, file: !1082, line: 168, column: 7)
!15849 = !DILocation(line: 168, column: 23, scope: !15848)
!15850 = !DILocation(line: 168, column: 21, scope: !15848)
!15851 = !DILocation(line: 168, column: 7, scope: !15845)
!15852 = !DILocalVariable(name: "dest", scope: !15853, file: !1082, line: 170, type: !9)
!15853 = distinct !DILexicalBlock(scope: !15848, file: !1082, line: 169, column: 9)
!15854 = !DILocation(line: 170, column: 17, scope: !15853)
!15855 = !DILocation(line: 170, column: 24, scope: !15853)
!15856 = !DILocation(line: 170, column: 37, scope: !15853)
!15857 = !DILocation(line: 170, column: 35, scope: !15853)
!15858 = !DILocation(line: 171, column: 27, scope: !15853)
!15859 = !DILocation(line: 171, column: 33, scope: !15853)
!15860 = !DILocation(line: 171, column: 41, scope: !15853)
!15861 = !DILocation(line: 171, column: 44, scope: !15853)
!15862 = !DILocation(line: 171, column: 19, scope: !15853)
!15863 = !DILocation(line: 171, column: 52, scope: !15853)
!15864 = !DILocation(line: 171, column: 50, scope: !15853)
!15865 = !DILocation(line: 171, column: 57, scope: !15853)
!15866 = !DILocation(line: 171, column: 16, scope: !15853)
!15867 = !DILocation(line: 172, column: 17, scope: !15853)
!15868 = !DILocation(line: 172, column: 25, scope: !15853)
!15869 = !DILocation(line: 172, column: 28, scope: !15853)
!15870 = !DILocation(line: 172, column: 11, scope: !15853)
!15871 = !DILocation(line: 173, column: 9, scope: !15853)
!15872 = !DILocation(line: 168, column: 38, scope: !15848)
!15873 = !DILocation(line: 168, column: 7, scope: !15848)
!15874 = distinct !{!15874, !15851, !15875}
!15875 = !DILocation(line: 173, column: 9, scope: !15845)
!15876 = !DILocation(line: 174, column: 13, scope: !15830)
!15877 = !DILocation(line: 174, column: 7, scope: !15830)
!15878 = !DILocation(line: 175, column: 5, scope: !15830)
!15879 = !DILocation(line: 176, column: 12, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15827, file: !1082, line: 176, column: 12)
!15881 = !DILocation(line: 176, column: 20, scope: !15880)
!15882 = !DILocation(line: 176, column: 17, scope: !15880)
!15883 = !DILocation(line: 176, column: 12, scope: !15827)
!15884 = !DILocation(line: 177, column: 28, scope: !15880)
!15885 = !DILocation(line: 177, column: 40, scope: !15880)
!15886 = !DILocation(line: 177, column: 45, scope: !15880)
!15887 = !DILocation(line: 177, column: 18, scope: !15880)
!15888 = !DILocation(line: 177, column: 16, scope: !15880)
!15889 = !DILocation(line: 177, column: 5, scope: !15880)
!15890 = !DILocation(line: 179, column: 3, scope: !15673)
!15891 = !DILocation(line: 179, column: 14, scope: !15673)
!15892 = !DILocation(line: 179, column: 20, scope: !15673)
!15893 = !DILocation(line: 180, column: 10, scope: !15673)
!15894 = !DILocation(line: 180, column: 3, scope: !15673)
!15895 = !DILocation(line: 181, column: 1, scope: !15673)
!15896 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !1082, file: !1082, line: 51, type: !1090, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1067, retainedNodes: !143)
!15897 = !DILocalVariable(name: "a", arg: 1, scope: !15896, file: !1082, line: 51, type: !427)
!15898 = !DILocation(line: 51, column: 32, scope: !15896)
!15899 = !DILocalVariable(name: "b", arg: 2, scope: !15896, file: !1082, line: 51, type: !427)
!15900 = !DILocation(line: 51, column: 47, scope: !15896)
!15901 = !DILocalVariable(name: "dea", scope: !15896, file: !1082, line: 53, type: !1105)
!15902 = !DILocation(line: 53, column: 21, scope: !15896)
!15903 = !DILocation(line: 53, column: 27, scope: !15896)
!15904 = !DILocalVariable(name: "deb", scope: !15896, file: !1082, line: 54, type: !1105)
!15905 = !DILocation(line: 54, column: 21, scope: !15896)
!15906 = !DILocation(line: 54, column: 27, scope: !15896)
!15907 = !DILocation(line: 56, column: 18, scope: !15896)
!15908 = !DILocation(line: 56, column: 23, scope: !15896)
!15909 = !DILocation(line: 56, column: 29, scope: !15896)
!15910 = !DILocation(line: 56, column: 34, scope: !15896)
!15911 = !DILocation(line: 56, column: 10, scope: !15896)
!15912 = !DILocation(line: 56, column: 3, scope: !15896)
!15913 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !1082, file: !1082, line: 63, type: !1090, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1067, retainedNodes: !143)
!15914 = !DILocalVariable(name: "a", arg: 1, scope: !15913, file: !1082, line: 63, type: !427)
!15915 = !DILocation(line: 63, column: 33, scope: !15913)
!15916 = !DILocalVariable(name: "b", arg: 2, scope: !15913, file: !1082, line: 63, type: !427)
!15917 = !DILocation(line: 63, column: 48, scope: !15913)
!15918 = !DILocalVariable(name: "dea", scope: !15913, file: !1082, line: 65, type: !1105)
!15919 = !DILocation(line: 65, column: 21, scope: !15913)
!15920 = !DILocation(line: 65, column: 27, scope: !15913)
!15921 = !DILocalVariable(name: "deb", scope: !15913, file: !1082, line: 66, type: !1105)
!15922 = !DILocation(line: 66, column: 21, scope: !15913)
!15923 = !DILocation(line: 66, column: 27, scope: !15913)
!15924 = !DILocation(line: 68, column: 10, scope: !15913)
!15925 = !DILocation(line: 68, column: 15, scope: !15913)
!15926 = !DILocation(line: 68, column: 21, scope: !15913)
!15927 = !DILocation(line: 68, column: 26, scope: !15913)
!15928 = !DILocation(line: 68, column: 19, scope: !15913)
!15929 = !DILocation(line: 68, column: 37, scope: !15913)
!15930 = !DILocation(line: 68, column: 42, scope: !15913)
!15931 = !DILocation(line: 68, column: 48, scope: !15913)
!15932 = !DILocation(line: 68, column: 53, scope: !15913)
!15933 = !DILocation(line: 68, column: 46, scope: !15913)
!15934 = !DILocation(line: 68, column: 3, scope: !15913)
!15935 = distinct !DISubprogram(name: "savedir", scope: !1082, file: !1082, line: 189, type: !1103, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1067, retainedNodes: !143)
!15936 = !DILocalVariable(name: "dir", arg: 1, scope: !15935, file: !1082, line: 189, type: !115)
!15937 = !DILocation(line: 189, column: 22, scope: !15935)
!15938 = !DILocalVariable(name: "option", arg: 2, scope: !15935, file: !1082, line: 189, type: !1070)
!15939 = !DILocation(line: 189, column: 47, scope: !15935)
!15940 = !DILocalVariable(name: "dirp", scope: !15935, file: !1082, line: 191, type: !609)
!15941 = !DILocation(line: 191, column: 8, scope: !15935)
!15942 = !DILocation(line: 191, column: 24, scope: !15935)
!15943 = !DILocation(line: 191, column: 15, scope: !15935)
!15944 = !DILocation(line: 192, column: 9, scope: !15945)
!15945 = distinct !DILexicalBlock(scope: !15935, file: !1082, line: 192, column: 7)
!15946 = !DILocation(line: 192, column: 7, scope: !15935)
!15947 = !DILocation(line: 193, column: 5, scope: !15945)
!15948 = !DILocalVariable(name: "name_space", scope: !15949, file: !1082, line: 196, type: !9)
!15949 = distinct !DILexicalBlock(scope: !15945, file: !1082, line: 195, column: 5)
!15950 = !DILocation(line: 196, column: 13, scope: !15949)
!15951 = !DILocation(line: 196, column: 41, scope: !15949)
!15952 = !DILocation(line: 196, column: 47, scope: !15949)
!15953 = !DILocation(line: 196, column: 26, scope: !15949)
!15954 = !DILocation(line: 197, column: 21, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15949, file: !1082, line: 197, column: 11)
!15956 = !DILocation(line: 197, column: 11, scope: !15955)
!15957 = !DILocation(line: 197, column: 27, scope: !15955)
!15958 = !DILocation(line: 197, column: 11, scope: !15949)
!15959 = !DILocalVariable(name: "closedir_errno", scope: !15960, file: !1082, line: 199, type: !7)
!15960 = distinct !DILexicalBlock(scope: !15955, file: !1082, line: 198, column: 9)
!15961 = !DILocation(line: 199, column: 15, scope: !15960)
!15962 = !DILocation(line: 199, column: 32, scope: !15960)
!15963 = !DILocation(line: 200, column: 17, scope: !15960)
!15964 = !DILocation(line: 200, column: 11, scope: !15960)
!15965 = !DILocation(line: 201, column: 19, scope: !15960)
!15966 = !DILocation(line: 201, column: 11, scope: !15960)
!15967 = !DILocation(line: 201, column: 17, scope: !15960)
!15968 = !DILocation(line: 202, column: 11, scope: !15960)
!15969 = !DILocation(line: 204, column: 14, scope: !15949)
!15970 = !DILocation(line: 204, column: 7, scope: !15949)
!15971 = !DILocation(line: 206, column: 1, scope: !15935)
!15972 = distinct !DISubprogram(name: "getcon", scope: !1859, file: !1859, line: 87, type: !1855, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!15973 = !DILocalVariable(name: "con", arg: 1, scope: !15972, file: !1859, line: 87, type: !1857)
!15974 = !DILocation(line: 87, column: 29, scope: !15972)
!15975 = !DILocation(line: 88, column: 5, scope: !15972)
!15976 = !DILocation(line: 88, column: 11, scope: !15972)
!15977 = !DILocation(line: 88, column: 22, scope: !15972)
!15978 = distinct !DISubprogram(name: "freecon", scope: !1859, file: !1859, line: 90, type: !1860, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!15979 = !DILocalVariable(name: "con", arg: 1, scope: !15978, file: !1859, line: 90, type: !1858)
!15980 = !DILocation(line: 90, column: 29, scope: !15978)
!15981 = !DILocation(line: 90, column: 56, scope: !15978)
!15982 = distinct !DISubprogram(name: "getfscreatecon", scope: !1859, file: !1859, line: 93, type: !1855, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!15983 = !DILocalVariable(name: "con", arg: 1, scope: !15982, file: !1859, line: 93, type: !1857)
!15984 = !DILocation(line: 93, column: 37, scope: !15982)
!15985 = !DILocation(line: 94, column: 5, scope: !15982)
!15986 = !DILocation(line: 94, column: 11, scope: !15982)
!15987 = !DILocation(line: 94, column: 22, scope: !15982)
!15988 = distinct !DISubprogram(name: "setfscreatecon", scope: !1859, file: !1859, line: 96, type: !1862, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!15989 = !DILocalVariable(name: "con", arg: 1, scope: !15988, file: !1859, line: 96, type: !1858)
!15990 = !DILocation(line: 96, column: 36, scope: !15988)
!15991 = !DILocation(line: 97, column: 5, scope: !15988)
!15992 = !DILocation(line: 97, column: 11, scope: !15988)
!15993 = !DILocation(line: 97, column: 22, scope: !15988)
!15994 = distinct !DISubprogram(name: "matchpathcon", scope: !1859, file: !1859, line: 99, type: !1864, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!15995 = !DILocalVariable(name: "file", arg: 1, scope: !15994, file: !1859, line: 99, type: !115)
!15996 = !DILocation(line: 99, column: 27, scope: !15994)
!15997 = !DILocalVariable(name: "m", arg: 2, scope: !15994, file: !1859, line: 100, type: !160)
!15998 = !DILocation(line: 100, column: 22, scope: !15994)
!15999 = !DILocalVariable(name: "con", arg: 3, scope: !15994, file: !1859, line: 101, type: !1857)
!16000 = !DILocation(line: 101, column: 23, scope: !15994)
!16001 = !DILocation(line: 102, column: 5, scope: !15994)
!16002 = !DILocation(line: 102, column: 11, scope: !15994)
!16003 = !DILocation(line: 102, column: 22, scope: !15994)
!16004 = distinct !DISubprogram(name: "getfilecon", scope: !1859, file: !1859, line: 104, type: !1866, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16005 = !DILocalVariable(name: "file", arg: 1, scope: !16004, file: !1859, line: 104, type: !115)
!16006 = !DILocation(line: 104, column: 25, scope: !16004)
!16007 = !DILocalVariable(name: "con", arg: 2, scope: !16004, file: !1859, line: 105, type: !1857)
!16008 = !DILocation(line: 105, column: 33, scope: !16004)
!16009 = !DILocation(line: 106, column: 5, scope: !16004)
!16010 = !DILocation(line: 106, column: 11, scope: !16004)
!16011 = !DILocation(line: 106, column: 22, scope: !16004)
!16012 = distinct !DISubprogram(name: "lgetfilecon", scope: !1859, file: !1859, line: 108, type: !1866, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16013 = !DILocalVariable(name: "file", arg: 1, scope: !16012, file: !1859, line: 108, type: !115)
!16014 = !DILocation(line: 108, column: 26, scope: !16012)
!16015 = !DILocalVariable(name: "con", arg: 2, scope: !16012, file: !1859, line: 109, type: !1857)
!16016 = !DILocation(line: 109, column: 34, scope: !16012)
!16017 = !DILocation(line: 110, column: 5, scope: !16012)
!16018 = !DILocation(line: 110, column: 11, scope: !16012)
!16019 = !DILocation(line: 110, column: 22, scope: !16012)
!16020 = distinct !DISubprogram(name: "fgetfilecon", scope: !1859, file: !1859, line: 112, type: !1868, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16021 = !DILocalVariable(name: "fd", arg: 1, scope: !16020, file: !1859, line: 112, type: !7)
!16022 = !DILocation(line: 112, column: 18, scope: !16020)
!16023 = !DILocalVariable(name: "con", arg: 2, scope: !16020, file: !1859, line: 112, type: !1857)
!16024 = !DILocation(line: 112, column: 42, scope: !16020)
!16025 = !DILocation(line: 113, column: 5, scope: !16020)
!16026 = !DILocation(line: 113, column: 11, scope: !16020)
!16027 = !DILocation(line: 113, column: 22, scope: !16020)
!16028 = distinct !DISubprogram(name: "setfilecon", scope: !1859, file: !1859, line: 115, type: !1870, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16029 = !DILocalVariable(name: "file", arg: 1, scope: !16028, file: !1859, line: 115, type: !115)
!16030 = !DILocation(line: 115, column: 25, scope: !16028)
!16031 = !DILocalVariable(name: "con", arg: 2, scope: !16028, file: !1859, line: 116, type: !1858)
!16032 = !DILocation(line: 116, column: 32, scope: !16028)
!16033 = !DILocation(line: 117, column: 5, scope: !16028)
!16034 = !DILocation(line: 117, column: 11, scope: !16028)
!16035 = !DILocation(line: 117, column: 22, scope: !16028)
!16036 = distinct !DISubprogram(name: "lsetfilecon", scope: !1859, file: !1859, line: 119, type: !1870, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16037 = !DILocalVariable(name: "file", arg: 1, scope: !16036, file: !1859, line: 119, type: !115)
!16038 = !DILocation(line: 119, column: 26, scope: !16036)
!16039 = !DILocalVariable(name: "con", arg: 2, scope: !16036, file: !1859, line: 120, type: !1858)
!16040 = !DILocation(line: 120, column: 33, scope: !16036)
!16041 = !DILocation(line: 121, column: 5, scope: !16036)
!16042 = !DILocation(line: 121, column: 11, scope: !16036)
!16043 = !DILocation(line: 121, column: 22, scope: !16036)
!16044 = distinct !DISubprogram(name: "fsetfilecon", scope: !1859, file: !1859, line: 123, type: !1872, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16045 = !DILocalVariable(name: "fd", arg: 1, scope: !16044, file: !1859, line: 123, type: !7)
!16046 = !DILocation(line: 123, column: 18, scope: !16044)
!16047 = !DILocalVariable(name: "con", arg: 2, scope: !16044, file: !1859, line: 124, type: !1858)
!16048 = !DILocation(line: 124, column: 33, scope: !16044)
!16049 = !DILocation(line: 125, column: 5, scope: !16044)
!16050 = !DILocation(line: 125, column: 11, scope: !16044)
!16051 = !DILocation(line: 125, column: 22, scope: !16044)
!16052 = distinct !DISubprogram(name: "security_check_context", scope: !1859, file: !1859, line: 128, type: !1862, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16053 = !DILocalVariable(name: "con", arg: 1, scope: !16052, file: !1859, line: 128, type: !1858)
!16054 = !DILocation(line: 128, column: 44, scope: !16052)
!16055 = !DILocation(line: 129, column: 5, scope: !16052)
!16056 = !DILocation(line: 129, column: 11, scope: !16052)
!16057 = !DILocation(line: 129, column: 22, scope: !16052)
!16058 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1859, file: !1859, line: 131, type: !1862, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16059 = !DILocalVariable(name: "con", arg: 1, scope: !16058, file: !1859, line: 131, type: !1858)
!16060 = !DILocation(line: 131, column: 48, scope: !16058)
!16061 = !DILocation(line: 132, column: 5, scope: !16058)
!16062 = !DILocation(line: 132, column: 11, scope: !16058)
!16063 = !DILocation(line: 132, column: 22, scope: !16058)
!16064 = distinct !DISubprogram(name: "setexeccon", scope: !1859, file: !1859, line: 134, type: !1862, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16065 = !DILocalVariable(name: "con", arg: 1, scope: !16064, file: !1859, line: 134, type: !1858)
!16066 = !DILocation(line: 134, column: 32, scope: !16064)
!16067 = !DILocation(line: 135, column: 5, scope: !16064)
!16068 = !DILocation(line: 135, column: 11, scope: !16064)
!16069 = !DILocation(line: 135, column: 22, scope: !16064)
!16070 = distinct !DISubprogram(name: "security_compute_create", scope: !1859, file: !1859, line: 137, type: !1874, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16071 = !DILocalVariable(name: "scon", arg: 1, scope: !16070, file: !1859, line: 137, type: !1858)
!16072 = !DILocation(line: 137, column: 45, scope: !16070)
!16073 = !DILocalVariable(name: "tcon", arg: 2, scope: !16070, file: !1859, line: 138, type: !1858)
!16074 = !DILocation(line: 138, column: 45, scope: !16070)
!16075 = !DILocalVariable(name: "tclass", arg: 3, scope: !16070, file: !1859, line: 139, type: !1876)
!16076 = !DILocation(line: 139, column: 43, scope: !16070)
!16077 = !DILocalVariable(name: "newcon", arg: 4, scope: !16070, file: !1859, line: 140, type: !1857)
!16078 = !DILocation(line: 140, column: 46, scope: !16070)
!16079 = !DILocation(line: 141, column: 5, scope: !16070)
!16080 = !DILocation(line: 141, column: 11, scope: !16070)
!16081 = !DILocation(line: 141, column: 22, scope: !16070)
!16082 = distinct !DISubprogram(name: "string_to_security_class", scope: !1859, file: !1859, line: 143, type: !1877, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16083 = !DILocalVariable(name: "name", arg: 1, scope: !16082, file: !1859, line: 143, type: !115)
!16084 = !DILocation(line: 143, column: 39, scope: !16082)
!16085 = !DILocation(line: 144, column: 5, scope: !16082)
!16086 = !DILocation(line: 144, column: 11, scope: !16082)
!16087 = !DILocation(line: 144, column: 22, scope: !16082)
!16088 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1859, file: !1859, line: 146, type: !1879, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1852, retainedNodes: !143)
!16089 = !DILocalVariable(name: "path", arg: 1, scope: !16088, file: !1859, line: 146, type: !115)
!16090 = !DILocation(line: 146, column: 39, scope: !16088)
!16091 = !DILocalVariable(name: "prefix", arg: 2, scope: !16088, file: !1859, line: 147, type: !115)
!16092 = !DILocation(line: 147, column: 39, scope: !16088)
!16093 = !DILocation(line: 148, column: 5, scope: !16088)
!16094 = !DILocation(line: 148, column: 11, scope: !16088)
!16095 = !DILocation(line: 148, column: 22, scope: !16088)
!16096 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !16097, file: !16097, line: 66, type: !1884, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16097 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/clone/coreutils")
!16098 = !DILocalVariable(name: "st", arg: 1, scope: !16096, file: !16097, line: 66, type: !1886)
!16099 = !DILocation(line: 66, column: 39, scope: !16096)
!16100 = !DILocation(line: 69, column: 10, scope: !16096)
!16101 = !DILocation(line: 69, column: 38, scope: !16096)
!16102 = !{!3182, !3183, i64 80}
!16103 = !DILocation(line: 69, column: 3, scope: !16096)
!16104 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !16097, file: !16097, line: 79, type: !1884, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16105 = !DILocalVariable(name: "st", arg: 1, scope: !16104, file: !16097, line: 79, type: !1886)
!16106 = !DILocation(line: 79, column: 39, scope: !16104)
!16107 = !DILocation(line: 82, column: 10, scope: !16104)
!16108 = !DILocation(line: 82, column: 38, scope: !16104)
!16109 = !{!3182, !3183, i64 112}
!16110 = !DILocation(line: 82, column: 3, scope: !16104)
!16111 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !16097, file: !16097, line: 92, type: !1884, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16112 = !DILocalVariable(name: "st", arg: 1, scope: !16111, file: !16097, line: 92, type: !1886)
!16113 = !DILocation(line: 92, column: 39, scope: !16111)
!16114 = !DILocation(line: 95, column: 10, scope: !16111)
!16115 = !DILocation(line: 95, column: 38, scope: !16111)
!16116 = !{!3182, !3183, i64 96}
!16117 = !DILocation(line: 95, column: 3, scope: !16111)
!16118 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !16097, file: !16097, line: 105, type: !1884, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16119 = !DILocalVariable(name: "st", arg: 1, scope: !16118, file: !16097, line: 105, type: !1886)
!16120 = !DILocation(line: 105, column: 43, scope: !16118)
!16121 = !DILocation(line: 112, column: 3, scope: !16118)
!16122 = distinct !DISubprogram(name: "get_stat_atime", scope: !16097, file: !16097, line: 118, type: !1909, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16123 = !DILocalVariable(name: "st", arg: 1, scope: !16122, file: !16097, line: 118, type: !1886)
!16124 = !DILocation(line: 118, column: 36, scope: !16122)
!16125 = !DILocation(line: 121, column: 10, scope: !16122)
!16126 = !DILocation(line: 121, column: 3, scope: !16122)
!16127 = distinct !DISubprogram(name: "get_stat_ctime", scope: !16097, file: !16097, line: 132, type: !1909, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16128 = !DILocalVariable(name: "st", arg: 1, scope: !16127, file: !16097, line: 132, type: !1886)
!16129 = !DILocation(line: 132, column: 36, scope: !16127)
!16130 = !DILocation(line: 135, column: 10, scope: !16127)
!16131 = !DILocation(line: 135, column: 3, scope: !16127)
!16132 = distinct !DISubprogram(name: "get_stat_mtime", scope: !16097, file: !16097, line: 146, type: !1909, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16133 = !DILocalVariable(name: "st", arg: 1, scope: !16132, file: !16097, line: 146, type: !1886)
!16134 = !DILocation(line: 146, column: 36, scope: !16132)
!16135 = !DILocation(line: 149, column: 10, scope: !16132)
!16136 = !DILocation(line: 149, column: 3, scope: !16132)
!16137 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !16097, file: !16097, line: 161, type: !1909, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16138 = !DILocalVariable(name: "st", arg: 1, scope: !16137, file: !16097, line: 161, type: !1886)
!16139 = !DILocation(line: 161, column: 40, scope: !16137)
!16140 = !DILocalVariable(name: "t", scope: !16137, file: !16097, line: 163, type: !1902)
!16141 = !DILocation(line: 163, column: 19, scope: !16137)
!16142 = !DILocation(line: 183, column: 5, scope: !16137)
!16143 = !DILocation(line: 183, column: 12, scope: !16137)
!16144 = !{!3184, !3183, i64 0}
!16145 = !DILocation(line: 184, column: 5, scope: !16137)
!16146 = !DILocation(line: 184, column: 13, scope: !16137)
!16147 = !{!3184, !3183, i64 8}
!16148 = !DILocation(line: 202, column: 3, scope: !16137)
!16149 = distinct !DISubprogram(name: "stat_time_normalize", scope: !16097, file: !16097, line: 211, type: !1911, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1881, retainedNodes: !143)
!16150 = !DILocalVariable(name: "result", arg: 1, scope: !16149, file: !16097, line: 211, type: !7)
!16151 = !DILocation(line: 211, column: 26, scope: !16149)
!16152 = !DILocalVariable(name: "st", arg: 2, scope: !16149, file: !16097, line: 211, type: !1913)
!16153 = !DILocation(line: 211, column: 47, scope: !16149)
!16154 = !DILocation(line: 243, column: 10, scope: !16149)
!16155 = !DILocation(line: 243, column: 3, scope: !16149)
!16156 = distinct !DISubprogram(name: "statat", scope: !16157, file: !16157, line: 102, type: !1917, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1914, retainedNodes: !143)
!16157 = !DIFile(filename: "./lib/openat.h", directory: "/home/mbarbar/clone/coreutils")
!16158 = !DILocalVariable(name: "fd", arg: 1, scope: !16156, file: !16157, line: 102, type: !7)
!16159 = !DILocation(line: 102, column: 13, scope: !16156)
!16160 = !DILocalVariable(name: "name", arg: 2, scope: !16156, file: !16157, line: 102, type: !115)
!16161 = !DILocation(line: 102, column: 29, scope: !16156)
!16162 = !DILocalVariable(name: "st", arg: 3, scope: !16156, file: !16157, line: 102, type: !1919)
!16163 = !DILocation(line: 102, column: 48, scope: !16156)
!16164 = !DILocation(line: 104, column: 19, scope: !16156)
!16165 = !DILocation(line: 104, column: 23, scope: !16156)
!16166 = !DILocation(line: 104, column: 29, scope: !16156)
!16167 = !DILocation(line: 104, column: 10, scope: !16156)
!16168 = !DILocation(line: 104, column: 3, scope: !16156)
!16169 = distinct !DISubprogram(name: "lstatat", scope: !16157, file: !16157, line: 108, type: !1917, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1914, retainedNodes: !143)
!16170 = !DILocalVariable(name: "fd", arg: 1, scope: !16169, file: !16157, line: 108, type: !7)
!16171 = !DILocation(line: 108, column: 14, scope: !16169)
!16172 = !DILocalVariable(name: "name", arg: 2, scope: !16169, file: !16157, line: 108, type: !115)
!16173 = !DILocation(line: 108, column: 30, scope: !16169)
!16174 = !DILocalVariable(name: "st", arg: 3, scope: !16169, file: !16157, line: 108, type: !1919)
!16175 = !DILocation(line: 108, column: 49, scope: !16169)
!16176 = !DILocation(line: 110, column: 19, scope: !16169)
!16177 = !DILocation(line: 110, column: 23, scope: !16169)
!16178 = !DILocation(line: 110, column: 29, scope: !16169)
!16179 = !DILocation(line: 110, column: 10, scope: !16169)
!16180 = !DILocation(line: 110, column: 3, scope: !16169)
!16181 = distinct !DISubprogram(name: "try_tempname_len", scope: !1131, file: !1131, line: 188, type: !1113, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16182 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16181, file: !1131, line: 188, type: !9)
!16183 = !DILocation(line: 188, column: 25, scope: !16181)
!16184 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16181, file: !1131, line: 188, type: !7)
!16185 = !DILocation(line: 188, column: 35, scope: !16181)
!16186 = !DILocalVariable(name: "args", arg: 3, scope: !16181, file: !1131, line: 188, type: !53)
!16187 = !DILocation(line: 188, column: 52, scope: !16181)
!16188 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16181, file: !1131, line: 189, type: !1115)
!16189 = !DILocation(line: 189, column: 25, scope: !16181)
!16190 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16181, file: !1131, line: 189, type: !55)
!16191 = !DILocation(line: 189, column: 59, scope: !16181)
!16192 = !DILocalVariable(name: "len", scope: !16181, file: !1131, line: 191, type: !55)
!16193 = !DILocation(line: 191, column: 10, scope: !16181)
!16194 = !DILocalVariable(name: "XXXXXX", scope: !16181, file: !1131, line: 192, type: !9)
!16195 = !DILocation(line: 192, column: 9, scope: !16181)
!16196 = !DILocalVariable(name: "count", scope: !16181, file: !1131, line: 193, type: !70)
!16197 = !DILocation(line: 193, column: 16, scope: !16181)
!16198 = !DILocalVariable(name: "fd", scope: !16181, file: !1131, line: 194, type: !7)
!16199 = !DILocation(line: 194, column: 7, scope: !16181)
!16200 = !DILocalVariable(name: "save_errno", scope: !16181, file: !1131, line: 195, type: !7)
!16201 = !DILocation(line: 195, column: 7, scope: !16181)
!16202 = !DILocation(line: 195, column: 20, scope: !16181)
!16203 = !DILocalVariable(name: "rand_src", scope: !16181, file: !1131, line: 196, type: !1116)
!16204 = !DILocation(line: 196, column: 26, scope: !16181)
!16205 = !DILocalVariable(name: "attempts", scope: !16181, file: !1131, line: 212, type: !70)
!16206 = !DILocation(line: 212, column: 16, scope: !16181)
!16207 = !DILocation(line: 215, column: 17, scope: !16181)
!16208 = !DILocation(line: 215, column: 9, scope: !16181)
!16209 = !DILocation(line: 215, column: 7, scope: !16181)
!16210 = !DILocation(line: 216, column: 7, scope: !16211)
!16211 = distinct !DILexicalBlock(scope: !16181, file: !1131, line: 216, column: 7)
!16212 = !DILocation(line: 216, column: 13, scope: !16211)
!16213 = !DILocation(line: 216, column: 28, scope: !16211)
!16214 = !DILocation(line: 216, column: 26, scope: !16211)
!16215 = !DILocation(line: 216, column: 11, scope: !16211)
!16216 = !DILocation(line: 217, column: 7, scope: !16211)
!16217 = !DILocation(line: 217, column: 29, scope: !16211)
!16218 = !DILocation(line: 217, column: 34, scope: !16211)
!16219 = !DILocation(line: 217, column: 40, scope: !16211)
!16220 = !DILocation(line: 217, column: 38, scope: !16211)
!16221 = !DILocation(line: 217, column: 55, scope: !16211)
!16222 = !DILocation(line: 217, column: 53, scope: !16211)
!16223 = !DILocation(line: 218, column: 28, scope: !16211)
!16224 = !DILocation(line: 217, column: 12, scope: !16211)
!16225 = !DILocation(line: 216, column: 7, scope: !16181)
!16226 = !DILocation(line: 220, column: 7, scope: !16227)
!16227 = distinct !DILexicalBlock(scope: !16211, file: !1131, line: 219, column: 5)
!16228 = !DILocation(line: 221, column: 7, scope: !16227)
!16229 = !DILocation(line: 225, column: 13, scope: !16181)
!16230 = !DILocation(line: 225, column: 18, scope: !16181)
!16231 = !DILocation(line: 225, column: 24, scope: !16181)
!16232 = !DILocation(line: 225, column: 22, scope: !16181)
!16233 = !DILocation(line: 225, column: 39, scope: !16181)
!16234 = !DILocation(line: 225, column: 37, scope: !16181)
!16235 = !DILocation(line: 225, column: 10, scope: !16181)
!16236 = !DILocation(line: 228, column: 37, scope: !16181)
!16237 = !DILocation(line: 228, column: 14, scope: !16181)
!16238 = !DILocation(line: 228, column: 12, scope: !16181)
!16239 = !DILocation(line: 229, column: 9, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16181, file: !1131, line: 229, column: 7)
!16241 = !DILocation(line: 229, column: 7, scope: !16181)
!16242 = !DILocation(line: 230, column: 5, scope: !16240)
!16243 = !DILocation(line: 232, column: 14, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16181, file: !1131, line: 232, column: 3)
!16245 = !DILocation(line: 232, column: 8, scope: !16244)
!16246 = !DILocation(line: 232, column: 19, scope: !16247)
!16247 = distinct !DILexicalBlock(scope: !16244, file: !1131, line: 232, column: 3)
!16248 = !DILocation(line: 232, column: 27, scope: !16247)
!16249 = !DILocation(line: 232, column: 25, scope: !16247)
!16250 = !DILocation(line: 232, column: 3, scope: !16244)
!16251 = !DILocalVariable(name: "i", scope: !16252, file: !1131, line: 234, type: !55)
!16252 = distinct !DILexicalBlock(scope: !16247, file: !1131, line: 233, column: 5)
!16253 = !DILocation(line: 234, column: 14, scope: !16252)
!16254 = !DILocation(line: 236, column: 14, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16252, file: !1131, line: 236, column: 7)
!16256 = !DILocation(line: 236, column: 12, scope: !16255)
!16257 = !DILocation(line: 236, column: 19, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16255, file: !1131, line: 236, column: 7)
!16259 = !DILocation(line: 236, column: 23, scope: !16258)
!16260 = !DILocation(line: 236, column: 21, scope: !16258)
!16261 = !DILocation(line: 236, column: 7, scope: !16255)
!16262 = !DILocation(line: 237, column: 45, scope: !16258)
!16263 = !DILocation(line: 237, column: 29, scope: !16258)
!16264 = !DILocation(line: 237, column: 21, scope: !16258)
!16265 = !DILocation(line: 237, column: 9, scope: !16258)
!16266 = !DILocation(line: 237, column: 16, scope: !16258)
!16267 = !DILocation(line: 237, column: 19, scope: !16258)
!16268 = !DILocation(line: 236, column: 38, scope: !16258)
!16269 = !DILocation(line: 236, column: 7, scope: !16258)
!16270 = distinct !{!16270, !16261, !16271}
!16271 = !DILocation(line: 237, column: 74, scope: !16255)
!16272 = !DILocation(line: 239, column: 12, scope: !16252)
!16273 = !DILocation(line: 239, column: 21, scope: !16252)
!16274 = !DILocation(line: 239, column: 27, scope: !16252)
!16275 = !DILocation(line: 239, column: 10, scope: !16252)
!16276 = !DILocation(line: 240, column: 11, scope: !16277)
!16277 = distinct !DILexicalBlock(scope: !16252, file: !1131, line: 240, column: 11)
!16278 = !DILocation(line: 240, column: 14, scope: !16277)
!16279 = !DILocation(line: 240, column: 11, scope: !16252)
!16280 = !DILocation(line: 242, column: 11, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16277, file: !1131, line: 241, column: 9)
!16282 = !DILocation(line: 243, column: 11, scope: !16281)
!16283 = !DILocation(line: 245, column: 16, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16277, file: !1131, line: 245, column: 16)
!16285 = !DILocation(line: 245, column: 22, scope: !16284)
!16286 = !DILocation(line: 245, column: 16, scope: !16277)
!16287 = !DILocation(line: 247, column: 14, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16284, file: !1131, line: 246, column: 9)
!16289 = !DILocation(line: 248, column: 11, scope: !16288)
!16290 = !DILocation(line: 250, column: 5, scope: !16252)
!16291 = !DILocation(line: 232, column: 37, scope: !16247)
!16292 = !DILocation(line: 232, column: 3, scope: !16247)
!16293 = distinct !{!16293, !16250, !16294}
!16294 = !DILocation(line: 250, column: 5, scope: !16244)
!16295 = !DILocation(line: 252, column: 21, scope: !16181)
!16296 = !DILocation(line: 252, column: 3, scope: !16181)
!16297 = !DILocation(line: 255, column: 3, scope: !16181)
!16298 = !DILocation(line: 256, column: 3, scope: !16181)
!16299 = !DILabel(scope: !16181, name: "done", file: !1131, line: 258)
!16300 = !DILocation(line: 258, column: 2, scope: !16181)
!16301 = !DILocalVariable(name: "saved_errno", scope: !16302, file: !1131, line: 260, type: !7)
!16302 = distinct !DILexicalBlock(scope: !16181, file: !1131, line: 259, column: 3)
!16303 = !DILocation(line: 260, column: 9, scope: !16302)
!16304 = !DILocation(line: 260, column: 23, scope: !16302)
!16305 = !DILocation(line: 261, column: 23, scope: !16302)
!16306 = !DILocation(line: 261, column: 5, scope: !16302)
!16307 = !DILocation(line: 262, column: 5, scope: !16302)
!16308 = !DILocation(line: 264, column: 10, scope: !16181)
!16309 = !DILocation(line: 264, column: 3, scope: !16181)
!16310 = !DILocation(line: 265, column: 1, scope: !16181)
!16311 = distinct !DISubprogram(name: "check_x_suffix", scope: !1131, file: !1131, line: 178, type: !1128, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16312 = !DILocalVariable(name: "s", arg: 1, scope: !16311, file: !1131, line: 178, type: !115)
!16313 = !DILocation(line: 178, column: 29, scope: !16311)
!16314 = !DILocalVariable(name: "len", arg: 2, scope: !16311, file: !1131, line: 178, type: !55)
!16315 = !DILocation(line: 178, column: 39, scope: !16311)
!16316 = !DILocation(line: 180, column: 10, scope: !16311)
!16317 = !DILocation(line: 180, column: 25, scope: !16311)
!16318 = !DILocation(line: 180, column: 17, scope: !16311)
!16319 = !DILocation(line: 180, column: 14, scope: !16311)
!16320 = !DILocation(line: 180, column: 3, scope: !16311)
!16321 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1131, file: !1131, line: 307, type: !1122, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16322 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16321, file: !1131, line: 307, type: !9)
!16323 = !DILocation(line: 307, column: 25, scope: !16321)
!16324 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16321, file: !1131, line: 307, type: !7)
!16325 = !DILocation(line: 307, column: 35, scope: !16321)
!16326 = !DILocalVariable(name: "flags", arg: 3, scope: !16321, file: !1131, line: 307, type: !7)
!16327 = !DILocation(line: 307, column: 50, scope: !16321)
!16328 = !DILocalVariable(name: "kind", arg: 4, scope: !16321, file: !1131, line: 307, type: !7)
!16329 = !DILocation(line: 307, column: 61, scope: !16321)
!16330 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16321, file: !1131, line: 308, type: !55)
!16331 = !DILocation(line: 308, column: 26, scope: !16321)
!16332 = !DILocalVariable(name: "tryfunc", scope: !16321, file: !1131, line: 310, type: !1115)
!16333 = !DILocation(line: 310, column: 9, scope: !16321)
!16334 = !DILocation(line: 312, column: 11, scope: !16321)
!16335 = !DILocation(line: 312, column: 3, scope: !16321)
!16336 = !DILocation(line: 315, column: 15, scope: !16337)
!16337 = distinct !DILexicalBlock(scope: !16321, file: !1131, line: 313, column: 5)
!16338 = !DILocation(line: 316, column: 7, scope: !16337)
!16339 = !DILocation(line: 319, column: 15, scope: !16337)
!16340 = !DILocation(line: 320, column: 7, scope: !16337)
!16341 = !DILocation(line: 323, column: 15, scope: !16337)
!16342 = !DILocation(line: 324, column: 7, scope: !16337)
!16343 = !DILocation(line: 327, column: 7, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16345, file: !1131, line: 327, column: 7)
!16345 = distinct !DILexicalBlock(scope: !16337, file: !1131, line: 327, column: 7)
!16346 = !DILocation(line: 330, column: 28, scope: !16321)
!16347 = !DILocation(line: 330, column: 34, scope: !16321)
!16348 = !DILocation(line: 330, column: 45, scope: !16321)
!16349 = !DILocation(line: 330, column: 53, scope: !16321)
!16350 = !DILocation(line: 330, column: 62, scope: !16321)
!16351 = !DILocation(line: 330, column: 10, scope: !16321)
!16352 = !DILocation(line: 330, column: 3, scope: !16321)
!16353 = distinct !DISubprogram(name: "try_file", scope: !1131, file: !1131, line: 268, type: !572, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16354 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16353, file: !1131, line: 268, type: !9)
!16355 = !DILocation(line: 268, column: 17, scope: !16353)
!16356 = !DILocalVariable(name: "flags", arg: 2, scope: !16353, file: !1131, line: 268, type: !53)
!16357 = !DILocation(line: 268, column: 29, scope: !16353)
!16358 = !DILocalVariable(name: "openflags", scope: !16353, file: !1131, line: 270, type: !129)
!16359 = !DILocation(line: 270, column: 8, scope: !16353)
!16360 = !DILocation(line: 270, column: 20, scope: !16353)
!16361 = !DILocation(line: 271, column: 18, scope: !16353)
!16362 = !DILocation(line: 272, column: 20, scope: !16353)
!16363 = !DILocation(line: 272, column: 19, scope: !16353)
!16364 = !DILocation(line: 272, column: 30, scope: !16353)
!16365 = !DILocation(line: 273, column: 18, scope: !16353)
!16366 = !DILocation(line: 273, column: 27, scope: !16353)
!16367 = !DILocation(line: 273, column: 37, scope: !16353)
!16368 = !DILocation(line: 271, column: 10, scope: !16353)
!16369 = !DILocation(line: 271, column: 3, scope: !16353)
!16370 = distinct !DISubprogram(name: "try_dir", scope: !1131, file: !1131, line: 277, type: !572, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16371 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16370, file: !1131, line: 277, type: !9)
!16372 = !DILocation(line: 277, column: 16, scope: !16370)
!16373 = !DILocalVariable(name: "flags", arg: 2, scope: !16370, file: !1131, line: 277, type: !53)
!16374 = !DILocation(line: 277, column: 28, scope: !16370)
!16375 = !DILocation(line: 279, column: 19, scope: !16370)
!16376 = !DILocation(line: 279, column: 10, scope: !16370)
!16377 = !DILocation(line: 279, column: 3, scope: !16370)
!16378 = distinct !DISubprogram(name: "try_nocreate", scope: !1131, file: !1131, line: 283, type: !572, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !318, line: 46, size: 1152, elements: !16380)
!16380 = !{!16381, !16382, !16383, !16384, !16385, !16386, !16387, !16388, !16389, !16390, !16391, !16392, !16397, !16398, !16399}
!16381 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16379, file: !318, line: 48, baseType: !231, size: 64)
!16382 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16379, file: !318, line: 53, baseType: !228, size: 64, offset: 64)
!16383 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16379, file: !318, line: 61, baseType: !323, size: 64, offset: 128)
!16384 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16379, file: !318, line: 62, baseType: !133, size: 32, offset: 192)
!16385 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16379, file: !318, line: 64, baseType: !326, size: 32, offset: 224)
!16386 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16379, file: !318, line: 65, baseType: !328, size: 32, offset: 256)
!16387 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16379, file: !318, line: 67, baseType: !7, size: 32, offset: 288)
!16388 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16379, file: !318, line: 69, baseType: !231, size: 64, offset: 320)
!16389 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16379, file: !318, line: 74, baseType: !29, size: 64, offset: 384)
!16390 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16379, file: !318, line: 78, baseType: !333, size: 64, offset: 448)
!16391 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16379, file: !318, line: 80, baseType: !335, size: 64, offset: 512)
!16392 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16379, file: !318, line: 91, baseType: !16393, size: 128, offset: 576)
!16393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !338, line: 9, size: 128, elements: !16394)
!16394 = !{!16395, !16396}
!16395 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16393, file: !338, line: 11, baseType: !341, size: 64)
!16396 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16393, file: !338, line: 12, baseType: !343, size: 64, offset: 64)
!16397 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16379, file: !318, line: 92, baseType: !16393, size: 128, offset: 704)
!16398 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16379, file: !318, line: 93, baseType: !16393, size: 128, offset: 832)
!16399 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16379, file: !318, line: 106, baseType: !347, size: 192, offset: 960)
!16400 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16378, file: !1131, line: 283, type: !9)
!16401 = !DILocation(line: 283, column: 21, scope: !16378)
!16402 = !DILocalVariable(name: "flags", arg: 2, scope: !16378, file: !1131, line: 283, type: !53)
!16403 = !DILocation(line: 283, column: 33, scope: !16378)
!16404 = !DILocalVariable(name: "st", scope: !16378, file: !1131, line: 285, type: !16379)
!16405 = !DILocation(line: 285, column: 17, scope: !16378)
!16406 = !DILocation(line: 287, column: 7, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16378, file: !1131, line: 287, column: 7)
!16408 = !DILocation(line: 287, column: 41, scope: !16407)
!16409 = !DILocation(line: 287, column: 46, scope: !16407)
!16410 = !DILocation(line: 287, column: 49, scope: !16407)
!16411 = !DILocation(line: 287, column: 55, scope: !16407)
!16412 = !DILocation(line: 287, column: 7, scope: !16378)
!16413 = !DILocation(line: 288, column: 5, scope: !16407)
!16414 = !DILocation(line: 289, column: 10, scope: !16378)
!16415 = !DILocation(line: 289, column: 16, scope: !16378)
!16416 = !DILocation(line: 289, column: 3, scope: !16378)
!16417 = distinct !DISubprogram(name: "gen_tempname", scope: !1131, file: !1131, line: 334, type: !1124, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16418 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16417, file: !1131, line: 334, type: !9)
!16419 = !DILocation(line: 334, column: 23, scope: !16417)
!16420 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16417, file: !1131, line: 334, type: !7)
!16421 = !DILocation(line: 334, column: 33, scope: !16417)
!16422 = !DILocalVariable(name: "flags", arg: 3, scope: !16417, file: !1131, line: 334, type: !7)
!16423 = !DILocation(line: 334, column: 48, scope: !16417)
!16424 = !DILocalVariable(name: "kind", arg: 4, scope: !16417, file: !1131, line: 334, type: !7)
!16425 = !DILocation(line: 334, column: 59, scope: !16417)
!16426 = !DILocation(line: 336, column: 28, scope: !16417)
!16427 = !DILocation(line: 336, column: 34, scope: !16417)
!16428 = !DILocation(line: 336, column: 45, scope: !16417)
!16429 = !DILocation(line: 336, column: 52, scope: !16417)
!16430 = !DILocation(line: 336, column: 10, scope: !16417)
!16431 = !DILocation(line: 336, column: 3, scope: !16417)
!16432 = distinct !DISubprogram(name: "try_tempname", scope: !1131, file: !1131, line: 340, type: !1126, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1110, retainedNodes: !143)
!16433 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16432, file: !1131, line: 340, type: !9)
!16434 = !DILocation(line: 340, column: 23, scope: !16432)
!16435 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16432, file: !1131, line: 340, type: !7)
!16436 = !DILocation(line: 340, column: 33, scope: !16432)
!16437 = !DILocalVariable(name: "args", arg: 3, scope: !16432, file: !1131, line: 340, type: !53)
!16438 = !DILocation(line: 340, column: 50, scope: !16432)
!16439 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16432, file: !1131, line: 341, type: !1115)
!16440 = !DILocation(line: 341, column: 23, scope: !16432)
!16441 = !DILocation(line: 343, column: 28, scope: !16432)
!16442 = !DILocation(line: 343, column: 34, scope: !16432)
!16443 = !DILocation(line: 343, column: 45, scope: !16432)
!16444 = !DILocation(line: 343, column: 51, scope: !16432)
!16445 = !DILocation(line: 343, column: 10, scope: !16432)
!16446 = !DILocation(line: 343, column: 3, scope: !16432)
!16447 = distinct !DISubprogram(name: "fd_safer", scope: !16448, file: !16448, line: 37, type: !1830, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1941, retainedNodes: !143)
!16448 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mbarbar/clone/coreutils")
!16449 = !DILocalVariable(name: "fd", arg: 1, scope: !16447, file: !16448, line: 37, type: !7)
!16450 = !DILocation(line: 37, column: 15, scope: !16447)
!16451 = !DILocation(line: 39, column: 23, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16447, file: !16448, line: 39, column: 7)
!16453 = !DILocation(line: 39, column: 20, scope: !16452)
!16454 = !DILocation(line: 39, column: 26, scope: !16452)
!16455 = !DILocation(line: 39, column: 29, scope: !16452)
!16456 = !DILocation(line: 39, column: 32, scope: !16452)
!16457 = !DILocation(line: 39, column: 7, scope: !16447)
!16458 = !DILocalVariable(name: "f", scope: !16459, file: !16448, line: 41, type: !7)
!16459 = distinct !DILexicalBlock(scope: !16452, file: !16448, line: 40, column: 5)
!16460 = !DILocation(line: 41, column: 11, scope: !16459)
!16461 = !DILocation(line: 41, column: 26, scope: !16459)
!16462 = !DILocation(line: 41, column: 15, scope: !16459)
!16463 = !DILocalVariable(name: "e", scope: !16459, file: !16448, line: 42, type: !7)
!16464 = !DILocation(line: 42, column: 11, scope: !16459)
!16465 = !DILocation(line: 42, column: 15, scope: !16459)
!16466 = !DILocation(line: 43, column: 14, scope: !16459)
!16467 = !DILocation(line: 43, column: 7, scope: !16459)
!16468 = !DILocation(line: 44, column: 15, scope: !16459)
!16469 = !DILocation(line: 44, column: 7, scope: !16459)
!16470 = !DILocation(line: 44, column: 13, scope: !16459)
!16471 = !DILocation(line: 45, column: 12, scope: !16459)
!16472 = !DILocation(line: 45, column: 10, scope: !16459)
!16473 = !DILocation(line: 46, column: 5, scope: !16459)
!16474 = !DILocation(line: 48, column: 10, scope: !16447)
!16475 = !DILocation(line: 48, column: 3, scope: !16447)
!16476 = distinct !DISubprogram(name: "utimecmp", scope: !1135, file: !1135, line: 123, type: !1164, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1161, retainedNodes: !143)
!16477 = !DILocalVariable(name: "dst_name", arg: 1, scope: !16476, file: !1135, line: 123, type: !115)
!16478 = !DILocation(line: 123, column: 23, scope: !16476)
!16479 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !16476, file: !1135, line: 124, type: !1138)
!16480 = !DILocation(line: 124, column: 30, scope: !16476)
!16481 = !DILocalVariable(name: "src_stat", arg: 3, scope: !16476, file: !1135, line: 125, type: !1138)
!16482 = !DILocation(line: 125, column: 30, scope: !16476)
!16483 = !DILocalVariable(name: "options", arg: 4, scope: !16476, file: !1135, line: 126, type: !7)
!16484 = !DILocation(line: 126, column: 15, scope: !16476)
!16485 = !DILocation(line: 128, column: 32, scope: !16476)
!16486 = !DILocation(line: 128, column: 42, scope: !16476)
!16487 = !DILocation(line: 128, column: 52, scope: !16476)
!16488 = !DILocation(line: 128, column: 62, scope: !16476)
!16489 = !DILocation(line: 128, column: 10, scope: !16476)
!16490 = !DILocation(line: 128, column: 3, scope: !16476)
!16491 = !DILocalVariable(name: "dfd", arg: 1, scope: !1134, file: !1135, line: 132, type: !7)
!16492 = !DILocation(line: 132, column: 17, scope: !1134)
!16493 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1134, file: !1135, line: 132, type: !115)
!16494 = !DILocation(line: 132, column: 34, scope: !1134)
!16495 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1134, file: !1135, line: 133, type: !1138)
!16496 = !DILocation(line: 133, column: 32, scope: !1134)
!16497 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1134, file: !1135, line: 134, type: !1138)
!16498 = !DILocation(line: 134, column: 32, scope: !1134)
!16499 = !DILocalVariable(name: "options", arg: 5, scope: !1134, file: !1135, line: 135, type: !7)
!16500 = !DILocation(line: 135, column: 17, scope: !1134)
!16501 = !DILocalVariable(name: "dst_s", scope: !1134, file: !1135, line: 153, type: !1166)
!16502 = !DILocation(line: 153, column: 10, scope: !1134)
!16503 = !DILocation(line: 153, column: 18, scope: !1134)
!16504 = !DILocation(line: 153, column: 28, scope: !1134)
!16505 = !{!3182, !3183, i64 88}
!16506 = !DILocalVariable(name: "src_s", scope: !1134, file: !1135, line: 154, type: !1166)
!16507 = !DILocation(line: 154, column: 10, scope: !1134)
!16508 = !DILocation(line: 154, column: 18, scope: !1134)
!16509 = !DILocation(line: 154, column: 28, scope: !1134)
!16510 = !DILocalVariable(name: "dst_ns", scope: !1134, file: !1135, line: 155, type: !7)
!16511 = !DILocation(line: 155, column: 7, scope: !1134)
!16512 = !DILocation(line: 155, column: 35, scope: !1134)
!16513 = !DILocation(line: 155, column: 16, scope: !1134)
!16514 = !DILocalVariable(name: "src_ns", scope: !1134, file: !1135, line: 156, type: !7)
!16515 = !DILocation(line: 156, column: 7, scope: !1134)
!16516 = !DILocation(line: 156, column: 35, scope: !1134)
!16517 = !DILocation(line: 156, column: 16, scope: !1134)
!16518 = !DILocation(line: 158, column: 7, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !1134, file: !1135, line: 158, column: 7)
!16520 = !DILocation(line: 158, column: 15, scope: !16519)
!16521 = !DILocation(line: 158, column: 7, scope: !1134)
!16522 = !DILocalVariable(name: "dst_res", scope: !16523, file: !1135, line: 167, type: !1168)
!16523 = distinct !DILexicalBlock(scope: !16519, file: !1135, line: 159, column: 5)
!16524 = !DILocation(line: 167, column: 22, scope: !16523)
!16525 = !DILocalVariable(name: "tmp_dst_res", scope: !16523, file: !1135, line: 168, type: !1169)
!16526 = !DILocation(line: 168, column: 21, scope: !16523)
!16527 = !DILocalVariable(name: "res", scope: !16523, file: !1135, line: 171, type: !7)
!16528 = !DILocation(line: 171, column: 11, scope: !16523)
!16529 = !DILocation(line: 176, column: 11, scope: !16530)
!16530 = distinct !DILexicalBlock(scope: !16523, file: !1135, line: 176, column: 11)
!16531 = !DILocation(line: 176, column: 20, scope: !16530)
!16532 = !DILocation(line: 176, column: 17, scope: !16530)
!16533 = !DILocation(line: 176, column: 26, scope: !16530)
!16534 = !DILocation(line: 176, column: 29, scope: !16530)
!16535 = !DILocation(line: 176, column: 39, scope: !16530)
!16536 = !DILocation(line: 176, column: 36, scope: !16530)
!16537 = !DILocation(line: 176, column: 11, scope: !16523)
!16538 = !DILocation(line: 177, column: 9, scope: !16530)
!16539 = !DILocation(line: 178, column: 11, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16523, file: !1135, line: 178, column: 11)
!16541 = !DILocation(line: 178, column: 20, scope: !16540)
!16542 = !DILocation(line: 178, column: 26, scope: !16540)
!16543 = !DILocation(line: 178, column: 17, scope: !16540)
!16544 = !DILocation(line: 178, column: 11, scope: !16523)
!16545 = !DILocation(line: 179, column: 9, scope: !16540)
!16546 = !DILocation(line: 180, column: 11, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16523, file: !1135, line: 180, column: 11)
!16548 = !DILocation(line: 180, column: 20, scope: !16547)
!16549 = !DILocation(line: 180, column: 26, scope: !16547)
!16550 = !DILocation(line: 180, column: 17, scope: !16547)
!16551 = !DILocation(line: 180, column: 11, scope: !16523)
!16552 = !DILocation(line: 181, column: 9, scope: !16547)
!16553 = !DILocation(line: 185, column: 13, scope: !16554)
!16554 = distinct !DILexicalBlock(scope: !16523, file: !1135, line: 185, column: 11)
!16555 = !DILocation(line: 185, column: 11, scope: !16523)
!16556 = !DILocation(line: 186, column: 14, scope: !16554)
!16557 = !DILocation(line: 186, column: 12, scope: !16554)
!16558 = !DILocation(line: 186, column: 9, scope: !16554)
!16559 = !DILocation(line: 187, column: 11, scope: !16560)
!16560 = distinct !DILexicalBlock(scope: !16523, file: !1135, line: 187, column: 11)
!16561 = !DILocation(line: 187, column: 11, scope: !16523)
!16562 = !DILocation(line: 189, column: 17, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16564, file: !1135, line: 189, column: 15)
!16564 = distinct !DILexicalBlock(scope: !16560, file: !1135, line: 188, column: 9)
!16565 = !DILocation(line: 189, column: 15, scope: !16564)
!16566 = !DILocation(line: 191, column: 29, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16563, file: !1135, line: 190, column: 13)
!16568 = !DILocation(line: 191, column: 27, scope: !16567)
!16569 = !DILocation(line: 192, column: 20, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16567, file: !1135, line: 192, column: 19)
!16571 = !DILocation(line: 192, column: 19, scope: !16567)
!16572 = !DILocation(line: 193, column: 17, scope: !16570)
!16573 = !DILocation(line: 194, column: 15, scope: !16567)
!16574 = !DILocation(line: 194, column: 28, scope: !16567)
!16575 = !DILocation(line: 194, column: 39, scope: !16567)
!16576 = !{!16577, !2986, i64 8}
!16577 = !{!"fs_res", !3183, i64 0, !2986, i64 8, !3110, i64 12}
!16578 = !DILocation(line: 195, column: 15, scope: !16567)
!16579 = !DILocation(line: 195, column: 28, scope: !16567)
!16580 = !DILocation(line: 195, column: 34, scope: !16567)
!16581 = !{!16577, !3110, i64 12}
!16582 = !DILocation(line: 196, column: 13, scope: !16567)
!16583 = !DILocation(line: 197, column: 30, scope: !16564)
!16584 = !DILocation(line: 197, column: 40, scope: !16564)
!16585 = !DILocation(line: 197, column: 11, scope: !16564)
!16586 = !DILocation(line: 197, column: 24, scope: !16564)
!16587 = !DILocation(line: 197, column: 28, scope: !16564)
!16588 = !{!16577, !3183, i64 0}
!16589 = !DILocation(line: 198, column: 34, scope: !16564)
!16590 = !DILocation(line: 198, column: 38, scope: !16564)
!16591 = !DILocation(line: 198, column: 21, scope: !16564)
!16592 = !DILocation(line: 198, column: 19, scope: !16564)
!16593 = !DILocation(line: 199, column: 17, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16564, file: !1135, line: 199, column: 15)
!16595 = !DILocation(line: 199, column: 15, scope: !16564)
!16596 = !DILocation(line: 200, column: 13, scope: !16594)
!16597 = !DILocation(line: 202, column: 15, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16564, file: !1135, line: 202, column: 15)
!16599 = !DILocation(line: 202, column: 26, scope: !16598)
!16600 = !DILocation(line: 202, column: 23, scope: !16598)
!16601 = !DILocation(line: 202, column: 15, scope: !16564)
!16602 = !DILocation(line: 206, column: 27, scope: !16603)
!16603 = distinct !DILexicalBlock(scope: !16598, file: !1135, line: 203, column: 13)
!16604 = !DILocation(line: 207, column: 13, scope: !16603)
!16605 = !DILocation(line: 208, column: 9, scope: !16564)
!16606 = !DILocation(line: 210, column: 9, scope: !16560)
!16607 = !DILabel(scope: !16608, name: "low_memory", file: !1135, line: 211)
!16608 = distinct !DILexicalBlock(scope: !16560, file: !1135, line: 210, column: 9)
!16609 = !DILocation(line: 211, column: 9, scope: !16608)
!16610 = !DILocation(line: 212, column: 15, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16608, file: !1135, line: 212, column: 15)
!16612 = !DILocation(line: 212, column: 15, scope: !16608)
!16613 = !DILocation(line: 214, column: 33, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16611, file: !1135, line: 213, column: 13)
!16615 = !DILocation(line: 214, column: 43, scope: !16614)
!16616 = !DILocation(line: 214, column: 27, scope: !16614)
!16617 = !DILocation(line: 214, column: 31, scope: !16614)
!16618 = !DILocation(line: 215, column: 38, scope: !16614)
!16619 = !DILocation(line: 215, column: 42, scope: !16614)
!16620 = !DILocation(line: 215, column: 25, scope: !16614)
!16621 = !DILocation(line: 215, column: 23, scope: !16614)
!16622 = !DILocation(line: 216, column: 13, scope: !16614)
!16623 = !DILocation(line: 217, column: 16, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16608, file: !1135, line: 217, column: 15)
!16625 = !DILocation(line: 217, column: 15, scope: !16608)
!16626 = !DILocation(line: 219, column: 23, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16624, file: !1135, line: 218, column: 13)
!16628 = !DILocation(line: 220, column: 15, scope: !16627)
!16629 = !DILocation(line: 220, column: 24, scope: !16627)
!16630 = !DILocation(line: 220, column: 35, scope: !16627)
!16631 = !DILocation(line: 221, column: 15, scope: !16627)
!16632 = !DILocation(line: 221, column: 24, scope: !16627)
!16633 = !DILocation(line: 221, column: 30, scope: !16627)
!16634 = !DILocation(line: 222, column: 13, scope: !16627)
!16635 = !DILocation(line: 225, column: 13, scope: !16523)
!16636 = !DILocation(line: 225, column: 22, scope: !16523)
!16637 = !DILocation(line: 225, column: 11, scope: !16523)
!16638 = !DILocation(line: 257, column: 13, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16523, file: !1135, line: 257, column: 11)
!16640 = !DILocation(line: 257, column: 22, scope: !16639)
!16641 = !DILocation(line: 257, column: 11, scope: !16523)
!16642 = !DILocalVariable(name: "dst_a_s", scope: !16643, file: !1135, line: 262, type: !1166)
!16643 = distinct !DILexicalBlock(scope: !16639, file: !1135, line: 258, column: 9)
!16644 = !DILocation(line: 262, column: 18, scope: !16643)
!16645 = !DILocation(line: 262, column: 28, scope: !16643)
!16646 = !DILocation(line: 262, column: 38, scope: !16643)
!16647 = !{!3182, !3183, i64 72}
!16648 = !DILocalVariable(name: "dst_c_s", scope: !16643, file: !1135, line: 263, type: !1166)
!16649 = !DILocation(line: 263, column: 18, scope: !16643)
!16650 = !DILocation(line: 263, column: 28, scope: !16643)
!16651 = !DILocation(line: 263, column: 38, scope: !16643)
!16652 = !{!3182, !3183, i64 104}
!16653 = !DILocalVariable(name: "dst_m_s", scope: !16643, file: !1135, line: 264, type: !1166)
!16654 = !DILocation(line: 264, column: 18, scope: !16643)
!16655 = !DILocation(line: 264, column: 28, scope: !16643)
!16656 = !DILocalVariable(name: "dst_a_ns", scope: !16643, file: !1135, line: 265, type: !7)
!16657 = !DILocation(line: 265, column: 15, scope: !16643)
!16658 = !DILocation(line: 265, column: 45, scope: !16643)
!16659 = !DILocation(line: 265, column: 26, scope: !16643)
!16660 = !DILocalVariable(name: "dst_c_ns", scope: !16643, file: !1135, line: 266, type: !7)
!16661 = !DILocation(line: 266, column: 15, scope: !16643)
!16662 = !DILocation(line: 266, column: 45, scope: !16643)
!16663 = !DILocation(line: 266, column: 26, scope: !16643)
!16664 = !DILocalVariable(name: "dst_m_ns", scope: !16643, file: !1135, line: 267, type: !7)
!16665 = !DILocation(line: 267, column: 15, scope: !16643)
!16666 = !DILocation(line: 267, column: 26, scope: !16643)
!16667 = !DILocalVariable(name: "odd_second", scope: !16668, file: !1135, line: 276, type: !120)
!16668 = distinct !DILexicalBlock(scope: !16643, file: !1135, line: 275, column: 11)
!16669 = !DILocation(line: 276, column: 18, scope: !16668)
!16670 = !DILocation(line: 276, column: 32, scope: !16668)
!16671 = !DILocation(line: 276, column: 42, scope: !16668)
!16672 = !DILocation(line: 276, column: 40, scope: !16668)
!16673 = !DILocation(line: 276, column: 52, scope: !16668)
!16674 = !DILocation(line: 276, column: 50, scope: !16668)
!16675 = !DILocation(line: 276, column: 61, scope: !16668)
!16676 = !DILocation(line: 276, column: 31, scope: !16668)
!16677 = !DILocalVariable(name: "a", scope: !16678, file: !1135, line: 285, type: !7)
!16678 = distinct !DILexicalBlock(scope: !16679, file: !1135, line: 284, column: 15)
!16679 = distinct !DILexicalBlock(scope: !16668, file: !1135, line: 278, column: 17)
!16680 = !DILocation(line: 285, column: 21, scope: !16678)
!16681 = !DILocation(line: 285, column: 25, scope: !16678)
!16682 = !DILocalVariable(name: "c", scope: !16678, file: !1135, line: 286, type: !7)
!16683 = !DILocation(line: 286, column: 21, scope: !16678)
!16684 = !DILocation(line: 286, column: 25, scope: !16678)
!16685 = !DILocalVariable(name: "m", scope: !16678, file: !1135, line: 287, type: !7)
!16686 = !DILocation(line: 287, column: 21, scope: !16678)
!16687 = !DILocation(line: 287, column: 25, scope: !16678)
!16688 = !DILocalVariable(name: "SR10", scope: !16678, file: !1135, line: 291, type: !7)
!16689 = !DILocation(line: 291, column: 21, scope: !16678)
!16690 = !DILocation(line: 291, column: 54, scope: !16678)
!16691 = !DILocation(line: 293, column: 22, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16678, file: !1135, line: 293, column: 21)
!16693 = !DILocation(line: 293, column: 26, scope: !16692)
!16694 = !DILocation(line: 293, column: 24, scope: !16692)
!16695 = !DILocation(line: 293, column: 33, scope: !16692)
!16696 = !DILocation(line: 293, column: 37, scope: !16692)
!16697 = !DILocation(line: 293, column: 35, scope: !16692)
!16698 = !DILocation(line: 293, column: 31, scope: !16692)
!16699 = !DILocation(line: 293, column: 44, scope: !16692)
!16700 = !DILocation(line: 293, column: 48, scope: !16692)
!16701 = !DILocation(line: 293, column: 46, scope: !16692)
!16702 = !DILocation(line: 293, column: 42, scope: !16692)
!16703 = !DILocation(line: 293, column: 54, scope: !16692)
!16704 = !DILocation(line: 293, column: 21, scope: !16678)
!16705 = !DILocation(line: 294, column: 23, scope: !16692)
!16706 = !DILocation(line: 294, column: 19, scope: !16692)
!16707 = !DILocation(line: 296, column: 30, scope: !16708)
!16708 = distinct !DILexicalBlock(scope: !16692, file: !1135, line: 296, column: 19)
!16709 = !DILocation(line: 296, column: 28, scope: !16708)
!16710 = !DILocation(line: 296, column: 41, scope: !16708)
!16711 = !DILocation(line: 296, column: 38, scope: !16708)
!16712 = !DILocation(line: 296, column: 52, scope: !16708)
!16713 = !DILocation(line: 296, column: 49, scope: !16708)
!16714 = !DILocation(line: 296, column: 63, scope: !16708)
!16715 = !DILocation(line: 296, column: 60, scope: !16708)
!16716 = !DILocation(line: 296, column: 24, scope: !16708)
!16717 = !DILocation(line: 297, column: 25, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16708, file: !1135, line: 296, column: 19)
!16719 = !DILocation(line: 297, column: 31, scope: !16718)
!16720 = !DILocation(line: 297, column: 40, scope: !16718)
!16721 = !DILocation(line: 297, column: 29, scope: !16718)
!16722 = !DILocation(line: 298, column: 25, scope: !16718)
!16723 = !DILocation(line: 298, column: 29, scope: !16718)
!16724 = !DILocation(line: 298, column: 31, scope: !16718)
!16725 = !DILocation(line: 298, column: 38, scope: !16718)
!16726 = !DILocation(line: 298, column: 40, scope: !16718)
!16727 = !DILocation(line: 298, column: 36, scope: !16718)
!16728 = !DILocation(line: 298, column: 47, scope: !16718)
!16729 = !DILocation(line: 298, column: 49, scope: !16718)
!16730 = !DILocation(line: 298, column: 45, scope: !16718)
!16731 = !DILocation(line: 298, column: 55, scope: !16718)
!16732 = !DILocation(line: 0, scope: !16718)
!16733 = !DILocation(line: 296, column: 19, scope: !16708)
!16734 = !DILocation(line: 300, column: 25, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16718, file: !1135, line: 300, column: 25)
!16736 = !DILocation(line: 300, column: 29, scope: !16735)
!16737 = !DILocation(line: 300, column: 25, scope: !16718)
!16738 = !DILocation(line: 302, column: 31, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16740, file: !1135, line: 302, column: 29)
!16740 = distinct !DILexicalBlock(scope: !16735, file: !1135, line: 301, column: 23)
!16741 = !DILocation(line: 302, column: 29, scope: !16740)
!16742 = !DILocation(line: 303, column: 31, scope: !16739)
!16743 = !DILocation(line: 303, column: 27, scope: !16739)
!16744 = !DILocation(line: 304, column: 25, scope: !16740)
!16745 = !DILocation(line: 300, column: 32, scope: !16735)
!16746 = !DILocation(line: 299, column: 28, scope: !16718)
!16747 = !DILocation(line: 299, column: 37, scope: !16718)
!16748 = !DILocation(line: 299, column: 46, scope: !16718)
!16749 = !DILocation(line: 299, column: 55, scope: !16718)
!16750 = !DILocation(line: 296, column: 19, scope: !16718)
!16751 = distinct !{!16751, !16733, !16752}
!16752 = !DILocation(line: 305, column: 23, scope: !16708)
!16753 = !DILocation(line: 308, column: 35, scope: !16668)
!16754 = !DILocation(line: 308, column: 13, scope: !16668)
!16755 = !DILocation(line: 308, column: 22, scope: !16668)
!16756 = !DILocation(line: 308, column: 33, scope: !16668)
!16757 = !DILocation(line: 311, column: 36, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16643, file: !1135, line: 311, column: 15)
!16759 = !DILocation(line: 311, column: 34, scope: !16758)
!16760 = !DILocation(line: 311, column: 15, scope: !16643)
!16761 = !DILocalVariable(name: "timespec", scope: !16762, file: !1135, line: 313, type: !1174)
!16762 = distinct !DILexicalBlock(scope: !16758, file: !1135, line: 312, column: 13)
!16763 = !DILocation(line: 313, column: 31, scope: !16762)
!16764 = !DILocalVariable(name: "dst_status", scope: !16762, file: !1135, line: 314, type: !1140)
!16765 = !DILocation(line: 314, column: 27, scope: !16762)
!16766 = !DILocation(line: 318, column: 25, scope: !16762)
!16767 = !DILocation(line: 318, column: 32, scope: !16762)
!16768 = !DILocation(line: 318, column: 22, scope: !16762)
!16769 = !DILocalVariable(name: "s", scope: !16770, file: !1135, line: 324, type: !1166)
!16770 = distinct !DILexicalBlock(scope: !16762, file: !1135, line: 323, column: 15)
!16771 = !DILocation(line: 324, column: 24, scope: !16770)
!16772 = !DILocation(line: 324, column: 28, scope: !16770)
!16773 = !DILocation(line: 324, column: 39, scope: !16770)
!16774 = !DILocation(line: 324, column: 43, scope: !16770)
!16775 = !DILocation(line: 324, column: 36, scope: !16770)
!16776 = !DILocation(line: 324, column: 34, scope: !16770)
!16777 = !DILocation(line: 325, column: 21, scope: !16778)
!16778 = distinct !DILexicalBlock(scope: !16770, file: !1135, line: 325, column: 21)
!16779 = !DILocation(line: 325, column: 29, scope: !16778)
!16780 = !DILocation(line: 325, column: 27, scope: !16778)
!16781 = !DILocation(line: 325, column: 35, scope: !16778)
!16782 = !DILocation(line: 325, column: 39, scope: !16778)
!16783 = !DILocation(line: 325, column: 48, scope: !16778)
!16784 = !DILocation(line: 325, column: 45, scope: !16778)
!16785 = !DILocation(line: 325, column: 54, scope: !16778)
!16786 = !DILocation(line: 325, column: 57, scope: !16778)
!16787 = !DILocation(line: 325, column: 67, scope: !16778)
!16788 = !DILocation(line: 325, column: 64, scope: !16778)
!16789 = !DILocation(line: 325, column: 21, scope: !16770)
!16790 = !DILocation(line: 326, column: 19, scope: !16778)
!16791 = !DILocation(line: 327, column: 21, scope: !16792)
!16792 = distinct !DILexicalBlock(scope: !16770, file: !1135, line: 327, column: 21)
!16793 = !DILocation(line: 327, column: 29, scope: !16792)
!16794 = !DILocation(line: 327, column: 27, scope: !16792)
!16795 = !DILocation(line: 328, column: 21, scope: !16792)
!16796 = !DILocation(line: 328, column: 25, scope: !16792)
!16797 = !DILocation(line: 328, column: 34, scope: !16792)
!16798 = !DILocation(line: 328, column: 31, scope: !16792)
!16799 = !DILocation(line: 328, column: 36, scope: !16792)
!16800 = !DILocation(line: 328, column: 39, scope: !16792)
!16801 = !DILocation(line: 328, column: 48, scope: !16792)
!16802 = !DILocation(line: 328, column: 57, scope: !16792)
!16803 = !DILocation(line: 328, column: 66, scope: !16792)
!16804 = !DILocation(line: 328, column: 64, scope: !16792)
!16805 = !DILocation(line: 328, column: 55, scope: !16792)
!16806 = !DILocation(line: 328, column: 46, scope: !16792)
!16807 = !DILocation(line: 327, column: 21, scope: !16770)
!16808 = !DILocation(line: 329, column: 19, scope: !16792)
!16809 = !DILocation(line: 338, column: 36, scope: !16762)
!16810 = !DILocation(line: 338, column: 15, scope: !16762)
!16811 = !DILocation(line: 338, column: 27, scope: !16762)
!16812 = !DILocation(line: 338, column: 34, scope: !16762)
!16813 = !DILocation(line: 339, column: 37, scope: !16762)
!16814 = !DILocation(line: 339, column: 15, scope: !16762)
!16815 = !DILocation(line: 339, column: 27, scope: !16762)
!16816 = !DILocation(line: 339, column: 35, scope: !16762)
!16817 = !DILocation(line: 340, column: 36, scope: !16762)
!16818 = !DILocation(line: 340, column: 47, scope: !16762)
!16819 = !DILocation(line: 340, column: 51, scope: !16762)
!16820 = !DILocation(line: 340, column: 46, scope: !16762)
!16821 = !DILocation(line: 340, column: 44, scope: !16762)
!16822 = !DILocation(line: 340, column: 15, scope: !16762)
!16823 = !DILocation(line: 340, column: 27, scope: !16762)
!16824 = !DILocation(line: 340, column: 34, scope: !16762)
!16825 = !DILocation(line: 341, column: 37, scope: !16762)
!16826 = !DILocation(line: 341, column: 48, scope: !16762)
!16827 = !DILocation(line: 341, column: 52, scope: !16762)
!16828 = !DILocation(line: 341, column: 46, scope: !16762)
!16829 = !DILocation(line: 341, column: 15, scope: !16762)
!16830 = !DILocation(line: 341, column: 27, scope: !16762)
!16831 = !DILocation(line: 341, column: 35, scope: !16762)
!16832 = !DILocation(line: 343, column: 30, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16762, file: !1135, line: 343, column: 19)
!16834 = !DILocation(line: 343, column: 35, scope: !16833)
!16835 = !DILocation(line: 343, column: 45, scope: !16833)
!16836 = !DILocation(line: 343, column: 19, scope: !16833)
!16837 = !DILocation(line: 343, column: 19, scope: !16762)
!16838 = !DILocation(line: 344, column: 17, scope: !16833)
!16839 = !DILocalVariable(name: "stat_result", scope: !16840, file: !1135, line: 348, type: !7)
!16840 = distinct !DILexicalBlock(scope: !16762, file: !1135, line: 347, column: 15)
!16841 = !DILocation(line: 348, column: 21, scope: !16840)
!16842 = !DILocation(line: 349, column: 30, scope: !16840)
!16843 = !DILocation(line: 349, column: 35, scope: !16840)
!16844 = !DILocation(line: 349, column: 21, scope: !16840)
!16845 = !DILocation(line: 351, column: 21, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16840, file: !1135, line: 351, column: 21)
!16847 = !DILocation(line: 352, column: 35, scope: !16846)
!16848 = !DILocation(line: 352, column: 46, scope: !16846)
!16849 = !DILocation(line: 352, column: 44, scope: !16846)
!16850 = !DILocation(line: 352, column: 21, scope: !16846)
!16851 = !DILocation(line: 353, column: 24, scope: !16846)
!16852 = !DILocation(line: 353, column: 58, scope: !16846)
!16853 = !DILocation(line: 353, column: 56, scope: !16846)
!16854 = !DILocation(line: 353, column: 21, scope: !16846)
!16855 = !DILocation(line: 351, column: 21, scope: !16840)
!16856 = !DILocation(line: 357, column: 42, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16846, file: !1135, line: 354, column: 19)
!16858 = !DILocation(line: 357, column: 21, scope: !16857)
!16859 = !DILocation(line: 357, column: 33, scope: !16857)
!16860 = !DILocation(line: 357, column: 40, scope: !16857)
!16861 = !DILocation(line: 358, column: 43, scope: !16857)
!16862 = !DILocation(line: 358, column: 21, scope: !16857)
!16863 = !DILocation(line: 358, column: 33, scope: !16857)
!16864 = !DILocation(line: 358, column: 41, scope: !16857)
!16865 = !DILocation(line: 359, column: 32, scope: !16857)
!16866 = !DILocation(line: 359, column: 37, scope: !16857)
!16867 = !DILocation(line: 359, column: 47, scope: !16857)
!16868 = !DILocation(line: 359, column: 21, scope: !16857)
!16869 = !DILocation(line: 360, column: 19, scope: !16857)
!16870 = !DILocation(line: 362, column: 21, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16840, file: !1135, line: 362, column: 21)
!16872 = !DILocation(line: 362, column: 33, scope: !16871)
!16873 = !DILocation(line: 362, column: 21, scope: !16840)
!16874 = !DILocation(line: 363, column: 19, scope: !16871)
!16875 = !DILocalVariable(name: "old_res", scope: !16876, file: !1135, line: 369, type: !7)
!16876 = distinct !DILexicalBlock(scope: !16762, file: !1135, line: 368, column: 15)
!16877 = !DILocation(line: 369, column: 21, scope: !16876)
!16878 = !DILocation(line: 369, column: 31, scope: !16876)
!16879 = !DILocalVariable(name: "a", scope: !16876, file: !1135, line: 370, type: !7)
!16880 = !DILocation(line: 370, column: 21, scope: !16876)
!16881 = !DILocation(line: 370, column: 48, scope: !16876)
!16882 = !DILocation(line: 370, column: 57, scope: !16876)
!16883 = !DILocation(line: 370, column: 34, scope: !16876)
!16884 = !DILocation(line: 371, column: 28, scope: !16876)
!16885 = !DILocation(line: 371, column: 26, scope: !16876)
!16886 = !DILocation(line: 370, column: 25, scope: !16876)
!16887 = !DILocation(line: 373, column: 21, scope: !16876)
!16888 = !DILocation(line: 375, column: 27, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16876, file: !1135, line: 375, column: 17)
!16890 = !DILocation(line: 375, column: 24, scope: !16889)
!16891 = !DILocation(line: 375, column: 22, scope: !16889)
!16892 = !DILocation(line: 375, column: 32, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16889, file: !1135, line: 375, column: 17)
!16894 = !DILocation(line: 375, column: 34, scope: !16893)
!16895 = !DILocation(line: 375, column: 39, scope: !16893)
!16896 = !DILocation(line: 375, column: 17, scope: !16889)
!16897 = !DILocation(line: 377, column: 25, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16899, file: !1135, line: 377, column: 25)
!16899 = distinct !DILexicalBlock(scope: !16893, file: !1135, line: 376, column: 19)
!16900 = !DILocation(line: 377, column: 29, scope: !16898)
!16901 = !DILocation(line: 377, column: 25, scope: !16899)
!16902 = !DILocation(line: 379, column: 29, scope: !16903)
!16903 = distinct !DILexicalBlock(scope: !16898, file: !1135, line: 378, column: 23)
!16904 = !DILocation(line: 380, column: 25, scope: !16903)
!16905 = !DILocation(line: 382, column: 25, scope: !16899)
!16906 = !DILocation(line: 383, column: 25, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16899, file: !1135, line: 383, column: 25)
!16908 = !DILocation(line: 383, column: 32, scope: !16907)
!16909 = !DILocation(line: 383, column: 29, scope: !16907)
!16910 = !DILocation(line: 383, column: 25, scope: !16899)
!16911 = !DILocation(line: 384, column: 23, scope: !16907)
!16912 = !DILocation(line: 385, column: 19, scope: !16899)
!16913 = !DILocation(line: 375, column: 47, scope: !16893)
!16914 = !DILocation(line: 375, column: 17, scope: !16893)
!16915 = distinct !{!16915, !16896, !16916}
!16916 = !DILocation(line: 385, column: 19, scope: !16889)
!16917 = !DILocation(line: 387, column: 13, scope: !16762)
!16918 = !DILocation(line: 389, column: 33, scope: !16643)
!16919 = !DILocation(line: 389, column: 11, scope: !16643)
!16920 = !DILocation(line: 389, column: 20, scope: !16643)
!16921 = !DILocation(line: 389, column: 31, scope: !16643)
!16922 = !DILocation(line: 390, column: 11, scope: !16643)
!16923 = !DILocation(line: 390, column: 20, scope: !16643)
!16924 = !DILocation(line: 390, column: 26, scope: !16643)
!16925 = !DILocation(line: 391, column: 9, scope: !16643)
!16926 = !DILocation(line: 394, column: 19, scope: !16523)
!16927 = !DILocation(line: 394, column: 23, scope: !16523)
!16928 = !DILocation(line: 394, column: 16, scope: !16523)
!16929 = !DILocation(line: 394, column: 13, scope: !16523)
!16930 = !DILocation(line: 395, column: 17, scope: !16523)
!16931 = !DILocation(line: 395, column: 26, scope: !16523)
!16932 = !DILocation(line: 395, column: 24, scope: !16523)
!16933 = !DILocation(line: 395, column: 14, scope: !16523)
!16934 = !DILocation(line: 396, column: 5, scope: !16523)
!16935 = !DILocation(line: 399, column: 11, scope: !1134)
!16936 = !DILocation(line: 399, column: 19, scope: !1134)
!16937 = !DILocation(line: 399, column: 17, scope: !1134)
!16938 = !DILocation(line: 400, column: 13, scope: !1134)
!16939 = !DILocation(line: 400, column: 21, scope: !1134)
!16940 = !DILocation(line: 400, column: 19, scope: !1134)
!16941 = !DILocation(line: 401, column: 13, scope: !1134)
!16942 = !DILocation(line: 401, column: 22, scope: !1134)
!16943 = !DILocation(line: 401, column: 20, scope: !1134)
!16944 = !DILocation(line: 402, column: 13, scope: !1134)
!16945 = !DILocation(line: 402, column: 22, scope: !1134)
!16946 = !DILocation(line: 402, column: 20, scope: !1134)
!16947 = !DILocation(line: 399, column: 3, scope: !1134)
!16948 = !DILocation(line: 403, column: 1, scope: !1134)
!16949 = distinct !DISubprogram(name: "dev_info_hash", scope: !1135, file: !1135, line: 85, type: !549, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1161, retainedNodes: !143)
!16950 = !DILocalVariable(name: "x", arg: 1, scope: !16949, file: !1135, line: 85, type: !427)
!16951 = !DILocation(line: 85, column: 28, scope: !16949)
!16952 = !DILocalVariable(name: "table_size", arg: 2, scope: !16949, file: !1135, line: 85, type: !55)
!16953 = !DILocation(line: 85, column: 38, scope: !16949)
!16954 = !DILocalVariable(name: "p", scope: !16949, file: !1135, line: 87, type: !1175)
!16955 = !DILocation(line: 87, column: 24, scope: !16949)
!16956 = !DILocation(line: 87, column: 28, scope: !16949)
!16957 = !DILocation(line: 96, column: 10, scope: !16949)
!16958 = !DILocation(line: 96, column: 13, scope: !16949)
!16959 = !DILocation(line: 96, column: 19, scope: !16949)
!16960 = !DILocation(line: 96, column: 17, scope: !16949)
!16961 = !DILocation(line: 96, column: 3, scope: !16949)
!16962 = distinct !DISubprogram(name: "dev_info_compare", scope: !1135, file: !1135, line: 101, type: !551, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1161, retainedNodes: !143)
!16963 = !DILocalVariable(name: "x", arg: 1, scope: !16962, file: !1135, line: 101, type: !427)
!16964 = !DILocation(line: 101, column: 31, scope: !16962)
!16965 = !DILocalVariable(name: "y", arg: 2, scope: !16962, file: !1135, line: 101, type: !427)
!16966 = !DILocation(line: 101, column: 46, scope: !16962)
!16967 = !DILocalVariable(name: "a", scope: !16962, file: !1135, line: 103, type: !1175)
!16968 = !DILocation(line: 103, column: 24, scope: !16962)
!16969 = !DILocation(line: 103, column: 28, scope: !16962)
!16970 = !DILocalVariable(name: "b", scope: !16962, file: !1135, line: 104, type: !1175)
!16971 = !DILocation(line: 104, column: 24, scope: !16962)
!16972 = !DILocation(line: 104, column: 28, scope: !16962)
!16973 = !DILocation(line: 105, column: 10, scope: !16962)
!16974 = !DILocation(line: 105, column: 13, scope: !16962)
!16975 = !DILocation(line: 105, column: 20, scope: !16962)
!16976 = !DILocation(line: 105, column: 23, scope: !16962)
!16977 = !DILocation(line: 105, column: 17, scope: !16962)
!16978 = !DILocation(line: 105, column: 3, scope: !16962)
!16979 = distinct !DISubprogram(name: "lutimensat", scope: !16980, file: !16980, line: 42, type: !1185, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1182, retainedNodes: !143)
!16980 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mbarbar/clone/coreutils")
!16981 = !DILocalVariable(name: "dir", arg: 1, scope: !16979, file: !16980, line: 42, type: !7)
!16982 = !DILocation(line: 42, column: 17, scope: !16979)
!16983 = !DILocalVariable(name: "file", arg: 2, scope: !16979, file: !16980, line: 42, type: !115)
!16984 = !DILocation(line: 42, column: 34, scope: !16979)
!16985 = !DILocalVariable(name: "times", arg: 3, scope: !16979, file: !16980, line: 42, type: !1187)
!16986 = !DILocation(line: 42, column: 62, scope: !16979)
!16987 = !DILocation(line: 44, column: 21, scope: !16979)
!16988 = !DILocation(line: 44, column: 26, scope: !16979)
!16989 = !DILocation(line: 44, column: 32, scope: !16979)
!16990 = !DILocation(line: 44, column: 10, scope: !16979)
!16991 = !DILocation(line: 44, column: 3, scope: !16979)
!16992 = distinct !DISubprogram(name: "fdutimens", scope: !1232, file: !1232, line: 170, type: !1185, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1182, retainedNodes: !143)
!16993 = !DILocalVariable(name: "fd", arg: 1, scope: !16992, file: !1232, line: 170, type: !7)
!16994 = !DILocation(line: 170, column: 16, scope: !16992)
!16995 = !DILocalVariable(name: "file", arg: 2, scope: !16992, file: !1232, line: 170, type: !115)
!16996 = !DILocation(line: 170, column: 32, scope: !16992)
!16997 = !DILocalVariable(name: "timespec", arg: 3, scope: !16992, file: !1232, line: 170, type: !1187)
!16998 = !DILocation(line: 170, column: 60, scope: !16992)
!16999 = !DILocalVariable(name: "adjusted_timespec", scope: !16992, file: !1232, line: 172, type: !1193)
!17000 = !DILocation(line: 172, column: 19, scope: !16992)
!17001 = !DILocalVariable(name: "ts", scope: !16992, file: !1232, line: 173, type: !1194)
!17002 = !DILocation(line: 173, column: 20, scope: !16992)
!17003 = !DILocation(line: 173, column: 25, scope: !16992)
!17004 = !DILocation(line: 173, column: 36, scope: !16992)
!17005 = !DILocalVariable(name: "adjustment_needed", scope: !16992, file: !1232, line: 174, type: !7)
!17006 = !DILocation(line: 174, column: 7, scope: !16992)
!17007 = !DILocalVariable(name: "st", scope: !16992, file: !1232, line: 175, type: !1211)
!17008 = !DILocation(line: 175, column: 15, scope: !16992)
!17009 = !DILocation(line: 177, column: 7, scope: !17010)
!17010 = distinct !DILexicalBlock(scope: !16992, file: !1232, line: 177, column: 7)
!17011 = !DILocation(line: 177, column: 7, scope: !16992)
!17012 = !DILocation(line: 179, column: 7, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17010, file: !1232, line: 178, column: 5)
!17014 = !DILocation(line: 179, column: 30, scope: !17013)
!17015 = !DILocation(line: 180, column: 7, scope: !17013)
!17016 = !DILocation(line: 180, column: 30, scope: !17013)
!17017 = !DILocation(line: 181, column: 46, scope: !17013)
!17018 = !DILocation(line: 181, column: 27, scope: !17013)
!17019 = !DILocation(line: 181, column: 25, scope: !17013)
!17020 = !DILocation(line: 182, column: 5, scope: !17013)
!17021 = !DILocation(line: 183, column: 7, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !16992, file: !1232, line: 183, column: 7)
!17023 = !DILocation(line: 183, column: 25, scope: !17022)
!17024 = !DILocation(line: 183, column: 7, scope: !16992)
!17025 = !DILocation(line: 184, column: 5, scope: !17022)
!17026 = !DILocation(line: 189, column: 7, scope: !17027)
!17027 = distinct !DILexicalBlock(scope: !16992, file: !1232, line: 189, column: 7)
!17028 = !DILocation(line: 189, column: 10, scope: !17027)
!17029 = !DILocation(line: 189, column: 14, scope: !17027)
!17030 = !DILocation(line: 189, column: 18, scope: !17027)
!17031 = !DILocation(line: 189, column: 7, scope: !16992)
!17032 = !DILocation(line: 191, column: 7, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17027, file: !1232, line: 190, column: 5)
!17034 = !DILocation(line: 191, column: 13, scope: !17033)
!17035 = !DILocation(line: 192, column: 7, scope: !17033)
!17036 = !DILocation(line: 218, column: 12, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !16992, file: !1232, line: 218, column: 7)
!17038 = !DILocation(line: 218, column: 9, scope: !17037)
!17039 = !DILocation(line: 218, column: 7, scope: !16992)
!17040 = !DILocalVariable(name: "result", scope: !17041, file: !1232, line: 220, type: !7)
!17041 = distinct !DILexicalBlock(scope: !17037, file: !1232, line: 219, column: 5)
!17042 = !DILocation(line: 220, column: 11, scope: !17041)
!17043 = !DILocation(line: 234, column: 11, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17041, file: !1232, line: 234, column: 11)
!17045 = !DILocation(line: 234, column: 29, scope: !17044)
!17046 = !DILocation(line: 234, column: 11, scope: !17041)
!17047 = !DILocation(line: 236, column: 15, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17049, file: !1232, line: 236, column: 15)
!17049 = distinct !DILexicalBlock(scope: !17044, file: !1232, line: 235, column: 9)
!17050 = !DILocation(line: 236, column: 18, scope: !17048)
!17051 = !DILocation(line: 236, column: 15, scope: !17049)
!17052 = !DILocation(line: 236, column: 30, scope: !17048)
!17053 = !DILocation(line: 236, column: 24, scope: !17048)
!17054 = !DILocation(line: 236, column: 50, scope: !17048)
!17055 = !DILocation(line: 236, column: 43, scope: !17048)
!17056 = !DILocation(line: 237, column: 13, scope: !17048)
!17057 = !DILocation(line: 238, column: 15, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17049, file: !1232, line: 238, column: 15)
!17059 = !DILocation(line: 238, column: 21, scope: !17058)
!17060 = !DILocation(line: 238, column: 29, scope: !17058)
!17061 = !DILocation(line: 238, column: 15, scope: !17049)
!17062 = !DILocation(line: 239, column: 13, scope: !17058)
!17063 = !DILocation(line: 239, column: 21, scope: !17058)
!17064 = !DILocation(line: 240, column: 20, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17058, file: !1232, line: 240, column: 20)
!17066 = !DILocation(line: 240, column: 26, scope: !17065)
!17067 = !DILocation(line: 240, column: 34, scope: !17065)
!17068 = !DILocation(line: 240, column: 20, scope: !17058)
!17069 = !DILocation(line: 241, column: 13, scope: !17065)
!17070 = !DILocation(line: 241, column: 21, scope: !17065)
!17071 = !DILocation(line: 243, column: 28, scope: !17049)
!17072 = !DILocation(line: 244, column: 9, scope: !17049)
!17073 = !DILocation(line: 247, column: 11, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17041, file: !1232, line: 247, column: 11)
!17075 = !DILocation(line: 247, column: 14, scope: !17074)
!17076 = !DILocation(line: 247, column: 11, scope: !17041)
!17077 = !DILocation(line: 249, column: 41, scope: !17078)
!17078 = distinct !DILexicalBlock(scope: !17074, file: !1232, line: 248, column: 9)
!17079 = !DILocation(line: 249, column: 47, scope: !17078)
!17080 = !DILocation(line: 249, column: 20, scope: !17078)
!17081 = !DILocation(line: 249, column: 18, scope: !17078)
!17082 = !DILocation(line: 258, column: 19, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17078, file: !1232, line: 258, column: 15)
!17084 = !DILocation(line: 258, column: 17, scope: !17083)
!17085 = !DILocation(line: 258, column: 15, scope: !17078)
!17086 = !DILocation(line: 259, column: 13, scope: !17083)
!17087 = !DILocation(line: 259, column: 19, scope: !17083)
!17088 = !DILocation(line: 261, column: 15, scope: !17089)
!17089 = distinct !DILexicalBlock(scope: !17078, file: !1232, line: 261, column: 15)
!17090 = !DILocation(line: 261, column: 22, scope: !17089)
!17091 = !DILocation(line: 261, column: 27, scope: !17089)
!17092 = !DILocation(line: 261, column: 30, scope: !17089)
!17093 = !DILocation(line: 261, column: 36, scope: !17089)
!17094 = !DILocation(line: 261, column: 15, scope: !17078)
!17095 = !DILocation(line: 263, column: 38, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17089, file: !1232, line: 262, column: 13)
!17097 = !DILocation(line: 264, column: 22, scope: !17096)
!17098 = !DILocation(line: 264, column: 15, scope: !17096)
!17099 = !DILocation(line: 266, column: 9, scope: !17078)
!17100 = !DILocation(line: 269, column: 16, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17041, file: !1232, line: 269, column: 11)
!17102 = !DILocation(line: 269, column: 13, scope: !17101)
!17103 = !DILocation(line: 269, column: 11, scope: !17041)
!17104 = !DILocation(line: 271, column: 30, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17101, file: !1232, line: 270, column: 9)
!17106 = !DILocation(line: 271, column: 34, scope: !17105)
!17107 = !DILocation(line: 271, column: 20, scope: !17105)
!17108 = !DILocation(line: 271, column: 18, scope: !17105)
!17109 = !DILocation(line: 274, column: 19, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17105, file: !1232, line: 274, column: 15)
!17111 = !DILocation(line: 274, column: 17, scope: !17110)
!17112 = !DILocation(line: 274, column: 15, scope: !17105)
!17113 = !DILocation(line: 275, column: 13, scope: !17110)
!17114 = !DILocation(line: 275, column: 19, scope: !17110)
!17115 = !DILocation(line: 277, column: 15, scope: !17116)
!17116 = distinct !DILexicalBlock(scope: !17105, file: !1232, line: 277, column: 15)
!17117 = !DILocation(line: 277, column: 22, scope: !17116)
!17118 = !DILocation(line: 277, column: 27, scope: !17116)
!17119 = !DILocation(line: 277, column: 30, scope: !17116)
!17120 = !DILocation(line: 277, column: 36, scope: !17116)
!17121 = !DILocation(line: 277, column: 15, scope: !17105)
!17122 = !DILocation(line: 279, column: 38, scope: !17123)
!17123 = distinct !DILexicalBlock(scope: !17116, file: !1232, line: 278, column: 13)
!17124 = !DILocation(line: 280, column: 22, scope: !17123)
!17125 = !DILocation(line: 280, column: 15, scope: !17123)
!17126 = !DILocation(line: 282, column: 9, scope: !17105)
!17127 = !DILocation(line: 284, column: 5, scope: !17041)
!17128 = !DILocation(line: 285, column: 26, scope: !16992)
!17129 = !DILocation(line: 286, column: 27, scope: !16992)
!17130 = !DILocation(line: 377, column: 7, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !16992, file: !1232, line: 377, column: 7)
!17132 = !DILocation(line: 377, column: 7, scope: !16992)
!17133 = !DILocation(line: 379, column: 11, scope: !17134)
!17134 = distinct !DILexicalBlock(scope: !17135, file: !1232, line: 379, column: 11)
!17135 = distinct !DILexicalBlock(scope: !17131, file: !1232, line: 378, column: 5)
!17136 = !DILocation(line: 379, column: 29, scope: !17134)
!17137 = !DILocation(line: 380, column: 11, scope: !17134)
!17138 = !DILocation(line: 380, column: 15, scope: !17134)
!17139 = !DILocation(line: 380, column: 18, scope: !17134)
!17140 = !DILocation(line: 379, column: 11, scope: !17135)
!17141 = !DILocation(line: 380, column: 30, scope: !17134)
!17142 = !DILocation(line: 380, column: 24, scope: !17134)
!17143 = !DILocation(line: 380, column: 50, scope: !17134)
!17144 = !DILocation(line: 380, column: 43, scope: !17134)
!17145 = !DILocation(line: 381, column: 9, scope: !17134)
!17146 = !DILocation(line: 382, column: 11, scope: !17147)
!17147 = distinct !DILexicalBlock(scope: !17135, file: !1232, line: 382, column: 11)
!17148 = !DILocation(line: 382, column: 14, scope: !17147)
!17149 = !DILocation(line: 382, column: 17, scope: !17147)
!17150 = !DILocation(line: 382, column: 11, scope: !17135)
!17151 = !DILocation(line: 383, column: 9, scope: !17147)
!17152 = !DILocation(line: 384, column: 5, scope: !17135)
!17153 = !DILocalVariable(name: "timeval", scope: !17154, file: !1232, line: 388, type: !1195)
!17154 = distinct !DILexicalBlock(scope: !16992, file: !1232, line: 386, column: 3)
!17155 = !DILocation(line: 388, column: 20, scope: !17154)
!17156 = !DILocalVariable(name: "t", scope: !17154, file: !1232, line: 389, type: !1202)
!17157 = !DILocation(line: 389, column: 21, scope: !17154)
!17158 = !DILocation(line: 390, column: 9, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17154, file: !1232, line: 390, column: 9)
!17160 = !DILocation(line: 390, column: 9, scope: !17154)
!17161 = !DILocation(line: 392, column: 29, scope: !17162)
!17162 = distinct !DILexicalBlock(scope: !17159, file: !1232, line: 391, column: 7)
!17163 = !DILocation(line: 392, column: 35, scope: !17162)
!17164 = !DILocation(line: 392, column: 9, scope: !17162)
!17165 = !DILocation(line: 392, column: 20, scope: !17162)
!17166 = !DILocation(line: 392, column: 27, scope: !17162)
!17167 = !{!17168, !3183, i64 0}
!17168 = !{!"timeval", !3183, i64 0, !3183, i64 8}
!17169 = !DILocation(line: 393, column: 30, scope: !17162)
!17170 = !DILocation(line: 393, column: 36, scope: !17162)
!17171 = !DILocation(line: 393, column: 44, scope: !17162)
!17172 = !DILocation(line: 393, column: 9, scope: !17162)
!17173 = !DILocation(line: 393, column: 20, scope: !17162)
!17174 = !DILocation(line: 393, column: 28, scope: !17162)
!17175 = !{!17168, !3183, i64 8}
!17176 = !DILocation(line: 394, column: 29, scope: !17162)
!17177 = !DILocation(line: 394, column: 35, scope: !17162)
!17178 = !DILocation(line: 394, column: 9, scope: !17162)
!17179 = !DILocation(line: 394, column: 20, scope: !17162)
!17180 = !DILocation(line: 394, column: 27, scope: !17162)
!17181 = !DILocation(line: 395, column: 30, scope: !17162)
!17182 = !DILocation(line: 395, column: 36, scope: !17162)
!17183 = !DILocation(line: 395, column: 44, scope: !17162)
!17184 = !DILocation(line: 395, column: 9, scope: !17162)
!17185 = !DILocation(line: 395, column: 20, scope: !17162)
!17186 = !DILocation(line: 395, column: 28, scope: !17162)
!17187 = !DILocation(line: 396, column: 13, scope: !17162)
!17188 = !DILocation(line: 396, column: 11, scope: !17162)
!17189 = !DILocation(line: 397, column: 7, scope: !17162)
!17190 = !DILocation(line: 399, column: 9, scope: !17159)
!17191 = !DILocation(line: 401, column: 9, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17154, file: !1232, line: 401, column: 9)
!17193 = !DILocation(line: 401, column: 12, scope: !17192)
!17194 = !DILocation(line: 401, column: 9, scope: !17154)
!17195 = !DILocation(line: 404, column: 37, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17192, file: !1232, line: 402, column: 7)
!17197 = !DILocation(line: 404, column: 43, scope: !17196)
!17198 = !DILocation(line: 404, column: 16, scope: !17196)
!17199 = !DILocation(line: 404, column: 9, scope: !17196)
!17200 = !DILocation(line: 425, column: 13, scope: !17201)
!17201 = distinct !DILexicalBlock(scope: !17202, file: !1232, line: 425, column: 13)
!17202 = distinct !DILexicalBlock(scope: !17192, file: !1232, line: 408, column: 7)
!17203 = !DILocation(line: 425, column: 29, scope: !17201)
!17204 = !DILocation(line: 425, column: 13, scope: !17202)
!17205 = !DILocation(line: 433, column: 17, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17207, file: !1232, line: 433, column: 17)
!17207 = distinct !DILexicalBlock(scope: !17201, file: !1232, line: 426, column: 11)
!17208 = !DILocation(line: 433, column: 17, scope: !17207)
!17209 = !DILocalVariable(name: "abig", scope: !17210, file: !1232, line: 435, type: !120)
!17210 = distinct !DILexicalBlock(scope: !17206, file: !1232, line: 434, column: 15)
!17211 = !DILocation(line: 435, column: 22, scope: !17210)
!17212 = !DILocation(line: 435, column: 39, scope: !17210)
!17213 = !DILocation(line: 435, column: 44, scope: !17210)
!17214 = !DILocation(line: 435, column: 36, scope: !17210)
!17215 = !DILocalVariable(name: "mbig", scope: !17210, file: !1232, line: 436, type: !120)
!17216 = !DILocation(line: 436, column: 22, scope: !17210)
!17217 = !DILocation(line: 436, column: 39, scope: !17210)
!17218 = !DILocation(line: 436, column: 44, scope: !17210)
!17219 = !DILocation(line: 436, column: 36, scope: !17210)
!17220 = !DILocation(line: 437, column: 22, scope: !17221)
!17221 = distinct !DILexicalBlock(scope: !17210, file: !1232, line: 437, column: 21)
!17222 = !DILocation(line: 437, column: 29, scope: !17221)
!17223 = !DILocation(line: 437, column: 27, scope: !17221)
!17224 = !DILocation(line: 437, column: 35, scope: !17221)
!17225 = !DILocation(line: 437, column: 45, scope: !17221)
!17226 = !DILocation(line: 437, column: 38, scope: !17221)
!17227 = !DILocation(line: 437, column: 54, scope: !17221)
!17228 = !DILocation(line: 437, column: 21, scope: !17210)
!17229 = !DILocalVariable(name: "adiff", scope: !17230, file: !1232, line: 441, type: !1166)
!17230 = distinct !DILexicalBlock(scope: !17221, file: !1232, line: 438, column: 19)
!17231 = !DILocation(line: 441, column: 28, scope: !17230)
!17232 = !DILocation(line: 441, column: 39, scope: !17230)
!17233 = !DILocation(line: 441, column: 50, scope: !17230)
!17234 = !DILocation(line: 441, column: 55, scope: !17230)
!17235 = !DILocation(line: 441, column: 48, scope: !17230)
!17236 = !DILocalVariable(name: "mdiff", scope: !17230, file: !1232, line: 442, type: !1166)
!17237 = !DILocation(line: 442, column: 28, scope: !17230)
!17238 = !DILocation(line: 442, column: 39, scope: !17230)
!17239 = !DILocation(line: 442, column: 50, scope: !17230)
!17240 = !DILocation(line: 442, column: 55, scope: !17230)
!17241 = !DILocation(line: 442, column: 48, scope: !17230)
!17242 = !DILocalVariable(name: "tt", scope: !17230, file: !1232, line: 444, type: !1202)
!17243 = !DILocation(line: 444, column: 37, scope: !17230)
!17244 = !DILocalVariable(name: "truncated_timeval", scope: !17230, file: !1232, line: 445, type: !1195)
!17245 = !DILocation(line: 445, column: 36, scope: !17230)
!17246 = !DILocation(line: 446, column: 21, scope: !17230)
!17247 = !DILocation(line: 446, column: 44, scope: !17230)
!17248 = !DILocation(line: 447, column: 21, scope: !17230)
!17249 = !DILocation(line: 447, column: 44, scope: !17230)
!17250 = !DILocation(line: 448, column: 25, scope: !17251)
!17251 = distinct !DILexicalBlock(scope: !17230, file: !1232, line: 448, column: 25)
!17252 = !DILocation(line: 448, column: 30, scope: !17251)
!17253 = !DILocation(line: 448, column: 33, scope: !17251)
!17254 = !DILocation(line: 448, column: 39, scope: !17251)
!17255 = !DILocation(line: 448, column: 44, scope: !17251)
!17256 = !DILocation(line: 448, column: 47, scope: !17251)
!17257 = !DILocation(line: 448, column: 71, scope: !17251)
!17258 = !DILocation(line: 448, column: 25, scope: !17230)
!17259 = !DILocation(line: 450, column: 30, scope: !17260)
!17260 = distinct !DILexicalBlock(scope: !17251, file: !1232, line: 449, column: 23)
!17261 = !DILocation(line: 450, column: 28, scope: !17260)
!17262 = !DILocation(line: 451, column: 25, scope: !17260)
!17263 = !DILocation(line: 451, column: 31, scope: !17260)
!17264 = !DILocation(line: 451, column: 39, scope: !17260)
!17265 = !DILocation(line: 452, column: 23, scope: !17260)
!17266 = !DILocation(line: 453, column: 25, scope: !17267)
!17267 = distinct !DILexicalBlock(scope: !17230, file: !1232, line: 453, column: 25)
!17268 = !DILocation(line: 453, column: 30, scope: !17267)
!17269 = !DILocation(line: 453, column: 33, scope: !17267)
!17270 = !DILocation(line: 453, column: 39, scope: !17267)
!17271 = !DILocation(line: 453, column: 44, scope: !17267)
!17272 = !DILocation(line: 453, column: 47, scope: !17267)
!17273 = !DILocation(line: 453, column: 71, scope: !17267)
!17274 = !DILocation(line: 453, column: 25, scope: !17230)
!17275 = !DILocation(line: 455, column: 30, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17267, file: !1232, line: 454, column: 23)
!17277 = !DILocation(line: 455, column: 28, scope: !17276)
!17278 = !DILocation(line: 456, column: 25, scope: !17276)
!17279 = !DILocation(line: 456, column: 31, scope: !17276)
!17280 = !DILocation(line: 456, column: 39, scope: !17276)
!17281 = !DILocation(line: 457, column: 23, scope: !17276)
!17282 = !DILocation(line: 458, column: 25, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17230, file: !1232, line: 458, column: 25)
!17284 = !DILocation(line: 458, column: 25, scope: !17230)
!17285 = !DILocation(line: 459, column: 23, scope: !17283)
!17286 = !DILocation(line: 460, column: 19, scope: !17230)
!17287 = !DILocation(line: 461, column: 15, scope: !17210)
!17288 = !DILocation(line: 464, column: 13, scope: !17207)
!17289 = !DILocation(line: 470, column: 10, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17154, file: !1232, line: 470, column: 9)
!17291 = !DILocation(line: 470, column: 9, scope: !17154)
!17292 = !DILocation(line: 476, column: 9, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17290, file: !1232, line: 471, column: 7)
!17294 = !DILocation(line: 482, column: 20, scope: !17154)
!17295 = !DILocation(line: 482, column: 26, scope: !17154)
!17296 = !DILocation(line: 482, column: 12, scope: !17154)
!17297 = !DILocation(line: 482, column: 5, scope: !17154)
!17298 = !DILocation(line: 500, column: 1, scope: !16992)
!17299 = distinct !DISubprogram(name: "validate_timespec", scope: !1232, file: !1232, line: 87, type: !1205, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1182, retainedNodes: !143)
!17300 = !DILocalVariable(name: "timespec", arg: 1, scope: !17299, file: !1232, line: 87, type: !1194)
!17301 = !DILocation(line: 87, column: 36, scope: !17299)
!17302 = !DILocalVariable(name: "result", scope: !17299, file: !1232, line: 89, type: !7)
!17303 = !DILocation(line: 89, column: 7, scope: !17299)
!17304 = !DILocalVariable(name: "utime_omit_count", scope: !17299, file: !1232, line: 90, type: !7)
!17305 = !DILocation(line: 90, column: 7, scope: !17299)
!17306 = !DILocation(line: 91, column: 8, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17299, file: !1232, line: 91, column: 7)
!17308 = !DILocation(line: 91, column: 20, scope: !17307)
!17309 = !DILocation(line: 91, column: 28, scope: !17307)
!17310 = !DILocation(line: 92, column: 8, scope: !17307)
!17311 = !DILocation(line: 92, column: 11, scope: !17307)
!17312 = !DILocation(line: 92, column: 23, scope: !17307)
!17313 = !DILocation(line: 92, column: 31, scope: !17307)
!17314 = !DILocation(line: 93, column: 8, scope: !17307)
!17315 = !DILocation(line: 93, column: 19, scope: !17307)
!17316 = !DILocation(line: 93, column: 31, scope: !17307)
!17317 = !DILocation(line: 93, column: 16, scope: !17307)
!17318 = !DILocation(line: 94, column: 14, scope: !17307)
!17319 = !DILocation(line: 94, column: 17, scope: !17307)
!17320 = !DILocation(line: 94, column: 29, scope: !17307)
!17321 = !DILocation(line: 94, column: 37, scope: !17307)
!17322 = !DILocation(line: 95, column: 7, scope: !17307)
!17323 = !DILocation(line: 95, column: 11, scope: !17307)
!17324 = !DILocation(line: 95, column: 23, scope: !17307)
!17325 = !DILocation(line: 95, column: 31, scope: !17307)
!17326 = !DILocation(line: 96, column: 11, scope: !17307)
!17327 = !DILocation(line: 96, column: 14, scope: !17307)
!17328 = !DILocation(line: 96, column: 26, scope: !17307)
!17329 = !DILocation(line: 96, column: 34, scope: !17307)
!17330 = !DILocation(line: 97, column: 11, scope: !17307)
!17331 = !DILocation(line: 97, column: 22, scope: !17307)
!17332 = !DILocation(line: 97, column: 34, scope: !17307)
!17333 = !DILocation(line: 97, column: 19, scope: !17307)
!17334 = !DILocation(line: 98, column: 17, scope: !17307)
!17335 = !DILocation(line: 98, column: 20, scope: !17307)
!17336 = !DILocation(line: 98, column: 32, scope: !17307)
!17337 = !DILocation(line: 98, column: 40, scope: !17307)
!17338 = !DILocation(line: 91, column: 7, scope: !17299)
!17339 = !DILocation(line: 100, column: 7, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17307, file: !1232, line: 99, column: 5)
!17341 = !DILocation(line: 100, column: 13, scope: !17340)
!17342 = !DILocation(line: 101, column: 7, scope: !17340)
!17343 = !DILocation(line: 107, column: 7, scope: !17344)
!17344 = distinct !DILexicalBlock(scope: !17299, file: !1232, line: 107, column: 7)
!17345 = !DILocation(line: 107, column: 19, scope: !17344)
!17346 = !DILocation(line: 107, column: 27, scope: !17344)
!17347 = !DILocation(line: 108, column: 7, scope: !17344)
!17348 = !DILocation(line: 108, column: 10, scope: !17344)
!17349 = !DILocation(line: 108, column: 22, scope: !17344)
!17350 = !DILocation(line: 108, column: 30, scope: !17344)
!17351 = !DILocation(line: 107, column: 7, scope: !17299)
!17352 = !DILocation(line: 110, column: 7, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17344, file: !1232, line: 109, column: 5)
!17354 = !DILocation(line: 110, column: 19, scope: !17353)
!17355 = !DILocation(line: 110, column: 26, scope: !17353)
!17356 = !DILocation(line: 111, column: 14, scope: !17353)
!17357 = !DILocation(line: 112, column: 11, scope: !17358)
!17358 = distinct !DILexicalBlock(scope: !17353, file: !1232, line: 112, column: 11)
!17359 = !DILocation(line: 112, column: 23, scope: !17358)
!17360 = !DILocation(line: 112, column: 31, scope: !17358)
!17361 = !DILocation(line: 112, column: 11, scope: !17353)
!17362 = !DILocation(line: 113, column: 25, scope: !17358)
!17363 = !DILocation(line: 113, column: 9, scope: !17358)
!17364 = !DILocation(line: 114, column: 5, scope: !17353)
!17365 = !DILocation(line: 115, column: 7, scope: !17366)
!17366 = distinct !DILexicalBlock(scope: !17299, file: !1232, line: 115, column: 7)
!17367 = !DILocation(line: 115, column: 19, scope: !17366)
!17368 = !DILocation(line: 115, column: 27, scope: !17366)
!17369 = !DILocation(line: 116, column: 7, scope: !17366)
!17370 = !DILocation(line: 116, column: 10, scope: !17366)
!17371 = !DILocation(line: 116, column: 22, scope: !17366)
!17372 = !DILocation(line: 116, column: 30, scope: !17366)
!17373 = !DILocation(line: 115, column: 7, scope: !17299)
!17374 = !DILocation(line: 118, column: 7, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17366, file: !1232, line: 117, column: 5)
!17376 = !DILocation(line: 118, column: 19, scope: !17375)
!17377 = !DILocation(line: 118, column: 26, scope: !17375)
!17378 = !DILocation(line: 119, column: 14, scope: !17375)
!17379 = !DILocation(line: 120, column: 11, scope: !17380)
!17380 = distinct !DILexicalBlock(scope: !17375, file: !1232, line: 120, column: 11)
!17381 = !DILocation(line: 120, column: 23, scope: !17380)
!17382 = !DILocation(line: 120, column: 31, scope: !17380)
!17383 = !DILocation(line: 120, column: 11, scope: !17375)
!17384 = !DILocation(line: 121, column: 25, scope: !17380)
!17385 = !DILocation(line: 121, column: 9, scope: !17380)
!17386 = !DILocation(line: 122, column: 5, scope: !17375)
!17387 = !DILocation(line: 123, column: 10, scope: !17299)
!17388 = !DILocation(line: 123, column: 20, scope: !17299)
!17389 = !DILocation(line: 123, column: 37, scope: !17299)
!17390 = !DILocation(line: 123, column: 17, scope: !17299)
!17391 = !DILocation(line: 123, column: 3, scope: !17299)
!17392 = !DILocation(line: 124, column: 1, scope: !17299)
!17393 = distinct !DISubprogram(name: "update_timespec", scope: !1232, file: !1232, line: 133, type: !1207, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1182, retainedNodes: !143)
!17394 = !DILocalVariable(name: "statbuf", arg: 1, scope: !17393, file: !1232, line: 133, type: !1209)
!17395 = !DILocation(line: 133, column: 37, scope: !17393)
!17396 = !DILocalVariable(name: "ts", arg: 2, scope: !17393, file: !1232, line: 133, type: !1228)
!17397 = !DILocation(line: 133, column: 63, scope: !17393)
!17398 = !DILocalVariable(name: "timespec", scope: !17393, file: !1232, line: 135, type: !1194)
!17399 = !DILocation(line: 135, column: 20, scope: !17393)
!17400 = !DILocation(line: 135, column: 32, scope: !17393)
!17401 = !DILocation(line: 135, column: 31, scope: !17393)
!17402 = !DILocation(line: 136, column: 7, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17393, file: !1232, line: 136, column: 7)
!17404 = !DILocation(line: 136, column: 19, scope: !17403)
!17405 = !DILocation(line: 136, column: 27, scope: !17403)
!17406 = !DILocation(line: 137, column: 7, scope: !17403)
!17407 = !DILocation(line: 137, column: 10, scope: !17403)
!17408 = !DILocation(line: 137, column: 22, scope: !17403)
!17409 = !DILocation(line: 137, column: 30, scope: !17403)
!17410 = !DILocation(line: 136, column: 7, scope: !17393)
!17411 = !DILocation(line: 138, column: 5, scope: !17403)
!17412 = !DILocation(line: 139, column: 7, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17393, file: !1232, line: 139, column: 7)
!17414 = !DILocation(line: 139, column: 19, scope: !17413)
!17415 = !DILocation(line: 139, column: 27, scope: !17413)
!17416 = !DILocation(line: 140, column: 7, scope: !17413)
!17417 = !DILocation(line: 140, column: 10, scope: !17413)
!17418 = !DILocation(line: 140, column: 22, scope: !17413)
!17419 = !DILocation(line: 140, column: 30, scope: !17413)
!17420 = !DILocation(line: 139, column: 7, scope: !17393)
!17421 = !DILocation(line: 142, column: 8, scope: !17422)
!17422 = distinct !DILexicalBlock(scope: !17413, file: !1232, line: 141, column: 5)
!17423 = !DILocation(line: 142, column: 11, scope: !17422)
!17424 = !DILocation(line: 143, column: 7, scope: !17422)
!17425 = !DILocation(line: 146, column: 7, scope: !17426)
!17426 = distinct !DILexicalBlock(scope: !17393, file: !1232, line: 146, column: 7)
!17427 = !DILocation(line: 146, column: 19, scope: !17426)
!17428 = !DILocation(line: 146, column: 27, scope: !17426)
!17429 = !DILocation(line: 146, column: 7, scope: !17393)
!17430 = !DILocation(line: 147, column: 5, scope: !17426)
!17431 = !DILocation(line: 147, column: 35, scope: !17426)
!17432 = !DILocation(line: 147, column: 19, scope: !17426)
!17433 = !DILocation(line: 148, column: 12, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17426, file: !1232, line: 148, column: 12)
!17435 = !DILocation(line: 148, column: 24, scope: !17434)
!17436 = !DILocation(line: 148, column: 32, scope: !17434)
!17437 = !DILocation(line: 148, column: 12, scope: !17426)
!17438 = !DILocation(line: 149, column: 15, scope: !17434)
!17439 = !DILocation(line: 149, column: 5, scope: !17434)
!17440 = !DILocation(line: 151, column: 7, scope: !17441)
!17441 = distinct !DILexicalBlock(scope: !17393, file: !1232, line: 151, column: 7)
!17442 = !DILocation(line: 151, column: 19, scope: !17441)
!17443 = !DILocation(line: 151, column: 27, scope: !17441)
!17444 = !DILocation(line: 151, column: 7, scope: !17393)
!17445 = !DILocation(line: 152, column: 5, scope: !17441)
!17446 = !DILocation(line: 152, column: 35, scope: !17441)
!17447 = !DILocation(line: 152, column: 19, scope: !17441)
!17448 = !DILocation(line: 153, column: 12, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17441, file: !1232, line: 153, column: 12)
!17450 = !DILocation(line: 153, column: 24, scope: !17449)
!17451 = !DILocation(line: 153, column: 32, scope: !17449)
!17452 = !DILocation(line: 153, column: 12, scope: !17441)
!17453 = !DILocation(line: 154, column: 15, scope: !17449)
!17454 = !DILocation(line: 154, column: 5, scope: !17449)
!17455 = !DILocation(line: 156, column: 3, scope: !17393)
!17456 = !DILocation(line: 157, column: 1, scope: !17393)
!17457 = distinct !DISubprogram(name: "utimens", scope: !1232, file: !1232, line: 505, type: !1203, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1182, retainedNodes: !143)
!17458 = !DILocalVariable(name: "file", arg: 1, scope: !17457, file: !1232, line: 505, type: !115)
!17459 = !DILocation(line: 505, column: 22, scope: !17457)
!17460 = !DILocalVariable(name: "timespec", arg: 2, scope: !17457, file: !1232, line: 505, type: !1187)
!17461 = !DILocation(line: 505, column: 50, scope: !17457)
!17462 = !DILocation(line: 507, column: 25, scope: !17457)
!17463 = !DILocation(line: 507, column: 31, scope: !17457)
!17464 = !DILocation(line: 507, column: 10, scope: !17457)
!17465 = !DILocation(line: 507, column: 3, scope: !17457)
!17466 = distinct !DISubprogram(name: "lutimens", scope: !1232, file: !1232, line: 515, type: !1203, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1182, retainedNodes: !143)
!17467 = !DILocalVariable(name: "file", arg: 1, scope: !17466, file: !1232, line: 515, type: !115)
!17468 = !DILocation(line: 515, column: 23, scope: !17466)
!17469 = !DILocalVariable(name: "timespec", arg: 2, scope: !17466, file: !1232, line: 515, type: !1187)
!17470 = !DILocation(line: 515, column: 51, scope: !17466)
!17471 = !DILocalVariable(name: "adjusted_timespec", scope: !17466, file: !1232, line: 517, type: !1193)
!17472 = !DILocation(line: 517, column: 19, scope: !17466)
!17473 = !DILocalVariable(name: "ts", scope: !17466, file: !1232, line: 518, type: !1194)
!17474 = !DILocation(line: 518, column: 20, scope: !17466)
!17475 = !DILocation(line: 518, column: 25, scope: !17466)
!17476 = !DILocation(line: 518, column: 36, scope: !17466)
!17477 = !DILocalVariable(name: "adjustment_needed", scope: !17466, file: !1232, line: 519, type: !7)
!17478 = !DILocation(line: 519, column: 7, scope: !17466)
!17479 = !DILocalVariable(name: "st", scope: !17466, file: !1232, line: 520, type: !1211)
!17480 = !DILocation(line: 520, column: 15, scope: !17466)
!17481 = !DILocation(line: 522, column: 7, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17466, file: !1232, line: 522, column: 7)
!17483 = !DILocation(line: 522, column: 7, scope: !17466)
!17484 = !DILocation(line: 524, column: 7, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17482, file: !1232, line: 523, column: 5)
!17486 = !DILocation(line: 524, column: 30, scope: !17485)
!17487 = !DILocation(line: 525, column: 7, scope: !17485)
!17488 = !DILocation(line: 525, column: 30, scope: !17485)
!17489 = !DILocation(line: 526, column: 46, scope: !17485)
!17490 = !DILocation(line: 526, column: 27, scope: !17485)
!17491 = !DILocation(line: 526, column: 25, scope: !17485)
!17492 = !DILocation(line: 527, column: 5, scope: !17485)
!17493 = !DILocation(line: 528, column: 7, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17466, file: !1232, line: 528, column: 7)
!17495 = !DILocation(line: 528, column: 25, scope: !17494)
!17496 = !DILocation(line: 528, column: 7, scope: !17466)
!17497 = !DILocation(line: 529, column: 5, scope: !17494)
!17498 = !DILocation(line: 537, column: 12, scope: !17499)
!17499 = distinct !DILexicalBlock(scope: !17466, file: !1232, line: 537, column: 7)
!17500 = !DILocation(line: 537, column: 9, scope: !17499)
!17501 = !DILocation(line: 537, column: 7, scope: !17466)
!17502 = !DILocalVariable(name: "result", scope: !17503, file: !1232, line: 539, type: !7)
!17503 = distinct !DILexicalBlock(scope: !17499, file: !1232, line: 538, column: 5)
!17504 = !DILocation(line: 539, column: 11, scope: !17503)
!17505 = !DILocation(line: 553, column: 11, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17503, file: !1232, line: 553, column: 11)
!17507 = !DILocation(line: 553, column: 29, scope: !17506)
!17508 = !DILocation(line: 553, column: 11, scope: !17503)
!17509 = !DILocation(line: 555, column: 22, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17511, file: !1232, line: 555, column: 15)
!17511 = distinct !DILexicalBlock(scope: !17506, file: !1232, line: 554, column: 9)
!17512 = !DILocation(line: 555, column: 15, scope: !17510)
!17513 = !DILocation(line: 555, column: 15, scope: !17511)
!17514 = !DILocation(line: 556, column: 13, scope: !17510)
!17515 = !DILocation(line: 557, column: 15, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17511, file: !1232, line: 557, column: 15)
!17517 = !DILocation(line: 557, column: 21, scope: !17516)
!17518 = !DILocation(line: 557, column: 29, scope: !17516)
!17519 = !DILocation(line: 557, column: 15, scope: !17511)
!17520 = !DILocation(line: 558, column: 13, scope: !17516)
!17521 = !DILocation(line: 558, column: 21, scope: !17516)
!17522 = !DILocation(line: 559, column: 20, scope: !17523)
!17523 = distinct !DILexicalBlock(scope: !17516, file: !1232, line: 559, column: 20)
!17524 = !DILocation(line: 559, column: 26, scope: !17523)
!17525 = !DILocation(line: 559, column: 34, scope: !17523)
!17526 = !DILocation(line: 559, column: 20, scope: !17516)
!17527 = !DILocation(line: 560, column: 13, scope: !17523)
!17528 = !DILocation(line: 560, column: 21, scope: !17523)
!17529 = !DILocation(line: 562, column: 28, scope: !17511)
!17530 = !DILocation(line: 563, column: 9, scope: !17511)
!17531 = !DILocation(line: 565, column: 37, scope: !17503)
!17532 = !DILocation(line: 565, column: 43, scope: !17503)
!17533 = !DILocation(line: 565, column: 16, scope: !17503)
!17534 = !DILocation(line: 565, column: 14, scope: !17503)
!17535 = !DILocation(line: 574, column: 15, scope: !17536)
!17536 = distinct !DILexicalBlock(scope: !17503, file: !1232, line: 574, column: 11)
!17537 = !DILocation(line: 574, column: 13, scope: !17536)
!17538 = !DILocation(line: 574, column: 11, scope: !17503)
!17539 = !DILocation(line: 575, column: 9, scope: !17536)
!17540 = !DILocation(line: 575, column: 15, scope: !17536)
!17541 = !DILocation(line: 577, column: 11, scope: !17542)
!17542 = distinct !DILexicalBlock(scope: !17503, file: !1232, line: 577, column: 11)
!17543 = !DILocation(line: 577, column: 18, scope: !17542)
!17544 = !DILocation(line: 577, column: 23, scope: !17542)
!17545 = !DILocation(line: 577, column: 26, scope: !17542)
!17546 = !DILocation(line: 577, column: 32, scope: !17542)
!17547 = !DILocation(line: 577, column: 11, scope: !17503)
!17548 = !DILocation(line: 579, column: 34, scope: !17549)
!17549 = distinct !DILexicalBlock(scope: !17542, file: !1232, line: 578, column: 9)
!17550 = !DILocation(line: 580, column: 35, scope: !17549)
!17551 = !DILocation(line: 581, column: 18, scope: !17549)
!17552 = !DILocation(line: 581, column: 11, scope: !17549)
!17553 = !DILocation(line: 583, column: 5, scope: !17503)
!17554 = !DILocation(line: 584, column: 27, scope: !17466)
!17555 = !DILocation(line: 591, column: 7, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17466, file: !1232, line: 591, column: 7)
!17557 = !DILocation(line: 591, column: 7, scope: !17466)
!17558 = !DILocation(line: 593, column: 11, scope: !17559)
!17559 = distinct !DILexicalBlock(scope: !17560, file: !1232, line: 593, column: 11)
!17560 = distinct !DILexicalBlock(scope: !17556, file: !1232, line: 592, column: 5)
!17561 = !DILocation(line: 593, column: 29, scope: !17559)
!17562 = !DILocation(line: 593, column: 34, scope: !17559)
!17563 = !DILocation(line: 593, column: 44, scope: !17559)
!17564 = !DILocation(line: 593, column: 37, scope: !17559)
!17565 = !DILocation(line: 593, column: 11, scope: !17560)
!17566 = !DILocation(line: 594, column: 9, scope: !17559)
!17567 = !DILocation(line: 595, column: 11, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17560, file: !1232, line: 595, column: 11)
!17569 = !DILocation(line: 595, column: 14, scope: !17568)
!17570 = !DILocation(line: 595, column: 17, scope: !17568)
!17571 = !DILocation(line: 595, column: 11, scope: !17560)
!17572 = !DILocation(line: 596, column: 9, scope: !17568)
!17573 = !DILocation(line: 597, column: 5, scope: !17560)
!17574 = !DILocation(line: 624, column: 9, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17466, file: !1232, line: 624, column: 7)
!17576 = !DILocation(line: 624, column: 54, scope: !17575)
!17577 = !DILocation(line: 624, column: 64, scope: !17575)
!17578 = !DILocation(line: 624, column: 57, scope: !17575)
!17579 = !DILocation(line: 624, column: 7, scope: !17466)
!17580 = !DILocation(line: 625, column: 5, scope: !17575)
!17581 = !DILocation(line: 626, column: 8, scope: !17582)
!17582 = distinct !DILexicalBlock(scope: !17466, file: !1232, line: 626, column: 7)
!17583 = !DILocation(line: 626, column: 7, scope: !17466)
!17584 = !DILocation(line: 627, column: 27, scope: !17582)
!17585 = !DILocation(line: 627, column: 33, scope: !17582)
!17586 = !DILocation(line: 627, column: 12, scope: !17582)
!17587 = !DILocation(line: 627, column: 5, scope: !17582)
!17588 = !DILocation(line: 628, column: 3, scope: !17466)
!17589 = !DILocation(line: 628, column: 9, scope: !17466)
!17590 = !DILocation(line: 629, column: 3, scope: !17466)
!17591 = !DILocation(line: 630, column: 1, scope: !17466)
!17592 = distinct !DISubprogram(name: "verror", scope: !17593, file: !17593, line: 43, type: !1947, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1944, retainedNodes: !143)
!17593 = !DIFile(filename: "lib/verror.c", directory: "/home/mbarbar/clone/coreutils")
!17594 = !DILocalVariable(name: "status", arg: 1, scope: !17592, file: !17593, line: 43, type: !7)
!17595 = !DILocation(line: 43, column: 13, scope: !17592)
!17596 = !DILocalVariable(name: "errnum", arg: 2, scope: !17592, file: !17593, line: 43, type: !7)
!17597 = !DILocation(line: 43, column: 25, scope: !17592)
!17598 = !DILocalVariable(name: "format", arg: 3, scope: !17592, file: !17593, line: 43, type: !115)
!17599 = !DILocation(line: 43, column: 45, scope: !17592)
!17600 = !DILocalVariable(name: "args", arg: 4, scope: !17592, file: !17593, line: 43, type: !1949)
!17601 = !DILocation(line: 43, column: 61, scope: !17592)
!17602 = !DILocation(line: 45, column: 19, scope: !17592)
!17603 = !DILocation(line: 45, column: 27, scope: !17592)
!17604 = !DILocation(line: 45, column: 44, scope: !17592)
!17605 = !DILocation(line: 45, column: 52, scope: !17592)
!17606 = !DILocation(line: 45, column: 3, scope: !17592)
!17607 = !DILocation(line: 46, column: 1, scope: !17592)
!17608 = distinct !DISubprogram(name: "verror_at_line", scope: !17593, file: !17593, line: 55, type: !1956, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1944, retainedNodes: !143)
!17609 = !DILocalVariable(name: "status", arg: 1, scope: !17608, file: !17593, line: 55, type: !7)
!17610 = !DILocation(line: 55, column: 21, scope: !17608)
!17611 = !DILocalVariable(name: "errnum", arg: 2, scope: !17608, file: !17593, line: 55, type: !7)
!17612 = !DILocation(line: 55, column: 33, scope: !17608)
!17613 = !DILocalVariable(name: "file", arg: 3, scope: !17608, file: !17593, line: 55, type: !115)
!17614 = !DILocation(line: 55, column: 53, scope: !17608)
!17615 = !DILocalVariable(name: "line_number", arg: 4, scope: !17608, file: !17593, line: 56, type: !70)
!17616 = !DILocation(line: 56, column: 30, scope: !17608)
!17617 = !DILocalVariable(name: "format", arg: 5, scope: !17608, file: !17593, line: 56, type: !115)
!17618 = !DILocation(line: 56, column: 55, scope: !17608)
!17619 = !DILocalVariable(name: "args", arg: 6, scope: !17608, file: !17593, line: 56, type: !1949)
!17620 = !DILocation(line: 56, column: 71, scope: !17608)
!17621 = !DILocalVariable(name: "message", scope: !17608, file: !17593, line: 58, type: !9)
!17622 = !DILocation(line: 58, column: 9, scope: !17608)
!17623 = !DILocation(line: 58, column: 31, scope: !17608)
!17624 = !DILocation(line: 58, column: 39, scope: !17608)
!17625 = !DILocation(line: 58, column: 19, scope: !17608)
!17626 = !DILocation(line: 59, column: 7, scope: !17627)
!17627 = distinct !DILexicalBlock(scope: !17608, file: !17593, line: 59, column: 7)
!17628 = !DILocation(line: 59, column: 7, scope: !17608)
!17629 = !DILocation(line: 64, column: 11, scope: !17630)
!17630 = distinct !DILexicalBlock(scope: !17631, file: !17593, line: 64, column: 11)
!17631 = distinct !DILexicalBlock(scope: !17627, file: !17593, line: 60, column: 5)
!17632 = !DILocation(line: 64, column: 11, scope: !17631)
!17633 = !DILocation(line: 65, column: 24, scope: !17630)
!17634 = !DILocation(line: 65, column: 32, scope: !17630)
!17635 = !DILocation(line: 65, column: 40, scope: !17630)
!17636 = !DILocation(line: 65, column: 46, scope: !17630)
!17637 = !DILocation(line: 65, column: 65, scope: !17630)
!17638 = !DILocation(line: 65, column: 9, scope: !17630)
!17639 = !DILocation(line: 67, column: 16, scope: !17630)
!17640 = !DILocation(line: 67, column: 24, scope: !17630)
!17641 = !DILocation(line: 67, column: 38, scope: !17630)
!17642 = !DILocation(line: 67, column: 9, scope: !17630)
!17643 = !DILocation(line: 68, column: 5, scope: !17631)
!17644 = !DILocation(line: 73, column: 17, scope: !17645)
!17645 = distinct !DILexicalBlock(scope: !17627, file: !17593, line: 70, column: 5)
!17646 = !DILocation(line: 73, column: 24, scope: !17645)
!17647 = !DILocation(line: 73, column: 7, scope: !17645)
!17648 = !DILocation(line: 74, column: 7, scope: !17645)
!17649 = !DILocation(line: 76, column: 9, scope: !17608)
!17650 = !DILocation(line: 76, column: 3, scope: !17608)
!17651 = !DILocation(line: 77, column: 1, scope: !17608)
!17652 = distinct !DISubprogram(name: "version_etc_arn", scope: !17653, file: !17653, line: 61, type: !1961, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1958, retainedNodes: !143)
!17653 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/clone/coreutils")
!17654 = !DILocalVariable(name: "stream", arg: 1, scope: !17652, file: !17653, line: 61, type: !1963)
!17655 = !DILocation(line: 61, column: 24, scope: !17652)
!17656 = !DILocalVariable(name: "command_name", arg: 2, scope: !17652, file: !17653, line: 62, type: !115)
!17657 = !DILocation(line: 62, column: 30, scope: !17652)
!17658 = !DILocalVariable(name: "package", arg: 3, scope: !17652, file: !17653, line: 62, type: !115)
!17659 = !DILocation(line: 62, column: 56, scope: !17652)
!17660 = !DILocalVariable(name: "version", arg: 4, scope: !17652, file: !17653, line: 63, type: !115)
!17661 = !DILocation(line: 63, column: 30, scope: !17652)
!17662 = !DILocalVariable(name: "authors", arg: 5, scope: !17652, file: !17653, line: 64, type: !1262)
!17663 = !DILocation(line: 64, column: 39, scope: !17652)
!17664 = !DILocalVariable(name: "n_authors", arg: 6, scope: !17652, file: !17653, line: 64, type: !55)
!17665 = !DILocation(line: 64, column: 55, scope: !17652)
!17666 = !DILocation(line: 66, column: 7, scope: !17667)
!17667 = distinct !DILexicalBlock(scope: !17652, file: !17653, line: 66, column: 7)
!17668 = !DILocation(line: 66, column: 7, scope: !17652)
!17669 = !DILocation(line: 67, column: 14, scope: !17667)
!17670 = !DILocation(line: 67, column: 38, scope: !17667)
!17671 = !DILocation(line: 67, column: 52, scope: !17667)
!17672 = !DILocation(line: 67, column: 61, scope: !17667)
!17673 = !DILocation(line: 67, column: 5, scope: !17667)
!17674 = !DILocation(line: 69, column: 14, scope: !17667)
!17675 = !DILocation(line: 69, column: 33, scope: !17667)
!17676 = !DILocation(line: 69, column: 42, scope: !17667)
!17677 = !DILocation(line: 69, column: 5, scope: !17667)
!17678 = !DILocation(line: 83, column: 12, scope: !17652)
!17679 = !DILocation(line: 83, column: 43, scope: !17652)
!17680 = !DILocation(line: 83, column: 3, scope: !17652)
!17681 = !DILocation(line: 85, column: 3, scope: !17652)
!17682 = !DILocation(line: 88, column: 12, scope: !17652)
!17683 = !DILocation(line: 88, column: 20, scope: !17652)
!17684 = !DILocation(line: 88, column: 3, scope: !17652)
!17685 = !DILocation(line: 95, column: 3, scope: !17652)
!17686 = !DILocation(line: 97, column: 11, scope: !17652)
!17687 = !DILocation(line: 97, column: 3, scope: !17652)
!17688 = !DILocation(line: 102, column: 7, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17652, file: !17653, line: 98, column: 5)
!17690 = !DILocation(line: 105, column: 16, scope: !17689)
!17691 = !DILocation(line: 105, column: 24, scope: !17689)
!17692 = !DILocation(line: 105, column: 47, scope: !17689)
!17693 = !DILocation(line: 105, column: 7, scope: !17689)
!17694 = !DILocation(line: 106, column: 7, scope: !17689)
!17695 = !DILocation(line: 109, column: 16, scope: !17689)
!17696 = !DILocation(line: 109, column: 24, scope: !17689)
!17697 = !DILocation(line: 109, column: 54, scope: !17689)
!17698 = !DILocation(line: 109, column: 66, scope: !17689)
!17699 = !DILocation(line: 109, column: 7, scope: !17689)
!17700 = !DILocation(line: 110, column: 7, scope: !17689)
!17701 = !DILocation(line: 113, column: 16, scope: !17689)
!17702 = !DILocation(line: 113, column: 24, scope: !17689)
!17703 = !DILocation(line: 114, column: 16, scope: !17689)
!17704 = !DILocation(line: 114, column: 28, scope: !17689)
!17705 = !DILocation(line: 114, column: 40, scope: !17689)
!17706 = !DILocation(line: 113, column: 7, scope: !17689)
!17707 = !DILocation(line: 115, column: 7, scope: !17689)
!17708 = !DILocation(line: 120, column: 16, scope: !17689)
!17709 = !DILocation(line: 120, column: 24, scope: !17689)
!17710 = !DILocation(line: 121, column: 16, scope: !17689)
!17711 = !DILocation(line: 121, column: 28, scope: !17689)
!17712 = !DILocation(line: 121, column: 40, scope: !17689)
!17713 = !DILocation(line: 121, column: 52, scope: !17689)
!17714 = !DILocation(line: 120, column: 7, scope: !17689)
!17715 = !DILocation(line: 122, column: 7, scope: !17689)
!17716 = !DILocation(line: 127, column: 16, scope: !17689)
!17717 = !DILocation(line: 127, column: 24, scope: !17689)
!17718 = !DILocation(line: 128, column: 16, scope: !17689)
!17719 = !DILocation(line: 128, column: 28, scope: !17689)
!17720 = !DILocation(line: 128, column: 40, scope: !17689)
!17721 = !DILocation(line: 128, column: 52, scope: !17689)
!17722 = !DILocation(line: 128, column: 64, scope: !17689)
!17723 = !DILocation(line: 127, column: 7, scope: !17689)
!17724 = !DILocation(line: 129, column: 7, scope: !17689)
!17725 = !DILocation(line: 134, column: 16, scope: !17689)
!17726 = !DILocation(line: 134, column: 24, scope: !17689)
!17727 = !DILocation(line: 135, column: 16, scope: !17689)
!17728 = !DILocation(line: 135, column: 28, scope: !17689)
!17729 = !DILocation(line: 135, column: 40, scope: !17689)
!17730 = !DILocation(line: 135, column: 52, scope: !17689)
!17731 = !DILocation(line: 135, column: 64, scope: !17689)
!17732 = !DILocation(line: 136, column: 16, scope: !17689)
!17733 = !DILocation(line: 134, column: 7, scope: !17689)
!17734 = !DILocation(line: 137, column: 7, scope: !17689)
!17735 = !DILocation(line: 142, column: 16, scope: !17689)
!17736 = !DILocation(line: 142, column: 24, scope: !17689)
!17737 = !DILocation(line: 143, column: 16, scope: !17689)
!17738 = !DILocation(line: 143, column: 28, scope: !17689)
!17739 = !DILocation(line: 143, column: 40, scope: !17689)
!17740 = !DILocation(line: 143, column: 52, scope: !17689)
!17741 = !DILocation(line: 143, column: 64, scope: !17689)
!17742 = !DILocation(line: 144, column: 16, scope: !17689)
!17743 = !DILocation(line: 144, column: 28, scope: !17689)
!17744 = !DILocation(line: 142, column: 7, scope: !17689)
!17745 = !DILocation(line: 145, column: 7, scope: !17689)
!17746 = !DILocation(line: 150, column: 16, scope: !17689)
!17747 = !DILocation(line: 150, column: 24, scope: !17689)
!17748 = !DILocation(line: 152, column: 17, scope: !17689)
!17749 = !DILocation(line: 152, column: 29, scope: !17689)
!17750 = !DILocation(line: 152, column: 41, scope: !17689)
!17751 = !DILocation(line: 152, column: 53, scope: !17689)
!17752 = !DILocation(line: 152, column: 65, scope: !17689)
!17753 = !DILocation(line: 153, column: 17, scope: !17689)
!17754 = !DILocation(line: 153, column: 29, scope: !17689)
!17755 = !DILocation(line: 153, column: 41, scope: !17689)
!17756 = !DILocation(line: 150, column: 7, scope: !17689)
!17757 = !DILocation(line: 154, column: 7, scope: !17689)
!17758 = !DILocation(line: 159, column: 16, scope: !17689)
!17759 = !DILocation(line: 159, column: 24, scope: !17689)
!17760 = !DILocation(line: 161, column: 16, scope: !17689)
!17761 = !DILocation(line: 161, column: 28, scope: !17689)
!17762 = !DILocation(line: 161, column: 40, scope: !17689)
!17763 = !DILocation(line: 161, column: 52, scope: !17689)
!17764 = !DILocation(line: 161, column: 64, scope: !17689)
!17765 = !DILocation(line: 162, column: 16, scope: !17689)
!17766 = !DILocation(line: 162, column: 28, scope: !17689)
!17767 = !DILocation(line: 162, column: 40, scope: !17689)
!17768 = !DILocation(line: 162, column: 52, scope: !17689)
!17769 = !DILocation(line: 159, column: 7, scope: !17689)
!17770 = !DILocation(line: 163, column: 7, scope: !17689)
!17771 = !DILocation(line: 170, column: 16, scope: !17689)
!17772 = !DILocation(line: 170, column: 24, scope: !17689)
!17773 = !DILocation(line: 172, column: 17, scope: !17689)
!17774 = !DILocation(line: 172, column: 29, scope: !17689)
!17775 = !DILocation(line: 172, column: 41, scope: !17689)
!17776 = !DILocation(line: 172, column: 53, scope: !17689)
!17777 = !DILocation(line: 172, column: 65, scope: !17689)
!17778 = !DILocation(line: 173, column: 17, scope: !17689)
!17779 = !DILocation(line: 173, column: 29, scope: !17689)
!17780 = !DILocation(line: 173, column: 41, scope: !17689)
!17781 = !DILocation(line: 173, column: 53, scope: !17689)
!17782 = !DILocation(line: 170, column: 7, scope: !17689)
!17783 = !DILocation(line: 174, column: 7, scope: !17689)
!17784 = !DILocation(line: 176, column: 1, scope: !17652)
!17785 = distinct !DISubprogram(name: "version_etc_ar", scope: !17653, file: !17653, line: 183, type: !1998, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1958, retainedNodes: !143)
!17786 = !DILocalVariable(name: "stream", arg: 1, scope: !17785, file: !17653, line: 183, type: !1963)
!17787 = !DILocation(line: 183, column: 23, scope: !17785)
!17788 = !DILocalVariable(name: "command_name", arg: 2, scope: !17785, file: !17653, line: 184, type: !115)
!17789 = !DILocation(line: 184, column: 29, scope: !17785)
!17790 = !DILocalVariable(name: "package", arg: 3, scope: !17785, file: !17653, line: 184, type: !115)
!17791 = !DILocation(line: 184, column: 55, scope: !17785)
!17792 = !DILocalVariable(name: "version", arg: 4, scope: !17785, file: !17653, line: 185, type: !115)
!17793 = !DILocation(line: 185, column: 29, scope: !17785)
!17794 = !DILocalVariable(name: "authors", arg: 5, scope: !17785, file: !17653, line: 185, type: !1262)
!17795 = !DILocation(line: 185, column: 59, scope: !17785)
!17796 = !DILocalVariable(name: "n_authors", scope: !17785, file: !17653, line: 187, type: !55)
!17797 = !DILocation(line: 187, column: 10, scope: !17785)
!17798 = !DILocation(line: 189, column: 18, scope: !17799)
!17799 = distinct !DILexicalBlock(scope: !17785, file: !17653, line: 189, column: 3)
!17800 = !DILocation(line: 189, column: 8, scope: !17799)
!17801 = !DILocation(line: 189, column: 23, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17799, file: !17653, line: 189, column: 3)
!17803 = !DILocation(line: 189, column: 31, scope: !17802)
!17804 = !DILocation(line: 189, column: 3, scope: !17799)
!17805 = !DILocation(line: 189, column: 52, scope: !17802)
!17806 = !DILocation(line: 189, column: 3, scope: !17802)
!17807 = distinct !{!17807, !17804, !17808}
!17808 = !DILocation(line: 190, column: 5, scope: !17799)
!17809 = !DILocation(line: 191, column: 20, scope: !17785)
!17810 = !DILocation(line: 191, column: 28, scope: !17785)
!17811 = !DILocation(line: 191, column: 42, scope: !17785)
!17812 = !DILocation(line: 191, column: 51, scope: !17785)
!17813 = !DILocation(line: 191, column: 60, scope: !17785)
!17814 = !DILocation(line: 191, column: 69, scope: !17785)
!17815 = !DILocation(line: 191, column: 3, scope: !17785)
!17816 = !DILocation(line: 192, column: 1, scope: !17785)
!17817 = distinct !DISubprogram(name: "version_etc_va", scope: !17653, file: !17653, line: 199, type: !2000, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1958, retainedNodes: !143)
!17818 = !DILocalVariable(name: "stream", arg: 1, scope: !17817, file: !17653, line: 199, type: !1963)
!17819 = !DILocation(line: 199, column: 23, scope: !17817)
!17820 = !DILocalVariable(name: "command_name", arg: 2, scope: !17817, file: !17653, line: 200, type: !115)
!17821 = !DILocation(line: 200, column: 29, scope: !17817)
!17822 = !DILocalVariable(name: "package", arg: 3, scope: !17817, file: !17653, line: 200, type: !115)
!17823 = !DILocation(line: 200, column: 55, scope: !17817)
!17824 = !DILocalVariable(name: "version", arg: 4, scope: !17817, file: !17653, line: 201, type: !115)
!17825 = !DILocation(line: 201, column: 29, scope: !17817)
!17826 = !DILocalVariable(name: "authors", arg: 5, scope: !17817, file: !17653, line: 201, type: !2002)
!17827 = !DILocation(line: 201, column: 46, scope: !17817)
!17828 = !DILocalVariable(name: "n_authors", scope: !17817, file: !17653, line: 203, type: !55)
!17829 = !DILocation(line: 203, column: 10, scope: !17817)
!17830 = !DILocalVariable(name: "authtab", scope: !17817, file: !17653, line: 204, type: !2009)
!17831 = !DILocation(line: 204, column: 15, scope: !17817)
!17832 = !DILocation(line: 206, column: 18, scope: !17833)
!17833 = distinct !DILexicalBlock(scope: !17817, file: !17653, line: 206, column: 3)
!17834 = !DILocation(line: 206, column: 8, scope: !17833)
!17835 = !DILocation(line: 207, column: 8, scope: !17836)
!17836 = distinct !DILexicalBlock(scope: !17833, file: !17653, line: 206, column: 3)
!17837 = !DILocation(line: 207, column: 18, scope: !17836)
!17838 = !DILocation(line: 208, column: 10, scope: !17836)
!17839 = !DILocation(line: 208, column: 35, scope: !17836)
!17840 = !DILocation(line: 208, column: 22, scope: !17836)
!17841 = !DILocation(line: 208, column: 14, scope: !17836)
!17842 = !DILocation(line: 208, column: 33, scope: !17836)
!17843 = !DILocation(line: 208, column: 67, scope: !17836)
!17844 = !DILocation(line: 0, scope: !17836)
!17845 = !DILocation(line: 206, column: 3, scope: !17833)
!17846 = !DILocation(line: 209, column: 17, scope: !17836)
!17847 = !DILocation(line: 206, column: 3, scope: !17836)
!17848 = distinct !{!17848, !17845, !17849}
!17849 = !DILocation(line: 210, column: 5, scope: !17833)
!17850 = !DILocation(line: 211, column: 20, scope: !17817)
!17851 = !DILocation(line: 211, column: 28, scope: !17817)
!17852 = !DILocation(line: 211, column: 42, scope: !17817)
!17853 = !DILocation(line: 211, column: 51, scope: !17817)
!17854 = !DILocation(line: 212, column: 20, scope: !17817)
!17855 = !DILocation(line: 212, column: 29, scope: !17817)
!17856 = !DILocation(line: 211, column: 3, scope: !17817)
!17857 = !DILocation(line: 213, column: 1, scope: !17817)
!17858 = distinct !DISubprogram(name: "version_etc", scope: !17653, file: !17653, line: 230, type: !17859, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1958, retainedNodes: !143)
!17859 = !DISubroutineType(types: !17860)
!17860 = !{null, !1963, !115, !115, !115, null}
!17861 = !DILocalVariable(name: "stream", arg: 1, scope: !17858, file: !17653, line: 230, type: !1963)
!17862 = !DILocation(line: 230, column: 20, scope: !17858)
!17863 = !DILocalVariable(name: "command_name", arg: 2, scope: !17858, file: !17653, line: 231, type: !115)
!17864 = !DILocation(line: 231, column: 26, scope: !17858)
!17865 = !DILocalVariable(name: "package", arg: 3, scope: !17858, file: !17653, line: 231, type: !115)
!17866 = !DILocation(line: 231, column: 52, scope: !17858)
!17867 = !DILocalVariable(name: "version", arg: 4, scope: !17858, file: !17653, line: 232, type: !115)
!17868 = !DILocation(line: 232, column: 26, scope: !17858)
!17869 = !DILocalVariable(name: "authors", scope: !17858, file: !17653, line: 234, type: !2012)
!17870 = !DILocation(line: 234, column: 11, scope: !17858)
!17871 = !DILocation(line: 236, column: 3, scope: !17858)
!17872 = !DILocation(line: 237, column: 19, scope: !17858)
!17873 = !DILocation(line: 237, column: 27, scope: !17858)
!17874 = !DILocation(line: 237, column: 41, scope: !17858)
!17875 = !DILocation(line: 237, column: 50, scope: !17858)
!17876 = !DILocation(line: 237, column: 59, scope: !17858)
!17877 = !DILocation(line: 237, column: 3, scope: !17858)
!17878 = !DILocation(line: 238, column: 3, scope: !17858)
!17879 = !DILocation(line: 239, column: 1, scope: !17858)
!17880 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !17653, file: !17653, line: 242, type: !134, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1958, retainedNodes: !143)
!17881 = !DILocation(line: 244, column: 3, scope: !17880)
!17882 = !DILocation(line: 249, column: 11, scope: !17880)
!17883 = !DILocation(line: 249, column: 3, scope: !17880)
!17884 = !DILocation(line: 255, column: 11, scope: !17880)
!17885 = !DILocation(line: 255, column: 3, scope: !17880)
!17886 = !DILocation(line: 260, column: 11, scope: !17880)
!17887 = !DILocation(line: 260, column: 3, scope: !17880)
!17888 = !DILocation(line: 262, column: 1, scope: !17880)
!17889 = !DILocation(line: 37, column: 9, scope: !17890)
!17890 = distinct !DILexicalBlock(scope: !1245, file: !1246, line: 37, column: 7)
!17891 = !DILocation(line: 37, column: 7, scope: !1245)
!17892 = !DILocalVariable(name: "can", scope: !17893, file: !1246, line: 39, type: !120)
!17893 = distinct !DILexicalBlock(scope: !17890, file: !1246, line: 38, column: 5)
!17894 = !DILocation(line: 39, column: 12, scope: !17893)
!17895 = !DILocation(line: 44, column: 14, scope: !17893)
!17896 = !DILocation(line: 44, column: 25, scope: !17893)
!17897 = !DILocation(line: 44, column: 11, scope: !17893)
!17898 = !DILocation(line: 46, column: 19, scope: !17893)
!17899 = !DILocation(line: 46, column: 17, scope: !17893)
!17900 = !DILocation(line: 47, column: 19, scope: !17893)
!17901 = !DILocation(line: 48, column: 5, scope: !17893)
!17902 = !DILocation(line: 50, column: 10, scope: !1245)
!17903 = !DILocation(line: 50, column: 3, scope: !1245)
!17904 = distinct !DISubprogram(name: "xnmalloc", scope: !17905, file: !17905, line: 99, type: !2019, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!17905 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/clone/coreutils")
!17906 = !DILocalVariable(name: "n", arg: 1, scope: !17904, file: !17905, line: 99, type: !55)
!17907 = !DILocation(line: 99, column: 18, scope: !17904)
!17908 = !DILocalVariable(name: "s", arg: 2, scope: !17904, file: !17905, line: 99, type: !55)
!17909 = !DILocation(line: 99, column: 28, scope: !17904)
!17910 = !DILocation(line: 101, column: 7, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17904, file: !17905, line: 101, column: 7)
!17912 = !DILocation(line: 101, column: 7, scope: !17904)
!17913 = !DILocation(line: 102, column: 5, scope: !17911)
!17914 = !DILocation(line: 103, column: 19, scope: !17904)
!17915 = !DILocation(line: 103, column: 23, scope: !17904)
!17916 = !DILocation(line: 103, column: 21, scope: !17904)
!17917 = !DILocation(line: 103, column: 10, scope: !17904)
!17918 = !DILocation(line: 103, column: 3, scope: !17904)
!17919 = distinct !DISubprogram(name: "xmalloc", scope: !17920, file: !17920, line: 39, type: !2027, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!17920 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/clone/coreutils")
!17921 = !DILocalVariable(name: "n", arg: 1, scope: !17919, file: !17920, line: 39, type: !55)
!17922 = !DILocation(line: 39, column: 17, scope: !17919)
!17923 = !DILocalVariable(name: "p", scope: !17919, file: !17920, line: 41, type: !53)
!17924 = !DILocation(line: 41, column: 9, scope: !17919)
!17925 = !DILocation(line: 41, column: 21, scope: !17919)
!17926 = !DILocation(line: 41, column: 13, scope: !17919)
!17927 = !DILocation(line: 42, column: 8, scope: !17928)
!17928 = distinct !DILexicalBlock(scope: !17919, file: !17920, line: 42, column: 7)
!17929 = !DILocation(line: 42, column: 10, scope: !17928)
!17930 = !DILocation(line: 42, column: 13, scope: !17928)
!17931 = !DILocation(line: 42, column: 15, scope: !17928)
!17932 = !DILocation(line: 42, column: 7, scope: !17919)
!17933 = !DILocation(line: 43, column: 5, scope: !17928)
!17934 = !DILocation(line: 44, column: 10, scope: !17919)
!17935 = !DILocation(line: 44, column: 3, scope: !17919)
!17936 = distinct !DISubprogram(name: "xnrealloc", scope: !17905, file: !17905, line: 112, type: !2021, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!17937 = !DILocalVariable(name: "p", arg: 1, scope: !17936, file: !17905, line: 112, type: !53)
!17938 = !DILocation(line: 112, column: 18, scope: !17936)
!17939 = !DILocalVariable(name: "n", arg: 2, scope: !17936, file: !17905, line: 112, type: !55)
!17940 = !DILocation(line: 112, column: 28, scope: !17936)
!17941 = !DILocalVariable(name: "s", arg: 3, scope: !17936, file: !17905, line: 112, type: !55)
!17942 = !DILocation(line: 112, column: 38, scope: !17936)
!17943 = !DILocation(line: 114, column: 7, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17936, file: !17905, line: 114, column: 7)
!17945 = !DILocation(line: 114, column: 7, scope: !17936)
!17946 = !DILocation(line: 115, column: 5, scope: !17944)
!17947 = !DILocation(line: 116, column: 20, scope: !17936)
!17948 = !DILocation(line: 116, column: 23, scope: !17936)
!17949 = !DILocation(line: 116, column: 27, scope: !17936)
!17950 = !DILocation(line: 116, column: 25, scope: !17936)
!17951 = !DILocation(line: 116, column: 10, scope: !17936)
!17952 = !DILocation(line: 116, column: 3, scope: !17936)
!17953 = distinct !DISubprogram(name: "xrealloc", scope: !17920, file: !17920, line: 51, type: !2029, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!17954 = !DILocalVariable(name: "p", arg: 1, scope: !17953, file: !17920, line: 51, type: !53)
!17955 = !DILocation(line: 51, column: 17, scope: !17953)
!17956 = !DILocalVariable(name: "n", arg: 2, scope: !17953, file: !17920, line: 51, type: !55)
!17957 = !DILocation(line: 51, column: 27, scope: !17953)
!17958 = !DILocation(line: 53, column: 8, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17953, file: !17920, line: 53, column: 7)
!17960 = !DILocation(line: 53, column: 10, scope: !17959)
!17961 = !DILocation(line: 53, column: 13, scope: !17959)
!17962 = !DILocation(line: 53, column: 7, scope: !17953)
!17963 = !DILocation(line: 57, column: 13, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17959, file: !17920, line: 54, column: 5)
!17965 = !DILocation(line: 57, column: 7, scope: !17964)
!17966 = !DILocation(line: 58, column: 7, scope: !17964)
!17967 = !DILocation(line: 61, column: 16, scope: !17953)
!17968 = !DILocation(line: 61, column: 19, scope: !17953)
!17969 = !DILocation(line: 61, column: 7, scope: !17953)
!17970 = !DILocation(line: 61, column: 5, scope: !17953)
!17971 = !DILocation(line: 62, column: 8, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17953, file: !17920, line: 62, column: 7)
!17973 = !DILocation(line: 62, column: 10, scope: !17972)
!17974 = !DILocation(line: 62, column: 13, scope: !17972)
!17975 = !DILocation(line: 62, column: 7, scope: !17953)
!17976 = !DILocation(line: 63, column: 5, scope: !17972)
!17977 = !DILocation(line: 64, column: 10, scope: !17953)
!17978 = !DILocation(line: 64, column: 3, scope: !17953)
!17979 = !DILocation(line: 65, column: 1, scope: !17953)
!17980 = distinct !DISubprogram(name: "x2nrealloc", scope: !17905, file: !17905, line: 174, type: !2023, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!17981 = !DILocalVariable(name: "p", arg: 1, scope: !17980, file: !17905, line: 174, type: !53)
!17982 = !DILocation(line: 174, column: 19, scope: !17980)
!17983 = !DILocalVariable(name: "pn", arg: 2, scope: !17980, file: !17905, line: 174, type: !628)
!17984 = !DILocation(line: 174, column: 30, scope: !17980)
!17985 = !DILocalVariable(name: "s", arg: 3, scope: !17980, file: !17905, line: 174, type: !55)
!17986 = !DILocation(line: 174, column: 41, scope: !17980)
!17987 = !DILocalVariable(name: "n", scope: !17980, file: !17905, line: 176, type: !55)
!17988 = !DILocation(line: 176, column: 10, scope: !17980)
!17989 = !DILocation(line: 176, column: 15, scope: !17980)
!17990 = !DILocation(line: 176, column: 14, scope: !17980)
!17991 = !DILocation(line: 178, column: 9, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17980, file: !17905, line: 178, column: 7)
!17993 = !DILocation(line: 178, column: 7, scope: !17980)
!17994 = !DILocation(line: 180, column: 13, scope: !17995)
!17995 = distinct !DILexicalBlock(scope: !17996, file: !17905, line: 180, column: 11)
!17996 = distinct !DILexicalBlock(scope: !17992, file: !17905, line: 179, column: 5)
!17997 = !DILocation(line: 180, column: 11, scope: !17996)
!17998 = !DILocation(line: 188, column: 32, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17995, file: !17905, line: 181, column: 9)
!18000 = !DILocation(line: 188, column: 30, scope: !17999)
!18001 = !DILocation(line: 188, column: 13, scope: !17999)
!18002 = !DILocation(line: 189, column: 17, scope: !17999)
!18003 = !DILocation(line: 189, column: 16, scope: !17999)
!18004 = !DILocation(line: 189, column: 13, scope: !17999)
!18005 = !DILocation(line: 190, column: 9, scope: !17999)
!18006 = !DILocation(line: 191, column: 11, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !17996, file: !17905, line: 191, column: 11)
!18008 = !DILocation(line: 191, column: 11, scope: !17996)
!18009 = !DILocation(line: 192, column: 9, scope: !18007)
!18010 = !DILocation(line: 193, column: 5, scope: !17996)
!18011 = !DILocation(line: 200, column: 71, scope: !18012)
!18012 = distinct !DILexicalBlock(scope: !18013, file: !17905, line: 200, column: 11)
!18013 = distinct !DILexicalBlock(scope: !17992, file: !17905, line: 195, column: 5)
!18014 = !DILocation(line: 200, column: 69, scope: !18012)
!18015 = !DILocation(line: 201, column: 14, scope: !18012)
!18016 = !DILocation(line: 201, column: 11, scope: !18012)
!18017 = !DILocation(line: 200, column: 11, scope: !18013)
!18018 = !DILocation(line: 202, column: 9, scope: !18012)
!18019 = !DILocation(line: 203, column: 12, scope: !18013)
!18020 = !DILocation(line: 203, column: 14, scope: !18013)
!18021 = !DILocation(line: 203, column: 18, scope: !18013)
!18022 = !DILocation(line: 203, column: 9, scope: !18013)
!18023 = !DILocation(line: 206, column: 9, scope: !17980)
!18024 = !DILocation(line: 206, column: 4, scope: !17980)
!18025 = !DILocation(line: 206, column: 7, scope: !17980)
!18026 = !DILocation(line: 207, column: 20, scope: !17980)
!18027 = !DILocation(line: 207, column: 23, scope: !17980)
!18028 = !DILocation(line: 207, column: 27, scope: !17980)
!18029 = !DILocation(line: 207, column: 25, scope: !17980)
!18030 = !DILocation(line: 207, column: 10, scope: !17980)
!18031 = !DILocation(line: 207, column: 3, scope: !17980)
!18032 = distinct !DISubprogram(name: "xcharalloc", scope: !17905, file: !17905, line: 216, type: !2025, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!18033 = !DILocalVariable(name: "n", arg: 1, scope: !18032, file: !17905, line: 216, type: !55)
!18034 = !DILocation(line: 216, column: 20, scope: !18032)
!18035 = !DILocation(line: 218, column: 10, scope: !18032)
!18036 = !DILocation(line: 218, column: 3, scope: !18032)
!18037 = distinct !DISubprogram(name: "x2realloc", scope: !17920, file: !17920, line: 74, type: !2031, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!18038 = !DILocalVariable(name: "p", arg: 1, scope: !18037, file: !17920, line: 74, type: !53)
!18039 = !DILocation(line: 74, column: 18, scope: !18037)
!18040 = !DILocalVariable(name: "pn", arg: 2, scope: !18037, file: !17920, line: 74, type: !628)
!18041 = !DILocation(line: 74, column: 29, scope: !18037)
!18042 = !DILocation(line: 76, column: 22, scope: !18037)
!18043 = !DILocation(line: 76, column: 25, scope: !18037)
!18044 = !DILocation(line: 76, column: 10, scope: !18037)
!18045 = !DILocation(line: 76, column: 3, scope: !18037)
!18046 = distinct !DISubprogram(name: "xzalloc", scope: !17920, file: !17920, line: 84, type: !2027, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!18047 = !DILocalVariable(name: "s", arg: 1, scope: !18046, file: !17920, line: 84, type: !55)
!18048 = !DILocation(line: 84, column: 17, scope: !18046)
!18049 = !DILocation(line: 86, column: 27, scope: !18046)
!18050 = !DILocation(line: 86, column: 18, scope: !18046)
!18051 = !DILocation(line: 86, column: 34, scope: !18046)
!18052 = !DILocation(line: 86, column: 10, scope: !18046)
!18053 = !DILocation(line: 86, column: 3, scope: !18046)
!18054 = distinct !DISubprogram(name: "xcalloc", scope: !17920, file: !17920, line: 93, type: !2019, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!18055 = !DILocalVariable(name: "n", arg: 1, scope: !18054, file: !17920, line: 93, type: !55)
!18056 = !DILocation(line: 93, column: 17, scope: !18054)
!18057 = !DILocalVariable(name: "s", arg: 2, scope: !18054, file: !17920, line: 93, type: !55)
!18058 = !DILocation(line: 93, column: 27, scope: !18054)
!18059 = !DILocalVariable(name: "p", scope: !18054, file: !17920, line: 95, type: !53)
!18060 = !DILocation(line: 95, column: 9, scope: !18054)
!18061 = !DILocation(line: 100, column: 7, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !18054, file: !17920, line: 100, column: 7)
!18063 = !DILocation(line: 101, column: 7, scope: !18062)
!18064 = !DILocation(line: 101, column: 26, scope: !18062)
!18065 = !DILocation(line: 101, column: 29, scope: !18062)
!18066 = !DILocation(line: 101, column: 18, scope: !18062)
!18067 = !DILocation(line: 101, column: 16, scope: !18062)
!18068 = !DILocation(line: 100, column: 7, scope: !18054)
!18069 = !DILocation(line: 102, column: 5, scope: !18062)
!18070 = !DILocation(line: 103, column: 10, scope: !18054)
!18071 = !DILocation(line: 103, column: 3, scope: !18054)
!18072 = distinct !DISubprogram(name: "xmemdup", scope: !17920, file: !17920, line: 111, type: !425, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!18073 = !DILocalVariable(name: "p", arg: 1, scope: !18072, file: !17920, line: 111, type: !427)
!18074 = !DILocation(line: 111, column: 22, scope: !18072)
!18075 = !DILocalVariable(name: "s", arg: 2, scope: !18072, file: !17920, line: 111, type: !55)
!18076 = !DILocation(line: 111, column: 32, scope: !18072)
!18077 = !DILocation(line: 113, column: 27, scope: !18072)
!18078 = !DILocation(line: 113, column: 18, scope: !18072)
!18079 = !DILocation(line: 113, column: 31, scope: !18072)
!18080 = !DILocation(line: 113, column: 34, scope: !18072)
!18081 = !DILocation(line: 113, column: 10, scope: !18072)
!18082 = !DILocation(line: 113, column: 3, scope: !18072)
!18083 = distinct !DISubprogram(name: "xstrdup", scope: !17920, file: !17920, line: 119, type: !990, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !143)
!18084 = !DILocalVariable(name: "string", arg: 1, scope: !18083, file: !17920, line: 119, type: !115)
!18085 = !DILocation(line: 119, column: 22, scope: !18083)
!18086 = !DILocation(line: 121, column: 19, scope: !18083)
!18087 = !DILocation(line: 121, column: 35, scope: !18083)
!18088 = !DILocation(line: 121, column: 27, scope: !18083)
!18089 = !DILocation(line: 121, column: 43, scope: !18083)
!18090 = !DILocation(line: 121, column: 10, scope: !18083)
!18091 = !DILocation(line: 121, column: 3, scope: !18083)
!18092 = distinct !DISubprogram(name: "xalloc_die", scope: !18093, file: !18093, line: 32, type: !134, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2033, retainedNodes: !143)
!18093 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/clone/coreutils")
!18094 = !DILocation(line: 34, column: 10, scope: !18092)
!18095 = !DILocation(line: 34, column: 33, scope: !18092)
!18096 = !DILocation(line: 34, column: 3, scope: !18092)
!18097 = !DILocation(line: 40, column: 3, scope: !18092)
!18098 = distinct !DISubprogram(name: "xfts_open", scope: !18099, file: !18099, line: 33, type: !2039, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !143)
!18099 = !DIFile(filename: "lib/xfts.c", directory: "/home/mbarbar/clone/coreutils")
!18100 = !DILocalVariable(name: "argv", arg: 1, scope: !18098, file: !18099, line: 33, type: !1339)
!18101 = !DILocation(line: 33, column: 26, scope: !18098)
!18102 = !DILocalVariable(name: "options", arg: 2, scope: !18098, file: !18099, line: 33, type: !7)
!18103 = !DILocation(line: 33, column: 36, scope: !18098)
!18104 = !DILocalVariable(name: "compar", arg: 3, scope: !18098, file: !18099, line: 34, type: !2123)
!18105 = !DILocation(line: 34, column: 18, scope: !18098)
!18106 = !DILocalVariable(name: "fts", scope: !18098, file: !18099, line: 36, type: !2041)
!18107 = !DILocation(line: 36, column: 8, scope: !18098)
!18108 = !DILocation(line: 36, column: 24, scope: !18098)
!18109 = !DILocation(line: 36, column: 30, scope: !18098)
!18110 = !DILocation(line: 36, column: 38, scope: !18098)
!18111 = !DILocation(line: 36, column: 51, scope: !18098)
!18112 = !DILocation(line: 36, column: 14, scope: !18098)
!18113 = !DILocation(line: 37, column: 7, scope: !18114)
!18114 = distinct !DILexicalBlock(scope: !18098, file: !18099, line: 37, column: 7)
!18115 = !DILocation(line: 37, column: 11, scope: !18114)
!18116 = !DILocation(line: 37, column: 7, scope: !18098)
!18117 = !DILocation(line: 41, column: 7, scope: !18118)
!18118 = distinct !DILexicalBlock(scope: !18119, file: !18099, line: 41, column: 7)
!18119 = distinct !DILexicalBlock(scope: !18120, file: !18099, line: 41, column: 7)
!18120 = distinct !DILexicalBlock(scope: !18114, file: !18099, line: 38, column: 5)
!18121 = !DILocation(line: 41, column: 7, scope: !18119)
!18122 = !DILocation(line: 42, column: 7, scope: !18120)
!18123 = !DILocation(line: 45, column: 10, scope: !18098)
!18124 = !DILocation(line: 45, column: 3, scope: !18098)
!18125 = distinct !DISubprogram(name: "cycle_warning_required", scope: !18099, file: !18099, line: 56, type: !2130, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2036, retainedNodes: !143)
!18126 = !DILocalVariable(name: "fts", arg: 1, scope: !18125, file: !18099, line: 56, type: !2132)
!18127 = !DILocation(line: 56, column: 36, scope: !18125)
!18128 = !DILocalVariable(name: "ent", arg: 2, scope: !18125, file: !18099, line: 56, type: !2127)
!18129 = !DILocation(line: 56, column: 55, scope: !18125)
!18130 = !DILocation(line: 62, column: 12, scope: !18125)
!18131 = !{!3827, !2986, i64 72}
!18132 = !DILocation(line: 62, column: 38, scope: !18125)
!18133 = !DILocation(line: 62, column: 42, scope: !18125)
!18134 = !DILocation(line: 63, column: 11, scope: !18125)
!18135 = !DILocation(line: 63, column: 15, scope: !18125)
!18136 = !DILocation(line: 63, column: 41, scope: !18125)
!18137 = !DILocation(line: 63, column: 44, scope: !18125)
!18138 = !DILocation(line: 64, column: 15, scope: !18125)
!18139 = !DILocation(line: 64, column: 18, scope: !18125)
!18140 = !DILocation(line: 64, column: 23, scope: !18125)
!18141 = !DILocation(line: 64, column: 33, scope: !18125)
!18142 = !DILocation(line: 0, scope: !18125)
!18143 = !DILocation(line: 62, column: 3, scope: !18125)
!18144 = distinct !DISubprogram(name: "xvasprintf", scope: !18145, file: !18145, line: 76, type: !2137, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2134, retainedNodes: !143)
!18145 = !DIFile(filename: "lib/xvasprintf.c", directory: "/home/mbarbar/clone/coreutils")
!18146 = !DILocalVariable(name: "format", arg: 1, scope: !18144, file: !18145, line: 76, type: !115)
!18147 = !DILocation(line: 76, column: 25, scope: !18144)
!18148 = !DILocalVariable(name: "args", arg: 2, scope: !18144, file: !18145, line: 76, type: !2139)
!18149 = !DILocation(line: 76, column: 41, scope: !18144)
!18150 = !DILocalVariable(name: "result", scope: !18144, file: !18145, line: 78, type: !9)
!18151 = !DILocation(line: 78, column: 9, scope: !18144)
!18152 = !DILocalVariable(name: "argcount", scope: !18153, file: !18145, line: 84, type: !55)
!18153 = distinct !DILexicalBlock(scope: !18144, file: !18145, line: 83, column: 3)
!18154 = !DILocation(line: 84, column: 12, scope: !18153)
!18155 = !DILocalVariable(name: "f", scope: !18153, file: !18145, line: 85, type: !115)
!18156 = !DILocation(line: 85, column: 17, scope: !18153)
!18157 = !DILocation(line: 87, column: 14, scope: !18158)
!18158 = distinct !DILexicalBlock(scope: !18153, file: !18145, line: 87, column: 5)
!18159 = !DILocation(line: 87, column: 12, scope: !18158)
!18160 = !DILocation(line: 87, column: 10, scope: !18158)
!18161 = !DILocation(line: 89, column: 14, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18163, file: !18145, line: 89, column: 13)
!18163 = distinct !DILexicalBlock(scope: !18164, file: !18145, line: 88, column: 7)
!18164 = distinct !DILexicalBlock(scope: !18158, file: !18145, line: 87, column: 5)
!18165 = !DILocation(line: 89, column: 13, scope: !18162)
!18166 = !DILocation(line: 89, column: 16, scope: !18162)
!18167 = !DILocation(line: 89, column: 13, scope: !18163)
!18168 = !DILocation(line: 91, column: 27, scope: !18162)
!18169 = !DILocation(line: 91, column: 37, scope: !18162)
!18170 = !DILocation(line: 91, column: 18, scope: !18162)
!18171 = !DILocation(line: 91, column: 11, scope: !18162)
!18172 = !DILocation(line: 92, column: 14, scope: !18173)
!18173 = distinct !DILexicalBlock(scope: !18163, file: !18145, line: 92, column: 13)
!18174 = !DILocation(line: 92, column: 13, scope: !18173)
!18175 = !DILocation(line: 92, column: 16, scope: !18173)
!18176 = !DILocation(line: 92, column: 13, scope: !18163)
!18177 = !DILocation(line: 93, column: 11, scope: !18173)
!18178 = !DILocation(line: 94, column: 10, scope: !18163)
!18179 = !DILocation(line: 95, column: 14, scope: !18180)
!18180 = distinct !DILexicalBlock(scope: !18163, file: !18145, line: 95, column: 13)
!18181 = !DILocation(line: 95, column: 13, scope: !18180)
!18182 = !DILocation(line: 95, column: 16, scope: !18180)
!18183 = !DILocation(line: 95, column: 13, scope: !18163)
!18184 = !DILocation(line: 96, column: 11, scope: !18180)
!18185 = !DILocation(line: 97, column: 10, scope: !18163)
!18186 = !DILocation(line: 98, column: 17, scope: !18163)
!18187 = !DILocation(line: 87, column: 5, scope: !18164)
!18188 = distinct !{!18188, !18189, !18190}
!18189 = !DILocation(line: 87, column: 5, scope: !18158)
!18190 = !DILocation(line: 99, column: 7, scope: !18158)
!18191 = !DILocation(line: 102, column: 27, scope: !18192)
!18192 = distinct !DILexicalBlock(scope: !18144, file: !18145, line: 102, column: 7)
!18193 = !DILocation(line: 102, column: 35, scope: !18192)
!18194 = !DILocation(line: 102, column: 7, scope: !18192)
!18195 = !DILocation(line: 102, column: 41, scope: !18192)
!18196 = !DILocation(line: 102, column: 7, scope: !18144)
!18197 = !DILocation(line: 104, column: 11, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18199, file: !18145, line: 104, column: 11)
!18199 = distinct !DILexicalBlock(scope: !18192, file: !18145, line: 103, column: 5)
!18200 = !DILocation(line: 104, column: 17, scope: !18198)
!18201 = !DILocation(line: 104, column: 11, scope: !18199)
!18202 = !DILocation(line: 105, column: 9, scope: !18198)
!18203 = !DILocation(line: 106, column: 7, scope: !18199)
!18204 = !DILocation(line: 109, column: 10, scope: !18144)
!18205 = !DILocation(line: 109, column: 3, scope: !18144)
!18206 = !DILocation(line: 110, column: 1, scope: !18144)
!18207 = distinct !DISubprogram(name: "xstrcat", scope: !18145, file: !18145, line: 33, type: !2146, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2134, retainedNodes: !143)
!18208 = !DILocalVariable(name: "argcount", arg: 1, scope: !18207, file: !18145, line: 33, type: !55)
!18209 = !DILocation(line: 33, column: 17, scope: !18207)
!18210 = !DILocalVariable(name: "args", arg: 2, scope: !18207, file: !18145, line: 33, type: !2139)
!18211 = !DILocation(line: 33, column: 35, scope: !18207)
!18212 = !DILocalVariable(name: "result", scope: !18207, file: !18145, line: 35, type: !9)
!18213 = !DILocation(line: 35, column: 9, scope: !18207)
!18214 = !DILocalVariable(name: "ap", scope: !18207, file: !18145, line: 36, type: !2148)
!18215 = !DILocation(line: 36, column: 11, scope: !18207)
!18216 = !DILocalVariable(name: "totalsize", scope: !18207, file: !18145, line: 37, type: !55)
!18217 = !DILocation(line: 37, column: 10, scope: !18207)
!18218 = !DILocalVariable(name: "i", scope: !18207, file: !18145, line: 38, type: !55)
!18219 = !DILocation(line: 38, column: 10, scope: !18207)
!18220 = !DILocalVariable(name: "p", scope: !18207, file: !18145, line: 39, type: !9)
!18221 = !DILocation(line: 39, column: 9, scope: !18207)
!18222 = !DILocation(line: 42, column: 13, scope: !18207)
!18223 = !DILocation(line: 43, column: 3, scope: !18207)
!18224 = !DILocation(line: 44, column: 12, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18207, file: !18145, line: 44, column: 3)
!18226 = !DILocation(line: 44, column: 10, scope: !18225)
!18227 = !DILocation(line: 44, column: 8, scope: !18225)
!18228 = !DILocation(line: 44, column: 22, scope: !18229)
!18229 = distinct !DILexicalBlock(scope: !18225, file: !18145, line: 44, column: 3)
!18230 = !DILocation(line: 44, column: 24, scope: !18229)
!18231 = !DILocation(line: 44, column: 3, scope: !18225)
!18232 = !DILocalVariable(name: "next", scope: !18233, file: !18145, line: 46, type: !115)
!18233 = distinct !DILexicalBlock(scope: !18229, file: !18145, line: 45, column: 5)
!18234 = !DILocation(line: 46, column: 19, scope: !18233)
!18235 = !DILocation(line: 46, column: 26, scope: !18233)
!18236 = !DILocation(line: 47, column: 25, scope: !18233)
!18237 = !DILocation(line: 47, column: 44, scope: !18233)
!18238 = !DILocation(line: 47, column: 36, scope: !18233)
!18239 = !DILocation(line: 47, column: 19, scope: !18233)
!18240 = !DILocation(line: 47, column: 17, scope: !18233)
!18241 = !DILocation(line: 48, column: 5, scope: !18233)
!18242 = !DILocation(line: 44, column: 30, scope: !18229)
!18243 = !DILocation(line: 44, column: 3, scope: !18229)
!18244 = distinct !{!18244, !18231, !18245}
!18245 = !DILocation(line: 48, column: 5, scope: !18225)
!18246 = !DILocation(line: 49, column: 3, scope: !18207)
!18247 = !DILocation(line: 54, column: 7, scope: !18248)
!18248 = distinct !DILexicalBlock(scope: !18207, file: !18145, line: 54, column: 7)
!18249 = !DILocation(line: 54, column: 17, scope: !18248)
!18250 = !DILocation(line: 54, column: 29, scope: !18248)
!18251 = !DILocation(line: 54, column: 32, scope: !18248)
!18252 = !DILocation(line: 54, column: 42, scope: !18248)
!18253 = !DILocation(line: 54, column: 7, scope: !18207)
!18254 = !DILocation(line: 56, column: 7, scope: !18255)
!18255 = distinct !DILexicalBlock(scope: !18248, file: !18145, line: 55, column: 5)
!18256 = !DILocation(line: 56, column: 13, scope: !18255)
!18257 = !DILocation(line: 57, column: 7, scope: !18255)
!18258 = !DILocation(line: 61, column: 12, scope: !18207)
!18259 = !DILocation(line: 61, column: 10, scope: !18207)
!18260 = !DILocation(line: 62, column: 7, scope: !18207)
!18261 = !DILocation(line: 62, column: 5, scope: !18207)
!18262 = !DILocation(line: 63, column: 12, scope: !18263)
!18263 = distinct !DILexicalBlock(scope: !18207, file: !18145, line: 63, column: 3)
!18264 = !DILocation(line: 63, column: 10, scope: !18263)
!18265 = !DILocation(line: 63, column: 8, scope: !18263)
!18266 = !DILocation(line: 63, column: 22, scope: !18267)
!18267 = distinct !DILexicalBlock(scope: !18263, file: !18145, line: 63, column: 3)
!18268 = !DILocation(line: 63, column: 24, scope: !18267)
!18269 = !DILocation(line: 63, column: 3, scope: !18263)
!18270 = !DILocalVariable(name: "next", scope: !18271, file: !18145, line: 65, type: !115)
!18271 = distinct !DILexicalBlock(scope: !18267, file: !18145, line: 64, column: 5)
!18272 = !DILocation(line: 65, column: 19, scope: !18271)
!18273 = !DILocation(line: 65, column: 26, scope: !18271)
!18274 = !DILocalVariable(name: "len", scope: !18271, file: !18145, line: 66, type: !55)
!18275 = !DILocation(line: 66, column: 14, scope: !18271)
!18276 = !DILocation(line: 66, column: 28, scope: !18271)
!18277 = !DILocation(line: 66, column: 20, scope: !18271)
!18278 = !DILocation(line: 67, column: 15, scope: !18271)
!18279 = !DILocation(line: 67, column: 18, scope: !18271)
!18280 = !DILocation(line: 67, column: 24, scope: !18271)
!18281 = !DILocation(line: 67, column: 7, scope: !18271)
!18282 = !DILocation(line: 68, column: 12, scope: !18271)
!18283 = !DILocation(line: 68, column: 9, scope: !18271)
!18284 = !DILocation(line: 69, column: 5, scope: !18271)
!18285 = !DILocation(line: 63, column: 30, scope: !18267)
!18286 = !DILocation(line: 63, column: 3, scope: !18267)
!18287 = distinct !{!18287, !18269, !18288}
!18288 = !DILocation(line: 69, column: 5, scope: !18263)
!18289 = !DILocation(line: 70, column: 4, scope: !18207)
!18290 = !DILocation(line: 70, column: 6, scope: !18207)
!18291 = !DILocation(line: 72, column: 10, scope: !18207)
!18292 = !DILocation(line: 72, column: 3, scope: !18207)
!18293 = !DILocation(line: 73, column: 1, scope: !18207)
!18294 = distinct !DISubprogram(name: "yesno", scope: !18295, file: !18295, line: 32, type: !1247, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2152, retainedNodes: !143)
!18295 = !DIFile(filename: "lib/yesno.c", directory: "/home/mbarbar/clone/coreutils")
!18296 = !DILocalVariable(name: "yes", scope: !18294, file: !18295, line: 34, type: !120)
!18297 = !DILocation(line: 34, column: 8, scope: !18294)
!18298 = !DILocalVariable(name: "response", scope: !18294, file: !18295, line: 37, type: !9)
!18299 = !DILocation(line: 37, column: 9, scope: !18294)
!18300 = !DILocalVariable(name: "response_size", scope: !18294, file: !18295, line: 38, type: !55)
!18301 = !DILocation(line: 38, column: 10, scope: !18294)
!18302 = !DILocalVariable(name: "response_len", scope: !18294, file: !18295, line: 39, type: !608)
!18303 = !DILocation(line: 39, column: 11, scope: !18294)
!18304 = !DILocation(line: 39, column: 62, scope: !18294)
!18305 = !DILocation(line: 39, column: 26, scope: !18294)
!18306 = !DILocation(line: 41, column: 7, scope: !18307)
!18307 = distinct !DILexicalBlock(scope: !18294, file: !18295, line: 41, column: 7)
!18308 = !DILocation(line: 41, column: 20, scope: !18307)
!18309 = !DILocation(line: 41, column: 7, scope: !18294)
!18310 = !DILocation(line: 42, column: 9, scope: !18307)
!18311 = !DILocation(line: 42, column: 5, scope: !18307)
!18312 = !DILocation(line: 47, column: 11, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18314, file: !18295, line: 47, column: 11)
!18314 = distinct !DILexicalBlock(scope: !18307, file: !18295, line: 44, column: 5)
!18315 = !DILocation(line: 47, column: 20, scope: !18313)
!18316 = !DILocation(line: 47, column: 33, scope: !18313)
!18317 = !DILocation(line: 47, column: 38, scope: !18313)
!18318 = !DILocation(line: 47, column: 11, scope: !18314)
!18319 = !DILocation(line: 48, column: 9, scope: !18313)
!18320 = !DILocation(line: 48, column: 18, scope: !18313)
!18321 = !DILocation(line: 48, column: 31, scope: !18313)
!18322 = !DILocation(line: 48, column: 36, scope: !18313)
!18323 = !DILocation(line: 49, column: 27, scope: !18314)
!18324 = !DILocation(line: 49, column: 18, scope: !18314)
!18325 = !DILocation(line: 49, column: 16, scope: !18314)
!18326 = !DILocation(line: 49, column: 11, scope: !18314)
!18327 = !DILocation(line: 52, column: 9, scope: !18294)
!18328 = !DILocation(line: 52, column: 3, scope: !18294)
!18329 = !DILocation(line: 62, column: 10, scope: !18294)
!18330 = !DILocation(line: 62, column: 3, scope: !18294)
!18331 = distinct !DISubprogram(name: "rpl_fflush", scope: !18332, file: !18332, line: 129, type: !2192, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2189, retainedNodes: !143)
!18332 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/clone/coreutils")
!18333 = !DILocalVariable(name: "stream", arg: 1, scope: !18331, file: !18332, line: 129, type: !2194)
!18334 = !DILocation(line: 129, column: 19, scope: !18331)
!18335 = !DILocation(line: 150, column: 7, scope: !18336)
!18336 = distinct !DILexicalBlock(scope: !18331, file: !18332, line: 150, column: 7)
!18337 = !DILocation(line: 150, column: 14, scope: !18336)
!18338 = !DILocation(line: 150, column: 22, scope: !18336)
!18339 = !DILocation(line: 150, column: 27, scope: !18336)
!18340 = !DILocation(line: 150, column: 7, scope: !18331)
!18341 = !DILocation(line: 151, column: 20, scope: !18336)
!18342 = !DILocation(line: 151, column: 12, scope: !18336)
!18343 = !DILocation(line: 151, column: 5, scope: !18336)
!18344 = !DILocation(line: 156, column: 44, scope: !18331)
!18345 = !DILocation(line: 156, column: 3, scope: !18331)
!18346 = !DILocation(line: 158, column: 18, scope: !18331)
!18347 = !DILocation(line: 158, column: 10, scope: !18331)
!18348 = !DILocation(line: 158, column: 3, scope: !18331)
!18349 = !DILocation(line: 232, column: 1, scope: !18331)
!18350 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !18332, file: !18332, line: 41, type: !2228, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2189, retainedNodes: !143)
!18351 = !DILocalVariable(name: "fp", arg: 1, scope: !18350, file: !18332, line: 41, type: !2194)
!18352 = !DILocation(line: 41, column: 48, scope: !18350)
!18353 = !DILocation(line: 43, column: 7, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18350, file: !18332, line: 43, column: 7)
!18355 = !DILocation(line: 43, column: 11, scope: !18354)
!18356 = !{!18357, !2986, i64 0}
!18357 = !{!"_IO_FILE", !2986, i64 0, !2999, i64 8, !2999, i64 16, !2999, i64 24, !2999, i64 32, !2999, i64 40, !2999, i64 48, !2999, i64 56, !2999, i64 64, !2999, i64 72, !2999, i64 80, !2999, i64 88, !2999, i64 96, !2999, i64 104, !2986, i64 112, !2986, i64 116, !3183, i64 120, !3814, i64 128, !2987, i64 130, !2987, i64 131, !2999, i64 136, !3183, i64 144, !2999, i64 152, !2999, i64 160, !2999, i64 168, !2999, i64 176, !3183, i64 184, !2986, i64 192, !2987, i64 196}
!18358 = !DILocation(line: 43, column: 18, scope: !18354)
!18359 = !DILocation(line: 43, column: 7, scope: !18350)
!18360 = !DILocation(line: 45, column: 13, scope: !18354)
!18361 = !DILocation(line: 45, column: 5, scope: !18354)
!18362 = !DILocation(line: 46, column: 1, scope: !18350)
!18363 = distinct !DISubprogram(name: "freadahead", scope: !18364, file: !18364, line: 34, type: !2233, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2230, retainedNodes: !143)
!18364 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mbarbar/clone/coreutils")
!18365 = !DILocalVariable(name: "fp", arg: 1, scope: !18363, file: !18364, line: 34, type: !2235)
!18366 = !DILocation(line: 34, column: 19, scope: !18363)
!18367 = !DILocation(line: 38, column: 7, scope: !18368)
!18368 = distinct !DILexicalBlock(scope: !18363, file: !18364, line: 38, column: 7)
!18369 = !DILocation(line: 38, column: 11, scope: !18368)
!18370 = !{!18357, !2999, i64 40}
!18371 = !DILocation(line: 38, column: 27, scope: !18368)
!18372 = !DILocation(line: 38, column: 31, scope: !18368)
!18373 = !{!18357, !2999, i64 32}
!18374 = !DILocation(line: 38, column: 25, scope: !18368)
!18375 = !DILocation(line: 38, column: 7, scope: !18363)
!18376 = !DILocation(line: 39, column: 5, scope: !18368)
!18377 = !DILocation(line: 40, column: 11, scope: !18363)
!18378 = !DILocation(line: 40, column: 15, scope: !18363)
!18379 = !{!18357, !2999, i64 16}
!18380 = !DILocation(line: 40, column: 30, scope: !18363)
!18381 = !DILocation(line: 40, column: 34, scope: !18363)
!18382 = !{!18357, !2999, i64 8}
!18383 = !DILocation(line: 40, column: 28, scope: !18363)
!18384 = !DILocation(line: 41, column: 13, scope: !18363)
!18385 = !DILocation(line: 41, column: 17, scope: !18363)
!18386 = !DILocation(line: 41, column: 24, scope: !18363)
!18387 = !DILocation(line: 41, column: 42, scope: !18363)
!18388 = !DILocation(line: 41, column: 46, scope: !18363)
!18389 = !{!18357, !2999, i64 88}
!18390 = !DILocation(line: 41, column: 61, scope: !18363)
!18391 = !DILocation(line: 41, column: 65, scope: !18363)
!18392 = !{!18357, !2999, i64 72}
!18393 = !DILocation(line: 41, column: 59, scope: !18363)
!18394 = !DILocation(line: 41, column: 10, scope: !18363)
!18395 = !DILocation(line: 40, column: 3, scope: !18363)
!18396 = !DILocation(line: 103, column: 1, scope: !18363)
!18397 = distinct !DISubprogram(name: "rpl_fseeko", scope: !18398, file: !18398, line: 28, type: !2272, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2269, retainedNodes: !143)
!18398 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/clone/coreutils")
!18399 = !DILocalVariable(name: "fp", arg: 1, scope: !18397, file: !18398, line: 28, type: !2274)
!18400 = !DILocation(line: 28, column: 15, scope: !18397)
!18401 = !DILocalVariable(name: "offset", arg: 2, scope: !18397, file: !18398, line: 28, type: !248)
!18402 = !DILocation(line: 28, column: 25, scope: !18397)
!18403 = !DILocalVariable(name: "whence", arg: 3, scope: !18397, file: !18398, line: 28, type: !7)
!18404 = !DILocation(line: 28, column: 37, scope: !18397)
!18405 = !DILocation(line: 52, column: 7, scope: !18406)
!18406 = distinct !DILexicalBlock(scope: !18397, file: !18398, line: 52, column: 7)
!18407 = !DILocation(line: 52, column: 11, scope: !18406)
!18408 = !DILocation(line: 52, column: 27, scope: !18406)
!18409 = !DILocation(line: 52, column: 31, scope: !18406)
!18410 = !DILocation(line: 52, column: 24, scope: !18406)
!18411 = !DILocation(line: 53, column: 7, scope: !18406)
!18412 = !DILocation(line: 53, column: 10, scope: !18406)
!18413 = !DILocation(line: 53, column: 14, scope: !18406)
!18414 = !DILocation(line: 53, column: 31, scope: !18406)
!18415 = !DILocation(line: 53, column: 35, scope: !18406)
!18416 = !DILocation(line: 53, column: 28, scope: !18406)
!18417 = !DILocation(line: 54, column: 7, scope: !18406)
!18418 = !DILocation(line: 54, column: 10, scope: !18406)
!18419 = !DILocation(line: 54, column: 14, scope: !18406)
!18420 = !DILocation(line: 54, column: 28, scope: !18406)
!18421 = !DILocation(line: 52, column: 7, scope: !18397)
!18422 = !DILocalVariable(name: "pos", scope: !18423, file: !18398, line: 117, type: !248)
!18423 = distinct !DILexicalBlock(scope: !18406, file: !18398, line: 113, column: 5)
!18424 = !DILocation(line: 117, column: 13, scope: !18423)
!18425 = !DILocation(line: 117, column: 34, scope: !18423)
!18426 = !DILocation(line: 117, column: 26, scope: !18423)
!18427 = !DILocation(line: 117, column: 39, scope: !18423)
!18428 = !DILocation(line: 117, column: 47, scope: !18423)
!18429 = !DILocation(line: 117, column: 19, scope: !18423)
!18430 = !DILocation(line: 118, column: 11, scope: !18431)
!18431 = distinct !DILexicalBlock(scope: !18423, file: !18398, line: 118, column: 11)
!18432 = !DILocation(line: 118, column: 15, scope: !18431)
!18433 = !DILocation(line: 118, column: 11, scope: !18423)
!18434 = !DILocation(line: 124, column: 11, scope: !18435)
!18435 = distinct !DILexicalBlock(scope: !18431, file: !18398, line: 119, column: 9)
!18436 = !DILocation(line: 129, column: 7, scope: !18423)
!18437 = !DILocation(line: 129, column: 11, scope: !18423)
!18438 = !DILocation(line: 129, column: 18, scope: !18423)
!18439 = !DILocation(line: 130, column: 21, scope: !18423)
!18440 = !DILocation(line: 130, column: 7, scope: !18423)
!18441 = !DILocation(line: 130, column: 11, scope: !18423)
!18442 = !DILocation(line: 130, column: 19, scope: !18423)
!18443 = !{!18357, !3183, i64 144}
!18444 = !DILocation(line: 161, column: 7, scope: !18423)
!18445 = !DILocation(line: 163, column: 18, scope: !18397)
!18446 = !DILocation(line: 163, column: 22, scope: !18397)
!18447 = !DILocation(line: 163, column: 30, scope: !18397)
!18448 = !DILocation(line: 163, column: 10, scope: !18397)
!18449 = !DILocation(line: 163, column: 3, scope: !18397)
!18450 = !DILocation(line: 164, column: 1, scope: !18397)
!18451 = distinct !DISubprogram(name: "rpl_fts_open", scope: !2312, file: !2312, line: 358, type: !2415, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!18452 = !DILocalVariable(name: "argv", arg: 1, scope: !18451, file: !2312, line: 358, type: !1339)
!18453 = !DILocation(line: 358, column: 25, scope: !18451)
!18454 = !DILocalVariable(name: "options", arg: 2, scope: !18451, file: !2312, line: 359, type: !7)
!18455 = !DILocation(line: 359, column: 24, scope: !18451)
!18456 = !DILocalVariable(name: "compar", arg: 3, scope: !18451, file: !2312, line: 360, type: !2417)
!18457 = !DILocation(line: 360, column: 17, scope: !18451)
!18458 = !DILocalVariable(name: "sp", scope: !18451, file: !2312, line: 362, type: !2337)
!18459 = !DILocation(line: 362, column: 23, scope: !18451)
!18460 = !DILocalVariable(name: "p", scope: !18451, file: !2312, line: 363, type: !2420)
!18461 = !DILocation(line: 363, column: 26, scope: !18451)
!18462 = !DILocalVariable(name: "root", scope: !18451, file: !2312, line: 363, type: !2420)
!18463 = !DILocation(line: 363, column: 30, scope: !18451)
!18464 = !DILocalVariable(name: "nitems", scope: !18451, file: !2312, line: 364, type: !55)
!18465 = !DILocation(line: 364, column: 25, scope: !18451)
!18466 = !DILocalVariable(name: "parent", scope: !18451, file: !2312, line: 365, type: !2420)
!18467 = !DILocation(line: 365, column: 17, scope: !18451)
!18468 = !DILocalVariable(name: "tmp", scope: !18451, file: !2312, line: 366, type: !2420)
!18469 = !DILocation(line: 366, column: 17, scope: !18451)
!18470 = !DILocalVariable(name: "defer_stat", scope: !18451, file: !2312, line: 367, type: !120)
!18471 = !DILocation(line: 367, column: 14, scope: !18451)
!18472 = !DILocation(line: 370, column: 13, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 370, column: 13)
!18474 = !DILocation(line: 370, column: 21, scope: !18473)
!18475 = !DILocation(line: 370, column: 13, scope: !18451)
!18476 = !DILocation(line: 371, column: 17, scope: !18477)
!18477 = distinct !DILexicalBlock(scope: !18473, file: !2312, line: 370, column: 40)
!18478 = !DILocation(line: 372, column: 17, scope: !18477)
!18479 = !DILocation(line: 374, column: 14, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 374, column: 13)
!18481 = !DILocation(line: 374, column: 22, scope: !18480)
!18482 = !DILocation(line: 374, column: 37, scope: !18480)
!18483 = !DILocation(line: 374, column: 41, scope: !18480)
!18484 = !DILocation(line: 374, column: 49, scope: !18480)
!18485 = !DILocation(line: 374, column: 13, scope: !18451)
!18486 = !DILocation(line: 375, column: 17, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18480, file: !2312, line: 374, column: 63)
!18488 = !DILocation(line: 376, column: 17, scope: !18487)
!18489 = !DILocation(line: 378, column: 17, scope: !18490)
!18490 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 378, column: 14)
!18491 = !DILocation(line: 378, column: 25, scope: !18490)
!18492 = !DILocation(line: 378, column: 14, scope: !18451)
!18493 = !DILocation(line: 379, column: 17, scope: !18494)
!18494 = distinct !DILexicalBlock(scope: !18490, file: !2312, line: 378, column: 58)
!18495 = !DILocation(line: 380, column: 17, scope: !18494)
!18496 = !DILocation(line: 384, column: 19, scope: !18497)
!18497 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 384, column: 13)
!18498 = !DILocation(line: 384, column: 17, scope: !18497)
!18499 = !DILocation(line: 384, column: 40, scope: !18497)
!18500 = !DILocation(line: 384, column: 13, scope: !18451)
!18501 = !DILocation(line: 385, column: 17, scope: !18497)
!18502 = !DILocation(line: 386, column: 16, scope: !18451)
!18503 = !DILocation(line: 386, column: 9, scope: !18451)
!18504 = !DILocation(line: 387, column: 26, scope: !18451)
!18505 = !DILocation(line: 387, column: 9, scope: !18451)
!18506 = !DILocation(line: 387, column: 13, scope: !18451)
!18507 = !DILocation(line: 387, column: 24, scope: !18451)
!18508 = !{!3827, !2999, i64 64}
!18509 = !DILocation(line: 388, column: 27, scope: !18451)
!18510 = !DILocation(line: 388, column: 9, scope: !18451)
!18511 = !DILocation(line: 388, column: 13, scope: !18451)
!18512 = !DILocation(line: 388, column: 25, scope: !18451)
!18513 = !DILocation(line: 391, column: 13, scope: !18514)
!18514 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 391, column: 13)
!18515 = !DILocation(line: 391, column: 13, scope: !18451)
!18516 = !DILocation(line: 392, column: 17, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18514, file: !2312, line: 391, column: 33)
!18518 = !DILocation(line: 393, column: 17, scope: !18517)
!18519 = !DILocation(line: 394, column: 9, scope: !18517)
!18520 = !DILocation(line: 397, column: 9, scope: !18451)
!18521 = !DILocation(line: 397, column: 13, scope: !18451)
!18522 = !DILocation(line: 397, column: 24, scope: !18451)
!18523 = !DILocation(line: 398, column: 14, scope: !18524)
!18524 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 398, column: 14)
!18525 = !DILocation(line: 398, column: 31, scope: !18524)
!18526 = !DILocation(line: 398, column: 14, scope: !18451)
!18527 = !DILocalVariable(name: "fd", scope: !18528, file: !2312, line: 404, type: !7)
!18528 = distinct !DILexicalBlock(scope: !18524, file: !2312, line: 399, column: 11)
!18529 = !DILocation(line: 404, column: 17, scope: !18528)
!18530 = !DILocation(line: 404, column: 22, scope: !18528)
!18531 = !DILocation(line: 405, column: 17, scope: !18532)
!18532 = distinct !DILexicalBlock(scope: !18528, file: !2312, line: 405, column: 17)
!18533 = !DILocation(line: 405, column: 20, scope: !18532)
!18534 = !DILocation(line: 405, column: 17, scope: !18528)
!18535 = !DILocation(line: 423, column: 15, scope: !18536)
!18536 = distinct !DILexicalBlock(scope: !18532, file: !2312, line: 406, column: 15)
!18537 = !DILocation(line: 426, column: 24, scope: !18538)
!18538 = distinct !DILexicalBlock(scope: !18532, file: !2312, line: 425, column: 15)
!18539 = !DILocation(line: 426, column: 17, scope: !18538)
!18540 = !DILocation(line: 428, column: 11, scope: !18528)
!18541 = !DILocalVariable(name: "maxarglen", scope: !18542, file: !2312, line: 438, type: !55)
!18542 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 437, column: 9)
!18543 = !DILocation(line: 438, column: 18, scope: !18542)
!18544 = !DILocation(line: 438, column: 44, scope: !18542)
!18545 = !DILocation(line: 438, column: 30, scope: !18542)
!18546 = !DILocation(line: 439, column: 28, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18542, file: !2312, line: 439, column: 15)
!18548 = !DILocation(line: 439, column: 32, scope: !18547)
!18549 = !DILocation(line: 439, column: 17, scope: !18547)
!18550 = !DILocation(line: 439, column: 15, scope: !18542)
!18551 = !DILocation(line: 440, column: 19, scope: !18547)
!18552 = !DILocation(line: 444, column: 14, scope: !18553)
!18553 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 444, column: 13)
!18554 = !DILocation(line: 444, column: 13, scope: !18553)
!18555 = !DILocation(line: 444, column: 19, scope: !18553)
!18556 = !DILocation(line: 444, column: 13, scope: !18451)
!18557 = !DILocation(line: 445, column: 41, scope: !18558)
!18558 = distinct !DILexicalBlock(scope: !18559, file: !2312, line: 445, column: 21)
!18559 = distinct !DILexicalBlock(scope: !18553, file: !2312, line: 444, column: 28)
!18560 = !DILocation(line: 445, column: 31, scope: !18558)
!18561 = !DILocation(line: 445, column: 29, scope: !18558)
!18562 = !DILocation(line: 445, column: 53, scope: !18558)
!18563 = !DILocation(line: 445, column: 21, scope: !18559)
!18564 = !DILocation(line: 446, column: 25, scope: !18558)
!18565 = !DILocation(line: 447, column: 17, scope: !18559)
!18566 = !DILocation(line: 447, column: 25, scope: !18559)
!18567 = !DILocation(line: 447, column: 35, scope: !18559)
!18568 = !DILocation(line: 448, column: 17, scope: !18559)
!18569 = !DILocation(line: 448, column: 25, scope: !18559)
!18570 = !DILocation(line: 448, column: 46, scope: !18559)
!18571 = !DILocation(line: 449, column: 11, scope: !18559)
!18572 = !DILocation(line: 462, column: 23, scope: !18451)
!18573 = !DILocation(line: 462, column: 30, scope: !18451)
!18574 = !DILocation(line: 462, column: 38, scope: !18451)
!18575 = !DILocation(line: 462, column: 41, scope: !18451)
!18576 = !DILocation(line: 462, column: 20, scope: !18451)
!18577 = !DILocation(line: 465, column: 19, scope: !18578)
!18578 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 465, column: 9)
!18579 = !DILocation(line: 465, column: 34, scope: !18578)
!18580 = !DILocation(line: 465, column: 14, scope: !18578)
!18581 = !DILocation(line: 465, column: 40, scope: !18582)
!18582 = distinct !DILexicalBlock(scope: !18578, file: !2312, line: 465, column: 9)
!18583 = !DILocation(line: 465, column: 39, scope: !18582)
!18584 = !DILocation(line: 465, column: 45, scope: !18582)
!18585 = !DILocation(line: 465, column: 9, scope: !18578)
!18586 = !DILocalVariable(name: "len", scope: !18587, file: !2312, line: 467, type: !55)
!18587 = distinct !DILexicalBlock(scope: !18582, file: !2312, line: 465, column: 72)
!18588 = !DILocation(line: 467, column: 24, scope: !18587)
!18589 = !DILocation(line: 467, column: 38, scope: !18587)
!18590 = !DILocation(line: 467, column: 37, scope: !18587)
!18591 = !DILocation(line: 467, column: 30, scope: !18587)
!18592 = !DILocation(line: 469, column: 25, scope: !18593)
!18593 = distinct !DILexicalBlock(scope: !18587, file: !2312, line: 469, column: 22)
!18594 = !DILocation(line: 469, column: 33, scope: !18593)
!18595 = !DILocation(line: 469, column: 22, scope: !18587)
!18596 = !DILocalVariable(name: "v", scope: !18597, file: !2312, line: 473, type: !115)
!18597 = distinct !DILexicalBlock(scope: !18593, file: !2312, line: 470, column: 19)
!18598 = !DILocation(line: 473, column: 33, scope: !18597)
!18599 = !DILocation(line: 473, column: 38, scope: !18597)
!18600 = !DILocation(line: 473, column: 37, scope: !18597)
!18601 = !DILocation(line: 474, column: 29, scope: !18602)
!18602 = distinct !DILexicalBlock(scope: !18597, file: !2312, line: 474, column: 25)
!18603 = !DILocation(line: 474, column: 27, scope: !18602)
!18604 = !DILocation(line: 474, column: 33, scope: !18602)
!18605 = !DILocation(line: 474, column: 36, scope: !18602)
!18606 = !DILocation(line: 474, column: 38, scope: !18602)
!18607 = !DILocation(line: 474, column: 42, scope: !18602)
!18608 = !DILocation(line: 474, column: 47, scope: !18602)
!18609 = !DILocation(line: 474, column: 25, scope: !18597)
!18610 = !DILocation(line: 475, column: 23, scope: !18602)
!18611 = !DILocation(line: 475, column: 34, scope: !18602)
!18612 = !DILocation(line: 475, column: 32, scope: !18602)
!18613 = !DILocation(line: 475, column: 38, scope: !18602)
!18614 = !DILocation(line: 475, column: 41, scope: !18602)
!18615 = !DILocation(line: 475, column: 43, scope: !18602)
!18616 = !DILocation(line: 475, column: 47, scope: !18602)
!18617 = !DILocation(line: 475, column: 52, scope: !18602)
!18618 = !DILocation(line: 0, scope: !18602)
!18619 = !DILocation(line: 476, column: 25, scope: !18602)
!18620 = distinct !{!18620, !18610, !18621}
!18621 = !DILocation(line: 476, column: 27, scope: !18602)
!18622 = !DILocation(line: 477, column: 19, scope: !18597)
!18623 = !DILocation(line: 479, column: 36, scope: !18624)
!18624 = distinct !DILexicalBlock(scope: !18587, file: !2312, line: 479, column: 21)
!18625 = !DILocation(line: 479, column: 41, scope: !18624)
!18626 = !DILocation(line: 479, column: 40, scope: !18624)
!18627 = !DILocation(line: 479, column: 47, scope: !18624)
!18628 = !DILocation(line: 479, column: 26, scope: !18624)
!18629 = !DILocation(line: 479, column: 24, scope: !18624)
!18630 = !DILocation(line: 479, column: 53, scope: !18624)
!18631 = !DILocation(line: 479, column: 21, scope: !18587)
!18632 = !DILocation(line: 480, column: 25, scope: !18624)
!18633 = !DILocation(line: 481, column: 17, scope: !18587)
!18634 = !DILocation(line: 481, column: 20, scope: !18587)
!18635 = !DILocation(line: 481, column: 30, scope: !18587)
!18636 = !DILocation(line: 482, column: 33, scope: !18587)
!18637 = !DILocation(line: 482, column: 17, scope: !18587)
!18638 = !DILocation(line: 482, column: 20, scope: !18587)
!18639 = !DILocation(line: 482, column: 31, scope: !18587)
!18640 = !DILocation(line: 483, column: 34, scope: !18587)
!18641 = !DILocation(line: 483, column: 37, scope: !18587)
!18642 = !DILocation(line: 483, column: 17, scope: !18587)
!18643 = !DILocation(line: 483, column: 20, scope: !18587)
!18644 = !DILocation(line: 483, column: 32, scope: !18587)
!18645 = !DILocation(line: 487, column: 21, scope: !18646)
!18646 = distinct !DILexicalBlock(scope: !18587, file: !2312, line: 487, column: 21)
!18647 = !DILocation(line: 487, column: 32, scope: !18646)
!18648 = !DILocation(line: 487, column: 35, scope: !18646)
!18649 = !DILocation(line: 487, column: 40, scope: !18646)
!18650 = !DILocation(line: 487, column: 21, scope: !18587)
!18651 = !DILocation(line: 488, column: 25, scope: !18652)
!18652 = distinct !DILexicalBlock(scope: !18646, file: !2312, line: 487, column: 49)
!18653 = !DILocation(line: 488, column: 28, scope: !18652)
!18654 = !DILocation(line: 488, column: 37, scope: !18652)
!18655 = !DILocation(line: 489, column: 47, scope: !18652)
!18656 = !DILocation(line: 489, column: 25, scope: !18652)
!18657 = !DILocation(line: 490, column: 17, scope: !18652)
!18658 = !DILocation(line: 491, column: 48, scope: !18659)
!18659 = distinct !DILexicalBlock(scope: !18646, file: !2312, line: 490, column: 24)
!18660 = !DILocation(line: 491, column: 52, scope: !18659)
!18661 = !DILocation(line: 491, column: 39, scope: !18659)
!18662 = !DILocation(line: 491, column: 25, scope: !18659)
!18663 = !DILocation(line: 491, column: 28, scope: !18659)
!18664 = !DILocation(line: 491, column: 37, scope: !18659)
!18665 = !DILocation(line: 498, column: 21, scope: !18666)
!18666 = distinct !DILexicalBlock(scope: !18587, file: !2312, line: 498, column: 21)
!18667 = !DILocation(line: 498, column: 21, scope: !18587)
!18668 = !DILocation(line: 499, column: 39, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18666, file: !2312, line: 498, column: 29)
!18670 = !DILocation(line: 499, column: 25, scope: !18669)
!18671 = !DILocation(line: 499, column: 28, scope: !18669)
!18672 = !DILocation(line: 499, column: 37, scope: !18669)
!18673 = !DILocation(line: 500, column: 32, scope: !18669)
!18674 = !DILocation(line: 500, column: 30, scope: !18669)
!18675 = !DILocation(line: 501, column: 17, scope: !18669)
!18676 = !DILocation(line: 502, column: 25, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18666, file: !2312, line: 501, column: 24)
!18678 = !DILocation(line: 502, column: 28, scope: !18677)
!18679 = !DILocation(line: 502, column: 37, scope: !18677)
!18680 = !DILocation(line: 503, column: 29, scope: !18681)
!18681 = distinct !DILexicalBlock(scope: !18677, file: !2312, line: 503, column: 29)
!18682 = !DILocation(line: 503, column: 34, scope: !18681)
!18683 = !DILocation(line: 503, column: 29, scope: !18677)
!18684 = !DILocation(line: 504, column: 46, scope: !18681)
!18685 = !DILocation(line: 504, column: 44, scope: !18681)
!18686 = !DILocation(line: 504, column: 37, scope: !18681)
!18687 = !DILocation(line: 504, column: 33, scope: !18681)
!18688 = !DILocation(line: 506, column: 49, scope: !18689)
!18689 = distinct !DILexicalBlock(scope: !18681, file: !2312, line: 505, column: 30)
!18690 = !DILocation(line: 506, column: 33, scope: !18689)
!18691 = !DILocation(line: 506, column: 38, scope: !18689)
!18692 = !DILocation(line: 506, column: 47, scope: !18689)
!18693 = !DILocation(line: 507, column: 39, scope: !18689)
!18694 = !DILocation(line: 507, column: 37, scope: !18689)
!18695 = !DILocation(line: 510, column: 9, scope: !18587)
!18696 = !DILocation(line: 465, column: 54, scope: !18582)
!18697 = !DILocation(line: 465, column: 62, scope: !18582)
!18698 = !DILocation(line: 465, column: 9, scope: !18582)
!18699 = distinct !{!18699, !18585, !18700}
!18700 = !DILocation(line: 510, column: 9, scope: !18578)
!18701 = !DILocation(line: 511, column: 13, scope: !18702)
!18702 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 511, column: 13)
!18703 = !DILocation(line: 511, column: 20, scope: !18702)
!18704 = !DILocation(line: 511, column: 23, scope: !18702)
!18705 = !DILocation(line: 511, column: 30, scope: !18702)
!18706 = !DILocation(line: 511, column: 13, scope: !18451)
!18707 = !DILocation(line: 512, column: 33, scope: !18702)
!18708 = !DILocation(line: 512, column: 37, scope: !18702)
!18709 = !DILocation(line: 512, column: 43, scope: !18702)
!18710 = !DILocation(line: 512, column: 24, scope: !18702)
!18711 = !DILocation(line: 512, column: 22, scope: !18702)
!18712 = !DILocation(line: 512, column: 17, scope: !18702)
!18713 = !DILocation(line: 519, column: 38, scope: !18714)
!18714 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 519, column: 13)
!18715 = !DILocation(line: 519, column: 28, scope: !18714)
!18716 = !DILocation(line: 519, column: 14, scope: !18714)
!18717 = !DILocation(line: 519, column: 18, scope: !18714)
!18718 = !DILocation(line: 519, column: 26, scope: !18714)
!18719 = !{!3827, !2999, i64 0}
!18720 = !DILocation(line: 519, column: 50, scope: !18714)
!18721 = !DILocation(line: 519, column: 13, scope: !18451)
!18722 = !DILocation(line: 520, column: 17, scope: !18714)
!18723 = !DILocation(line: 521, column: 33, scope: !18451)
!18724 = !DILocation(line: 521, column: 9, scope: !18451)
!18725 = !DILocation(line: 521, column: 13, scope: !18451)
!18726 = !DILocation(line: 521, column: 22, scope: !18451)
!18727 = !DILocation(line: 521, column: 31, scope: !18451)
!18728 = !DILocation(line: 522, column: 9, scope: !18451)
!18729 = !DILocation(line: 522, column: 13, scope: !18451)
!18730 = !DILocation(line: 522, column: 22, scope: !18451)
!18731 = !DILocation(line: 522, column: 31, scope: !18451)
!18732 = !DILocation(line: 523, column: 9, scope: !18451)
!18733 = !DILocation(line: 523, column: 13, scope: !18451)
!18734 = !DILocation(line: 523, column: 22, scope: !18451)
!18735 = !DILocation(line: 523, column: 32, scope: !18451)
!18736 = !DILocation(line: 524, column: 26, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 524, column: 13)
!18738 = !DILocation(line: 524, column: 15, scope: !18737)
!18739 = !DILocation(line: 524, column: 13, scope: !18451)
!18740 = !DILocation(line: 525, column: 17, scope: !18737)
!18741 = !DILocation(line: 534, column: 14, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18451, file: !2312, line: 534, column: 13)
!18743 = !DILocation(line: 534, column: 33, scope: !18742)
!18744 = !DILocation(line: 534, column: 37, scope: !18742)
!18745 = !DILocation(line: 535, column: 13, scope: !18742)
!18746 = !DILocation(line: 535, column: 40, scope: !18742)
!18747 = !DILocation(line: 535, column: 31, scope: !18742)
!18748 = !DILocation(line: 535, column: 17, scope: !18742)
!18749 = !DILocation(line: 535, column: 21, scope: !18742)
!18750 = !DILocation(line: 535, column: 29, scope: !18742)
!18751 = !{!3827, !2986, i64 40}
!18752 = !DILocation(line: 535, column: 50, scope: !18742)
!18753 = !DILocation(line: 534, column: 13, scope: !18451)
!18754 = !DILocation(line: 536, column: 17, scope: !18742)
!18755 = !DILocation(line: 538, column: 23, scope: !18451)
!18756 = !DILocation(line: 538, column: 27, scope: !18451)
!18757 = !DILocation(line: 538, column: 9, scope: !18451)
!18758 = !DILocation(line: 539, column: 17, scope: !18451)
!18759 = !DILocation(line: 539, column: 9, scope: !18451)
!18760 = !DILabel(scope: !18451, name: "mem3", file: !2312, line: 541)
!18761 = !DILocation(line: 541, column: 1, scope: !18451)
!18762 = !DILocation(line: 541, column: 19, scope: !18451)
!18763 = !DILocation(line: 541, column: 9, scope: !18451)
!18764 = !DILocation(line: 542, column: 14, scope: !18451)
!18765 = !DILocation(line: 542, column: 9, scope: !18451)
!18766 = !DILabel(scope: !18451, name: "mem2", file: !2312, line: 543)
!18767 = !DILocation(line: 543, column: 1, scope: !18451)
!18768 = !DILocation(line: 543, column: 14, scope: !18451)
!18769 = !DILocation(line: 543, column: 18, scope: !18451)
!18770 = !{!3827, !2999, i64 32}
!18771 = !DILocation(line: 543, column: 9, scope: !18451)
!18772 = !DILabel(scope: !18451, name: "mem1", file: !2312, line: 544)
!18773 = !DILocation(line: 544, column: 1, scope: !18451)
!18774 = !DILocation(line: 544, column: 14, scope: !18451)
!18775 = !DILocation(line: 544, column: 9, scope: !18451)
!18776 = !DILocation(line: 545, column: 9, scope: !18451)
!18777 = !DILocation(line: 546, column: 1, scope: !18451)
!18778 = distinct !DISubprogram(name: "fts_maxarglen", scope: !2312, file: !2312, line: 2022, type: !2498, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!18779 = !DILocalVariable(name: "argv", arg: 1, scope: !18778, file: !2312, line: 2022, type: !1339)
!18780 = !DILocation(line: 2022, column: 30, scope: !18778)
!18781 = !DILocalVariable(name: "len", scope: !18778, file: !2312, line: 2024, type: !55)
!18782 = !DILocation(line: 2024, column: 16, scope: !18778)
!18783 = !DILocalVariable(name: "max", scope: !18778, file: !2312, line: 2024, type: !55)
!18784 = !DILocation(line: 2024, column: 21, scope: !18778)
!18785 = !DILocation(line: 2026, column: 18, scope: !18786)
!18786 = distinct !DILexicalBlock(scope: !18778, file: !2312, line: 2026, column: 9)
!18787 = !DILocation(line: 2026, column: 14, scope: !18786)
!18788 = !DILocation(line: 2026, column: 24, scope: !18789)
!18789 = distinct !DILexicalBlock(scope: !18786, file: !2312, line: 2026, column: 9)
!18790 = !DILocation(line: 2026, column: 23, scope: !18789)
!18791 = !DILocation(line: 2026, column: 9, scope: !18786)
!18792 = !DILocation(line: 2027, column: 36, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18789, file: !2312, line: 2027, column: 21)
!18794 = !DILocation(line: 2027, column: 35, scope: !18793)
!18795 = !DILocation(line: 2027, column: 28, scope: !18793)
!18796 = !DILocation(line: 2027, column: 26, scope: !18793)
!18797 = !DILocation(line: 2027, column: 45, scope: !18793)
!18798 = !DILocation(line: 2027, column: 43, scope: !18793)
!18799 = !DILocation(line: 2027, column: 21, scope: !18789)
!18800 = !DILocation(line: 2028, column: 31, scope: !18793)
!18801 = !DILocation(line: 2028, column: 29, scope: !18793)
!18802 = !DILocation(line: 2028, column: 25, scope: !18793)
!18803 = !DILocation(line: 2026, column: 30, scope: !18789)
!18804 = !DILocation(line: 2026, column: 9, scope: !18789)
!18805 = distinct !{!18805, !18791, !18806}
!18806 = !DILocation(line: 2028, column: 31, scope: !18786)
!18807 = !DILocation(line: 2029, column: 17, scope: !18778)
!18808 = !DILocation(line: 2029, column: 21, scope: !18778)
!18809 = !DILocation(line: 2029, column: 9, scope: !18778)
!18810 = distinct !DISubprogram(name: "fts_palloc", scope: !2312, file: !2312, line: 1966, type: !2496, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!18811 = !DILocalVariable(name: "sp", arg: 1, scope: !18810, file: !2312, line: 1966, type: !2337)
!18812 = !DILocation(line: 1966, column: 18, scope: !18810)
!18813 = !DILocalVariable(name: "more", arg: 2, scope: !18810, file: !2312, line: 1966, type: !55)
!18814 = !DILocation(line: 1966, column: 29, scope: !18810)
!18815 = !DILocalVariable(name: "p", scope: !18810, file: !2312, line: 1968, type: !9)
!18816 = !DILocation(line: 1968, column: 15, scope: !18810)
!18817 = !DILocalVariable(name: "new_len", scope: !18810, file: !2312, line: 1969, type: !55)
!18818 = !DILocation(line: 1969, column: 16, scope: !18810)
!18819 = !DILocation(line: 1969, column: 26, scope: !18810)
!18820 = !DILocation(line: 1969, column: 30, scope: !18810)
!18821 = !{!3827, !3183, i64 48}
!18822 = !DILocation(line: 1969, column: 44, scope: !18810)
!18823 = !DILocation(line: 1969, column: 42, scope: !18810)
!18824 = !DILocation(line: 1969, column: 49, scope: !18810)
!18825 = !DILocation(line: 1974, column: 13, scope: !18826)
!18826 = distinct !DILexicalBlock(scope: !18810, file: !2312, line: 1974, column: 13)
!18827 = !DILocation(line: 1974, column: 23, scope: !18826)
!18828 = !DILocation(line: 1974, column: 27, scope: !18826)
!18829 = !DILocation(line: 1974, column: 21, scope: !18826)
!18830 = !DILocation(line: 1974, column: 13, scope: !18810)
!18831 = !DILocation(line: 1975, column: 22, scope: !18832)
!18832 = distinct !DILexicalBlock(scope: !18826, file: !2312, line: 1974, column: 40)
!18833 = !DILocation(line: 1975, column: 26, scope: !18832)
!18834 = !DILocation(line: 1975, column: 17, scope: !18832)
!18835 = !DILocation(line: 1976, column: 17, scope: !18832)
!18836 = !DILocation(line: 1976, column: 21, scope: !18832)
!18837 = !DILocation(line: 1976, column: 30, scope: !18832)
!18838 = !DILocation(line: 1977, column: 17, scope: !18832)
!18839 = !DILocation(line: 1978, column: 17, scope: !18832)
!18840 = !DILocation(line: 1980, column: 27, scope: !18810)
!18841 = !DILocation(line: 1980, column: 9, scope: !18810)
!18842 = !DILocation(line: 1980, column: 13, scope: !18810)
!18843 = !DILocation(line: 1980, column: 25, scope: !18810)
!18844 = !DILocation(line: 1981, column: 21, scope: !18810)
!18845 = !DILocation(line: 1981, column: 25, scope: !18810)
!18846 = !DILocation(line: 1981, column: 35, scope: !18810)
!18847 = !DILocation(line: 1981, column: 39, scope: !18810)
!18848 = !DILocation(line: 1981, column: 13, scope: !18810)
!18849 = !DILocation(line: 1981, column: 11, scope: !18810)
!18850 = !DILocation(line: 1982, column: 13, scope: !18851)
!18851 = distinct !DILexicalBlock(scope: !18810, file: !2312, line: 1982, column: 13)
!18852 = !DILocation(line: 1982, column: 15, scope: !18851)
!18853 = !DILocation(line: 1982, column: 13, scope: !18810)
!18854 = !DILocation(line: 1983, column: 22, scope: !18855)
!18855 = distinct !DILexicalBlock(scope: !18851, file: !2312, line: 1982, column: 24)
!18856 = !DILocation(line: 1983, column: 26, scope: !18855)
!18857 = !DILocation(line: 1983, column: 17, scope: !18855)
!18858 = !DILocation(line: 1984, column: 17, scope: !18855)
!18859 = !DILocation(line: 1984, column: 21, scope: !18855)
!18860 = !DILocation(line: 1984, column: 30, scope: !18855)
!18861 = !DILocation(line: 1985, column: 17, scope: !18855)
!18862 = !DILocation(line: 1987, column: 24, scope: !18810)
!18863 = !DILocation(line: 1987, column: 9, scope: !18810)
!18864 = !DILocation(line: 1987, column: 13, scope: !18810)
!18865 = !DILocation(line: 1987, column: 22, scope: !18810)
!18866 = !DILocation(line: 1988, column: 9, scope: !18810)
!18867 = !DILocation(line: 1989, column: 1, scope: !18810)
!18868 = distinct !DISubprogram(name: "fts_alloc", scope: !2312, file: !2312, line: 1913, type: !2492, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!18869 = !DILocalVariable(name: "sp", arg: 1, scope: !18868, file: !2312, line: 1913, type: !2337)
!18870 = !DILocation(line: 1913, column: 17, scope: !18868)
!18871 = !DILocalVariable(name: "name", arg: 2, scope: !18868, file: !2312, line: 1913, type: !115)
!18872 = !DILocation(line: 1913, column: 33, scope: !18868)
!18873 = !DILocalVariable(name: "namelen", arg: 3, scope: !18868, file: !2312, line: 1913, type: !55)
!18874 = !DILocation(line: 1913, column: 55, scope: !18868)
!18875 = !DILocalVariable(name: "p", scope: !18868, file: !2312, line: 1915, type: !2420)
!18876 = !DILocation(line: 1915, column: 26, scope: !18868)
!18877 = !DILocalVariable(name: "len", scope: !18868, file: !2312, line: 1916, type: !55)
!18878 = !DILocation(line: 1916, column: 16, scope: !18868)
!18879 = !DILocation(line: 1922, column: 15, scope: !18868)
!18880 = !DILocation(line: 1922, column: 13, scope: !18868)
!18881 = !DILocation(line: 1923, column: 25, scope: !18882)
!18882 = distinct !DILexicalBlock(scope: !18868, file: !2312, line: 1923, column: 13)
!18883 = !DILocation(line: 1923, column: 18, scope: !18882)
!18884 = !DILocation(line: 1923, column: 16, scope: !18882)
!18885 = !DILocation(line: 1923, column: 31, scope: !18882)
!18886 = !DILocation(line: 1923, column: 13, scope: !18868)
!18887 = !DILocation(line: 1924, column: 17, scope: !18882)
!18888 = !DILocation(line: 1927, column: 16, scope: !18868)
!18889 = !DILocation(line: 1927, column: 19, scope: !18868)
!18890 = !DILocation(line: 1927, column: 9, scope: !18868)
!18891 = !DILocation(line: 1927, column: 29, scope: !18868)
!18892 = !DILocation(line: 1927, column: 35, scope: !18868)
!18893 = !DILocation(line: 1928, column: 9, scope: !18868)
!18894 = !DILocation(line: 1928, column: 12, scope: !18868)
!18895 = !DILocation(line: 1928, column: 21, scope: !18868)
!18896 = !DILocation(line: 1928, column: 30, scope: !18868)
!18897 = !DILocation(line: 1930, column: 26, scope: !18868)
!18898 = !DILocation(line: 1930, column: 9, scope: !18868)
!18899 = !DILocation(line: 1930, column: 12, scope: !18868)
!18900 = !DILocation(line: 1930, column: 24, scope: !18868)
!18901 = !DILocation(line: 1931, column: 22, scope: !18868)
!18902 = !DILocation(line: 1931, column: 9, scope: !18868)
!18903 = !DILocation(line: 1931, column: 12, scope: !18868)
!18904 = !DILocation(line: 1931, column: 20, scope: !18868)
!18905 = !DILocation(line: 1932, column: 23, scope: !18868)
!18906 = !DILocation(line: 1932, column: 27, scope: !18868)
!18907 = !DILocation(line: 1932, column: 9, scope: !18868)
!18908 = !DILocation(line: 1932, column: 12, scope: !18868)
!18909 = !DILocation(line: 1932, column: 21, scope: !18868)
!18910 = !DILocation(line: 1933, column: 9, scope: !18868)
!18911 = !DILocation(line: 1933, column: 12, scope: !18868)
!18912 = !DILocation(line: 1933, column: 22, scope: !18868)
!18913 = !DILocation(line: 1934, column: 9, scope: !18868)
!18914 = !DILocation(line: 1934, column: 12, scope: !18868)
!18915 = !DILocation(line: 1934, column: 21, scope: !18868)
!18916 = !DILocation(line: 1935, column: 9, scope: !18868)
!18917 = !DILocation(line: 1935, column: 12, scope: !18868)
!18918 = !DILocation(line: 1935, column: 22, scope: !18868)
!18919 = !DILocation(line: 1936, column: 9, scope: !18868)
!18920 = !DILocation(line: 1936, column: 12, scope: !18868)
!18921 = !DILocation(line: 1936, column: 22, scope: !18868)
!18922 = !DILocation(line: 1937, column: 9, scope: !18868)
!18923 = !DILocation(line: 1937, column: 12, scope: !18868)
!18924 = !DILocation(line: 1937, column: 23, scope: !18868)
!18925 = !DILocation(line: 1938, column: 9, scope: !18868)
!18926 = !DILocation(line: 1938, column: 12, scope: !18868)
!18927 = !DILocation(line: 1938, column: 24, scope: !18868)
!18928 = !DILocation(line: 1939, column: 17, scope: !18868)
!18929 = !DILocation(line: 1939, column: 9, scope: !18868)
!18930 = !DILocation(line: 1940, column: 1, scope: !18868)
!18931 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !2312, file: !2312, line: 290, type: !2429, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!18932 = !DILocalVariable(name: "p", arg: 1, scope: !18931, file: !2312, line: 290, type: !2420)
!18933 = !DILocation(line: 290, column: 32, scope: !18931)
!18934 = !DILocalVariable(name: "required", arg: 2, scope: !18931, file: !2312, line: 290, type: !120)
!18935 = !DILocation(line: 290, column: 40, scope: !18931)
!18936 = !DILocation(line: 292, column: 3, scope: !18931)
!18937 = !DILocation(line: 292, column: 3, scope: !18938)
!18938 = distinct !DILexicalBlock(scope: !18939, file: !2312, line: 292, column: 3)
!18939 = distinct !DILexicalBlock(scope: !18931, file: !2312, line: 292, column: 3)
!18940 = !DILocation(line: 292, column: 3, scope: !18939)
!18941 = !DILocation(line: 293, column: 28, scope: !18931)
!18942 = !DILocation(line: 293, column: 27, scope: !18931)
!18943 = !DILocation(line: 293, column: 3, scope: !18931)
!18944 = !DILocation(line: 293, column: 6, scope: !18931)
!18945 = !DILocation(line: 293, column: 17, scope: !18931)
!18946 = !DILocation(line: 293, column: 25, scope: !18931)
!18947 = !DILocation(line: 296, column: 1, scope: !18931)
!18948 = distinct !DISubprogram(name: "fts_stat", scope: !2312, file: !2312, line: 1799, type: !2487, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!18949 = !DILocalVariable(name: "sp", arg: 1, scope: !18948, file: !2312, line: 1799, type: !2337)
!18950 = !DILocation(line: 1799, column: 15, scope: !18948)
!18951 = !DILocalVariable(name: "p", arg: 2, scope: !18948, file: !2312, line: 1799, type: !2420)
!18952 = !DILocation(line: 1799, column: 36, scope: !18948)
!18953 = !DILocalVariable(name: "follow", arg: 3, scope: !18948, file: !2312, line: 1799, type: !120)
!18954 = !DILocation(line: 1799, column: 44, scope: !18948)
!18955 = !DILocalVariable(name: "sbp", scope: !18948, file: !2312, line: 1801, type: !2484)
!18956 = !DILocation(line: 1801, column: 22, scope: !18948)
!18957 = !DILocation(line: 1801, column: 28, scope: !18948)
!18958 = !DILocation(line: 1801, column: 31, scope: !18948)
!18959 = !DILocation(line: 1803, column: 13, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18948, file: !2312, line: 1803, column: 13)
!18961 = !DILocation(line: 1803, column: 16, scope: !18960)
!18962 = !DILocation(line: 1803, column: 26, scope: !18960)
!18963 = !DILocation(line: 1803, column: 43, scope: !18960)
!18964 = !DILocation(line: 1803, column: 46, scope: !18960)
!18965 = !DILocation(line: 1803, column: 13, scope: !18948)
!18966 = !DILocation(line: 1804, column: 24, scope: !18960)
!18967 = !DILocation(line: 1804, column: 17, scope: !18960)
!18968 = !DILocation(line: 1811, column: 13, scope: !18969)
!18969 = distinct !DILexicalBlock(scope: !18948, file: !2312, line: 1811, column: 13)
!18970 = !DILocation(line: 1811, column: 32, scope: !18969)
!18971 = !DILocation(line: 1811, column: 35, scope: !18969)
!18972 = !DILocation(line: 1811, column: 13, scope: !18948)
!18973 = !DILocation(line: 1812, column: 26, scope: !18974)
!18974 = distinct !DILexicalBlock(scope: !18975, file: !2312, line: 1812, column: 21)
!18975 = distinct !DILexicalBlock(scope: !18969, file: !2312, line: 1811, column: 43)
!18976 = !DILocation(line: 1812, column: 29, scope: !18974)
!18977 = !DILocation(line: 1812, column: 42, scope: !18974)
!18978 = !DILocation(line: 1812, column: 21, scope: !18974)
!18979 = !DILocation(line: 1812, column: 21, scope: !18975)
!18980 = !DILocation(line: 1813, column: 29, scope: !18981)
!18981 = distinct !DILexicalBlock(scope: !18982, file: !2312, line: 1813, column: 29)
!18982 = distinct !DILexicalBlock(scope: !18974, file: !2312, line: 1812, column: 48)
!18983 = !DILocation(line: 1813, column: 35, scope: !18981)
!18984 = !DILocation(line: 1814, column: 29, scope: !18981)
!18985 = !DILocation(line: 1814, column: 38, scope: !18981)
!18986 = !DILocation(line: 1814, column: 41, scope: !18981)
!18987 = !DILocation(line: 1814, column: 54, scope: !18981)
!18988 = !DILocation(line: 1814, column: 32, scope: !18981)
!18989 = !DILocation(line: 1814, column: 59, scope: !18981)
!18990 = !DILocation(line: 1813, column: 29, scope: !18982)
!18991 = !DILocation(line: 1815, column: 33, scope: !18992)
!18992 = distinct !DILexicalBlock(scope: !18981, file: !2312, line: 1814, column: 65)
!18993 = !DILocation(line: 1816, column: 33, scope: !18992)
!18994 = !DILocation(line: 1818, column: 40, scope: !18982)
!18995 = !DILocation(line: 1818, column: 25, scope: !18982)
!18996 = !DILocation(line: 1818, column: 28, scope: !18982)
!18997 = !DILocation(line: 1818, column: 38, scope: !18982)
!18998 = !DILocation(line: 1819, column: 25, scope: !18982)
!18999 = !DILocation(line: 1821, column: 9, scope: !18975)
!19000 = !DILocation(line: 1821, column: 28, scope: !19001)
!19001 = distinct !DILexicalBlock(scope: !18969, file: !2312, line: 1821, column: 20)
!19002 = !DILocation(line: 1821, column: 32, scope: !19001)
!19003 = !DILocation(line: 1821, column: 44, scope: !19001)
!19004 = !DILocation(line: 1821, column: 47, scope: !19001)
!19005 = !DILocation(line: 1821, column: 60, scope: !19001)
!19006 = !DILocation(line: 1821, column: 20, scope: !19001)
!19007 = !DILocation(line: 1821, column: 20, scope: !18969)
!19008 = !DILocation(line: 1823, column: 32, scope: !19009)
!19009 = distinct !DILexicalBlock(scope: !19001, file: !2312, line: 1822, column: 50)
!19010 = !DILocation(line: 1823, column: 17, scope: !19009)
!19011 = !DILocation(line: 1823, column: 20, scope: !19009)
!19012 = !DILocation(line: 1823, column: 30, scope: !19009)
!19013 = !DILabel(scope: !19009, name: "err", file: !2312, line: 1824)
!19014 = !DILocation(line: 1824, column: 1, scope: !19009)
!19015 = !DILocation(line: 1824, column: 24, scope: !19009)
!19016 = !DILocation(line: 1824, column: 17, scope: !19009)
!19017 = !DILocation(line: 1825, column: 17, scope: !19009)
!19018 = !DILocation(line: 1828, column: 13, scope: !19019)
!19019 = distinct !DILexicalBlock(scope: !18948, file: !2312, line: 1828, column: 13)
!19020 = !DILocation(line: 1828, column: 13, scope: !18948)
!19021 = !DILocation(line: 1830, column: 23, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !19019, file: !2312, line: 1828, column: 36)
!19023 = !DILocation(line: 1830, column: 28, scope: !19022)
!19024 = !DILocation(line: 1830, column: 37, scope: !19022)
!19025 = !DILocation(line: 1831, column: 23, scope: !19022)
!19026 = !DILocation(line: 1831, column: 26, scope: !19022)
!19027 = !DILocation(line: 1831, column: 29, scope: !19022)
!19028 = !DILocation(line: 1831, column: 39, scope: !19022)
!19029 = !DILocation(line: 1830, column: 22, scope: !19022)
!19030 = !DILocation(line: 1833, column: 24, scope: !19022)
!19031 = !DILocation(line: 1833, column: 29, scope: !19022)
!19032 = !DILocation(line: 1833, column: 41, scope: !19022)
!19033 = !DILocation(line: 1833, column: 40, scope: !19022)
!19034 = !DILocation(line: 1833, column: 38, scope: !19022)
!19035 = !DILocation(line: 1829, column: 17, scope: !19022)
!19036 = !DILocation(line: 1829, column: 20, scope: !19022)
!19037 = !DILocation(line: 1830, column: 19, scope: !19022)
!19038 = !DILocation(line: 1834, column: 21, scope: !19039)
!19039 = distinct !DILexicalBlock(scope: !19022, file: !2312, line: 1834, column: 21)
!19040 = !DILocation(line: 1834, column: 21, scope: !19022)
!19041 = !DILocation(line: 1836, column: 33, scope: !19042)
!19042 = distinct !DILexicalBlock(scope: !19039, file: !2312, line: 1834, column: 41)
!19043 = !DILocation(line: 1836, column: 36, scope: !19042)
!19044 = !DILocation(line: 1836, column: 46, scope: !19042)
!19045 = !DILocation(line: 1836, column: 32, scope: !19042)
!19046 = !DILocation(line: 1836, column: 25, scope: !19042)
!19047 = !DILocation(line: 1839, column: 17, scope: !19022)
!19048 = !DILocation(line: 1841, column: 13, scope: !19049)
!19049 = distinct !DILexicalBlock(scope: !18948, file: !2312, line: 1841, column: 13)
!19050 = !DILocation(line: 1841, column: 13, scope: !18948)
!19051 = !DILocation(line: 1842, column: 17, scope: !19049)
!19052 = !DILocation(line: 1843, column: 13, scope: !19053)
!19053 = distinct !DILexicalBlock(scope: !18948, file: !2312, line: 1843, column: 13)
!19054 = !DILocation(line: 1843, column: 13, scope: !18948)
!19055 = !DILocation(line: 1844, column: 17, scope: !19053)
!19056 = !DILocation(line: 1845, column: 9, scope: !18948)
!19057 = !DILocation(line: 1846, column: 1, scope: !18948)
!19058 = distinct !DISubprogram(name: "fts_sort", scope: !2312, file: !2312, line: 1863, type: !2489, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19059 = !DILocalVariable(name: "sp", arg: 1, scope: !19058, file: !2312, line: 1863, type: !2337)
!19060 = !DILocation(line: 1863, column: 16, scope: !19058)
!19061 = !DILocalVariable(name: "head", arg: 2, scope: !19058, file: !2312, line: 1863, type: !2420)
!19062 = !DILocation(line: 1863, column: 28, scope: !19058)
!19063 = !DILocalVariable(name: "nitems", arg: 3, scope: !19058, file: !2312, line: 1863, type: !55)
!19064 = !DILocation(line: 1863, column: 50, scope: !19058)
!19065 = !DILocalVariable(name: "ap", scope: !19058, file: !2312, line: 1865, type: !2491)
!19066 = !DILocation(line: 1865, column: 27, scope: !19058)
!19067 = !DILocalVariable(name: "p", scope: !19058, file: !2312, line: 1865, type: !2420)
!19068 = !DILocation(line: 1865, column: 32, scope: !19058)
!19069 = !DILocalVariable(name: "dummy", scope: !19058, file: !2312, line: 1874, type: !2420)
!19070 = !DILocation(line: 1874, column: 17, scope: !19058)
!19071 = !DILocalVariable(name: "compare", scope: !19058, file: !2312, line: 1875, type: !1089)
!19072 = !DILocation(line: 1875, column: 15, scope: !19058)
!19073 = !DILocation(line: 1877, column: 16, scope: !19058)
!19074 = !DILocation(line: 1877, column: 48, scope: !19058)
!19075 = !DILocation(line: 1877, column: 37, scope: !19058)
!19076 = !DILocation(line: 1877, column: 34, scope: !19058)
!19077 = !DILocation(line: 1876, column: 12, scope: !19058)
!19078 = !DILocation(line: 1878, column: 53, scope: !19058)
!19079 = !DILocation(line: 1878, column: 57, scope: !19058)
!19080 = !DILocation(line: 1878, column: 14, scope: !19058)
!19081 = !DILocation(line: 1888, column: 13, scope: !19082)
!19082 = distinct !DILexicalBlock(scope: !19058, file: !2312, line: 1888, column: 13)
!19083 = !DILocation(line: 1888, column: 22, scope: !19082)
!19084 = !DILocation(line: 1888, column: 26, scope: !19082)
!19085 = !{!3827, !3183, i64 56}
!19086 = !DILocation(line: 1888, column: 20, scope: !19082)
!19087 = !DILocation(line: 1888, column: 13, scope: !19058)
!19088 = !DILocalVariable(name: "a", scope: !19089, file: !2312, line: 1889, type: !2491)
!19089 = distinct !DILexicalBlock(scope: !19082, file: !2312, line: 1888, column: 38)
!19090 = !DILocation(line: 1889, column: 26, scope: !19089)
!19091 = !DILocation(line: 1891, column: 34, scope: !19089)
!19092 = !DILocation(line: 1891, column: 41, scope: !19089)
!19093 = !DILocation(line: 1891, column: 17, scope: !19089)
!19094 = !DILocation(line: 1891, column: 21, scope: !19089)
!19095 = !DILocation(line: 1891, column: 32, scope: !19089)
!19096 = !DILocation(line: 1892, column: 44, scope: !19097)
!19097 = distinct !DILexicalBlock(scope: !19089, file: !2312, line: 1892, column: 21)
!19098 = !DILocation(line: 1892, column: 48, scope: !19097)
!19099 = !DILocation(line: 1892, column: 42, scope: !19097)
!19100 = !DILocation(line: 1893, column: 21, scope: !19097)
!19101 = !DILocation(line: 1893, column: 40, scope: !19097)
!19102 = !DILocation(line: 1893, column: 44, scope: !19097)
!19103 = !{!3827, !2999, i64 16}
!19104 = !DILocation(line: 1894, column: 40, scope: !19097)
!19105 = !DILocation(line: 1894, column: 44, scope: !19097)
!19106 = !DILocation(line: 1894, column: 55, scope: !19097)
!19107 = !DILocation(line: 1893, column: 31, scope: !19097)
!19108 = !DILocation(line: 1893, column: 29, scope: !19097)
!19109 = !DILocation(line: 1892, column: 21, scope: !19089)
!19110 = !DILocation(line: 1895, column: 30, scope: !19111)
!19111 = distinct !DILexicalBlock(scope: !19097, file: !2312, line: 1894, column: 70)
!19112 = !DILocation(line: 1895, column: 34, scope: !19111)
!19113 = !DILocation(line: 1895, column: 25, scope: !19111)
!19114 = !DILocation(line: 1896, column: 25, scope: !19111)
!19115 = !DILocation(line: 1896, column: 29, scope: !19111)
!19116 = !DILocation(line: 1896, column: 39, scope: !19111)
!19117 = !DILocation(line: 1897, column: 25, scope: !19111)
!19118 = !DILocation(line: 1897, column: 29, scope: !19111)
!19119 = !DILocation(line: 1897, column: 40, scope: !19111)
!19120 = !DILocation(line: 1898, column: 33, scope: !19111)
!19121 = !DILocation(line: 1898, column: 25, scope: !19111)
!19122 = !DILocation(line: 1900, column: 33, scope: !19089)
!19123 = !DILocation(line: 1900, column: 17, scope: !19089)
!19124 = !DILocation(line: 1900, column: 21, scope: !19089)
!19125 = !DILocation(line: 1900, column: 31, scope: !19089)
!19126 = !DILocation(line: 1901, column: 9, scope: !19089)
!19127 = !DILocation(line: 1902, column: 19, scope: !19128)
!19128 = distinct !DILexicalBlock(scope: !19058, file: !2312, line: 1902, column: 9)
!19129 = !DILocation(line: 1902, column: 23, scope: !19128)
!19130 = !DILocation(line: 1902, column: 17, scope: !19128)
!19131 = !DILocation(line: 1902, column: 38, scope: !19128)
!19132 = !DILocation(line: 1902, column: 36, scope: !19128)
!19133 = !DILocation(line: 1902, column: 14, scope: !19128)
!19134 = !DILocation(line: 1902, column: 44, scope: !19135)
!19135 = distinct !DILexicalBlock(scope: !19128, file: !2312, line: 1902, column: 9)
!19136 = !DILocation(line: 1902, column: 9, scope: !19128)
!19137 = !DILocation(line: 1903, column: 25, scope: !19135)
!19138 = !DILocation(line: 1903, column: 20, scope: !19135)
!19139 = !DILocation(line: 1903, column: 23, scope: !19135)
!19140 = !DILocation(line: 1903, column: 17, scope: !19135)
!19141 = !DILocation(line: 1902, column: 51, scope: !19135)
!19142 = !DILocation(line: 1902, column: 54, scope: !19135)
!19143 = !DILocation(line: 1902, column: 49, scope: !19135)
!19144 = !DILocation(line: 1902, column: 9, scope: !19135)
!19145 = distinct !{!19145, !19136, !19146}
!19146 = !DILocation(line: 1903, column: 25, scope: !19128)
!19147 = !DILocation(line: 1904, column: 23, scope: !19058)
!19148 = !DILocation(line: 1904, column: 27, scope: !19058)
!19149 = !DILocation(line: 1904, column: 15, scope: !19058)
!19150 = !DILocation(line: 1904, column: 38, scope: !19058)
!19151 = !DILocation(line: 1904, column: 64, scope: !19058)
!19152 = !DILocation(line: 1904, column: 9, scope: !19058)
!19153 = !DILocation(line: 1905, column: 28, scope: !19154)
!19154 = distinct !DILexicalBlock(scope: !19058, file: !2312, line: 1905, column: 9)
!19155 = !DILocation(line: 1905, column: 32, scope: !19154)
!19156 = !DILocation(line: 1905, column: 26, scope: !19154)
!19157 = !DILocation(line: 1905, column: 21, scope: !19154)
!19158 = !DILocation(line: 1905, column: 19, scope: !19154)
!19159 = !DILocation(line: 1905, column: 14, scope: !19154)
!19160 = !DILocation(line: 1905, column: 44, scope: !19161)
!19161 = distinct !DILexicalBlock(scope: !19154, file: !2312, line: 1905, column: 9)
!19162 = !DILocation(line: 1905, column: 9, scope: !19154)
!19163 = !DILocation(line: 1906, column: 35, scope: !19161)
!19164 = !DILocation(line: 1906, column: 17, scope: !19161)
!19165 = !DILocation(line: 1906, column: 24, scope: !19161)
!19166 = !DILocation(line: 1906, column: 33, scope: !19161)
!19167 = !DILocation(line: 1905, column: 54, scope: !19161)
!19168 = !DILocation(line: 1905, column: 9, scope: !19161)
!19169 = distinct !{!19169, !19162, !19170}
!19170 = !DILocation(line: 1906, column: 39, scope: !19154)
!19171 = !DILocation(line: 1907, column: 9, scope: !19058)
!19172 = !DILocation(line: 1907, column: 16, scope: !19058)
!19173 = !DILocation(line: 1907, column: 25, scope: !19058)
!19174 = !DILocation(line: 1908, column: 17, scope: !19058)
!19175 = !DILocation(line: 1908, column: 9, scope: !19058)
!19176 = !DILocation(line: 1909, column: 1, scope: !19058)
!19177 = distinct !DISubprogram(name: "setup_dir", scope: !2436, file: !2436, line: 50, type: !2431, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19178 = !DILocalVariable(name: "fts", arg: 1, scope: !19177, file: !2436, line: 50, type: !2337)
!19179 = !DILocation(line: 50, column: 17, scope: !19177)
!19180 = !DILocation(line: 52, column: 7, scope: !19181)
!19181 = distinct !DILexicalBlock(scope: !19177, file: !2436, line: 52, column: 7)
!19182 = !DILocation(line: 52, column: 12, scope: !19181)
!19183 = !DILocation(line: 52, column: 24, scope: !19181)
!19184 = !DILocation(line: 52, column: 7, scope: !19177)
!19185 = !DILocation(line: 55, column: 27, scope: !19186)
!19186 = distinct !DILexicalBlock(scope: !19181, file: !2436, line: 53, column: 5)
!19187 = !DILocation(line: 55, column: 7, scope: !19186)
!19188 = !DILocation(line: 55, column: 12, scope: !19186)
!19189 = !DILocation(line: 55, column: 22, scope: !19186)
!19190 = !DILocation(line: 55, column: 25, scope: !19186)
!19191 = !DILocation(line: 57, column: 13, scope: !19192)
!19192 = distinct !DILexicalBlock(scope: !19186, file: !2436, line: 57, column: 11)
!19193 = !DILocation(line: 57, column: 18, scope: !19192)
!19194 = !DILocation(line: 57, column: 28, scope: !19192)
!19195 = !DILocation(line: 57, column: 11, scope: !19186)
!19196 = !DILocation(line: 58, column: 9, scope: !19192)
!19197 = !DILocation(line: 59, column: 5, scope: !19186)
!19198 = !DILocation(line: 62, column: 30, scope: !19199)
!19199 = distinct !DILexicalBlock(scope: !19181, file: !2436, line: 61, column: 5)
!19200 = !DILocation(line: 62, column: 7, scope: !19199)
!19201 = !DILocation(line: 62, column: 12, scope: !19199)
!19202 = !DILocation(line: 62, column: 22, scope: !19199)
!19203 = !DILocation(line: 62, column: 28, scope: !19199)
!19204 = !DILocation(line: 63, column: 13, scope: !19205)
!19205 = distinct !DILexicalBlock(scope: !19199, file: !2436, line: 63, column: 11)
!19206 = !DILocation(line: 63, column: 18, scope: !19205)
!19207 = !DILocation(line: 63, column: 28, scope: !19205)
!19208 = !DILocation(line: 63, column: 11, scope: !19199)
!19209 = !DILocation(line: 64, column: 9, scope: !19205)
!19210 = !DILocation(line: 65, column: 25, scope: !19199)
!19211 = !DILocation(line: 65, column: 30, scope: !19199)
!19212 = !DILocation(line: 65, column: 40, scope: !19199)
!19213 = !DILocation(line: 65, column: 7, scope: !19199)
!19214 = !DILocation(line: 68, column: 3, scope: !19177)
!19215 = !DILocation(line: 69, column: 1, scope: !19177)
!19216 = distinct !DISubprogram(name: "diropen", scope: !2312, file: !2312, line: 346, type: !2441, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19217 = !DILocalVariable(name: "sp", arg: 1, scope: !19216, file: !2312, line: 346, type: !2443)
!19218 = !DILocation(line: 346, column: 21, scope: !19216)
!19219 = !DILocalVariable(name: "dir", arg: 2, scope: !19216, file: !2312, line: 346, type: !115)
!19220 = !DILocation(line: 346, column: 37, scope: !19216)
!19221 = !DILocalVariable(name: "open_flags", scope: !19216, file: !2312, line: 348, type: !7)
!19222 = !DILocation(line: 348, column: 7, scope: !19216)
!19223 = !DILocation(line: 349, column: 24, scope: !19216)
!19224 = !DILocation(line: 349, column: 21, scope: !19216)
!19225 = !DILocalVariable(name: "fd", scope: !19216, file: !2312, line: 351, type: !7)
!19226 = !DILocation(line: 351, column: 7, scope: !19216)
!19227 = !DILocation(line: 351, column: 13, scope: !19216)
!19228 = !DILocation(line: 352, column: 23, scope: !19216)
!19229 = !DILocation(line: 352, column: 27, scope: !19216)
!19230 = !DILocation(line: 352, column: 39, scope: !19216)
!19231 = !DILocation(line: 352, column: 44, scope: !19216)
!19232 = !DILocation(line: 352, column: 15, scope: !19216)
!19233 = !DILocation(line: 353, column: 21, scope: !19216)
!19234 = !DILocation(line: 353, column: 26, scope: !19216)
!19235 = !DILocation(line: 353, column: 15, scope: !19216)
!19236 = !DILocation(line: 354, column: 10, scope: !19216)
!19237 = !DILocation(line: 354, column: 3, scope: !19216)
!19238 = distinct !DISubprogram(name: "fts_lfree", scope: !2312, file: !2312, line: 1944, type: !2494, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19239 = !DILocalVariable(name: "head", arg: 1, scope: !19238, file: !2312, line: 1944, type: !2420)
!19240 = !DILocation(line: 1944, column: 29, scope: !19238)
!19241 = !DILocalVariable(name: "p", scope: !19238, file: !2312, line: 1946, type: !2420)
!19242 = !DILocation(line: 1946, column: 26, scope: !19238)
!19243 = !DILocation(line: 1949, column: 9, scope: !19238)
!19244 = !DILocation(line: 1949, column: 21, scope: !19238)
!19245 = !DILocation(line: 1949, column: 19, scope: !19238)
!19246 = !DILocation(line: 1950, column: 24, scope: !19247)
!19247 = distinct !DILexicalBlock(scope: !19238, file: !2312, line: 1949, column: 28)
!19248 = !DILocation(line: 1950, column: 30, scope: !19247)
!19249 = !DILocation(line: 1950, column: 22, scope: !19247)
!19250 = !DILocation(line: 1951, column: 21, scope: !19251)
!19251 = distinct !DILexicalBlock(scope: !19247, file: !2312, line: 1951, column: 21)
!19252 = !DILocation(line: 1951, column: 24, scope: !19251)
!19253 = !DILocation(line: 1951, column: 21, scope: !19247)
!19254 = !DILocation(line: 1952, column: 35, scope: !19251)
!19255 = !DILocation(line: 1952, column: 38, scope: !19251)
!19256 = !DILocation(line: 1952, column: 25, scope: !19251)
!19257 = !DILocation(line: 1953, column: 22, scope: !19247)
!19258 = !DILocation(line: 1953, column: 17, scope: !19247)
!19259 = distinct !{!19259, !19243, !19260}
!19260 = !DILocation(line: 1954, column: 9, scope: !19238)
!19261 = !DILocation(line: 1955, column: 1, scope: !19238)
!19262 = distinct !DISubprogram(name: "AD_hash", scope: !2436, file: !2436, line: 41, type: !549, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19263 = !DILocalVariable(name: "x", arg: 1, scope: !19262, file: !2436, line: 41, type: !427)
!19264 = !DILocation(line: 41, column: 22, scope: !19262)
!19265 = !DILocalVariable(name: "table_size", arg: 2, scope: !19262, file: !2436, line: 41, type: !55)
!19266 = !DILocation(line: 41, column: 32, scope: !19262)
!19267 = !DILocalVariable(name: "ax", scope: !19262, file: !2436, line: 43, type: !2433)
!19268 = !DILocation(line: 43, column: 28, scope: !19262)
!19269 = !DILocation(line: 43, column: 33, scope: !19262)
!19270 = !DILocation(line: 44, column: 22, scope: !19262)
!19271 = !DILocation(line: 44, column: 26, scope: !19262)
!19272 = !{!19273, !3183, i64 8}
!19273 = !{!"Active_dir", !3183, i64 0, !3183, i64 8, !2999, i64 16}
!19274 = !DILocation(line: 44, column: 32, scope: !19262)
!19275 = !DILocation(line: 44, column: 30, scope: !19262)
!19276 = !DILocation(line: 44, column: 3, scope: !19262)
!19277 = distinct !DISubprogram(name: "AD_compare", scope: !2436, file: !2436, line: 32, type: !551, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19278 = !DILocalVariable(name: "x", arg: 1, scope: !19277, file: !2436, line: 32, type: !427)
!19279 = !DILocation(line: 32, column: 25, scope: !19277)
!19280 = !DILocalVariable(name: "y", arg: 2, scope: !19277, file: !2436, line: 32, type: !427)
!19281 = !DILocation(line: 32, column: 40, scope: !19277)
!19282 = !DILocalVariable(name: "ax", scope: !19277, file: !2436, line: 34, type: !2433)
!19283 = !DILocation(line: 34, column: 28, scope: !19277)
!19284 = !DILocation(line: 34, column: 33, scope: !19277)
!19285 = !DILocalVariable(name: "ay", scope: !19277, file: !2436, line: 35, type: !2433)
!19286 = !DILocation(line: 35, column: 28, scope: !19277)
!19287 = !DILocation(line: 35, column: 33, scope: !19277)
!19288 = !DILocation(line: 36, column: 10, scope: !19277)
!19289 = !DILocation(line: 36, column: 14, scope: !19277)
!19290 = !DILocation(line: 36, column: 21, scope: !19277)
!19291 = !DILocation(line: 36, column: 25, scope: !19277)
!19292 = !DILocation(line: 36, column: 18, scope: !19277)
!19293 = !DILocation(line: 37, column: 7, scope: !19277)
!19294 = !DILocation(line: 37, column: 10, scope: !19277)
!19295 = !DILocation(line: 37, column: 14, scope: !19277)
!19296 = !{!19273, !3183, i64 0}
!19297 = !DILocation(line: 37, column: 21, scope: !19277)
!19298 = !DILocation(line: 37, column: 25, scope: !19277)
!19299 = !DILocation(line: 37, column: 18, scope: !19277)
!19300 = !DILocation(line: 0, scope: !19277)
!19301 = !DILocation(line: 36, column: 3, scope: !19277)
!19302 = distinct !DISubprogram(name: "fts_compar", scope: !2312, file: !2312, line: 1849, type: !1090, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19303 = !DILocalVariable(name: "a", arg: 1, scope: !19302, file: !2312, line: 1849, type: !427)
!19304 = !DILocation(line: 1849, column: 25, scope: !19302)
!19305 = !DILocalVariable(name: "b", arg: 2, scope: !19302, file: !2312, line: 1849, type: !427)
!19306 = !DILocation(line: 1849, column: 40, scope: !19302)
!19307 = !DILocalVariable(name: "pa", scope: !19302, file: !2312, line: 1856, type: !2318)
!19308 = !DILocation(line: 1856, column: 18, scope: !19302)
!19309 = !DILocation(line: 1856, column: 41, scope: !19302)
!19310 = !DILocation(line: 1856, column: 23, scope: !19302)
!19311 = !DILocalVariable(name: "pb", scope: !19302, file: !2312, line: 1857, type: !2318)
!19312 = !DILocation(line: 1857, column: 18, scope: !19302)
!19313 = !DILocation(line: 1857, column: 41, scope: !19302)
!19314 = !DILocation(line: 1857, column: 23, scope: !19302)
!19315 = !DILocation(line: 1858, column: 10, scope: !19302)
!19316 = !DILocation(line: 1858, column: 17, scope: !19302)
!19317 = !DILocation(line: 1858, column: 26, scope: !19302)
!19318 = !DILocation(line: 1858, column: 38, scope: !19302)
!19319 = !DILocation(line: 1858, column: 42, scope: !19302)
!19320 = !DILocation(line: 1858, column: 3, scope: !19302)
!19321 = distinct !DISubprogram(name: "rpl_fts_close", scope: !2312, file: !2312, line: 573, type: !2421, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19322 = !DILocalVariable(name: "sp", arg: 1, scope: !19321, file: !2312, line: 573, type: !2337)
!19323 = !DILocation(line: 573, column: 17, scope: !19321)
!19324 = !DILocalVariable(name: "freep", scope: !19321, file: !2312, line: 575, type: !2420)
!19325 = !DILocation(line: 575, column: 26, scope: !19321)
!19326 = !DILocalVariable(name: "p", scope: !19321, file: !2312, line: 575, type: !2420)
!19327 = !DILocation(line: 575, column: 34, scope: !19321)
!19328 = !DILocalVariable(name: "saved_errno", scope: !19321, file: !2312, line: 576, type: !7)
!19329 = !DILocation(line: 576, column: 13, scope: !19321)
!19330 = !DILocation(line: 583, column: 13, scope: !19331)
!19331 = distinct !DILexicalBlock(scope: !19321, file: !2312, line: 583, column: 13)
!19332 = !DILocation(line: 583, column: 17, scope: !19331)
!19333 = !DILocation(line: 583, column: 13, scope: !19321)
!19334 = !DILocation(line: 584, column: 26, scope: !19335)
!19335 = distinct !DILexicalBlock(scope: !19336, file: !2312, line: 584, column: 17)
!19336 = distinct !DILexicalBlock(scope: !19331, file: !2312, line: 583, column: 26)
!19337 = !DILocation(line: 584, column: 30, scope: !19335)
!19338 = !DILocation(line: 584, column: 24, scope: !19335)
!19339 = !DILocation(line: 584, column: 22, scope: !19335)
!19340 = !DILocation(line: 584, column: 39, scope: !19341)
!19341 = distinct !DILexicalBlock(scope: !19335, file: !2312, line: 584, column: 17)
!19342 = !DILocation(line: 584, column: 42, scope: !19341)
!19343 = !DILocation(line: 584, column: 52, scope: !19341)
!19344 = !DILocation(line: 584, column: 17, scope: !19335)
!19345 = !DILocation(line: 585, column: 33, scope: !19346)
!19346 = distinct !DILexicalBlock(scope: !19341, file: !2312, line: 584, column: 71)
!19347 = !DILocation(line: 585, column: 31, scope: !19346)
!19348 = !DILocation(line: 586, column: 29, scope: !19346)
!19349 = !DILocation(line: 586, column: 32, scope: !19346)
!19350 = !DILocation(line: 586, column: 41, scope: !19346)
!19351 = !DILocation(line: 586, column: 51, scope: !19346)
!19352 = !DILocation(line: 586, column: 54, scope: !19346)
!19353 = !DILocation(line: 586, column: 65, scope: !19346)
!19354 = !DILocation(line: 586, column: 68, scope: !19346)
!19355 = !DILocation(line: 586, column: 27, scope: !19346)
!19356 = !DILocation(line: 587, column: 30, scope: !19346)
!19357 = !DILocation(line: 587, column: 25, scope: !19346)
!19358 = !DILocation(line: 584, column: 17, scope: !19341)
!19359 = distinct !{!19359, !19344, !19360}
!19360 = !DILocation(line: 588, column: 17, scope: !19335)
!19361 = !DILocation(line: 589, column: 22, scope: !19336)
!19362 = !DILocation(line: 589, column: 17, scope: !19336)
!19363 = !DILocation(line: 590, column: 9, scope: !19336)
!19364 = !DILocation(line: 593, column: 13, scope: !19365)
!19365 = distinct !DILexicalBlock(scope: !19321, file: !2312, line: 593, column: 13)
!19366 = !DILocation(line: 593, column: 17, scope: !19365)
!19367 = !{!3827, !2999, i64 8}
!19368 = !DILocation(line: 593, column: 13, scope: !19321)
!19369 = !DILocation(line: 594, column: 27, scope: !19365)
!19370 = !DILocation(line: 594, column: 31, scope: !19365)
!19371 = !DILocation(line: 594, column: 17, scope: !19365)
!19372 = !DILocation(line: 595, column: 14, scope: !19321)
!19373 = !DILocation(line: 595, column: 18, scope: !19321)
!19374 = !DILocation(line: 595, column: 9, scope: !19321)
!19375 = !DILocation(line: 596, column: 14, scope: !19321)
!19376 = !DILocation(line: 596, column: 18, scope: !19321)
!19377 = !DILocation(line: 596, column: 9, scope: !19321)
!19378 = !DILocation(line: 598, column: 13, scope: !19379)
!19379 = distinct !DILexicalBlock(scope: !19321, file: !2312, line: 598, column: 13)
!19380 = !DILocation(line: 598, column: 13, scope: !19321)
!19381 = !DILocation(line: 600, column: 22, scope: !19382)
!19382 = distinct !DILexicalBlock(scope: !19383, file: !2312, line: 600, column: 17)
!19383 = distinct !DILexicalBlock(scope: !19379, file: !2312, line: 599, column: 11)
!19384 = !DILocation(line: 600, column: 26, scope: !19382)
!19385 = !DILocation(line: 600, column: 19, scope: !19382)
!19386 = !DILocation(line: 600, column: 17, scope: !19383)
!19387 = !DILocation(line: 601, column: 26, scope: !19388)
!19388 = distinct !DILexicalBlock(scope: !19382, file: !2312, line: 601, column: 19)
!19389 = !DILocation(line: 601, column: 30, scope: !19388)
!19390 = !DILocation(line: 601, column: 19, scope: !19388)
!19391 = !DILocation(line: 601, column: 19, scope: !19382)
!19392 = !DILocation(line: 602, column: 31, scope: !19388)
!19393 = !DILocation(line: 602, column: 29, scope: !19388)
!19394 = !DILocation(line: 602, column: 17, scope: !19388)
!19395 = !DILocation(line: 601, column: 40, scope: !19388)
!19396 = !DILocation(line: 603, column: 11, scope: !19383)
!19397 = !DILocation(line: 604, column: 19, scope: !19398)
!19398 = distinct !DILexicalBlock(scope: !19379, file: !2312, line: 604, column: 18)
!19399 = !DILocation(line: 604, column: 18, scope: !19379)
!19400 = !DILocation(line: 607, column: 24, scope: !19401)
!19401 = distinct !DILexicalBlock(scope: !19402, file: !2312, line: 607, column: 17)
!19402 = distinct !DILexicalBlock(scope: !19398, file: !2312, line: 605, column: 11)
!19403 = !DILocation(line: 607, column: 28, scope: !19401)
!19404 = !DILocation(line: 607, column: 17, scope: !19401)
!19405 = !DILocation(line: 607, column: 17, scope: !19402)
!19406 = !DILocation(line: 608, column: 29, scope: !19401)
!19407 = !DILocation(line: 608, column: 27, scope: !19401)
!19408 = !DILocation(line: 608, column: 15, scope: !19401)
!19409 = !DILocation(line: 612, column: 24, scope: !19410)
!19410 = distinct !DILexicalBlock(scope: !19402, file: !2312, line: 612, column: 17)
!19411 = !DILocation(line: 612, column: 28, scope: !19410)
!19412 = !DILocation(line: 612, column: 17, scope: !19410)
!19413 = !DILocation(line: 612, column: 17, scope: !19402)
!19414 = !DILocation(line: 613, column: 19, scope: !19415)
!19415 = distinct !DILexicalBlock(scope: !19410, file: !2312, line: 613, column: 19)
!19416 = !DILocation(line: 613, column: 31, scope: !19415)
!19417 = !DILocation(line: 613, column: 19, scope: !19410)
!19418 = !DILocation(line: 614, column: 31, scope: !19415)
!19419 = !DILocation(line: 614, column: 29, scope: !19415)
!19420 = !DILocation(line: 614, column: 17, scope: !19415)
!19421 = !DILocation(line: 613, column: 34, scope: !19415)
!19422 = !DILocation(line: 615, column: 11, scope: !19402)
!19423 = !DILocation(line: 617, column: 25, scope: !19321)
!19424 = !DILocation(line: 617, column: 29, scope: !19321)
!19425 = !DILocation(line: 617, column: 9, scope: !19321)
!19426 = !DILocation(line: 619, column: 13, scope: !19427)
!19427 = distinct !DILexicalBlock(scope: !19321, file: !2312, line: 619, column: 13)
!19428 = !DILocation(line: 619, column: 17, scope: !19427)
!19429 = !{!3827, !2999, i64 80}
!19430 = !DILocation(line: 619, column: 13, scope: !19321)
!19431 = !DILocation(line: 620, column: 22, scope: !19427)
!19432 = !DILocation(line: 620, column: 26, scope: !19427)
!19433 = !DILocation(line: 620, column: 11, scope: !19427)
!19434 = !DILocation(line: 622, column: 19, scope: !19321)
!19435 = !DILocation(line: 622, column: 9, scope: !19321)
!19436 = !DILocation(line: 625, column: 14, scope: !19321)
!19437 = !DILocation(line: 625, column: 9, scope: !19321)
!19438 = !DILocation(line: 628, column: 13, scope: !19439)
!19439 = distinct !DILexicalBlock(scope: !19321, file: !2312, line: 628, column: 13)
!19440 = !DILocation(line: 628, column: 13, scope: !19321)
!19441 = !DILocation(line: 629, column: 17, scope: !19442)
!19442 = distinct !DILexicalBlock(scope: !19439, file: !2312, line: 628, column: 26)
!19443 = !DILocation(line: 630, column: 17, scope: !19442)
!19444 = !DILocation(line: 633, column: 9, scope: !19321)
!19445 = !DILocation(line: 634, column: 1, scope: !19321)
!19446 = distinct !DISubprogram(name: "fd_ring_clear", scope: !2312, file: !2312, line: 276, type: !2445, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19447 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !19446, file: !2312, line: 276, type: !2447)
!19448 = !DILocation(line: 276, column: 24, scope: !19446)
!19449 = !DILocation(line: 278, column: 3, scope: !19446)
!19450 = !DILocation(line: 278, column: 27, scope: !19446)
!19451 = !DILocation(line: 278, column: 13, scope: !19446)
!19452 = !DILocation(line: 278, column: 11, scope: !19446)
!19453 = !DILocalVariable(name: "fd", scope: !19454, file: !2312, line: 280, type: !7)
!19454 = distinct !DILexicalBlock(scope: !19446, file: !2312, line: 279, column: 5)
!19455 = !DILocation(line: 280, column: 11, scope: !19454)
!19456 = !DILocation(line: 280, column: 28, scope: !19454)
!19457 = !DILocation(line: 280, column: 16, scope: !19454)
!19458 = !DILocation(line: 281, column: 16, scope: !19459)
!19459 = distinct !DILexicalBlock(scope: !19454, file: !2312, line: 281, column: 11)
!19460 = !DILocation(line: 281, column: 13, scope: !19459)
!19461 = !DILocation(line: 281, column: 11, scope: !19454)
!19462 = !DILocation(line: 282, column: 16, scope: !19459)
!19463 = !DILocation(line: 282, column: 9, scope: !19459)
!19464 = distinct !{!19464, !19449, !19465}
!19465 = !DILocation(line: 283, column: 5, scope: !19446)
!19466 = !DILocation(line: 284, column: 1, scope: !19446)
!19467 = distinct !DISubprogram(name: "free_dir", scope: !2436, file: !2436, line: 151, type: !2448, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19468 = !DILocalVariable(name: "sp", arg: 1, scope: !19467, file: !2436, line: 151, type: !2337)
!19469 = !DILocation(line: 151, column: 16, scope: !19467)
!19470 = !DILocation(line: 153, column: 7, scope: !19471)
!19471 = distinct !DILexicalBlock(scope: !19467, file: !2436, line: 153, column: 7)
!19472 = !DILocation(line: 153, column: 11, scope: !19471)
!19473 = !DILocation(line: 153, column: 23, scope: !19471)
!19474 = !DILocation(line: 153, column: 7, scope: !19467)
!19475 = !DILocation(line: 155, column: 11, scope: !19476)
!19476 = distinct !DILexicalBlock(scope: !19477, file: !2436, line: 155, column: 11)
!19477 = distinct !DILexicalBlock(scope: !19471, file: !2436, line: 154, column: 5)
!19478 = !DILocation(line: 155, column: 15, scope: !19476)
!19479 = !DILocation(line: 155, column: 25, scope: !19476)
!19480 = !DILocation(line: 155, column: 11, scope: !19477)
!19481 = !DILocation(line: 156, column: 20, scope: !19476)
!19482 = !DILocation(line: 156, column: 24, scope: !19476)
!19483 = !DILocation(line: 156, column: 34, scope: !19476)
!19484 = !DILocation(line: 156, column: 9, scope: !19476)
!19485 = !DILocation(line: 157, column: 5, scope: !19477)
!19486 = !DILocation(line: 159, column: 11, scope: !19471)
!19487 = !DILocation(line: 159, column: 15, scope: !19471)
!19488 = !DILocation(line: 159, column: 25, scope: !19471)
!19489 = !DILocation(line: 159, column: 5, scope: !19471)
!19490 = !DILocation(line: 160, column: 1, scope: !19467)
!19491 = distinct !DISubprogram(name: "rpl_fts_read", scope: !2312, file: !2312, line: 852, type: !2423, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!19492 = !DILocalVariable(name: "sp", arg: 1, scope: !19491, file: !2312, line: 852, type: !2337)
!19493 = !DILocation(line: 852, column: 25, scope: !19491)
!19494 = !DILocalVariable(name: "p", scope: !19491, file: !2312, line: 854, type: !2420)
!19495 = !DILocation(line: 854, column: 26, scope: !19491)
!19496 = !DILocalVariable(name: "tmp", scope: !19491, file: !2312, line: 854, type: !2420)
!19497 = !DILocation(line: 854, column: 30, scope: !19491)
!19498 = !DILocalVariable(name: "instr", scope: !19491, file: !2312, line: 855, type: !33)
!19499 = !DILocation(line: 855, column: 37, scope: !19491)
!19500 = !DILocalVariable(name: "t", scope: !19491, file: !2312, line: 856, type: !9)
!19501 = !DILocation(line: 856, column: 24, scope: !19491)
!19502 = !DILocation(line: 859, column: 13, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 859, column: 13)
!19504 = !DILocation(line: 859, column: 17, scope: !19503)
!19505 = !DILocation(line: 859, column: 25, scope: !19503)
!19506 = !DILocation(line: 859, column: 33, scope: !19503)
!19507 = !DILocation(line: 859, column: 36, scope: !19503)
!19508 = !DILocation(line: 859, column: 13, scope: !19491)
!19509 = !DILocation(line: 860, column: 17, scope: !19503)
!19510 = !DILocation(line: 863, column: 13, scope: !19491)
!19511 = !DILocation(line: 863, column: 17, scope: !19491)
!19512 = !DILocation(line: 863, column: 11, scope: !19491)
!19513 = !DILocation(line: 866, column: 17, scope: !19491)
!19514 = !DILocation(line: 866, column: 20, scope: !19491)
!19515 = !DILocation(line: 866, column: 15, scope: !19491)
!19516 = !DILocation(line: 867, column: 9, scope: !19491)
!19517 = !DILocation(line: 867, column: 12, scope: !19491)
!19518 = !DILocation(line: 867, column: 22, scope: !19491)
!19519 = !DILocation(line: 870, column: 13, scope: !19520)
!19520 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 870, column: 13)
!19521 = !DILocation(line: 870, column: 19, scope: !19520)
!19522 = !DILocation(line: 870, column: 13, scope: !19491)
!19523 = !DILocation(line: 871, column: 40, scope: !19524)
!19524 = distinct !DILexicalBlock(scope: !19520, file: !2312, line: 870, column: 33)
!19525 = !DILocation(line: 871, column: 44, scope: !19524)
!19526 = !DILocation(line: 871, column: 31, scope: !19524)
!19527 = !DILocation(line: 871, column: 17, scope: !19524)
!19528 = !DILocation(line: 871, column: 20, scope: !19524)
!19529 = !DILocation(line: 871, column: 29, scope: !19524)
!19530 = !DILocation(line: 872, column: 25, scope: !19524)
!19531 = !DILocation(line: 872, column: 17, scope: !19524)
!19532 = !DILocation(line: 883, column: 13, scope: !19533)
!19533 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 883, column: 13)
!19534 = !DILocation(line: 883, column: 19, scope: !19533)
!19535 = !DILocation(line: 883, column: 33, scope: !19533)
!19536 = !DILocation(line: 884, column: 14, scope: !19533)
!19537 = !DILocation(line: 884, column: 17, scope: !19533)
!19538 = !DILocation(line: 884, column: 26, scope: !19533)
!19539 = !DILocation(line: 884, column: 36, scope: !19533)
!19540 = !DILocation(line: 884, column: 39, scope: !19533)
!19541 = !DILocation(line: 884, column: 42, scope: !19533)
!19542 = !DILocation(line: 884, column: 51, scope: !19533)
!19543 = !DILocation(line: 883, column: 13, scope: !19491)
!19544 = !DILocation(line: 885, column: 40, scope: !19545)
!19545 = distinct !DILexicalBlock(scope: !19533, file: !2312, line: 884, column: 67)
!19546 = !DILocation(line: 885, column: 44, scope: !19545)
!19547 = !DILocation(line: 885, column: 31, scope: !19545)
!19548 = !DILocation(line: 885, column: 17, scope: !19545)
!19549 = !DILocation(line: 885, column: 20, scope: !19545)
!19550 = !DILocation(line: 885, column: 29, scope: !19545)
!19551 = !DILocation(line: 886, column: 21, scope: !19552)
!19552 = distinct !DILexicalBlock(scope: !19545, file: !2312, line: 886, column: 21)
!19553 = !DILocation(line: 886, column: 24, scope: !19552)
!19554 = !DILocation(line: 886, column: 33, scope: !19552)
!19555 = !DILocation(line: 886, column: 42, scope: !19552)
!19556 = !DILocation(line: 886, column: 46, scope: !19552)
!19557 = !DILocation(line: 886, column: 21, scope: !19545)
!19558 = !DILocation(line: 887, column: 54, scope: !19559)
!19559 = distinct !DILexicalBlock(scope: !19560, file: !2312, line: 887, column: 29)
!19560 = distinct !DILexicalBlock(scope: !19552, file: !2312, line: 886, column: 66)
!19561 = !DILocation(line: 887, column: 45, scope: !19559)
!19562 = !DILocation(line: 887, column: 30, scope: !19559)
!19563 = !DILocation(line: 887, column: 33, scope: !19559)
!19564 = !DILocation(line: 887, column: 43, scope: !19559)
!19565 = !DILocation(line: 887, column: 64, scope: !19559)
!19566 = !DILocation(line: 887, column: 29, scope: !19560)
!19567 = !DILocation(line: 888, column: 48, scope: !19568)
!19568 = distinct !DILexicalBlock(scope: !19559, file: !2312, line: 887, column: 69)
!19569 = !DILocation(line: 888, column: 33, scope: !19568)
!19570 = !DILocation(line: 888, column: 36, scope: !19568)
!19571 = !DILocation(line: 888, column: 46, scope: !19568)
!19572 = !DILocation(line: 889, column: 33, scope: !19568)
!19573 = !DILocation(line: 889, column: 36, scope: !19568)
!19574 = !DILocation(line: 889, column: 45, scope: !19568)
!19575 = !DILocation(line: 890, column: 25, scope: !19568)
!19576 = !DILocation(line: 891, column: 33, scope: !19559)
!19577 = !DILocation(line: 891, column: 36, scope: !19559)
!19578 = !DILocation(line: 891, column: 46, scope: !19559)
!19579 = !DILocation(line: 892, column: 17, scope: !19560)
!19580 = !DILocation(line: 893, column: 17, scope: !19545)
!19581 = !DILocation(line: 897, column: 13, scope: !19582)
!19582 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 897, column: 13)
!19583 = !DILocation(line: 897, column: 16, scope: !19582)
!19584 = !DILocation(line: 897, column: 25, scope: !19582)
!19585 = !DILocation(line: 897, column: 13, scope: !19491)
!19586 = !DILocation(line: 899, column: 21, scope: !19587)
!19587 = distinct !DILexicalBlock(scope: !19588, file: !2312, line: 899, column: 21)
!19588 = distinct !DILexicalBlock(scope: !19582, file: !2312, line: 897, column: 35)
!19589 = !DILocation(line: 899, column: 27, scope: !19587)
!19590 = !DILocation(line: 899, column: 39, scope: !19587)
!19591 = !DILocation(line: 900, column: 22, scope: !19587)
!19592 = !DILocation(line: 900, column: 38, scope: !19587)
!19593 = !DILocation(line: 900, column: 41, scope: !19587)
!19594 = !DILocation(line: 900, column: 44, scope: !19587)
!19595 = !DILocation(line: 900, column: 55, scope: !19587)
!19596 = !DILocation(line: 900, column: 65, scope: !19587)
!19597 = !DILocation(line: 900, column: 69, scope: !19587)
!19598 = !DILocation(line: 900, column: 62, scope: !19587)
!19599 = !DILocation(line: 899, column: 21, scope: !19588)
!19600 = !DILocation(line: 901, column: 29, scope: !19601)
!19601 = distinct !DILexicalBlock(scope: !19602, file: !2312, line: 901, column: 29)
!19602 = distinct !DILexicalBlock(scope: !19587, file: !2312, line: 900, column: 79)
!19603 = !DILocation(line: 901, column: 32, scope: !19601)
!19604 = !DILocation(line: 901, column: 42, scope: !19601)
!19605 = !DILocation(line: 901, column: 29, scope: !19602)
!19606 = !DILocation(line: 902, column: 45, scope: !19601)
!19607 = !DILocation(line: 902, column: 48, scope: !19601)
!19608 = !DILocation(line: 902, column: 39, scope: !19601)
!19609 = !DILocation(line: 902, column: 33, scope: !19601)
!19610 = !DILocation(line: 903, column: 29, scope: !19611)
!19611 = distinct !DILexicalBlock(scope: !19602, file: !2312, line: 903, column: 29)
!19612 = !DILocation(line: 903, column: 33, scope: !19611)
!19613 = !DILocation(line: 903, column: 29, scope: !19602)
!19614 = !DILocation(line: 904, column: 43, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19611, file: !2312, line: 903, column: 44)
!19616 = !DILocation(line: 904, column: 47, scope: !19615)
!19617 = !DILocation(line: 904, column: 33, scope: !19615)
!19618 = !DILocation(line: 905, column: 33, scope: !19615)
!19619 = !DILocation(line: 905, column: 37, scope: !19615)
!19620 = !DILocation(line: 905, column: 47, scope: !19615)
!19621 = !DILocation(line: 906, column: 25, scope: !19615)
!19622 = !DILocation(line: 907, column: 25, scope: !19602)
!19623 = !DILocation(line: 907, column: 28, scope: !19602)
!19624 = !DILocation(line: 907, column: 37, scope: !19602)
!19625 = !DILocation(line: 908, column: 25, scope: !19602)
!19626 = !DILocation(line: 908, column: 25, scope: !19627)
!19627 = distinct !DILexicalBlock(scope: !19602, file: !2312, line: 908, column: 25)
!19628 = !DILocation(line: 909, column: 33, scope: !19602)
!19629 = !DILocation(line: 909, column: 25, scope: !19602)
!19630 = !DILocation(line: 913, column: 21, scope: !19631)
!19631 = distinct !DILexicalBlock(scope: !19588, file: !2312, line: 913, column: 21)
!19632 = !DILocation(line: 913, column: 25, scope: !19631)
!19633 = !DILocation(line: 913, column: 35, scope: !19631)
!19634 = !DILocation(line: 913, column: 43, scope: !19631)
!19635 = !DILocation(line: 913, column: 46, scope: !19631)
!19636 = !DILocation(line: 913, column: 21, scope: !19588)
!19637 = !DILocation(line: 914, column: 25, scope: !19638)
!19638 = distinct !DILexicalBlock(scope: !19631, file: !2312, line: 913, column: 67)
!19639 = !DILocation(line: 915, column: 35, scope: !19638)
!19640 = !DILocation(line: 915, column: 39, scope: !19638)
!19641 = !DILocation(line: 915, column: 25, scope: !19638)
!19642 = !DILocation(line: 916, column: 25, scope: !19638)
!19643 = !DILocation(line: 916, column: 29, scope: !19638)
!19644 = !DILocation(line: 916, column: 39, scope: !19638)
!19645 = !DILocation(line: 917, column: 17, scope: !19638)
!19646 = !DILocation(line: 931, column: 21, scope: !19647)
!19647 = distinct !DILexicalBlock(scope: !19588, file: !2312, line: 931, column: 21)
!19648 = !DILocation(line: 931, column: 25, scope: !19647)
!19649 = !DILocation(line: 931, column: 35, scope: !19647)
!19650 = !DILocation(line: 931, column: 21, scope: !19588)
!19651 = !DILocation(line: 932, column: 48, scope: !19652)
!19652 = distinct !DILexicalBlock(scope: !19653, file: !2312, line: 932, column: 29)
!19653 = distinct !DILexicalBlock(scope: !19647, file: !2312, line: 931, column: 44)
!19654 = !DILocation(line: 932, column: 52, scope: !19652)
!19655 = !DILocation(line: 932, column: 59, scope: !19652)
!19656 = !DILocation(line: 932, column: 62, scope: !19652)
!19657 = !DILocation(line: 932, column: 29, scope: !19652)
!19658 = !DILocation(line: 932, column: 29, scope: !19653)
!19659 = !DILocation(line: 933, column: 48, scope: !19660)
!19660 = distinct !DILexicalBlock(scope: !19652, file: !2312, line: 932, column: 76)
!19661 = !DILocation(line: 933, column: 33, scope: !19660)
!19662 = !DILocation(line: 933, column: 36, scope: !19660)
!19663 = !DILocation(line: 933, column: 46, scope: !19660)
!19664 = !DILocation(line: 934, column: 33, scope: !19660)
!19665 = !DILocation(line: 934, column: 36, scope: !19660)
!19666 = !DILocation(line: 934, column: 46, scope: !19660)
!19667 = !DILocation(line: 935, column: 42, scope: !19668)
!19668 = distinct !DILexicalBlock(scope: !19660, file: !2312, line: 935, column: 33)
!19669 = !DILocation(line: 935, column: 46, scope: !19668)
!19670 = !DILocation(line: 935, column: 40, scope: !19668)
!19671 = !DILocation(line: 935, column: 38, scope: !19668)
!19672 = !DILocation(line: 935, column: 57, scope: !19673)
!19673 = distinct !DILexicalBlock(scope: !19668, file: !2312, line: 935, column: 33)
!19674 = !DILocation(line: 935, column: 59, scope: !19673)
!19675 = !DILocation(line: 935, column: 33, scope: !19668)
!19676 = !DILocation(line: 938, column: 45, scope: !19673)
!19677 = !DILocation(line: 938, column: 48, scope: !19673)
!19678 = !DILocation(line: 938, column: 60, scope: !19673)
!19679 = !DILocation(line: 937, column: 41, scope: !19673)
!19680 = !DILocation(line: 937, column: 44, scope: !19673)
!19681 = !DILocation(line: 937, column: 56, scope: !19673)
!19682 = !DILocation(line: 936, column: 42, scope: !19673)
!19683 = !DILocation(line: 936, column: 45, scope: !19673)
!19684 = !DILocation(line: 936, column: 40, scope: !19673)
!19685 = !DILocation(line: 935, column: 33, scope: !19673)
!19686 = distinct !{!19686, !19675, !19687}
!19687 = !DILocation(line: 938, column: 60, scope: !19668)
!19688 = !DILocation(line: 939, column: 25, scope: !19660)
!19689 = !DILocation(line: 940, column: 17, scope: !19653)
!19690 = !DILocation(line: 940, column: 55, scope: !19691)
!19691 = distinct !DILexicalBlock(scope: !19647, file: !2312, line: 940, column: 28)
!19692 = !DILocation(line: 940, column: 45, scope: !19691)
!19693 = !DILocation(line: 940, column: 29, scope: !19691)
!19694 = !DILocation(line: 940, column: 33, scope: !19691)
!19695 = !DILocation(line: 940, column: 43, scope: !19691)
!19696 = !DILocation(line: 940, column: 67, scope: !19691)
!19697 = !DILocation(line: 940, column: 28, scope: !19647)
!19698 = !DILocation(line: 941, column: 29, scope: !19699)
!19699 = distinct !DILexicalBlock(scope: !19700, file: !2312, line: 941, column: 29)
!19700 = distinct !DILexicalBlock(scope: !19691, file: !2312, line: 940, column: 76)
!19701 = !DILocation(line: 941, column: 29, scope: !19700)
!19702 = !DILocation(line: 942, column: 33, scope: !19699)
!19703 = !DILocation(line: 946, column: 29, scope: !19704)
!19704 = distinct !DILexicalBlock(scope: !19700, file: !2312, line: 946, column: 29)
!19705 = !DILocation(line: 946, column: 32, scope: !19704)
!19706 = !DILocation(line: 946, column: 42, scope: !19704)
!19707 = !DILocation(line: 946, column: 45, scope: !19704)
!19708 = !DILocation(line: 946, column: 48, scope: !19704)
!19709 = !DILocation(line: 946, column: 57, scope: !19704)
!19710 = !DILocation(line: 946, column: 29, scope: !19700)
!19711 = !DILocation(line: 947, column: 33, scope: !19704)
!19712 = !DILocation(line: 947, column: 36, scope: !19704)
!19713 = !DILocation(line: 947, column: 45, scope: !19704)
!19714 = !DILocation(line: 948, column: 25, scope: !19700)
!19715 = !DILocation(line: 948, column: 25, scope: !19716)
!19716 = distinct !DILexicalBlock(scope: !19700, file: !2312, line: 948, column: 25)
!19717 = !DILocation(line: 949, column: 33, scope: !19700)
!19718 = !DILocation(line: 949, column: 25, scope: !19700)
!19719 = !DILocation(line: 951, column: 21, scope: !19588)
!19720 = !DILocation(line: 951, column: 25, scope: !19588)
!19721 = !DILocation(line: 951, column: 19, scope: !19588)
!19722 = !DILocation(line: 952, column: 17, scope: !19588)
!19723 = !DILocation(line: 952, column: 21, scope: !19588)
!19724 = !DILocation(line: 952, column: 31, scope: !19588)
!19725 = !DILocation(line: 953, column: 17, scope: !19588)
!19726 = !DILocation(line: 897, column: 28, scope: !19582)
!19727 = !DILabel(scope: !19491, name: "next", file: !2312, line: 957)
!19728 = !DILocation(line: 957, column: 1, scope: !19491)
!19729 = !DILocation(line: 957, column: 15, scope: !19491)
!19730 = !DILocation(line: 957, column: 13, scope: !19491)
!19731 = !DILocation(line: 962, column: 13, scope: !19732)
!19732 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 962, column: 13)
!19733 = !DILocation(line: 962, column: 16, scope: !19732)
!19734 = !DILocation(line: 962, column: 25, scope: !19732)
!19735 = !DILocation(line: 962, column: 33, scope: !19732)
!19736 = !DILocation(line: 962, column: 36, scope: !19732)
!19737 = !DILocation(line: 962, column: 39, scope: !19732)
!19738 = !DILocation(line: 962, column: 51, scope: !19732)
!19739 = !DILocation(line: 962, column: 13, scope: !19491)
!19740 = !DILocation(line: 964, column: 17, scope: !19741)
!19741 = distinct !DILexicalBlock(scope: !19732, file: !2312, line: 963, column: 11)
!19742 = !DILocation(line: 964, column: 22, scope: !19741)
!19743 = !DILocation(line: 964, column: 15, scope: !19741)
!19744 = !DILocation(line: 965, column: 27, scope: !19741)
!19745 = !DILocation(line: 965, column: 13, scope: !19741)
!19746 = !DILocation(line: 965, column: 17, scope: !19741)
!19747 = !DILocation(line: 965, column: 25, scope: !19741)
!19748 = !DILocation(line: 966, column: 13, scope: !19741)
!19749 = !DILocation(line: 966, column: 17, scope: !19741)
!19750 = !DILocation(line: 966, column: 26, scope: !19741)
!19751 = !DILocation(line: 966, column: 29, scope: !19741)
!19752 = !DILocation(line: 966, column: 42, scope: !19741)
!19753 = !DILocation(line: 968, column: 33, scope: !19754)
!19754 = distinct !DILexicalBlock(scope: !19741, file: !2312, line: 968, column: 17)
!19755 = !DILocation(line: 968, column: 22, scope: !19754)
!19756 = !DILocation(line: 968, column: 20, scope: !19754)
!19757 = !DILocation(line: 968, column: 45, scope: !19754)
!19758 = !DILocation(line: 968, column: 17, scope: !19741)
!19759 = !DILocation(line: 970, column: 21, scope: !19760)
!19760 = distinct !DILexicalBlock(scope: !19761, file: !2312, line: 970, column: 21)
!19761 = distinct !DILexicalBlock(scope: !19754, file: !2312, line: 969, column: 15)
!19762 = !DILocation(line: 970, column: 21, scope: !19761)
!19763 = !DILocation(line: 971, column: 19, scope: !19760)
!19764 = !DILocation(line: 972, column: 17, scope: !19761)
!19765 = !DILocation(line: 975, column: 18, scope: !19741)
!19766 = !DILocation(line: 975, column: 13, scope: !19741)
!19767 = !DILocation(line: 976, column: 13, scope: !19741)
!19768 = !DILocation(line: 979, column: 18, scope: !19769)
!19769 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 979, column: 13)
!19770 = !DILocation(line: 979, column: 21, scope: !19769)
!19771 = !DILocation(line: 979, column: 16, scope: !19769)
!19772 = !DILocation(line: 979, column: 31, scope: !19769)
!19773 = !DILocation(line: 979, column: 13, scope: !19491)
!19774 = !DILocation(line: 980, column: 31, scope: !19775)
!19775 = distinct !DILexicalBlock(scope: !19769, file: !2312, line: 979, column: 40)
!19776 = !DILocation(line: 980, column: 17, scope: !19775)
!19777 = !DILocation(line: 980, column: 21, scope: !19775)
!19778 = !DILocation(line: 980, column: 29, scope: !19775)
!19779 = !DILocation(line: 981, column: 22, scope: !19775)
!19780 = !DILocation(line: 981, column: 17, scope: !19775)
!19781 = !DILocation(line: 988, column: 21, scope: !19782)
!19782 = distinct !DILexicalBlock(scope: !19775, file: !2312, line: 988, column: 21)
!19783 = !DILocation(line: 988, column: 24, scope: !19782)
!19784 = !DILocation(line: 988, column: 34, scope: !19782)
!19785 = !DILocation(line: 988, column: 21, scope: !19775)
!19786 = !DILocation(line: 989, column: 49, scope: !19787)
!19787 = distinct !DILexicalBlock(scope: !19788, file: !2312, line: 989, column: 29)
!19788 = distinct !DILexicalBlock(scope: !19782, file: !2312, line: 988, column: 52)
!19789 = !DILocation(line: 989, column: 29, scope: !19787)
!19790 = !DILocation(line: 989, column: 29, scope: !19788)
!19791 = !DILocation(line: 990, column: 33, scope: !19792)
!19792 = distinct !DILexicalBlock(scope: !19787, file: !2312, line: 989, column: 54)
!19793 = !DILocation(line: 991, column: 33, scope: !19792)
!19794 = !DILocation(line: 993, column: 34, scope: !19788)
!19795 = !DILocation(line: 993, column: 25, scope: !19788)
!19796 = !DILocation(line: 994, column: 34, scope: !19788)
!19797 = !DILocation(line: 994, column: 38, scope: !19788)
!19798 = !DILocation(line: 994, column: 25, scope: !19788)
!19799 = !DILocation(line: 995, column: 35, scope: !19788)
!19800 = !DILocation(line: 995, column: 25, scope: !19788)
!19801 = !DILocation(line: 996, column: 25, scope: !19788)
!19802 = !DILocation(line: 1004, column: 21, scope: !19803)
!19803 = distinct !DILexicalBlock(scope: !19775, file: !2312, line: 1004, column: 21)
!19804 = !DILocation(line: 1004, column: 24, scope: !19803)
!19805 = !DILocation(line: 1004, column: 34, scope: !19803)
!19806 = !DILocation(line: 1004, column: 21, scope: !19775)
!19807 = !DILocation(line: 1005, column: 25, scope: !19803)
!19808 = !DILocation(line: 1006, column: 21, scope: !19809)
!19809 = distinct !DILexicalBlock(scope: !19775, file: !2312, line: 1006, column: 21)
!19810 = !DILocation(line: 1006, column: 24, scope: !19809)
!19811 = !DILocation(line: 1006, column: 34, scope: !19809)
!19812 = !DILocation(line: 1006, column: 21, scope: !19775)
!19813 = !DILocation(line: 1007, column: 48, scope: !19814)
!19814 = distinct !DILexicalBlock(scope: !19809, file: !2312, line: 1006, column: 49)
!19815 = !DILocation(line: 1007, column: 52, scope: !19814)
!19816 = !DILocation(line: 1007, column: 39, scope: !19814)
!19817 = !DILocation(line: 1007, column: 25, scope: !19814)
!19818 = !DILocation(line: 1007, column: 28, scope: !19814)
!19819 = !DILocation(line: 1007, column: 37, scope: !19814)
!19820 = !DILocation(line: 1008, column: 29, scope: !19821)
!19821 = distinct !DILexicalBlock(scope: !19814, file: !2312, line: 1008, column: 29)
!19822 = !DILocation(line: 1008, column: 32, scope: !19821)
!19823 = !DILocation(line: 1008, column: 41, scope: !19821)
!19824 = !DILocation(line: 1008, column: 50, scope: !19821)
!19825 = !DILocation(line: 1008, column: 54, scope: !19821)
!19826 = !DILocation(line: 1008, column: 29, scope: !19814)
!19827 = !DILocation(line: 1009, column: 62, scope: !19828)
!19828 = distinct !DILexicalBlock(scope: !19829, file: !2312, line: 1009, column: 37)
!19829 = distinct !DILexicalBlock(scope: !19821, file: !2312, line: 1008, column: 74)
!19830 = !DILocation(line: 1009, column: 53, scope: !19828)
!19831 = !DILocation(line: 1009, column: 38, scope: !19828)
!19832 = !DILocation(line: 1009, column: 41, scope: !19828)
!19833 = !DILocation(line: 1009, column: 51, scope: !19828)
!19834 = !DILocation(line: 1009, column: 72, scope: !19828)
!19835 = !DILocation(line: 1009, column: 37, scope: !19829)
!19836 = !DILocation(line: 1010, column: 56, scope: !19837)
!19837 = distinct !DILexicalBlock(scope: !19828, file: !2312, line: 1009, column: 77)
!19838 = !DILocation(line: 1010, column: 41, scope: !19837)
!19839 = !DILocation(line: 1010, column: 44, scope: !19837)
!19840 = !DILocation(line: 1010, column: 54, scope: !19837)
!19841 = !DILocation(line: 1011, column: 41, scope: !19837)
!19842 = !DILocation(line: 1011, column: 44, scope: !19837)
!19843 = !DILocation(line: 1011, column: 53, scope: !19837)
!19844 = !DILocation(line: 1012, column: 33, scope: !19837)
!19845 = !DILocation(line: 1013, column: 41, scope: !19828)
!19846 = !DILocation(line: 1013, column: 44, scope: !19828)
!19847 = !DILocation(line: 1013, column: 54, scope: !19828)
!19848 = !DILocation(line: 1014, column: 25, scope: !19829)
!19849 = !DILocation(line: 1015, column: 25, scope: !19814)
!19850 = !DILocation(line: 1015, column: 28, scope: !19814)
!19851 = !DILocation(line: 1015, column: 38, scope: !19814)
!19852 = !DILocation(line: 1016, column: 17, scope: !19814)
!19853 = !DILocation(line: 1006, column: 37, scope: !19809)
!19854 = !DILabel(scope: !19775, name: "name", file: !2312, line: 1018)
!19855 = !DILocation(line: 1018, column: 1, scope: !19775)
!19856 = !DILocation(line: 1018, column: 21, scope: !19775)
!19857 = !DILocation(line: 1018, column: 25, scope: !19775)
!19858 = !DILocation(line: 1018, column: 36, scope: !19775)
!19859 = !DILocation(line: 1018, column: 34, scope: !19775)
!19860 = !DILocation(line: 1018, column: 19, scope: !19775)
!19861 = !DILocation(line: 1019, column: 19, scope: !19775)
!19862 = !DILocation(line: 1019, column: 22, scope: !19775)
!19863 = !DILocation(line: 1020, column: 25, scope: !19775)
!19864 = !DILocation(line: 1020, column: 28, scope: !19775)
!19865 = !DILocation(line: 1020, column: 31, scope: !19775)
!19866 = !DILocation(line: 1020, column: 17, scope: !19775)
!19867 = !DILocation(line: 1020, column: 41, scope: !19775)
!19868 = !DILocation(line: 1020, column: 44, scope: !19775)
!19869 = !DILocation(line: 1020, column: 56, scope: !19775)
!19870 = !DILabel(scope: !19775, name: "check_for_dir", file: !2312, line: 1021)
!19871 = !DILocation(line: 1021, column: 1, scope: !19775)
!19872 = !DILocation(line: 1022, column: 31, scope: !19775)
!19873 = !DILocation(line: 1022, column: 17, scope: !19775)
!19874 = !DILocation(line: 1022, column: 21, scope: !19775)
!19875 = !DILocation(line: 1022, column: 29, scope: !19775)
!19876 = !DILocation(line: 1023, column: 21, scope: !19877)
!19877 = distinct !DILexicalBlock(scope: !19775, file: !2312, line: 1023, column: 21)
!19878 = !DILocation(line: 1023, column: 24, scope: !19877)
!19879 = !DILocation(line: 1023, column: 33, scope: !19877)
!19880 = !DILocation(line: 1023, column: 21, scope: !19775)
!19881 = !DILocation(line: 1025, column: 25, scope: !19882)
!19882 = distinct !DILexicalBlock(scope: !19883, file: !2312, line: 1025, column: 25)
!19883 = distinct !DILexicalBlock(scope: !19877, file: !2312, line: 1024, column: 19)
!19884 = !DILocation(line: 1025, column: 28, scope: !19882)
!19885 = !DILocation(line: 1025, column: 39, scope: !19882)
!19886 = !DILocation(line: 1025, column: 47, scope: !19882)
!19887 = !DILocation(line: 1025, column: 25, scope: !19883)
!19888 = !DILocalVariable(name: "parent", scope: !19889, file: !2312, line: 1027, type: !2420)
!19889 = distinct !DILexicalBlock(scope: !19882, file: !2312, line: 1026, column: 23)
!19890 = !DILocation(line: 1027, column: 33, scope: !19889)
!19891 = !DILocation(line: 1027, column: 42, scope: !19889)
!19892 = !DILocation(line: 1027, column: 45, scope: !19889)
!19893 = !DILocation(line: 1028, column: 29, scope: !19894)
!19894 = distinct !DILexicalBlock(scope: !19889, file: !2312, line: 1028, column: 29)
!19895 = !DILocation(line: 1028, column: 37, scope: !19894)
!19896 = !DILocation(line: 1028, column: 58, scope: !19894)
!19897 = !DILocation(line: 1029, column: 29, scope: !19894)
!19898 = !DILocation(line: 1029, column: 32, scope: !19894)
!19899 = !DILocation(line: 1030, column: 29, scope: !19894)
!19900 = !DILocation(line: 1030, column: 32, scope: !19894)
!19901 = !DILocation(line: 1031, column: 29, scope: !19894)
!19902 = !DILocation(line: 1031, column: 52, scope: !19894)
!19903 = !DILocation(line: 1031, column: 60, scope: !19894)
!19904 = !DILocation(line: 1031, column: 64, scope: !19894)
!19905 = !DILocation(line: 1031, column: 33, scope: !19894)
!19906 = !DILocation(line: 1032, column: 33, scope: !19894)
!19907 = !DILocation(line: 1028, column: 29, scope: !19889)
!19908 = !DILocation(line: 1035, column: 27, scope: !19909)
!19909 = distinct !DILexicalBlock(scope: !19894, file: !2312, line: 1033, column: 27)
!19910 = !DILocation(line: 1038, column: 52, scope: !19911)
!19911 = distinct !DILexicalBlock(scope: !19894, file: !2312, line: 1037, column: 27)
!19912 = !DILocation(line: 1038, column: 56, scope: !19911)
!19913 = !DILocation(line: 1038, column: 43, scope: !19911)
!19914 = !DILocation(line: 1038, column: 29, scope: !19911)
!19915 = !DILocation(line: 1038, column: 32, scope: !19911)
!19916 = !DILocation(line: 1038, column: 41, scope: !19911)
!19917 = !DILocation(line: 1039, column: 33, scope: !19918)
!19918 = distinct !DILexicalBlock(scope: !19911, file: !2312, line: 1039, column: 33)
!19919 = !DILocation(line: 1040, column: 33, scope: !19918)
!19920 = !DILocation(line: 1040, column: 36, scope: !19918)
!19921 = !DILocation(line: 1040, column: 39, scope: !19918)
!19922 = !DILocation(line: 1040, column: 49, scope: !19918)
!19923 = !DILocation(line: 1041, column: 33, scope: !19918)
!19924 = !DILocation(line: 1041, column: 40, scope: !19918)
!19925 = !DILocation(line: 1041, column: 48, scope: !19918)
!19926 = !DILocation(line: 1041, column: 38, scope: !19918)
!19927 = !DILocation(line: 1042, column: 33, scope: !19918)
!19928 = !DILocation(line: 1042, column: 36, scope: !19918)
!19929 = !DILocation(line: 1042, column: 44, scope: !19918)
!19930 = !DILocation(line: 1042, column: 65, scope: !19918)
!19931 = !DILocation(line: 1039, column: 33, scope: !19911)
!19932 = !DILocation(line: 1043, column: 35, scope: !19918)
!19933 = !DILocation(line: 1043, column: 43, scope: !19918)
!19934 = !DILocation(line: 1043, column: 63, scope: !19918)
!19935 = !DILocation(line: 1045, column: 23, scope: !19889)
!19936 = !DILocation(line: 1047, column: 23, scope: !19882)
!19937 = !DILocation(line: 1047, column: 23, scope: !19938)
!19938 = distinct !DILexicalBlock(scope: !19939, file: !2312, line: 1047, column: 23)
!19939 = distinct !DILexicalBlock(scope: !19882, file: !2312, line: 1047, column: 23)
!19940 = !DILocation(line: 1047, column: 23, scope: !19939)
!19941 = !DILocation(line: 1048, column: 19, scope: !19883)
!19942 = !DILocation(line: 1050, column: 21, scope: !19943)
!19943 = distinct !DILexicalBlock(scope: !19775, file: !2312, line: 1050, column: 21)
!19944 = !DILocation(line: 1050, column: 24, scope: !19943)
!19945 = !DILocation(line: 1050, column: 33, scope: !19943)
!19946 = !DILocation(line: 1050, column: 21, scope: !19775)
!19947 = !DILocation(line: 1055, column: 25, scope: !19948)
!19948 = distinct !DILexicalBlock(scope: !19949, file: !2312, line: 1055, column: 25)
!19949 = distinct !DILexicalBlock(scope: !19943, file: !2312, line: 1051, column: 19)
!19950 = !DILocation(line: 1055, column: 28, scope: !19948)
!19951 = !DILocation(line: 1055, column: 38, scope: !19948)
!19952 = !DILocation(line: 1055, column: 25, scope: !19949)
!19953 = !DILocation(line: 1056, column: 37, scope: !19948)
!19954 = !DILocation(line: 1056, column: 40, scope: !19948)
!19955 = !DILocation(line: 1056, column: 51, scope: !19948)
!19956 = !DILocation(line: 1056, column: 23, scope: !19948)
!19957 = !DILocation(line: 1056, column: 27, scope: !19948)
!19958 = !DILocation(line: 1056, column: 35, scope: !19948)
!19959 = !DILocation(line: 1058, column: 38, scope: !19960)
!19960 = distinct !DILexicalBlock(scope: !19949, file: !2312, line: 1058, column: 25)
!19961 = !DILocation(line: 1058, column: 42, scope: !19960)
!19962 = !DILocation(line: 1058, column: 27, scope: !19960)
!19963 = !DILocation(line: 1058, column: 25, scope: !19949)
!19964 = !DILocation(line: 1060, column: 25, scope: !19965)
!19965 = distinct !DILexicalBlock(scope: !19960, file: !2312, line: 1059, column: 23)
!19966 = !DILocation(line: 1061, column: 25, scope: !19965)
!19967 = !DILocation(line: 1063, column: 19, scope: !19949)
!19968 = !DILocation(line: 1064, column: 24, scope: !19775)
!19969 = !DILocation(line: 1064, column: 17, scope: !19775)
!19970 = !DILocation(line: 979, column: 34, scope: !19769)
!19971 = !DILabel(scope: !19491, name: "cd_dot_dot", file: !2312, line: 1066)
!19972 = !DILocation(line: 1066, column: 1, scope: !19491)
!19973 = !DILocation(line: 1069, column: 13, scope: !19491)
!19974 = !DILocation(line: 1069, column: 18, scope: !19491)
!19975 = !DILocation(line: 1069, column: 11, scope: !19491)
!19976 = !DILocation(line: 1070, column: 23, scope: !19491)
!19977 = !DILocation(line: 1070, column: 9, scope: !19491)
!19978 = !DILocation(line: 1070, column: 13, scope: !19491)
!19979 = !DILocation(line: 1070, column: 21, scope: !19491)
!19980 = !DILocation(line: 1071, column: 14, scope: !19491)
!19981 = !DILocation(line: 1071, column: 9, scope: !19491)
!19982 = !DILocation(line: 1073, column: 13, scope: !19983)
!19983 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 1073, column: 13)
!19984 = !DILocation(line: 1073, column: 16, scope: !19983)
!19985 = !DILocation(line: 1073, column: 26, scope: !19983)
!19986 = !DILocation(line: 1073, column: 13, scope: !19491)
!19987 = !DILocation(line: 1078, column: 22, scope: !19988)
!19988 = distinct !DILexicalBlock(scope: !19983, file: !2312, line: 1073, column: 50)
!19989 = !DILocation(line: 1078, column: 17, scope: !19988)
!19990 = !DILocation(line: 1079, column: 17, scope: !19988)
!19991 = !DILocation(line: 1080, column: 25, scope: !19988)
!19992 = !DILocation(line: 1080, column: 29, scope: !19988)
!19993 = !DILocation(line: 1080, column: 37, scope: !19988)
!19994 = !DILocation(line: 1080, column: 17, scope: !19988)
!19995 = !DILocation(line: 1083, column: 9, scope: !19491)
!19996 = !DILocation(line: 1083, column: 9, scope: !19997)
!19997 = distinct !DILexicalBlock(scope: !19998, file: !2312, line: 1083, column: 9)
!19998 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 1083, column: 9)
!19999 = !DILocation(line: 1083, column: 9, scope: !19998)
!20000 = !DILocation(line: 1086, column: 9, scope: !19491)
!20001 = !DILocation(line: 1086, column: 13, scope: !19491)
!20002 = !DILocation(line: 1086, column: 22, scope: !19491)
!20003 = !DILocation(line: 1086, column: 25, scope: !19491)
!20004 = !DILocation(line: 1086, column: 38, scope: !19491)
!20005 = !DILocation(line: 1094, column: 13, scope: !20006)
!20006 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 1094, column: 13)
!20007 = !DILocation(line: 1094, column: 16, scope: !20006)
!20008 = !DILocation(line: 1094, column: 26, scope: !20006)
!20009 = !DILocation(line: 1094, column: 13, scope: !19491)
!20010 = !DILocation(line: 1095, column: 41, scope: !20011)
!20011 = distinct !DILexicalBlock(scope: !20012, file: !2312, line: 1095, column: 21)
!20012 = distinct !DILexicalBlock(scope: !20006, file: !2312, line: 1094, column: 44)
!20013 = !DILocation(line: 1095, column: 21, scope: !20011)
!20014 = !DILocation(line: 1095, column: 21, scope: !20012)
!20015 = !DILocation(line: 1096, column: 40, scope: !20016)
!20016 = distinct !DILexicalBlock(scope: !20011, file: !2312, line: 1095, column: 46)
!20017 = !DILocation(line: 1096, column: 25, scope: !20016)
!20018 = !DILocation(line: 1096, column: 28, scope: !20016)
!20019 = !DILocation(line: 1096, column: 38, scope: !20016)
!20020 = !DILocation(line: 1097, column: 25, scope: !20016)
!20021 = !DILocation(line: 1098, column: 17, scope: !20016)
!20022 = !DILocation(line: 1099, column: 9, scope: !20012)
!20023 = !DILocation(line: 1099, column: 20, scope: !20024)
!20024 = distinct !DILexicalBlock(scope: !20006, file: !2312, line: 1099, column: 20)
!20025 = !DILocation(line: 1099, column: 23, scope: !20024)
!20026 = !DILocation(line: 1099, column: 33, scope: !20024)
!20027 = !DILocation(line: 1099, column: 20, scope: !20006)
!20028 = !DILocation(line: 1100, column: 21, scope: !20029)
!20029 = distinct !DILexicalBlock(scope: !20030, file: !2312, line: 1100, column: 21)
!20030 = distinct !DILexicalBlock(scope: !20024, file: !2312, line: 1099, column: 50)
!20031 = !DILocation(line: 1100, column: 21, scope: !20030)
!20032 = !DILocation(line: 1101, column: 40, scope: !20033)
!20033 = distinct !DILexicalBlock(scope: !20029, file: !2312, line: 1100, column: 47)
!20034 = !DILocation(line: 1101, column: 25, scope: !20033)
!20035 = !DILocation(line: 1101, column: 28, scope: !20033)
!20036 = !DILocation(line: 1101, column: 38, scope: !20033)
!20037 = !DILocation(line: 1102, column: 25, scope: !20033)
!20038 = !DILocation(line: 1103, column: 17, scope: !20033)
!20039 = !DILocation(line: 1104, column: 29, scope: !20030)
!20040 = !DILocation(line: 1104, column: 32, scope: !20030)
!20041 = !DILocation(line: 1104, column: 23, scope: !20030)
!20042 = !DILocation(line: 1105, column: 9, scope: !20030)
!20043 = !DILocation(line: 1105, column: 22, scope: !20044)
!20044 = distinct !DILexicalBlock(scope: !20024, file: !2312, line: 1105, column: 20)
!20045 = !DILocation(line: 1105, column: 25, scope: !20044)
!20046 = !DILocation(line: 1105, column: 35, scope: !20044)
!20047 = !DILocation(line: 1105, column: 52, scope: !20044)
!20048 = !DILocation(line: 1106, column: 39, scope: !20044)
!20049 = !DILocation(line: 1106, column: 43, scope: !20044)
!20050 = !DILocation(line: 1106, column: 46, scope: !20044)
!20051 = !DILocation(line: 1106, column: 20, scope: !20044)
!20052 = !DILocation(line: 1105, column: 20, scope: !20024)
!20053 = !DILocation(line: 1107, column: 32, scope: !20054)
!20054 = distinct !DILexicalBlock(scope: !20044, file: !2312, line: 1106, column: 69)
!20055 = !DILocation(line: 1107, column: 17, scope: !20054)
!20056 = !DILocation(line: 1107, column: 20, scope: !20054)
!20057 = !DILocation(line: 1107, column: 30, scope: !20054)
!20058 = !DILocation(line: 1108, column: 17, scope: !20054)
!20059 = !DILocation(line: 1109, column: 9, scope: !20054)
!20060 = !DILocation(line: 1114, column: 13, scope: !20061)
!20061 = distinct !DILexicalBlock(scope: !19491, file: !2312, line: 1114, column: 13)
!20062 = !DILocation(line: 1114, column: 16, scope: !20061)
!20063 = !DILocation(line: 1114, column: 25, scope: !20061)
!20064 = !DILocation(line: 1114, column: 13, scope: !19491)
!20065 = !DILocation(line: 1115, column: 31, scope: !20066)
!20066 = distinct !DILexicalBlock(scope: !20061, file: !2312, line: 1114, column: 36)
!20067 = !DILocation(line: 1115, column: 34, scope: !20066)
!20068 = !DILocation(line: 1115, column: 17, scope: !20066)
!20069 = !DILocation(line: 1115, column: 20, scope: !20066)
!20070 = !DILocation(line: 1115, column: 29, scope: !20066)
!20071 = !DILocation(line: 1116, column: 21, scope: !20072)
!20072 = distinct !DILexicalBlock(scope: !20066, file: !2312, line: 1116, column: 21)
!20073 = !DILocation(line: 1116, column: 24, scope: !20072)
!20074 = !DILocation(line: 1116, column: 34, scope: !20072)
!20075 = !DILocation(line: 1116, column: 21, scope: !20066)
!20076 = !DILocation(line: 1117, column: 25, scope: !20072)
!20077 = !DILocation(line: 1117, column: 25, scope: !20078)
!20078 = distinct !DILexicalBlock(scope: !20072, file: !2312, line: 1117, column: 25)
!20079 = !DILocation(line: 1118, column: 9, scope: !20066)
!20080 = !DILocation(line: 1119, column: 16, scope: !19491)
!20081 = !DILocation(line: 1119, column: 41, scope: !19491)
!20082 = !DILocation(line: 1119, column: 9, scope: !19491)
!20083 = !DILocation(line: 1120, column: 1, scope: !19491)
!20084 = distinct !DISubprogram(name: "leave_dir", scope: !2436, file: !2436, line: 125, type: !2450, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!20085 = !DILocalVariable(name: "fts", arg: 1, scope: !20084, file: !2436, line: 125, type: !2337)
!20086 = !DILocation(line: 125, column: 17, scope: !20084)
!20087 = !DILocalVariable(name: "ent", arg: 2, scope: !20084, file: !2436, line: 125, type: !2420)
!20088 = !DILocation(line: 125, column: 30, scope: !20084)
!20089 = !DILocalVariable(name: "st", scope: !20084, file: !2436, line: 127, type: !2452)
!20090 = !DILocation(line: 127, column: 22, scope: !20084)
!20091 = !DILocation(line: 127, column: 27, scope: !20084)
!20092 = !DILocation(line: 127, column: 32, scope: !20084)
!20093 = !DILocation(line: 128, column: 7, scope: !20094)
!20094 = distinct !DILexicalBlock(scope: !20084, file: !2436, line: 128, column: 7)
!20095 = !DILocation(line: 128, column: 12, scope: !20094)
!20096 = !DILocation(line: 128, column: 24, scope: !20094)
!20097 = !DILocation(line: 128, column: 7, scope: !20084)
!20098 = !DILocalVariable(name: "obj", scope: !20099, file: !2436, line: 130, type: !2435)
!20099 = distinct !DILexicalBlock(scope: !20094, file: !2436, line: 129, column: 5)
!20100 = !DILocation(line: 130, column: 25, scope: !20099)
!20101 = !DILocalVariable(name: "found", scope: !20099, file: !2436, line: 131, type: !53)
!20102 = !DILocation(line: 131, column: 13, scope: !20099)
!20103 = !DILocation(line: 132, column: 17, scope: !20099)
!20104 = !DILocation(line: 132, column: 21, scope: !20099)
!20105 = !DILocation(line: 132, column: 11, scope: !20099)
!20106 = !DILocation(line: 132, column: 15, scope: !20099)
!20107 = !DILocation(line: 133, column: 17, scope: !20099)
!20108 = !DILocation(line: 133, column: 21, scope: !20099)
!20109 = !DILocation(line: 133, column: 11, scope: !20099)
!20110 = !DILocation(line: 133, column: 15, scope: !20099)
!20111 = !DILocation(line: 134, column: 28, scope: !20099)
!20112 = !DILocation(line: 134, column: 33, scope: !20099)
!20113 = !DILocation(line: 134, column: 43, scope: !20099)
!20114 = !DILocation(line: 134, column: 47, scope: !20099)
!20115 = !DILocation(line: 134, column: 15, scope: !20099)
!20116 = !DILocation(line: 134, column: 13, scope: !20099)
!20117 = !DILocation(line: 135, column: 12, scope: !20118)
!20118 = distinct !DILexicalBlock(scope: !20099, file: !2436, line: 135, column: 11)
!20119 = !DILocation(line: 135, column: 11, scope: !20099)
!20120 = !DILocation(line: 136, column: 9, scope: !20118)
!20121 = !DILocation(line: 137, column: 13, scope: !20099)
!20122 = !DILocation(line: 137, column: 7, scope: !20099)
!20123 = !DILocation(line: 138, column: 5, scope: !20099)
!20124 = !DILocalVariable(name: "parent", scope: !20125, file: !2436, line: 141, type: !2420)
!20125 = distinct !DILexicalBlock(scope: !20094, file: !2436, line: 140, column: 5)
!20126 = !DILocation(line: 141, column: 15, scope: !20125)
!20127 = !DILocation(line: 141, column: 24, scope: !20125)
!20128 = !DILocation(line: 141, column: 29, scope: !20125)
!20129 = !DILocation(line: 142, column: 11, scope: !20130)
!20130 = distinct !DILexicalBlock(scope: !20125, file: !2436, line: 142, column: 11)
!20131 = !DILocation(line: 142, column: 18, scope: !20130)
!20132 = !DILocation(line: 142, column: 26, scope: !20130)
!20133 = !DILocation(line: 142, column: 34, scope: !20130)
!20134 = !DILocation(line: 142, column: 42, scope: !20130)
!20135 = !DILocation(line: 142, column: 31, scope: !20130)
!20136 = !DILocation(line: 142, column: 11, scope: !20125)
!20137 = !DILocation(line: 143, column: 9, scope: !20130)
!20138 = !DILocation(line: 143, column: 9, scope: !20139)
!20139 = distinct !DILexicalBlock(scope: !20140, file: !2436, line: 143, column: 9)
!20140 = distinct !DILexicalBlock(scope: !20130, file: !2436, line: 143, column: 9)
!20141 = !{!20142, !3183, i64 16}
!20142 = !{!"cycle_check_state", !3875, i64 0, !3183, i64 16, !2986, i64 24}
!20143 = !DILocation(line: 143, column: 9, scope: !20140)
!20144 = !DILocation(line: 143, column: 9, scope: !20145)
!20145 = distinct !DILexicalBlock(scope: !20140, file: !2436, line: 143, column: 9)
!20146 = !{!20142, !3183, i64 0}
!20147 = !{!20142, !3183, i64 8}
!20148 = !DILocation(line: 143, column: 9, scope: !20149)
!20149 = distinct !DILexicalBlock(scope: !20145, file: !2436, line: 143, column: 9)
!20150 = !DILocation(line: 146, column: 1, scope: !20084)
!20151 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !2312, file: !2312, line: 2043, type: !2500, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!20152 = !DILocalVariable(name: "sp", arg: 1, scope: !20151, file: !2312, line: 2043, type: !2337)
!20153 = !DILocation(line: 2043, column: 26, scope: !20151)
!20154 = !DILocalVariable(name: "p", arg: 2, scope: !20151, file: !2312, line: 2043, type: !2420)
!20155 = !DILocation(line: 2043, column: 38, scope: !20151)
!20156 = !DILocalVariable(name: "fd", arg: 3, scope: !20151, file: !2312, line: 2043, type: !7)
!20157 = !DILocation(line: 2043, column: 45, scope: !20151)
!20158 = !DILocalVariable(name: "dir", arg: 4, scope: !20151, file: !2312, line: 2043, type: !115)
!20159 = !DILocation(line: 2043, column: 61, scope: !20151)
!20160 = !DILocalVariable(name: "ret", scope: !20151, file: !2312, line: 2045, type: !7)
!20161 = !DILocation(line: 2045, column: 13, scope: !20151)
!20162 = !DILocalVariable(name: "is_dotdot", scope: !20151, file: !2312, line: 2046, type: !120)
!20163 = !DILocation(line: 2046, column: 14, scope: !20151)
!20164 = !DILocation(line: 2046, column: 26, scope: !20151)
!20165 = !DILocation(line: 2046, column: 30, scope: !20151)
!20166 = !DILocation(line: 2046, column: 33, scope: !20151)
!20167 = !DILocation(line: 0, scope: !20151)
!20168 = !DILocalVariable(name: "newfd", scope: !20151, file: !2312, line: 2047, type: !7)
!20169 = !DILocation(line: 2047, column: 13, scope: !20151)
!20170 = !DILocation(line: 2053, column: 13, scope: !20171)
!20171 = distinct !DILexicalBlock(scope: !20151, file: !2312, line: 2053, column: 13)
!20172 = !DILocation(line: 2053, column: 13, scope: !20151)
!20173 = !DILocation(line: 2055, column: 17, scope: !20174)
!20174 = distinct !DILexicalBlock(scope: !20175, file: !2312, line: 2055, column: 17)
!20175 = distinct !DILexicalBlock(scope: !20171, file: !2312, line: 2054, column: 11)
!20176 = !DILocation(line: 2055, column: 35, scope: !20174)
!20177 = !DILocation(line: 2055, column: 43, scope: !20174)
!20178 = !DILocation(line: 2055, column: 40, scope: !20174)
!20179 = !DILocation(line: 2055, column: 17, scope: !20175)
!20180 = !DILocation(line: 2056, column: 22, scope: !20174)
!20181 = !DILocation(line: 2056, column: 15, scope: !20174)
!20182 = !DILocation(line: 2057, column: 13, scope: !20175)
!20183 = !DILocation(line: 2060, column: 13, scope: !20184)
!20184 = distinct !DILexicalBlock(scope: !20151, file: !2312, line: 2060, column: 13)
!20185 = !DILocation(line: 2060, column: 16, scope: !20184)
!20186 = !DILocation(line: 2060, column: 20, scope: !20184)
!20187 = !DILocation(line: 2060, column: 23, scope: !20184)
!20188 = !DILocation(line: 2060, column: 33, scope: !20184)
!20189 = !DILocation(line: 2060, column: 36, scope: !20184)
!20190 = !DILocation(line: 2060, column: 13, scope: !20151)
!20191 = !DILocation(line: 2067, column: 35, scope: !20192)
!20192 = distinct !DILexicalBlock(scope: !20193, file: !2312, line: 2067, column: 18)
!20193 = distinct !DILexicalBlock(scope: !20184, file: !2312, line: 2061, column: 11)
!20194 = !DILocation(line: 2067, column: 39, scope: !20192)
!20195 = !DILocation(line: 2067, column: 20, scope: !20192)
!20196 = !DILocation(line: 2067, column: 18, scope: !20193)
!20197 = !DILocalVariable(name: "parent_fd", scope: !20198, file: !2312, line: 2069, type: !7)
!20198 = distinct !DILexicalBlock(scope: !20192, file: !2312, line: 2068, column: 15)
!20199 = !DILocation(line: 2069, column: 21, scope: !20198)
!20200 = !DILocation(line: 2071, column: 42, scope: !20198)
!20201 = !DILocation(line: 2071, column: 46, scope: !20198)
!20202 = !DILocation(line: 2071, column: 29, scope: !20198)
!20203 = !DILocation(line: 2071, column: 27, scope: !20198)
!20204 = !DILocation(line: 2072, column: 26, scope: !20205)
!20205 = distinct !DILexicalBlock(scope: !20198, file: !2312, line: 2072, column: 21)
!20206 = !DILocation(line: 2072, column: 23, scope: !20205)
!20207 = !DILocation(line: 2072, column: 21, scope: !20198)
!20208 = !DILocation(line: 2074, column: 26, scope: !20209)
!20209 = distinct !DILexicalBlock(scope: !20205, file: !2312, line: 2073, column: 19)
!20210 = !DILocation(line: 2074, column: 24, scope: !20209)
!20211 = !DILocation(line: 2075, column: 25, scope: !20209)
!20212 = !DILocation(line: 2076, column: 19, scope: !20209)
!20213 = !DILocation(line: 2077, column: 15, scope: !20198)
!20214 = !DILocation(line: 2078, column: 11, scope: !20193)
!20215 = !DILocation(line: 2080, column: 17, scope: !20151)
!20216 = !DILocation(line: 2080, column: 15, scope: !20151)
!20217 = !DILocation(line: 2081, column: 13, scope: !20218)
!20218 = distinct !DILexicalBlock(scope: !20151, file: !2312, line: 2081, column: 13)
!20219 = !DILocation(line: 2081, column: 16, scope: !20218)
!20220 = !DILocation(line: 2081, column: 20, scope: !20218)
!20221 = !DILocation(line: 2081, column: 41, scope: !20218)
!20222 = !DILocation(line: 2081, column: 45, scope: !20218)
!20223 = !DILocation(line: 2081, column: 32, scope: !20218)
!20224 = !DILocation(line: 2081, column: 30, scope: !20218)
!20225 = !DILocation(line: 2081, column: 51, scope: !20218)
!20226 = !DILocation(line: 2081, column: 13, scope: !20151)
!20227 = !DILocation(line: 2082, column: 11, scope: !20218)
!20228 = !DILocation(line: 2091, column: 13, scope: !20229)
!20229 = distinct !DILexicalBlock(scope: !20151, file: !2312, line: 2091, column: 13)
!20230 = !DILocation(line: 2092, column: 13, scope: !20229)
!20231 = !DILocation(line: 2092, column: 17, scope: !20229)
!20232 = !DILocation(line: 2092, column: 21, scope: !20229)
!20233 = !DILocation(line: 2092, column: 24, scope: !20229)
!20234 = !DILocation(line: 2091, column: 13, scope: !20151)
!20235 = !DILocalVariable(name: "sb", scope: !20236, file: !2312, line: 2094, type: !2393)
!20236 = distinct !DILexicalBlock(scope: !20229, file: !2312, line: 2093, column: 11)
!20237 = !DILocation(line: 2094, column: 25, scope: !20236)
!20238 = !DILocation(line: 2095, column: 23, scope: !20239)
!20239 = distinct !DILexicalBlock(scope: !20236, file: !2312, line: 2095, column: 17)
!20240 = !DILocation(line: 2095, column: 17, scope: !20239)
!20241 = !DILocation(line: 2095, column: 17, scope: !20236)
!20242 = !DILocation(line: 2097, column: 21, scope: !20243)
!20243 = distinct !DILexicalBlock(scope: !20239, file: !2312, line: 2096, column: 15)
!20244 = !DILocation(line: 2098, column: 17, scope: !20243)
!20245 = !DILocation(line: 2100, column: 17, scope: !20246)
!20246 = distinct !DILexicalBlock(scope: !20236, file: !2312, line: 2100, column: 17)
!20247 = !DILocation(line: 2100, column: 20, scope: !20246)
!20248 = !DILocation(line: 2100, column: 31, scope: !20246)
!20249 = !DILocation(line: 2100, column: 44, scope: !20246)
!20250 = !DILocation(line: 2100, column: 38, scope: !20246)
!20251 = !DILocation(line: 2101, column: 17, scope: !20246)
!20252 = !DILocation(line: 2101, column: 20, scope: !20246)
!20253 = !DILocation(line: 2101, column: 23, scope: !20246)
!20254 = !DILocation(line: 2101, column: 34, scope: !20246)
!20255 = !DILocation(line: 2101, column: 47, scope: !20246)
!20256 = !DILocation(line: 2101, column: 41, scope: !20246)
!20257 = !DILocation(line: 2100, column: 17, scope: !20236)
!20258 = !DILocation(line: 2103, column: 17, scope: !20259)
!20259 = distinct !DILexicalBlock(scope: !20246, file: !2312, line: 2102, column: 15)
!20260 = !DILocation(line: 2104, column: 21, scope: !20259)
!20261 = !DILocation(line: 2105, column: 17, scope: !20259)
!20262 = !DILocation(line: 2107, column: 11, scope: !20236)
!20263 = !DILocation(line: 2109, column: 13, scope: !20264)
!20264 = distinct !DILexicalBlock(scope: !20151, file: !2312, line: 2109, column: 13)
!20265 = !DILocation(line: 2109, column: 13, scope: !20151)
!20266 = !DILocation(line: 2111, column: 29, scope: !20267)
!20267 = distinct !DILexicalBlock(scope: !20264, file: !2312, line: 2110, column: 11)
!20268 = !DILocation(line: 2111, column: 33, scope: !20267)
!20269 = !DILocation(line: 2111, column: 42, scope: !20267)
!20270 = !DILocation(line: 2111, column: 40, scope: !20267)
!20271 = !DILocation(line: 2111, column: 13, scope: !20267)
!20272 = !DILocation(line: 2112, column: 13, scope: !20267)
!20273 = !DILocation(line: 2115, column: 22, scope: !20151)
!20274 = !DILocation(line: 2115, column: 15, scope: !20151)
!20275 = !DILocation(line: 2115, column: 13, scope: !20151)
!20276 = !DILocation(line: 2115, column: 9, scope: !20151)
!20277 = !DILabel(scope: !20151, name: "bail", file: !2312, line: 2116)
!20278 = !DILocation(line: 2116, column: 1, scope: !20151)
!20279 = !DILocation(line: 2117, column: 13, scope: !20280)
!20280 = distinct !DILexicalBlock(scope: !20151, file: !2312, line: 2117, column: 13)
!20281 = !DILocation(line: 2117, column: 16, scope: !20280)
!20282 = !DILocation(line: 2117, column: 13, scope: !20151)
!20283 = !DILocalVariable(name: "oerrno", scope: !20284, file: !2312, line: 2119, type: !7)
!20284 = distinct !DILexicalBlock(scope: !20280, file: !2312, line: 2118, column: 11)
!20285 = !DILocation(line: 2119, column: 17, scope: !20284)
!20286 = !DILocation(line: 2119, column: 26, scope: !20284)
!20287 = !DILocation(line: 2120, column: 25, scope: !20284)
!20288 = !DILocation(line: 2120, column: 19, scope: !20284)
!20289 = !DILocation(line: 2121, column: 13, scope: !20284)
!20290 = !DILocation(line: 2122, column: 11, scope: !20284)
!20291 = !DILocation(line: 2123, column: 16, scope: !20151)
!20292 = !DILocation(line: 2123, column: 9, scope: !20151)
!20293 = !DILocation(line: 2124, column: 1, scope: !20151)
!20294 = distinct !DISubprogram(name: "fts_build", scope: !2312, file: !2312, line: 1300, type: !2427, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!20295 = !DILocalVariable(name: "sp", arg: 1, scope: !20294, file: !2312, line: 1300, type: !2337)
!20296 = !DILocation(line: 1300, column: 26, scope: !20294)
!20297 = !DILocalVariable(name: "type", arg: 2, scope: !20294, file: !2312, line: 1300, type: !7)
!20298 = !DILocation(line: 1300, column: 34, scope: !20294)
!20299 = !DILocalVariable(name: "p", scope: !20294, file: !2312, line: 1302, type: !2420)
!20300 = !DILocation(line: 1302, column: 26, scope: !20294)
!20301 = !DILocalVariable(name: "head", scope: !20294, file: !2312, line: 1302, type: !2420)
!20302 = !DILocation(line: 1302, column: 30, scope: !20294)
!20303 = !DILocalVariable(name: "nitems", scope: !20294, file: !2312, line: 1303, type: !55)
!20304 = !DILocation(line: 1303, column: 25, scope: !20294)
!20305 = !DILocalVariable(name: "tail", scope: !20294, file: !2312, line: 1304, type: !2420)
!20306 = !DILocation(line: 1304, column: 17, scope: !20294)
!20307 = !DILocalVariable(name: "oldaddr", scope: !20294, file: !2312, line: 1305, type: !53)
!20308 = !DILocation(line: 1305, column: 15, scope: !20294)
!20309 = !DILocalVariable(name: "saved_errno", scope: !20294, file: !2312, line: 1306, type: !7)
!20310 = !DILocation(line: 1306, column: 13, scope: !20294)
!20311 = !DILocalVariable(name: "descend", scope: !20294, file: !2312, line: 1307, type: !120)
!20312 = !DILocation(line: 1307, column: 14, scope: !20294)
!20313 = !DILocalVariable(name: "doadjust", scope: !20294, file: !2312, line: 1308, type: !120)
!20314 = !DILocation(line: 1308, column: 14, scope: !20294)
!20315 = !DILocalVariable(name: "level", scope: !20294, file: !2312, line: 1309, type: !568)
!20316 = !DILocation(line: 1309, column: 19, scope: !20294)
!20317 = !DILocalVariable(name: "len", scope: !20294, file: !2312, line: 1310, type: !55)
!20318 = !DILocation(line: 1310, column: 16, scope: !20294)
!20319 = !DILocalVariable(name: "maxlen", scope: !20294, file: !2312, line: 1310, type: !55)
!20320 = !DILocation(line: 1310, column: 21, scope: !20294)
!20321 = !DILocalVariable(name: "new_len", scope: !20294, file: !2312, line: 1310, type: !55)
!20322 = !DILocation(line: 1310, column: 29, scope: !20294)
!20323 = !DILocalVariable(name: "cp", scope: !20294, file: !2312, line: 1311, type: !9)
!20324 = !DILocation(line: 1311, column: 15, scope: !20294)
!20325 = !DILocalVariable(name: "dir_fd", scope: !20294, file: !2312, line: 1312, type: !7)
!20326 = !DILocation(line: 1312, column: 13, scope: !20294)
!20327 = !DILocalVariable(name: "cur", scope: !20294, file: !2312, line: 1313, type: !2420)
!20328 = !DILocation(line: 1313, column: 17, scope: !20294)
!20329 = !DILocation(line: 1313, column: 23, scope: !20294)
!20330 = !DILocation(line: 1313, column: 27, scope: !20294)
!20331 = !DILocalVariable(name: "continue_readdir", scope: !20294, file: !2312, line: 1314, type: !120)
!20332 = !DILocation(line: 1314, column: 14, scope: !20294)
!20333 = !DILocation(line: 1314, column: 35, scope: !20294)
!20334 = !DILocation(line: 1314, column: 40, scope: !20294)
!20335 = !DILocation(line: 1314, column: 34, scope: !20294)
!20336 = !DILocation(line: 1314, column: 33, scope: !20294)
!20337 = !DILocalVariable(name: "sort_by_inode", scope: !20294, file: !2312, line: 1315, type: !120)
!20338 = !DILocation(line: 1315, column: 14, scope: !20294)
!20339 = !DILocalVariable(name: "max_entries", scope: !20294, file: !2312, line: 1316, type: !55)
!20340 = !DILocation(line: 1316, column: 16, scope: !20294)
!20341 = !DILocation(line: 1321, column: 13, scope: !20342)
!20342 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1321, column: 13)
!20343 = !DILocation(line: 1321, column: 13, scope: !20294)
!20344 = !DILocalVariable(name: "dp", scope: !20345, file: !2312, line: 1323, type: !609)
!20345 = distinct !DILexicalBlock(scope: !20342, file: !2312, line: 1322, column: 11)
!20346 = !DILocation(line: 1323, column: 18, scope: !20345)
!20347 = !DILocation(line: 1323, column: 23, scope: !20345)
!20348 = !DILocation(line: 1323, column: 28, scope: !20345)
!20349 = !DILocation(line: 1324, column: 29, scope: !20345)
!20350 = !DILocation(line: 1324, column: 22, scope: !20345)
!20351 = !DILocation(line: 1324, column: 20, scope: !20345)
!20352 = !DILocation(line: 1325, column: 17, scope: !20353)
!20353 = distinct !DILexicalBlock(scope: !20345, file: !2312, line: 1325, column: 17)
!20354 = !DILocation(line: 1325, column: 24, scope: !20353)
!20355 = !DILocation(line: 1325, column: 17, scope: !20345)
!20356 = !DILocation(line: 1327, column: 17, scope: !20357)
!20357 = distinct !DILexicalBlock(scope: !20353, file: !2312, line: 1326, column: 15)
!20358 = !DILocation(line: 1327, column: 17, scope: !20359)
!20359 = distinct !DILexicalBlock(scope: !20357, file: !2312, line: 1327, column: 17)
!20360 = !DILocation(line: 1328, column: 21, scope: !20361)
!20361 = distinct !DILexicalBlock(scope: !20357, file: !2312, line: 1328, column: 21)
!20362 = !DILocation(line: 1328, column: 26, scope: !20361)
!20363 = !DILocation(line: 1328, column: 21, scope: !20357)
!20364 = !DILocation(line: 1330, column: 21, scope: !20365)
!20365 = distinct !DILexicalBlock(scope: !20361, file: !2312, line: 1329, column: 19)
!20366 = !DILocation(line: 1330, column: 26, scope: !20365)
!20367 = !DILocation(line: 1330, column: 35, scope: !20365)
!20368 = !DILocation(line: 1331, column: 38, scope: !20365)
!20369 = !DILocation(line: 1331, column: 21, scope: !20365)
!20370 = !DILocation(line: 1331, column: 26, scope: !20365)
!20371 = !DILocation(line: 1331, column: 36, scope: !20365)
!20372 = !DILocation(line: 1332, column: 19, scope: !20365)
!20373 = !DILocation(line: 1333, column: 17, scope: !20357)
!20374 = !DILocation(line: 1335, column: 11, scope: !20345)
!20375 = !DILocation(line: 1340, column: 34, scope: !20376)
!20376 = distinct !DILexicalBlock(scope: !20377, file: !2312, line: 1340, column: 17)
!20377 = distinct !DILexicalBlock(scope: !20342, file: !2312, line: 1337, column: 11)
!20378 = !DILocation(line: 0, scope: !20376)
!20379 = !DILocation(line: 1340, column: 18, scope: !20376)
!20380 = !DILocation(line: 1340, column: 23, scope: !20376)
!20381 = !DILocation(line: 1340, column: 32, scope: !20376)
!20382 = !DILocation(line: 1340, column: 74, scope: !20376)
!20383 = !DILocation(line: 1340, column: 17, scope: !20377)
!20384 = !DILocation(line: 1342, column: 21, scope: !20385)
!20385 = distinct !DILexicalBlock(scope: !20386, file: !2312, line: 1342, column: 21)
!20386 = distinct !DILexicalBlock(scope: !20376, file: !2312, line: 1341, column: 15)
!20387 = !DILocation(line: 1342, column: 26, scope: !20385)
!20388 = !DILocation(line: 1342, column: 21, scope: !20386)
!20389 = !DILocation(line: 1344, column: 21, scope: !20390)
!20390 = distinct !DILexicalBlock(scope: !20385, file: !2312, line: 1343, column: 19)
!20391 = !DILocation(line: 1344, column: 26, scope: !20390)
!20392 = !DILocation(line: 1344, column: 35, scope: !20390)
!20393 = !DILocation(line: 1345, column: 38, scope: !20390)
!20394 = !DILocation(line: 1345, column: 21, scope: !20390)
!20395 = !DILocation(line: 1345, column: 26, scope: !20390)
!20396 = !DILocation(line: 1345, column: 36, scope: !20390)
!20397 = !DILocation(line: 1346, column: 19, scope: !20390)
!20398 = !DILocation(line: 1347, column: 17, scope: !20386)
!20399 = !DILocation(line: 1352, column: 17, scope: !20400)
!20400 = distinct !DILexicalBlock(scope: !20377, file: !2312, line: 1352, column: 17)
!20401 = !DILocation(line: 1352, column: 22, scope: !20400)
!20402 = !DILocation(line: 1352, column: 31, scope: !20400)
!20403 = !DILocation(line: 1352, column: 17, scope: !20377)
!20404 = !DILocation(line: 1353, column: 40, scope: !20400)
!20405 = !DILocation(line: 1353, column: 44, scope: !20400)
!20406 = !DILocation(line: 1353, column: 31, scope: !20400)
!20407 = !DILocation(line: 1353, column: 15, scope: !20400)
!20408 = !DILocation(line: 1353, column: 20, scope: !20400)
!20409 = !DILocation(line: 1353, column: 29, scope: !20400)
!20410 = !DILocation(line: 1354, column: 22, scope: !20411)
!20411 = distinct !DILexicalBlock(scope: !20400, file: !2312, line: 1354, column: 22)
!20412 = !DILocation(line: 1354, column: 26, scope: !20411)
!20413 = !DILocation(line: 1354, column: 38, scope: !20411)
!20414 = !DILocation(line: 1354, column: 22, scope: !20400)
!20415 = !DILocation(line: 1361, column: 17, scope: !20416)
!20416 = distinct !DILexicalBlock(scope: !20411, file: !2312, line: 1355, column: 15)
!20417 = !DILocation(line: 1361, column: 17, scope: !20418)
!20418 = distinct !DILexicalBlock(scope: !20416, file: !2312, line: 1361, column: 17)
!20419 = !DILocation(line: 1362, column: 27, scope: !20416)
!20420 = !DILocation(line: 1362, column: 31, scope: !20416)
!20421 = !DILocation(line: 1362, column: 17, scope: !20416)
!20422 = !DILocation(line: 1363, column: 34, scope: !20423)
!20423 = distinct !DILexicalBlock(scope: !20416, file: !2312, line: 1363, column: 21)
!20424 = !DILocation(line: 1363, column: 38, scope: !20423)
!20425 = !DILocation(line: 1363, column: 23, scope: !20423)
!20426 = !DILocation(line: 1363, column: 21, scope: !20416)
!20427 = !DILocation(line: 1365, column: 21, scope: !20428)
!20428 = distinct !DILexicalBlock(scope: !20423, file: !2312, line: 1364, column: 19)
!20429 = !DILocation(line: 1366, column: 21, scope: !20428)
!20430 = !DILocation(line: 1368, column: 15, scope: !20416)
!20431 = !DILocation(line: 1378, column: 23, scope: !20294)
!20432 = !DILocation(line: 1378, column: 27, scope: !20294)
!20433 = !DILocation(line: 1378, column: 21, scope: !20294)
!20434 = !DILocation(line: 1395, column: 13, scope: !20435)
!20435 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1395, column: 13)
!20436 = !DILocation(line: 1395, column: 13, scope: !20294)
!20437 = !DILocation(line: 1399, column: 21, scope: !20438)
!20438 = distinct !DILexicalBlock(scope: !20435, file: !2312, line: 1396, column: 11)
!20439 = !DILocation(line: 1400, column: 11, scope: !20438)
!20440 = !DILocation(line: 1405, column: 24, scope: !20441)
!20441 = distinct !DILexicalBlock(scope: !20435, file: !2312, line: 1402, column: 11)
!20442 = !DILocation(line: 1405, column: 29, scope: !20441)
!20443 = !DILocation(line: 1406, column: 24, scope: !20441)
!20444 = !DILocation(line: 1406, column: 30, scope: !20441)
!20445 = !DILocation(line: 1406, column: 49, scope: !20441)
!20446 = !DILocation(line: 1406, column: 52, scope: !20441)
!20447 = !DILocation(line: 1407, column: 30, scope: !20441)
!20448 = !DILocation(line: 1407, column: 35, scope: !20441)
!20449 = !DILocation(line: 1408, column: 30, scope: !20441)
!20450 = !DILocation(line: 1408, column: 33, scope: !20441)
!20451 = !DILocation(line: 1408, column: 38, scope: !20441)
!20452 = !DILocation(line: 1408, column: 49, scope: !20441)
!20453 = !DILocation(line: 1408, column: 58, scope: !20441)
!20454 = !DILocation(line: 1409, column: 30, scope: !20441)
!20455 = !DILocation(line: 1409, column: 53, scope: !20441)
!20456 = !DILocation(line: 1409, column: 58, scope: !20441)
!20457 = !DILocation(line: 1409, column: 34, scope: !20441)
!20458 = !DILocation(line: 1410, column: 34, scope: !20441)
!20459 = !DILocation(line: 0, scope: !20441)
!20460 = !DILocation(line: 1406, column: 27, scope: !20441)
!20461 = !DILocation(line: 1405, column: 21, scope: !20441)
!20462 = !DILocation(line: 1411, column: 17, scope: !20463)
!20463 = distinct !DILexicalBlock(scope: !20441, file: !2312, line: 1411, column: 17)
!20464 = !DILocation(line: 1411, column: 25, scope: !20463)
!20465 = !DILocation(line: 1411, column: 28, scope: !20463)
!20466 = !DILocation(line: 1411, column: 33, scope: !20463)
!20467 = !DILocation(line: 1411, column: 17, scope: !20441)
!20468 = !DILocation(line: 1413, column: 21, scope: !20469)
!20469 = distinct !DILexicalBlock(scope: !20470, file: !2312, line: 1413, column: 21)
!20470 = distinct !DILexicalBlock(scope: !20463, file: !2312, line: 1412, column: 15)
!20471 = !DILocation(line: 1413, column: 21, scope: !20470)
!20472 = !DILocation(line: 1414, column: 35, scope: !20469)
!20473 = !DILocation(line: 1414, column: 28, scope: !20469)
!20474 = !DILocation(line: 1414, column: 26, scope: !20469)
!20475 = !DILocation(line: 1414, column: 19, scope: !20469)
!20476 = !DILocation(line: 1415, column: 21, scope: !20477)
!20477 = distinct !DILexicalBlock(scope: !20470, file: !2312, line: 1415, column: 21)
!20478 = !DILocation(line: 1415, column: 28, scope: !20477)
!20479 = !DILocation(line: 1415, column: 32, scope: !20477)
!20480 = !DILocation(line: 1415, column: 54, scope: !20477)
!20481 = !DILocation(line: 1415, column: 58, scope: !20477)
!20482 = !DILocation(line: 1415, column: 63, scope: !20477)
!20483 = !DILocation(line: 1415, column: 35, scope: !20477)
!20484 = !DILocation(line: 1415, column: 21, scope: !20470)
!20485 = !DILocation(line: 1416, column: 29, scope: !20486)
!20486 = distinct !DILexicalBlock(scope: !20487, file: !2312, line: 1416, column: 29)
!20487 = distinct !DILexicalBlock(scope: !20477, file: !2312, line: 1415, column: 78)
!20488 = !DILocation(line: 1416, column: 37, scope: !20486)
!20489 = !DILocation(line: 1416, column: 40, scope: !20486)
!20490 = !DILocation(line: 1416, column: 45, scope: !20486)
!20491 = !DILocation(line: 1416, column: 29, scope: !20487)
!20492 = !DILocation(line: 1417, column: 50, scope: !20486)
!20493 = !DILocation(line: 1417, column: 33, scope: !20486)
!20494 = !DILocation(line: 1417, column: 38, scope: !20486)
!20495 = !DILocation(line: 1417, column: 48, scope: !20486)
!20496 = !DILocation(line: 1418, column: 25, scope: !20487)
!20497 = !DILocation(line: 1418, column: 30, scope: !20487)
!20498 = !DILocation(line: 1418, column: 40, scope: !20487)
!20499 = !DILocation(line: 1419, column: 33, scope: !20487)
!20500 = !DILocation(line: 1420, column: 25, scope: !20487)
!20501 = !DILocation(line: 1420, column: 25, scope: !20502)
!20502 = distinct !DILexicalBlock(scope: !20487, file: !2312, line: 1420, column: 25)
!20503 = !DILocation(line: 1421, column: 29, scope: !20504)
!20504 = distinct !DILexicalBlock(scope: !20487, file: !2312, line: 1421, column: 29)
!20505 = !DILocation(line: 1421, column: 46, scope: !20504)
!20506 = !DILocation(line: 1421, column: 54, scope: !20504)
!20507 = !DILocation(line: 1421, column: 51, scope: !20504)
!20508 = !DILocation(line: 1421, column: 29, scope: !20487)
!20509 = !DILocation(line: 1422, column: 40, scope: !20504)
!20510 = !DILocation(line: 1422, column: 33, scope: !20504)
!20511 = !DILocation(line: 1423, column: 25, scope: !20487)
!20512 = !DILocation(line: 1423, column: 30, scope: !20487)
!20513 = !DILocation(line: 1423, column: 39, scope: !20487)
!20514 = !DILocation(line: 1424, column: 17, scope: !20487)
!20515 = !DILocation(line: 1425, column: 33, scope: !20477)
!20516 = !DILocation(line: 1426, column: 15, scope: !20470)
!20517 = !DILocation(line: 1439, column: 15, scope: !20294)
!20518 = !DILocation(line: 1439, column: 13, scope: !20294)
!20519 = !DILocation(line: 1440, column: 13, scope: !20520)
!20520 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1440, column: 13)
!20521 = !DILocation(line: 1440, column: 13, scope: !20294)
!20522 = !DILocation(line: 1441, column: 22, scope: !20523)
!20523 = distinct !DILexicalBlock(scope: !20520, file: !2312, line: 1440, column: 33)
!20524 = !DILocation(line: 1441, column: 26, scope: !20523)
!20525 = !DILocation(line: 1441, column: 37, scope: !20523)
!20526 = !DILocation(line: 1441, column: 35, scope: !20523)
!20527 = !DILocation(line: 1441, column: 20, scope: !20523)
!20528 = !DILocation(line: 1442, column: 20, scope: !20523)
!20529 = !DILocation(line: 1442, column: 23, scope: !20523)
!20530 = !DILocation(line: 1443, column: 9, scope: !20523)
!20531 = !DILocation(line: 1445, column: 20, scope: !20532)
!20532 = distinct !DILexicalBlock(scope: !20520, file: !2312, line: 1443, column: 16)
!20533 = !DILocation(line: 1447, column: 12, scope: !20294)
!20534 = !DILocation(line: 1448, column: 18, scope: !20294)
!20535 = !DILocation(line: 1448, column: 22, scope: !20294)
!20536 = !DILocation(line: 1448, column: 36, scope: !20294)
!20537 = !DILocation(line: 1448, column: 34, scope: !20294)
!20538 = !DILocation(line: 1448, column: 16, scope: !20294)
!20539 = !DILocation(line: 1450, column: 17, scope: !20294)
!20540 = !DILocation(line: 1450, column: 22, scope: !20294)
!20541 = !DILocation(line: 1450, column: 32, scope: !20294)
!20542 = !DILocation(line: 1450, column: 15, scope: !20294)
!20543 = !DILocation(line: 1453, column: 18, scope: !20294)
!20544 = !DILocation(line: 1454, column: 14, scope: !20294)
!20545 = !DILocation(line: 1455, column: 14, scope: !20294)
!20546 = !DILocation(line: 1456, column: 16, scope: !20294)
!20547 = !DILocation(line: 1457, column: 9, scope: !20294)
!20548 = !DILocation(line: 1457, column: 16, scope: !20294)
!20549 = !DILocation(line: 1457, column: 21, scope: !20294)
!20550 = !DILocalVariable(name: "d_namelen", scope: !20551, file: !2312, line: 1458, type: !55)
!20551 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1457, column: 31)
!20552 = !DILocation(line: 1458, column: 24, scope: !20551)
!20553 = !DILocation(line: 1459, column: 17, scope: !20551)
!20554 = !DILocalVariable(name: "dp", scope: !20551, file: !2312, line: 1460, type: !2474)
!20555 = !DILocation(line: 1460, column: 32, scope: !20551)
!20556 = !DILocation(line: 1460, column: 45, scope: !20551)
!20557 = !DILocation(line: 1460, column: 50, scope: !20551)
!20558 = !DILocation(line: 1460, column: 37, scope: !20551)
!20559 = !DILocation(line: 1461, column: 21, scope: !20560)
!20560 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1461, column: 21)
!20561 = !DILocation(line: 1461, column: 24, scope: !20560)
!20562 = !DILocation(line: 1461, column: 21, scope: !20551)
!20563 = !DILocation(line: 1462, column: 29, scope: !20564)
!20564 = distinct !DILexicalBlock(scope: !20565, file: !2312, line: 1462, column: 29)
!20565 = distinct !DILexicalBlock(scope: !20560, file: !2312, line: 1461, column: 33)
!20566 = !DILocation(line: 1462, column: 29, scope: !20565)
!20567 = !DILocation(line: 1463, column: 50, scope: !20568)
!20568 = distinct !DILexicalBlock(scope: !20564, file: !2312, line: 1462, column: 36)
!20569 = !DILocation(line: 1463, column: 33, scope: !20568)
!20570 = !DILocation(line: 1463, column: 38, scope: !20568)
!20571 = !DILocation(line: 1463, column: 48, scope: !20568)
!20572 = !DILocation(line: 1466, column: 50, scope: !20568)
!20573 = !DILocation(line: 1466, column: 67, scope: !20568)
!20574 = !DILocation(line: 1466, column: 70, scope: !20568)
!20575 = !DILocation(line: 1466, column: 49, scope: !20568)
!20576 = !DILocation(line: 1466, column: 33, scope: !20568)
!20577 = !DILocation(line: 1466, column: 38, scope: !20568)
!20578 = !DILocation(line: 1466, column: 47, scope: !20568)
!20579 = !DILocation(line: 1468, column: 25, scope: !20568)
!20580 = !DILocation(line: 1469, column: 25, scope: !20565)
!20581 = !DILocation(line: 1471, column: 22, scope: !20582)
!20582 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1471, column: 21)
!20583 = !DILocation(line: 1471, column: 40, scope: !20582)
!20584 = !DILocation(line: 1471, column: 43, scope: !20582)
!20585 = !DILocation(line: 1471, column: 21, scope: !20551)
!20586 = !DILocation(line: 1472, column: 25, scope: !20582)
!20587 = distinct !{!20587, !20547, !20588}
!20588 = !DILocation(line: 1590, column: 9, scope: !20294)
!20589 = !DILocation(line: 1474, column: 29, scope: !20551)
!20590 = !DILocation(line: 1474, column: 27, scope: !20551)
!20591 = !DILocation(line: 1475, column: 32, scope: !20551)
!20592 = !DILocation(line: 1475, column: 36, scope: !20551)
!20593 = !DILocation(line: 1475, column: 40, scope: !20551)
!20594 = !DILocation(line: 1475, column: 48, scope: !20551)
!20595 = !DILocation(line: 1475, column: 21, scope: !20551)
!20596 = !DILocation(line: 1475, column: 19, scope: !20551)
!20597 = !DILocation(line: 1476, column: 22, scope: !20598)
!20598 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1476, column: 21)
!20599 = !DILocation(line: 1476, column: 21, scope: !20551)
!20600 = !DILocation(line: 1477, column: 25, scope: !20598)
!20601 = !DILocation(line: 1478, column: 21, scope: !20602)
!20602 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1478, column: 21)
!20603 = !DILocation(line: 1478, column: 34, scope: !20602)
!20604 = !DILocation(line: 1478, column: 31, scope: !20602)
!20605 = !DILocation(line: 1478, column: 21, scope: !20551)
!20606 = !DILocation(line: 1480, column: 35, scope: !20607)
!20607 = distinct !DILexicalBlock(scope: !20602, file: !2312, line: 1478, column: 42)
!20608 = !DILocation(line: 1480, column: 39, scope: !20607)
!20609 = !DILocation(line: 1480, column: 33, scope: !20607)
!20610 = !DILocation(line: 1481, column: 42, scope: !20611)
!20611 = distinct !DILexicalBlock(scope: !20607, file: !2312, line: 1481, column: 29)
!20612 = !DILocation(line: 1481, column: 46, scope: !20611)
!20613 = !DILocation(line: 1481, column: 58, scope: !20611)
!20614 = !DILocation(line: 1481, column: 56, scope: !20611)
!20615 = !DILocation(line: 1481, column: 62, scope: !20611)
!20616 = !DILocation(line: 1481, column: 31, scope: !20611)
!20617 = !DILocation(line: 1481, column: 29, scope: !20607)
!20618 = !DILocation(line: 1481, column: 68, scope: !20611)
!20619 = !DILabel(scope: !20620, name: "mem1", file: !2312, line: 1487)
!20620 = distinct !DILexicalBlock(scope: !20611, file: !2312, line: 1481, column: 68)
!20621 = !DILocation(line: 1487, column: 1, scope: !20620)
!20622 = !DILocation(line: 1487, column: 47, scope: !20620)
!20623 = !DILocation(line: 1487, column: 45, scope: !20620)
!20624 = !DILocation(line: 1488, column: 38, scope: !20620)
!20625 = !DILocation(line: 1488, column: 33, scope: !20620)
!20626 = !DILocation(line: 1489, column: 43, scope: !20620)
!20627 = !DILocation(line: 1489, column: 33, scope: !20620)
!20628 = !DILocation(line: 1490, column: 33, scope: !20620)
!20629 = !DILocation(line: 1490, column: 33, scope: !20630)
!20630 = distinct !DILexicalBlock(scope: !20620, file: !2312, line: 1490, column: 33)
!20631 = !DILocation(line: 1491, column: 33, scope: !20620)
!20632 = !DILocation(line: 1491, column: 38, scope: !20620)
!20633 = !DILocation(line: 1491, column: 47, scope: !20620)
!20634 = !DILocation(line: 1492, column: 33, scope: !20620)
!20635 = !DILocation(line: 1493, column: 33, scope: !20620)
!20636 = !DILocation(line: 1494, column: 33, scope: !20620)
!20637 = !DILocation(line: 1497, column: 29, scope: !20638)
!20638 = distinct !DILexicalBlock(scope: !20607, file: !2312, line: 1497, column: 29)
!20639 = !DILocation(line: 1497, column: 40, scope: !20638)
!20640 = !DILocation(line: 1497, column: 44, scope: !20638)
!20641 = !DILocation(line: 1497, column: 37, scope: !20638)
!20642 = !DILocation(line: 1497, column: 29, scope: !20607)
!20643 = !DILocation(line: 1498, column: 42, scope: !20644)
!20644 = distinct !DILexicalBlock(scope: !20638, file: !2312, line: 1497, column: 54)
!20645 = !DILocation(line: 1499, column: 37, scope: !20646)
!20646 = distinct !DILexicalBlock(scope: !20644, file: !2312, line: 1499, column: 37)
!20647 = !DILocation(line: 1499, column: 37, scope: !20644)
!20648 = !DILocation(line: 1500, column: 46, scope: !20646)
!20649 = !DILocation(line: 1500, column: 50, scope: !20646)
!20650 = !DILocation(line: 1500, column: 61, scope: !20646)
!20651 = !DILocation(line: 1500, column: 59, scope: !20646)
!20652 = !DILocation(line: 1500, column: 44, scope: !20646)
!20653 = !DILocation(line: 1500, column: 41, scope: !20646)
!20654 = !DILocation(line: 1501, column: 25, scope: !20644)
!20655 = !DILocation(line: 1502, column: 34, scope: !20607)
!20656 = !DILocation(line: 1502, column: 38, scope: !20607)
!20657 = !DILocation(line: 1502, column: 52, scope: !20607)
!20658 = !DILocation(line: 1502, column: 50, scope: !20607)
!20659 = !DILocation(line: 1502, column: 32, scope: !20607)
!20660 = !DILocation(line: 1503, column: 17, scope: !20607)
!20661 = !DILocation(line: 1505, column: 27, scope: !20551)
!20662 = !DILocation(line: 1505, column: 33, scope: !20551)
!20663 = !DILocation(line: 1505, column: 31, scope: !20551)
!20664 = !DILocation(line: 1505, column: 25, scope: !20551)
!20665 = !DILocation(line: 1506, column: 21, scope: !20666)
!20666 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1506, column: 21)
!20667 = !DILocation(line: 1506, column: 31, scope: !20666)
!20668 = !DILocation(line: 1506, column: 29, scope: !20666)
!20669 = !DILocation(line: 1506, column: 21, scope: !20551)
!20670 = !DILocation(line: 1513, column: 30, scope: !20671)
!20671 = distinct !DILexicalBlock(scope: !20666, file: !2312, line: 1506, column: 36)
!20672 = !DILocation(line: 1513, column: 25, scope: !20671)
!20673 = !DILocation(line: 1514, column: 35, scope: !20671)
!20674 = !DILocation(line: 1514, column: 25, scope: !20671)
!20675 = !DILocation(line: 1515, column: 25, scope: !20671)
!20676 = !DILocation(line: 1515, column: 25, scope: !20677)
!20677 = distinct !DILexicalBlock(scope: !20671, file: !2312, line: 1515, column: 25)
!20678 = !DILocation(line: 1516, column: 25, scope: !20671)
!20679 = !DILocation(line: 1516, column: 30, scope: !20671)
!20680 = !DILocation(line: 1516, column: 39, scope: !20671)
!20681 = !DILocation(line: 1517, column: 25, scope: !20671)
!20682 = !DILocation(line: 1518, column: 25, scope: !20671)
!20683 = !DILocation(line: 1519, column: 25, scope: !20671)
!20684 = !DILocation(line: 1521, column: 32, scope: !20551)
!20685 = !DILocation(line: 1521, column: 17, scope: !20551)
!20686 = !DILocation(line: 1521, column: 20, scope: !20551)
!20687 = !DILocation(line: 1521, column: 30, scope: !20551)
!20688 = !DILocation(line: 1522, column: 33, scope: !20551)
!20689 = !DILocation(line: 1522, column: 37, scope: !20551)
!20690 = !DILocation(line: 1522, column: 17, scope: !20551)
!20691 = !DILocation(line: 1522, column: 20, scope: !20551)
!20692 = !DILocation(line: 1522, column: 31, scope: !20551)
!20693 = !DILocation(line: 1523, column: 34, scope: !20551)
!20694 = !DILocation(line: 1523, column: 17, scope: !20551)
!20695 = !DILocation(line: 1523, column: 20, scope: !20551)
!20696 = !DILocation(line: 1523, column: 32, scope: !20551)
!20697 = !DILocation(line: 1527, column: 40, scope: !20551)
!20698 = !DILocation(line: 1527, column: 17, scope: !20551)
!20699 = !DILocation(line: 1527, column: 20, scope: !20551)
!20700 = !DILocation(line: 1527, column: 31, scope: !20551)
!20701 = !DILocation(line: 1527, column: 38, scope: !20551)
!20702 = !DILocation(line: 1530, column: 21, scope: !20703)
!20703 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1530, column: 21)
!20704 = !DILocation(line: 1530, column: 21, scope: !20551)
!20705 = !DILocation(line: 1531, column: 42, scope: !20706)
!20706 = distinct !DILexicalBlock(scope: !20703, file: !2312, line: 1530, column: 41)
!20707 = !DILocation(line: 1531, column: 45, scope: !20706)
!20708 = !DILocation(line: 1531, column: 25, scope: !20706)
!20709 = !DILocation(line: 1531, column: 28, scope: !20706)
!20710 = !DILocation(line: 1531, column: 40, scope: !20706)
!20711 = !DILocation(line: 1532, column: 33, scope: !20706)
!20712 = !DILocation(line: 1532, column: 37, scope: !20706)
!20713 = !DILocation(line: 1532, column: 40, scope: !20706)
!20714 = !DILocation(line: 1532, column: 25, scope: !20706)
!20715 = !DILocation(line: 1532, column: 50, scope: !20706)
!20716 = !DILocation(line: 1532, column: 53, scope: !20706)
!20717 = !DILocation(line: 1532, column: 65, scope: !20706)
!20718 = !DILocation(line: 1533, column: 17, scope: !20706)
!20719 = !DILocation(line: 1534, column: 42, scope: !20703)
!20720 = !DILocation(line: 1534, column: 45, scope: !20703)
!20721 = !DILocation(line: 1534, column: 25, scope: !20703)
!20722 = !DILocation(line: 1534, column: 28, scope: !20703)
!20723 = !DILocation(line: 1534, column: 40, scope: !20703)
!20724 = !DILocation(line: 1536, column: 21, scope: !20725)
!20725 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1536, column: 21)
!20726 = !DILocation(line: 1536, column: 25, scope: !20725)
!20727 = !DILocation(line: 1536, column: 36, scope: !20725)
!20728 = !DILocation(line: 1536, column: 44, scope: !20725)
!20729 = !DILocation(line: 1536, column: 47, scope: !20725)
!20730 = !DILocation(line: 1536, column: 21, scope: !20551)
!20731 = !DILocalVariable(name: "skip_stat", scope: !20732, file: !2312, line: 1549, type: !120)
!20732 = distinct !DILexicalBlock(scope: !20725, file: !2312, line: 1536, column: 70)
!20733 = !DILocation(line: 1549, column: 30, scope: !20732)
!20734 = !DILocation(line: 1549, column: 43, scope: !20732)
!20735 = !DILocation(line: 1550, column: 43, scope: !20732)
!20736 = !DILocation(line: 1550, column: 46, scope: !20732)
!20737 = !DILocation(line: 1551, column: 43, scope: !20732)
!20738 = !DILocation(line: 1551, column: 46, scope: !20732)
!20739 = !{!15764, !2987, i64 18}
!20740 = !DILocation(line: 1552, column: 43, scope: !20732)
!20741 = !DILocation(line: 1552, column: 48, scope: !20732)
!20742 = !DILocation(line: 1552, column: 46, scope: !20732)
!20743 = !DILocation(line: 0, scope: !20732)
!20744 = !DILocation(line: 1553, column: 25, scope: !20732)
!20745 = !DILocation(line: 1553, column: 28, scope: !20732)
!20746 = !DILocation(line: 1553, column: 37, scope: !20732)
!20747 = !DILocation(line: 1556, column: 40, scope: !20732)
!20748 = !DILocation(line: 1556, column: 43, scope: !20732)
!20749 = !DILocation(line: 1556, column: 54, scope: !20732)
!20750 = !DILocation(line: 1556, column: 25, scope: !20732)
!20751 = !DILocation(line: 1557, column: 47, scope: !20732)
!20752 = !DILocation(line: 1557, column: 51, scope: !20732)
!20753 = !DILocation(line: 1557, column: 50, scope: !20732)
!20754 = !DILocation(line: 1557, column: 25, scope: !20732)
!20755 = !DILocation(line: 1558, column: 17, scope: !20732)
!20756 = !DILocation(line: 1559, column: 48, scope: !20757)
!20757 = distinct !DILexicalBlock(scope: !20725, file: !2312, line: 1558, column: 24)
!20758 = !DILocation(line: 1559, column: 52, scope: !20757)
!20759 = !DILocation(line: 1559, column: 39, scope: !20757)
!20760 = !DILocation(line: 1559, column: 25, scope: !20757)
!20761 = !DILocation(line: 1559, column: 28, scope: !20757)
!20762 = !DILocation(line: 1559, column: 37, scope: !20757)
!20763 = !DILocation(line: 1563, column: 17, scope: !20551)
!20764 = !DILocation(line: 1563, column: 20, scope: !20551)
!20765 = !DILocation(line: 1563, column: 29, scope: !20551)
!20766 = !DILocation(line: 1564, column: 21, scope: !20767)
!20767 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1564, column: 21)
!20768 = !DILocation(line: 1564, column: 26, scope: !20767)
!20769 = !DILocation(line: 1564, column: 21, scope: !20551)
!20770 = !DILocation(line: 1565, column: 39, scope: !20767)
!20771 = !DILocation(line: 1565, column: 37, scope: !20767)
!20772 = !DILocation(line: 1565, column: 30, scope: !20767)
!20773 = !DILocation(line: 1565, column: 25, scope: !20767)
!20774 = !DILocation(line: 1567, column: 42, scope: !20775)
!20775 = distinct !DILexicalBlock(scope: !20767, file: !2312, line: 1566, column: 22)
!20776 = !DILocation(line: 1567, column: 25, scope: !20775)
!20777 = !DILocation(line: 1567, column: 31, scope: !20775)
!20778 = !DILocation(line: 1567, column: 40, scope: !20775)
!20779 = !DILocation(line: 1568, column: 32, scope: !20775)
!20780 = !DILocation(line: 1568, column: 30, scope: !20775)
!20781 = !DILocation(line: 1579, column: 21, scope: !20782)
!20782 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1579, column: 21)
!20783 = !DILocation(line: 1579, column: 28, scope: !20782)
!20784 = !DILocation(line: 1580, column: 21, scope: !20782)
!20785 = !DILocation(line: 1580, column: 25, scope: !20782)
!20786 = !DILocation(line: 1580, column: 29, scope: !20782)
!20787 = !DILocation(line: 1579, column: 21, scope: !20551)
!20788 = !DILocation(line: 1581, column: 68, scope: !20782)
!20789 = !DILocation(line: 1581, column: 73, scope: !20782)
!20790 = !DILocation(line: 1581, column: 35, scope: !20782)
!20791 = !DILocation(line: 1581, column: 33, scope: !20782)
!20792 = !DILocation(line: 1581, column: 19, scope: !20782)
!20793 = !DILocation(line: 1583, column: 17, scope: !20551)
!20794 = !DILocation(line: 1584, column: 21, scope: !20795)
!20795 = distinct !DILexicalBlock(scope: !20551, file: !2312, line: 1584, column: 21)
!20796 = !DILocation(line: 1584, column: 36, scope: !20795)
!20797 = !DILocation(line: 1584, column: 33, scope: !20795)
!20798 = !DILocation(line: 1584, column: 21, scope: !20551)
!20799 = !DILocation(line: 1588, column: 25, scope: !20800)
!20800 = distinct !DILexicalBlock(scope: !20795, file: !2312, line: 1584, column: 44)
!20801 = !DILocation(line: 1592, column: 13, scope: !20802)
!20802 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1592, column: 13)
!20803 = !DILocation(line: 1592, column: 18, scope: !20802)
!20804 = !DILocation(line: 1592, column: 13, scope: !20294)
!20805 = !DILocation(line: 1593, column: 17, scope: !20802)
!20806 = !DILocation(line: 1593, column: 17, scope: !20807)
!20807 = distinct !DILexicalBlock(scope: !20802, file: !2312, line: 1593, column: 17)
!20808 = !DILabel(scope: !20294, name: "break_without_closedir", file: !2312, line: 1595)
!20809 = !DILocation(line: 1595, column: 2, scope: !20294)
!20810 = !DILocation(line: 1601, column: 13, scope: !20811)
!20811 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1601, column: 13)
!20812 = !DILocation(line: 1601, column: 13, scope: !20294)
!20813 = !DILocation(line: 1602, column: 29, scope: !20811)
!20814 = !DILocation(line: 1602, column: 33, scope: !20811)
!20815 = !DILocation(line: 1602, column: 17, scope: !20811)
!20816 = !DILocation(line: 1608, column: 13, scope: !20817)
!20817 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1608, column: 13)
!20818 = !DILocation(line: 1608, column: 13, scope: !20294)
!20819 = !DILocation(line: 1609, column: 21, scope: !20820)
!20820 = distinct !DILexicalBlock(scope: !20821, file: !2312, line: 1609, column: 21)
!20821 = distinct !DILexicalBlock(scope: !20817, file: !2312, line: 1608, column: 33)
!20822 = !DILocation(line: 1609, column: 28, scope: !20820)
!20823 = !DILocation(line: 1609, column: 32, scope: !20820)
!20824 = !DILocation(line: 1609, column: 25, scope: !20820)
!20825 = !DILocation(line: 1609, column: 44, scope: !20820)
!20826 = !DILocation(line: 1609, column: 47, scope: !20820)
!20827 = !DILocation(line: 1609, column: 54, scope: !20820)
!20828 = !DILocation(line: 1609, column: 21, scope: !20821)
!20829 = !DILocation(line: 1610, column: 25, scope: !20820)
!20830 = !DILocation(line: 1611, column: 18, scope: !20821)
!20831 = !DILocation(line: 1611, column: 21, scope: !20821)
!20832 = !DILocation(line: 1612, column: 9, scope: !20821)
!20833 = !DILocation(line: 1621, column: 14, scope: !20834)
!20834 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1621, column: 13)
!20835 = !DILocation(line: 1621, column: 31, scope: !20834)
!20836 = !DILocation(line: 1621, column: 34, scope: !20834)
!20837 = !DILocation(line: 1621, column: 42, scope: !20834)
!20838 = !DILocation(line: 1621, column: 46, scope: !20834)
!20839 = !DILocation(line: 1621, column: 51, scope: !20834)
!20840 = !DILocation(line: 1621, column: 61, scope: !20834)
!20841 = !DILocation(line: 1621, column: 65, scope: !20834)
!20842 = !DILocation(line: 1621, column: 73, scope: !20834)
!20843 = !DILocation(line: 1622, column: 14, scope: !20834)
!20844 = !DILocation(line: 1622, column: 19, scope: !20834)
!20845 = !DILocation(line: 1622, column: 29, scope: !20834)
!20846 = !DILocation(line: 1621, column: 13, scope: !20294)
!20847 = !DILocation(line: 1623, column: 36, scope: !20834)
!20848 = !DILocation(line: 1623, column: 16, scope: !20834)
!20849 = !DILocation(line: 1624, column: 35, scope: !20834)
!20850 = !DILocation(line: 1624, column: 39, scope: !20834)
!20851 = !DILocation(line: 1624, column: 44, scope: !20834)
!20852 = !DILocation(line: 1624, column: 16, scope: !20834)
!20853 = !DILocation(line: 1625, column: 17, scope: !20854)
!20854 = distinct !DILexicalBlock(scope: !20834, file: !2312, line: 1624, column: 68)
!20855 = !DILocation(line: 1625, column: 22, scope: !20854)
!20856 = !DILocation(line: 1625, column: 31, scope: !20854)
!20857 = !DILocation(line: 1626, column: 17, scope: !20854)
!20858 = !DILocation(line: 1627, column: 27, scope: !20854)
!20859 = !DILocation(line: 1627, column: 17, scope: !20854)
!20860 = !DILocation(line: 1628, column: 17, scope: !20854)
!20861 = !DILocation(line: 1632, column: 14, scope: !20862)
!20862 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1632, column: 13)
!20863 = !DILocation(line: 1632, column: 13, scope: !20294)
!20864 = !DILocation(line: 1633, column: 21, scope: !20865)
!20865 = distinct !DILexicalBlock(scope: !20866, file: !2312, line: 1633, column: 21)
!20866 = distinct !DILexicalBlock(scope: !20862, file: !2312, line: 1632, column: 22)
!20867 = !DILocation(line: 1633, column: 26, scope: !20865)
!20868 = !DILocation(line: 1634, column: 21, scope: !20865)
!20869 = !DILocation(line: 1634, column: 24, scope: !20865)
!20870 = !DILocation(line: 1634, column: 29, scope: !20865)
!20871 = !DILocation(line: 1634, column: 38, scope: !20865)
!20872 = !DILocation(line: 1634, column: 49, scope: !20865)
!20873 = !DILocation(line: 1634, column: 52, scope: !20865)
!20874 = !DILocation(line: 1634, column: 57, scope: !20865)
!20875 = !DILocation(line: 1634, column: 66, scope: !20865)
!20876 = !DILocation(line: 1633, column: 21, scope: !20866)
!20877 = !DILocation(line: 1635, column: 25, scope: !20865)
!20878 = !DILocation(line: 1635, column: 30, scope: !20865)
!20879 = !DILocation(line: 1635, column: 39, scope: !20865)
!20880 = !DILocation(line: 1636, column: 27, scope: !20866)
!20881 = !DILocation(line: 1636, column: 17, scope: !20866)
!20882 = !DILocation(line: 1637, column: 17, scope: !20866)
!20883 = !DILocation(line: 1640, column: 13, scope: !20884)
!20884 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1640, column: 13)
!20885 = !DILocation(line: 1640, column: 13, scope: !20294)
!20886 = !DILocation(line: 1641, column: 17, scope: !20887)
!20887 = distinct !DILexicalBlock(scope: !20884, file: !2312, line: 1640, column: 28)
!20888 = !DILocation(line: 1641, column: 21, scope: !20887)
!20889 = !DILocation(line: 1641, column: 32, scope: !20887)
!20890 = !DILocation(line: 1642, column: 34, scope: !20887)
!20891 = !DILocation(line: 1642, column: 38, scope: !20887)
!20892 = !DILocation(line: 1642, column: 44, scope: !20887)
!20893 = !DILocation(line: 1642, column: 24, scope: !20887)
!20894 = !DILocation(line: 1642, column: 22, scope: !20887)
!20895 = !DILocation(line: 1643, column: 17, scope: !20887)
!20896 = !DILocation(line: 1643, column: 21, scope: !20887)
!20897 = !DILocation(line: 1643, column: 32, scope: !20887)
!20898 = !DILocation(line: 1644, column: 9, scope: !20887)
!20899 = !DILocation(line: 1647, column: 13, scope: !20900)
!20900 = distinct !DILexicalBlock(scope: !20294, file: !2312, line: 1647, column: 13)
!20901 = !DILocation(line: 1647, column: 17, scope: !20900)
!20902 = !DILocation(line: 1647, column: 28, scope: !20900)
!20903 = !DILocation(line: 1647, column: 31, scope: !20900)
!20904 = !DILocation(line: 1647, column: 38, scope: !20900)
!20905 = !DILocation(line: 1647, column: 13, scope: !20294)
!20906 = !DILocation(line: 1648, column: 33, scope: !20900)
!20907 = !DILocation(line: 1648, column: 37, scope: !20900)
!20908 = !DILocation(line: 1648, column: 43, scope: !20900)
!20909 = !DILocation(line: 1648, column: 24, scope: !20900)
!20910 = !DILocation(line: 1648, column: 22, scope: !20900)
!20911 = !DILocation(line: 1648, column: 17, scope: !20900)
!20912 = !DILocation(line: 1649, column: 17, scope: !20294)
!20913 = !DILocation(line: 1649, column: 9, scope: !20294)
!20914 = !DILocation(line: 1650, column: 1, scope: !20294)
!20915 = distinct !DISubprogram(name: "restore_initial_cwd", scope: !2312, file: !2312, line: 333, type: !2421, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!20916 = !DILocalVariable(name: "sp", arg: 1, scope: !20915, file: !2312, line: 333, type: !2337)
!20917 = !DILocation(line: 333, column: 27, scope: !20915)
!20918 = !DILocalVariable(name: "fail", scope: !20915, file: !2312, line: 335, type: !7)
!20919 = !DILocation(line: 335, column: 7, scope: !20915)
!20920 = !DILocation(line: 335, column: 14, scope: !20915)
!20921 = !DILocation(line: 0, scope: !20915)
!20922 = !DILocation(line: 336, column: 20, scope: !20915)
!20923 = !DILocation(line: 336, column: 24, scope: !20915)
!20924 = !DILocation(line: 336, column: 3, scope: !20915)
!20925 = !DILocation(line: 337, column: 10, scope: !20915)
!20926 = !DILocation(line: 337, column: 3, scope: !20915)
!20927 = distinct !DISubprogram(name: "fts_load", scope: !2312, file: !2312, line: 550, type: !2450, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!20928 = !DILocalVariable(name: "sp", arg: 1, scope: !20927, file: !2312, line: 550, type: !2337)
!20929 = !DILocation(line: 550, column: 16, scope: !20927)
!20930 = !DILocalVariable(name: "p", arg: 2, scope: !20927, file: !2312, line: 550, type: !2420)
!20931 = !DILocation(line: 550, column: 37, scope: !20927)
!20932 = !DILocalVariable(name: "len", scope: !20927, file: !2312, line: 552, type: !55)
!20933 = !DILocation(line: 552, column: 25, scope: !20927)
!20934 = !DILocalVariable(name: "cp", scope: !20927, file: !2312, line: 553, type: !9)
!20935 = !DILocation(line: 553, column: 24, scope: !20927)
!20936 = !DILocation(line: 562, column: 32, scope: !20927)
!20937 = !DILocation(line: 562, column: 35, scope: !20927)
!20938 = !DILocation(line: 562, column: 15, scope: !20927)
!20939 = !DILocation(line: 562, column: 18, scope: !20927)
!20940 = !DILocation(line: 562, column: 30, scope: !20927)
!20941 = !DILocation(line: 562, column: 13, scope: !20927)
!20942 = !DILocation(line: 563, column: 17, scope: !20927)
!20943 = !DILocation(line: 563, column: 21, scope: !20927)
!20944 = !DILocation(line: 563, column: 31, scope: !20927)
!20945 = !DILocation(line: 563, column: 34, scope: !20927)
!20946 = !DILocation(line: 563, column: 9, scope: !20927)
!20947 = !DILocation(line: 563, column: 44, scope: !20927)
!20948 = !DILocation(line: 563, column: 48, scope: !20927)
!20949 = !DILocation(line: 564, column: 27, scope: !20950)
!20950 = distinct !DILexicalBlock(scope: !20927, file: !2312, line: 564, column: 13)
!20951 = !DILocation(line: 564, column: 30, scope: !20950)
!20952 = !DILocation(line: 564, column: 19, scope: !20950)
!20953 = !DILocation(line: 564, column: 17, scope: !20950)
!20954 = !DILocation(line: 564, column: 46, scope: !20950)
!20955 = !DILocation(line: 564, column: 50, scope: !20950)
!20956 = !DILocation(line: 564, column: 56, scope: !20950)
!20957 = !DILocation(line: 564, column: 59, scope: !20950)
!20958 = !DILocation(line: 564, column: 53, scope: !20950)
!20959 = !DILocation(line: 564, column: 68, scope: !20950)
!20960 = !DILocation(line: 564, column: 71, scope: !20950)
!20961 = !DILocation(line: 564, column: 13, scope: !20927)
!20962 = !DILocation(line: 565, column: 30, scope: !20963)
!20963 = distinct !DILexicalBlock(scope: !20950, file: !2312, line: 564, column: 79)
!20964 = !DILocation(line: 565, column: 23, scope: !20963)
!20965 = !DILocation(line: 565, column: 21, scope: !20963)
!20966 = !DILocation(line: 566, column: 25, scope: !20963)
!20967 = !DILocation(line: 566, column: 28, scope: !20963)
!20968 = !DILocation(line: 566, column: 17, scope: !20963)
!20969 = !DILocation(line: 566, column: 38, scope: !20963)
!20970 = !DILocation(line: 566, column: 42, scope: !20963)
!20971 = !DILocation(line: 566, column: 46, scope: !20963)
!20972 = !DILocation(line: 567, column: 34, scope: !20963)
!20973 = !DILocation(line: 567, column: 17, scope: !20963)
!20974 = !DILocation(line: 567, column: 20, scope: !20963)
!20975 = !DILocation(line: 567, column: 32, scope: !20963)
!20976 = !DILocation(line: 568, column: 9, scope: !20963)
!20977 = !DILocation(line: 569, column: 40, scope: !20927)
!20978 = !DILocation(line: 569, column: 44, scope: !20927)
!20979 = !DILocation(line: 569, column: 26, scope: !20927)
!20980 = !DILocation(line: 569, column: 29, scope: !20927)
!20981 = !DILocation(line: 569, column: 38, scope: !20927)
!20982 = !DILocation(line: 569, column: 9, scope: !20927)
!20983 = !DILocation(line: 569, column: 12, scope: !20927)
!20984 = !DILocation(line: 569, column: 24, scope: !20927)
!20985 = !DILocation(line: 570, column: 1, scope: !20927)
!20986 = distinct !DISubprogram(name: "leaf_optimization", scope: !2312, file: !2312, line: 792, type: !2454, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!20987 = !DILocalVariable(name: "p", arg: 1, scope: !20986, file: !2312, line: 792, type: !2319)
!20988 = !DILocation(line: 792, column: 34, scope: !20986)
!20989 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20986, file: !2312, line: 792, type: !7)
!20990 = !DILocation(line: 792, column: 41, scope: !20986)
!20991 = !DILocation(line: 794, column: 28, scope: !20986)
!20992 = !DILocation(line: 794, column: 31, scope: !20986)
!20993 = !DILocation(line: 794, column: 11, scope: !20986)
!20994 = !DILocation(line: 794, column: 3, scope: !20986)
!20995 = !DILocation(line: 800, column: 7, scope: !20996)
!20996 = distinct !DILexicalBlock(scope: !20986, file: !2312, line: 795, column: 5)
!20997 = !DILocation(line: 804, column: 7, scope: !20996)
!20998 = !DILocation(line: 808, column: 7, scope: !20996)
!20999 = !DILocation(line: 812, column: 7, scope: !20996)
!21000 = !DILocation(line: 818, column: 7, scope: !20996)
!21001 = !DILocation(line: 822, column: 7, scope: !20996)
!21002 = !DILocation(line: 825, column: 7, scope: !20996)
!21003 = !DILocation(line: 827, column: 1, scope: !20986)
!21004 = distinct !DISubprogram(name: "enter_dir", scope: !2436, file: !2436, line: 74, type: !2469, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21005 = !DILocalVariable(name: "fts", arg: 1, scope: !21004, file: !2436, line: 74, type: !2337)
!21006 = !DILocation(line: 74, column: 17, scope: !21004)
!21007 = !DILocalVariable(name: "ent", arg: 2, scope: !21004, file: !2436, line: 74, type: !2420)
!21008 = !DILocation(line: 74, column: 30, scope: !21004)
!21009 = !DILocation(line: 76, column: 7, scope: !21010)
!21010 = distinct !DILexicalBlock(scope: !21004, file: !2436, line: 76, column: 7)
!21011 = !DILocation(line: 76, column: 12, scope: !21010)
!21012 = !DILocation(line: 76, column: 24, scope: !21010)
!21013 = !DILocation(line: 76, column: 7, scope: !21004)
!21014 = !DILocalVariable(name: "st", scope: !21015, file: !2436, line: 78, type: !2452)
!21015 = distinct !DILexicalBlock(scope: !21010, file: !2436, line: 77, column: 5)
!21016 = !DILocation(line: 78, column: 26, scope: !21015)
!21017 = !DILocation(line: 78, column: 31, scope: !21015)
!21018 = !DILocation(line: 78, column: 36, scope: !21015)
!21019 = !DILocalVariable(name: "ad", scope: !21015, file: !2436, line: 79, type: !2471)
!21020 = !DILocation(line: 79, column: 26, scope: !21015)
!21021 = !DILocation(line: 79, column: 31, scope: !21015)
!21022 = !DILocalVariable(name: "ad_from_table", scope: !21015, file: !2436, line: 80, type: !2471)
!21023 = !DILocation(line: 80, column: 26, scope: !21015)
!21024 = !DILocation(line: 82, column: 12, scope: !21025)
!21025 = distinct !DILexicalBlock(scope: !21015, file: !2436, line: 82, column: 11)
!21026 = !DILocation(line: 82, column: 11, scope: !21015)
!21027 = !DILocation(line: 83, column: 9, scope: !21025)
!21028 = !DILocation(line: 85, column: 17, scope: !21015)
!21029 = !DILocation(line: 85, column: 21, scope: !21015)
!21030 = !DILocation(line: 85, column: 7, scope: !21015)
!21031 = !DILocation(line: 85, column: 11, scope: !21015)
!21032 = !DILocation(line: 85, column: 15, scope: !21015)
!21033 = !DILocation(line: 86, column: 17, scope: !21015)
!21034 = !DILocation(line: 86, column: 21, scope: !21015)
!21035 = !DILocation(line: 86, column: 7, scope: !21015)
!21036 = !DILocation(line: 86, column: 11, scope: !21015)
!21037 = !DILocation(line: 86, column: 15, scope: !21015)
!21038 = !DILocation(line: 87, column: 21, scope: !21015)
!21039 = !DILocation(line: 87, column: 7, scope: !21015)
!21040 = !DILocation(line: 87, column: 11, scope: !21015)
!21041 = !DILocation(line: 87, column: 19, scope: !21015)
!21042 = !{!19273, !2999, i64 16}
!21043 = !DILocation(line: 92, column: 36, scope: !21015)
!21044 = !DILocation(line: 92, column: 41, scope: !21015)
!21045 = !DILocation(line: 92, column: 51, scope: !21015)
!21046 = !DILocation(line: 92, column: 55, scope: !21015)
!21047 = !DILocation(line: 92, column: 23, scope: !21015)
!21048 = !DILocation(line: 92, column: 21, scope: !21015)
!21049 = !DILocation(line: 94, column: 11, scope: !21050)
!21050 = distinct !DILexicalBlock(scope: !21015, file: !2436, line: 94, column: 11)
!21051 = !DILocation(line: 94, column: 28, scope: !21050)
!21052 = !DILocation(line: 94, column: 25, scope: !21050)
!21053 = !DILocation(line: 94, column: 11, scope: !21015)
!21054 = !DILocation(line: 96, column: 17, scope: !21055)
!21055 = distinct !DILexicalBlock(scope: !21050, file: !2436, line: 95, column: 9)
!21056 = !DILocation(line: 96, column: 11, scope: !21055)
!21057 = !DILocation(line: 97, column: 16, scope: !21058)
!21058 = distinct !DILexicalBlock(scope: !21055, file: !2436, line: 97, column: 15)
!21059 = !DILocation(line: 97, column: 15, scope: !21055)
!21060 = !DILocation(line: 98, column: 13, scope: !21058)
!21061 = !DILocation(line: 102, column: 28, scope: !21055)
!21062 = !DILocation(line: 102, column: 43, scope: !21055)
!21063 = !DILocation(line: 102, column: 11, scope: !21055)
!21064 = !DILocation(line: 102, column: 16, scope: !21055)
!21065 = !DILocation(line: 102, column: 26, scope: !21055)
!21066 = !DILocation(line: 103, column: 11, scope: !21055)
!21067 = !DILocation(line: 103, column: 16, scope: !21055)
!21068 = !DILocation(line: 103, column: 25, scope: !21055)
!21069 = !DILocation(line: 104, column: 9, scope: !21055)
!21070 = !DILocation(line: 105, column: 5, scope: !21015)
!21071 = !DILocation(line: 108, column: 24, scope: !21072)
!21072 = distinct !DILexicalBlock(scope: !21073, file: !2436, line: 108, column: 11)
!21073 = distinct !DILexicalBlock(scope: !21010, file: !2436, line: 107, column: 5)
!21074 = !DILocation(line: 108, column: 29, scope: !21072)
!21075 = !DILocation(line: 108, column: 39, scope: !21072)
!21076 = !DILocation(line: 108, column: 46, scope: !21072)
!21077 = !DILocation(line: 108, column: 51, scope: !21072)
!21078 = !DILocation(line: 108, column: 11, scope: !21072)
!21079 = !DILocation(line: 108, column: 11, scope: !21073)
!21080 = !DILocation(line: 114, column: 28, scope: !21081)
!21081 = distinct !DILexicalBlock(scope: !21072, file: !2436, line: 109, column: 9)
!21082 = !DILocation(line: 114, column: 11, scope: !21081)
!21083 = !DILocation(line: 114, column: 16, scope: !21081)
!21084 = !DILocation(line: 114, column: 26, scope: !21081)
!21085 = !DILocation(line: 115, column: 11, scope: !21081)
!21086 = !DILocation(line: 115, column: 16, scope: !21081)
!21087 = !DILocation(line: 115, column: 25, scope: !21081)
!21088 = !DILocation(line: 116, column: 9, scope: !21081)
!21089 = !DILocation(line: 119, column: 3, scope: !21004)
!21090 = !DILocation(line: 120, column: 1, scope: !21004)
!21091 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !2312, file: !2312, line: 305, type: !2472, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21092 = !DILocalVariable(name: "sp", arg: 1, scope: !21091, file: !2312, line: 305, type: !2337)
!21093 = !DILocation(line: 305, column: 22, scope: !21091)
!21094 = !DILocalVariable(name: "fd", arg: 2, scope: !21091, file: !2312, line: 305, type: !7)
!21095 = !DILocation(line: 305, column: 30, scope: !21091)
!21096 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !21091, file: !2312, line: 305, type: !120)
!21097 = !DILocation(line: 305, column: 39, scope: !21091)
!21098 = !DILocalVariable(name: "old", scope: !21091, file: !2312, line: 307, type: !7)
!21099 = !DILocation(line: 307, column: 7, scope: !21091)
!21100 = !DILocation(line: 307, column: 13, scope: !21091)
!21101 = !DILocation(line: 307, column: 17, scope: !21091)
!21102 = !DILocation(line: 308, column: 3, scope: !21091)
!21103 = !DILocation(line: 308, column: 3, scope: !21104)
!21104 = distinct !DILexicalBlock(scope: !21105, file: !2312, line: 308, column: 3)
!21105 = distinct !DILexicalBlock(scope: !21091, file: !2312, line: 308, column: 3)
!21106 = !DILocation(line: 308, column: 3, scope: !21105)
!21107 = !DILocation(line: 310, column: 7, scope: !21108)
!21108 = distinct !DILexicalBlock(scope: !21091, file: !2312, line: 310, column: 7)
!21109 = !DILocation(line: 310, column: 7, scope: !21091)
!21110 = !DILocalVariable(name: "prev_fd_in_slot", scope: !21111, file: !2312, line: 314, type: !7)
!21111 = distinct !DILexicalBlock(scope: !21108, file: !2312, line: 311, column: 5)
!21112 = !DILocation(line: 314, column: 11, scope: !21111)
!21113 = !DILocation(line: 314, column: 43, scope: !21111)
!21114 = !DILocation(line: 314, column: 47, scope: !21111)
!21115 = !DILocation(line: 314, column: 60, scope: !21111)
!21116 = !DILocation(line: 314, column: 29, scope: !21111)
!21117 = !DILocation(line: 316, column: 16, scope: !21118)
!21118 = distinct !DILexicalBlock(scope: !21111, file: !2312, line: 316, column: 11)
!21119 = !DILocation(line: 316, column: 13, scope: !21118)
!21120 = !DILocation(line: 316, column: 11, scope: !21111)
!21121 = !DILocation(line: 317, column: 16, scope: !21118)
!21122 = !DILocation(line: 317, column: 9, scope: !21118)
!21123 = !DILocation(line: 318, column: 5, scope: !21111)
!21124 = !DILocation(line: 319, column: 15, scope: !21125)
!21125 = distinct !DILexicalBlock(scope: !21108, file: !2312, line: 319, column: 13)
!21126 = !DILocation(line: 319, column: 13, scope: !21108)
!21127 = !DILocation(line: 321, column: 16, scope: !21128)
!21128 = distinct !DILexicalBlock(scope: !21129, file: !2312, line: 321, column: 11)
!21129 = distinct !DILexicalBlock(scope: !21125, file: !2312, line: 320, column: 5)
!21130 = !DILocation(line: 321, column: 13, scope: !21128)
!21131 = !DILocation(line: 321, column: 11, scope: !21129)
!21132 = !DILocation(line: 322, column: 16, scope: !21128)
!21133 = !DILocation(line: 322, column: 9, scope: !21128)
!21134 = !DILocation(line: 323, column: 5, scope: !21129)
!21135 = !DILocation(line: 325, column: 20, scope: !21091)
!21136 = !DILocation(line: 325, column: 3, scope: !21091)
!21137 = !DILocation(line: 325, column: 7, scope: !21091)
!21138 = !DILocation(line: 325, column: 18, scope: !21091)
!21139 = !DILocation(line: 326, column: 1, scope: !21091)
!21140 = distinct !DISubprogram(name: "filesystem_type", scope: !2312, file: !2312, line: 709, type: !2456, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !21142, line: 24, size: 960, elements: !21143)
!21142 = !DIFile(filename: "/usr/include/bits/statfs.h", directory: "")
!21143 = !{!21144, !21145, !21146, !21148, !21149, !21150, !21152, !21153, !21159, !21160, !21161, !21162}
!21144 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !21141, file: !21142, line: 26, baseType: !2459, size: 64)
!21145 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !21141, file: !21142, line: 27, baseType: !2459, size: 64, offset: 64)
!21146 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !21141, file: !21142, line: 29, baseType: !21147, size: 64, offset: 128)
!21147 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !30, line: 183, baseType: !57)
!21148 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !21141, file: !21142, line: 30, baseType: !21147, size: 64, offset: 192)
!21149 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !21141, file: !21142, line: 31, baseType: !21147, size: 64, offset: 256)
!21150 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !21141, file: !21142, line: 32, baseType: !21151, size: 64, offset: 320)
!21151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !30, line: 187, baseType: !57)
!21152 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !21141, file: !21142, line: 33, baseType: !21151, size: 64, offset: 384)
!21153 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !21141, file: !21142, line: 41, baseType: !21154, size: 64, offset: 448)
!21154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !30, line: 155, baseType: !21155)
!21155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !30, line: 155, size: 64, elements: !21156)
!21156 = !{!21157}
!21157 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !21155, file: !30, line: 155, baseType: !21158, size: 64)
!21158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !209)
!21159 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !21141, file: !21142, line: 42, baseType: !2459, size: 64, offset: 512)
!21160 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !21141, file: !21142, line: 43, baseType: !2459, size: 64, offset: 576)
!21161 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !21141, file: !21142, line: 44, baseType: !2459, size: 64, offset: 640)
!21162 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !21141, file: !21142, line: 45, baseType: !21163, size: 256, offset: 704)
!21163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2459, size: 256, elements: !1041)
!21164 = !DILocalVariable(name: "p", arg: 1, scope: !21140, file: !2312, line: 709, type: !2319)
!21165 = !DILocation(line: 709, column: 32, scope: !21140)
!21166 = !DILocalVariable(name: "fd", arg: 2, scope: !21140, file: !2312, line: 709, type: !7)
!21167 = !DILocation(line: 709, column: 39, scope: !21140)
!21168 = !DILocalVariable(name: "sp", scope: !21140, file: !2312, line: 711, type: !2337)
!21169 = !DILocation(line: 711, column: 8, scope: !21140)
!21170 = !DILocation(line: 711, column: 13, scope: !21140)
!21171 = !DILocation(line: 711, column: 16, scope: !21140)
!21172 = !DILocalVariable(name: "h", scope: !21140, file: !2312, line: 712, type: !2460)
!21173 = !DILocation(line: 712, column: 15, scope: !21140)
!21174 = !DILocation(line: 712, column: 19, scope: !21140)
!21175 = !DILocation(line: 712, column: 23, scope: !21140)
!21176 = !DILocalVariable(name: "ent", scope: !21140, file: !2312, line: 713, type: !2462)
!21177 = !DILocation(line: 713, column: 20, scope: !21140)
!21178 = !DILocalVariable(name: "fs_buf", scope: !21140, file: !2312, line: 714, type: !21141)
!21179 = !DILocation(line: 714, column: 17, scope: !21140)
!21180 = !DILocation(line: 718, column: 8, scope: !21181)
!21181 = distinct !DILexicalBlock(scope: !21140, file: !2312, line: 718, column: 7)
!21182 = !DILocation(line: 718, column: 7, scope: !21140)
!21183 = !DILocation(line: 719, column: 5, scope: !21181)
!21184 = !DILocation(line: 721, column: 9, scope: !21185)
!21185 = distinct !DILexicalBlock(scope: !21140, file: !2312, line: 721, column: 7)
!21186 = !DILocation(line: 721, column: 7, scope: !21140)
!21187 = !DILocation(line: 723, column: 9, scope: !21185)
!21188 = !DILocation(line: 722, column: 9, scope: !21185)
!21189 = !DILocation(line: 722, column: 13, scope: !21185)
!21190 = !DILocation(line: 723, column: 7, scope: !21185)
!21191 = !DILocation(line: 722, column: 7, scope: !21185)
!21192 = !DILocation(line: 722, column: 5, scope: !21185)
!21193 = !DILocation(line: 725, column: 7, scope: !21194)
!21194 = distinct !DILexicalBlock(scope: !21140, file: !2312, line: 725, column: 7)
!21195 = !DILocation(line: 725, column: 7, scope: !21140)
!21196 = !DILocalVariable(name: "tmp", scope: !21197, file: !2312, line: 727, type: !2463)
!21197 = distinct !DILexicalBlock(scope: !21194, file: !2312, line: 726, column: 5)
!21198 = !DILocation(line: 727, column: 23, scope: !21197)
!21199 = !DILocation(line: 728, column: 20, scope: !21197)
!21200 = !DILocation(line: 728, column: 23, scope: !21197)
!21201 = !DILocation(line: 728, column: 34, scope: !21197)
!21202 = !DILocation(line: 728, column: 11, scope: !21197)
!21203 = !DILocation(line: 728, column: 18, scope: !21197)
!21204 = !{!21205, !3183, i64 0}
!21205 = !{!"dev_type", !3183, i64 0, !3183, i64 8}
!21206 = !DILocation(line: 729, column: 26, scope: !21197)
!21207 = !DILocation(line: 729, column: 29, scope: !21197)
!21208 = !DILocation(line: 729, column: 13, scope: !21197)
!21209 = !DILocation(line: 729, column: 11, scope: !21197)
!21210 = !DILocation(line: 730, column: 11, scope: !21211)
!21211 = distinct !DILexicalBlock(scope: !21197, file: !2312, line: 730, column: 11)
!21212 = !DILocation(line: 730, column: 11, scope: !21197)
!21213 = !DILocation(line: 731, column: 16, scope: !21211)
!21214 = !DILocation(line: 731, column: 21, scope: !21211)
!21215 = !{!21205, !3183, i64 8}
!21216 = !DILocation(line: 731, column: 9, scope: !21211)
!21217 = !DILocation(line: 732, column: 5, scope: !21197)
!21218 = !DILocation(line: 735, column: 7, scope: !21219)
!21219 = distinct !DILexicalBlock(scope: !21140, file: !2312, line: 735, column: 7)
!21220 = !DILocation(line: 735, column: 10, scope: !21219)
!21221 = !DILocation(line: 735, column: 14, scope: !21219)
!21222 = !DILocation(line: 735, column: 26, scope: !21219)
!21223 = !DILocation(line: 735, column: 17, scope: !21219)
!21224 = !DILocation(line: 735, column: 39, scope: !21219)
!21225 = !DILocation(line: 735, column: 7, scope: !21140)
!21226 = !DILocation(line: 736, column: 5, scope: !21219)
!21227 = !DILocation(line: 738, column: 7, scope: !21228)
!21228 = distinct !DILexicalBlock(scope: !21140, file: !2312, line: 738, column: 7)
!21229 = !DILocation(line: 738, column: 7, scope: !21140)
!21230 = !DILocalVariable(name: "t2", scope: !21231, file: !2312, line: 740, type: !2462)
!21231 = distinct !DILexicalBlock(scope: !21228, file: !2312, line: 739, column: 5)
!21232 = !DILocation(line: 740, column: 24, scope: !21231)
!21233 = !DILocation(line: 740, column: 29, scope: !21231)
!21234 = !DILocation(line: 741, column: 11, scope: !21235)
!21235 = distinct !DILexicalBlock(scope: !21231, file: !2312, line: 741, column: 11)
!21236 = !DILocation(line: 741, column: 11, scope: !21231)
!21237 = !DILocation(line: 743, column: 24, scope: !21238)
!21238 = distinct !DILexicalBlock(scope: !21235, file: !2312, line: 742, column: 9)
!21239 = !DILocation(line: 743, column: 27, scope: !21238)
!21240 = !DILocation(line: 743, column: 38, scope: !21238)
!21241 = !DILocation(line: 743, column: 11, scope: !21238)
!21242 = !DILocation(line: 743, column: 15, scope: !21238)
!21243 = !DILocation(line: 743, column: 22, scope: !21238)
!21244 = !DILocation(line: 744, column: 31, scope: !21238)
!21245 = !{!21246, !3183, i64 0}
!21246 = !{!"statfs", !3183, i64 0, !3183, i64 8, !3183, i64 16, !3183, i64 24, !3183, i64 32, !3183, i64 40, !3183, i64 48, !21247, i64 56, !3183, i64 64, !3183, i64 72, !3183, i64 80, !2987, i64 88}
!21247 = !{!"", !2987, i64 0}
!21248 = !DILocation(line: 744, column: 11, scope: !21238)
!21249 = !DILocation(line: 744, column: 15, scope: !21238)
!21250 = !DILocation(line: 744, column: 22, scope: !21238)
!21251 = !DILocation(line: 746, column: 30, scope: !21238)
!21252 = !DILocation(line: 746, column: 33, scope: !21238)
!21253 = !DILocation(line: 746, column: 17, scope: !21238)
!21254 = !DILocation(line: 746, column: 15, scope: !21238)
!21255 = !DILocation(line: 747, column: 15, scope: !21256)
!21256 = distinct !DILexicalBlock(scope: !21238, file: !2312, line: 747, column: 15)
!21257 = !DILocation(line: 747, column: 15, scope: !21238)
!21258 = !DILocation(line: 748, column: 13, scope: !21256)
!21259 = !DILocation(line: 748, column: 13, scope: !21260)
!21260 = distinct !DILexicalBlock(scope: !21261, file: !2312, line: 748, column: 13)
!21261 = distinct !DILexicalBlock(scope: !21256, file: !2312, line: 748, column: 13)
!21262 = !DILocation(line: 748, column: 13, scope: !21261)
!21263 = !DILocation(line: 750, column: 19, scope: !21256)
!21264 = !DILocation(line: 750, column: 13, scope: !21256)
!21265 = !DILocation(line: 751, column: 9, scope: !21238)
!21266 = !DILocation(line: 752, column: 5, scope: !21231)
!21267 = !DILocation(line: 754, column: 17, scope: !21140)
!21268 = !DILocation(line: 754, column: 3, scope: !21140)
!21269 = !DILocation(line: 755, column: 1, scope: !21140)
!21270 = distinct !DISubprogram(name: "dev_type_hash", scope: !2312, file: !2312, line: 689, type: !549, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21271 = !DILocalVariable(name: "x", arg: 1, scope: !21270, file: !2312, line: 689, type: !427)
!21272 = !DILocation(line: 689, column: 28, scope: !21270)
!21273 = !DILocalVariable(name: "table_size", arg: 2, scope: !21270, file: !2312, line: 689, type: !55)
!21274 = !DILocation(line: 689, column: 38, scope: !21270)
!21275 = !DILocalVariable(name: "ax", scope: !21270, file: !2312, line: 691, type: !2467)
!21276 = !DILocation(line: 691, column: 26, scope: !21270)
!21277 = !DILocation(line: 691, column: 31, scope: !21270)
!21278 = !DILocalVariable(name: "dev", scope: !21270, file: !2312, line: 692, type: !458)
!21279 = !DILocation(line: 692, column: 13, scope: !21270)
!21280 = !DILocation(line: 692, column: 19, scope: !21270)
!21281 = !DILocation(line: 692, column: 23, scope: !21270)
!21282 = !DILocation(line: 693, column: 10, scope: !21270)
!21283 = !DILocation(line: 693, column: 16, scope: !21270)
!21284 = !DILocation(line: 693, column: 14, scope: !21270)
!21285 = !DILocation(line: 693, column: 3, scope: !21270)
!21286 = distinct !DISubprogram(name: "dev_type_compare", scope: !2312, file: !2312, line: 697, type: !551, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21287 = !DILocalVariable(name: "x", arg: 1, scope: !21286, file: !2312, line: 697, type: !427)
!21288 = !DILocation(line: 697, column: 31, scope: !21286)
!21289 = !DILocalVariable(name: "y", arg: 2, scope: !21286, file: !2312, line: 697, type: !427)
!21290 = !DILocation(line: 697, column: 46, scope: !21286)
!21291 = !DILocalVariable(name: "ax", scope: !21286, file: !2312, line: 699, type: !2467)
!21292 = !DILocation(line: 699, column: 26, scope: !21286)
!21293 = !DILocation(line: 699, column: 31, scope: !21286)
!21294 = !DILocalVariable(name: "ay", scope: !21286, file: !2312, line: 700, type: !2467)
!21295 = !DILocation(line: 700, column: 26, scope: !21286)
!21296 = !DILocation(line: 700, column: 31, scope: !21286)
!21297 = !DILocation(line: 701, column: 10, scope: !21286)
!21298 = !DILocation(line: 701, column: 14, scope: !21286)
!21299 = !DILocation(line: 701, column: 24, scope: !21286)
!21300 = !DILocation(line: 701, column: 28, scope: !21286)
!21301 = !DILocation(line: 701, column: 21, scope: !21286)
!21302 = !DILocation(line: 701, column: 3, scope: !21286)
!21303 = distinct !DISubprogram(name: "set_stat_type", scope: !2312, file: !2312, line: 1234, type: !2482, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21304 = !DILocalVariable(name: "st", arg: 1, scope: !21303, file: !2312, line: 1234, type: !2484)
!21305 = !DILocation(line: 1234, column: 29, scope: !21303)
!21306 = !DILocalVariable(name: "dtype", arg: 2, scope: !21303, file: !2312, line: 1234, type: !70)
!21307 = !DILocation(line: 1234, column: 46, scope: !21303)
!21308 = !DILocalVariable(name: "type", scope: !21303, file: !2312, line: 1236, type: !160)
!21309 = !DILocation(line: 1236, column: 10, scope: !21303)
!21310 = !DILocation(line: 1237, column: 11, scope: !21303)
!21311 = !DILocation(line: 1237, column: 3, scope: !21303)
!21312 = !DILocation(line: 1240, column: 12, scope: !21313)
!21313 = distinct !DILexicalBlock(scope: !21303, file: !2312, line: 1238, column: 5)
!21314 = !DILocation(line: 1241, column: 7, scope: !21313)
!21315 = !DILocation(line: 1243, column: 12, scope: !21313)
!21316 = !DILocation(line: 1244, column: 7, scope: !21313)
!21317 = !DILocation(line: 1246, column: 12, scope: !21313)
!21318 = !DILocation(line: 1247, column: 7, scope: !21313)
!21319 = !DILocation(line: 1249, column: 12, scope: !21313)
!21320 = !DILocation(line: 1250, column: 7, scope: !21313)
!21321 = !DILocation(line: 1252, column: 12, scope: !21313)
!21322 = !DILocation(line: 1253, column: 7, scope: !21313)
!21323 = !DILocation(line: 1255, column: 12, scope: !21313)
!21324 = !DILocation(line: 1256, column: 7, scope: !21313)
!21325 = !DILocation(line: 1258, column: 12, scope: !21313)
!21326 = !DILocation(line: 1259, column: 7, scope: !21313)
!21327 = !DILocation(line: 1261, column: 12, scope: !21313)
!21328 = !DILocation(line: 1262, column: 5, scope: !21313)
!21329 = !DILocation(line: 1263, column: 17, scope: !21303)
!21330 = !DILocation(line: 1263, column: 3, scope: !21303)
!21331 = !DILocation(line: 1263, column: 7, scope: !21303)
!21332 = !DILocation(line: 1263, column: 15, scope: !21303)
!21333 = !DILocation(line: 1264, column: 1, scope: !21303)
!21334 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !2312, file: !2312, line: 762, type: !2485, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21335 = !DILocalVariable(name: "p", arg: 1, scope: !21334, file: !2312, line: 762, type: !2319)
!21336 = !DILocation(line: 762, column: 48, scope: !21334)
!21337 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !21334, file: !2312, line: 762, type: !7)
!21338 = !DILocation(line: 762, column: 55, scope: !21334)
!21339 = !DILocation(line: 770, column: 28, scope: !21334)
!21340 = !DILocation(line: 770, column: 31, scope: !21334)
!21341 = !DILocation(line: 770, column: 11, scope: !21334)
!21342 = !DILocation(line: 770, column: 3, scope: !21334)
!21343 = !DILocation(line: 777, column: 7, scope: !21344)
!21344 = distinct !DILexicalBlock(scope: !21334, file: !2312, line: 771, column: 5)
!21345 = !DILocation(line: 780, column: 7, scope: !21344)
!21346 = !DILocation(line: 782, column: 1, scope: !21334)
!21347 = distinct !DISubprogram(name: "fts_padjust", scope: !2312, file: !2312, line: 1997, type: !2450, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21348 = !DILocalVariable(name: "sp", arg: 1, scope: !21347, file: !2312, line: 1997, type: !2337)
!21349 = !DILocation(line: 1997, column: 19, scope: !21347)
!21350 = !DILocalVariable(name: "head", arg: 2, scope: !21347, file: !2312, line: 1997, type: !2420)
!21351 = !DILocation(line: 1997, column: 31, scope: !21347)
!21352 = !DILocalVariable(name: "p", scope: !21347, file: !2312, line: 1999, type: !2420)
!21353 = !DILocation(line: 1999, column: 17, scope: !21347)
!21354 = !DILocalVariable(name: "addr", scope: !21347, file: !2312, line: 2000, type: !9)
!21355 = !DILocation(line: 2000, column: 15, scope: !21347)
!21356 = !DILocation(line: 2000, column: 22, scope: !21347)
!21357 = !DILocation(line: 2000, column: 26, scope: !21347)
!21358 = !DILocation(line: 2010, column: 18, scope: !21359)
!21359 = distinct !DILexicalBlock(scope: !21347, file: !2312, line: 2010, column: 9)
!21360 = !DILocation(line: 2010, column: 22, scope: !21359)
!21361 = !DILocation(line: 2010, column: 16, scope: !21359)
!21362 = !DILocation(line: 2010, column: 14, scope: !21359)
!21363 = !DILocation(line: 2010, column: 33, scope: !21364)
!21364 = distinct !DILexicalBlock(scope: !21359, file: !2312, line: 2010, column: 9)
!21365 = !DILocation(line: 2010, column: 9, scope: !21359)
!21366 = !DILocation(line: 2011, column: 17, scope: !21364)
!21367 = !DILocation(line: 2011, column: 17, scope: !21368)
!21368 = distinct !DILexicalBlock(scope: !21369, file: !2312, line: 2011, column: 17)
!21369 = distinct !DILexicalBlock(scope: !21364, file: !2312, line: 2011, column: 17)
!21370 = !DILocation(line: 2011, column: 17, scope: !21369)
!21371 = !DILocation(line: 2011, column: 17, scope: !21372)
!21372 = distinct !DILexicalBlock(scope: !21368, file: !2312, line: 2011, column: 17)
!21373 = !DILocation(line: 2010, column: 40, scope: !21364)
!21374 = !DILocation(line: 2010, column: 43, scope: !21364)
!21375 = !DILocation(line: 2010, column: 38, scope: !21364)
!21376 = !DILocation(line: 2010, column: 9, scope: !21364)
!21377 = distinct !{!21377, !21365, !21378}
!21378 = !DILocation(line: 2011, column: 17, scope: !21359)
!21379 = !DILocation(line: 2014, column: 18, scope: !21380)
!21380 = distinct !DILexicalBlock(scope: !21347, file: !2312, line: 2014, column: 9)
!21381 = !DILocation(line: 2014, column: 16, scope: !21380)
!21382 = !DILocation(line: 2014, column: 14, scope: !21380)
!21383 = !DILocation(line: 2014, column: 24, scope: !21384)
!21384 = distinct !DILexicalBlock(scope: !21380, file: !2312, line: 2014, column: 9)
!21385 = !DILocation(line: 2014, column: 27, scope: !21384)
!21386 = !DILocation(line: 2014, column: 37, scope: !21384)
!21387 = !DILocation(line: 2014, column: 9, scope: !21380)
!21388 = !DILocation(line: 2015, column: 17, scope: !21389)
!21389 = distinct !DILexicalBlock(scope: !21384, file: !2312, line: 2014, column: 56)
!21390 = !DILocation(line: 2015, column: 17, scope: !21391)
!21391 = distinct !DILexicalBlock(scope: !21392, file: !2312, line: 2015, column: 17)
!21392 = distinct !DILexicalBlock(scope: !21389, file: !2312, line: 2015, column: 17)
!21393 = !DILocation(line: 2015, column: 17, scope: !21392)
!21394 = !DILocation(line: 2015, column: 17, scope: !21395)
!21395 = distinct !DILexicalBlock(scope: !21391, file: !2312, line: 2015, column: 17)
!21396 = !DILocation(line: 2016, column: 21, scope: !21389)
!21397 = !DILocation(line: 2016, column: 24, scope: !21389)
!21398 = !DILocation(line: 2016, column: 35, scope: !21389)
!21399 = !DILocation(line: 2016, column: 38, scope: !21389)
!21400 = !DILocation(line: 2016, column: 49, scope: !21389)
!21401 = !DILocation(line: 2016, column: 52, scope: !21389)
!21402 = !DILocation(line: 2016, column: 19, scope: !21389)
!21403 = !DILocation(line: 2014, column: 9, scope: !21384)
!21404 = distinct !{!21404, !21387, !21405}
!21405 = !DILocation(line: 2017, column: 9, scope: !21380)
!21406 = !DILocation(line: 2018, column: 1, scope: !21347)
!21407 = distinct !DISubprogram(name: "fts_compare_ino", scope: !2312, file: !2312, line: 1225, type: !2353, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21408 = !DILocalVariable(name: "a", arg: 1, scope: !21407, file: !2312, line: 1225, type: !2355)
!21409 = !DILocation(line: 1225, column: 41, scope: !21407)
!21410 = !DILocalVariable(name: "b", arg: 2, scope: !21407, file: !2312, line: 1225, type: !2355)
!21411 = !DILocation(line: 1225, column: 67, scope: !21407)
!21412 = !DILocation(line: 1227, column: 11, scope: !21407)
!21413 = !DILocation(line: 1227, column: 17, scope: !21407)
!21414 = !DILocation(line: 1227, column: 28, scope: !21407)
!21415 = !DILocation(line: 1227, column: 37, scope: !21407)
!21416 = !DILocation(line: 1227, column: 43, scope: !21407)
!21417 = !DILocation(line: 1227, column: 54, scope: !21407)
!21418 = !DILocation(line: 1227, column: 35, scope: !21407)
!21419 = !DILocation(line: 1228, column: 13, scope: !21407)
!21420 = !DILocation(line: 1228, column: 19, scope: !21407)
!21421 = !DILocation(line: 1228, column: 30, scope: !21407)
!21422 = !DILocation(line: 1228, column: 39, scope: !21407)
!21423 = !DILocation(line: 1228, column: 45, scope: !21407)
!21424 = !DILocation(line: 1228, column: 56, scope: !21407)
!21425 = !DILocation(line: 1228, column: 37, scope: !21407)
!21426 = !DILocation(line: 1227, column: 3, scope: !21407)
!21427 = distinct !DISubprogram(name: "rpl_fts_set", scope: !2312, file: !2312, line: 1130, type: !2425, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21428 = !DILocalVariable(name: "sp", arg: 1, scope: !21427, file: !2312, line: 1130, type: !2337)
!21429 = !DILocation(line: 1130, column: 14, scope: !21427)
!21430 = !DILocalVariable(name: "p", arg: 2, scope: !21427, file: !2312, line: 1130, type: !2420)
!21431 = !DILocation(line: 1130, column: 37, scope: !21427)
!21432 = !DILocalVariable(name: "instr", arg: 3, scope: !21427, file: !2312, line: 1130, type: !7)
!21433 = !DILocation(line: 1130, column: 44, scope: !21427)
!21434 = !DILocation(line: 1132, column: 13, scope: !21435)
!21435 = distinct !DILexicalBlock(scope: !21427, file: !2312, line: 1132, column: 13)
!21436 = !DILocation(line: 1132, column: 19, scope: !21435)
!21437 = !DILocation(line: 1132, column: 24, scope: !21435)
!21438 = !DILocation(line: 1132, column: 27, scope: !21435)
!21439 = !DILocation(line: 1132, column: 33, scope: !21435)
!21440 = !DILocation(line: 1132, column: 46, scope: !21435)
!21441 = !DILocation(line: 1132, column: 49, scope: !21435)
!21442 = !DILocation(line: 1132, column: 55, scope: !21435)
!21443 = !DILocation(line: 1132, column: 69, scope: !21435)
!21444 = !DILocation(line: 1133, column: 13, scope: !21435)
!21445 = !DILocation(line: 1133, column: 19, scope: !21435)
!21446 = !DILocation(line: 1133, column: 34, scope: !21435)
!21447 = !DILocation(line: 1133, column: 37, scope: !21435)
!21448 = !DILocation(line: 1133, column: 43, scope: !21435)
!21449 = !DILocation(line: 1132, column: 13, scope: !21427)
!21450 = !DILocation(line: 1134, column: 17, scope: !21451)
!21451 = distinct !DILexicalBlock(scope: !21435, file: !2312, line: 1133, column: 56)
!21452 = !DILocation(line: 1135, column: 17, scope: !21451)
!21453 = !DILocation(line: 1137, column: 24, scope: !21427)
!21454 = !DILocation(line: 1137, column: 9, scope: !21427)
!21455 = !DILocation(line: 1137, column: 12, scope: !21427)
!21456 = !DILocation(line: 1137, column: 22, scope: !21427)
!21457 = !DILocation(line: 1138, column: 9, scope: !21427)
!21458 = !DILocation(line: 1139, column: 1, scope: !21427)
!21459 = distinct !DISubprogram(name: "rpl_fts_children", scope: !2312, file: !2312, line: 1142, type: !2427, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2308, retainedNodes: !143)
!21460 = !DILocalVariable(name: "sp", arg: 1, scope: !21459, file: !2312, line: 1142, type: !2337)
!21461 = !DILocation(line: 1142, column: 29, scope: !21459)
!21462 = !DILocalVariable(name: "instr", arg: 2, scope: !21459, file: !2312, line: 1142, type: !7)
!21463 = !DILocation(line: 1142, column: 37, scope: !21459)
!21464 = !DILocalVariable(name: "p", scope: !21459, file: !2312, line: 1144, type: !2420)
!21465 = !DILocation(line: 1144, column: 26, scope: !21459)
!21466 = !DILocalVariable(name: "fd", scope: !21459, file: !2312, line: 1145, type: !7)
!21467 = !DILocation(line: 1145, column: 13, scope: !21459)
!21468 = !DILocation(line: 1147, column: 13, scope: !21469)
!21469 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1147, column: 13)
!21470 = !DILocation(line: 1147, column: 19, scope: !21469)
!21471 = !DILocation(line: 1147, column: 24, scope: !21469)
!21472 = !DILocation(line: 1147, column: 27, scope: !21469)
!21473 = !DILocation(line: 1147, column: 33, scope: !21469)
!21474 = !DILocation(line: 1147, column: 13, scope: !21459)
!21475 = !DILocation(line: 1148, column: 17, scope: !21476)
!21476 = distinct !DILexicalBlock(scope: !21469, file: !2312, line: 1147, column: 50)
!21477 = !DILocation(line: 1149, column: 17, scope: !21476)
!21478 = !DILocation(line: 1153, column: 13, scope: !21459)
!21479 = !DILocation(line: 1153, column: 17, scope: !21459)
!21480 = !DILocation(line: 1153, column: 11, scope: !21459)
!21481 = !DILocation(line: 1159, column: 9, scope: !21459)
!21482 = !DILocation(line: 1162, column: 13, scope: !21483)
!21483 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1162, column: 13)
!21484 = !DILocation(line: 1162, column: 13, scope: !21459)
!21485 = !DILocation(line: 1163, column: 17, scope: !21483)
!21486 = !DILocation(line: 1166, column: 13, scope: !21487)
!21487 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1166, column: 13)
!21488 = !DILocation(line: 1166, column: 16, scope: !21487)
!21489 = !DILocation(line: 1166, column: 25, scope: !21487)
!21490 = !DILocation(line: 1166, column: 13, scope: !21459)
!21491 = !DILocation(line: 1167, column: 25, scope: !21487)
!21492 = !DILocation(line: 1167, column: 28, scope: !21487)
!21493 = !DILocation(line: 1167, column: 17, scope: !21487)
!21494 = !DILocation(line: 1174, column: 13, scope: !21495)
!21495 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1174, column: 13)
!21496 = !DILocation(line: 1174, column: 16, scope: !21495)
!21497 = !DILocation(line: 1174, column: 25, scope: !21495)
!21498 = !DILocation(line: 1174, column: 13, scope: !21459)
!21499 = !DILocation(line: 1175, column: 17, scope: !21495)
!21500 = !DILocation(line: 1178, column: 13, scope: !21501)
!21501 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1178, column: 13)
!21502 = !DILocation(line: 1178, column: 17, scope: !21501)
!21503 = !DILocation(line: 1178, column: 27, scope: !21501)
!21504 = !DILocation(line: 1178, column: 13, scope: !21459)
!21505 = !DILocation(line: 1179, column: 27, scope: !21501)
!21506 = !DILocation(line: 1179, column: 31, scope: !21501)
!21507 = !DILocation(line: 1179, column: 17, scope: !21501)
!21508 = !DILocation(line: 1181, column: 13, scope: !21509)
!21509 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1181, column: 13)
!21510 = !DILocation(line: 1181, column: 19, scope: !21509)
!21511 = !DILocation(line: 1181, column: 13, scope: !21459)
!21512 = !DILocation(line: 1182, column: 17, scope: !21513)
!21513 = distinct !DILexicalBlock(scope: !21509, file: !2312, line: 1181, column: 36)
!21514 = !DILocation(line: 1183, column: 23, scope: !21513)
!21515 = !DILocation(line: 1184, column: 9, scope: !21513)
!21516 = !DILocation(line: 1185, column: 23, scope: !21509)
!21517 = !DILocation(line: 1194, column: 13, scope: !21518)
!21518 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1194, column: 13)
!21519 = !DILocation(line: 1194, column: 16, scope: !21518)
!21520 = !DILocation(line: 1194, column: 26, scope: !21518)
!21521 = !DILocation(line: 1194, column: 43, scope: !21518)
!21522 = !DILocation(line: 1194, column: 46, scope: !21518)
!21523 = !DILocation(line: 1194, column: 49, scope: !21518)
!21524 = !DILocation(line: 1194, column: 64, scope: !21518)
!21525 = !DILocation(line: 1194, column: 71, scope: !21518)
!21526 = !DILocation(line: 1195, column: 13, scope: !21518)
!21527 = !DILocation(line: 1194, column: 13, scope: !21459)
!21528 = !DILocation(line: 1196, column: 51, scope: !21518)
!21529 = !DILocation(line: 1196, column: 55, scope: !21518)
!21530 = !DILocation(line: 1196, column: 41, scope: !21518)
!21531 = !DILocation(line: 1196, column: 25, scope: !21518)
!21532 = !DILocation(line: 1196, column: 29, scope: !21518)
!21533 = !DILocation(line: 1196, column: 39, scope: !21518)
!21534 = !DILocation(line: 1196, column: 17, scope: !21518)
!21535 = !DILocation(line: 1198, column: 28, scope: !21536)
!21536 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1198, column: 13)
!21537 = !DILocation(line: 1198, column: 19, scope: !21536)
!21538 = !DILocation(line: 1198, column: 17, scope: !21536)
!21539 = !DILocation(line: 1198, column: 38, scope: !21536)
!21540 = !DILocation(line: 1198, column: 13, scope: !21459)
!21541 = !DILocation(line: 1199, column: 25, scope: !21536)
!21542 = !DILocation(line: 1199, column: 29, scope: !21536)
!21543 = !DILocation(line: 1199, column: 39, scope: !21536)
!21544 = !DILocation(line: 1199, column: 17, scope: !21536)
!21545 = !DILocation(line: 1200, column: 35, scope: !21459)
!21546 = !DILocation(line: 1200, column: 39, scope: !21459)
!21547 = !DILocation(line: 1200, column: 25, scope: !21459)
!21548 = !DILocation(line: 1200, column: 9, scope: !21459)
!21549 = !DILocation(line: 1200, column: 13, scope: !21459)
!21550 = !DILocation(line: 1200, column: 23, scope: !21459)
!21551 = !DILocation(line: 1201, column: 13, scope: !21552)
!21552 = distinct !DILexicalBlock(scope: !21459, file: !2312, line: 1201, column: 13)
!21553 = !DILocation(line: 1201, column: 13, scope: !21459)
!21554 = !DILocation(line: 1203, column: 29, scope: !21555)
!21555 = distinct !DILexicalBlock(scope: !21552, file: !2312, line: 1202, column: 11)
!21556 = !DILocation(line: 1203, column: 33, scope: !21555)
!21557 = !DILocation(line: 1203, column: 13, scope: !21555)
!21558 = !DILocation(line: 1204, column: 11, scope: !21555)
!21559 = !DILocation(line: 1207, column: 24, scope: !21560)
!21560 = distinct !DILexicalBlock(scope: !21561, file: !2312, line: 1207, column: 17)
!21561 = distinct !DILexicalBlock(scope: !21552, file: !2312, line: 1206, column: 11)
!21562 = !DILocation(line: 1207, column: 17, scope: !21560)
!21563 = !DILocation(line: 1207, column: 17, scope: !21561)
!21564 = !DILocalVariable(name: "saved_errno", scope: !21565, file: !2312, line: 1209, type: !7)
!21565 = distinct !DILexicalBlock(scope: !21560, file: !2312, line: 1208, column: 15)
!21566 = !DILocation(line: 1209, column: 21, scope: !21565)
!21567 = !DILocation(line: 1209, column: 35, scope: !21565)
!21568 = !DILocation(line: 1210, column: 24, scope: !21565)
!21569 = !DILocation(line: 1210, column: 17, scope: !21565)
!21570 = !DILocation(line: 1211, column: 17, scope: !21565)
!21571 = !DILocation(line: 1212, column: 17, scope: !21565)
!21572 = !DILocation(line: 1214, column: 20, scope: !21561)
!21573 = !DILocation(line: 1214, column: 13, scope: !21561)
!21574 = !DILocation(line: 1216, column: 17, scope: !21459)
!21575 = !DILocation(line: 1216, column: 21, scope: !21459)
!21576 = !DILocation(line: 1216, column: 9, scope: !21459)
!21577 = !DILocation(line: 1217, column: 1, scope: !21459)
!21578 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !21579, file: !21579, line: 461, type: !2505, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2502, retainedNodes: !143)
!21579 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/clone/coreutils")
!21580 = !DILocalVariable(name: "pwc", arg: 1, scope: !21578, file: !21579, line: 461, type: !2507)
!21581 = !DILocation(line: 461, column: 23, scope: !21578)
!21582 = !DILocalVariable(name: "s", arg: 2, scope: !21578, file: !21579, line: 461, type: !115)
!21583 = !DILocation(line: 461, column: 40, scope: !21578)
!21584 = !DILocalVariable(name: "n", arg: 3, scope: !21578, file: !21579, line: 461, type: !55)
!21585 = !DILocation(line: 461, column: 50, scope: !21578)
!21586 = !DILocalVariable(name: "ps", arg: 4, scope: !21578, file: !21579, line: 461, type: !2508)
!21587 = !DILocation(line: 461, column: 64, scope: !21578)
!21588 = !DILocalVariable(name: "ret", scope: !21578, file: !21579, line: 463, type: !55)
!21589 = !DILocation(line: 463, column: 10, scope: !21578)
!21590 = !DILocalVariable(name: "wc", scope: !21578, file: !21579, line: 464, type: !1043)
!21591 = !DILocation(line: 464, column: 11, scope: !21578)
!21592 = !DILocation(line: 480, column: 9, scope: !21593)
!21593 = distinct !DILexicalBlock(scope: !21578, file: !21579, line: 480, column: 7)
!21594 = !DILocation(line: 480, column: 7, scope: !21578)
!21595 = !DILocation(line: 481, column: 9, scope: !21593)
!21596 = !DILocation(line: 481, column: 5, scope: !21593)
!21597 = !DILocation(line: 515, column: 18, scope: !21578)
!21598 = !DILocation(line: 515, column: 23, scope: !21578)
!21599 = !DILocation(line: 515, column: 26, scope: !21578)
!21600 = !DILocation(line: 515, column: 29, scope: !21578)
!21601 = !DILocation(line: 515, column: 9, scope: !21578)
!21602 = !DILocation(line: 515, column: 7, scope: !21578)
!21603 = !DILocation(line: 523, column: 22, scope: !21604)
!21604 = distinct !DILexicalBlock(scope: !21578, file: !21579, line: 523, column: 7)
!21605 = !DILocation(line: 523, column: 19, scope: !21604)
!21606 = !DILocation(line: 523, column: 26, scope: !21604)
!21607 = !DILocation(line: 523, column: 29, scope: !21604)
!21608 = !DILocation(line: 523, column: 31, scope: !21604)
!21609 = !DILocation(line: 523, column: 36, scope: !21604)
!21610 = !DILocation(line: 523, column: 41, scope: !21604)
!21611 = !DILocation(line: 523, column: 7, scope: !21578)
!21612 = !DILocalVariable(name: "uc", scope: !21613, file: !21579, line: 525, type: !468)
!21613 = distinct !DILexicalBlock(scope: !21604, file: !21579, line: 524, column: 5)
!21614 = !DILocation(line: 525, column: 21, scope: !21613)
!21615 = !DILocation(line: 525, column: 27, scope: !21613)
!21616 = !DILocation(line: 525, column: 26, scope: !21613)
!21617 = !DILocation(line: 526, column: 14, scope: !21613)
!21618 = !DILocation(line: 526, column: 8, scope: !21613)
!21619 = !DILocation(line: 526, column: 12, scope: !21613)
!21620 = !DILocation(line: 527, column: 7, scope: !21613)
!21621 = !DILocation(line: 531, column: 10, scope: !21578)
!21622 = !DILocation(line: 531, column: 3, scope: !21578)
!21623 = !DILocation(line: 532, column: 1, scope: !21578)
!21624 = distinct !DISubprogram(name: "acl_access_nontrivial", scope: !21625, file: !21625, line: 47, type: !2522, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2519, retainedNodes: !143)
!21625 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mbarbar/clone/coreutils")
!21626 = !DILocalVariable(name: "acl", arg: 1, scope: !21624, file: !21625, line: 47, type: !2524)
!21627 = !DILocation(line: 47, column: 30, scope: !21624)
!21628 = !DILocalVariable(name: "ace", scope: !21624, file: !21625, line: 56, type: !2528)
!21629 = !DILocation(line: 56, column: 15, scope: !21624)
!21630 = !DILocalVariable(name: "got_one", scope: !21624, file: !21625, line: 57, type: !7)
!21631 = !DILocation(line: 57, column: 7, scope: !21624)
!21632 = !DILocation(line: 59, column: 33, scope: !21633)
!21633 = distinct !DILexicalBlock(scope: !21624, file: !21625, line: 59, column: 3)
!21634 = !DILocation(line: 59, column: 18, scope: !21633)
!21635 = !DILocation(line: 59, column: 16, scope: !21633)
!21636 = !DILocation(line: 59, column: 8, scope: !21633)
!21637 = !DILocation(line: 60, column: 8, scope: !21638)
!21638 = distinct !DILexicalBlock(scope: !21633, file: !21625, line: 59, column: 3)
!21639 = !DILocation(line: 60, column: 16, scope: !21638)
!21640 = !DILocation(line: 59, column: 3, scope: !21633)
!21641 = !DILocalVariable(name: "tag", scope: !21642, file: !21625, line: 63, type: !2531)
!21642 = distinct !DILexicalBlock(scope: !21638, file: !21625, line: 62, column: 5)
!21643 = !DILocation(line: 63, column: 17, scope: !21642)
!21644 = !DILocation(line: 64, column: 29, scope: !21645)
!21645 = distinct !DILexicalBlock(scope: !21642, file: !21625, line: 64, column: 11)
!21646 = !DILocation(line: 64, column: 11, scope: !21645)
!21647 = !DILocation(line: 64, column: 40, scope: !21645)
!21648 = !DILocation(line: 64, column: 11, scope: !21642)
!21649 = !DILocation(line: 65, column: 9, scope: !21645)
!21650 = !DILocation(line: 66, column: 13, scope: !21651)
!21651 = distinct !DILexicalBlock(scope: !21642, file: !21625, line: 66, column: 11)
!21652 = !DILocation(line: 66, column: 17, scope: !21651)
!21653 = !DILocation(line: 66, column: 33, scope: !21651)
!21654 = !DILocation(line: 66, column: 36, scope: !21651)
!21655 = !DILocation(line: 66, column: 40, scope: !21651)
!21656 = !DILocation(line: 66, column: 57, scope: !21651)
!21657 = !DILocation(line: 66, column: 60, scope: !21651)
!21658 = !DILocation(line: 66, column: 64, scope: !21651)
!21659 = !DILocation(line: 66, column: 11, scope: !21642)
!21660 = !DILocation(line: 67, column: 9, scope: !21651)
!21661 = !DILocation(line: 68, column: 5, scope: !21642)
!21662 = !DILocation(line: 61, column: 33, scope: !21638)
!21663 = !DILocation(line: 61, column: 18, scope: !21638)
!21664 = !DILocation(line: 61, column: 16, scope: !21638)
!21665 = !DILocation(line: 59, column: 3, scope: !21638)
!21666 = distinct !{!21666, !21640, !21667}
!21667 = !DILocation(line: 68, column: 5, scope: !21633)
!21668 = !DILocation(line: 69, column: 10, scope: !21624)
!21669 = !DILocation(line: 69, column: 3, scope: !21624)
!21670 = !DILocation(line: 116, column: 1, scope: !21624)
!21671 = distinct !DISubprogram(name: "acl_default_nontrivial", scope: !21625, file: !21625, line: 119, type: !2522, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2519, retainedNodes: !143)
!21672 = !DILocalVariable(name: "acl", arg: 1, scope: !21671, file: !21625, line: 119, type: !2524)
!21673 = !DILocation(line: 119, column: 31, scope: !21671)
!21674 = !DILocation(line: 122, column: 24, scope: !21671)
!21675 = !DILocation(line: 122, column: 11, scope: !21671)
!21676 = !DILocation(line: 122, column: 29, scope: !21671)
!21677 = !DILocation(line: 122, column: 3, scope: !21671)
!21678 = distinct !DISubprogram(name: "free_permission_context", scope: !21625, file: !21625, line: 479, type: !2532, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2519, retainedNodes: !143)
!21679 = !DILocalVariable(name: "ctx", arg: 1, scope: !21678, file: !21625, line: 479, type: !2534)
!21680 = !DILocation(line: 479, column: 53, scope: !21678)
!21681 = !DILocation(line: 483, column: 7, scope: !21682)
!21682 = distinct !DILexicalBlock(scope: !21678, file: !21625, line: 483, column: 7)
!21683 = !DILocation(line: 483, column: 12, scope: !21682)
!21684 = !{!13618, !2999, i64 8}
!21685 = !DILocation(line: 483, column: 7, scope: !21678)
!21686 = !DILocation(line: 484, column: 15, scope: !21682)
!21687 = !DILocation(line: 484, column: 20, scope: !21682)
!21688 = !DILocation(line: 484, column: 5, scope: !21682)
!21689 = !DILocation(line: 486, column: 7, scope: !21690)
!21690 = distinct !DILexicalBlock(scope: !21678, file: !21625, line: 486, column: 7)
!21691 = !DILocation(line: 486, column: 12, scope: !21690)
!21692 = !{!13618, !2999, i64 16}
!21693 = !DILocation(line: 486, column: 7, scope: !21678)
!21694 = !DILocation(line: 487, column: 15, scope: !21690)
!21695 = !DILocation(line: 487, column: 20, scope: !21690)
!21696 = !DILocation(line: 487, column: 5, scope: !21690)
!21697 = !DILocation(line: 507, column: 1, scope: !21678)
!21698 = distinct !DISubprogram(name: "get_permissions", scope: !21699, file: !21699, line: 33, type: !2545, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2542, retainedNodes: !143)
!21699 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!21700 = !DILocalVariable(name: "name", arg: 1, scope: !21698, file: !21699, line: 33, type: !115)
!21701 = !DILocation(line: 33, column: 30, scope: !21698)
!21702 = !DILocalVariable(name: "desc", arg: 2, scope: !21698, file: !21699, line: 33, type: !7)
!21703 = !DILocation(line: 33, column: 40, scope: !21698)
!21704 = !DILocalVariable(name: "mode", arg: 3, scope: !21698, file: !21699, line: 33, type: !160)
!21705 = !DILocation(line: 33, column: 53, scope: !21698)
!21706 = !DILocalVariable(name: "ctx", arg: 4, scope: !21698, file: !21699, line: 34, type: !2547)
!21707 = !DILocation(line: 34, column: 45, scope: !21698)
!21708 = !DILocation(line: 36, column: 11, scope: !21698)
!21709 = !DILocation(line: 36, column: 3, scope: !21698)
!21710 = !DILocation(line: 37, column: 15, scope: !21698)
!21711 = !DILocation(line: 37, column: 3, scope: !21698)
!21712 = !DILocation(line: 37, column: 8, scope: !21698)
!21713 = !DILocation(line: 37, column: 13, scope: !21698)
!21714 = !DILocation(line: 45, column: 26, scope: !21715)
!21715 = distinct !DILexicalBlock(scope: !21698, file: !21699, line: 45, column: 7)
!21716 = !DILocation(line: 45, column: 31, scope: !21715)
!21717 = !DILocation(line: 45, column: 7, scope: !21698)
!21718 = !DILocation(line: 46, column: 28, scope: !21715)
!21719 = !DILocation(line: 46, column: 16, scope: !21715)
!21720 = !DILocation(line: 46, column: 5, scope: !21715)
!21721 = !DILocation(line: 46, column: 10, scope: !21715)
!21722 = !DILocation(line: 46, column: 14, scope: !21715)
!21723 = !DILocation(line: 48, column: 30, scope: !21715)
!21724 = !DILocation(line: 48, column: 16, scope: !21715)
!21725 = !DILocation(line: 48, column: 5, scope: !21715)
!21726 = !DILocation(line: 48, column: 10, scope: !21715)
!21727 = !DILocation(line: 48, column: 14, scope: !21715)
!21728 = !DILocation(line: 49, column: 7, scope: !21729)
!21729 = distinct !DILexicalBlock(scope: !21698, file: !21699, line: 49, column: 7)
!21730 = !DILocation(line: 49, column: 12, scope: !21729)
!21731 = !DILocation(line: 49, column: 16, scope: !21729)
!21732 = !DILocation(line: 49, column: 7, scope: !21698)
!21733 = !DILocation(line: 50, column: 29, scope: !21729)
!21734 = !DILocation(line: 50, column: 12, scope: !21729)
!21735 = !DILocation(line: 50, column: 5, scope: !21729)
!21736 = !DILocation(line: 56, column: 7, scope: !21737)
!21737 = distinct !DILexicalBlock(scope: !21698, file: !21699, line: 56, column: 7)
!21738 = !DILocation(line: 56, column: 7, scope: !21698)
!21739 = !DILocation(line: 58, column: 40, scope: !21740)
!21740 = distinct !DILexicalBlock(scope: !21737, file: !21699, line: 57, column: 5)
!21741 = !DILocation(line: 58, column: 26, scope: !21740)
!21742 = !DILocation(line: 58, column: 7, scope: !21740)
!21743 = !DILocation(line: 58, column: 12, scope: !21740)
!21744 = !DILocation(line: 58, column: 24, scope: !21740)
!21745 = !DILocation(line: 59, column: 11, scope: !21746)
!21746 = distinct !DILexicalBlock(scope: !21740, file: !21699, line: 59, column: 11)
!21747 = !DILocation(line: 59, column: 16, scope: !21746)
!21748 = !DILocation(line: 59, column: 28, scope: !21746)
!21749 = !DILocation(line: 59, column: 11, scope: !21740)
!21750 = !DILocation(line: 60, column: 9, scope: !21746)
!21751 = !DILocation(line: 61, column: 5, scope: !21740)
!21752 = !DILocation(line: 289, column: 3, scope: !21698)
!21753 = !DILocation(line: 291, column: 1, scope: !21698)
!21754 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !21755, file: !21755, line: 760, type: !1589, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2554, retainedNodes: !143)
!21755 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!21756 = !DILocalVariable(name: "name", arg: 1, scope: !21754, file: !21755, line: 760, type: !115)
!21757 = !DILocation(line: 760, column: 30, scope: !21754)
!21758 = !DILocalVariable(name: "desc", arg: 2, scope: !21754, file: !21755, line: 760, type: !7)
!21759 = !DILocation(line: 760, column: 40, scope: !21754)
!21760 = !DILocalVariable(name: "mode", arg: 3, scope: !21754, file: !21755, line: 760, type: !160)
!21761 = !DILocation(line: 760, column: 53, scope: !21754)
!21762 = !DILocation(line: 762, column: 22, scope: !21763)
!21763 = distinct !DILexicalBlock(scope: !21754, file: !21755, line: 762, column: 7)
!21764 = !DILocation(line: 762, column: 27, scope: !21763)
!21765 = !DILocation(line: 762, column: 7, scope: !21754)
!21766 = !DILocation(line: 763, column: 20, scope: !21763)
!21767 = !DILocation(line: 763, column: 26, scope: !21763)
!21768 = !DILocation(line: 763, column: 12, scope: !21763)
!21769 = !DILocation(line: 763, column: 5, scope: !21763)
!21770 = !DILocation(line: 765, column: 19, scope: !21763)
!21771 = !DILocation(line: 765, column: 25, scope: !21763)
!21772 = !DILocation(line: 765, column: 12, scope: !21763)
!21773 = !DILocation(line: 765, column: 5, scope: !21763)
!21774 = !DILocation(line: 766, column: 1, scope: !21754)
!21775 = distinct !DISubprogram(name: "set_permissions", scope: !21755, file: !21755, line: 776, type: !2557, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2554, retainedNodes: !143)
!21776 = !DILocalVariable(name: "ctx", arg: 1, scope: !21775, file: !21755, line: 776, type: !2559)
!21777 = !DILocation(line: 776, column: 45, scope: !21775)
!21778 = !DILocalVariable(name: "name", arg: 2, scope: !21775, file: !21755, line: 776, type: !115)
!21779 = !DILocation(line: 776, column: 62, scope: !21775)
!21780 = !DILocalVariable(name: "desc", arg: 3, scope: !21775, file: !21755, line: 776, type: !7)
!21781 = !DILocation(line: 776, column: 72, scope: !21775)
!21782 = !DILocalVariable(name: "acls_set", scope: !21775, file: !21755, line: 778, type: !120)
!21783 = !DILocation(line: 778, column: 8, scope: !21775)
!21784 = !DILocalVariable(name: "early_chmod", scope: !21775, file: !21755, line: 779, type: !120)
!21785 = !DILocation(line: 779, column: 8, scope: !21775)
!21786 = !DILocalVariable(name: "must_chmod", scope: !21775, file: !21755, line: 780, type: !120)
!21787 = !DILocation(line: 780, column: 8, scope: !21775)
!21788 = !DILocalVariable(name: "ret", scope: !21775, file: !21755, line: 781, type: !7)
!21789 = !DILocation(line: 781, column: 7, scope: !21775)
!21790 = !DILocation(line: 796, column: 40, scope: !21775)
!21791 = !DILocation(line: 796, column: 45, scope: !21775)
!21792 = !DILocation(line: 796, column: 50, scope: !21775)
!21793 = !DILocation(line: 796, column: 36, scope: !21775)
!21794 = !DILocation(line: 796, column: 15, scope: !21775)
!21795 = !DILocation(line: 804, column: 7, scope: !21796)
!21796 = distinct !DILexicalBlock(scope: !21775, file: !21755, line: 804, column: 7)
!21797 = !DILocation(line: 804, column: 7, scope: !21775)
!21798 = !DILocation(line: 806, column: 30, scope: !21799)
!21799 = distinct !DILexicalBlock(scope: !21796, file: !21755, line: 805, column: 5)
!21800 = !DILocation(line: 806, column: 36, scope: !21799)
!21801 = !DILocation(line: 806, column: 42, scope: !21799)
!21802 = !DILocation(line: 806, column: 47, scope: !21799)
!21803 = !DILocation(line: 806, column: 13, scope: !21799)
!21804 = !DILocation(line: 806, column: 11, scope: !21799)
!21805 = !DILocation(line: 807, column: 11, scope: !21806)
!21806 = distinct !DILexicalBlock(scope: !21799, file: !21755, line: 807, column: 11)
!21807 = !DILocation(line: 807, column: 15, scope: !21806)
!21808 = !DILocation(line: 807, column: 11, scope: !21799)
!21809 = !DILocation(line: 808, column: 9, scope: !21806)
!21810 = !DILocation(line: 809, column: 5, scope: !21799)
!21811 = !DILocation(line: 812, column: 19, scope: !21775)
!21812 = !DILocation(line: 812, column: 24, scope: !21775)
!21813 = !DILocation(line: 812, column: 30, scope: !21775)
!21814 = !DILocation(line: 812, column: 9, scope: !21775)
!21815 = !DILocation(line: 812, column: 7, scope: !21775)
!21816 = !DILocation(line: 813, column: 9, scope: !21817)
!21817 = distinct !DILexicalBlock(scope: !21775, file: !21755, line: 813, column: 7)
!21818 = !DILocation(line: 813, column: 7, scope: !21775)
!21819 = !DILocalVariable(name: "saved_errno", scope: !21820, file: !21755, line: 815, type: !7)
!21820 = distinct !DILexicalBlock(scope: !21817, file: !21755, line: 814, column: 5)
!21821 = !DILocation(line: 815, column: 11, scope: !21820)
!21822 = !DILocation(line: 815, column: 25, scope: !21820)
!21823 = !DILocation(line: 815, column: 31, scope: !21820)
!21824 = !DILocation(line: 821, column: 23, scope: !21820)
!21825 = !DILocation(line: 821, column: 28, scope: !21820)
!21826 = !DILocation(line: 821, column: 34, scope: !21820)
!21827 = !DILocation(line: 821, column: 13, scope: !21820)
!21828 = !DILocation(line: 821, column: 11, scope: !21820)
!21829 = !DILocation(line: 822, column: 13, scope: !21830)
!21830 = distinct !DILexicalBlock(scope: !21820, file: !21755, line: 822, column: 11)
!21831 = !DILocation(line: 822, column: 11, scope: !21820)
!21832 = !DILocation(line: 823, column: 20, scope: !21830)
!21833 = !DILocation(line: 823, column: 9, scope: !21830)
!21834 = !DILocation(line: 825, column: 11, scope: !21835)
!21835 = distinct !DILexicalBlock(scope: !21820, file: !21755, line: 825, column: 11)
!21836 = !DILocation(line: 825, column: 11, scope: !21820)
!21837 = !DILocation(line: 827, column: 19, scope: !21838)
!21838 = distinct !DILexicalBlock(scope: !21835, file: !21755, line: 826, column: 9)
!21839 = !DILocation(line: 827, column: 11, scope: !21838)
!21840 = !DILocation(line: 827, column: 17, scope: !21838)
!21841 = !DILocation(line: 828, column: 15, scope: !21838)
!21842 = !DILocation(line: 829, column: 9, scope: !21838)
!21843 = !DILocation(line: 830, column: 5, scope: !21820)
!21844 = !DILocation(line: 833, column: 7, scope: !21845)
!21845 = distinct !DILexicalBlock(scope: !21775, file: !21755, line: 833, column: 7)
!21846 = !DILocation(line: 833, column: 18, scope: !21845)
!21847 = !DILocation(line: 833, column: 23, scope: !21845)
!21848 = !DILocation(line: 833, column: 7, scope: !21775)
!21849 = !DILocalVariable(name: "saved_errno", scope: !21850, file: !21755, line: 835, type: !7)
!21850 = distinct !DILexicalBlock(scope: !21845, file: !21755, line: 834, column: 5)
!21851 = !DILocation(line: 835, column: 11, scope: !21850)
!21852 = !DILocation(line: 835, column: 25, scope: !21850)
!21853 = !DILocation(line: 835, column: 31, scope: !21850)
!21854 = !DILocation(line: 837, column: 30, scope: !21850)
!21855 = !DILocation(line: 837, column: 36, scope: !21850)
!21856 = !DILocation(line: 837, column: 42, scope: !21850)
!21857 = !DILocation(line: 837, column: 47, scope: !21850)
!21858 = !DILocation(line: 837, column: 13, scope: !21850)
!21859 = !DILocation(line: 837, column: 11, scope: !21850)
!21860 = !DILocation(line: 839, column: 11, scope: !21861)
!21861 = distinct !DILexicalBlock(scope: !21850, file: !21755, line: 839, column: 11)
!21862 = !DILocation(line: 839, column: 11, scope: !21850)
!21863 = !DILocation(line: 841, column: 19, scope: !21864)
!21864 = distinct !DILexicalBlock(scope: !21861, file: !21755, line: 840, column: 9)
!21865 = !DILocation(line: 841, column: 11, scope: !21864)
!21866 = !DILocation(line: 841, column: 17, scope: !21864)
!21867 = !DILocation(line: 842, column: 15, scope: !21864)
!21868 = !DILocation(line: 843, column: 9, scope: !21864)
!21869 = !DILocation(line: 844, column: 5, scope: !21850)
!21870 = !DILocation(line: 846, column: 10, scope: !21775)
!21871 = !DILocation(line: 846, column: 3, scope: !21775)
!21872 = !DILocation(line: 847, column: 1, scope: !21775)
!21873 = distinct !DISubprogram(name: "set_acls", scope: !21755, file: !21755, line: 485, type: !2566, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2554, retainedNodes: !143)
!21874 = !DILocalVariable(name: "ctx", arg: 1, scope: !21873, file: !21755, line: 485, type: !2559)
!21875 = !DILocation(line: 485, column: 38, scope: !21873)
!21876 = !DILocalVariable(name: "name", arg: 2, scope: !21873, file: !21755, line: 485, type: !115)
!21877 = !DILocation(line: 485, column: 55, scope: !21873)
!21878 = !DILocalVariable(name: "desc", arg: 3, scope: !21873, file: !21755, line: 485, type: !7)
!21879 = !DILocation(line: 485, column: 65, scope: !21873)
!21880 = !DILocalVariable(name: "from_mode", arg: 4, scope: !21873, file: !21755, line: 486, type: !7)
!21881 = !DILocation(line: 486, column: 15, scope: !21873)
!21882 = !DILocalVariable(name: "must_chmod", arg: 5, scope: !21873, file: !21755, line: 486, type: !302)
!21883 = !DILocation(line: 486, column: 32, scope: !21873)
!21884 = !DILocalVariable(name: "acls_set", arg: 6, scope: !21873, file: !21755, line: 486, type: !302)
!21885 = !DILocation(line: 486, column: 50, scope: !21873)
!21886 = !DILocalVariable(name: "ret", scope: !21873, file: !21755, line: 488, type: !7)
!21887 = !DILocation(line: 488, column: 7, scope: !21873)
!21888 = !DILocation(line: 503, column: 9, scope: !21889)
!21889 = distinct !DILexicalBlock(scope: !21873, file: !21755, line: 503, column: 7)
!21890 = !DILocation(line: 503, column: 14, scope: !21889)
!21891 = !{!13618, !3110, i64 24}
!21892 = !DILocation(line: 503, column: 7, scope: !21873)
!21893 = !DILocation(line: 505, column: 11, scope: !21894)
!21894 = distinct !DILexicalBlock(scope: !21895, file: !21755, line: 505, column: 11)
!21895 = distinct !DILexicalBlock(scope: !21889, file: !21755, line: 504, column: 5)
!21896 = !DILocation(line: 505, column: 15, scope: !21894)
!21897 = !DILocation(line: 505, column: 20, scope: !21894)
!21898 = !DILocation(line: 505, column: 23, scope: !21894)
!21899 = !DILocation(line: 505, column: 11, scope: !21895)
!21900 = !DILocation(line: 507, column: 15, scope: !21901)
!21901 = distinct !DILexicalBlock(scope: !21902, file: !21755, line: 507, column: 15)
!21902 = distinct !DILexicalBlock(scope: !21894, file: !21755, line: 506, column: 9)
!21903 = !DILocation(line: 507, column: 20, scope: !21901)
!21904 = !DILocation(line: 507, column: 15, scope: !21902)
!21905 = !DILocation(line: 508, column: 23, scope: !21901)
!21906 = !DILocation(line: 508, column: 28, scope: !21901)
!21907 = !DILocation(line: 508, column: 13, scope: !21901)
!21908 = !DILocation(line: 509, column: 37, scope: !21902)
!21909 = !DILocation(line: 509, column: 42, scope: !21902)
!21910 = !DILocation(line: 509, column: 22, scope: !21902)
!21911 = !DILocation(line: 509, column: 11, scope: !21902)
!21912 = !DILocation(line: 509, column: 16, scope: !21902)
!21913 = !DILocation(line: 509, column: 20, scope: !21902)
!21914 = !DILocation(line: 510, column: 15, scope: !21915)
!21915 = distinct !DILexicalBlock(scope: !21902, file: !21755, line: 510, column: 15)
!21916 = !DILocation(line: 510, column: 20, scope: !21915)
!21917 = !DILocation(line: 510, column: 24, scope: !21915)
!21918 = !DILocation(line: 510, column: 15, scope: !21902)
!21919 = !DILocation(line: 511, column: 17, scope: !21915)
!21920 = !DILocation(line: 511, column: 13, scope: !21915)
!21921 = !DILocation(line: 512, column: 9, scope: !21902)
!21922 = !DILocation(line: 514, column: 11, scope: !21923)
!21923 = distinct !DILexicalBlock(scope: !21895, file: !21755, line: 514, column: 11)
!21924 = !DILocation(line: 514, column: 15, scope: !21923)
!21925 = !DILocation(line: 514, column: 20, scope: !21923)
!21926 = !DILocation(line: 514, column: 23, scope: !21923)
!21927 = !DILocation(line: 514, column: 28, scope: !21923)
!21928 = !DILocation(line: 514, column: 11, scope: !21895)
!21929 = !DILocation(line: 516, column: 34, scope: !21930)
!21930 = distinct !DILexicalBlock(scope: !21931, file: !21755, line: 516, column: 15)
!21931 = distinct !DILexicalBlock(scope: !21923, file: !21755, line: 515, column: 9)
!21932 = !DILocation(line: 516, column: 39, scope: !21930)
!21933 = !DILocation(line: 516, column: 15, scope: !21931)
!21934 = !DILocation(line: 517, column: 31, scope: !21930)
!21935 = !DILocation(line: 517, column: 37, scope: !21930)
!21936 = !DILocation(line: 517, column: 42, scope: !21930)
!21937 = !DILocation(line: 517, column: 19, scope: !21930)
!21938 = !DILocation(line: 517, column: 17, scope: !21930)
!21939 = !DILocation(line: 517, column: 13, scope: !21930)
!21940 = !DILocation(line: 519, column: 33, scope: !21930)
!21941 = !DILocation(line: 519, column: 56, scope: !21930)
!21942 = !DILocation(line: 519, column: 61, scope: !21930)
!21943 = !DILocation(line: 519, column: 19, scope: !21930)
!21944 = !DILocation(line: 519, column: 17, scope: !21930)
!21945 = !DILocation(line: 520, column: 15, scope: !21946)
!21946 = distinct !DILexicalBlock(scope: !21931, file: !21755, line: 520, column: 15)
!21947 = !DILocation(line: 520, column: 19, scope: !21946)
!21948 = !DILocation(line: 520, column: 15, scope: !21931)
!21949 = !DILocation(line: 522, column: 38, scope: !21950)
!21950 = distinct !DILexicalBlock(scope: !21951, file: !21755, line: 522, column: 19)
!21951 = distinct !DILexicalBlock(scope: !21946, file: !21755, line: 521, column: 13)
!21952 = !DILocation(line: 522, column: 21, scope: !21950)
!21953 = !DILocation(line: 522, column: 19, scope: !21951)
!21954 = !DILocation(line: 524, column: 19, scope: !21955)
!21955 = distinct !DILexicalBlock(scope: !21950, file: !21755, line: 523, column: 17)
!21956 = !DILocation(line: 524, column: 24, scope: !21955)
!21957 = !DILocation(line: 524, column: 43, scope: !21955)
!21958 = !DILocation(line: 525, column: 23, scope: !21959)
!21959 = distinct !DILexicalBlock(scope: !21955, file: !21755, line: 525, column: 23)
!21960 = !DILocation(line: 525, column: 33, scope: !21959)
!21961 = !DILocation(line: 525, column: 59, scope: !21959)
!21962 = !DILocation(line: 525, column: 64, scope: !21959)
!21963 = !DILocation(line: 525, column: 36, scope: !21959)
!21964 = !DILocation(line: 525, column: 69, scope: !21959)
!21965 = !DILocation(line: 525, column: 23, scope: !21955)
!21966 = !DILocation(line: 526, column: 25, scope: !21959)
!21967 = !DILocation(line: 526, column: 21, scope: !21959)
!21968 = !DILocation(line: 527, column: 17, scope: !21955)
!21969 = !DILocation(line: 528, column: 13, scope: !21951)
!21970 = !DILocation(line: 531, column: 16, scope: !21971)
!21971 = distinct !DILexicalBlock(scope: !21946, file: !21755, line: 530, column: 13)
!21972 = !DILocation(line: 531, column: 25, scope: !21971)
!21973 = !DILocation(line: 532, column: 19, scope: !21974)
!21974 = distinct !DILexicalBlock(scope: !21971, file: !21755, line: 532, column: 19)
!21975 = !DILocation(line: 532, column: 19, scope: !21971)
!21976 = !DILocation(line: 534, column: 25, scope: !21977)
!21977 = distinct !DILexicalBlock(scope: !21978, file: !21755, line: 534, column: 23)
!21978 = distinct !DILexicalBlock(scope: !21974, file: !21755, line: 533, column: 17)
!21979 = !DILocation(line: 534, column: 35, scope: !21977)
!21980 = !DILocation(line: 534, column: 38, scope: !21977)
!21981 = !DILocation(line: 534, column: 43, scope: !21977)
!21982 = !DILocation(line: 534, column: 55, scope: !21977)
!21983 = !DILocation(line: 535, column: 47, scope: !21977)
!21984 = !DILocation(line: 535, column: 52, scope: !21977)
!21985 = !DILocation(line: 535, column: 23, scope: !21977)
!21986 = !DILocation(line: 534, column: 23, scope: !21978)
!21987 = !DILocation(line: 536, column: 41, scope: !21977)
!21988 = !DILocation(line: 537, column: 41, scope: !21977)
!21989 = !DILocation(line: 537, column: 46, scope: !21977)
!21990 = !DILocation(line: 536, column: 27, scope: !21977)
!21991 = !DILocation(line: 536, column: 25, scope: !21977)
!21992 = !DILocation(line: 536, column: 21, scope: !21977)
!21993 = !DILocation(line: 539, column: 48, scope: !21977)
!21994 = !DILocation(line: 539, column: 27, scope: !21977)
!21995 = !DILocation(line: 539, column: 25, scope: !21977)
!21996 = !DILocation(line: 540, column: 17, scope: !21978)
!21997 = !DILocation(line: 542, column: 9, scope: !21931)
!21998 = !DILocation(line: 543, column: 5, scope: !21895)
!21999 = !DILocation(line: 749, column: 10, scope: !21873)
!22000 = !DILocation(line: 749, column: 3, scope: !21873)
!22001 = distinct !DISubprogram(name: "__argmatch_die", scope: !1306, file: !1306, line: 60, type: !134, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1257, retainedNodes: !143)
!22002 = !DILocation(line: 62, column: 3, scope: !22001)
!22003 = !DILocation(line: 63, column: 1, scope: !22001)
!22004 = distinct !DISubprogram(name: "argmatch", scope: !1306, file: !1306, line: 82, type: !1260, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1257, retainedNodes: !143)
!22005 = !DILocalVariable(name: "arg", arg: 1, scope: !22004, file: !1306, line: 82, type: !115)
!22006 = !DILocation(line: 82, column: 23, scope: !22004)
!22007 = !DILocalVariable(name: "arglist", arg: 2, scope: !22004, file: !1306, line: 82, type: !1262)
!22008 = !DILocation(line: 82, column: 47, scope: !22004)
!22009 = !DILocalVariable(name: "vallist", arg: 3, scope: !22004, file: !1306, line: 83, type: !427)
!22010 = !DILocation(line: 83, column: 23, scope: !22004)
!22011 = !DILocalVariable(name: "valsize", arg: 4, scope: !22004, file: !1306, line: 83, type: !55)
!22012 = !DILocation(line: 83, column: 39, scope: !22004)
!22013 = !DILocalVariable(name: "i", scope: !22004, file: !1306, line: 85, type: !55)
!22014 = !DILocation(line: 85, column: 10, scope: !22004)
!22015 = !DILocalVariable(name: "arglen", scope: !22004, file: !1306, line: 86, type: !55)
!22016 = !DILocation(line: 86, column: 10, scope: !22004)
!22017 = !DILocalVariable(name: "matchind", scope: !22004, file: !1306, line: 87, type: !568)
!22018 = !DILocation(line: 87, column: 13, scope: !22004)
!22019 = !DILocalVariable(name: "ambiguous", scope: !22004, file: !1306, line: 88, type: !120)
!22020 = !DILocation(line: 88, column: 8, scope: !22004)
!22021 = !DILocation(line: 90, column: 20, scope: !22004)
!22022 = !DILocation(line: 90, column: 12, scope: !22004)
!22023 = !DILocation(line: 90, column: 10, scope: !22004)
!22024 = !DILocation(line: 93, column: 10, scope: !22025)
!22025 = distinct !DILexicalBlock(scope: !22004, file: !1306, line: 93, column: 3)
!22026 = !DILocation(line: 93, column: 8, scope: !22025)
!22027 = !DILocation(line: 93, column: 15, scope: !22028)
!22028 = distinct !DILexicalBlock(scope: !22025, file: !1306, line: 93, column: 3)
!22029 = !DILocation(line: 93, column: 23, scope: !22028)
!22030 = !DILocation(line: 93, column: 3, scope: !22025)
!22031 = !DILocation(line: 95, column: 21, scope: !22032)
!22032 = distinct !DILexicalBlock(scope: !22033, file: !1306, line: 95, column: 11)
!22033 = distinct !DILexicalBlock(scope: !22028, file: !1306, line: 94, column: 5)
!22034 = !DILocation(line: 95, column: 29, scope: !22032)
!22035 = !DILocation(line: 95, column: 33, scope: !22032)
!22036 = !DILocation(line: 95, column: 38, scope: !22032)
!22037 = !DILocation(line: 95, column: 12, scope: !22032)
!22038 = !DILocation(line: 95, column: 11, scope: !22033)
!22039 = !DILocation(line: 97, column: 23, scope: !22040)
!22040 = distinct !DILexicalBlock(scope: !22041, file: !1306, line: 97, column: 15)
!22041 = distinct !DILexicalBlock(scope: !22032, file: !1306, line: 96, column: 9)
!22042 = !DILocation(line: 97, column: 31, scope: !22040)
!22043 = !DILocation(line: 97, column: 15, scope: !22040)
!22044 = !DILocation(line: 97, column: 38, scope: !22040)
!22045 = !DILocation(line: 97, column: 35, scope: !22040)
!22046 = !DILocation(line: 97, column: 15, scope: !22041)
!22047 = !DILocation(line: 99, column: 20, scope: !22040)
!22048 = !DILocation(line: 99, column: 13, scope: !22040)
!22049 = !DILocation(line: 100, column: 20, scope: !22050)
!22050 = distinct !DILexicalBlock(scope: !22040, file: !1306, line: 100, column: 20)
!22051 = !DILocation(line: 100, column: 29, scope: !22050)
!22052 = !DILocation(line: 100, column: 20, scope: !22040)
!22053 = !DILocation(line: 102, column: 24, scope: !22050)
!22054 = !DILocation(line: 102, column: 22, scope: !22050)
!22055 = !DILocation(line: 102, column: 13, scope: !22050)
!22056 = !DILocation(line: 106, column: 19, scope: !22057)
!22057 = distinct !DILexicalBlock(scope: !22058, file: !1306, line: 106, column: 19)
!22058 = distinct !DILexicalBlock(scope: !22050, file: !1306, line: 104, column: 13)
!22059 = !DILocation(line: 106, column: 27, scope: !22057)
!22060 = !DILocation(line: 107, column: 19, scope: !22057)
!22061 = !DILocation(line: 107, column: 45, scope: !22057)
!22062 = !DILocation(line: 107, column: 55, scope: !22057)
!22063 = !DILocation(line: 107, column: 65, scope: !22057)
!22064 = !DILocation(line: 107, column: 63, scope: !22057)
!22065 = !DILocation(line: 107, column: 53, scope: !22057)
!22066 = !DILocation(line: 108, column: 45, scope: !22057)
!22067 = !DILocation(line: 108, column: 55, scope: !22057)
!22068 = !DILocation(line: 108, column: 65, scope: !22057)
!22069 = !DILocation(line: 108, column: 63, scope: !22057)
!22070 = !DILocation(line: 108, column: 53, scope: !22057)
!22071 = !DILocation(line: 108, column: 68, scope: !22057)
!22072 = !DILocation(line: 107, column: 22, scope: !22057)
!22073 = !DILocation(line: 106, column: 19, scope: !22058)
!22074 = !DILocation(line: 112, column: 29, scope: !22075)
!22075 = distinct !DILexicalBlock(scope: !22057, file: !1306, line: 109, column: 17)
!22076 = !DILocation(line: 113, column: 17, scope: !22075)
!22077 = !DILocation(line: 115, column: 9, scope: !22041)
!22078 = !DILocation(line: 116, column: 5, scope: !22033)
!22079 = !DILocation(line: 93, column: 28, scope: !22028)
!22080 = !DILocation(line: 93, column: 3, scope: !22028)
!22081 = distinct !{!22081, !22030, !22082}
!22082 = !DILocation(line: 116, column: 5, scope: !22025)
!22083 = !DILocation(line: 117, column: 7, scope: !22084)
!22084 = distinct !DILexicalBlock(scope: !22004, file: !1306, line: 117, column: 7)
!22085 = !DILocation(line: 117, column: 7, scope: !22004)
!22086 = !DILocation(line: 118, column: 5, scope: !22084)
!22087 = !DILocation(line: 120, column: 12, scope: !22084)
!22088 = !DILocation(line: 120, column: 5, scope: !22084)
!22089 = !DILocation(line: 121, column: 1, scope: !22004)
!22090 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1306, file: !1306, line: 129, type: !1263, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1257, retainedNodes: !143)
!22091 = !DILocalVariable(name: "context", arg: 1, scope: !22090, file: !1306, line: 129, type: !115)
!22092 = !DILocation(line: 129, column: 31, scope: !22090)
!22093 = !DILocalVariable(name: "value", arg: 2, scope: !22090, file: !1306, line: 129, type: !115)
!22094 = !DILocation(line: 129, column: 52, scope: !22090)
!22095 = !DILocalVariable(name: "problem", arg: 3, scope: !22090, file: !1306, line: 129, type: !568)
!22096 = !DILocation(line: 129, column: 69, scope: !22090)
!22097 = !DILocalVariable(name: "format", scope: !22090, file: !1306, line: 131, type: !115)
!22098 = !DILocation(line: 131, column: 15, scope: !22090)
!22099 = !DILocation(line: 131, column: 25, scope: !22090)
!22100 = !DILocation(line: 131, column: 33, scope: !22090)
!22101 = !DILocation(line: 132, column: 27, scope: !22090)
!22102 = !DILocation(line: 133, column: 27, scope: !22090)
!22103 = !DILocation(line: 135, column: 16, scope: !22090)
!22104 = !DILocation(line: 135, column: 69, scope: !22090)
!22105 = !DILocation(line: 135, column: 24, scope: !22090)
!22106 = !DILocation(line: 136, column: 22, scope: !22090)
!22107 = !DILocation(line: 136, column: 10, scope: !22090)
!22108 = !DILocation(line: 135, column: 3, scope: !22090)
!22109 = !DILocation(line: 137, column: 1, scope: !22090)
!22110 = distinct !DISubprogram(name: "argmatch_valid", scope: !1306, file: !1306, line: 144, type: !1265, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1257, retainedNodes: !143)
!22111 = !DILocalVariable(name: "arglist", arg: 1, scope: !22110, file: !1306, line: 144, type: !1262)
!22112 = !DILocation(line: 144, column: 36, scope: !22110)
!22113 = !DILocalVariable(name: "vallist", arg: 2, scope: !22110, file: !1306, line: 145, type: !427)
!22114 = !DILocation(line: 145, column: 29, scope: !22110)
!22115 = !DILocalVariable(name: "valsize", arg: 3, scope: !22110, file: !1306, line: 145, type: !55)
!22116 = !DILocation(line: 145, column: 45, scope: !22110)
!22117 = !DILocalVariable(name: "i", scope: !22110, file: !1306, line: 147, type: !55)
!22118 = !DILocation(line: 147, column: 10, scope: !22110)
!22119 = !DILocalVariable(name: "last_val", scope: !22110, file: !1306, line: 148, type: !115)
!22120 = !DILocation(line: 148, column: 15, scope: !22110)
!22121 = !DILocation(line: 152, column: 3, scope: !22110)
!22122 = !DILocation(line: 153, column: 10, scope: !22123)
!22123 = distinct !DILexicalBlock(scope: !22110, file: !1306, line: 153, column: 3)
!22124 = !DILocation(line: 153, column: 8, scope: !22123)
!22125 = !DILocation(line: 153, column: 15, scope: !22126)
!22126 = distinct !DILexicalBlock(scope: !22123, file: !1306, line: 153, column: 3)
!22127 = !DILocation(line: 153, column: 23, scope: !22126)
!22128 = !DILocation(line: 153, column: 3, scope: !22123)
!22129 = !DILocation(line: 154, column: 10, scope: !22130)
!22130 = distinct !DILexicalBlock(scope: !22126, file: !1306, line: 154, column: 9)
!22131 = !DILocation(line: 154, column: 12, scope: !22130)
!22132 = !DILocation(line: 155, column: 9, scope: !22130)
!22133 = !DILocation(line: 155, column: 20, scope: !22130)
!22134 = !DILocation(line: 155, column: 45, scope: !22130)
!22135 = !DILocation(line: 155, column: 55, scope: !22130)
!22136 = !DILocation(line: 155, column: 65, scope: !22130)
!22137 = !DILocation(line: 155, column: 63, scope: !22130)
!22138 = !DILocation(line: 155, column: 53, scope: !22130)
!22139 = !DILocation(line: 155, column: 68, scope: !22130)
!22140 = !DILocation(line: 155, column: 12, scope: !22130)
!22141 = !DILocation(line: 154, column: 9, scope: !22126)
!22142 = !DILocation(line: 157, column: 18, scope: !22143)
!22143 = distinct !DILexicalBlock(scope: !22130, file: !1306, line: 156, column: 7)
!22144 = !DILocation(line: 157, column: 45, scope: !22143)
!22145 = !DILocation(line: 157, column: 53, scope: !22143)
!22146 = !DILocation(line: 157, column: 38, scope: !22143)
!22147 = !DILocation(line: 157, column: 9, scope: !22143)
!22148 = !DILocation(line: 158, column: 35, scope: !22143)
!22149 = !DILocation(line: 158, column: 45, scope: !22143)
!22150 = !DILocation(line: 158, column: 55, scope: !22143)
!22151 = !DILocation(line: 158, column: 53, scope: !22143)
!22152 = !DILocation(line: 158, column: 43, scope: !22143)
!22153 = !DILocation(line: 158, column: 18, scope: !22143)
!22154 = !DILocation(line: 159, column: 7, scope: !22143)
!22155 = !DILocation(line: 162, column: 18, scope: !22156)
!22156 = distinct !DILexicalBlock(scope: !22130, file: !1306, line: 161, column: 7)
!22157 = !DILocation(line: 162, column: 41, scope: !22156)
!22158 = !DILocation(line: 162, column: 49, scope: !22156)
!22159 = !DILocation(line: 162, column: 34, scope: !22156)
!22160 = !DILocation(line: 162, column: 9, scope: !22156)
!22161 = !DILocation(line: 155, column: 75, scope: !22130)
!22162 = !DILocation(line: 153, column: 28, scope: !22126)
!22163 = !DILocation(line: 153, column: 3, scope: !22126)
!22164 = distinct !{!22164, !22128, !22165}
!22165 = !DILocation(line: 163, column: 7, scope: !22123)
!22166 = !DILocation(line: 164, column: 3, scope: !22110)
!22167 = !DILocation(line: 165, column: 1, scope: !22110)
!22168 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1306, file: !1306, line: 174, type: !1301, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1257, retainedNodes: !143)
!22169 = !DILocalVariable(name: "context", arg: 1, scope: !22168, file: !1306, line: 174, type: !115)
!22170 = !DILocation(line: 174, column: 35, scope: !22168)
!22171 = !DILocalVariable(name: "arg", arg: 2, scope: !22168, file: !1306, line: 175, type: !115)
!22172 = !DILocation(line: 175, column: 35, scope: !22168)
!22173 = !DILocalVariable(name: "arglist", arg: 3, scope: !22168, file: !1306, line: 175, type: !1262)
!22174 = !DILocation(line: 175, column: 59, scope: !22168)
!22175 = !DILocalVariable(name: "vallist", arg: 4, scope: !22168, file: !1306, line: 176, type: !427)
!22176 = !DILocation(line: 176, column: 35, scope: !22168)
!22177 = !DILocalVariable(name: "valsize", arg: 5, scope: !22168, file: !1306, line: 176, type: !55)
!22178 = !DILocation(line: 176, column: 51, scope: !22168)
!22179 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !22168, file: !1306, line: 177, type: !646)
!22180 = !DILocation(line: 177, column: 40, scope: !22168)
!22181 = !DILocalVariable(name: "res", scope: !22168, file: !1306, line: 179, type: !568)
!22182 = !DILocation(line: 179, column: 13, scope: !22168)
!22183 = !DILocation(line: 179, column: 29, scope: !22168)
!22184 = !DILocation(line: 179, column: 34, scope: !22168)
!22185 = !DILocation(line: 179, column: 43, scope: !22168)
!22186 = !DILocation(line: 179, column: 52, scope: !22168)
!22187 = !DILocation(line: 179, column: 19, scope: !22168)
!22188 = !DILocation(line: 180, column: 7, scope: !22189)
!22189 = distinct !DILexicalBlock(scope: !22168, file: !1306, line: 180, column: 7)
!22190 = !DILocation(line: 180, column: 11, scope: !22189)
!22191 = !DILocation(line: 180, column: 7, scope: !22168)
!22192 = !DILocation(line: 182, column: 12, scope: !22189)
!22193 = !DILocation(line: 182, column: 5, scope: !22189)
!22194 = !DILocation(line: 185, column: 21, scope: !22168)
!22195 = !DILocation(line: 185, column: 30, scope: !22168)
!22196 = !DILocation(line: 185, column: 35, scope: !22168)
!22197 = !DILocation(line: 185, column: 3, scope: !22168)
!22198 = !DILocation(line: 186, column: 19, scope: !22168)
!22199 = !DILocation(line: 186, column: 28, scope: !22168)
!22200 = !DILocation(line: 186, column: 37, scope: !22168)
!22201 = !DILocation(line: 186, column: 3, scope: !22168)
!22202 = !DILocation(line: 187, column: 5, scope: !22168)
!22203 = !DILocation(line: 187, column: 3, scope: !22168)
!22204 = !DILocation(line: 189, column: 3, scope: !22168)
!22205 = !DILocation(line: 190, column: 1, scope: !22168)
!22206 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1306, file: !1306, line: 195, type: !1303, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1257, retainedNodes: !143)
!22207 = !DILocalVariable(name: "value", arg: 1, scope: !22206, file: !1306, line: 195, type: !427)
!22208 = !DILocation(line: 195, column: 35, scope: !22206)
!22209 = !DILocalVariable(name: "arglist", arg: 2, scope: !22206, file: !1306, line: 196, type: !1262)
!22210 = !DILocation(line: 196, column: 42, scope: !22206)
!22211 = !DILocalVariable(name: "vallist", arg: 3, scope: !22206, file: !1306, line: 197, type: !427)
!22212 = !DILocation(line: 197, column: 35, scope: !22206)
!22213 = !DILocalVariable(name: "valsize", arg: 4, scope: !22206, file: !1306, line: 197, type: !55)
!22214 = !DILocation(line: 197, column: 51, scope: !22206)
!22215 = !DILocalVariable(name: "i", scope: !22206, file: !1306, line: 199, type: !55)
!22216 = !DILocation(line: 199, column: 10, scope: !22206)
!22217 = !DILocation(line: 201, column: 10, scope: !22218)
!22218 = distinct !DILexicalBlock(scope: !22206, file: !1306, line: 201, column: 3)
!22219 = !DILocation(line: 201, column: 8, scope: !22218)
!22220 = !DILocation(line: 201, column: 15, scope: !22221)
!22221 = distinct !DILexicalBlock(scope: !22218, file: !1306, line: 201, column: 3)
!22222 = !DILocation(line: 201, column: 23, scope: !22221)
!22223 = !DILocation(line: 201, column: 3, scope: !22218)
!22224 = !DILocation(line: 202, column: 18, scope: !22225)
!22225 = distinct !DILexicalBlock(scope: !22221, file: !1306, line: 202, column: 9)
!22226 = !DILocation(line: 202, column: 40, scope: !22225)
!22227 = !DILocation(line: 202, column: 50, scope: !22225)
!22228 = !DILocation(line: 202, column: 60, scope: !22225)
!22229 = !DILocation(line: 202, column: 58, scope: !22225)
!22230 = !DILocation(line: 202, column: 48, scope: !22225)
!22231 = !DILocation(line: 202, column: 63, scope: !22225)
!22232 = !DILocation(line: 202, column: 10, scope: !22225)
!22233 = !DILocation(line: 202, column: 9, scope: !22221)
!22234 = !DILocation(line: 203, column: 14, scope: !22225)
!22235 = !DILocation(line: 203, column: 22, scope: !22225)
!22236 = !DILocation(line: 203, column: 7, scope: !22225)
!22237 = !DILocation(line: 202, column: 70, scope: !22225)
!22238 = !DILocation(line: 201, column: 28, scope: !22221)
!22239 = !DILocation(line: 201, column: 3, scope: !22221)
!22240 = distinct !{!22240, !22223, !22241}
!22241 = !DILocation(line: 203, column: 23, scope: !22218)
!22242 = !DILocation(line: 204, column: 3, scope: !22206)
!22243 = !DILocation(line: 205, column: 1, scope: !22206)
!22244 = distinct !DISubprogram(name: "rotl64", scope: !22245, file: !22245, line: 39, type: !2571, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22245 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/clone/coreutils")
!22246 = !DILocalVariable(name: "x", arg: 1, scope: !22244, file: !22245, line: 39, type: !1556)
!22247 = !DILocation(line: 39, column: 18, scope: !22244)
!22248 = !DILocalVariable(name: "n", arg: 2, scope: !22244, file: !22245, line: 39, type: !7)
!22249 = !DILocation(line: 39, column: 25, scope: !22244)
!22250 = !DILocation(line: 41, column: 12, scope: !22244)
!22251 = !DILocation(line: 41, column: 17, scope: !22244)
!22252 = !DILocation(line: 41, column: 14, scope: !22244)
!22253 = !DILocation(line: 41, column: 23, scope: !22244)
!22254 = !DILocation(line: 41, column: 34, scope: !22244)
!22255 = !DILocation(line: 41, column: 32, scope: !22244)
!22256 = !DILocation(line: 41, column: 25, scope: !22244)
!22257 = !DILocation(line: 41, column: 20, scope: !22244)
!22258 = !DILocation(line: 41, column: 3, scope: !22244)
!22259 = distinct !DISubprogram(name: "rotr64", scope: !22245, file: !22245, line: 48, type: !2571, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22260 = !DILocalVariable(name: "x", arg: 1, scope: !22259, file: !22245, line: 48, type: !1556)
!22261 = !DILocation(line: 48, column: 18, scope: !22259)
!22262 = !DILocalVariable(name: "n", arg: 2, scope: !22259, file: !22245, line: 48, type: !7)
!22263 = !DILocation(line: 48, column: 25, scope: !22259)
!22264 = !DILocation(line: 50, column: 12, scope: !22259)
!22265 = !DILocation(line: 50, column: 17, scope: !22259)
!22266 = !DILocation(line: 50, column: 14, scope: !22259)
!22267 = !DILocation(line: 50, column: 23, scope: !22259)
!22268 = !DILocation(line: 50, column: 34, scope: !22259)
!22269 = !DILocation(line: 50, column: 32, scope: !22259)
!22270 = !DILocation(line: 50, column: 25, scope: !22259)
!22271 = !DILocation(line: 50, column: 20, scope: !22259)
!22272 = !DILocation(line: 50, column: 3, scope: !22259)
!22273 = distinct !DISubprogram(name: "rotl32", scope: !22245, file: !22245, line: 58, type: !2573, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22274 = !DILocalVariable(name: "x", arg: 1, scope: !22273, file: !22245, line: 58, type: !1561)
!22275 = !DILocation(line: 58, column: 18, scope: !22273)
!22276 = !DILocalVariable(name: "n", arg: 2, scope: !22273, file: !22245, line: 58, type: !7)
!22277 = !DILocation(line: 58, column: 25, scope: !22273)
!22278 = !DILocation(line: 60, column: 12, scope: !22273)
!22279 = !DILocation(line: 60, column: 17, scope: !22273)
!22280 = !DILocation(line: 60, column: 14, scope: !22273)
!22281 = !DILocation(line: 60, column: 23, scope: !22273)
!22282 = !DILocation(line: 60, column: 34, scope: !22273)
!22283 = !DILocation(line: 60, column: 32, scope: !22273)
!22284 = !DILocation(line: 60, column: 25, scope: !22273)
!22285 = !DILocation(line: 60, column: 20, scope: !22273)
!22286 = !DILocation(line: 60, column: 3, scope: !22273)
!22287 = distinct !DISubprogram(name: "rotr32", scope: !22245, file: !22245, line: 67, type: !2573, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22288 = !DILocalVariable(name: "x", arg: 1, scope: !22287, file: !22245, line: 67, type: !1561)
!22289 = !DILocation(line: 67, column: 18, scope: !22287)
!22290 = !DILocalVariable(name: "n", arg: 2, scope: !22287, file: !22245, line: 67, type: !7)
!22291 = !DILocation(line: 67, column: 25, scope: !22287)
!22292 = !DILocation(line: 69, column: 12, scope: !22287)
!22293 = !DILocation(line: 69, column: 17, scope: !22287)
!22294 = !DILocation(line: 69, column: 14, scope: !22287)
!22295 = !DILocation(line: 69, column: 23, scope: !22287)
!22296 = !DILocation(line: 69, column: 34, scope: !22287)
!22297 = !DILocation(line: 69, column: 32, scope: !22287)
!22298 = !DILocation(line: 69, column: 25, scope: !22287)
!22299 = !DILocation(line: 69, column: 20, scope: !22287)
!22300 = !DILocation(line: 69, column: 3, scope: !22287)
!22301 = distinct !DISubprogram(name: "rotl_sz", scope: !22245, file: !22245, line: 76, type: !2575, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22302 = !DILocalVariable(name: "x", arg: 1, scope: !22301, file: !22245, line: 76, type: !55)
!22303 = !DILocation(line: 76, column: 17, scope: !22301)
!22304 = !DILocalVariable(name: "n", arg: 2, scope: !22301, file: !22245, line: 76, type: !7)
!22305 = !DILocation(line: 76, column: 24, scope: !22301)
!22306 = !DILocation(line: 78, column: 12, scope: !22301)
!22307 = !DILocation(line: 78, column: 17, scope: !22301)
!22308 = !DILocation(line: 78, column: 14, scope: !22301)
!22309 = !DILocation(line: 78, column: 23, scope: !22301)
!22310 = !DILocation(line: 78, column: 53, scope: !22301)
!22311 = !DILocation(line: 78, column: 51, scope: !22301)
!22312 = !DILocation(line: 78, column: 25, scope: !22301)
!22313 = !DILocation(line: 78, column: 20, scope: !22301)
!22314 = !DILocation(line: 78, column: 3, scope: !22301)
!22315 = distinct !DISubprogram(name: "rotr_sz", scope: !22245, file: !22245, line: 85, type: !2575, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22316 = !DILocalVariable(name: "x", arg: 1, scope: !22315, file: !22245, line: 85, type: !55)
!22317 = !DILocation(line: 85, column: 17, scope: !22315)
!22318 = !DILocalVariable(name: "n", arg: 2, scope: !22315, file: !22245, line: 85, type: !7)
!22319 = !DILocation(line: 85, column: 24, scope: !22315)
!22320 = !DILocation(line: 87, column: 12, scope: !22315)
!22321 = !DILocation(line: 87, column: 17, scope: !22315)
!22322 = !DILocation(line: 87, column: 14, scope: !22315)
!22323 = !DILocation(line: 87, column: 23, scope: !22315)
!22324 = !DILocation(line: 87, column: 53, scope: !22315)
!22325 = !DILocation(line: 87, column: 51, scope: !22315)
!22326 = !DILocation(line: 87, column: 25, scope: !22315)
!22327 = !DILocation(line: 87, column: 20, scope: !22315)
!22328 = !DILocation(line: 87, column: 3, scope: !22315)
!22329 = distinct !DISubprogram(name: "rotl16", scope: !22245, file: !22245, line: 96, type: !2577, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22330 = !DILocalVariable(name: "x", arg: 1, scope: !22329, file: !22245, line: 96, type: !2579)
!22331 = !DILocation(line: 96, column: 18, scope: !22329)
!22332 = !DILocalVariable(name: "n", arg: 2, scope: !22329, file: !22245, line: 96, type: !7)
!22333 = !DILocation(line: 96, column: 25, scope: !22329)
!22334 = !DILocation(line: 98, column: 27, scope: !22329)
!22335 = !DILocation(line: 98, column: 12, scope: !22329)
!22336 = !DILocation(line: 98, column: 32, scope: !22329)
!22337 = !DILocation(line: 98, column: 29, scope: !22329)
!22338 = !DILocation(line: 98, column: 53, scope: !22329)
!22339 = !DILocation(line: 98, column: 38, scope: !22329)
!22340 = !DILocation(line: 98, column: 64, scope: !22329)
!22341 = !DILocation(line: 98, column: 62, scope: !22329)
!22342 = !DILocation(line: 98, column: 55, scope: !22329)
!22343 = !DILocation(line: 98, column: 35, scope: !22329)
!22344 = !DILocation(line: 99, column: 10, scope: !22329)
!22345 = !DILocation(line: 98, column: 10, scope: !22329)
!22346 = !DILocation(line: 98, column: 3, scope: !22329)
!22347 = distinct !DISubprogram(name: "rotr16", scope: !22245, file: !22245, line: 108, type: !2577, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22348 = !DILocalVariable(name: "x", arg: 1, scope: !22347, file: !22245, line: 108, type: !2579)
!22349 = !DILocation(line: 108, column: 18, scope: !22347)
!22350 = !DILocalVariable(name: "n", arg: 2, scope: !22347, file: !22245, line: 108, type: !7)
!22351 = !DILocation(line: 108, column: 25, scope: !22347)
!22352 = !DILocation(line: 110, column: 27, scope: !22347)
!22353 = !DILocation(line: 110, column: 12, scope: !22347)
!22354 = !DILocation(line: 110, column: 32, scope: !22347)
!22355 = !DILocation(line: 110, column: 29, scope: !22347)
!22356 = !DILocation(line: 110, column: 53, scope: !22347)
!22357 = !DILocation(line: 110, column: 38, scope: !22347)
!22358 = !DILocation(line: 110, column: 64, scope: !22347)
!22359 = !DILocation(line: 110, column: 62, scope: !22347)
!22360 = !DILocation(line: 110, column: 55, scope: !22347)
!22361 = !DILocation(line: 110, column: 35, scope: !22347)
!22362 = !DILocation(line: 111, column: 10, scope: !22347)
!22363 = !DILocation(line: 110, column: 10, scope: !22347)
!22364 = !DILocation(line: 110, column: 3, scope: !22347)
!22365 = distinct !DISubprogram(name: "rotl8", scope: !22245, file: !22245, line: 120, type: !2581, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22366 = !DILocalVariable(name: "x", arg: 1, scope: !22365, file: !22245, line: 120, type: !2583)
!22367 = !DILocation(line: 120, column: 16, scope: !22365)
!22368 = !DILocalVariable(name: "n", arg: 2, scope: !22365, file: !22245, line: 120, type: !7)
!22369 = !DILocation(line: 120, column: 23, scope: !22365)
!22370 = !DILocation(line: 122, column: 27, scope: !22365)
!22371 = !DILocation(line: 122, column: 12, scope: !22365)
!22372 = !DILocation(line: 122, column: 32, scope: !22365)
!22373 = !DILocation(line: 122, column: 29, scope: !22365)
!22374 = !DILocation(line: 122, column: 53, scope: !22365)
!22375 = !DILocation(line: 122, column: 38, scope: !22365)
!22376 = !DILocation(line: 122, column: 63, scope: !22365)
!22377 = !DILocation(line: 122, column: 61, scope: !22365)
!22378 = !DILocation(line: 122, column: 55, scope: !22365)
!22379 = !DILocation(line: 122, column: 35, scope: !22365)
!22380 = !DILocation(line: 122, column: 68, scope: !22365)
!22381 = !DILocation(line: 122, column: 10, scope: !22365)
!22382 = !DILocation(line: 122, column: 3, scope: !22365)
!22383 = distinct !DISubprogram(name: "rotr8", scope: !22245, file: !22245, line: 131, type: !2581, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2568, retainedNodes: !143)
!22384 = !DILocalVariable(name: "x", arg: 1, scope: !22383, file: !22245, line: 131, type: !2583)
!22385 = !DILocation(line: 131, column: 16, scope: !22383)
!22386 = !DILocalVariable(name: "n", arg: 2, scope: !22383, file: !22245, line: 131, type: !7)
!22387 = !DILocation(line: 131, column: 23, scope: !22383)
!22388 = !DILocation(line: 133, column: 27, scope: !22383)
!22389 = !DILocation(line: 133, column: 12, scope: !22383)
!22390 = !DILocation(line: 133, column: 32, scope: !22383)
!22391 = !DILocation(line: 133, column: 29, scope: !22383)
!22392 = !DILocation(line: 133, column: 53, scope: !22383)
!22393 = !DILocation(line: 133, column: 38, scope: !22383)
!22394 = !DILocation(line: 133, column: 63, scope: !22383)
!22395 = !DILocation(line: 133, column: 61, scope: !22383)
!22396 = !DILocation(line: 133, column: 55, scope: !22383)
!22397 = !DILocation(line: 133, column: 35, scope: !22383)
!22398 = !DILocation(line: 133, column: 68, scope: !22383)
!22399 = !DILocation(line: 133, column: 10, scope: !22383)
!22400 = !DILocation(line: 133, column: 3, scope: !22383)
!22401 = distinct !DISubprogram(name: "c_strcasecmp", scope: !22402, file: !22402, line: 27, type: !1879, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2585, retainedNodes: !143)
!22402 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!22403 = !DILocalVariable(name: "s1", arg: 1, scope: !22401, file: !22402, line: 27, type: !115)
!22404 = !DILocation(line: 27, column: 27, scope: !22401)
!22405 = !DILocalVariable(name: "s2", arg: 2, scope: !22401, file: !22402, line: 27, type: !115)
!22406 = !DILocation(line: 27, column: 43, scope: !22401)
!22407 = !DILocalVariable(name: "p1", scope: !22401, file: !22402, line: 29, type: !466)
!22408 = !DILocation(line: 29, column: 33, scope: !22401)
!22409 = !DILocation(line: 29, column: 62, scope: !22401)
!22410 = !DILocalVariable(name: "p2", scope: !22401, file: !22402, line: 30, type: !466)
!22411 = !DILocation(line: 30, column: 33, scope: !22401)
!22412 = !DILocation(line: 30, column: 62, scope: !22401)
!22413 = !DILocalVariable(name: "c1", scope: !22401, file: !22402, line: 31, type: !468)
!22414 = !DILocation(line: 31, column: 17, scope: !22401)
!22415 = !DILocalVariable(name: "c2", scope: !22401, file: !22402, line: 31, type: !468)
!22416 = !DILocation(line: 31, column: 21, scope: !22401)
!22417 = !DILocation(line: 33, column: 7, scope: !22418)
!22418 = distinct !DILexicalBlock(scope: !22401, file: !22402, line: 33, column: 7)
!22419 = !DILocation(line: 33, column: 13, scope: !22418)
!22420 = !DILocation(line: 33, column: 10, scope: !22418)
!22421 = !DILocation(line: 33, column: 7, scope: !22401)
!22422 = !DILocation(line: 34, column: 5, scope: !22418)
!22423 = !DILocation(line: 36, column: 3, scope: !22401)
!22424 = !DILocation(line: 38, column: 24, scope: !22425)
!22425 = distinct !DILexicalBlock(scope: !22401, file: !22402, line: 37, column: 5)
!22426 = !DILocation(line: 38, column: 23, scope: !22425)
!22427 = !DILocation(line: 38, column: 12, scope: !22425)
!22428 = !DILocation(line: 38, column: 10, scope: !22425)
!22429 = !DILocation(line: 39, column: 24, scope: !22425)
!22430 = !DILocation(line: 39, column: 23, scope: !22425)
!22431 = !DILocation(line: 39, column: 12, scope: !22425)
!22432 = !DILocation(line: 39, column: 10, scope: !22425)
!22433 = !DILocation(line: 41, column: 11, scope: !22434)
!22434 = distinct !DILexicalBlock(scope: !22425, file: !22402, line: 41, column: 11)
!22435 = !DILocation(line: 41, column: 14, scope: !22434)
!22436 = !DILocation(line: 41, column: 11, scope: !22425)
!22437 = !DILocation(line: 42, column: 9, scope: !22434)
!22438 = !DILocation(line: 44, column: 7, scope: !22425)
!22439 = !DILocation(line: 45, column: 7, scope: !22425)
!22440 = !DILocation(line: 46, column: 5, scope: !22425)
!22441 = !DILocation(line: 47, column: 10, scope: !22401)
!22442 = !DILocation(line: 47, column: 16, scope: !22401)
!22443 = !DILocation(line: 47, column: 13, scope: !22401)
!22444 = distinct !{!22444, !22423, !22445}
!22445 = !DILocation(line: 47, column: 18, scope: !22401)
!22446 = !DILocation(line: 50, column: 12, scope: !22447)
!22447 = distinct !DILexicalBlock(scope: !22401, file: !22402, line: 49, column: 7)
!22448 = !DILocation(line: 50, column: 17, scope: !22447)
!22449 = !DILocation(line: 50, column: 15, scope: !22447)
!22450 = !DILocation(line: 50, column: 5, scope: !22447)
!22451 = !DILocation(line: 56, column: 1, scope: !22401)
!22452 = distinct !DISubprogram(name: "close_stream", scope: !22453, file: !22453, line: 56, type: !2591, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2588, retainedNodes: !143)
!22453 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/clone/coreutils")
!22454 = !DILocalVariable(name: "stream", arg: 1, scope: !22452, file: !22453, line: 56, type: !2593)
!22455 = !DILocation(line: 56, column: 21, scope: !22452)
!22456 = !DILocalVariable(name: "some_pending", scope: !22452, file: !22453, line: 58, type: !2627)
!22457 = !DILocation(line: 58, column: 14, scope: !22452)
!22458 = !DILocation(line: 58, column: 42, scope: !22452)
!22459 = !DILocation(line: 58, column: 30, scope: !22452)
!22460 = !DILocation(line: 58, column: 50, scope: !22452)
!22461 = !DILocalVariable(name: "prev_fail", scope: !22452, file: !22453, line: 59, type: !2627)
!22462 = !DILocation(line: 59, column: 14, scope: !22452)
!22463 = !DILocation(line: 59, column: 27, scope: !22452)
!22464 = !DILocation(line: 59, column: 43, scope: !22452)
!22465 = !DILocalVariable(name: "fclose_fail", scope: !22452, file: !22453, line: 60, type: !2627)
!22466 = !DILocation(line: 60, column: 14, scope: !22452)
!22467 = !DILocation(line: 60, column: 37, scope: !22452)
!22468 = !DILocation(line: 60, column: 29, scope: !22452)
!22469 = !DILocation(line: 60, column: 45, scope: !22452)
!22470 = !DILocation(line: 70, column: 7, scope: !22471)
!22471 = distinct !DILexicalBlock(scope: !22452, file: !22453, line: 70, column: 7)
!22472 = !DILocation(line: 70, column: 17, scope: !22471)
!22473 = !DILocation(line: 70, column: 21, scope: !22471)
!22474 = !DILocation(line: 70, column: 33, scope: !22471)
!22475 = !DILocation(line: 70, column: 37, scope: !22471)
!22476 = !DILocation(line: 70, column: 50, scope: !22471)
!22477 = !DILocation(line: 70, column: 53, scope: !22471)
!22478 = !DILocation(line: 70, column: 59, scope: !22471)
!22479 = !DILocation(line: 70, column: 7, scope: !22452)
!22480 = !DILocation(line: 72, column: 13, scope: !22481)
!22481 = distinct !DILexicalBlock(scope: !22482, file: !22453, line: 72, column: 11)
!22482 = distinct !DILexicalBlock(scope: !22471, file: !22453, line: 71, column: 5)
!22483 = !DILocation(line: 72, column: 11, scope: !22482)
!22484 = !DILocation(line: 73, column: 9, scope: !22481)
!22485 = !DILocation(line: 73, column: 15, scope: !22481)
!22486 = !DILocation(line: 74, column: 7, scope: !22482)
!22487 = !DILocation(line: 77, column: 3, scope: !22452)
!22488 = !DILocation(line: 78, column: 1, scope: !22452)
!22489 = distinct !DISubprogram(name: "cycle_check_init", scope: !22490, file: !22490, line: 43, type: !2631, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2628, retainedNodes: !143)
!22490 = !DIFile(filename: "lib/cycle-check.c", directory: "/home/mbarbar/clone/coreutils")
!22491 = !DILocalVariable(name: "state", arg: 1, scope: !22489, file: !22490, line: 43, type: !2633)
!22492 = !DILocation(line: 43, column: 45, scope: !22489)
!22493 = !DILocation(line: 45, column: 3, scope: !22489)
!22494 = !DILocation(line: 45, column: 10, scope: !22489)
!22495 = !DILocation(line: 45, column: 24, scope: !22489)
!22496 = !DILocation(line: 46, column: 3, scope: !22489)
!22497 = !DILocation(line: 46, column: 10, scope: !22489)
!22498 = !DILocation(line: 46, column: 16, scope: !22489)
!22499 = !{!20142, !2986, i64 24}
!22500 = !DILocation(line: 47, column: 1, scope: !22489)
!22501 = distinct !DISubprogram(name: "cycle_check", scope: !22490, file: !22490, line: 58, type: !2643, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2628, retainedNodes: !143)
!22502 = !DILocalVariable(name: "state", arg: 1, scope: !22501, file: !22490, line: 58, type: !2633)
!22503 = !DILocation(line: 58, column: 40, scope: !22501)
!22504 = !DILocalVariable(name: "sb", arg: 2, scope: !22501, file: !22490, line: 58, type: !2645)
!22505 = !DILocation(line: 58, column: 66, scope: !22501)
!22506 = !DILocation(line: 60, column: 3, scope: !22507)
!22507 = distinct !DILexicalBlock(scope: !22508, file: !22490, line: 60, column: 3)
!22508 = distinct !DILexicalBlock(scope: !22501, file: !22490, line: 60, column: 3)
!22509 = !DILocation(line: 60, column: 3, scope: !22508)
!22510 = !DILocation(line: 65, column: 7, scope: !22511)
!22511 = distinct !DILexicalBlock(scope: !22501, file: !22490, line: 65, column: 7)
!22512 = !DILocation(line: 65, column: 14, scope: !22511)
!22513 = !DILocation(line: 65, column: 28, scope: !22511)
!22514 = !DILocation(line: 65, column: 31, scope: !22511)
!22515 = !DILocation(line: 65, column: 7, scope: !22501)
!22516 = !DILocation(line: 66, column: 5, scope: !22511)
!22517 = !DILocation(line: 70, column: 35, scope: !22518)
!22518 = distinct !DILexicalBlock(scope: !22501, file: !22490, line: 70, column: 7)
!22519 = !DILocation(line: 70, column: 42, scope: !22518)
!22520 = !DILocation(line: 70, column: 32, scope: !22518)
!22521 = !DILocation(line: 70, column: 7, scope: !22518)
!22522 = !DILocation(line: 70, column: 7, scope: !22501)
!22523 = !DILocation(line: 77, column: 11, scope: !22524)
!22524 = distinct !DILexicalBlock(scope: !22525, file: !22490, line: 77, column: 11)
!22525 = distinct !DILexicalBlock(scope: !22518, file: !22490, line: 71, column: 5)
!22526 = !DILocation(line: 77, column: 18, scope: !22524)
!22527 = !DILocation(line: 77, column: 32, scope: !22524)
!22528 = !DILocation(line: 77, column: 11, scope: !22525)
!22529 = !DILocation(line: 78, column: 9, scope: !22524)
!22530 = !DILocation(line: 80, column: 31, scope: !22525)
!22531 = !DILocation(line: 80, column: 35, scope: !22525)
!22532 = !DILocation(line: 80, column: 7, scope: !22525)
!22533 = !DILocation(line: 80, column: 14, scope: !22525)
!22534 = !DILocation(line: 80, column: 22, scope: !22525)
!22535 = !DILocation(line: 80, column: 29, scope: !22525)
!22536 = !DILocation(line: 81, column: 31, scope: !22525)
!22537 = !DILocation(line: 81, column: 35, scope: !22525)
!22538 = !DILocation(line: 81, column: 7, scope: !22525)
!22539 = !DILocation(line: 81, column: 14, scope: !22525)
!22540 = !DILocation(line: 81, column: 22, scope: !22525)
!22541 = !DILocation(line: 81, column: 29, scope: !22525)
!22542 = !DILocation(line: 82, column: 5, scope: !22525)
!22543 = !DILocation(line: 84, column: 3, scope: !22501)
!22544 = !DILocation(line: 85, column: 1, scope: !22501)
!22545 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !22490, file: !22490, line: 37, type: !2668, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2628, retainedNodes: !143)
!22546 = !DILocalVariable(name: "i", arg: 1, scope: !22545, file: !22490, line: 37, type: !458)
!22547 = !DILocation(line: 37, column: 36, scope: !22545)
!22548 = !DILocation(line: 39, column: 11, scope: !22545)
!22549 = !DILocation(line: 39, column: 16, scope: !22545)
!22550 = !DILocation(line: 39, column: 18, scope: !22545)
!22551 = !DILocation(line: 39, column: 13, scope: !22545)
!22552 = !DILocation(line: 39, column: 24, scope: !22545)
!22553 = !DILocation(line: 39, column: 3, scope: !22545)
!22554 = distinct !DISubprogram(name: "opendir_safer", scope: !22555, file: !22555, line: 31, type: !2673, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2670, retainedNodes: !143)
!22555 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mbarbar/clone/coreutils")
!22556 = !DILocalVariable(name: "name", arg: 1, scope: !22554, file: !22555, line: 31, type: !115)
!22557 = !DILocation(line: 31, column: 28, scope: !22554)
!22558 = !DILocalVariable(name: "dp", scope: !22554, file: !22555, line: 33, type: !609)
!22559 = !DILocation(line: 33, column: 8, scope: !22554)
!22560 = !DILocation(line: 33, column: 22, scope: !22554)
!22561 = !DILocation(line: 33, column: 13, scope: !22554)
!22562 = !DILocation(line: 35, column: 7, scope: !22563)
!22563 = distinct !DILexicalBlock(scope: !22554, file: !22555, line: 35, column: 7)
!22564 = !DILocation(line: 35, column: 7, scope: !22554)
!22565 = !DILocalVariable(name: "fd", scope: !22566, file: !22555, line: 37, type: !7)
!22566 = distinct !DILexicalBlock(scope: !22563, file: !22555, line: 36, column: 5)
!22567 = !DILocation(line: 37, column: 11, scope: !22566)
!22568 = !DILocation(line: 37, column: 23, scope: !22566)
!22569 = !DILocation(line: 37, column: 16, scope: !22566)
!22570 = !DILocation(line: 39, column: 16, scope: !22571)
!22571 = distinct !DILexicalBlock(scope: !22566, file: !22555, line: 39, column: 11)
!22572 = !DILocation(line: 39, column: 13, scope: !22571)
!22573 = !DILocation(line: 39, column: 19, scope: !22571)
!22574 = !DILocation(line: 39, column: 22, scope: !22571)
!22575 = !DILocation(line: 39, column: 25, scope: !22571)
!22576 = !DILocation(line: 39, column: 11, scope: !22566)
!22577 = !DILocalVariable(name: "newdp", scope: !22578, file: !22555, line: 49, type: !609)
!22578 = distinct !DILexicalBlock(scope: !22571, file: !22555, line: 40, column: 9)
!22579 = !DILocation(line: 49, column: 16, scope: !22578)
!22580 = !DILocalVariable(name: "e", scope: !22578, file: !22555, line: 50, type: !7)
!22581 = !DILocation(line: 50, column: 15, scope: !22578)
!22582 = !DILocalVariable(name: "f", scope: !22578, file: !22555, line: 52, type: !7)
!22583 = !DILocation(line: 52, column: 15, scope: !22578)
!22584 = !DILocation(line: 52, column: 26, scope: !22578)
!22585 = !DILocation(line: 52, column: 19, scope: !22578)
!22586 = !DILocation(line: 53, column: 15, scope: !22587)
!22587 = distinct !DILexicalBlock(scope: !22578, file: !22555, line: 53, column: 15)
!22588 = !DILocation(line: 53, column: 17, scope: !22587)
!22589 = !DILocation(line: 53, column: 15, scope: !22578)
!22590 = !DILocation(line: 55, column: 19, scope: !22591)
!22591 = distinct !DILexicalBlock(scope: !22587, file: !22555, line: 54, column: 13)
!22592 = !DILocation(line: 55, column: 17, scope: !22591)
!22593 = !DILocation(line: 56, column: 21, scope: !22591)
!22594 = !DILocation(line: 57, column: 13, scope: !22591)
!22595 = !DILocation(line: 60, column: 34, scope: !22596)
!22596 = distinct !DILexicalBlock(scope: !22587, file: !22555, line: 59, column: 13)
!22597 = !DILocation(line: 60, column: 23, scope: !22596)
!22598 = !DILocation(line: 60, column: 21, scope: !22596)
!22599 = !DILocation(line: 61, column: 19, scope: !22596)
!22600 = !DILocation(line: 61, column: 17, scope: !22596)
!22601 = !DILocation(line: 62, column: 21, scope: !22602)
!22602 = distinct !DILexicalBlock(scope: !22596, file: !22555, line: 62, column: 19)
!22603 = !DILocation(line: 62, column: 19, scope: !22596)
!22604 = !DILocation(line: 63, column: 24, scope: !22602)
!22605 = !DILocation(line: 63, column: 17, scope: !22602)
!22606 = !DILocation(line: 69, column: 21, scope: !22578)
!22607 = !DILocation(line: 69, column: 11, scope: !22578)
!22608 = !DILocation(line: 70, column: 19, scope: !22578)
!22609 = !DILocation(line: 70, column: 11, scope: !22578)
!22610 = !DILocation(line: 70, column: 17, scope: !22578)
!22611 = !DILocation(line: 71, column: 16, scope: !22578)
!22612 = !DILocation(line: 71, column: 14, scope: !22578)
!22613 = !DILocation(line: 72, column: 9, scope: !22578)
!22614 = !DILocation(line: 73, column: 5, scope: !22566)
!22615 = !DILocation(line: 75, column: 10, scope: !22554)
!22616 = !DILocation(line: 75, column: 3, scope: !22554)
!22617 = distinct !DISubprogram(name: "gettime", scope: !22618, file: !22618, line: 29, type: !2678, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2675, retainedNodes: !143)
!22618 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/clone/coreutils")
!22619 = !DILocalVariable(name: "ts", arg: 1, scope: !22617, file: !22618, line: 29, type: !2680)
!22620 = !DILocation(line: 29, column: 27, scope: !22617)
!22621 = !DILocation(line: 32, column: 34, scope: !22617)
!22622 = !DILocation(line: 32, column: 3, scope: !22617)
!22623 = !DILocation(line: 39, column: 1, scope: !22617)
!22624 = distinct !DISubprogram(name: "current_timespec", scope: !22618, file: !22618, line: 44, type: !2685, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2675, retainedNodes: !143)
!22625 = !DILocalVariable(name: "ts", scope: !22624, file: !22618, line: 46, type: !2681)
!22626 = !DILocation(line: 46, column: 19, scope: !22624)
!22627 = !DILocation(line: 47, column: 3, scope: !22624)
!22628 = !DILocation(line: 48, column: 3, scope: !22624)
!22629 = distinct !DISubprogram(name: "hard_locale", scope: !22630, file: !22630, line: 38, type: !307, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !143)
!22630 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/clone/coreutils")
!22631 = !DILocalVariable(name: "category", arg: 1, scope: !22629, file: !22630, line: 38, type: !7)
!22632 = !DILocation(line: 38, column: 18, scope: !22629)
!22633 = !DILocalVariable(name: "hard", scope: !22629, file: !22630, line: 40, type: !120)
!22634 = !DILocation(line: 40, column: 8, scope: !22629)
!22635 = !DILocalVariable(name: "p", scope: !22629, file: !22630, line: 41, type: !115)
!22636 = !DILocation(line: 41, column: 15, scope: !22629)
!22637 = !DILocation(line: 41, column: 30, scope: !22629)
!22638 = !DILocation(line: 41, column: 19, scope: !22629)
!22639 = !DILocation(line: 43, column: 7, scope: !22640)
!22640 = distinct !DILexicalBlock(scope: !22629, file: !22630, line: 43, column: 7)
!22641 = !DILocation(line: 43, column: 7, scope: !22629)
!22642 = !DILocation(line: 47, column: 23, scope: !22643)
!22643 = distinct !DILexicalBlock(scope: !22644, file: !22630, line: 47, column: 15)
!22644 = distinct !DILexicalBlock(scope: !22645, file: !22630, line: 46, column: 9)
!22645 = distinct !DILexicalBlock(scope: !22646, file: !22630, line: 45, column: 11)
!22646 = distinct !DILexicalBlock(scope: !22640, file: !22630, line: 44, column: 5)
!22647 = !DILocation(line: 47, column: 15, scope: !22643)
!22648 = !DILocation(line: 47, column: 31, scope: !22643)
!22649 = !DILocation(line: 47, column: 36, scope: !22643)
!22650 = !DILocation(line: 47, column: 47, scope: !22643)
!22651 = !DILocation(line: 47, column: 39, scope: !22643)
!22652 = !DILocation(line: 47, column: 59, scope: !22643)
!22653 = !DILocation(line: 47, column: 15, scope: !22644)
!22654 = !DILocation(line: 48, column: 18, scope: !22643)
!22655 = !DILocation(line: 48, column: 13, scope: !22643)
!22656 = !DILocation(line: 69, column: 5, scope: !22646)
!22657 = !DILocation(line: 71, column: 10, scope: !22629)
!22658 = !DILocation(line: 71, column: 3, scope: !22629)
!22659 = distinct !DISubprogram(name: "hash_pjw", scope: !22660, file: !22660, line: 31, type: !549, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !143)
!22660 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/clone/coreutils")
!22661 = !DILocalVariable(name: "x", arg: 1, scope: !22659, file: !22660, line: 31, type: !427)
!22662 = !DILocation(line: 31, column: 23, scope: !22659)
!22663 = !DILocalVariable(name: "tablesize", arg: 2, scope: !22659, file: !22660, line: 31, type: !55)
!22664 = !DILocation(line: 31, column: 33, scope: !22659)
!22665 = !DILocalVariable(name: "s", scope: !22659, file: !22660, line: 33, type: !115)
!22666 = !DILocation(line: 33, column: 15, scope: !22659)
!22667 = !DILocalVariable(name: "h", scope: !22659, file: !22660, line: 34, type: !55)
!22668 = !DILocation(line: 34, column: 10, scope: !22659)
!22669 = !DILocation(line: 36, column: 12, scope: !22670)
!22670 = distinct !DILexicalBlock(scope: !22659, file: !22660, line: 36, column: 3)
!22671 = !DILocation(line: 36, column: 10, scope: !22670)
!22672 = !DILocation(line: 36, column: 8, scope: !22670)
!22673 = !DILocation(line: 36, column: 16, scope: !22674)
!22674 = distinct !DILexicalBlock(scope: !22670, file: !22660, line: 36, column: 3)
!22675 = !DILocation(line: 36, column: 15, scope: !22674)
!22676 = !DILocation(line: 36, column: 3, scope: !22670)
!22677 = !DILocation(line: 37, column: 10, scope: !22674)
!22678 = !DILocation(line: 37, column: 9, scope: !22674)
!22679 = !DILocation(line: 37, column: 16, scope: !22674)
!22680 = !DILocation(line: 37, column: 18, scope: !22674)
!22681 = !DILocation(line: 37, column: 27, scope: !22674)
!22682 = !DILocation(line: 37, column: 29, scope: !22674)
!22683 = !DILocation(line: 37, column: 24, scope: !22674)
!22684 = !DILocation(line: 37, column: 12, scope: !22674)
!22685 = !DILocation(line: 37, column: 7, scope: !22674)
!22686 = !DILocation(line: 37, column: 5, scope: !22674)
!22687 = !DILocation(line: 36, column: 20, scope: !22674)
!22688 = !DILocation(line: 36, column: 3, scope: !22674)
!22689 = distinct !{!22689, !22676, !22690}
!22690 = !DILocation(line: 37, column: 48, scope: !22670)
!22691 = !DILocation(line: 39, column: 10, scope: !22659)
!22692 = !DILocation(line: 39, column: 14, scope: !22659)
!22693 = !DILocation(line: 39, column: 12, scope: !22659)
!22694 = !DILocation(line: 39, column: 3, scope: !22659)
!22695 = distinct !DISubprogram(name: "i_ring_init", scope: !22696, file: !22696, line: 25, type: !2696, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2693, retainedNodes: !143)
!22696 = !DIFile(filename: "lib/i-ring.c", directory: "/home/mbarbar/clone/coreutils")
!22697 = !DILocalVariable(name: "ir", arg: 1, scope: !22695, file: !22696, line: 25, type: !2698)
!22698 = !DILocation(line: 25, column: 22, scope: !22695)
!22699 = !DILocalVariable(name: "default_val", arg: 2, scope: !22695, file: !22696, line: 25, type: !7)
!22700 = !DILocation(line: 25, column: 30, scope: !22695)
!22701 = !DILocalVariable(name: "i", scope: !22695, file: !22696, line: 27, type: !7)
!22702 = !DILocation(line: 27, column: 7, scope: !22695)
!22703 = !DILocation(line: 28, column: 3, scope: !22695)
!22704 = !DILocation(line: 28, column: 7, scope: !22695)
!22705 = !DILocation(line: 28, column: 16, scope: !22695)
!22706 = !{!3828, !3110, i64 28}
!22707 = !DILocation(line: 29, column: 3, scope: !22695)
!22708 = !DILocation(line: 29, column: 7, scope: !22695)
!22709 = !DILocation(line: 29, column: 16, scope: !22695)
!22710 = !{!3828, !2986, i64 20}
!22711 = !DILocation(line: 30, column: 3, scope: !22695)
!22712 = !DILocation(line: 30, column: 7, scope: !22695)
!22713 = !DILocation(line: 30, column: 15, scope: !22695)
!22714 = !{!3828, !2986, i64 24}
!22715 = !DILocation(line: 31, column: 10, scope: !22716)
!22716 = distinct !DILexicalBlock(scope: !22695, file: !22696, line: 31, column: 3)
!22717 = !DILocation(line: 31, column: 8, scope: !22716)
!22718 = !DILocation(line: 31, column: 15, scope: !22719)
!22719 = distinct !DILexicalBlock(scope: !22716, file: !22696, line: 31, column: 3)
!22720 = !DILocation(line: 31, column: 17, scope: !22719)
!22721 = !DILocation(line: 31, column: 3, scope: !22716)
!22722 = !DILocation(line: 32, column: 22, scope: !22719)
!22723 = !DILocation(line: 32, column: 5, scope: !22719)
!22724 = !DILocation(line: 32, column: 9, scope: !22719)
!22725 = !DILocation(line: 32, column: 17, scope: !22719)
!22726 = !DILocation(line: 32, column: 20, scope: !22719)
!22727 = !DILocation(line: 31, column: 33, scope: !22719)
!22728 = !DILocation(line: 31, column: 3, scope: !22719)
!22729 = distinct !{!22729, !22721, !22730}
!22730 = !DILocation(line: 32, column: 22, scope: !22716)
!22731 = !DILocation(line: 33, column: 24, scope: !22695)
!22732 = !DILocation(line: 33, column: 3, scope: !22695)
!22733 = !DILocation(line: 33, column: 7, scope: !22695)
!22734 = !DILocation(line: 33, column: 22, scope: !22695)
!22735 = !{!3828, !2986, i64 16}
!22736 = !DILocation(line: 34, column: 1, scope: !22695)
!22737 = distinct !DISubprogram(name: "i_ring_empty", scope: !22696, file: !22696, line: 37, type: !2707, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2693, retainedNodes: !143)
!22738 = !DILocalVariable(name: "ir", arg: 1, scope: !22737, file: !22696, line: 37, type: !2709)
!22739 = !DILocation(line: 37, column: 29, scope: !22737)
!22740 = !DILocation(line: 39, column: 10, scope: !22737)
!22741 = !DILocation(line: 39, column: 14, scope: !22737)
!22742 = !DILocation(line: 39, column: 3, scope: !22737)
!22743 = distinct !DISubprogram(name: "i_ring_push", scope: !22696, file: !22696, line: 43, type: !2711, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2693, retainedNodes: !143)
!22744 = !DILocalVariable(name: "ir", arg: 1, scope: !22743, file: !22696, line: 43, type: !2698)
!22745 = !DILocation(line: 43, column: 22, scope: !22743)
!22746 = !DILocalVariable(name: "val", arg: 2, scope: !22743, file: !22696, line: 43, type: !7)
!22747 = !DILocation(line: 43, column: 30, scope: !22743)
!22748 = !DILocalVariable(name: "dest_idx", scope: !22743, file: !22696, line: 45, type: !70)
!22749 = !DILocation(line: 45, column: 16, scope: !22743)
!22750 = !DILocation(line: 45, column: 28, scope: !22743)
!22751 = !DILocation(line: 45, column: 32, scope: !22743)
!22752 = !DILocation(line: 45, column: 44, scope: !22743)
!22753 = !DILocation(line: 45, column: 48, scope: !22743)
!22754 = !DILocation(line: 45, column: 43, scope: !22743)
!22755 = !DILocation(line: 45, column: 41, scope: !22743)
!22756 = !DILocation(line: 45, column: 58, scope: !22743)
!22757 = !DILocalVariable(name: "old_val", scope: !22743, file: !22696, line: 46, type: !7)
!22758 = !DILocation(line: 46, column: 7, scope: !22743)
!22759 = !DILocation(line: 46, column: 17, scope: !22743)
!22760 = !DILocation(line: 46, column: 21, scope: !22743)
!22761 = !DILocation(line: 46, column: 29, scope: !22743)
!22762 = !DILocation(line: 47, column: 27, scope: !22743)
!22763 = !DILocation(line: 47, column: 3, scope: !22743)
!22764 = !DILocation(line: 47, column: 7, scope: !22743)
!22765 = !DILocation(line: 47, column: 15, scope: !22743)
!22766 = !DILocation(line: 47, column: 25, scope: !22743)
!22767 = !DILocation(line: 48, column: 18, scope: !22743)
!22768 = !DILocation(line: 48, column: 3, scope: !22743)
!22769 = !DILocation(line: 48, column: 7, scope: !22743)
!22770 = !DILocation(line: 48, column: 16, scope: !22743)
!22771 = !DILocation(line: 49, column: 7, scope: !22772)
!22772 = distinct !DILexicalBlock(scope: !22743, file: !22696, line: 49, column: 7)
!22773 = !DILocation(line: 49, column: 19, scope: !22772)
!22774 = !DILocation(line: 49, column: 23, scope: !22772)
!22775 = !DILocation(line: 49, column: 16, scope: !22772)
!22776 = !DILocation(line: 49, column: 7, scope: !22743)
!22777 = !DILocation(line: 50, column: 20, scope: !22772)
!22778 = !DILocation(line: 50, column: 24, scope: !22772)
!22779 = !DILocation(line: 50, column: 35, scope: !22772)
!22780 = !DILocation(line: 50, column: 39, scope: !22772)
!22781 = !DILocation(line: 50, column: 34, scope: !22772)
!22782 = !DILocation(line: 50, column: 32, scope: !22772)
!22783 = !DILocation(line: 50, column: 49, scope: !22772)
!22784 = !DILocation(line: 50, column: 5, scope: !22772)
!22785 = !DILocation(line: 50, column: 9, scope: !22772)
!22786 = !DILocation(line: 50, column: 17, scope: !22772)
!22787 = !DILocation(line: 51, column: 3, scope: !22743)
!22788 = !DILocation(line: 51, column: 7, scope: !22743)
!22789 = !DILocation(line: 51, column: 16, scope: !22743)
!22790 = !DILocation(line: 52, column: 10, scope: !22743)
!22791 = !DILocation(line: 52, column: 3, scope: !22743)
!22792 = distinct !DISubprogram(name: "i_ring_pop", scope: !22696, file: !22696, line: 56, type: !2713, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2693, retainedNodes: !143)
!22793 = !DILocalVariable(name: "ir", arg: 1, scope: !22792, file: !22696, line: 56, type: !2698)
!22794 = !DILocation(line: 56, column: 21, scope: !22792)
!22795 = !DILocalVariable(name: "top_val", scope: !22792, file: !22696, line: 58, type: !7)
!22796 = !DILocation(line: 58, column: 7, scope: !22792)
!22797 = !DILocation(line: 59, column: 21, scope: !22798)
!22798 = distinct !DILexicalBlock(scope: !22792, file: !22696, line: 59, column: 7)
!22799 = !DILocation(line: 59, column: 7, scope: !22798)
!22800 = !DILocation(line: 59, column: 7, scope: !22792)
!22801 = !DILocation(line: 60, column: 5, scope: !22798)
!22802 = !DILocation(line: 61, column: 13, scope: !22792)
!22803 = !DILocation(line: 61, column: 17, scope: !22792)
!22804 = !DILocation(line: 61, column: 25, scope: !22792)
!22805 = !DILocation(line: 61, column: 29, scope: !22792)
!22806 = !DILocation(line: 61, column: 11, scope: !22792)
!22807 = !DILocation(line: 62, column: 31, scope: !22792)
!22808 = !DILocation(line: 62, column: 35, scope: !22792)
!22809 = !DILocation(line: 62, column: 3, scope: !22792)
!22810 = !DILocation(line: 62, column: 7, scope: !22792)
!22811 = !DILocation(line: 62, column: 15, scope: !22792)
!22812 = !DILocation(line: 62, column: 19, scope: !22792)
!22813 = !DILocation(line: 62, column: 29, scope: !22792)
!22814 = !DILocation(line: 63, column: 7, scope: !22815)
!22815 = distinct !DILexicalBlock(scope: !22792, file: !22696, line: 63, column: 7)
!22816 = !DILocation(line: 63, column: 11, scope: !22815)
!22817 = !DILocation(line: 63, column: 23, scope: !22815)
!22818 = !DILocation(line: 63, column: 27, scope: !22815)
!22819 = !DILocation(line: 63, column: 20, scope: !22815)
!22820 = !DILocation(line: 63, column: 7, scope: !22792)
!22821 = !DILocation(line: 64, column: 5, scope: !22815)
!22822 = !DILocation(line: 64, column: 9, scope: !22815)
!22823 = !DILocation(line: 64, column: 18, scope: !22815)
!22824 = !DILocation(line: 66, column: 22, scope: !22815)
!22825 = !DILocation(line: 66, column: 26, scope: !22815)
!22826 = !DILocation(line: 66, column: 35, scope: !22815)
!22827 = !DILocation(line: 66, column: 49, scope: !22815)
!22828 = !DILocation(line: 66, column: 54, scope: !22815)
!22829 = !DILocation(line: 66, column: 5, scope: !22815)
!22830 = !DILocation(line: 66, column: 9, scope: !22815)
!22831 = !DILocation(line: 66, column: 18, scope: !22815)
!22832 = !DILocation(line: 67, column: 10, scope: !22792)
!22833 = !DILocation(line: 67, column: 3, scope: !22792)
!22834 = distinct !DISubprogram(name: "locale_charset", scope: !22835, file: !22835, line: 826, type: !2718, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2715, retainedNodes: !143)
!22835 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/clone/coreutils")
!22836 = !DILocalVariable(name: "codeset", scope: !22834, file: !22835, line: 828, type: !115)
!22837 = !DILocation(line: 828, column: 15, scope: !22834)
!22838 = !DILocation(line: 835, column: 13, scope: !22834)
!22839 = !DILocation(line: 835, column: 11, scope: !22834)
!22840 = !DILocation(line: 893, column: 7, scope: !22841)
!22841 = distinct !DILexicalBlock(scope: !22834, file: !22835, line: 893, column: 7)
!22842 = !DILocation(line: 893, column: 15, scope: !22841)
!22843 = !DILocation(line: 893, column: 7, scope: !22834)
!22844 = !DILocation(line: 895, column: 13, scope: !22841)
!22845 = !DILocation(line: 895, column: 5, scope: !22841)
!22846 = !DILocation(line: 1051, column: 13, scope: !22847)
!22847 = distinct !DILexicalBlock(scope: !22848, file: !22835, line: 1051, column: 13)
!22848 = distinct !DILexicalBlock(scope: !22849, file: !22835, line: 1041, column: 7)
!22849 = distinct !DILexicalBlock(scope: !22834, file: !22835, line: 1000, column: 3)
!22850 = !DILocation(line: 1051, column: 24, scope: !22847)
!22851 = !DILocation(line: 1051, column: 13, scope: !22848)
!22852 = !DILocation(line: 1052, column: 19, scope: !22847)
!22853 = !DILocation(line: 1052, column: 11, scope: !22847)
!22854 = !DILocation(line: 1139, column: 10, scope: !22834)
!22855 = !DILocation(line: 1139, column: 3, scope: !22834)
!22856 = distinct !DISubprogram(name: "openat_safer", scope: !22857, file: !22857, line: 29, type: !22858, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2719, retainedNodes: !143)
!22857 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mbarbar/clone/coreutils")
!22858 = !DISubroutineType(types: !22859)
!22859 = !{!7, !7, !115, !7, null}
!22860 = !DILocalVariable(name: "fd", arg: 1, scope: !22856, file: !22857, line: 29, type: !7)
!22861 = !DILocation(line: 29, column: 19, scope: !22856)
!22862 = !DILocalVariable(name: "file", arg: 2, scope: !22856, file: !22857, line: 29, type: !115)
!22863 = !DILocation(line: 29, column: 35, scope: !22856)
!22864 = !DILocalVariable(name: "flags", arg: 3, scope: !22856, file: !22857, line: 29, type: !7)
!22865 = !DILocation(line: 29, column: 45, scope: !22856)
!22866 = !DILocalVariable(name: "mode", scope: !22856, file: !22857, line: 31, type: !160)
!22867 = !DILocation(line: 31, column: 10, scope: !22856)
!22868 = !DILocation(line: 33, column: 7, scope: !22869)
!22869 = distinct !DILexicalBlock(scope: !22856, file: !22857, line: 33, column: 7)
!22870 = !DILocation(line: 33, column: 13, scope: !22869)
!22871 = !DILocation(line: 33, column: 7, scope: !22856)
!22872 = !DILocalVariable(name: "ap", scope: !22873, file: !22857, line: 35, type: !2724)
!22873 = distinct !DILexicalBlock(scope: !22869, file: !22857, line: 34, column: 5)
!22874 = !DILocation(line: 35, column: 15, scope: !22873)
!22875 = !DILocation(line: 36, column: 7, scope: !22873)
!22876 = !DILocation(line: 40, column: 14, scope: !22873)
!22877 = !DILocation(line: 40, column: 12, scope: !22873)
!22878 = !DILocation(line: 42, column: 7, scope: !22873)
!22879 = !DILocation(line: 43, column: 5, scope: !22873)
!22880 = !DILocation(line: 45, column: 28, scope: !22856)
!22881 = !DILocation(line: 45, column: 32, scope: !22856)
!22882 = !DILocation(line: 45, column: 38, scope: !22856)
!22883 = !DILocation(line: 45, column: 45, scope: !22856)
!22884 = !DILocation(line: 45, column: 20, scope: !22856)
!22885 = !DILocation(line: 45, column: 10, scope: !22856)
!22886 = !DILocation(line: 45, column: 3, scope: !22856)
!22887 = distinct !DISubprogram(name: "randint_new", scope: !2740, file: !2740, line: 71, type: !2736, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2733, retainedNodes: !143)
!22888 = !DILocalVariable(name: "source", arg: 1, scope: !22887, file: !2740, line: 71, type: !2743)
!22889 = !DILocation(line: 71, column: 38, scope: !22887)
!22890 = !DILocalVariable(name: "s", scope: !22887, file: !2740, line: 73, type: !2738)
!22891 = !DILocation(line: 73, column: 26, scope: !22887)
!22892 = !DILocation(line: 73, column: 30, scope: !22887)
!22893 = !DILocation(line: 74, column: 15, scope: !22887)
!22894 = !DILocation(line: 74, column: 3, scope: !22887)
!22895 = !DILocation(line: 74, column: 6, scope: !22887)
!22896 = !DILocation(line: 74, column: 13, scope: !22887)
!22897 = !{!22898, !2999, i64 0}
!22898 = !{!"randint_source", !2999, i64 0, !3183, i64 8, !3183, i64 16}
!22899 = !DILocation(line: 75, column: 16, scope: !22887)
!22900 = !DILocation(line: 75, column: 19, scope: !22887)
!22901 = !DILocation(line: 75, column: 27, scope: !22887)
!22902 = !{!22898, !3183, i64 16}
!22903 = !DILocation(line: 75, column: 3, scope: !22887)
!22904 = !DILocation(line: 75, column: 6, scope: !22887)
!22905 = !DILocation(line: 75, column: 14, scope: !22887)
!22906 = !{!22898, !3183, i64 8}
!22907 = !DILocation(line: 76, column: 10, scope: !22887)
!22908 = !DILocation(line: 76, column: 3, scope: !22887)
!22909 = distinct !DISubprogram(name: "randint_all_new", scope: !2740, file: !2740, line: 84, type: !2749, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2733, retainedNodes: !143)
!22910 = !DILocalVariable(name: "name", arg: 1, scope: !22909, file: !2740, line: 84, type: !115)
!22911 = !DILocation(line: 84, column: 30, scope: !22909)
!22912 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22909, file: !2740, line: 84, type: !55)
!22913 = !DILocation(line: 84, column: 43, scope: !22909)
!22914 = !DILocalVariable(name: "source", scope: !22909, file: !2740, line: 86, type: !2743)
!22915 = !DILocation(line: 86, column: 27, scope: !22909)
!22916 = !DILocation(line: 86, column: 50, scope: !22909)
!22917 = !DILocation(line: 86, column: 56, scope: !22909)
!22918 = !DILocation(line: 86, column: 36, scope: !22909)
!22919 = !DILocation(line: 87, column: 11, scope: !22909)
!22920 = !DILocation(line: 87, column: 33, scope: !22909)
!22921 = !DILocation(line: 87, column: 20, scope: !22909)
!22922 = !DILocation(line: 87, column: 3, scope: !22909)
!22923 = distinct !DISubprogram(name: "randint_get_source", scope: !2740, file: !2740, line: 93, type: !2751, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2733, retainedNodes: !143)
!22924 = !DILocalVariable(name: "s", arg: 1, scope: !22923, file: !2740, line: 93, type: !2753)
!22925 = !DILocation(line: 93, column: 50, scope: !22923)
!22926 = !DILocation(line: 95, column: 10, scope: !22923)
!22927 = !DILocation(line: 95, column: 13, scope: !22923)
!22928 = !DILocation(line: 95, column: 3, scope: !22923)
!22929 = distinct !DISubprogram(name: "randint_genmax", scope: !2740, file: !2740, line: 114, type: !2755, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2733, retainedNodes: !143)
!22930 = !DILocalVariable(name: "s", arg: 1, scope: !22929, file: !2740, line: 114, type: !2738)
!22931 = !DILocation(line: 114, column: 40, scope: !22929)
!22932 = !DILocalVariable(name: "genmax", arg: 2, scope: !22929, file: !2740, line: 114, type: !2747)
!22933 = !DILocation(line: 114, column: 51, scope: !22929)
!22934 = !DILocalVariable(name: "source", scope: !22929, file: !2740, line: 116, type: !2743)
!22935 = !DILocation(line: 116, column: 27, scope: !22929)
!22936 = !DILocation(line: 116, column: 36, scope: !22929)
!22937 = !DILocation(line: 116, column: 39, scope: !22929)
!22938 = !DILocalVariable(name: "randnum", scope: !22929, file: !2740, line: 117, type: !2747)
!22939 = !DILocation(line: 117, column: 11, scope: !22929)
!22940 = !DILocation(line: 117, column: 21, scope: !22929)
!22941 = !DILocation(line: 117, column: 24, scope: !22929)
!22942 = !DILocalVariable(name: "randmax", scope: !22929, file: !2740, line: 118, type: !2747)
!22943 = !DILocation(line: 118, column: 11, scope: !22929)
!22944 = !DILocation(line: 118, column: 21, scope: !22929)
!22945 = !DILocation(line: 118, column: 24, scope: !22929)
!22946 = !DILocalVariable(name: "choices", scope: !22929, file: !2740, line: 119, type: !2747)
!22947 = !DILocation(line: 119, column: 11, scope: !22929)
!22948 = !DILocation(line: 119, column: 21, scope: !22929)
!22949 = !DILocation(line: 119, column: 28, scope: !22929)
!22950 = !DILocation(line: 121, column: 3, scope: !22929)
!22951 = !DILocation(line: 123, column: 11, scope: !22952)
!22952 = distinct !DILexicalBlock(scope: !22953, file: !2740, line: 123, column: 11)
!22953 = distinct !DILexicalBlock(scope: !22929, file: !2740, line: 122, column: 5)
!22954 = !DILocation(line: 123, column: 21, scope: !22952)
!22955 = !DILocation(line: 123, column: 19, scope: !22952)
!22956 = !DILocation(line: 123, column: 11, scope: !22953)
!22957 = !DILocalVariable(name: "i", scope: !22958, file: !2740, line: 128, type: !55)
!22958 = distinct !DILexicalBlock(scope: !22952, file: !2740, line: 124, column: 9)
!22959 = !DILocation(line: 128, column: 18, scope: !22958)
!22960 = !DILocalVariable(name: "rmax", scope: !22958, file: !2740, line: 129, type: !2747)
!22961 = !DILocation(line: 129, column: 19, scope: !22958)
!22962 = !DILocation(line: 129, column: 26, scope: !22958)
!22963 = !DILocalVariable(name: "buf", scope: !22958, file: !2740, line: 130, type: !2757)
!22964 = !DILocation(line: 130, column: 25, scope: !22958)
!22965 = !DILocation(line: 132, column: 11, scope: !22958)
!22966 = !DILocation(line: 134, column: 34, scope: !22967)
!22967 = distinct !DILexicalBlock(scope: !22958, file: !2740, line: 133, column: 13)
!22968 = !DILocation(line: 134, column: 22, scope: !22967)
!22969 = !DILocation(line: 134, column: 40, scope: !22967)
!22970 = !DILocation(line: 134, column: 20, scope: !22967)
!22971 = !DILocation(line: 135, column: 16, scope: !22967)
!22972 = !DILocation(line: 136, column: 13, scope: !22967)
!22973 = !DILocation(line: 137, column: 18, scope: !22958)
!22974 = !DILocation(line: 137, column: 25, scope: !22958)
!22975 = !DILocation(line: 137, column: 23, scope: !22958)
!22976 = distinct !{!22976, !22965, !22977}
!22977 = !DILocation(line: 137, column: 31, scope: !22958)
!22978 = !DILocation(line: 139, column: 21, scope: !22958)
!22979 = !DILocation(line: 139, column: 29, scope: !22958)
!22980 = !DILocation(line: 139, column: 34, scope: !22958)
!22981 = !DILocation(line: 139, column: 11, scope: !22958)
!22982 = !DILocation(line: 148, column: 13, scope: !22958)
!22983 = !DILocation(line: 150, column: 11, scope: !22958)
!22984 = !DILocation(line: 152, column: 37, scope: !22985)
!22985 = distinct !DILexicalBlock(scope: !22958, file: !2740, line: 151, column: 13)
!22986 = !DILocation(line: 152, column: 25, scope: !22985)
!22987 = !DILocation(line: 152, column: 52, scope: !22985)
!22988 = !DILocation(line: 152, column: 48, scope: !22985)
!22989 = !DILocation(line: 152, column: 46, scope: !22985)
!22990 = !DILocation(line: 152, column: 23, scope: !22985)
!22991 = !DILocation(line: 153, column: 37, scope: !22985)
!22992 = !DILocation(line: 153, column: 25, scope: !22985)
!22993 = !DILocation(line: 153, column: 46, scope: !22985)
!22994 = !DILocation(line: 153, column: 23, scope: !22985)
!22995 = !DILocation(line: 154, column: 16, scope: !22985)
!22996 = !DILocation(line: 155, column: 13, scope: !22985)
!22997 = !DILocation(line: 156, column: 18, scope: !22958)
!22998 = !DILocation(line: 156, column: 28, scope: !22958)
!22999 = !DILocation(line: 156, column: 26, scope: !22958)
!23000 = distinct !{!23000, !22983, !23001}
!23001 = !DILocation(line: 156, column: 34, scope: !22958)
!23002 = !DILocation(line: 157, column: 9, scope: !22958)
!23003 = !DILocation(line: 159, column: 11, scope: !23004)
!23004 = distinct !DILexicalBlock(scope: !22953, file: !2740, line: 159, column: 11)
!23005 = !DILocation(line: 159, column: 22, scope: !23004)
!23006 = !DILocation(line: 159, column: 19, scope: !23004)
!23007 = !DILocation(line: 159, column: 11, scope: !22953)
!23008 = !DILocation(line: 161, column: 24, scope: !23009)
!23009 = distinct !DILexicalBlock(scope: !23004, file: !2740, line: 160, column: 9)
!23010 = !DILocation(line: 161, column: 27, scope: !23009)
!23011 = !DILocation(line: 161, column: 35, scope: !23009)
!23012 = !DILocation(line: 161, column: 11, scope: !23009)
!23013 = !DILocation(line: 161, column: 14, scope: !23009)
!23014 = !DILocation(line: 161, column: 22, scope: !23009)
!23015 = !DILocation(line: 162, column: 18, scope: !23009)
!23016 = !DILocation(line: 162, column: 11, scope: !23009)
!23017 = !DILocalVariable(name: "excess_choices", scope: !23018, file: !2740, line: 176, type: !2747)
!23018 = distinct !DILexicalBlock(scope: !23004, file: !2740, line: 165, column: 9)
!23019 = !DILocation(line: 176, column: 19, scope: !23018)
!23020 = !DILocation(line: 176, column: 36, scope: !23018)
!23021 = !DILocation(line: 176, column: 46, scope: !23018)
!23022 = !DILocation(line: 176, column: 44, scope: !23018)
!23023 = !DILocalVariable(name: "unusable_choices", scope: !23018, file: !2740, line: 177, type: !2747)
!23024 = !DILocation(line: 177, column: 19, scope: !23018)
!23025 = !DILocation(line: 177, column: 38, scope: !23018)
!23026 = !DILocation(line: 177, column: 55, scope: !23018)
!23027 = !DILocation(line: 177, column: 53, scope: !23018)
!23028 = !DILocalVariable(name: "last_usable_choice", scope: !23018, file: !2740, line: 178, type: !2747)
!23029 = !DILocation(line: 178, column: 19, scope: !23018)
!23030 = !DILocation(line: 178, column: 40, scope: !23018)
!23031 = !DILocation(line: 178, column: 50, scope: !23018)
!23032 = !DILocation(line: 178, column: 48, scope: !23018)
!23033 = !DILocalVariable(name: "reduced_randnum", scope: !23018, file: !2740, line: 179, type: !2747)
!23034 = !DILocation(line: 179, column: 19, scope: !23018)
!23035 = !DILocation(line: 179, column: 37, scope: !23018)
!23036 = !DILocation(line: 179, column: 47, scope: !23018)
!23037 = !DILocation(line: 179, column: 45, scope: !23018)
!23038 = !DILocation(line: 181, column: 15, scope: !23039)
!23039 = distinct !DILexicalBlock(scope: !23018, file: !2740, line: 181, column: 15)
!23040 = !DILocation(line: 181, column: 26, scope: !23039)
!23041 = !DILocation(line: 181, column: 23, scope: !23039)
!23042 = !DILocation(line: 181, column: 15, scope: !23018)
!23043 = !DILocation(line: 183, column: 28, scope: !23044)
!23044 = distinct !DILexicalBlock(scope: !23039, file: !2740, line: 182, column: 13)
!23045 = !DILocation(line: 183, column: 38, scope: !23044)
!23046 = !DILocation(line: 183, column: 36, scope: !23044)
!23047 = !DILocation(line: 183, column: 15, scope: !23044)
!23048 = !DILocation(line: 183, column: 18, scope: !23044)
!23049 = !DILocation(line: 183, column: 26, scope: !23044)
!23050 = !DILocation(line: 184, column: 28, scope: !23044)
!23051 = !DILocation(line: 184, column: 45, scope: !23044)
!23052 = !DILocation(line: 184, column: 43, scope: !23044)
!23053 = !DILocation(line: 184, column: 15, scope: !23044)
!23054 = !DILocation(line: 184, column: 18, scope: !23044)
!23055 = !DILocation(line: 184, column: 26, scope: !23044)
!23056 = !DILocation(line: 185, column: 22, scope: !23044)
!23057 = !DILocation(line: 185, column: 15, scope: !23044)
!23058 = !DILocation(line: 190, column: 21, scope: !23018)
!23059 = !DILocation(line: 190, column: 19, scope: !23018)
!23060 = !DILocation(line: 191, column: 21, scope: !23018)
!23061 = !DILocation(line: 191, column: 38, scope: !23018)
!23062 = !DILocation(line: 191, column: 19, scope: !23018)
!23063 = distinct !{!23063, !22950, !23064}
!23064 = !DILocation(line: 193, column: 5, scope: !22929)
!23065 = !DILocation(line: 194, column: 1, scope: !22929)
!23066 = distinct !DISubprogram(name: "shift_left", scope: !2740, file: !2740, line: 104, type: !2762, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2733, retainedNodes: !143)
!23067 = !DILocalVariable(name: "x", arg: 1, scope: !23066, file: !2740, line: 104, type: !2747)
!23068 = !DILocation(line: 104, column: 43, scope: !23066)
!23069 = !DILocation(line: 106, column: 27, scope: !23066)
!23070 = !DILocation(line: 106, column: 29, scope: !23066)
!23071 = !DILocation(line: 106, column: 3, scope: !23066)
!23072 = distinct !DISubprogram(name: "randint_free", scope: !2740, file: !2740, line: 199, type: !2758, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2733, retainedNodes: !143)
!23073 = !DILocalVariable(name: "s", arg: 1, scope: !23072, file: !2740, line: 199, type: !2738)
!23074 = !DILocation(line: 199, column: 38, scope: !23072)
!23075 = !DILocation(line: 201, column: 19, scope: !23072)
!23076 = !DILocation(line: 201, column: 3, scope: !23072)
!23077 = !DILocation(line: 202, column: 9, scope: !23072)
!23078 = !DILocation(line: 202, column: 3, scope: !23072)
!23079 = !DILocation(line: 203, column: 1, scope: !23072)
!23080 = distinct !DISubprogram(name: "randint_all_free", scope: !2740, file: !2740, line: 209, type: !2760, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2733, retainedNodes: !143)
!23081 = !DILocalVariable(name: "s", arg: 1, scope: !23080, file: !2740, line: 209, type: !2738)
!23082 = !DILocation(line: 209, column: 42, scope: !23080)
!23083 = !DILocalVariable(name: "r", scope: !23080, file: !2740, line: 211, type: !7)
!23084 = !DILocation(line: 211, column: 7, scope: !23080)
!23085 = !DILocation(line: 211, column: 26, scope: !23080)
!23086 = !DILocation(line: 211, column: 29, scope: !23080)
!23087 = !DILocation(line: 211, column: 11, scope: !23080)
!23088 = !DILocalVariable(name: "e", scope: !23080, file: !2740, line: 212, type: !7)
!23089 = !DILocation(line: 212, column: 7, scope: !23080)
!23090 = !DILocation(line: 212, column: 11, scope: !23080)
!23091 = !DILocation(line: 213, column: 17, scope: !23080)
!23092 = !DILocation(line: 213, column: 3, scope: !23080)
!23093 = !DILocation(line: 214, column: 11, scope: !23080)
!23094 = !DILocation(line: 214, column: 3, scope: !23080)
!23095 = !DILocation(line: 214, column: 9, scope: !23080)
!23096 = !DILocation(line: 215, column: 10, scope: !23080)
!23097 = !DILocation(line: 215, column: 3, scope: !23080)
!23098 = distinct !DISubprogram(name: "randread_new", scope: !2771, file: !2771, line: 204, type: !2767, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23099 = !DILocalVariable(name: "name", arg: 1, scope: !23098, file: !2771, line: 204, type: !115)
!23100 = !DILocation(line: 204, column: 27, scope: !23098)
!23101 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !23098, file: !2771, line: 204, type: !55)
!23102 = !DILocation(line: 204, column: 40, scope: !23098)
!23103 = !DILocation(line: 206, column: 7, scope: !23104)
!23104 = distinct !DILexicalBlock(scope: !23098, file: !2771, line: 206, column: 7)
!23105 = !DILocation(line: 206, column: 19, scope: !23104)
!23106 = !DILocation(line: 206, column: 7, scope: !23098)
!23107 = !DILocation(line: 207, column: 12, scope: !23104)
!23108 = !DILocation(line: 207, column: 5, scope: !23104)
!23109 = !DILocalVariable(name: "source", scope: !23110, file: !2771, line: 210, type: !2774)
!23110 = distinct !DILexicalBlock(scope: !23104, file: !2771, line: 209, column: 5)
!23111 = !DILocation(line: 210, column: 13, scope: !23110)
!23112 = !DILocalVariable(name: "s", scope: !23110, file: !2771, line: 211, type: !2769)
!23113 = !DILocation(line: 211, column: 31, scope: !23110)
!23114 = !DILocation(line: 213, column: 11, scope: !23115)
!23115 = distinct !DILexicalBlock(scope: !23110, file: !2771, line: 213, column: 11)
!23116 = !DILocation(line: 213, column: 11, scope: !23110)
!23117 = !DILocation(line: 214, column: 38, scope: !23118)
!23118 = distinct !DILexicalBlock(scope: !23115, file: !2771, line: 214, column: 13)
!23119 = !DILocation(line: 214, column: 25, scope: !23118)
!23120 = !DILocation(line: 214, column: 23, scope: !23118)
!23121 = !DILocation(line: 214, column: 13, scope: !23115)
!23122 = !DILocation(line: 215, column: 11, scope: !23118)
!23123 = !DILocation(line: 214, column: 49, scope: !23118)
!23124 = !DILocation(line: 217, column: 23, scope: !23110)
!23125 = !DILocation(line: 217, column: 31, scope: !23110)
!23126 = !DILocation(line: 217, column: 11, scope: !23110)
!23127 = !DILocation(line: 217, column: 9, scope: !23110)
!23128 = !DILocation(line: 219, column: 11, scope: !23129)
!23129 = distinct !DILexicalBlock(scope: !23110, file: !2771, line: 219, column: 11)
!23130 = !DILocation(line: 219, column: 11, scope: !23110)
!23131 = !DILocation(line: 220, column: 18, scope: !23129)
!23132 = !DILocation(line: 220, column: 26, scope: !23129)
!23133 = !DILocation(line: 220, column: 29, scope: !23129)
!23134 = !DILocation(line: 220, column: 33, scope: !23129)
!23135 = !DILocation(line: 220, column: 44, scope: !23129)
!23136 = !DILocation(line: 220, column: 9, scope: !23129)
!23137 = !DILocation(line: 223, column: 11, scope: !23138)
!23138 = distinct !DILexicalBlock(scope: !23129, file: !2771, line: 222, column: 9)
!23139 = !DILocation(line: 223, column: 14, scope: !23138)
!23140 = !DILocation(line: 223, column: 18, scope: !23138)
!23141 = !DILocation(line: 223, column: 24, scope: !23138)
!23142 = !DILocation(line: 223, column: 33, scope: !23138)
!23143 = !DILocation(line: 224, column: 22, scope: !23138)
!23144 = !DILocation(line: 224, column: 25, scope: !23138)
!23145 = !DILocation(line: 224, column: 29, scope: !23138)
!23146 = !DILocation(line: 224, column: 35, scope: !23138)
!23147 = !DILocation(line: 224, column: 41, scope: !23138)
!23148 = !DILocation(line: 225, column: 22, scope: !23138)
!23149 = !DILocation(line: 224, column: 11, scope: !23138)
!23150 = !DILocation(line: 226, column: 24, scope: !23138)
!23151 = !DILocation(line: 226, column: 27, scope: !23138)
!23152 = !DILocation(line: 226, column: 31, scope: !23138)
!23153 = !DILocation(line: 226, column: 37, scope: !23138)
!23154 = !DILocation(line: 226, column: 11, scope: !23138)
!23155 = !DILocation(line: 229, column: 14, scope: !23110)
!23156 = !DILocation(line: 229, column: 7, scope: !23110)
!23157 = !DILocation(line: 231, column: 1, scope: !23098)
!23158 = distinct !DISubprogram(name: "simple_new", scope: !2771, file: !2771, line: 137, type: !2852, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23159 = !DILocalVariable(name: "source", arg: 1, scope: !23158, file: !2771, line: 137, type: !2774)
!23160 = !DILocation(line: 137, column: 19, scope: !23158)
!23161 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !23158, file: !2771, line: 137, type: !427)
!23162 = !DILocation(line: 137, column: 39, scope: !23158)
!23163 = !DILocalVariable(name: "s", scope: !23158, file: !2771, line: 139, type: !2769)
!23164 = !DILocation(line: 139, column: 27, scope: !23158)
!23165 = !DILocation(line: 139, column: 31, scope: !23158)
!23166 = !DILocation(line: 140, column: 15, scope: !23158)
!23167 = !DILocation(line: 140, column: 3, scope: !23158)
!23168 = !DILocation(line: 140, column: 6, scope: !23158)
!23169 = !DILocation(line: 140, column: 13, scope: !23158)
!23170 = !{!23171, !2999, i64 0}
!23171 = !{!"randread_source", !2999, i64 0, !2999, i64 8, !2999, i64 16, !2987, i64 24}
!23172 = !DILocation(line: 141, column: 3, scope: !23158)
!23173 = !DILocation(line: 141, column: 6, scope: !23158)
!23174 = !DILocation(line: 141, column: 14, scope: !23158)
!23175 = !{!23171, !2999, i64 8}
!23176 = !DILocation(line: 142, column: 20, scope: !23158)
!23177 = !DILocation(line: 142, column: 3, scope: !23158)
!23178 = !DILocation(line: 142, column: 6, scope: !23158)
!23179 = !DILocation(line: 142, column: 18, scope: !23158)
!23180 = !{!23171, !2999, i64 16}
!23181 = !DILocation(line: 143, column: 10, scope: !23158)
!23182 = !DILocation(line: 143, column: 3, scope: !23158)
!23183 = distinct !DISubprogram(name: "get_nonce", scope: !2771, file: !2771, line: 151, type: !2854, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1197, line: 8, size: 128, elements: !23185)
!23185 = !{!23186, !23187}
!23186 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !23184, file: !1197, line: 10, baseType: !341, size: 64)
!23187 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !23184, file: !1197, line: 11, baseType: !1201, size: 64, offset: 64)
!23188 = !DILocalVariable(name: "buffer", arg: 1, scope: !23183, file: !2771, line: 151, type: !53)
!23189 = !DILocation(line: 151, column: 18, scope: !23183)
!23190 = !DILocalVariable(name: "bufsize", arg: 2, scope: !23183, file: !2771, line: 151, type: !55)
!23191 = !DILocation(line: 151, column: 33, scope: !23183)
!23192 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !23183, file: !2771, line: 151, type: !55)
!23193 = !DILocation(line: 151, column: 49, scope: !23183)
!23194 = !DILocalVariable(name: "buf", scope: !23183, file: !2771, line: 153, type: !9)
!23195 = !DILocation(line: 153, column: 9, scope: !23183)
!23196 = !DILocation(line: 153, column: 15, scope: !23183)
!23197 = !DILocalVariable(name: "seeded", scope: !23183, file: !2771, line: 154, type: !608)
!23198 = !DILocation(line: 154, column: 11, scope: !23183)
!23199 = !DILocalVariable(name: "fd", scope: !23183, file: !2771, line: 157, type: !7)
!23200 = !DILocation(line: 157, column: 7, scope: !23183)
!23201 = !DILocation(line: 157, column: 12, scope: !23183)
!23202 = !DILocation(line: 158, column: 12, scope: !23203)
!23203 = distinct !DILexicalBlock(scope: !23183, file: !2771, line: 158, column: 7)
!23204 = !DILocation(line: 158, column: 9, scope: !23203)
!23205 = !DILocation(line: 158, column: 7, scope: !23183)
!23206 = !DILocation(line: 160, column: 22, scope: !23207)
!23207 = distinct !DILexicalBlock(scope: !23203, file: !2771, line: 159, column: 5)
!23208 = !DILocation(line: 160, column: 26, scope: !23207)
!23209 = !DILocation(line: 160, column: 31, scope: !23207)
!23210 = !DILocation(line: 160, column: 16, scope: !23207)
!23211 = !DILocation(line: 160, column: 14, scope: !23207)
!23212 = !DILocation(line: 161, column: 11, scope: !23213)
!23213 = distinct !DILexicalBlock(scope: !23207, file: !2771, line: 161, column: 11)
!23214 = !DILocation(line: 161, column: 18, scope: !23213)
!23215 = !DILocation(line: 161, column: 11, scope: !23207)
!23216 = !DILocation(line: 162, column: 16, scope: !23213)
!23217 = !DILocation(line: 162, column: 9, scope: !23213)
!23218 = !DILocation(line: 163, column: 14, scope: !23207)
!23219 = !DILocation(line: 163, column: 7, scope: !23207)
!23220 = !DILocation(line: 164, column: 5, scope: !23207)
!23221 = !DILocation(line: 177, column: 3, scope: !23222)
!23222 = distinct !DILexicalBlock(scope: !23183, file: !2771, line: 177, column: 3)
!23223 = !DILocation(line: 177, column: 3, scope: !23183)
!23224 = !DILocalVariable(name: "v", scope: !23225, file: !2771, line: 177, type: !23184)
!23225 = distinct !DILexicalBlock(scope: !23222, file: !2771, line: 177, column: 3)
!23226 = !DILocation(line: 177, column: 3, scope: !23225)
!23227 = !DILocalVariable(name: "nbytes", scope: !23225, file: !2771, line: 177, type: !55)
!23228 = !DILocation(line: 178, column: 3, scope: !23229)
!23229 = distinct !DILexicalBlock(scope: !23183, file: !2771, line: 178, column: 3)
!23230 = !DILocation(line: 178, column: 3, scope: !23183)
!23231 = !DILocalVariable(name: "v", scope: !23232, file: !2771, line: 178, type: !2856)
!23232 = distinct !DILexicalBlock(scope: !23229, file: !2771, line: 178, column: 3)
!23233 = !DILocation(line: 178, column: 3, scope: !23232)
!23234 = !DILocalVariable(name: "nbytes", scope: !23232, file: !2771, line: 178, type: !55)
!23235 = !DILocation(line: 179, column: 3, scope: !23236)
!23236 = distinct !DILexicalBlock(scope: !23183, file: !2771, line: 179, column: 3)
!23237 = !DILocation(line: 179, column: 3, scope: !23183)
!23238 = !DILocalVariable(name: "v", scope: !23239, file: !2771, line: 179, type: !2856)
!23239 = distinct !DILexicalBlock(scope: !23236, file: !2771, line: 179, column: 3)
!23240 = !DILocation(line: 179, column: 3, scope: !23239)
!23241 = !DILocalVariable(name: "nbytes", scope: !23239, file: !2771, line: 179, type: !55)
!23242 = !DILocation(line: 180, column: 3, scope: !23243)
!23243 = distinct !DILexicalBlock(scope: !23183, file: !2771, line: 180, column: 3)
!23244 = !DILocation(line: 180, column: 3, scope: !23183)
!23245 = !DILocalVariable(name: "v", scope: !23246, file: !2771, line: 180, type: !477)
!23246 = distinct !DILexicalBlock(scope: !23243, file: !2771, line: 180, column: 3)
!23247 = !DILocation(line: 180, column: 3, scope: !23246)
!23248 = !DILocalVariable(name: "nbytes", scope: !23246, file: !2771, line: 180, type: !55)
!23249 = !DILocation(line: 181, column: 3, scope: !23250)
!23250 = distinct !DILexicalBlock(scope: !23183, file: !2771, line: 181, column: 3)
!23251 = !DILocation(line: 181, column: 3, scope: !23183)
!23252 = !DILocalVariable(name: "v", scope: !23253, file: !2771, line: 181, type: !477)
!23253 = distinct !DILexicalBlock(scope: !23250, file: !2771, line: 181, column: 3)
!23254 = !DILocation(line: 181, column: 3, scope: !23253)
!23255 = !DILocalVariable(name: "nbytes", scope: !23253, file: !2771, line: 181, type: !55)
!23256 = !DILocation(line: 189, column: 1, scope: !23183)
!23257 = distinct !DISubprogram(name: "randread_error", scope: !2771, file: !2771, line: 124, type: !2810, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23258 = !DILocalVariable(name: "file_name", arg: 1, scope: !23257, file: !2771, line: 124, type: !427)
!23259 = !DILocation(line: 124, column: 29, scope: !23257)
!23260 = !DILocation(line: 126, column: 7, scope: !23261)
!23261 = distinct !DILexicalBlock(scope: !23257, file: !2771, line: 126, column: 7)
!23262 = !DILocation(line: 126, column: 7, scope: !23257)
!23263 = !DILocation(line: 127, column: 12, scope: !23261)
!23264 = !DILocation(line: 127, column: 26, scope: !23261)
!23265 = !DILocation(line: 128, column: 12, scope: !23261)
!23266 = !DILocation(line: 128, column: 18, scope: !23261)
!23267 = !DILocation(line: 128, column: 25, scope: !23261)
!23268 = !DILocation(line: 128, column: 48, scope: !23261)
!23269 = !DILocation(line: 129, column: 19, scope: !23261)
!23270 = !DILocation(line: 129, column: 12, scope: !23261)
!23271 = !DILocation(line: 127, column: 5, scope: !23261)
!23272 = !DILocation(line: 130, column: 3, scope: !23257)
!23273 = distinct !DISubprogram(name: "randread_set_handler", scope: !2771, file: !2771, line: 242, type: !2844, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23274 = !DILocalVariable(name: "s", arg: 1, scope: !23273, file: !2771, line: 242, type: !2769)
!23275 = !DILocation(line: 242, column: 47, scope: !23273)
!23276 = !DILocalVariable(name: "handler", arg: 2, scope: !23273, file: !2771, line: 242, type: !2809)
!23277 = !DILocation(line: 242, column: 57, scope: !23273)
!23278 = !DILocation(line: 244, column: 16, scope: !23273)
!23279 = !DILocation(line: 244, column: 3, scope: !23273)
!23280 = !DILocation(line: 244, column: 6, scope: !23273)
!23281 = !DILocation(line: 244, column: 14, scope: !23273)
!23282 = !DILocation(line: 245, column: 1, scope: !23273)
!23283 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !2771, file: !2771, line: 248, type: !2846, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23284 = !DILocalVariable(name: "s", arg: 1, scope: !23283, file: !2771, line: 248, type: !2769)
!23285 = !DILocation(line: 248, column: 51, scope: !23283)
!23286 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !23283, file: !2771, line: 248, type: !427)
!23287 = !DILocation(line: 248, column: 66, scope: !23283)
!23288 = !DILocation(line: 250, column: 20, scope: !23283)
!23289 = !DILocation(line: 250, column: 3, scope: !23283)
!23290 = !DILocation(line: 250, column: 6, scope: !23283)
!23291 = !DILocation(line: 250, column: 18, scope: !23283)
!23292 = !DILocation(line: 251, column: 1, scope: !23283)
!23293 = distinct !DISubprogram(name: "randread", scope: !2771, file: !2771, line: 326, type: !2848, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23294 = !DILocalVariable(name: "s", arg: 1, scope: !23293, file: !2771, line: 326, type: !2769)
!23295 = !DILocation(line: 326, column: 35, scope: !23293)
!23296 = !DILocalVariable(name: "buf", arg: 2, scope: !23293, file: !2771, line: 326, type: !53)
!23297 = !DILocation(line: 326, column: 44, scope: !23293)
!23298 = !DILocalVariable(name: "size", arg: 3, scope: !23293, file: !2771, line: 326, type: !55)
!23299 = !DILocation(line: 326, column: 56, scope: !23293)
!23300 = !DILocation(line: 328, column: 7, scope: !23301)
!23301 = distinct !DILexicalBlock(scope: !23293, file: !2771, line: 328, column: 7)
!23302 = !DILocation(line: 328, column: 10, scope: !23301)
!23303 = !DILocation(line: 328, column: 7, scope: !23293)
!23304 = !DILocation(line: 329, column: 17, scope: !23301)
!23305 = !DILocation(line: 329, column: 20, scope: !23301)
!23306 = !DILocation(line: 329, column: 25, scope: !23301)
!23307 = !DILocation(line: 329, column: 5, scope: !23301)
!23308 = !DILocation(line: 331, column: 17, scope: !23301)
!23309 = !DILocation(line: 331, column: 20, scope: !23301)
!23310 = !DILocation(line: 331, column: 24, scope: !23301)
!23311 = !DILocation(line: 331, column: 31, scope: !23301)
!23312 = !DILocation(line: 331, column: 36, scope: !23301)
!23313 = !DILocation(line: 331, column: 5, scope: !23301)
!23314 = !DILocation(line: 332, column: 1, scope: !23293)
!23315 = distinct !DISubprogram(name: "readsource", scope: !2771, file: !2771, line: 258, type: !2858, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23316 = !DILocalVariable(name: "s", arg: 1, scope: !23315, file: !2771, line: 258, type: !2769)
!23317 = !DILocation(line: 258, column: 37, scope: !23315)
!23318 = !DILocalVariable(name: "p", arg: 2, scope: !23315, file: !2771, line: 258, type: !2860)
!23319 = !DILocation(line: 258, column: 55, scope: !23315)
!23320 = !DILocalVariable(name: "size", arg: 3, scope: !23315, file: !2771, line: 258, type: !55)
!23321 = !DILocation(line: 258, column: 65, scope: !23315)
!23322 = !DILocation(line: 260, column: 3, scope: !23315)
!23323 = !DILocalVariable(name: "inbytes", scope: !23324, file: !2771, line: 262, type: !55)
!23324 = distinct !DILexicalBlock(scope: !23315, file: !2771, line: 261, column: 5)
!23325 = !DILocation(line: 262, column: 14, scope: !23324)
!23326 = !DILocation(line: 262, column: 24, scope: !23324)
!23327 = !DILocalVariable(name: "fread_errno", scope: !23324, file: !2771, line: 263, type: !7)
!23328 = !DILocation(line: 263, column: 11, scope: !23324)
!23329 = !DILocation(line: 263, column: 25, scope: !23324)
!23330 = !DILocation(line: 264, column: 12, scope: !23324)
!23331 = !DILocation(line: 264, column: 9, scope: !23324)
!23332 = !DILocation(line: 265, column: 15, scope: !23324)
!23333 = !DILocation(line: 265, column: 12, scope: !23324)
!23334 = !DILocation(line: 266, column: 11, scope: !23335)
!23335 = distinct !DILexicalBlock(scope: !23324, file: !2771, line: 266, column: 11)
!23336 = !DILocation(line: 266, column: 16, scope: !23335)
!23337 = !DILocation(line: 266, column: 11, scope: !23324)
!23338 = !DILocation(line: 267, column: 9, scope: !23335)
!23339 = !DILocation(line: 268, column: 16, scope: !23324)
!23340 = !DILocation(line: 268, column: 37, scope: !23324)
!23341 = !DILocation(line: 268, column: 7, scope: !23324)
!23342 = !DILocation(line: 268, column: 13, scope: !23324)
!23343 = !DILocation(line: 269, column: 7, scope: !23324)
!23344 = !DILocation(line: 269, column: 10, scope: !23324)
!23345 = !DILocation(line: 269, column: 19, scope: !23324)
!23346 = !DILocation(line: 269, column: 22, scope: !23324)
!23347 = distinct !{!23347, !23322, !23348}
!23348 = !DILocation(line: 270, column: 5, scope: !23315)
!23349 = !DILocation(line: 271, column: 1, scope: !23315)
!23350 = distinct !DISubprogram(name: "readisaac", scope: !2771, file: !2771, line: 278, type: !2861, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23351 = !DILocalVariable(name: "isaac", arg: 1, scope: !23350, file: !2771, line: 278, type: !2863)
!23352 = !DILocation(line: 278, column: 26, scope: !23350)
!23353 = !DILocalVariable(name: "p", arg: 2, scope: !23350, file: !2771, line: 278, type: !53)
!23354 = !DILocation(line: 278, column: 39, scope: !23350)
!23355 = !DILocalVariable(name: "size", arg: 3, scope: !23350, file: !2771, line: 278, type: !55)
!23356 = !DILocation(line: 278, column: 49, scope: !23350)
!23357 = !DILocalVariable(name: "inbytes", scope: !23350, file: !2771, line: 280, type: !55)
!23358 = !DILocation(line: 280, column: 10, scope: !23350)
!23359 = !DILocation(line: 280, column: 20, scope: !23350)
!23360 = !DILocation(line: 280, column: 27, scope: !23350)
!23361 = !{!23362, !3183, i64 0}
!23362 = !{!"isaac", !3183, i64 0, !23363, i64 8, !2987, i64 2080}
!23363 = !{!"isaac_state", !2987, i64 0, !3183, i64 2048, !3183, i64 2056, !3183, i64 2064}
!23364 = !DILocation(line: 282, column: 3, scope: !23350)
!23365 = !DILocalVariable(name: "char_p", scope: !23366, file: !2771, line: 284, type: !9)
!23366 = distinct !DILexicalBlock(scope: !23350, file: !2771, line: 283, column: 5)
!23367 = !DILocation(line: 284, column: 13, scope: !23366)
!23368 = !DILocation(line: 284, column: 22, scope: !23366)
!23369 = !DILocation(line: 286, column: 11, scope: !23370)
!23370 = distinct !DILexicalBlock(scope: !23366, file: !2771, line: 286, column: 11)
!23371 = !DILocation(line: 286, column: 19, scope: !23370)
!23372 = !DILocation(line: 286, column: 16, scope: !23370)
!23373 = !DILocation(line: 286, column: 11, scope: !23366)
!23374 = !DILocation(line: 288, column: 19, scope: !23375)
!23375 = distinct !DILexicalBlock(scope: !23370, file: !2771, line: 287, column: 9)
!23376 = !DILocation(line: 288, column: 22, scope: !23375)
!23377 = !DILocation(line: 288, column: 29, scope: !23375)
!23378 = !DILocation(line: 288, column: 34, scope: !23375)
!23379 = !DILocation(line: 288, column: 36, scope: !23375)
!23380 = !DILocation(line: 288, column: 52, scope: !23375)
!23381 = !DILocation(line: 288, column: 50, scope: !23375)
!23382 = !DILocation(line: 288, column: 61, scope: !23375)
!23383 = !DILocation(line: 288, column: 11, scope: !23375)
!23384 = !DILocation(line: 289, column: 29, scope: !23375)
!23385 = !DILocation(line: 289, column: 39, scope: !23375)
!23386 = !DILocation(line: 289, column: 37, scope: !23375)
!23387 = !DILocation(line: 289, column: 11, scope: !23375)
!23388 = !DILocation(line: 289, column: 18, scope: !23375)
!23389 = !DILocation(line: 289, column: 27, scope: !23375)
!23390 = !DILocation(line: 290, column: 11, scope: !23375)
!23391 = !DILocation(line: 293, column: 15, scope: !23366)
!23392 = !DILocation(line: 293, column: 18, scope: !23366)
!23393 = !DILocation(line: 293, column: 25, scope: !23366)
!23394 = !DILocation(line: 293, column: 30, scope: !23366)
!23395 = !DILocation(line: 293, column: 32, scope: !23366)
!23396 = !DILocation(line: 293, column: 48, scope: !23366)
!23397 = !DILocation(line: 293, column: 46, scope: !23366)
!23398 = !DILocation(line: 293, column: 57, scope: !23366)
!23399 = !DILocation(line: 293, column: 7, scope: !23366)
!23400 = !DILocation(line: 294, column: 11, scope: !23366)
!23401 = !DILocation(line: 294, column: 20, scope: !23366)
!23402 = !DILocation(line: 294, column: 18, scope: !23366)
!23403 = !DILocation(line: 294, column: 9, scope: !23366)
!23404 = !DILocation(line: 295, column: 15, scope: !23366)
!23405 = !DILocation(line: 295, column: 12, scope: !23366)
!23406 = !DILocation(line: 299, column: 11, scope: !23407)
!23407 = distinct !DILexicalBlock(scope: !23366, file: !2771, line: 299, column: 11)
!23408 = !DILocation(line: 299, column: 11, scope: !23366)
!23409 = !DILocalVariable(name: "wp", scope: !23410, file: !2771, line: 301, type: !2864)
!23410 = distinct !DILexicalBlock(scope: !23407, file: !2771, line: 300, column: 9)
!23411 = !DILocation(line: 301, column: 23, scope: !23410)
!23412 = !DILocation(line: 301, column: 28, scope: !23410)
!23413 = !DILocation(line: 302, column: 11, scope: !23410)
!23414 = !DILocation(line: 302, column: 33, scope: !23410)
!23415 = !DILocation(line: 302, column: 30, scope: !23410)
!23416 = !DILocation(line: 304, column: 30, scope: !23417)
!23417 = distinct !DILexicalBlock(scope: !23410, file: !2771, line: 303, column: 13)
!23418 = !DILocation(line: 304, column: 37, scope: !23417)
!23419 = !DILocation(line: 304, column: 44, scope: !23417)
!23420 = !DILocation(line: 304, column: 15, scope: !23417)
!23421 = !DILocation(line: 305, column: 18, scope: !23417)
!23422 = !DILocation(line: 306, column: 20, scope: !23417)
!23423 = !DILocation(line: 307, column: 19, scope: !23424)
!23424 = distinct !DILexicalBlock(scope: !23417, file: !2771, line: 307, column: 19)
!23425 = !DILocation(line: 307, column: 24, scope: !23424)
!23426 = !DILocation(line: 307, column: 19, scope: !23417)
!23427 = !DILocation(line: 309, column: 19, scope: !23428)
!23428 = distinct !DILexicalBlock(scope: !23424, file: !2771, line: 308, column: 17)
!23429 = !DILocation(line: 309, column: 26, scope: !23428)
!23430 = !DILocation(line: 309, column: 35, scope: !23428)
!23431 = !DILocation(line: 310, column: 19, scope: !23428)
!23432 = distinct !{!23432, !23413, !23433}
!23433 = !DILocation(line: 312, column: 13, scope: !23410)
!23434 = !DILocation(line: 313, column: 15, scope: !23410)
!23435 = !DILocation(line: 313, column: 13, scope: !23410)
!23436 = !DILocation(line: 314, column: 9, scope: !23410)
!23437 = !DILocation(line: 316, column: 22, scope: !23366)
!23438 = !DILocation(line: 316, column: 29, scope: !23366)
!23439 = !DILocation(line: 316, column: 36, scope: !23366)
!23440 = !DILocation(line: 316, column: 43, scope: !23366)
!23441 = !DILocation(line: 316, column: 48, scope: !23366)
!23442 = !DILocation(line: 316, column: 7, scope: !23366)
!23443 = !DILocation(line: 317, column: 15, scope: !23366)
!23444 = distinct !{!23444, !23364, !23445}
!23445 = !DILocation(line: 318, column: 5, scope: !23350)
!23446 = !DILocation(line: 319, column: 1, scope: !23350)
!23447 = distinct !DISubprogram(name: "randread_free", scope: !2771, file: !2771, line: 341, type: !2850, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2764, retainedNodes: !143)
!23448 = !DILocalVariable(name: "s", arg: 1, scope: !23447, file: !2771, line: 341, type: !2769)
!23449 = !DILocation(line: 341, column: 40, scope: !23447)
!23450 = !DILocalVariable(name: "source", scope: !23447, file: !2771, line: 343, type: !2774)
!23451 = !DILocation(line: 343, column: 9, scope: !23447)
!23452 = !DILocation(line: 343, column: 18, scope: !23447)
!23453 = !DILocation(line: 343, column: 21, scope: !23447)
!23454 = !DILocation(line: 344, column: 19, scope: !23447)
!23455 = !DILocation(line: 344, column: 3, scope: !23447)
!23456 = !DILocation(line: 345, column: 9, scope: !23447)
!23457 = !DILocation(line: 345, column: 3, scope: !23447)
!23458 = !DILocation(line: 346, column: 11, scope: !23447)
!23459 = !DILocation(line: 346, column: 28, scope: !23447)
!23460 = !DILocation(line: 346, column: 20, scope: !23447)
!23461 = !DILocation(line: 346, column: 3, scope: !23447)
!23462 = distinct !DISubprogram(name: "isaac_refill", scope: !23463, file: !23463, line: 90, type: !2868, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2865, retainedNodes: !143)
!23463 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mbarbar/clone/coreutils")
!23464 = !DILocalVariable(name: "s", arg: 1, scope: !23462, file: !23463, line: 90, type: !2870)
!23465 = !DILocation(line: 90, column: 35, scope: !23462)
!23466 = !DILocalVariable(name: "result", arg: 2, scope: !23462, file: !23463, line: 90, type: !2864)
!23467 = !DILocation(line: 90, column: 49, scope: !23462)
!23468 = !DILocalVariable(name: "a", scope: !23462, file: !23463, line: 93, type: !2830)
!23469 = !DILocation(line: 93, column: 14, scope: !23462)
!23470 = !DILocation(line: 93, column: 18, scope: !23462)
!23471 = !DILocation(line: 93, column: 21, scope: !23462)
!23472 = !{!23363, !3183, i64 2048}
!23473 = !DILocalVariable(name: "b", scope: !23462, file: !23463, line: 94, type: !2830)
!23474 = !DILocation(line: 94, column: 14, scope: !23462)
!23475 = !DILocation(line: 94, column: 18, scope: !23462)
!23476 = !DILocation(line: 94, column: 21, scope: !23462)
!23477 = !{!23363, !3183, i64 2056}
!23478 = !DILocation(line: 94, column: 28, scope: !23462)
!23479 = !DILocation(line: 94, column: 31, scope: !23462)
!23480 = !DILocation(line: 94, column: 26, scope: !23462)
!23481 = !{!23363, !3183, i64 2064}
!23482 = !DILocation(line: 94, column: 23, scope: !23462)
!23483 = !DILocalVariable(name: "m", scope: !23462, file: !23463, line: 97, type: !2864)
!23484 = !DILocation(line: 97, column: 15, scope: !23462)
!23485 = !DILocation(line: 97, column: 19, scope: !23462)
!23486 = !DILocation(line: 97, column: 22, scope: !23462)
!23487 = !DILocalVariable(name: "r", scope: !23462, file: !23463, line: 98, type: !2864)
!23488 = !DILocation(line: 98, column: 15, scope: !23462)
!23489 = !DILocation(line: 98, column: 19, scope: !23462)
!23490 = !DILocation(line: 116, column: 3, scope: !23462)
!23491 = !DILocalVariable(name: "x", scope: !23492, file: !23463, line: 118, type: !2830)
!23492 = distinct !DILexicalBlock(scope: !23493, file: !23463, line: 118, column: 7)
!23493 = distinct !DILexicalBlock(scope: !23462, file: !23463, line: 117, column: 5)
!23494 = !DILocation(line: 118, column: 7, scope: !23492)
!23495 = !DILocalVariable(name: "y", scope: !23492, file: !23463, line: 118, type: !2830)
!23496 = !DILocalVariable(name: "x", scope: !23497, file: !23463, line: 119, type: !2830)
!23497 = distinct !DILexicalBlock(scope: !23493, file: !23463, line: 119, column: 7)
!23498 = !DILocation(line: 119, column: 7, scope: !23497)
!23499 = !DILocalVariable(name: "y", scope: !23497, file: !23463, line: 119, type: !2830)
!23500 = !DILocalVariable(name: "x", scope: !23501, file: !23463, line: 120, type: !2830)
!23501 = distinct !DILexicalBlock(scope: !23493, file: !23463, line: 120, column: 7)
!23502 = !DILocation(line: 120, column: 7, scope: !23501)
!23503 = !DILocalVariable(name: "y", scope: !23501, file: !23463, line: 120, type: !2830)
!23504 = !DILocalVariable(name: "x", scope: !23505, file: !23463, line: 121, type: !2830)
!23505 = distinct !DILexicalBlock(scope: !23493, file: !23463, line: 121, column: 7)
!23506 = !DILocation(line: 121, column: 7, scope: !23505)
!23507 = !DILocalVariable(name: "y", scope: !23505, file: !23463, line: 121, type: !2830)
!23508 = !DILocation(line: 122, column: 9, scope: !23493)
!23509 = !DILocation(line: 123, column: 5, scope: !23493)
!23510 = !DILocation(line: 124, column: 13, scope: !23462)
!23511 = !DILocation(line: 124, column: 21, scope: !23462)
!23512 = !DILocation(line: 124, column: 24, scope: !23462)
!23513 = !DILocation(line: 124, column: 26, scope: !23462)
!23514 = !DILocation(line: 124, column: 19, scope: !23462)
!23515 = distinct !{!23515, !23490, !23516}
!23516 = !DILocation(line: 124, column: 32, scope: !23462)
!23517 = !DILocation(line: 126, column: 3, scope: !23462)
!23518 = !DILocalVariable(name: "x", scope: !23519, file: !23463, line: 128, type: !2830)
!23519 = distinct !DILexicalBlock(scope: !23520, file: !23463, line: 128, column: 7)
!23520 = distinct !DILexicalBlock(scope: !23462, file: !23463, line: 127, column: 5)
!23521 = !DILocation(line: 128, column: 7, scope: !23519)
!23522 = !DILocalVariable(name: "y", scope: !23519, file: !23463, line: 128, type: !2830)
!23523 = !DILocalVariable(name: "x", scope: !23524, file: !23463, line: 129, type: !2830)
!23524 = distinct !DILexicalBlock(scope: !23520, file: !23463, line: 129, column: 7)
!23525 = !DILocation(line: 129, column: 7, scope: !23524)
!23526 = !DILocalVariable(name: "y", scope: !23524, file: !23463, line: 129, type: !2830)
!23527 = !DILocalVariable(name: "x", scope: !23528, file: !23463, line: 130, type: !2830)
!23528 = distinct !DILexicalBlock(scope: !23520, file: !23463, line: 130, column: 7)
!23529 = !DILocation(line: 130, column: 7, scope: !23528)
!23530 = !DILocalVariable(name: "y", scope: !23528, file: !23463, line: 130, type: !2830)
!23531 = !DILocalVariable(name: "x", scope: !23532, file: !23463, line: 131, type: !2830)
!23532 = distinct !DILexicalBlock(scope: !23520, file: !23463, line: 131, column: 7)
!23533 = !DILocation(line: 131, column: 7, scope: !23532)
!23534 = !DILocalVariable(name: "y", scope: !23532, file: !23463, line: 131, type: !2830)
!23535 = !DILocation(line: 132, column: 9, scope: !23520)
!23536 = !DILocation(line: 133, column: 5, scope: !23520)
!23537 = !DILocation(line: 134, column: 13, scope: !23462)
!23538 = !DILocation(line: 134, column: 21, scope: !23462)
!23539 = !DILocation(line: 134, column: 24, scope: !23462)
!23540 = !DILocation(line: 134, column: 26, scope: !23462)
!23541 = !DILocation(line: 134, column: 19, scope: !23462)
!23542 = distinct !{!23542, !23517, !23543}
!23543 = !DILocation(line: 134, column: 39, scope: !23462)
!23544 = !DILocation(line: 136, column: 10, scope: !23462)
!23545 = !DILocation(line: 136, column: 3, scope: !23462)
!23546 = !DILocation(line: 136, column: 6, scope: !23462)
!23547 = !DILocation(line: 136, column: 8, scope: !23462)
!23548 = !DILocation(line: 137, column: 10, scope: !23462)
!23549 = !DILocation(line: 137, column: 3, scope: !23462)
!23550 = !DILocation(line: 137, column: 6, scope: !23462)
!23551 = !DILocation(line: 137, column: 8, scope: !23462)
!23552 = !DILocation(line: 138, column: 1, scope: !23462)
!23553 = distinct !DISubprogram(name: "ind", scope: !23463, file: !23463, line: 68, type: !2879, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2865, retainedNodes: !143)
!23554 = !DILocalVariable(name: "m", arg: 1, scope: !23553, file: !23463, line: 68, type: !2881)
!23555 = !DILocation(line: 68, column: 24, scope: !23553)
!23556 = !DILocalVariable(name: "x", arg: 2, scope: !23553, file: !23463, line: 68, type: !2830)
!23557 = !DILocation(line: 68, column: 38, scope: !23553)
!23558 = !DILocalVariable(name: "void_m", scope: !23559, file: !23463, line: 75, type: !427)
!23559 = distinct !DILexicalBlock(scope: !23560, file: !23463, line: 71, column: 5)
!23560 = distinct !DILexicalBlock(scope: !23553, file: !23463, line: 70, column: 7)
!23561 = !DILocation(line: 75, column: 19, scope: !23559)
!23562 = !DILocation(line: 75, column: 28, scope: !23559)
!23563 = !DILocalVariable(name: "base_p", scope: !23559, file: !23463, line: 76, type: !115)
!23564 = !DILocation(line: 76, column: 19, scope: !23559)
!23565 = !DILocation(line: 76, column: 28, scope: !23559)
!23566 = !DILocalVariable(name: "word_p", scope: !23559, file: !23463, line: 77, type: !427)
!23567 = !DILocation(line: 77, column: 19, scope: !23559)
!23568 = !DILocation(line: 77, column: 28, scope: !23559)
!23569 = !DILocation(line: 77, column: 38, scope: !23559)
!23570 = !DILocation(line: 77, column: 40, scope: !23559)
!23571 = !DILocation(line: 77, column: 35, scope: !23559)
!23572 = !DILocalVariable(name: "p", scope: !23559, file: !23463, line: 78, type: !2881)
!23573 = !DILocation(line: 78, column: 25, scope: !23559)
!23574 = !DILocation(line: 78, column: 29, scope: !23559)
!23575 = !DILocation(line: 79, column: 15, scope: !23559)
!23576 = !DILocation(line: 79, column: 14, scope: !23559)
!23577 = !DILocation(line: 79, column: 7, scope: !23559)
!23578 = distinct !DISubprogram(name: "just", scope: !23463, file: !23463, line: 60, type: !2883, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2865, retainedNodes: !143)
!23579 = !DILocalVariable(name: "a", arg: 1, scope: !23578, file: !23463, line: 60, type: !2830)
!23580 = !DILocation(line: 60, column: 18, scope: !23578)
!23581 = !DILocalVariable(name: "desired_bits", scope: !23578, file: !23463, line: 62, type: !2830)
!23582 = !DILocation(line: 62, column: 14, scope: !23578)
!23583 = !DILocation(line: 63, column: 10, scope: !23578)
!23584 = !DILocation(line: 63, column: 14, scope: !23578)
!23585 = !DILocation(line: 63, column: 12, scope: !23578)
!23586 = !DILocation(line: 63, column: 3, scope: !23578)
!23587 = distinct !DISubprogram(name: "isaac_seed", scope: !23463, file: !23463, line: 248, type: !2877, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2865, retainedNodes: !143)
!23588 = !DILocalVariable(name: "s", arg: 1, scope: !23587, file: !23463, line: 248, type: !2870)
!23589 = !DILocation(line: 248, column: 33, scope: !23587)
!23590 = !DILocalVariable(name: "a", scope: !23587, file: !23463, line: 250, type: !2830)
!23591 = !DILocation(line: 250, column: 14, scope: !23587)
!23592 = !DILocalVariable(name: "b", scope: !23587, file: !23463, line: 251, type: !2830)
!23593 = !DILocation(line: 251, column: 14, scope: !23587)
!23594 = !DILocalVariable(name: "c", scope: !23587, file: !23463, line: 252, type: !2830)
!23595 = !DILocation(line: 252, column: 14, scope: !23587)
!23596 = !DILocalVariable(name: "d", scope: !23587, file: !23463, line: 253, type: !2830)
!23597 = !DILocation(line: 253, column: 14, scope: !23587)
!23598 = !DILocalVariable(name: "e", scope: !23587, file: !23463, line: 254, type: !2830)
!23599 = !DILocation(line: 254, column: 14, scope: !23587)
!23600 = !DILocalVariable(name: "f", scope: !23587, file: !23463, line: 255, type: !2830)
!23601 = !DILocation(line: 255, column: 14, scope: !23587)
!23602 = !DILocalVariable(name: "g", scope: !23587, file: !23463, line: 256, type: !2830)
!23603 = !DILocation(line: 256, column: 14, scope: !23587)
!23604 = !DILocalVariable(name: "h", scope: !23587, file: !23463, line: 257, type: !2830)
!23605 = !DILocation(line: 257, column: 14, scope: !23587)
!23606 = !DILocalVariable(name: "i", scope: !23607, file: !23463, line: 269, type: !7)
!23607 = distinct !DILexicalBlock(scope: !23587, file: !23463, line: 269, column: 3)
!23608 = !DILocation(line: 269, column: 3, scope: !23607)
!23609 = !DILocation(line: 269, column: 3, scope: !23610)
!23610 = distinct !DILexicalBlock(scope: !23607, file: !23463, line: 269, column: 3)
!23611 = !DILocation(line: 269, column: 3, scope: !23612)
!23612 = distinct !DILexicalBlock(scope: !23610, file: !23463, line: 269, column: 3)
!23613 = !DILocation(line: 269, column: 3, scope: !23614)
!23614 = distinct !DILexicalBlock(scope: !23612, file: !23463, line: 269, column: 3)
!23615 = !DILocation(line: 269, column: 3, scope: !23616)
!23616 = distinct !DILexicalBlock(scope: !23614, file: !23463, line: 269, column: 3)
!23617 = distinct !{!23617, !23609, !23609}
!23618 = !DILocalVariable(name: "i", scope: !23619, file: !23463, line: 270, type: !7)
!23619 = distinct !DILexicalBlock(scope: !23587, file: !23463, line: 270, column: 3)
!23620 = !DILocation(line: 270, column: 3, scope: !23619)
!23621 = !DILocation(line: 270, column: 3, scope: !23622)
!23622 = distinct !DILexicalBlock(scope: !23619, file: !23463, line: 270, column: 3)
!23623 = !DILocation(line: 270, column: 3, scope: !23624)
!23624 = distinct !DILexicalBlock(scope: !23622, file: !23463, line: 270, column: 3)
!23625 = !DILocation(line: 270, column: 3, scope: !23626)
!23626 = distinct !DILexicalBlock(scope: !23624, file: !23463, line: 270, column: 3)
!23627 = !DILocation(line: 270, column: 3, scope: !23628)
!23628 = distinct !DILexicalBlock(scope: !23626, file: !23463, line: 270, column: 3)
!23629 = distinct !{!23629, !23621, !23621}
!23630 = !DILocation(line: 272, column: 17, scope: !23587)
!23631 = !DILocation(line: 272, column: 20, scope: !23587)
!23632 = !DILocation(line: 272, column: 22, scope: !23587)
!23633 = !DILocation(line: 272, column: 10, scope: !23587)
!23634 = !DILocation(line: 272, column: 13, scope: !23587)
!23635 = !DILocation(line: 272, column: 15, scope: !23587)
!23636 = !DILocation(line: 272, column: 3, scope: !23587)
!23637 = !DILocation(line: 272, column: 6, scope: !23587)
!23638 = !DILocation(line: 272, column: 8, scope: !23587)
!23639 = !DILocation(line: 273, column: 1, scope: !23587)
!23640 = distinct !DISubprogram(name: "dup_safer", scope: !23641, file: !23641, line: 31, type: !1830, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2885, retainedNodes: !143)
!23641 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mbarbar/clone/coreutils")
!23642 = !DILocalVariable(name: "fd", arg: 1, scope: !23640, file: !23641, line: 31, type: !7)
!23643 = !DILocation(line: 31, column: 16, scope: !23640)
!23644 = !DILocation(line: 33, column: 17, scope: !23640)
!23645 = !DILocation(line: 33, column: 10, scope: !23640)
!23646 = !DILocation(line: 33, column: 3, scope: !23640)
!23647 = distinct !DISubprogram(name: "xsum", scope: !23648, file: !23648, line: 63, type: !2891, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2888, retainedNodes: !143)
!23648 = !DIFile(filename: "./lib/xsize.h", directory: "/home/mbarbar/clone/coreutils")
!23649 = !DILocalVariable(name: "size1", arg: 1, scope: !23647, file: !23648, line: 63, type: !55)
!23650 = !DILocation(line: 63, column: 14, scope: !23647)
!23651 = !DILocalVariable(name: "size2", arg: 2, scope: !23647, file: !23648, line: 63, type: !55)
!23652 = !DILocation(line: 63, column: 28, scope: !23647)
!23653 = !DILocalVariable(name: "sum", scope: !23647, file: !23648, line: 65, type: !55)
!23654 = !DILocation(line: 65, column: 10, scope: !23647)
!23655 = !DILocation(line: 65, column: 16, scope: !23647)
!23656 = !DILocation(line: 65, column: 24, scope: !23647)
!23657 = !DILocation(line: 65, column: 22, scope: !23647)
!23658 = !DILocation(line: 66, column: 11, scope: !23647)
!23659 = !DILocation(line: 66, column: 18, scope: !23647)
!23660 = !DILocation(line: 66, column: 15, scope: !23647)
!23661 = !DILocation(line: 66, column: 26, scope: !23647)
!23662 = !DILocation(line: 66, column: 3, scope: !23647)
!23663 = distinct !DISubprogram(name: "xsum3", scope: !23648, file: !23648, line: 74, type: !1603, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2888, retainedNodes: !143)
!23664 = !DILocalVariable(name: "size1", arg: 1, scope: !23663, file: !23648, line: 74, type: !55)
!23665 = !DILocation(line: 74, column: 15, scope: !23663)
!23666 = !DILocalVariable(name: "size2", arg: 2, scope: !23663, file: !23648, line: 74, type: !55)
!23667 = !DILocation(line: 74, column: 29, scope: !23663)
!23668 = !DILocalVariable(name: "size3", arg: 3, scope: !23663, file: !23648, line: 74, type: !55)
!23669 = !DILocation(line: 74, column: 43, scope: !23663)
!23670 = !DILocation(line: 76, column: 22, scope: !23663)
!23671 = !DILocation(line: 76, column: 29, scope: !23663)
!23672 = !DILocation(line: 76, column: 16, scope: !23663)
!23673 = !DILocation(line: 76, column: 37, scope: !23663)
!23674 = !DILocation(line: 76, column: 10, scope: !23663)
!23675 = !DILocation(line: 76, column: 3, scope: !23663)
!23676 = distinct !DISubprogram(name: "xsum4", scope: !23648, file: !23648, line: 84, type: !2893, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2888, retainedNodes: !143)
!23677 = !DILocalVariable(name: "size1", arg: 1, scope: !23676, file: !23648, line: 84, type: !55)
!23678 = !DILocation(line: 84, column: 15, scope: !23676)
!23679 = !DILocalVariable(name: "size2", arg: 2, scope: !23676, file: !23648, line: 84, type: !55)
!23680 = !DILocation(line: 84, column: 29, scope: !23676)
!23681 = !DILocalVariable(name: "size3", arg: 3, scope: !23676, file: !23648, line: 84, type: !55)
!23682 = !DILocation(line: 84, column: 43, scope: !23676)
!23683 = !DILocalVariable(name: "size4", arg: 4, scope: !23676, file: !23648, line: 84, type: !55)
!23684 = !DILocation(line: 84, column: 57, scope: !23676)
!23685 = !DILocation(line: 86, column: 28, scope: !23676)
!23686 = !DILocation(line: 86, column: 35, scope: !23676)
!23687 = !DILocation(line: 86, column: 22, scope: !23676)
!23688 = !DILocation(line: 86, column: 43, scope: !23676)
!23689 = !DILocation(line: 86, column: 16, scope: !23676)
!23690 = !DILocation(line: 86, column: 51, scope: !23676)
!23691 = !DILocation(line: 86, column: 10, scope: !23676)
!23692 = !DILocation(line: 86, column: 3, scope: !23676)
!23693 = distinct !DISubprogram(name: "xmax", scope: !23648, file: !23648, line: 94, type: !2891, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2888, retainedNodes: !143)
!23694 = !DILocalVariable(name: "size1", arg: 1, scope: !23693, file: !23648, line: 94, type: !55)
!23695 = !DILocation(line: 94, column: 14, scope: !23693)
!23696 = !DILocalVariable(name: "size2", arg: 2, scope: !23693, file: !23648, line: 94, type: !55)
!23697 = !DILocation(line: 94, column: 28, scope: !23693)
!23698 = !DILocation(line: 98, column: 11, scope: !23693)
!23699 = !DILocation(line: 98, column: 20, scope: !23693)
!23700 = !DILocation(line: 98, column: 17, scope: !23693)
!23701 = !DILocation(line: 98, column: 28, scope: !23693)
!23702 = !DILocation(line: 98, column: 36, scope: !23693)
!23703 = !DILocation(line: 98, column: 3, scope: !23693)
!23704 = distinct !DISubprogram(name: "rpl_fclose", scope: !23705, file: !23705, line: 58, type: !2898, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2895, retainedNodes: !143)
!23705 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/clone/coreutils")
!23706 = !DILocalVariable(name: "fp", arg: 1, scope: !23704, file: !23705, line: 58, type: !2900)
!23707 = !DILocation(line: 58, column: 19, scope: !23704)
!23708 = !DILocalVariable(name: "saved_errno", scope: !23704, file: !23705, line: 60, type: !7)
!23709 = !DILocation(line: 60, column: 7, scope: !23704)
!23710 = !DILocalVariable(name: "fd", scope: !23704, file: !23705, line: 61, type: !7)
!23711 = !DILocation(line: 61, column: 7, scope: !23704)
!23712 = !DILocalVariable(name: "result", scope: !23704, file: !23705, line: 62, type: !7)
!23713 = !DILocation(line: 62, column: 7, scope: !23704)
!23714 = !DILocation(line: 65, column: 16, scope: !23704)
!23715 = !DILocation(line: 65, column: 8, scope: !23704)
!23716 = !DILocation(line: 65, column: 6, scope: !23704)
!23717 = !DILocation(line: 66, column: 7, scope: !23718)
!23718 = distinct !DILexicalBlock(scope: !23704, file: !23705, line: 66, column: 7)
!23719 = !DILocation(line: 66, column: 10, scope: !23718)
!23720 = !DILocation(line: 66, column: 7, scope: !23704)
!23721 = !DILocation(line: 67, column: 28, scope: !23718)
!23722 = !DILocation(line: 67, column: 12, scope: !23718)
!23723 = !DILocation(line: 67, column: 5, scope: !23718)
!23724 = !DILocation(line: 72, column: 9, scope: !23725)
!23725 = distinct !DILexicalBlock(scope: !23704, file: !23705, line: 72, column: 7)
!23726 = !DILocation(line: 72, column: 23, scope: !23725)
!23727 = !DILocation(line: 72, column: 41, scope: !23725)
!23728 = !DILocation(line: 72, column: 33, scope: !23725)
!23729 = !DILocation(line: 72, column: 26, scope: !23725)
!23730 = !DILocation(line: 72, column: 59, scope: !23725)
!23731 = !DILocation(line: 73, column: 7, scope: !23725)
!23732 = !DILocation(line: 73, column: 18, scope: !23725)
!23733 = !DILocation(line: 73, column: 10, scope: !23725)
!23734 = !DILocation(line: 72, column: 7, scope: !23704)
!23735 = !DILocation(line: 74, column: 19, scope: !23725)
!23736 = !DILocation(line: 74, column: 17, scope: !23725)
!23737 = !DILocation(line: 74, column: 5, scope: !23725)
!23738 = !DILocation(line: 100, column: 28, scope: !23704)
!23739 = !DILocation(line: 100, column: 12, scope: !23704)
!23740 = !DILocation(line: 100, column: 10, scope: !23704)
!23741 = !DILocation(line: 105, column: 7, scope: !23742)
!23742 = distinct !DILexicalBlock(scope: !23704, file: !23705, line: 105, column: 7)
!23743 = !DILocation(line: 105, column: 19, scope: !23742)
!23744 = !DILocation(line: 105, column: 7, scope: !23704)
!23745 = !DILocation(line: 107, column: 15, scope: !23746)
!23746 = distinct !DILexicalBlock(scope: !23742, file: !23705, line: 106, column: 5)
!23747 = !DILocation(line: 107, column: 7, scope: !23746)
!23748 = !DILocation(line: 107, column: 13, scope: !23746)
!23749 = !DILocation(line: 108, column: 14, scope: !23746)
!23750 = !DILocation(line: 109, column: 5, scope: !23746)
!23751 = !DILocation(line: 111, column: 10, scope: !23704)
!23752 = !DILocation(line: 111, column: 3, scope: !23704)
!23753 = !DILocation(line: 112, column: 1, scope: !23704)
!23754 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1310, file: !1310, line: 202, type: !23755, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1311, retainedNodes: !143)
!23755 = !DISubroutineType(types: !23756)
!23756 = !{!7, !7, !7, null}
!23757 = !DILocalVariable(name: "fd", arg: 1, scope: !23754, file: !1310, line: 202, type: !7)
!23758 = !DILocation(line: 202, column: 12, scope: !23754)
!23759 = !DILocalVariable(name: "action", arg: 2, scope: !23754, file: !1310, line: 202, type: !7)
!23760 = !DILocation(line: 202, column: 20, scope: !23754)
!23761 = !DILocalVariable(name: "arg", scope: !23754, file: !1310, line: 208, type: !1314)
!23762 = !DILocation(line: 208, column: 11, scope: !23754)
!23763 = !DILocalVariable(name: "result", scope: !23754, file: !1310, line: 209, type: !7)
!23764 = !DILocation(line: 209, column: 7, scope: !23754)
!23765 = !DILocation(line: 210, column: 3, scope: !23754)
!23766 = !DILocation(line: 211, column: 11, scope: !23754)
!23767 = !DILocation(line: 211, column: 3, scope: !23754)
!23768 = !DILocalVariable(name: "target", scope: !23769, file: !1310, line: 215, type: !7)
!23769 = distinct !DILexicalBlock(scope: !23770, file: !1310, line: 214, column: 7)
!23770 = distinct !DILexicalBlock(scope: !23754, file: !1310, line: 212, column: 5)
!23771 = !DILocation(line: 215, column: 13, scope: !23769)
!23772 = !DILocation(line: 215, column: 22, scope: !23769)
!23773 = !DILocation(line: 216, column: 35, scope: !23769)
!23774 = !DILocation(line: 216, column: 39, scope: !23769)
!23775 = !DILocation(line: 216, column: 18, scope: !23769)
!23776 = !DILocation(line: 216, column: 16, scope: !23769)
!23777 = !DILocation(line: 217, column: 9, scope: !23769)
!23778 = !DILocalVariable(name: "target", scope: !23779, file: !1310, line: 222, type: !7)
!23779 = distinct !DILexicalBlock(scope: !23770, file: !1310, line: 221, column: 7)
!23780 = !DILocation(line: 222, column: 13, scope: !23779)
!23781 = !DILocation(line: 222, column: 22, scope: !23779)
!23782 = !DILocation(line: 223, column: 43, scope: !23779)
!23783 = !DILocation(line: 223, column: 47, scope: !23779)
!23784 = !DILocation(line: 223, column: 18, scope: !23779)
!23785 = !DILocation(line: 223, column: 16, scope: !23779)
!23786 = !DILocation(line: 224, column: 9, scope: !23779)
!23787 = !DILocation(line: 259, column: 17, scope: !23788)
!23788 = distinct !DILexicalBlock(scope: !23770, file: !1310, line: 257, column: 7)
!23789 = !DILocation(line: 259, column: 9, scope: !23788)
!23790 = !DILocation(line: 328, column: 29, scope: !23791)
!23791 = distinct !DILexicalBlock(scope: !23788, file: !1310, line: 260, column: 11)
!23792 = !DILocation(line: 328, column: 33, scope: !23791)
!23793 = !DILocation(line: 328, column: 22, scope: !23791)
!23794 = !DILocation(line: 328, column: 20, scope: !23791)
!23795 = !DILocation(line: 329, column: 13, scope: !23791)
!23796 = !DILocalVariable(name: "x", scope: !23797, file: !1310, line: 423, type: !7)
!23797 = distinct !DILexicalBlock(scope: !23791, file: !1310, line: 422, column: 13)
!23798 = !DILocation(line: 423, column: 19, scope: !23797)
!23799 = !DILocation(line: 423, column: 23, scope: !23797)
!23800 = !DILocation(line: 424, column: 31, scope: !23797)
!23801 = !DILocation(line: 424, column: 35, scope: !23797)
!23802 = !DILocation(line: 424, column: 43, scope: !23797)
!23803 = !DILocation(line: 424, column: 24, scope: !23797)
!23804 = !DILocation(line: 424, column: 22, scope: !23797)
!23805 = !DILocation(line: 426, column: 13, scope: !23791)
!23806 = !DILocalVariable(name: "p", scope: !23807, file: !1310, line: 431, type: !53)
!23807 = distinct !DILexicalBlock(scope: !23791, file: !1310, line: 430, column: 13)
!23808 = !DILocation(line: 431, column: 21, scope: !23807)
!23809 = !DILocation(line: 431, column: 25, scope: !23807)
!23810 = !DILocation(line: 432, column: 31, scope: !23807)
!23811 = !DILocation(line: 432, column: 35, scope: !23807)
!23812 = !DILocation(line: 432, column: 43, scope: !23807)
!23813 = !DILocation(line: 432, column: 24, scope: !23807)
!23814 = !DILocation(line: 432, column: 22, scope: !23807)
!23815 = !DILocation(line: 434, column: 13, scope: !23791)
!23816 = !DILocation(line: 439, column: 9, scope: !23788)
!23817 = !DILocation(line: 442, column: 3, scope: !23754)
!23818 = !DILocation(line: 443, column: 10, scope: !23754)
!23819 = !DILocation(line: 443, column: 3, scope: !23754)
!23820 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1310, file: !1310, line: 447, type: !419, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1311, retainedNodes: !143)
!23821 = !DILocalVariable(name: "fd", arg: 1, scope: !23820, file: !1310, line: 447, type: !7)
!23822 = !DILocation(line: 447, column: 22, scope: !23820)
!23823 = !DILocalVariable(name: "target", arg: 2, scope: !23820, file: !1310, line: 447, type: !7)
!23824 = !DILocation(line: 447, column: 30, scope: !23820)
!23825 = !DILocalVariable(name: "result", scope: !23820, file: !1310, line: 449, type: !7)
!23826 = !DILocation(line: 449, column: 7, scope: !23820)
!23827 = !DILocation(line: 482, column: 19, scope: !23820)
!23828 = !DILocation(line: 482, column: 32, scope: !23820)
!23829 = !DILocation(line: 482, column: 12, scope: !23820)
!23830 = !DILocation(line: 482, column: 10, scope: !23820)
!23831 = !DILocation(line: 484, column: 10, scope: !23820)
!23832 = !DILocation(line: 484, column: 3, scope: !23820)
!23833 = !DILocalVariable(name: "fd", arg: 1, scope: !1309, file: !1310, line: 488, type: !7)
!23834 = !DILocation(line: 488, column: 30, scope: !1309)
!23835 = !DILocalVariable(name: "target", arg: 2, scope: !1309, file: !1310, line: 488, type: !7)
!23836 = !DILocation(line: 488, column: 38, scope: !1309)
!23837 = !DILocalVariable(name: "result", scope: !1309, file: !1310, line: 490, type: !7)
!23838 = !DILocation(line: 490, column: 7, scope: !1309)
!23839 = !DILocation(line: 508, column: 12, scope: !23840)
!23840 = distinct !DILexicalBlock(scope: !1309, file: !1310, line: 508, column: 7)
!23841 = !DILocation(line: 508, column: 9, scope: !23840)
!23842 = !DILocation(line: 508, column: 7, scope: !1309)
!23843 = !DILocation(line: 510, column: 23, scope: !23844)
!23844 = distinct !DILexicalBlock(scope: !23840, file: !1310, line: 509, column: 5)
!23845 = !DILocation(line: 510, column: 44, scope: !23844)
!23846 = !DILocation(line: 510, column: 16, scope: !23844)
!23847 = !DILocation(line: 510, column: 14, scope: !23844)
!23848 = !DILocation(line: 511, column: 16, scope: !23849)
!23849 = distinct !DILexicalBlock(scope: !23844, file: !1310, line: 511, column: 11)
!23850 = !DILocation(line: 511, column: 13, scope: !23849)
!23851 = !DILocation(line: 511, column: 23, scope: !23849)
!23852 = !DILocation(line: 511, column: 26, scope: !23849)
!23853 = !DILocation(line: 511, column: 32, scope: !23849)
!23854 = !DILocation(line: 511, column: 11, scope: !23844)
!23855 = !DILocation(line: 513, column: 30, scope: !23856)
!23856 = distinct !DILexicalBlock(scope: !23849, file: !1310, line: 512, column: 9)
!23857 = !DILocation(line: 518, column: 9, scope: !23856)
!23858 = !DILocation(line: 521, column: 37, scope: !23859)
!23859 = distinct !DILexicalBlock(scope: !23849, file: !1310, line: 520, column: 9)
!23860 = !DILocation(line: 521, column: 41, scope: !23859)
!23861 = !DILocation(line: 521, column: 20, scope: !23859)
!23862 = !DILocation(line: 521, column: 18, scope: !23859)
!23863 = !DILocation(line: 522, column: 15, scope: !23864)
!23864 = distinct !DILexicalBlock(scope: !23859, file: !1310, line: 522, column: 15)
!23865 = !DILocation(line: 522, column: 22, scope: !23864)
!23866 = !DILocation(line: 522, column: 15, scope: !23859)
!23867 = !DILocation(line: 523, column: 32, scope: !23864)
!23868 = !DILocation(line: 523, column: 13, scope: !23864)
!23869 = !DILocation(line: 525, column: 5, scope: !23844)
!23870 = !DILocation(line: 528, column: 31, scope: !23840)
!23871 = !DILocation(line: 528, column: 35, scope: !23840)
!23872 = !DILocation(line: 528, column: 14, scope: !23840)
!23873 = !DILocation(line: 528, column: 12, scope: !23840)
!23874 = !DILocation(line: 529, column: 12, scope: !23875)
!23875 = distinct !DILexicalBlock(scope: !1309, file: !1310, line: 529, column: 7)
!23876 = !DILocation(line: 529, column: 9, scope: !23875)
!23877 = !DILocation(line: 529, column: 19, scope: !23875)
!23878 = !DILocation(line: 529, column: 22, scope: !23875)
!23879 = !DILocation(line: 529, column: 41, scope: !23875)
!23880 = !DILocation(line: 529, column: 7, scope: !1309)
!23881 = !DILocalVariable(name: "flags", scope: !23882, file: !1310, line: 531, type: !7)
!23882 = distinct !DILexicalBlock(scope: !23875, file: !1310, line: 530, column: 5)
!23883 = !DILocation(line: 531, column: 11, scope: !23882)
!23884 = !DILocation(line: 531, column: 26, scope: !23882)
!23885 = !DILocation(line: 531, column: 19, scope: !23882)
!23886 = !DILocation(line: 532, column: 11, scope: !23887)
!23887 = distinct !DILexicalBlock(scope: !23882, file: !1310, line: 532, column: 11)
!23888 = !DILocation(line: 532, column: 17, scope: !23887)
!23889 = !DILocation(line: 532, column: 21, scope: !23887)
!23890 = !DILocation(line: 532, column: 31, scope: !23887)
!23891 = !DILocation(line: 532, column: 48, scope: !23887)
!23892 = !DILocation(line: 532, column: 54, scope: !23887)
!23893 = !DILocation(line: 532, column: 24, scope: !23887)
!23894 = !DILocation(line: 532, column: 68, scope: !23887)
!23895 = !DILocation(line: 532, column: 11, scope: !23882)
!23896 = !DILocalVariable(name: "saved_errno", scope: !23897, file: !1310, line: 534, type: !7)
!23897 = distinct !DILexicalBlock(scope: !23887, file: !1310, line: 533, column: 9)
!23898 = !DILocation(line: 534, column: 15, scope: !23897)
!23899 = !DILocation(line: 534, column: 29, scope: !23897)
!23900 = !DILocation(line: 535, column: 18, scope: !23897)
!23901 = !DILocation(line: 535, column: 11, scope: !23897)
!23902 = !DILocation(line: 536, column: 19, scope: !23897)
!23903 = !DILocation(line: 536, column: 11, scope: !23897)
!23904 = !DILocation(line: 536, column: 17, scope: !23897)
!23905 = !DILocation(line: 537, column: 18, scope: !23897)
!23906 = !DILocation(line: 538, column: 9, scope: !23897)
!23907 = !DILocation(line: 539, column: 5, scope: !23882)
!23908 = !DILocation(line: 541, column: 10, scope: !1309)
!23909 = !DILocation(line: 541, column: 3, scope: !1309)
!23910 = distinct !DISubprogram(name: "acl_errno_valid", scope: !23911, file: !23911, line: 30, type: !307, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2934, retainedNodes: !143)
!23911 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/clone/coreutils")
!23912 = !DILocalVariable(name: "errnum", arg: 1, scope: !23910, file: !23911, line: 30, type: !7)
!23913 = !DILocation(line: 30, column: 22, scope: !23910)
!23914 = !DILocation(line: 34, column: 11, scope: !23910)
!23915 = !DILocation(line: 34, column: 3, scope: !23910)
!23916 = !DILocation(line: 36, column: 17, scope: !23917)
!23917 = distinct !DILexicalBlock(scope: !23910, file: !23911, line: 35, column: 5)
!23918 = !DILocation(line: 37, column: 18, scope: !23917)
!23919 = !DILocation(line: 41, column: 18, scope: !23917)
!23920 = !DILocation(line: 49, column: 22, scope: !23917)
!23921 = !DILocation(line: 50, column: 14, scope: !23917)
!23922 = !DILocation(line: 52, column: 1, scope: !23910)
!23923 = distinct !DISubprogram(name: "c_isalnum", scope: !23924, file: !23924, line: 169, type: !307, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23924 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/clone/coreutils")
!23925 = !DILocalVariable(name: "c", arg: 1, scope: !23923, file: !23924, line: 169, type: !7)
!23926 = !DILocation(line: 169, column: 16, scope: !23923)
!23927 = !DILocation(line: 171, column: 11, scope: !23923)
!23928 = !DILocation(line: 171, column: 3, scope: !23923)
!23929 = !DILocation(line: 176, column: 7, scope: !23930)
!23930 = distinct !DILexicalBlock(scope: !23923, file: !23924, line: 172, column: 5)
!23931 = !DILocation(line: 178, column: 7, scope: !23930)
!23932 = !DILocation(line: 180, column: 1, scope: !23923)
!23933 = distinct !DISubprogram(name: "c_isalpha", scope: !23924, file: !23924, line: 183, type: !307, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23934 = !DILocalVariable(name: "c", arg: 1, scope: !23933, file: !23924, line: 183, type: !7)
!23935 = !DILocation(line: 183, column: 16, scope: !23933)
!23936 = !DILocation(line: 185, column: 11, scope: !23933)
!23937 = !DILocation(line: 185, column: 3, scope: !23933)
!23938 = !DILocation(line: 189, column: 7, scope: !23939)
!23939 = distinct !DILexicalBlock(scope: !23933, file: !23924, line: 186, column: 5)
!23940 = !DILocation(line: 191, column: 7, scope: !23939)
!23941 = !DILocation(line: 193, column: 1, scope: !23933)
!23942 = distinct !DISubprogram(name: "c_isascii", scope: !23924, file: !23924, line: 198, type: !307, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23943 = !DILocalVariable(name: "c", arg: 1, scope: !23942, file: !23924, line: 198, type: !7)
!23944 = !DILocation(line: 198, column: 16, scope: !23942)
!23945 = !DILocation(line: 200, column: 11, scope: !23942)
!23946 = !DILocation(line: 200, column: 3, scope: !23942)
!23947 = !DILocation(line: 208, column: 7, scope: !23948)
!23948 = distinct !DILexicalBlock(scope: !23942, file: !23924, line: 201, column: 5)
!23949 = !DILocation(line: 210, column: 7, scope: !23948)
!23950 = !DILocation(line: 212, column: 1, scope: !23942)
!23951 = distinct !DISubprogram(name: "c_isblank", scope: !23924, file: !23924, line: 215, type: !307, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23952 = !DILocalVariable(name: "c", arg: 1, scope: !23951, file: !23924, line: 215, type: !7)
!23953 = !DILocation(line: 215, column: 16, scope: !23951)
!23954 = !DILocation(line: 217, column: 10, scope: !23951)
!23955 = !DILocation(line: 217, column: 12, scope: !23951)
!23956 = !DILocation(line: 217, column: 19, scope: !23951)
!23957 = !DILocation(line: 217, column: 22, scope: !23951)
!23958 = !DILocation(line: 217, column: 24, scope: !23951)
!23959 = !DILocation(line: 217, column: 3, scope: !23951)
!23960 = distinct !DISubprogram(name: "c_iscntrl", scope: !23924, file: !23924, line: 221, type: !307, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23961 = !DILocalVariable(name: "c", arg: 1, scope: !23960, file: !23924, line: 221, type: !7)
!23962 = !DILocation(line: 221, column: 16, scope: !23960)
!23963 = !DILocation(line: 223, column: 11, scope: !23960)
!23964 = !DILocation(line: 223, column: 3, scope: !23960)
!23965 = !DILocation(line: 226, column: 7, scope: !23966)
!23966 = distinct !DILexicalBlock(scope: !23960, file: !23924, line: 224, column: 5)
!23967 = !DILocation(line: 228, column: 7, scope: !23966)
!23968 = !DILocation(line: 230, column: 1, scope: !23960)
!23969 = distinct !DISubprogram(name: "c_isdigit", scope: !23924, file: !23924, line: 233, type: !307, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23970 = !DILocalVariable(name: "c", arg: 1, scope: !23969, file: !23924, line: 233, type: !7)
!23971 = !DILocation(line: 233, column: 16, scope: !23969)
!23972 = !DILocation(line: 235, column: 11, scope: !23969)
!23973 = !DILocation(line: 235, column: 3, scope: !23969)
!23974 = !DILocation(line: 238, column: 7, scope: !23975)
!23975 = distinct !DILexicalBlock(scope: !23969, file: !23924, line: 236, column: 5)
!23976 = !DILocation(line: 240, column: 7, scope: !23975)
!23977 = !DILocation(line: 242, column: 1, scope: !23969)
!23978 = distinct !DISubprogram(name: "c_isgraph", scope: !23924, file: !23924, line: 245, type: !307, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23979 = !DILocalVariable(name: "c", arg: 1, scope: !23978, file: !23924, line: 245, type: !7)
!23980 = !DILocation(line: 245, column: 16, scope: !23978)
!23981 = !DILocation(line: 247, column: 11, scope: !23978)
!23982 = !DILocation(line: 247, column: 3, scope: !23978)
!23983 = !DILocation(line: 253, column: 7, scope: !23984)
!23984 = distinct !DILexicalBlock(scope: !23978, file: !23924, line: 248, column: 5)
!23985 = !DILocation(line: 255, column: 7, scope: !23984)
!23986 = !DILocation(line: 257, column: 1, scope: !23978)
!23987 = distinct !DISubprogram(name: "c_islower", scope: !23924, file: !23924, line: 260, type: !307, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23988 = !DILocalVariable(name: "c", arg: 1, scope: !23987, file: !23924, line: 260, type: !7)
!23989 = !DILocation(line: 260, column: 16, scope: !23987)
!23990 = !DILocation(line: 262, column: 11, scope: !23987)
!23991 = !DILocation(line: 262, column: 3, scope: !23987)
!23992 = !DILocation(line: 265, column: 7, scope: !23993)
!23993 = distinct !DILexicalBlock(scope: !23987, file: !23924, line: 263, column: 5)
!23994 = !DILocation(line: 267, column: 7, scope: !23993)
!23995 = !DILocation(line: 269, column: 1, scope: !23987)
!23996 = distinct !DISubprogram(name: "c_isprint", scope: !23924, file: !23924, line: 272, type: !307, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!23997 = !DILocalVariable(name: "c", arg: 1, scope: !23996, file: !23924, line: 272, type: !7)
!23998 = !DILocation(line: 272, column: 16, scope: !23996)
!23999 = !DILocation(line: 274, column: 11, scope: !23996)
!24000 = !DILocation(line: 274, column: 3, scope: !23996)
!24001 = !DILocation(line: 281, column: 7, scope: !24002)
!24002 = distinct !DILexicalBlock(scope: !23996, file: !23924, line: 275, column: 5)
!24003 = !DILocation(line: 283, column: 7, scope: !24002)
!24004 = !DILocation(line: 285, column: 1, scope: !23996)
!24005 = distinct !DISubprogram(name: "c_ispunct", scope: !23924, file: !23924, line: 288, type: !307, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!24006 = !DILocalVariable(name: "c", arg: 1, scope: !24005, file: !23924, line: 288, type: !7)
!24007 = !DILocation(line: 288, column: 16, scope: !24005)
!24008 = !DILocation(line: 290, column: 11, scope: !24005)
!24009 = !DILocation(line: 290, column: 3, scope: !24005)
!24010 = !DILocation(line: 293, column: 7, scope: !24011)
!24011 = distinct !DILexicalBlock(scope: !24005, file: !23924, line: 291, column: 5)
!24012 = !DILocation(line: 295, column: 7, scope: !24011)
!24013 = !DILocation(line: 297, column: 1, scope: !24005)
!24014 = distinct !DISubprogram(name: "c_isspace", scope: !23924, file: !23924, line: 300, type: !307, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!24015 = !DILocalVariable(name: "c", arg: 1, scope: !24014, file: !23924, line: 300, type: !7)
!24016 = !DILocation(line: 300, column: 16, scope: !24014)
!24017 = !DILocation(line: 302, column: 11, scope: !24014)
!24018 = !DILocation(line: 302, column: 3, scope: !24014)
!24019 = !DILocation(line: 305, column: 7, scope: !24020)
!24020 = distinct !DILexicalBlock(scope: !24014, file: !23924, line: 303, column: 5)
!24021 = !DILocation(line: 307, column: 7, scope: !24020)
!24022 = !DILocation(line: 309, column: 1, scope: !24014)
!24023 = distinct !DISubprogram(name: "c_isupper", scope: !23924, file: !23924, line: 312, type: !307, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!24024 = !DILocalVariable(name: "c", arg: 1, scope: !24023, file: !23924, line: 312, type: !7)
!24025 = !DILocation(line: 312, column: 16, scope: !24023)
!24026 = !DILocation(line: 314, column: 11, scope: !24023)
!24027 = !DILocation(line: 314, column: 3, scope: !24023)
!24028 = !DILocation(line: 317, column: 7, scope: !24029)
!24029 = distinct !DILexicalBlock(scope: !24023, file: !23924, line: 315, column: 5)
!24030 = !DILocation(line: 319, column: 7, scope: !24029)
!24031 = !DILocation(line: 321, column: 1, scope: !24023)
!24032 = distinct !DISubprogram(name: "c_isxdigit", scope: !23924, file: !23924, line: 324, type: !307, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!24033 = !DILocalVariable(name: "c", arg: 1, scope: !24032, file: !23924, line: 324, type: !7)
!24034 = !DILocation(line: 324, column: 17, scope: !24032)
!24035 = !DILocation(line: 326, column: 11, scope: !24032)
!24036 = !DILocation(line: 326, column: 3, scope: !24032)
!24037 = !DILocation(line: 330, column: 7, scope: !24038)
!24038 = distinct !DILexicalBlock(scope: !24032, file: !23924, line: 327, column: 5)
!24039 = !DILocation(line: 332, column: 7, scope: !24038)
!24040 = !DILocation(line: 334, column: 1, scope: !24032)
!24041 = distinct !DISubprogram(name: "c_tolower", scope: !23924, file: !23924, line: 337, type: !1830, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!24042 = !DILocalVariable(name: "c", arg: 1, scope: !24041, file: !23924, line: 337, type: !7)
!24043 = !DILocation(line: 337, column: 16, scope: !24041)
!24044 = !DILocation(line: 339, column: 11, scope: !24041)
!24045 = !DILocation(line: 339, column: 3, scope: !24041)
!24046 = !DILocation(line: 342, column: 14, scope: !24047)
!24047 = distinct !DILexicalBlock(scope: !24041, file: !23924, line: 340, column: 5)
!24048 = !DILocation(line: 342, column: 16, scope: !24047)
!24049 = !DILocation(line: 342, column: 22, scope: !24047)
!24050 = !DILocation(line: 342, column: 7, scope: !24047)
!24051 = !DILocation(line: 344, column: 14, scope: !24047)
!24052 = !DILocation(line: 344, column: 7, scope: !24047)
!24053 = !DILocation(line: 346, column: 1, scope: !24041)
!24054 = distinct !DISubprogram(name: "c_toupper", scope: !23924, file: !23924, line: 349, type: !1830, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2937, retainedNodes: !143)
!24055 = !DILocalVariable(name: "c", arg: 1, scope: !24054, file: !23924, line: 349, type: !7)
!24056 = !DILocation(line: 349, column: 16, scope: !24054)
!24057 = !DILocation(line: 351, column: 11, scope: !24054)
!24058 = !DILocation(line: 351, column: 3, scope: !24054)
!24059 = !DILocation(line: 354, column: 14, scope: !24060)
!24060 = distinct !DILexicalBlock(scope: !24054, file: !23924, line: 352, column: 5)
!24061 = !DILocation(line: 354, column: 16, scope: !24060)
!24062 = !DILocation(line: 354, column: 22, scope: !24060)
!24063 = !DILocation(line: 354, column: 7, scope: !24060)
!24064 = !DILocation(line: 356, column: 14, scope: !24060)
!24065 = !DILocation(line: 356, column: 7, scope: !24060)
!24066 = !DILocation(line: 358, column: 1, scope: !24054)
!24067 = distinct !DISubprogram(name: "fopen_safer", scope: !24068, file: !24068, line: 31, type: !2943, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2940, retainedNodes: !143)
!24068 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mbarbar/clone/coreutils")
!24069 = !DILocalVariable(name: "file", arg: 1, scope: !24067, file: !24068, line: 31, type: !115)
!24070 = !DILocation(line: 31, column: 26, scope: !24067)
!24071 = !DILocalVariable(name: "mode", arg: 2, scope: !24067, file: !24068, line: 31, type: !115)
!24072 = !DILocation(line: 31, column: 44, scope: !24067)
!24073 = !DILocalVariable(name: "fp", scope: !24067, file: !24068, line: 33, type: !2945)
!24074 = !DILocation(line: 33, column: 9, scope: !24067)
!24075 = !DILocation(line: 33, column: 21, scope: !24067)
!24076 = !DILocation(line: 33, column: 27, scope: !24067)
!24077 = !DILocation(line: 33, column: 14, scope: !24067)
!24078 = !DILocation(line: 35, column: 7, scope: !24079)
!24079 = distinct !DILexicalBlock(scope: !24067, file: !24068, line: 35, column: 7)
!24080 = !DILocation(line: 35, column: 7, scope: !24067)
!24081 = !DILocalVariable(name: "fd", scope: !24082, file: !24068, line: 37, type: !7)
!24082 = distinct !DILexicalBlock(scope: !24079, file: !24068, line: 36, column: 5)
!24083 = !DILocation(line: 37, column: 11, scope: !24082)
!24084 = !DILocation(line: 37, column: 24, scope: !24082)
!24085 = !DILocation(line: 37, column: 16, scope: !24082)
!24086 = !DILocation(line: 39, column: 16, scope: !24087)
!24087 = distinct !DILexicalBlock(scope: !24082, file: !24068, line: 39, column: 11)
!24088 = !DILocation(line: 39, column: 13, scope: !24087)
!24089 = !DILocation(line: 39, column: 19, scope: !24087)
!24090 = !DILocation(line: 39, column: 22, scope: !24087)
!24091 = !DILocation(line: 39, column: 25, scope: !24087)
!24092 = !DILocation(line: 39, column: 11, scope: !24082)
!24093 = !DILocalVariable(name: "f", scope: !24094, file: !24068, line: 41, type: !7)
!24094 = distinct !DILexicalBlock(scope: !24087, file: !24068, line: 40, column: 9)
!24095 = !DILocation(line: 41, column: 15, scope: !24094)
!24096 = !DILocation(line: 41, column: 30, scope: !24094)
!24097 = !DILocation(line: 41, column: 19, scope: !24094)
!24098 = !DILocation(line: 43, column: 15, scope: !24099)
!24099 = distinct !DILexicalBlock(scope: !24094, file: !24068, line: 43, column: 15)
!24100 = !DILocation(line: 43, column: 17, scope: !24099)
!24101 = !DILocation(line: 43, column: 15, scope: !24094)
!24102 = !DILocalVariable(name: "e", scope: !24103, file: !24068, line: 45, type: !7)
!24103 = distinct !DILexicalBlock(scope: !24099, file: !24068, line: 44, column: 13)
!24104 = !DILocation(line: 45, column: 19, scope: !24103)
!24105 = !DILocation(line: 45, column: 23, scope: !24103)
!24106 = !DILocation(line: 46, column: 23, scope: !24103)
!24107 = !DILocation(line: 46, column: 15, scope: !24103)
!24108 = !DILocation(line: 47, column: 23, scope: !24103)
!24109 = !DILocation(line: 47, column: 15, scope: !24103)
!24110 = !DILocation(line: 47, column: 21, scope: !24103)
!24111 = !DILocation(line: 48, column: 15, scope: !24103)
!24112 = !DILocation(line: 51, column: 23, scope: !24113)
!24113 = distinct !DILexicalBlock(scope: !24094, file: !24068, line: 51, column: 15)
!24114 = !DILocation(line: 51, column: 15, scope: !24113)
!24115 = !DILocation(line: 51, column: 27, scope: !24113)
!24116 = !DILocation(line: 52, column: 15, scope: !24113)
!24117 = !DILocation(line: 52, column: 34, scope: !24113)
!24118 = !DILocation(line: 52, column: 37, scope: !24113)
!24119 = !DILocation(line: 52, column: 26, scope: !24113)
!24120 = !DILocation(line: 52, column: 24, scope: !24113)
!24121 = !DILocation(line: 51, column: 15, scope: !24094)
!24122 = !DILocalVariable(name: "e", scope: !24123, file: !24068, line: 54, type: !7)
!24123 = distinct !DILexicalBlock(scope: !24113, file: !24068, line: 53, column: 13)
!24124 = !DILocation(line: 54, column: 19, scope: !24123)
!24125 = !DILocation(line: 54, column: 23, scope: !24123)
!24126 = !DILocation(line: 55, column: 22, scope: !24123)
!24127 = !DILocation(line: 55, column: 15, scope: !24123)
!24128 = !DILocation(line: 56, column: 23, scope: !24123)
!24129 = !DILocation(line: 56, column: 15, scope: !24123)
!24130 = !DILocation(line: 56, column: 21, scope: !24123)
!24131 = !DILocation(line: 57, column: 15, scope: !24123)
!24132 = !DILocation(line: 59, column: 9, scope: !24094)
!24133 = !DILocation(line: 60, column: 5, scope: !24082)
!24134 = !DILocation(line: 62, column: 10, scope: !24067)
!24135 = !DILocation(line: 62, column: 3, scope: !24067)
!24136 = !DILocation(line: 63, column: 1, scope: !24067)
